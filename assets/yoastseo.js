function Xn(a, e) {
  for (var t = 0; t < e.length; t++) {
    const i = e[t];
    if (typeof i != "string" && !Array.isArray(i)) {
      for (const n in i)
        if (n !== "default" && !(n in a)) {
          const r = Object.getOwnPropertyDescriptor(i, n);
          r && Object.defineProperty(a, n, r.get ? r : {
            enumerable: !0,
            get: () => i[n]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }));
}
var Ca = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function _y(a) {
  return a && a.__esModule && Object.prototype.hasOwnProperty.call(a, "default") ? a.default : a;
}
function ts(a) {
  if (a.__esModule) return a;
  var e = a.default;
  if (typeof e == "function") {
    var t = function i() {
      return this instanceof i ? Reflect.construct(e, arguments, this.constructor) : e.apply(this, arguments);
    };
    t.prototype = e.prototype;
  } else t = {};
  return Object.defineProperty(t, "__esModule", { value: !0 }), Object.keys(a).forEach(function(i) {
    var n = Object.getOwnPropertyDescriptor(a, i);
    Object.defineProperty(t, i, n.get ? n : {
      enumerable: !0,
      get: function() {
        return a[i];
      }
    });
  }), t;
}
var Un = {}, $y = {};
function XN(a) {
  if (Array.isArray(a)) return a;
}
function JN(a, e) {
  var t = a == null ? null : typeof Symbol < "u" && a[Symbol.iterator] || a["@@iterator"];
  if (t != null) {
    var i, n, r, s, o = [], d = !0, c = !1;
    try {
      if (r = (t = t.call(a)).next, e !== 0) for (; !(d = (i = r.call(t)).done) && (o.push(i.value), o.length !== e); d = !0) ;
    } catch (p) {
      c = !0, n = p;
    } finally {
      try {
        if (!d && t.return != null && (s = t.return(), Object(s) !== s)) return;
      } finally {
        if (c) throw n;
      }
    }
    return o;
  }
}
function O_(a, e) {
  (e == null || e > a.length) && (e = a.length);
  for (var t = 0, i = Array(e); t < e; t++) i[t] = a[t];
  return i;
}
function QN(a, e) {
  if (a) {
    if (typeof a == "string") return O_(a, e);
    var t = {}.toString.call(a).slice(8, -1);
    return t === "Object" && a.constructor && (t = a.constructor.name), t === "Map" || t === "Set" ? Array.from(a) : t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? O_(a, e) : void 0;
  }
}
function aU() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function eU(a, e) {
  return XN(a) || JN(a, e) || QN(a, e) || aU();
}
var tU = function() {
  var a = "!(?:-(?!->)[^\\-]*)*(?:-->)?", e = "!\\[CDATA\\[[^\\]]*(?:](?!]>)[^\\]]*)*?(?:]]>)?", t = "(?=!--|!\\[CDATA\\[)((?=!-)" + // If yes, which type?
  a + "|" + e + ")", i = "(<(" + // Conditional expression follows.
  t + // Find end of escaped element.
  "|[^>]*>?))";
  return new RegExp(i);
}();
function iU(a) {
  for (var e = [], t = a, i; i = t.match(tU); ) {
    var n = (
      /** @type {number} */
      i.index
    );
    e.push(t.slice(0, n)), e.push(i[0]), t = t.slice(n + i[0].length);
  }
  return t.length && e.push(t), e;
}
function nU(a, e) {
  for (var t = iU(a), i = !1, n = Object.keys(e), r = 1; r < t.length; r += 2)
    for (var s = 0; s < n.length; s++) {
      var o = n[s];
      if (t[r].indexOf(o) !== -1) {
        t[r] = t[r].replace(new RegExp(o, "g"), e[o]), i = !0;
        break;
      }
    }
  return i && (a = t.join("")), a;
}
function rU(a) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, t = [];
  if (a.trim() === "")
    return "";
  if (a = a + `
`, a.indexOf("<pre") !== -1) {
    var i = a.split("</pre>"), n = i.pop();
    a = "";
    for (var r = 0; r < i.length; r++) {
      var s = i[r], o = s.indexOf("<pre");
      if (o === -1) {
        a += s;
        continue;
      }
      var d = "<pre wp-pre-tag-" + r + "></pre>";
      t.push([d, s.substr(o) + "</pre>"]), a += s.substr(0, o) + d;
    }
    a += n;
  }
  a = a.replace(/<br\s*\/?>\s*<br\s*\/?>/g, `

`);
  var c = "(?:table|thead|tfoot|caption|col|colgroup|tbody|tr|td|th|div|dl|dd|dt|ul|ol|li|pre|form|map|area|blockquote|address|math|style|p|h[1-6]|hr|fieldset|legend|section|article|aside|hgroup|header|footer|nav|figure|figcaption|details|menu|summary)";
  a = a.replace(new RegExp("(<" + c + "[\\s/>])", "g"), `

$1`), a = a.replace(new RegExp("(</" + c + ">)", "g"), `$1

`), a = a.replace(/\r\n|\r/g, `
`), a = nU(a, {
    "\n": " <!-- wpnl --> "
  }), a.indexOf("<option") !== -1 && (a = a.replace(/\s*<option/g, "<option"), a = a.replace(/<\/option>\s*/g, "</option>")), a.indexOf("</object>") !== -1 && (a = a.replace(/(<object[^>]*>)\s*/g, "$1"), a = a.replace(/\s*<\/object>/g, "</object>"), a = a.replace(/\s*(<\/?(?:param|embed)[^>]*>)\s*/g, "$1")), (a.indexOf("<source") !== -1 || a.indexOf("<track") !== -1) && (a = a.replace(/([<\[](?:audio|video)[^>\]]*[>\]])\s*/g, "$1"), a = a.replace(/\s*([<\[]\/(?:audio|video)[>\]])/g, "$1"), a = a.replace(/\s*(<(?:source|track)[^>]*>)\s*/g, "$1")), a.indexOf("<figcaption") !== -1 && (a = a.replace(/\s*(<figcaption[^>]*>)/, "$1"), a = a.replace(/<\/figcaption>\s*/, "</figcaption>")), a = a.replace(/\n\n+/g, `

`);
  var p = a.split(/\n\s*\n/).filter(Boolean);
  return a = "", p.forEach(function(m) {
    a += "<p>" + m.replace(/^\n*|\n*$/g, "") + `</p>
`;
  }), a = a.replace(/<p>\s*<\/p>/g, ""), a = a.replace(/<p>([^<]+)<\/(div|address|form)>/g, "<p>$1</p></$2>"), a = a.replace(new RegExp("<p>\\s*(</?" + c + "[^>]*>)\\s*</p>", "g"), "$1"), a = a.replace(/<p>(<li.+?)<\/p>/g, "$1"), a = a.replace(/<p><blockquote([^>]*)>/gi, "<blockquote$1><p>"), a = a.replace(/<\/blockquote><\/p>/g, "</p></blockquote>"), a = a.replace(new RegExp("<p>\\s*(</?" + c + "[^>]*>)", "g"), "$1"), a = a.replace(new RegExp("(</?" + c + "[^>]*>)\\s*</p>", "g"), "$1"), e && (a = a.replace(/<(script|style).*?<\/\\1>/g, function(m) {
    return m[0].replace(/\n/g, "<WPPreserveNewline />");
  }), a = a.replace(/<br>|<br\/>/g, "<br />"), a = a.replace(/(<br \/>)?\s*\n/g, function(m, w) {
    return w ? m : `<br />
`;
  }), a = a.replace(/<WPPreserveNewline \/>/g, `
`)), a = a.replace(new RegExp("(</?" + c + "[^>]*>)\\s*<br />", "g"), "$1"), a = a.replace(/<br \/>(\s*<\/?(?:p|li|div|dl|dd|dt|th|pre|td|ul|ol)[^>]*>)/g, "$1"), a = a.replace(/\n<\/p>$/g, "</p>"), t.forEach(function(m) {
    var w = eU(m, 2), v = w[0], $ = w[1];
    a = a.replace(v, $);
  }), a.indexOf("<!-- wpnl -->") !== -1 && (a = a.replace(/\s?<!-- wpnl -->\s?/g, `
`)), a;
}
function sU(a) {
  var e = "blockquote|ul|ol|li|dl|dt|dd|table|thead|tbody|tfoot|tr|th|td|h[1-6]|fieldset|figure", t = e + "|div|p", i = e + "|pre", n = [], r = !1, s = !1;
  return a ? ((a.indexOf("<script") !== -1 || a.indexOf("<style") !== -1) && (a = a.replace(/<(script|style)[^>]*>[\s\S]*?<\/\1>/g, function(o) {
    return n.push(o), "<wp-preserve>";
  })), a.indexOf("<pre") !== -1 && (r = !0, a = a.replace(/<pre[^>]*>[\s\S]+?<\/pre>/g, function(o) {
    return o = o.replace(/<br ?\/?>(\r\n|\n)?/g, "<wp-line-break>"), o = o.replace(/<\/?p( [^>]*)?>(\r\n|\n)?/g, "<wp-line-break>"), o.replace(/\r?\n/g, "<wp-line-break>");
  })), a.indexOf("[caption") !== -1 && (s = !0, a = a.replace(/\[caption[\s\S]+?\[\/caption\]/g, function(o) {
    return o.replace(/<br([^>]*)>/g, "<wp-temp-br$1>").replace(/[\r\n\t]+/, "");
  })), a = a.replace(new RegExp("\\s*</(" + t + ")>\\s*", "g"), `</$1>
`), a = a.replace(new RegExp("\\s*<((?:" + t + ")(?: [^>]*)?)>", "g"), `
<$1>`), a = a.replace(/(<p [^>]+>[\s\S]*?)<\/p>/g, "$1</p#>"), a = a.replace(/<div( [^>]*)?>\s*<p>/gi, `<div$1>

`), a = a.replace(/\s*<p>/gi, ""), a = a.replace(/\s*<\/p>\s*/gi, `

`), a = a.replace(/\n[\s\u00a0]+\n/g, `

`), a = a.replace(/(\s*)<br ?\/?>\s*/gi, function(o, d) {
    return d && d.indexOf(`
`) !== -1 ? `

` : `
`;
  }), a = a.replace(/\s*<div/g, `
<div`), a = a.replace(/<\/div>\s*/g, `</div>
`), a = a.replace(/\s*\[caption([^\[]+)\[\/caption\]\s*/gi, `

[caption$1[/caption]

`), a = a.replace(/caption\]\n\n+\[caption/g, `caption]

[caption`), a = a.replace(new RegExp("\\s*<((?:" + i + ")(?: [^>]*)?)\\s*>", "g"), `
<$1>`), a = a.replace(new RegExp("\\s*</(" + i + ")>\\s*", "g"), `</$1>
`), a = a.replace(/<((li|dt|dd)[^>]*)>/g, " 	<$1>"), a.indexOf("<option") !== -1 && (a = a.replace(/\s*<option/g, `
<option`), a = a.replace(/\s*<\/select>/g, `
</select>`)), a.indexOf("<hr") !== -1 && (a = a.replace(/\s*<hr( [^>]*)?>\s*/g, `

<hr$1>

`)), a.indexOf("<object") !== -1 && (a = a.replace(/<object[\s\S]+?<\/object>/g, function(o) {
    return o.replace(/[\r\n]+/g, "");
  })), a = a.replace(/<\/p#>/g, `</p>
`), a = a.replace(/\s*(<p [^>]+>[\s\S]*?<\/p>)/g, `
$1`), a = a.replace(/^\s+/, ""), a = a.replace(/[\s\u00a0]+$/, ""), r && (a = a.replace(/<wp-line-break>/g, `
`)), s && (a = a.replace(/<wp-temp-br([^>]*)>/g, "<br$1>")), n.length && (a = a.replace(/<wp-preserve>/g, function() {
    return (
      /** @type {string} */
      n.shift()
    );
  })), a) : "";
}
const oU = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  autop: rU,
  removep: sU
}, Symbol.toStringTag, { value: "Module" })), dU = /* @__PURE__ */ ts(oU), lU = function(a) {
  return self.wpseoFeatureFlags ? self.wpseoFeatureFlags.includes(a) : !1;
}, cU = function(a) {
  self.wpseoFeatureFlags || (self.wpseoFeatureFlags = []), a.forEach((e) => {
    self.wpseoFeatureFlags.includes(e) || self.wpseoFeatureFlags.push(e);
  });
}, uU = function() {
  return self.wpseoFeatureFlags || [];
}, pU = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  enableFeatures: cU,
  enabledFeatures: uU,
  isFeatureEnabled: lU
}, Symbol.toStringTag, { value: "Module" })), mU = /* @__PURE__ */ ts(pU);
var zf = { exports: {} };
/**
 * @preserve jed.js https://github.com/SlexAxton/Jed
 */
(function(a, e) {
  (function(t, i) {
    var n = Array.prototype, r = Object.prototype, s = n.slice, o = r.hasOwnProperty, d = n.forEach, c = {}, p = {
      forEach: function(h, z, b) {
        var _, S, A;
        if (h !== null) {
          if (d && h.forEach === d)
            h.forEach(z, b);
          else if (h.length === +h.length) {
            for (_ = 0, S = h.length; _ < S; _++)
              if (_ in h && z.call(b, h[_], _, h) === c)
                return;
          } else
            for (A in h)
              if (o.call(h, A) && z.call(b, h[A], A, h) === c)
                return;
        }
      },
      extend: function(h) {
        return this.forEach(s.call(arguments, 1), function(z) {
          for (var b in z)
            h[b] = z[b];
        }), h;
      }
    }, m = function(h) {
      if (this.defaults = {
        locale_data: {
          messages: {
            "": {
              domain: "messages",
              lang: "en",
              plural_forms: "nplurals=2; plural=(n != 1);"
            }
            // There are no default keys, though
          }
        },
        // The default domain if one is missing
        domain: "messages",
        // enable debug mode to log untranslated strings to the console
        debug: !1
      }, this.options = p.extend({}, this.defaults, h), this.textdomain(this.options.domain), h.domain && !this.options.locale_data[this.options.domain])
        throw new Error("Text domain set to non-existent domain: `" + h.domain + "`");
    };
    m.context_delimiter = "";
    function w(h) {
      return m.PF.compile(h || "nplurals=2; plural=(n != 1);");
    }
    function v(h, z) {
      this._key = h, this._i18n = z;
    }
    p.extend(v.prototype, {
      onDomain: function(h) {
        return this._domain = h, this;
      },
      withContext: function(h) {
        return this._context = h, this;
      },
      ifPlural: function(h, z) {
        return this._val = h, this._pkey = z, this;
      },
      fetch: function(h) {
        return {}.toString.call(h) != "[object Array]" && (h = [].slice.call(arguments, 0)), (h && h.length ? m.sprintf : function(z) {
          return z;
        })(
          this._i18n.dcnpgettext(this._domain, this._context, this._key, this._pkey, this._val),
          h
        );
      }
    }), p.extend(m.prototype, {
      // The sexier api start point
      translate: function(h) {
        return new v(h, this);
      },
      textdomain: function(h) {
        if (!h)
          return this._textdomain;
        this._textdomain = h;
      },
      gettext: function(h) {
        return this.dcnpgettext.call(this, i, i, h);
      },
      dgettext: function(h, z) {
        return this.dcnpgettext.call(this, h, i, z);
      },
      dcgettext: function(h, z) {
        return this.dcnpgettext.call(this, h, i, z);
      },
      ngettext: function(h, z, b) {
        return this.dcnpgettext.call(this, i, i, h, z, b);
      },
      dngettext: function(h, z, b, _) {
        return this.dcnpgettext.call(this, h, i, z, b, _);
      },
      dcngettext: function(h, z, b, _) {
        return this.dcnpgettext.call(this, h, i, z, b, _);
      },
      pgettext: function(h, z) {
        return this.dcnpgettext.call(this, i, h, z);
      },
      dpgettext: function(h, z, b) {
        return this.dcnpgettext.call(this, h, z, b);
      },
      dcpgettext: function(h, z, b) {
        return this.dcnpgettext.call(this, h, z, b);
      },
      npgettext: function(h, z, b, _) {
        return this.dcnpgettext.call(this, i, h, z, b, _);
      },
      dnpgettext: function(h, z, b, _, S) {
        return this.dcnpgettext.call(this, h, z, b, _, S);
      },
      // The most fully qualified gettext function. It has every option.
      // Since it has every option, we can use it from every other method.
      // This is the bread and butter.
      // Technically there should be one more argument in this function for 'Category',
      // but since we never use it, we might as well not waste the bytes to define it.
      dcnpgettext: function(h, z, b, _, S) {
        _ = _ || b, h = h || this._textdomain;
        var A;
        if (!this.options)
          return A = new m(), A.dcnpgettext.call(A, void 0, void 0, b, _, S);
        if (!this.options.locale_data)
          throw new Error("No locale data provided.");
        if (!this.options.locale_data[h])
          throw new Error("Domain `" + h + "` was not found.");
        if (!this.options.locale_data[h][""])
          throw new Error("No locale meta information provided.");
        if (!b)
          throw new Error("No translation key found.");
        var L = z ? z + m.context_delimiter + b : b, R = this.options.locale_data, E = R[h], N = (R.messages || this.defaults.locale_data.messages)[""], D = E[""].plural_forms || E[""]["Plural-Forms"] || E[""]["plural-forms"] || N.plural_forms || N["Plural-Forms"] || N["plural-forms"], H, j, ea;
        if (S === void 0)
          ea = 0;
        else {
          if (typeof S != "number" && (S = parseInt(S, 10), isNaN(S)))
            throw new Error("The number that was passed in is not a number.");
          ea = w(D)(S);
        }
        if (!E)
          throw new Error("No domain named `" + h + "` could be found.");
        return H = E[L], !H || ea > H.length ? (this.options.missing_key_callback && this.options.missing_key_callback(L, h), j = [b, _], this.options.debug === !0 && console.log(j[w(D)(S)]), j[w()(S)]) : (j = H[ea], j || (j = [b, _], j[w()(S)]));
      }
    });
    var $ = function() {
      function h(_) {
        return Object.prototype.toString.call(_).slice(8, -1).toLowerCase();
      }
      function z(_, S) {
        for (var A = []; S > 0; A[--S] = _)
          ;
        return A.join("");
      }
      var b = function() {
        return b.cache.hasOwnProperty(arguments[0]) || (b.cache[arguments[0]] = b.parse(arguments[0])), b.format.call(null, b.cache[arguments[0]], arguments);
      };
      return b.format = function(_, S) {
        var A = 1, L = _.length, R = "", E, N = [], D, H, j, ea, ra, J;
        for (D = 0; D < L; D++)
          if (R = h(_[D]), R === "string")
            N.push(_[D]);
          else if (R === "array") {
            if (j = _[D], j[2])
              for (E = S[A], H = 0; H < j[2].length; H++) {
                if (!E.hasOwnProperty(j[2][H]))
                  throw $('[sprintf] property "%s" does not exist', j[2][H]);
                E = E[j[2][H]];
              }
            else j[1] ? E = S[j[1]] : E = S[A++];
            if (/[^s]/.test(j[8]) && h(E) != "number")
              throw $("[sprintf] expecting number but found %s", h(E));
            switch ((typeof E > "u" || E === null) && (E = ""), j[8]) {
              case "b":
                E = E.toString(2);
                break;
              case "c":
                E = String.fromCharCode(E);
                break;
              case "d":
                E = parseInt(E, 10);
                break;
              case "e":
                E = j[7] ? E.toExponential(j[7]) : E.toExponential();
                break;
              case "f":
                E = j[7] ? parseFloat(E).toFixed(j[7]) : parseFloat(E);
                break;
              case "o":
                E = E.toString(8);
                break;
              case "s":
                E = (E = String(E)) && j[7] ? E.substring(0, j[7]) : E;
                break;
              case "u":
                E = Math.abs(E);
                break;
              case "x":
                E = E.toString(16);
                break;
              case "X":
                E = E.toString(16).toUpperCase();
                break;
            }
            E = /[def]/.test(j[8]) && j[3] && E >= 0 ? "+" + E : E, ra = j[4] ? j[4] == "0" ? "0" : j[4].charAt(1) : " ", J = j[6] - String(E).length, ea = j[6] ? z(ra, J) : "", N.push(j[5] ? E + ea : ea + E);
          }
        return N.join("");
      }, b.cache = {}, b.parse = function(_) {
        for (var S = _, A = [], L = [], R = 0; S; ) {
          if ((A = /^[^\x25]+/.exec(S)) !== null)
            L.push(A[0]);
          else if ((A = /^\x25{2}/.exec(S)) !== null)
            L.push("%");
          else if ((A = /^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-fosuxX])/.exec(S)) !== null) {
            if (A[2]) {
              R |= 1;
              var E = [], N = A[2], D = [];
              if ((D = /^([a-z_][a-z_\d]*)/i.exec(N)) !== null)
                for (E.push(D[1]); (N = N.substring(D[0].length)) !== ""; )
                  if ((D = /^\.([a-z_][a-z_\d]*)/i.exec(N)) !== null)
                    E.push(D[1]);
                  else if ((D = /^\[(\d+)\]/.exec(N)) !== null)
                    E.push(D[1]);
                  else
                    throw "[sprintf] huh?";
              else
                throw "[sprintf] huh?";
              A[2] = E;
            } else
              R |= 2;
            if (R === 3)
              throw "[sprintf] mixing positional and named placeholders is not (yet) supported";
            L.push(A);
          } else
            throw "[sprintf] huh?";
          S = S.substring(A[0].length);
        }
        return L;
      }, b;
    }(), P = function(h, z) {
      return z.unshift(h), $.apply(null, z);
    };
    m.parse_plural = function(h, z) {
      return h = h.replace(/n/g, z), m.parse_expression(h);
    }, m.sprintf = function(h, z) {
      return {}.toString.call(z) == "[object Array]" ? P(h, [].slice.call(z)) : $.apply(this, [].slice.call(arguments));
    }, m.prototype.sprintf = function() {
      return m.sprintf.apply(this, arguments);
    }, m.PF = {}, m.PF.parse = function(h) {
      var z = m.PF.extractPluralExpr(h);
      return m.PF.parser.parse.call(m.PF.parser, z);
    }, m.PF.compile = function(h) {
      function z(_) {
        return _ === !0 ? 1 : _ || 0;
      }
      var b = m.PF.parse(h);
      return function(_) {
        return z(m.PF.interpreter(b)(_));
      };
    }, m.PF.interpreter = function(h) {
      return function(z) {
        switch (h.type) {
          case "GROUP":
            return m.PF.interpreter(h.expr)(z);
          case "TERNARY":
            return m.PF.interpreter(h.expr)(z) ? m.PF.interpreter(h.truthy)(z) : m.PF.interpreter(h.falsey)(z);
          case "OR":
            return m.PF.interpreter(h.left)(z) || m.PF.interpreter(h.right)(z);
          case "AND":
            return m.PF.interpreter(h.left)(z) && m.PF.interpreter(h.right)(z);
          case "LT":
            return m.PF.interpreter(h.left)(z) < m.PF.interpreter(h.right)(z);
          case "GT":
            return m.PF.interpreter(h.left)(z) > m.PF.interpreter(h.right)(z);
          case "LTE":
            return m.PF.interpreter(h.left)(z) <= m.PF.interpreter(h.right)(z);
          case "GTE":
            return m.PF.interpreter(h.left)(z) >= m.PF.interpreter(h.right)(z);
          case "EQ":
            return m.PF.interpreter(h.left)(z) == m.PF.interpreter(h.right)(z);
          case "NEQ":
            return m.PF.interpreter(h.left)(z) != m.PF.interpreter(h.right)(z);
          case "MOD":
            return m.PF.interpreter(h.left)(z) % m.PF.interpreter(h.right)(z);
          case "VAR":
            return z;
          case "NUM":
            return h.val;
          default:
            throw new Error("Invalid Token found.");
        }
      };
    }, m.PF.extractPluralExpr = function(h) {
      h = h.replace(/^\s\s*/, "").replace(/\s\s*$/, ""), /;\s*$/.test(h) || (h = h.concat(";"));
      var z = /nplurals\=(\d+);/, b = /plural\=(.*);/, _ = h.match(z), S;
      if (_.length > 1)
        _[1];
      else
        throw new Error("nplurals not found in plural_forms string: " + h);
      if (h = h.replace(z, ""), S = h.match(b), !(S && S.length > 1))
        throw new Error("`plural` expression not found: " + h);
      return S[1];
    }, m.PF.parser = function() {
      var h = {
        trace: function() {
        },
        yy: {},
        symbols_: { error: 2, expressions: 3, e: 4, EOF: 5, "?": 6, ":": 7, "||": 8, "&&": 9, "<": 10, "<=": 11, ">": 12, ">=": 13, "!=": 14, "==": 15, "%": 16, "(": 17, ")": 18, n: 19, NUMBER: 20, $accept: 0, $end: 1 },
        terminals_: { 2: "error", 5: "EOF", 6: "?", 7: ":", 8: "||", 9: "&&", 10: "<", 11: "<=", 12: ">", 13: ">=", 14: "!=", 15: "==", 16: "%", 17: "(", 18: ")", 19: "n", 20: "NUMBER" },
        productions_: [0, [3, 2], [4, 5], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 1], [4, 1]],
        performAction: function(_, S, A, L, R, E, N) {
          var D = E.length - 1;
          switch (R) {
            case 1:
              return { type: "GROUP", expr: E[D - 1] };
            case 2:
              this.$ = { type: "TERNARY", expr: E[D - 4], truthy: E[D - 2], falsey: E[D] };
              break;
            case 3:
              this.$ = { type: "OR", left: E[D - 2], right: E[D] };
              break;
            case 4:
              this.$ = { type: "AND", left: E[D - 2], right: E[D] };
              break;
            case 5:
              this.$ = { type: "LT", left: E[D - 2], right: E[D] };
              break;
            case 6:
              this.$ = { type: "LTE", left: E[D - 2], right: E[D] };
              break;
            case 7:
              this.$ = { type: "GT", left: E[D - 2], right: E[D] };
              break;
            case 8:
              this.$ = { type: "GTE", left: E[D - 2], right: E[D] };
              break;
            case 9:
              this.$ = { type: "NEQ", left: E[D - 2], right: E[D] };
              break;
            case 10:
              this.$ = { type: "EQ", left: E[D - 2], right: E[D] };
              break;
            case 11:
              this.$ = { type: "MOD", left: E[D - 2], right: E[D] };
              break;
            case 12:
              this.$ = { type: "GROUP", expr: E[D - 1] };
              break;
            case 13:
              this.$ = { type: "VAR" };
              break;
            case 14:
              this.$ = { type: "NUM", val: Number(_) };
              break;
          }
        },
        table: [{ 3: 1, 4: 2, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 1: [3] }, { 5: [1, 6], 6: [1, 7], 8: [1, 8], 9: [1, 9], 10: [1, 10], 11: [1, 11], 12: [1, 12], 13: [1, 13], 14: [1, 14], 15: [1, 15], 16: [1, 16] }, { 4: 17, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 5: [2, 13], 6: [2, 13], 7: [2, 13], 8: [2, 13], 9: [2, 13], 10: [2, 13], 11: [2, 13], 12: [2, 13], 13: [2, 13], 14: [2, 13], 15: [2, 13], 16: [2, 13], 18: [2, 13] }, { 5: [2, 14], 6: [2, 14], 7: [2, 14], 8: [2, 14], 9: [2, 14], 10: [2, 14], 11: [2, 14], 12: [2, 14], 13: [2, 14], 14: [2, 14], 15: [2, 14], 16: [2, 14], 18: [2, 14] }, { 1: [2, 1] }, { 4: 18, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 4: 19, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 4: 20, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 4: 21, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 4: 22, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 4: 23, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 4: 24, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 4: 25, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 4: 26, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 4: 27, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 6: [1, 7], 8: [1, 8], 9: [1, 9], 10: [1, 10], 11: [1, 11], 12: [1, 12], 13: [1, 13], 14: [1, 14], 15: [1, 15], 16: [1, 16], 18: [1, 28] }, { 6: [1, 7], 7: [1, 29], 8: [1, 8], 9: [1, 9], 10: [1, 10], 11: [1, 11], 12: [1, 12], 13: [1, 13], 14: [1, 14], 15: [1, 15], 16: [1, 16] }, { 5: [2, 3], 6: [2, 3], 7: [2, 3], 8: [2, 3], 9: [1, 9], 10: [1, 10], 11: [1, 11], 12: [1, 12], 13: [1, 13], 14: [1, 14], 15: [1, 15], 16: [1, 16], 18: [2, 3] }, { 5: [2, 4], 6: [2, 4], 7: [2, 4], 8: [2, 4], 9: [2, 4], 10: [1, 10], 11: [1, 11], 12: [1, 12], 13: [1, 13], 14: [1, 14], 15: [1, 15], 16: [1, 16], 18: [2, 4] }, { 5: [2, 5], 6: [2, 5], 7: [2, 5], 8: [2, 5], 9: [2, 5], 10: [2, 5], 11: [2, 5], 12: [2, 5], 13: [2, 5], 14: [2, 5], 15: [2, 5], 16: [1, 16], 18: [2, 5] }, { 5: [2, 6], 6: [2, 6], 7: [2, 6], 8: [2, 6], 9: [2, 6], 10: [2, 6], 11: [2, 6], 12: [2, 6], 13: [2, 6], 14: [2, 6], 15: [2, 6], 16: [1, 16], 18: [2, 6] }, { 5: [2, 7], 6: [2, 7], 7: [2, 7], 8: [2, 7], 9: [2, 7], 10: [2, 7], 11: [2, 7], 12: [2, 7], 13: [2, 7], 14: [2, 7], 15: [2, 7], 16: [1, 16], 18: [2, 7] }, { 5: [2, 8], 6: [2, 8], 7: [2, 8], 8: [2, 8], 9: [2, 8], 10: [2, 8], 11: [2, 8], 12: [2, 8], 13: [2, 8], 14: [2, 8], 15: [2, 8], 16: [1, 16], 18: [2, 8] }, { 5: [2, 9], 6: [2, 9], 7: [2, 9], 8: [2, 9], 9: [2, 9], 10: [2, 9], 11: [2, 9], 12: [2, 9], 13: [2, 9], 14: [2, 9], 15: [2, 9], 16: [1, 16], 18: [2, 9] }, { 5: [2, 10], 6: [2, 10], 7: [2, 10], 8: [2, 10], 9: [2, 10], 10: [2, 10], 11: [2, 10], 12: [2, 10], 13: [2, 10], 14: [2, 10], 15: [2, 10], 16: [1, 16], 18: [2, 10] }, { 5: [2, 11], 6: [2, 11], 7: [2, 11], 8: [2, 11], 9: [2, 11], 10: [2, 11], 11: [2, 11], 12: [2, 11], 13: [2, 11], 14: [2, 11], 15: [2, 11], 16: [2, 11], 18: [2, 11] }, { 5: [2, 12], 6: [2, 12], 7: [2, 12], 8: [2, 12], 9: [2, 12], 10: [2, 12], 11: [2, 12], 12: [2, 12], 13: [2, 12], 14: [2, 12], 15: [2, 12], 16: [2, 12], 18: [2, 12] }, { 4: 30, 17: [1, 3], 19: [1, 4], 20: [1, 5] }, { 5: [2, 2], 6: [1, 7], 7: [2, 2], 8: [1, 8], 9: [1, 9], 10: [1, 10], 11: [1, 11], 12: [1, 12], 13: [1, 13], 14: [1, 14], 15: [1, 15], 16: [1, 16], 18: [2, 2] }],
        defaultActions: { 6: [2, 1] },
        parseError: function(_, S) {
          throw new Error(_);
        },
        parse: function(_) {
          var S = this, A = [0], L = [null], R = [], E = this.table, N = "", D = 0, H = 0, j = 0, ea = 2, ra = 1;
          this.lexer.setInput(_), this.lexer.yy = this.yy, this.yy.lexer = this.lexer, typeof this.lexer.yylloc > "u" && (this.lexer.yylloc = {});
          var J = this.lexer.yylloc;
          R.push(J), typeof this.yy.parseError == "function" && (this.parseError = this.yy.parseError);
          function $a(Q) {
            A.length = A.length - 2 * Q, L.length = L.length - Q, R.length = R.length - Q;
          }
          function ne() {
            var Q;
            return Q = S.lexer.lex() || 1, typeof Q != "number" && (Q = S.symbols_[Q] || Q), Q;
          }
          for (var fa, Ea, O, V, x, T = {}, M, U, G, Y; ; ) {
            if (O = A[A.length - 1], this.defaultActions[O] ? V = this.defaultActions[O] : (fa == null && (fa = ne()), V = E[O] && E[O][fa]), typeof V > "u" || !V.length || !V[0]) {
              if (!j) {
                Y = [];
                for (M in E[O]) this.terminals_[M] && M > 2 && Y.push("'" + this.terminals_[M] + "'");
                var K = "";
                this.lexer.showPosition ? K = "Parse error on line " + (D + 1) + `:
` + this.lexer.showPosition() + `
Expecting ` + Y.join(", ") + ", got '" + this.terminals_[fa] + "'" : K = "Parse error on line " + (D + 1) + ": Unexpected " + (fa == 1 ? "end of input" : "'" + (this.terminals_[fa] || fa) + "'"), this.parseError(
                  K,
                  { text: this.lexer.match, token: this.terminals_[fa] || fa, line: this.lexer.yylineno, loc: J, expected: Y }
                );
              }
              if (j == 3) {
                if (fa == ra)
                  throw new Error(K || "Parsing halted.");
                H = this.lexer.yyleng, N = this.lexer.yytext, D = this.lexer.yylineno, J = this.lexer.yylloc, fa = ne();
              }
              for (; !(ea.toString() in E[O]); ) {
                if (O == 0)
                  throw new Error(K || "Parsing halted.");
                $a(1), O = A[A.length - 1];
              }
              Ea = fa, fa = ea, O = A[A.length - 1], V = E[O] && E[O][ea], j = 3;
            }
            if (V[0] instanceof Array && V.length > 1)
              throw new Error("Parse Error: multiple actions possible at state: " + O + ", token: " + fa);
            switch (V[0]) {
              case 1:
                A.push(fa), L.push(this.lexer.yytext), R.push(this.lexer.yylloc), A.push(V[1]), fa = null, Ea ? (fa = Ea, Ea = null) : (H = this.lexer.yyleng, N = this.lexer.yytext, D = this.lexer.yylineno, J = this.lexer.yylloc, j > 0 && j--);
                break;
              case 2:
                if (U = this.productions_[V[1]][1], T.$ = L[L.length - U], T._$ = {
                  first_line: R[R.length - (U || 1)].first_line,
                  last_line: R[R.length - 1].last_line,
                  first_column: R[R.length - (U || 1)].first_column,
                  last_column: R[R.length - 1].last_column
                }, x = this.performAction.call(T, N, H, D, this.yy, V[1], L, R), typeof x < "u")
                  return x;
                U && (A = A.slice(0, -1 * U * 2), L = L.slice(0, -1 * U), R = R.slice(0, -1 * U)), A.push(this.productions_[V[1]][0]), L.push(T.$), R.push(T._$), G = E[A[A.length - 2]][A[A.length - 1]], A.push(G);
                break;
              case 3:
                return !0;
            }
          }
          return !0;
        }
      }, z = function() {
        var b = {
          EOF: 1,
          parseError: function(S, A) {
            if (this.yy.parseError)
              this.yy.parseError(S, A);
            else
              throw new Error(S);
          },
          setInput: function(_) {
            return this._input = _, this._more = this._less = this.done = !1, this.yylineno = this.yyleng = 0, this.yytext = this.matched = this.match = "", this.conditionStack = ["INITIAL"], this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 }, this;
          },
          input: function() {
            var _ = this._input[0];
            this.yytext += _, this.yyleng++, this.match += _, this.matched += _;
            var S = _.match(/\n/);
            return S && this.yylineno++, this._input = this._input.slice(1), _;
          },
          unput: function(_) {
            return this._input = _ + this._input, this;
          },
          more: function() {
            return this._more = !0, this;
          },
          pastInput: function() {
            var _ = this.matched.substr(0, this.matched.length - this.match.length);
            return (_.length > 20 ? "..." : "") + _.substr(-20).replace(/\n/g, "");
          },
          upcomingInput: function() {
            var _ = this.match;
            return _.length < 20 && (_ += this._input.substr(0, 20 - _.length)), (_.substr(0, 20) + (_.length > 20 ? "..." : "")).replace(/\n/g, "");
          },
          showPosition: function() {
            var _ = this.pastInput(), S = new Array(_.length + 1).join("-");
            return _ + this.upcomingInput() + `
` + S + "^";
          },
          next: function() {
            if (this.done)
              return this.EOF;
            this._input || (this.done = !0);
            var _, S, A;
            this._more || (this.yytext = "", this.match = "");
            for (var L = this._currentRules(), R = 0; R < L.length; R++)
              if (S = this._input.match(this.rules[L[R]]), S)
                return A = S[0].match(/\n.*/g), A && (this.yylineno += A.length), this.yylloc = {
                  first_line: this.yylloc.last_line,
                  last_line: this.yylineno + 1,
                  first_column: this.yylloc.last_column,
                  last_column: A ? A[A.length - 1].length - 1 : this.yylloc.last_column + S[0].length
                }, this.yytext += S[0], this.match += S[0], this.matches = S, this.yyleng = this.yytext.length, this._more = !1, this._input = this._input.slice(S[0].length), this.matched += S[0], _ = this.performAction.call(this, this.yy, this, L[R], this.conditionStack[this.conditionStack.length - 1]), _ || void 0;
            if (this._input === "")
              return this.EOF;
            this.parseError(
              "Lexical error on line " + (this.yylineno + 1) + `. Unrecognized text.
` + this.showPosition(),
              { text: "", token: null, line: this.yylineno }
            );
          },
          lex: function() {
            var S = this.next();
            return typeof S < "u" ? S : this.lex();
          },
          begin: function(S) {
            this.conditionStack.push(S);
          },
          popState: function() {
            return this.conditionStack.pop();
          },
          _currentRules: function() {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
          },
          topState: function() {
            return this.conditionStack[this.conditionStack.length - 2];
          },
          pushState: function(S) {
            this.begin(S);
          }
        };
        return b.performAction = function(S, A, L, R) {
          switch (L) {
            case 0:
              break;
            case 1:
              return 20;
            case 2:
              return 19;
            case 3:
              return 8;
            case 4:
              return 9;
            case 5:
              return 6;
            case 6:
              return 7;
            case 7:
              return 11;
            case 8:
              return 13;
            case 9:
              return 10;
            case 10:
              return 12;
            case 11:
              return 14;
            case 12:
              return 15;
            case 13:
              return 16;
            case 14:
              return 17;
            case 15:
              return 18;
            case 16:
              return 5;
            case 17:
              return "INVALID";
          }
        }, b.rules = [/^\s+/, /^[0-9]+(\.[0-9]+)?\b/, /^n\b/, /^\|\|/, /^&&/, /^\?/, /^:/, /^<=/, /^>=/, /^</, /^>/, /^!=/, /^==/, /^%/, /^\(/, /^\)/, /^$/, /^./], b.conditions = { INITIAL: { rules: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], inclusive: !0 } }, b;
      }();
      return h.lexer = z, h;
    }(), a.exports && (e = a.exports = m), e.Jed = m;
  })();
})(zf, zf.exports);
var lR = zf.exports;
const Yd = globalThis || void 0 || self;
var cR = typeof Yd == "object" && Yd && Yd.Object === Object && Yd, gU = typeof self == "object" && self && self.Object === Object && self, he = cR || gU || Function("return this")(), Oe = he.Symbol, uR = Object.prototype, zU = uR.hasOwnProperty, fU = uR.toString, Us = Oe ? Oe.toStringTag : void 0;
function yU(a) {
  var e = zU.call(a, Us), t = a[Us];
  try {
    a[Us] = void 0;
    var i = !0;
  } catch {
  }
  var n = fU.call(a);
  return i && (e ? a[Us] = t : delete a[Us]), n;
}
var wU = Object.prototype, hU = wU.toString;
function bU(a) {
  return hU.call(a);
}
var vU = "[object Null]", kU = "[object Undefined]", M_ = Oe ? Oe.toStringTag : void 0;
function Ne(a) {
  return a == null ? a === void 0 ? kU : vU : M_ && M_ in Object(a) ? yU(a) : bU(a);
}
function Za(a) {
  return a != null && typeof a == "object";
}
var _U = "[object Symbol]";
function Je(a) {
  return typeof a == "symbol" || Za(a) && Ne(a) == _U;
}
var $U = NaN;
function C_(a) {
  return typeof a == "number" ? a : Je(a) ? $U : +a;
}
function Ka(a, e) {
  for (var t = -1, i = a == null ? 0 : a.length, n = Array(i); ++t < i; )
    n[t] = e(a[t], t, a);
  return n;
}
var oa = Array.isArray, jU = 1 / 0, L_ = Oe ? Oe.prototype : void 0, I_ = L_ ? L_.toString : void 0;
function st(a) {
  if (typeof a == "string")
    return a;
  if (oa(a))
    return Ka(a, st) + "";
  if (Je(a))
    return I_ ? I_.call(a) : "";
  var e = a + "";
  return e == "0" && 1 / a == -jU ? "-0" : e;
}
function uc(a, e) {
  return function(t, i) {
    var n;
    if (t === void 0 && i === void 0)
      return e;
    if (t !== void 0 && (n = t), i !== void 0) {
      if (n === void 0)
        return i;
      typeof t == "string" || typeof i == "string" ? (t = st(t), i = st(i)) : (t = C_(t), i = C_(i)), n = a(t, i);
    }
    return n;
  };
}
var pR = uc(function(a, e) {
  return a + e;
}, 0), xU = /\s/;
function mR(a) {
  for (var e = a.length; e-- && xU.test(a.charAt(e)); )
    ;
  return e;
}
var AU = /^\s+/;
function gR(a) {
  return a && a.slice(0, mR(a) + 1).replace(AU, "");
}
function Ba(a) {
  var e = typeof a;
  return a != null && (e == "object" || e == "function");
}
var W_ = NaN, EU = /^[-+]0x[0-9a-f]+$/i, SU = /^0b[01]+$/i, qU = /^0o[0-7]+$/i, PU = parseInt;
function rt(a) {
  if (typeof a == "number")
    return a;
  if (Je(a))
    return W_;
  if (Ba(a)) {
    var e = typeof a.valueOf == "function" ? a.valueOf() : a;
    a = Ba(e) ? e + "" : e;
  }
  if (typeof a != "string")
    return a === 0 ? a : +a;
  a = gR(a);
  var t = SU.test(a);
  return t || qU.test(a) ? PU(a.slice(2), t ? 2 : 8) : EU.test(a) ? W_ : +a;
}
var F_ = 1 / 0, TU = 17976931348623157e292;
function Jt(a) {
  if (!a)
    return a === 0 ? a : 0;
  if (a = rt(a), a === F_ || a === -F_) {
    var e = a < 0 ? -1 : 1;
    return e * TU;
  }
  return a === a ? a : 0;
}
function la(a) {
  var e = Jt(a), t = e % 1;
  return e === e ? t ? e - t : e : 0;
}
var RU = "Expected a function";
function zR(a, e) {
  if (typeof e != "function")
    throw new TypeError(RU);
  return a = la(a), function() {
    if (--a < 1)
      return e.apply(this, arguments);
  };
}
function Ce(a) {
  return a;
}
var OU = "[object AsyncFunction]", MU = "[object Function]", CU = "[object GeneratorFunction]", LU = "[object Proxy]";
function Qt(a) {
  if (!Ba(a))
    return !1;
  var e = Ne(a);
  return e == MU || e == CU || e == OU || e == LU;
}
var ml = he["__core-js_shared__"], D_ = function() {
  var a = /[^.]+$/.exec(ml && ml.keys && ml.keys.IE_PROTO || "");
  return a ? "Symbol(src)_1." + a : "";
}();
function IU(a) {
  return !!D_ && D_ in a;
}
var WU = Function.prototype, FU = WU.toString;
function Jn(a) {
  if (a != null) {
    try {
      return FU.call(a);
    } catch {
    }
    try {
      return a + "";
    } catch {
    }
  }
  return "";
}
var DU = /[\\^$.*+?()[\]{}|]/g, BU = /^\[object .+?Constructor\]$/, NU = Function.prototype, UU = Object.prototype, HU = NU.toString, VU = UU.hasOwnProperty, KU = RegExp(
  "^" + HU.call(VU).replace(DU, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function fR(a) {
  if (!Ba(a) || IU(a))
    return !1;
  var e = Qt(a) ? KU : BU;
  return e.test(Jn(a));
}
function GU(a, e) {
  return a == null ? void 0 : a[e];
}
function Qn(a, e) {
  var t = GU(a, e);
  return fR(t) ? t : void 0;
}
var po = Qn(he, "WeakMap"), Tl = po && new po(), yR = Tl ? function(a, e) {
  return Tl.set(a, e), a;
} : Ce, B_ = Object.create, is = /* @__PURE__ */ function() {
  function a() {
  }
  return function(e) {
    if (!Ba(e))
      return {};
    if (B_)
      return B_(e);
    a.prototype = e;
    var t = new a();
    return a.prototype = void 0, t;
  };
}();
function mo(a) {
  return function() {
    var e = arguments;
    switch (e.length) {
      case 0:
        return new a();
      case 1:
        return new a(e[0]);
      case 2:
        return new a(e[0], e[1]);
      case 3:
        return new a(e[0], e[1], e[2]);
      case 4:
        return new a(e[0], e[1], e[2], e[3]);
      case 5:
        return new a(e[0], e[1], e[2], e[3], e[4]);
      case 6:
        return new a(e[0], e[1], e[2], e[3], e[4], e[5]);
      case 7:
        return new a(e[0], e[1], e[2], e[3], e[4], e[5], e[6]);
    }
    var t = is(a.prototype), i = a.apply(t, e);
    return Ba(i) ? i : t;
  };
}
var YU = 1;
function ZU(a, e, t) {
  var i = e & YU, n = mo(a);
  function r() {
    var s = this && this !== he && this instanceof r ? n : a;
    return s.apply(i ? t : this, arguments);
  }
  return r;
}
function ot(a, e, t) {
  switch (t.length) {
    case 0:
      return a.call(e);
    case 1:
      return a.call(e, t[0]);
    case 2:
      return a.call(e, t[0], t[1]);
    case 3:
      return a.call(e, t[0], t[1], t[2]);
  }
  return a.apply(e, t);
}
var XU = Math.max;
function wR(a, e, t, i) {
  for (var n = -1, r = a.length, s = t.length, o = -1, d = e.length, c = XU(r - s, 0), p = Array(d + c), m = !i; ++o < d; )
    p[o] = e[o];
  for (; ++n < s; )
    (m || n < r) && (p[t[n]] = a[n]);
  for (; c--; )
    p[o++] = a[n++];
  return p;
}
var JU = Math.max;
function hR(a, e, t, i) {
  for (var n = -1, r = a.length, s = -1, o = t.length, d = -1, c = e.length, p = JU(r - o, 0), m = Array(p + c), w = !i; ++n < p; )
    m[n] = a[n];
  for (var v = n; ++d < c; )
    m[v + d] = e[d];
  for (; ++s < o; )
    (w || n < r) && (m[v + t[s]] = a[n++]);
  return m;
}
function QU(a, e) {
  for (var t = a.length, i = 0; t--; )
    a[t] === e && ++i;
  return i;
}
function pc() {
}
var a6 = 4294967295;
function ha(a) {
  this.__wrapped__ = a, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = a6, this.__views__ = [];
}
ha.prototype = is(pc.prototype);
ha.prototype.constructor = ha;
function mc() {
}
var jy = Tl ? function(a) {
  return Tl.get(a);
} : mc, Ir = {}, e6 = Object.prototype, t6 = e6.hasOwnProperty;
function gl(a) {
  for (var e = a.name + "", t = Ir[e], i = t6.call(Ir, e) ? t.length : 0; i--; ) {
    var n = t[i], r = n.func;
    if (r == null || r == a)
      return n.name;
  }
  return e;
}
function wt(a, e) {
  this.__wrapped__ = a, this.__actions__ = [], this.__chain__ = !!e, this.__index__ = 0, this.__values__ = void 0;
}
wt.prototype = is(pc.prototype);
wt.prototype.constructor = wt;
function Ze(a, e) {
  var t = -1, i = a.length;
  for (e || (e = Array(i)); ++t < i; )
    e[t] = a[t];
  return e;
}
function bR(a) {
  if (a instanceof ha)
    return a.clone();
  var e = new wt(a.__wrapped__, a.__chain__);
  return e.__actions__ = Ze(a.__actions__), e.__index__ = a.__index__, e.__values__ = a.__values__, e;
}
var i6 = Object.prototype, n6 = i6.hasOwnProperty;
function y(a) {
  if (Za(a) && !oa(a) && !(a instanceof ha)) {
    if (a instanceof wt)
      return a;
    if (n6.call(a, "__wrapped__"))
      return bR(a);
  }
  return new wt(a);
}
y.prototype = pc.prototype;
y.prototype.constructor = y;
function ff(a) {
  var e = gl(a), t = y[e];
  if (typeof t != "function" || !(e in ha.prototype))
    return !1;
  if (a === t)
    return !0;
  var i = jy(t);
  return !!i && a === i[0];
}
var r6 = 800, s6 = 16, o6 = Date.now;
function vR(a) {
  var e = 0, t = 0;
  return function() {
    var i = o6(), n = s6 - (i - t);
    if (t = i, n > 0) {
      if (++e >= r6)
        return arguments[0];
    } else
      e = 0;
    return a.apply(void 0, arguments);
  };
}
var kR = vR(yR), d6 = /\{\n\/\* \[wrapped with (.+)\] \*/, l6 = /,? & /;
function c6(a) {
  var e = a.match(d6);
  return e ? e[1].split(l6) : [];
}
var u6 = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;
function p6(a, e) {
  var t = e.length;
  if (!t)
    return a;
  var i = t - 1;
  return e[i] = (t > 1 ? "& " : "") + e[i], e = e.join(t > 2 ? ", " : " "), a.replace(u6, `{
/* [wrapped with ` + e + `] */
`);
}
function gc(a) {
  return function() {
    return a;
  };
}
var Rl = function() {
  try {
    var a = Qn(Object, "defineProperty");
    return a({}, "", {}), a;
  } catch {
  }
}(), m6 = Rl ? function(a, e) {
  return Rl(a, "toString", {
    configurable: !0,
    enumerable: !1,
    value: gc(e),
    writable: !0
  });
} : Ce, xy = vR(m6);
function kt(a, e) {
  for (var t = -1, i = a == null ? 0 : a.length; ++t < i && e(a[t], t, a) !== !1; )
    ;
  return a;
}
function zc(a, e, t, i) {
  for (var n = a.length, r = t + (i ? 1 : -1); i ? r-- : ++r < n; )
    if (e(a[r], r, a))
      return r;
  return -1;
}
function _R(a) {
  return a !== a;
}
function g6(a, e, t) {
  for (var i = t - 1, n = a.length; ++i < n; )
    if (a[i] === e)
      return i;
  return -1;
}
function ns(a, e, t) {
  return e === e ? g6(a, e, t) : zc(a, _R, t);
}
function fc(a, e) {
  var t = a == null ? 0 : a.length;
  return !!t && ns(a, e, 0) > -1;
}
var z6 = 1, f6 = 2, y6 = 8, w6 = 16, h6 = 32, b6 = 64, v6 = 128, k6 = 256, _6 = 512, $6 = [
  ["ary", v6],
  ["bind", z6],
  ["bindKey", f6],
  ["curry", y6],
  ["curryRight", w6],
  ["flip", _6],
  ["partial", h6],
  ["partialRight", b6],
  ["rearg", k6]
];
function j6(a, e) {
  return kt($6, function(t) {
    var i = "_." + t[0];
    e & t[1] && !fc(a, i) && a.push(i);
  }), a.sort();
}
function $R(a, e, t) {
  var i = e + "";
  return xy(a, p6(i, j6(c6(i), t)));
}
var x6 = 1, A6 = 2, E6 = 4, S6 = 8, N_ = 32, U_ = 64;
function jR(a, e, t, i, n, r, s, o, d, c) {
  var p = e & S6, m = p ? s : void 0, w = p ? void 0 : s, v = p ? r : void 0, $ = p ? void 0 : r;
  e |= p ? N_ : U_, e &= ~(p ? U_ : N_), e & E6 || (e &= ~(x6 | A6));
  var P = [
    a,
    e,
    n,
    v,
    m,
    $,
    w,
    o,
    d,
    c
  ], h = t.apply(void 0, P);
  return ff(a) && kR(h, P), h.placeholder = i, $R(h, a, e);
}
function rs(a) {
  var e = a;
  return e.placeholder;
}
var q6 = 9007199254740991, P6 = /^(?:0|[1-9]\d*)$/;
function ji(a, e) {
  var t = typeof a;
  return e = e ?? q6, !!e && (t == "number" || t != "symbol" && P6.test(a)) && a > -1 && a % 1 == 0 && a < e;
}
var T6 = Math.min;
function R6(a, e) {
  for (var t = a.length, i = T6(e.length, t), n = Ze(a); i--; ) {
    var r = e[i];
    a[i] = ji(r, t) ? n[r] : void 0;
  }
  return a;
}
var H_ = "__lodash_placeholder__";
function an(a, e) {
  for (var t = -1, i = a.length, n = 0, r = []; ++t < i; ) {
    var s = a[t];
    (s === e || s === H_) && (a[t] = H_, r[n++] = t);
  }
  return r;
}
var O6 = 1, M6 = 2, C6 = 8, L6 = 16, I6 = 128, W6 = 512;
function yc(a, e, t, i, n, r, s, o, d, c) {
  var p = e & I6, m = e & O6, w = e & M6, v = e & (C6 | L6), $ = e & W6, P = w ? void 0 : mo(a);
  function h() {
    for (var z = arguments.length, b = Array(z), _ = z; _--; )
      b[_] = arguments[_];
    if (v)
      var S = rs(h), A = QU(b, S);
    if (i && (b = wR(b, i, n, v)), r && (b = hR(b, r, s, v)), z -= A, v && z < c) {
      var L = an(b, S);
      return jR(
        a,
        e,
        yc,
        h.placeholder,
        t,
        b,
        L,
        o,
        d,
        c - z
      );
    }
    var R = m ? t : this, E = w ? R[a] : a;
    return z = b.length, o ? b = R6(b, o) : $ && z > 1 && b.reverse(), p && d < z && (b.length = d), this && this !== he && this instanceof h && (E = P || mo(E)), E.apply(R, b);
  }
  return h;
}
function F6(a, e, t) {
  var i = mo(a);
  function n() {
    for (var r = arguments.length, s = Array(r), o = r, d = rs(n); o--; )
      s[o] = arguments[o];
    var c = r < 3 && s[0] !== d && s[r - 1] !== d ? [] : an(s, d);
    if (r -= c.length, r < t)
      return jR(
        a,
        e,
        yc,
        n.placeholder,
        void 0,
        s,
        c,
        void 0,
        void 0,
        t - r
      );
    var p = this && this !== he && this instanceof n ? i : a;
    return ot(p, this, s);
  }
  return n;
}
var D6 = 1;
function B6(a, e, t, i) {
  var n = e & D6, r = mo(a);
  function s() {
    for (var o = -1, d = arguments.length, c = -1, p = i.length, m = Array(p + d), w = this && this !== he && this instanceof s ? r : a; ++c < p; )
      m[c] = i[c];
    for (; d--; )
      m[c++] = arguments[++o];
    return ot(w, n ? t : this, m);
  }
  return s;
}
var V_ = "__lodash_placeholder__", Xp = 1, N6 = 2, U6 = 4, K_ = 8, Hs = 128, G_ = 256, H6 = Math.min;
function V6(a, e) {
  var t = a[1], i = e[1], n = t | i, r = n < (Xp | N6 | Hs), s = i == Hs && t == K_ || i == Hs && t == G_ && a[7].length <= e[8] || i == (Hs | G_) && e[7].length <= e[8] && t == K_;
  if (!(r || s))
    return a;
  i & Xp && (a[2] = e[2], n |= t & Xp ? 0 : U6);
  var o = e[3];
  if (o) {
    var d = a[3];
    a[3] = d ? wR(d, o, e[4]) : o, a[4] = d ? an(a[3], V_) : e[4];
  }
  return o = e[5], o && (d = a[5], a[5] = d ? hR(d, o, e[6]) : o, a[6] = d ? an(a[5], V_) : e[6]), o = e[7], o && (a[7] = o), i & Hs && (a[8] = a[8] == null ? e[8] : H6(a[8], e[8])), a[9] == null && (a[9] = e[9]), a[0] = e[0], a[1] = n, a;
}
var K6 = "Expected a function", Y_ = 1, G6 = 2, Jp = 8, Qp = 16, am = 32, Z_ = 64, X_ = Math.max;
function xi(a, e, t, i, n, r, s, o) {
  var d = e & G6;
  if (!d && typeof a != "function")
    throw new TypeError(K6);
  var c = i ? i.length : 0;
  if (c || (e &= ~(am | Z_), i = n = void 0), s = s === void 0 ? s : X_(la(s), 0), o = o === void 0 ? o : la(o), c -= n ? n.length : 0, e & Z_) {
    var p = i, m = n;
    i = n = void 0;
  }
  var w = d ? void 0 : jy(a), v = [
    a,
    e,
    t,
    i,
    n,
    p,
    m,
    r,
    s,
    o
  ];
  if (w && V6(v, w), a = v[0], e = v[1], t = v[2], i = v[3], n = v[4], o = v[9] = v[9] === void 0 ? d ? 0 : a.length : X_(v[9] - c, 0), !o && e & (Jp | Qp) && (e &= ~(Jp | Qp)), !e || e == Y_)
    var $ = ZU(a, e, t);
  else e == Jp || e == Qp ? $ = F6(a, e, o) : (e == am || e == (Y_ | am)) && !n.length ? $ = B6(a, e, t, i) : $ = yc.apply(void 0, v);
  var P = w ? yR : kR;
  return $R(P($, v), a, e);
}
var Y6 = 128;
function Ay(a, e, t) {
  return e = t ? void 0 : e, e = a && e == null ? a.length : e, xi(a, Y6, void 0, void 0, void 0, void 0, e);
}
function Ai(a, e, t) {
  e == "__proto__" && Rl ? Rl(a, e, {
    configurable: !0,
    enumerable: !0,
    value: t,
    writable: !0
  }) : a[e] = t;
}
function _t(a, e) {
  return a === e || a !== a && e !== e;
}
var Z6 = Object.prototype, X6 = Z6.hasOwnProperty;
function ko(a, e, t) {
  var i = a[e];
  (!(X6.call(a, e) && _t(i, t)) || t === void 0 && !(e in a)) && Ai(a, e, t);
}
function ai(a, e, t, i) {
  var n = !t;
  t || (t = {});
  for (var r = -1, s = e.length; ++r < s; ) {
    var o = e[r], d = i ? i(t[o], a[o], o, t, a) : void 0;
    d === void 0 && (d = a[o]), n ? Ai(t, o, d) : ko(t, o, d);
  }
  return t;
}
var J_ = Math.max;
function xR(a, e, t) {
  return e = J_(e === void 0 ? a.length - 1 : e, 0), function() {
    for (var i = arguments, n = -1, r = J_(i.length - e, 0), s = Array(r); ++n < r; )
      s[n] = i[e + n];
    n = -1;
    for (var o = Array(e + 1); ++n < e; )
      o[n] = i[n];
    return o[e] = t(s), ot(a, this, o);
  };
}
function ma(a, e) {
  return xy(xR(a, e, Ce), a + "");
}
var J6 = 9007199254740991;
function _o(a) {
  return typeof a == "number" && a > -1 && a % 1 == 0 && a <= J6;
}
function Ue(a) {
  return a != null && _o(a.length) && !Qt(a);
}
function Be(a, e, t) {
  if (!Ba(t))
    return !1;
  var i = typeof e;
  return (i == "number" ? Ue(t) && ji(e, t.length) : i == "string" && e in t) ? _t(t[e], a) : !1;
}
function ss(a) {
  return ma(function(e, t) {
    var i = -1, n = t.length, r = n > 1 ? t[n - 1] : void 0, s = n > 2 ? t[2] : void 0;
    for (r = a.length > 3 && typeof r == "function" ? (n--, r) : void 0, s && Be(t[0], t[1], s) && (r = n < 3 ? void 0 : r, n = 1), e = Object(e); ++i < n; ) {
      var o = t[i];
      o && a(e, o, i, r);
    }
    return e;
  });
}
var Q6 = Object.prototype;
function $o(a) {
  var e = a && a.constructor, t = typeof e == "function" && e.prototype || Q6;
  return a === t;
}
function Ey(a, e) {
  for (var t = -1, i = Array(a); ++t < a; )
    i[t] = e(t);
  return i;
}
var a5 = "[object Arguments]";
function Q_(a) {
  return Za(a) && Ne(a) == a5;
}
var AR = Object.prototype, e5 = AR.hasOwnProperty, t5 = AR.propertyIsEnumerable, en = Q_(/* @__PURE__ */ function() {
  return arguments;
}()) ? Q_ : function(a) {
  return Za(a) && e5.call(a, "callee") && !t5.call(a, "callee");
};
function wc() {
  return !1;
}
var ER = typeof exports == "object" && exports && !exports.nodeType && exports, a1 = ER && typeof module == "object" && module && !module.nodeType && module, i5 = a1 && a1.exports === ER, e1 = i5 ? he.Buffer : void 0, n5 = e1 ? e1.isBuffer : void 0, vi = n5 || wc, r5 = "[object Arguments]", s5 = "[object Array]", o5 = "[object Boolean]", d5 = "[object Date]", l5 = "[object Error]", c5 = "[object Function]", u5 = "[object Map]", p5 = "[object Number]", m5 = "[object Object]", g5 = "[object RegExp]", z5 = "[object Set]", f5 = "[object String]", y5 = "[object WeakMap]", w5 = "[object ArrayBuffer]", h5 = "[object DataView]", b5 = "[object Float32Array]", v5 = "[object Float64Array]", k5 = "[object Int8Array]", _5 = "[object Int16Array]", $5 = "[object Int32Array]", j5 = "[object Uint8Array]", x5 = "[object Uint8ClampedArray]", A5 = "[object Uint16Array]", E5 = "[object Uint32Array]", Fa = {};
Fa[b5] = Fa[v5] = Fa[k5] = Fa[_5] = Fa[$5] = Fa[j5] = Fa[x5] = Fa[A5] = Fa[E5] = !0;
Fa[r5] = Fa[s5] = Fa[w5] = Fa[o5] = Fa[h5] = Fa[d5] = Fa[l5] = Fa[c5] = Fa[u5] = Fa[p5] = Fa[m5] = Fa[g5] = Fa[z5] = Fa[f5] = Fa[y5] = !1;
function S5(a) {
  return Za(a) && _o(a.length) && !!Fa[Ne(a)];
}
function dt(a) {
  return function(e) {
    return a(e);
  };
}
var SR = typeof exports == "object" && exports && !exports.nodeType && exports, to = SR && typeof module == "object" && module && !module.nodeType && module, q5 = to && to.exports === SR, em = q5 && cR.process, ht = function() {
  try {
    var a = to && to.require && to.require("util").types;
    return a || em && em.binding && em.binding("util");
  } catch {
  }
}(), t1 = ht && ht.isTypedArray, ar = t1 ? dt(t1) : S5, P5 = Object.prototype, T5 = P5.hasOwnProperty;
function qR(a, e) {
  var t = oa(a), i = !t && en(a), n = !t && !i && vi(a), r = !t && !i && !n && ar(a), s = t || i || n || r, o = s ? Ey(a.length, String) : [], d = o.length;
  for (var c in a)
    (e || T5.call(a, c)) && !(s && // Safari 9 has enumerable `arguments.length` in strict mode.
    (c == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    n && (c == "offset" || c == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    r && (c == "buffer" || c == "byteLength" || c == "byteOffset") || // Skip index properties.
    ji(c, d))) && o.push(c);
  return o;
}
function PR(a, e) {
  return function(t) {
    return a(e(t));
  };
}
var R5 = PR(Object.keys, Object), O5 = Object.prototype, M5 = O5.hasOwnProperty;
function Sy(a) {
  if (!$o(a))
    return R5(a);
  var e = [];
  for (var t in Object(a))
    M5.call(a, t) && t != "constructor" && e.push(t);
  return e;
}
function ce(a) {
  return Ue(a) ? qR(a) : Sy(a);
}
var C5 = Object.prototype, L5 = C5.hasOwnProperty, TR = ss(function(a, e) {
  if ($o(e) || Ue(e)) {
    ai(e, ce(e), a);
    return;
  }
  for (var t in e)
    L5.call(e, t) && ko(a, t, e[t]);
});
function I5(a) {
  var e = [];
  if (a != null)
    for (var t in Object(a))
      e.push(t);
  return e;
}
var W5 = Object.prototype, F5 = W5.hasOwnProperty;
function D5(a) {
  if (!Ba(a))
    return I5(a);
  var e = $o(a), t = [];
  for (var i in a)
    i == "constructor" && (e || !F5.call(a, i)) || t.push(i);
  return t;
}
function He(a) {
  return Ue(a) ? qR(a, !0) : D5(a);
}
var Ol = ss(function(a, e) {
  ai(e, He(e), a);
}), Gr = ss(function(a, e, t, i) {
  ai(e, He(e), a, i);
}), RR = ss(function(a, e, t, i) {
  ai(e, ce(e), a, i);
}), B5 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, N5 = /^\w*$/;
function qy(a, e) {
  if (oa(a))
    return !1;
  var t = typeof a;
  return t == "number" || t == "symbol" || t == "boolean" || a == null || Je(a) ? !0 : N5.test(a) || !B5.test(a) || e != null && a in Object(e);
}
var go = Qn(Object, "create");
function U5() {
  this.__data__ = go ? go(null) : {}, this.size = 0;
}
function H5(a) {
  var e = this.has(a) && delete this.__data__[a];
  return this.size -= e ? 1 : 0, e;
}
var V5 = "__lodash_hash_undefined__", K5 = Object.prototype, G5 = K5.hasOwnProperty;
function Y5(a) {
  var e = this.__data__;
  if (go) {
    var t = e[a];
    return t === V5 ? void 0 : t;
  }
  return G5.call(e, a) ? e[a] : void 0;
}
var Z5 = Object.prototype, X5 = Z5.hasOwnProperty;
function J5(a) {
  var e = this.__data__;
  return go ? e[a] !== void 0 : X5.call(e, a);
}
var Q5 = "__lodash_hash_undefined__";
function a8(a, e) {
  var t = this.__data__;
  return this.size += this.has(a) ? 0 : 1, t[a] = go && e === void 0 ? Q5 : e, this;
}
function Kn(a) {
  var e = -1, t = a == null ? 0 : a.length;
  for (this.clear(); ++e < t; ) {
    var i = a[e];
    this.set(i[0], i[1]);
  }
}
Kn.prototype.clear = U5;
Kn.prototype.delete = H5;
Kn.prototype.get = Y5;
Kn.prototype.has = J5;
Kn.prototype.set = a8;
function e8() {
  this.__data__ = [], this.size = 0;
}
function hc(a, e) {
  for (var t = a.length; t--; )
    if (_t(a[t][0], e))
      return t;
  return -1;
}
var t8 = Array.prototype, i8 = t8.splice;
function n8(a) {
  var e = this.__data__, t = hc(e, a);
  if (t < 0)
    return !1;
  var i = e.length - 1;
  return t == i ? e.pop() : i8.call(e, t, 1), --this.size, !0;
}
function r8(a) {
  var e = this.__data__, t = hc(e, a);
  return t < 0 ? void 0 : e[t][1];
}
function s8(a) {
  return hc(this.__data__, a) > -1;
}
function o8(a, e) {
  var t = this.__data__, i = hc(t, a);
  return i < 0 ? (++this.size, t.push([a, e])) : t[i][1] = e, this;
}
function Ei(a) {
  var e = -1, t = a == null ? 0 : a.length;
  for (this.clear(); ++e < t; ) {
    var i = a[e];
    this.set(i[0], i[1]);
  }
}
Ei.prototype.clear = e8;
Ei.prototype.delete = n8;
Ei.prototype.get = r8;
Ei.prototype.has = s8;
Ei.prototype.set = o8;
var zo = Qn(he, "Map");
function d8() {
  this.size = 0, this.__data__ = {
    hash: new Kn(),
    map: new (zo || Ei)(),
    string: new Kn()
  };
}
function l8(a) {
  var e = typeof a;
  return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? a !== "__proto__" : a === null;
}
function bc(a, e) {
  var t = a.__data__;
  return l8(e) ? t[typeof e == "string" ? "string" : "hash"] : t.map;
}
function c8(a) {
  var e = bc(this, a).delete(a);
  return this.size -= e ? 1 : 0, e;
}
function u8(a) {
  return bc(this, a).get(a);
}
function p8(a) {
  return bc(this, a).has(a);
}
function m8(a, e) {
  var t = bc(this, a), i = t.size;
  return t.set(a, e), this.size += t.size == i ? 0 : 1, this;
}
function Si(a) {
  var e = -1, t = a == null ? 0 : a.length;
  for (this.clear(); ++e < t; ) {
    var i = a[e];
    this.set(i[0], i[1]);
  }
}
Si.prototype.clear = d8;
Si.prototype.delete = c8;
Si.prototype.get = u8;
Si.prototype.has = p8;
Si.prototype.set = m8;
var g8 = "Expected a function";
function jo(a, e) {
  if (typeof a != "function" || e != null && typeof e != "function")
    throw new TypeError(g8);
  var t = function() {
    var i = arguments, n = e ? e.apply(this, i) : i[0], r = t.cache;
    if (r.has(n))
      return r.get(n);
    var s = a.apply(this, i);
    return t.cache = r.set(n, s) || r, s;
  };
  return t.cache = new (jo.Cache || Si)(), t;
}
jo.Cache = Si;
var z8 = 500;
function f8(a) {
  var e = jo(a, function(i) {
    return t.size === z8 && t.clear(), i;
  }), t = e.cache;
  return e;
}
var y8 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, w8 = /\\(\\)?/g, OR = f8(function(a) {
  var e = [];
  return a.charCodeAt(0) === 46 && e.push(""), a.replace(y8, function(t, i, n, r) {
    e.push(n ? r.replace(w8, "$1") : i || t);
  }), e;
});
function ja(a) {
  return a == null ? "" : st(a);
}
function ln(a, e) {
  return oa(a) ? a : qy(a, e) ? [a] : OR(ja(a));
}
var h8 = 1 / 0;
function ei(a) {
  if (typeof a == "string" || Je(a))
    return a;
  var e = a + "";
  return e == "0" && 1 / a == -h8 ? "-0" : e;
}
function er(a, e) {
  e = ln(e, a);
  for (var t = 0, i = e.length; a != null && t < i; )
    a = a[ei(e[t++])];
  return t && t == i ? a : void 0;
}
function vc(a, e, t) {
  var i = a == null ? void 0 : er(a, e);
  return i === void 0 ? t : i;
}
function Py(a, e) {
  for (var t = -1, i = e.length, n = Array(i), r = a == null; ++t < i; )
    n[t] = r ? void 0 : vc(a, e[t]);
  return n;
}
function cn(a, e) {
  for (var t = -1, i = e.length, n = a.length; ++t < i; )
    a[n + t] = e[t];
  return a;
}
var i1 = Oe ? Oe.isConcatSpreadable : void 0;
function b8(a) {
  return oa(a) || en(a) || !!(i1 && a && a[i1]);
}
function xe(a, e, t, i, n) {
  var r = -1, s = a.length;
  for (t || (t = b8), n || (n = []); ++r < s; ) {
    var o = a[r];
    e > 0 && t(o) ? e > 1 ? xe(o, e - 1, t, i, n) : cn(n, o) : i || (n[n.length] = o);
  }
  return n;
}
function Ty(a) {
  var e = a == null ? 0 : a.length;
  return e ? xe(a, 1) : [];
}
function qi(a) {
  return xy(xR(a, void 0, Ty), a + "");
}
var MR = qi(Py), kc = PR(Object.getPrototypeOf, Object), v8 = "[object Object]", k8 = Function.prototype, _8 = Object.prototype, CR = k8.toString, $8 = _8.hasOwnProperty, j8 = CR.call(Object);
function os(a) {
  if (!Za(a) || Ne(a) != v8)
    return !1;
  var e = kc(a);
  if (e === null)
    return !0;
  var t = $8.call(e, "constructor") && e.constructor;
  return typeof t == "function" && t instanceof t && CR.call(t) == j8;
}
var x8 = "[object DOMException]", A8 = "[object Error]";
function _c(a) {
  if (!Za(a))
    return !1;
  var e = Ne(a);
  return e == A8 || e == x8 || typeof a.message == "string" && typeof a.name == "string" && !os(a);
}
var Ry = ma(function(a, e) {
  try {
    return ot(a, void 0, e);
  } catch (t) {
    return _c(t) ? t : new Error(t);
  }
}), E8 = "Expected a function";
function Oy(a, e) {
  var t;
  if (typeof e != "function")
    throw new TypeError(E8);
  return a = la(a), function() {
    return --a > 0 && (t = e.apply(this, arguments)), a <= 1 && (e = void 0), t;
  };
}
var S8 = 1, q8 = 32, xo = ma(function(a, e, t) {
  var i = S8;
  if (t.length) {
    var n = an(t, rs(xo));
    i |= q8;
  }
  return xi(a, i, e, t, n);
});
xo.placeholder = {};
var LR = qi(function(a, e) {
  return kt(e, function(t) {
    t = ei(t), Ai(a, t, xo(a[t], a));
  }), a;
}), P8 = 1, T8 = 2, R8 = 32, $c = ma(function(a, e, t) {
  var i = P8 | T8;
  if (t.length) {
    var n = an(t, rs($c));
    i |= R8;
  }
  return xi(e, i, a, t, n);
});
$c.placeholder = {};
function bt(a, e, t) {
  var i = -1, n = a.length;
  e < 0 && (e = -e > n ? 0 : n + e), t = t > n ? n : t, t < 0 && (t += n), n = e > t ? 0 : t - e >>> 0, e >>>= 0;
  for (var r = Array(n); ++i < n; )
    r[i] = a[i + e];
  return r;
}
function un(a, e, t) {
  var i = a.length;
  return t = t === void 0 ? i : t, !e && t >= i ? a : bt(a, e, t);
}
var O8 = "\\ud800-\\udfff", M8 = "\\u0300-\\u036f", C8 = "\\ufe20-\\ufe2f", L8 = "\\u20d0-\\u20ff", I8 = M8 + C8 + L8, W8 = "\\ufe0e\\ufe0f", F8 = "\\u200d", D8 = RegExp("[" + F8 + O8 + I8 + W8 + "]");
function ds(a) {
  return D8.test(a);
}
function B8(a) {
  return a.split("");
}
var IR = "\\ud800-\\udfff", N8 = "\\u0300-\\u036f", U8 = "\\ufe20-\\ufe2f", H8 = "\\u20d0-\\u20ff", V8 = N8 + U8 + H8, K8 = "\\ufe0e\\ufe0f", G8 = "[" + IR + "]", yf = "[" + V8 + "]", wf = "\\ud83c[\\udffb-\\udfff]", Y8 = "(?:" + yf + "|" + wf + ")", WR = "[^" + IR + "]", FR = "(?:\\ud83c[\\udde6-\\uddff]){2}", DR = "[\\ud800-\\udbff][\\udc00-\\udfff]", Z8 = "\\u200d", BR = Y8 + "?", NR = "[" + K8 + "]?", X8 = "(?:" + Z8 + "(?:" + [WR, FR, DR].join("|") + ")" + NR + BR + ")*", J8 = NR + BR + X8, Q8 = "(?:" + [WR + yf + "?", yf, FR, DR, G8].join("|") + ")", a7 = RegExp(wf + "(?=" + wf + ")|" + Q8 + J8, "g");
function e7(a) {
  return a.match(a7) || [];
}
function Rt(a) {
  return ds(a) ? e7(a) : B8(a);
}
function UR(a) {
  return function(e) {
    e = ja(e);
    var t = ds(e) ? Rt(e) : void 0, i = t ? t[0] : e.charAt(0), n = t ? un(t, 1).join("") : e.slice(1);
    return i[a]() + n;
  };
}
var jc = UR("toUpperCase");
function My(a) {
  return jc(ja(a).toLowerCase());
}
function Cy(a, e, t, i) {
  var n = -1, r = a == null ? 0 : a.length;
  for (i && r && (t = a[++n]); ++n < r; )
    t = e(t, a[n], n, a);
  return t;
}
function Ly(a) {
  return function(e) {
    return a == null ? void 0 : a[e];
  };
}
var t7 = {
  // Latin-1 Supplement block.
  À: "A",
  Á: "A",
  Â: "A",
  Ã: "A",
  Ä: "A",
  Å: "A",
  à: "a",
  á: "a",
  â: "a",
  ã: "a",
  ä: "a",
  å: "a",
  Ç: "C",
  ç: "c",
  Ð: "D",
  ð: "d",
  È: "E",
  É: "E",
  Ê: "E",
  Ë: "E",
  è: "e",
  é: "e",
  ê: "e",
  ë: "e",
  Ì: "I",
  Í: "I",
  Î: "I",
  Ï: "I",
  ì: "i",
  í: "i",
  î: "i",
  ï: "i",
  Ñ: "N",
  ñ: "n",
  Ò: "O",
  Ó: "O",
  Ô: "O",
  Õ: "O",
  Ö: "O",
  Ø: "O",
  ò: "o",
  ó: "o",
  ô: "o",
  õ: "o",
  ö: "o",
  ø: "o",
  Ù: "U",
  Ú: "U",
  Û: "U",
  Ü: "U",
  ù: "u",
  ú: "u",
  û: "u",
  ü: "u",
  Ý: "Y",
  ý: "y",
  ÿ: "y",
  Æ: "Ae",
  æ: "ae",
  Þ: "Th",
  þ: "th",
  ß: "ss",
  // Latin Extended-A block.
  Ā: "A",
  Ă: "A",
  Ą: "A",
  ā: "a",
  ă: "a",
  ą: "a",
  Ć: "C",
  Ĉ: "C",
  Ċ: "C",
  Č: "C",
  ć: "c",
  ĉ: "c",
  ċ: "c",
  č: "c",
  Ď: "D",
  Đ: "D",
  ď: "d",
  đ: "d",
  Ē: "E",
  Ĕ: "E",
  Ė: "E",
  Ę: "E",
  Ě: "E",
  ē: "e",
  ĕ: "e",
  ė: "e",
  ę: "e",
  ě: "e",
  Ĝ: "G",
  Ğ: "G",
  Ġ: "G",
  Ģ: "G",
  ĝ: "g",
  ğ: "g",
  ġ: "g",
  ģ: "g",
  Ĥ: "H",
  Ħ: "H",
  ĥ: "h",
  ħ: "h",
  Ĩ: "I",
  Ī: "I",
  Ĭ: "I",
  Į: "I",
  İ: "I",
  ĩ: "i",
  ī: "i",
  ĭ: "i",
  į: "i",
  ı: "i",
  Ĵ: "J",
  ĵ: "j",
  Ķ: "K",
  ķ: "k",
  ĸ: "k",
  Ĺ: "L",
  Ļ: "L",
  Ľ: "L",
  Ŀ: "L",
  Ł: "L",
  ĺ: "l",
  ļ: "l",
  ľ: "l",
  ŀ: "l",
  ł: "l",
  Ń: "N",
  Ņ: "N",
  Ň: "N",
  Ŋ: "N",
  ń: "n",
  ņ: "n",
  ň: "n",
  ŋ: "n",
  Ō: "O",
  Ŏ: "O",
  Ő: "O",
  ō: "o",
  ŏ: "o",
  ő: "o",
  Ŕ: "R",
  Ŗ: "R",
  Ř: "R",
  ŕ: "r",
  ŗ: "r",
  ř: "r",
  Ś: "S",
  Ŝ: "S",
  Ş: "S",
  Š: "S",
  ś: "s",
  ŝ: "s",
  ş: "s",
  š: "s",
  Ţ: "T",
  Ť: "T",
  Ŧ: "T",
  ţ: "t",
  ť: "t",
  ŧ: "t",
  Ũ: "U",
  Ū: "U",
  Ŭ: "U",
  Ů: "U",
  Ű: "U",
  Ų: "U",
  ũ: "u",
  ū: "u",
  ŭ: "u",
  ů: "u",
  ű: "u",
  ų: "u",
  Ŵ: "W",
  ŵ: "w",
  Ŷ: "Y",
  ŷ: "y",
  Ÿ: "Y",
  Ź: "Z",
  Ż: "Z",
  Ž: "Z",
  ź: "z",
  ż: "z",
  ž: "z",
  Ĳ: "IJ",
  ĳ: "ij",
  Œ: "Oe",
  œ: "oe",
  ŉ: "'n",
  ſ: "s"
}, i7 = Ly(t7), n7 = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, r7 = "\\u0300-\\u036f", s7 = "\\ufe20-\\ufe2f", o7 = "\\u20d0-\\u20ff", d7 = r7 + s7 + o7, l7 = "[" + d7 + "]", c7 = RegExp(l7, "g");
function Iy(a) {
  return a = ja(a), a && a.replace(n7, i7).replace(c7, "");
}
var u7 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function p7(a) {
  return a.match(u7) || [];
}
var m7 = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function g7(a) {
  return m7.test(a);
}
var HR = "\\ud800-\\udfff", z7 = "\\u0300-\\u036f", f7 = "\\ufe20-\\ufe2f", y7 = "\\u20d0-\\u20ff", w7 = z7 + f7 + y7, VR = "\\u2700-\\u27bf", KR = "a-z\\xdf-\\xf6\\xf8-\\xff", h7 = "\\xac\\xb1\\xd7\\xf7", b7 = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", v7 = "\\u2000-\\u206f", k7 = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", GR = "A-Z\\xc0-\\xd6\\xd8-\\xde", _7 = "\\ufe0e\\ufe0f", YR = h7 + b7 + v7 + k7, ZR = "['’]", n1 = "[" + YR + "]", $7 = "[" + w7 + "]", XR = "\\d+", j7 = "[" + VR + "]", JR = "[" + KR + "]", QR = "[^" + HR + YR + XR + VR + KR + GR + "]", x7 = "\\ud83c[\\udffb-\\udfff]", A7 = "(?:" + $7 + "|" + x7 + ")", E7 = "[^" + HR + "]", aO = "(?:\\ud83c[\\udde6-\\uddff]){2}", eO = "[\\ud800-\\udbff][\\udc00-\\udfff]", Rr = "[" + GR + "]", S7 = "\\u200d", r1 = "(?:" + JR + "|" + QR + ")", q7 = "(?:" + Rr + "|" + QR + ")", s1 = "(?:" + ZR + "(?:d|ll|m|re|s|t|ve))?", o1 = "(?:" + ZR + "(?:D|LL|M|RE|S|T|VE))?", tO = A7 + "?", iO = "[" + _7 + "]?", P7 = "(?:" + S7 + "(?:" + [E7, aO, eO].join("|") + ")" + iO + tO + ")*", T7 = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", R7 = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", O7 = iO + tO + P7, M7 = "(?:" + [j7, aO, eO].join("|") + ")" + O7, C7 = RegExp([
  Rr + "?" + JR + "+" + s1 + "(?=" + [n1, Rr, "$"].join("|") + ")",
  q7 + "+" + o1 + "(?=" + [n1, Rr + r1, "$"].join("|") + ")",
  Rr + "?" + r1 + "+" + s1,
  Rr + "+" + o1,
  R7,
  T7,
  XR,
  M7
].join("|"), "g");
function L7(a) {
  return a.match(C7) || [];
}
function Wy(a, e, t) {
  return a = ja(a), e = t ? void 0 : e, e === void 0 ? g7(a) ? L7(a) : p7(a) : a.match(e) || [];
}
var I7 = "['’]", W7 = RegExp(I7, "g");
function ls(a) {
  return function(e) {
    return Cy(Wy(Iy(e).replace(W7, "")), a, "");
  };
}
var nO = ls(function(a, e, t) {
  return e = e.toLowerCase(), a + (t ? My(e) : e);
});
function rO() {
  if (!arguments.length)
    return [];
  var a = arguments[0];
  return oa(a) ? a : [a];
}
var F7 = he.isFinite, D7 = Math.min;
function Fy(a) {
  var e = Math[a];
  return function(t, i) {
    if (t = rt(t), i = i == null ? 0 : D7(la(i), 292), i && F7(t)) {
      var n = (ja(t) + "e").split("e"), r = e(n[0] + "e" + (+n[1] + i));
      return n = (ja(r) + "e").split("e"), +(n[0] + "e" + (+n[1] - i));
    }
    return e(t);
  };
}
var sO = Fy("ceil");
function Dy(a) {
  var e = y(a);
  return e.__chain__ = !0, e;
}
var B7 = Math.ceil, N7 = Math.max;
function oO(a, e, t) {
  (t ? Be(a, e, t) : e === void 0) ? e = 1 : e = N7(la(e), 0);
  var i = a == null ? 0 : a.length;
  if (!i || e < 1)
    return [];
  for (var n = 0, r = 0, s = Array(B7(i / e)); n < i; )
    s[r++] = bt(a, n, n += e);
  return s;
}
function tr(a, e, t) {
  return a === a && (t !== void 0 && (a = a <= t ? a : t), e !== void 0 && (a = a >= e ? a : e)), a;
}
function dO(a, e, t) {
  return t === void 0 && (t = e, e = void 0), t !== void 0 && (t = rt(t), t = t === t ? t : 0), e !== void 0 && (e = rt(e), e = e === e ? e : 0), tr(rt(a), e, t);
}
function U7() {
  this.__data__ = new Ei(), this.size = 0;
}
function H7(a) {
  var e = this.__data__, t = e.delete(a);
  return this.size = e.size, t;
}
function V7(a) {
  return this.__data__.get(a);
}
function K7(a) {
  return this.__data__.has(a);
}
var G7 = 200;
function Y7(a, e) {
  var t = this.__data__;
  if (t instanceof Ei) {
    var i = t.__data__;
    if (!zo || i.length < G7 - 1)
      return i.push([a, e]), this.size = ++t.size, this;
    t = this.__data__ = new Si(i);
  }
  return t.set(a, e), this.size = t.size, this;
}
function qt(a) {
  var e = this.__data__ = new Ei(a);
  this.size = e.size;
}
qt.prototype.clear = U7;
qt.prototype.delete = H7;
qt.prototype.get = V7;
qt.prototype.has = K7;
qt.prototype.set = Y7;
function lO(a, e) {
  return a && ai(e, ce(e), a);
}
function Z7(a, e) {
  return a && ai(e, He(e), a);
}
var cO = typeof exports == "object" && exports && !exports.nodeType && exports, d1 = cO && typeof module == "object" && module && !module.nodeType && module, X7 = d1 && d1.exports === cO, l1 = X7 ? he.Buffer : void 0, c1 = l1 ? l1.allocUnsafe : void 0;
function uO(a, e) {
  if (e)
    return a.slice();
  var t = a.length, i = c1 ? c1(t) : new a.constructor(t);
  return a.copy(i), i;
}
function pn(a, e) {
  for (var t = -1, i = a == null ? 0 : a.length, n = 0, r = []; ++t < i; ) {
    var s = a[t];
    e(s, t, a) && (r[n++] = s);
  }
  return r;
}
function xc() {
  return [];
}
var J7 = Object.prototype, Q7 = J7.propertyIsEnumerable, u1 = Object.getOwnPropertySymbols, By = u1 ? function(a) {
  return a == null ? [] : (a = Object(a), pn(u1(a), function(e) {
    return Q7.call(a, e);
  }));
} : xc;
function a9(a, e) {
  return ai(a, By(a), e);
}
var e9 = Object.getOwnPropertySymbols, pO = e9 ? function(a) {
  for (var e = []; a; )
    cn(e, By(a)), a = kc(a);
  return e;
} : xc;
function t9(a, e) {
  return ai(a, pO(a), e);
}
function mO(a, e, t) {
  var i = e(a);
  return oa(a) ? i : cn(i, t(a));
}
function hf(a) {
  return mO(a, ce, By);
}
function Ny(a) {
  return mO(a, He, pO);
}
var bf = Qn(he, "DataView"), vf = Qn(he, "Promise"), Wr = Qn(he, "Set"), p1 = "[object Map]", i9 = "[object Object]", m1 = "[object Promise]", g1 = "[object Set]", z1 = "[object WeakMap]", f1 = "[object DataView]", n9 = Jn(bf), r9 = Jn(zo), s9 = Jn(vf), o9 = Jn(Wr), d9 = Jn(po), Pe = Ne;
(bf && Pe(new bf(new ArrayBuffer(1))) != f1 || zo && Pe(new zo()) != p1 || vf && Pe(vf.resolve()) != m1 || Wr && Pe(new Wr()) != g1 || po && Pe(new po()) != z1) && (Pe = function(a) {
  var e = Ne(a), t = e == i9 ? a.constructor : void 0, i = t ? Jn(t) : "";
  if (i)
    switch (i) {
      case n9:
        return f1;
      case r9:
        return p1;
      case s9:
        return m1;
      case o9:
        return g1;
      case d9:
        return z1;
    }
  return e;
});
var l9 = Object.prototype, c9 = l9.hasOwnProperty;
function u9(a) {
  var e = a.length, t = new a.constructor(e);
  return e && typeof a[0] == "string" && c9.call(a, "index") && (t.index = a.index, t.input = a.input), t;
}
var Ml = he.Uint8Array;
function Uy(a) {
  var e = new a.constructor(a.byteLength);
  return new Ml(e).set(new Ml(a)), e;
}
function p9(a, e) {
  var t = e ? Uy(a.buffer) : a.buffer;
  return new a.constructor(t, a.byteOffset, a.byteLength);
}
var m9 = /\w*$/;
function g9(a) {
  var e = new a.constructor(a.source, m9.exec(a));
  return e.lastIndex = a.lastIndex, e;
}
var y1 = Oe ? Oe.prototype : void 0, w1 = y1 ? y1.valueOf : void 0;
function z9(a) {
  return w1 ? Object(w1.call(a)) : {};
}
function gO(a, e) {
  var t = e ? Uy(a.buffer) : a.buffer;
  return new a.constructor(t, a.byteOffset, a.length);
}
var f9 = "[object Boolean]", y9 = "[object Date]", w9 = "[object Map]", h9 = "[object Number]", b9 = "[object RegExp]", v9 = "[object Set]", k9 = "[object String]", _9 = "[object Symbol]", $9 = "[object ArrayBuffer]", j9 = "[object DataView]", x9 = "[object Float32Array]", A9 = "[object Float64Array]", E9 = "[object Int8Array]", S9 = "[object Int16Array]", q9 = "[object Int32Array]", P9 = "[object Uint8Array]", T9 = "[object Uint8ClampedArray]", R9 = "[object Uint16Array]", O9 = "[object Uint32Array]";
function M9(a, e, t) {
  var i = a.constructor;
  switch (e) {
    case $9:
      return Uy(a);
    case f9:
    case y9:
      return new i(+a);
    case j9:
      return p9(a, t);
    case x9:
    case A9:
    case E9:
    case S9:
    case q9:
    case P9:
    case T9:
    case R9:
    case O9:
      return gO(a, t);
    case w9:
      return new i();
    case h9:
    case k9:
      return new i(a);
    case b9:
      return g9(a);
    case v9:
      return new i();
    case _9:
      return z9(a);
  }
}
function zO(a) {
  return typeof a.constructor == "function" && !$o(a) ? is(kc(a)) : {};
}
var C9 = "[object Map]";
function L9(a) {
  return Za(a) && Pe(a) == C9;
}
var h1 = ht && ht.isMap, Hy = h1 ? dt(h1) : L9, I9 = "[object Set]";
function W9(a) {
  return Za(a) && Pe(a) == I9;
}
var b1 = ht && ht.isSet, Vy = b1 ? dt(b1) : W9, F9 = 1, D9 = 2, B9 = 4, fO = "[object Arguments]", N9 = "[object Array]", U9 = "[object Boolean]", H9 = "[object Date]", V9 = "[object Error]", yO = "[object Function]", K9 = "[object GeneratorFunction]", G9 = "[object Map]", Y9 = "[object Number]", wO = "[object Object]", Z9 = "[object RegExp]", X9 = "[object Set]", J9 = "[object String]", Q9 = "[object Symbol]", aH = "[object WeakMap]", eH = "[object ArrayBuffer]", tH = "[object DataView]", iH = "[object Float32Array]", nH = "[object Float64Array]", rH = "[object Int8Array]", sH = "[object Int16Array]", oH = "[object Int32Array]", dH = "[object Uint8Array]", lH = "[object Uint8ClampedArray]", cH = "[object Uint16Array]", uH = "[object Uint32Array]", Ia = {};
Ia[fO] = Ia[N9] = Ia[eH] = Ia[tH] = Ia[U9] = Ia[H9] = Ia[iH] = Ia[nH] = Ia[rH] = Ia[sH] = Ia[oH] = Ia[G9] = Ia[Y9] = Ia[wO] = Ia[Z9] = Ia[X9] = Ia[J9] = Ia[Q9] = Ia[dH] = Ia[lH] = Ia[cH] = Ia[uH] = !0;
Ia[V9] = Ia[yO] = Ia[aH] = !1;
function ft(a, e, t, i, n, r) {
  var s, o = e & F9, d = e & D9, c = e & B9;
  if (t && (s = n ? t(a, i, n, r) : t(a)), s !== void 0)
    return s;
  if (!Ba(a))
    return a;
  var p = oa(a);
  if (p) {
    if (s = u9(a), !o)
      return Ze(a, s);
  } else {
    var m = Pe(a), w = m == yO || m == K9;
    if (vi(a))
      return uO(a, o);
    if (m == wO || m == fO || w && !n) {
      if (s = d || w ? {} : zO(a), !o)
        return d ? t9(a, Z7(s, a)) : a9(a, lO(s, a));
    } else {
      if (!Ia[m])
        return n ? a : {};
      s = M9(a, m, o);
    }
  }
  r || (r = new qt());
  var v = r.get(a);
  if (v)
    return v;
  r.set(a, s), Vy(a) ? a.forEach(function(h) {
    s.add(ft(h, e, t, h, a, r));
  }) : Hy(a) && a.forEach(function(h, z) {
    s.set(z, ft(h, e, t, z, a, r));
  });
  var $ = c ? d ? Ny : hf : d ? He : ce, P = p ? void 0 : $(a);
  return kt(P || a, function(h, z) {
    P && (z = h, h = a[z]), ko(s, z, ft(h, e, t, z, a, r));
  }), s;
}
var pH = 4;
function hO(a) {
  return ft(a, pH);
}
var mH = 1, gH = 4;
function bO(a) {
  return ft(a, mH | gH);
}
var zH = 1, fH = 4;
function vO(a, e) {
  return e = typeof e == "function" ? e : void 0, ft(a, zH | fH, e);
}
var yH = 4;
function kO(a, e) {
  return e = typeof e == "function" ? e : void 0, ft(a, yH, e);
}
function kf() {
  return new wt(this.value(), this.__chain__);
}
function _O(a) {
  for (var e = -1, t = a == null ? 0 : a.length, i = 0, n = []; ++e < t; ) {
    var r = a[e];
    r && (n[i++] = r);
  }
  return n;
}
function $O() {
  var a = arguments.length;
  if (!a)
    return [];
  for (var e = Array(a - 1), t = arguments[0], i = a; i--; )
    e[i - 1] = arguments[i];
  return cn(oa(t) ? Ze(t) : [t], xe(e, 1));
}
var wH = "__lodash_hash_undefined__";
function hH(a) {
  return this.__data__.set(a, wH), this;
}
function bH(a) {
  return this.__data__.has(a);
}
function Gn(a) {
  var e = -1, t = a == null ? 0 : a.length;
  for (this.__data__ = new Si(); ++e < t; )
    this.add(a[e]);
}
Gn.prototype.add = Gn.prototype.push = hH;
Gn.prototype.has = bH;
function Ky(a, e) {
  for (var t = -1, i = a == null ? 0 : a.length; ++t < i; )
    if (e(a[t], t, a))
      return !0;
  return !1;
}
function fo(a, e) {
  return a.has(e);
}
var vH = 1, kH = 2;
function jO(a, e, t, i, n, r) {
  var s = t & vH, o = a.length, d = e.length;
  if (o != d && !(s && d > o))
    return !1;
  var c = r.get(a), p = r.get(e);
  if (c && p)
    return c == e && p == a;
  var m = -1, w = !0, v = t & kH ? new Gn() : void 0;
  for (r.set(a, e), r.set(e, a); ++m < o; ) {
    var $ = a[m], P = e[m];
    if (i)
      var h = s ? i(P, $, m, e, a, r) : i($, P, m, a, e, r);
    if (h !== void 0) {
      if (h)
        continue;
      w = !1;
      break;
    }
    if (v) {
      if (!Ky(e, function(z, b) {
        if (!fo(v, b) && ($ === z || n($, z, t, i, r)))
          return v.push(b);
      })) {
        w = !1;
        break;
      }
    } else if (!($ === P || n($, P, t, i, r))) {
      w = !1;
      break;
    }
  }
  return r.delete(a), r.delete(e), w;
}
function Gy(a) {
  var e = -1, t = Array(a.size);
  return a.forEach(function(i, n) {
    t[++e] = [n, i];
  }), t;
}
function Ac(a) {
  var e = -1, t = Array(a.size);
  return a.forEach(function(i) {
    t[++e] = i;
  }), t;
}
var _H = 1, $H = 2, jH = "[object Boolean]", xH = "[object Date]", AH = "[object Error]", EH = "[object Map]", SH = "[object Number]", qH = "[object RegExp]", PH = "[object Set]", TH = "[object String]", RH = "[object Symbol]", OH = "[object ArrayBuffer]", MH = "[object DataView]", v1 = Oe ? Oe.prototype : void 0, tm = v1 ? v1.valueOf : void 0;
function CH(a, e, t, i, n, r, s) {
  switch (t) {
    case MH:
      if (a.byteLength != e.byteLength || a.byteOffset != e.byteOffset)
        return !1;
      a = a.buffer, e = e.buffer;
    case OH:
      return !(a.byteLength != e.byteLength || !r(new Ml(a), new Ml(e)));
    case jH:
    case xH:
    case SH:
      return _t(+a, +e);
    case AH:
      return a.name == e.name && a.message == e.message;
    case qH:
    case TH:
      return a == e + "";
    case EH:
      var o = Gy;
    case PH:
      var d = i & _H;
      if (o || (o = Ac), a.size != e.size && !d)
        return !1;
      var c = s.get(a);
      if (c)
        return c == e;
      i |= $H, s.set(a, e);
      var p = jO(o(a), o(e), i, n, r, s);
      return s.delete(a), p;
    case RH:
      if (tm)
        return tm.call(a) == tm.call(e);
  }
  return !1;
}
var LH = 1, IH = Object.prototype, WH = IH.hasOwnProperty;
function FH(a, e, t, i, n, r) {
  var s = t & LH, o = hf(a), d = o.length, c = hf(e), p = c.length;
  if (d != p && !s)
    return !1;
  for (var m = d; m--; ) {
    var w = o[m];
    if (!(s ? w in e : WH.call(e, w)))
      return !1;
  }
  var v = r.get(a), $ = r.get(e);
  if (v && $)
    return v == e && $ == a;
  var P = !0;
  r.set(a, e), r.set(e, a);
  for (var h = s; ++m < d; ) {
    w = o[m];
    var z = a[w], b = e[w];
    if (i)
      var _ = s ? i(b, z, w, e, a, r) : i(z, b, w, a, e, r);
    if (!(_ === void 0 ? z === b || n(z, b, t, i, r) : _)) {
      P = !1;
      break;
    }
    h || (h = w == "constructor");
  }
  if (P && !h) {
    var S = a.constructor, A = e.constructor;
    S != A && "constructor" in a && "constructor" in e && !(typeof S == "function" && S instanceof S && typeof A == "function" && A instanceof A) && (P = !1);
  }
  return r.delete(a), r.delete(e), P;
}
var DH = 1, k1 = "[object Arguments]", _1 = "[object Array]", Zd = "[object Object]", BH = Object.prototype, $1 = BH.hasOwnProperty;
function NH(a, e, t, i, n, r) {
  var s = oa(a), o = oa(e), d = s ? _1 : Pe(a), c = o ? _1 : Pe(e);
  d = d == k1 ? Zd : d, c = c == k1 ? Zd : c;
  var p = d == Zd, m = c == Zd, w = d == c;
  if (w && vi(a)) {
    if (!vi(e))
      return !1;
    s = !0, p = !1;
  }
  if (w && !p)
    return r || (r = new qt()), s || ar(a) ? jO(a, e, t, i, n, r) : CH(a, e, d, t, i, n, r);
  if (!(t & DH)) {
    var v = p && $1.call(a, "__wrapped__"), $ = m && $1.call(e, "__wrapped__");
    if (v || $) {
      var P = v ? a.value() : a, h = $ ? e.value() : e;
      return r || (r = new qt()), n(P, h, t, i, r);
    }
  }
  return w ? (r || (r = new qt()), FH(a, e, t, i, n, r)) : !1;
}
function Ao(a, e, t, i, n) {
  return a === e ? !0 : a == null || e == null || !Za(a) && !Za(e) ? a !== a && e !== e : NH(a, e, t, i, Ao, n);
}
var UH = 1, HH = 2;
function Yy(a, e, t, i) {
  var n = t.length, r = n, s = !i;
  if (a == null)
    return !r;
  for (a = Object(a); n--; ) {
    var o = t[n];
    if (s && o[2] ? o[1] !== a[o[0]] : !(o[0] in a))
      return !1;
  }
  for (; ++n < r; ) {
    o = t[n];
    var d = o[0], c = a[d], p = o[1];
    if (s && o[2]) {
      if (c === void 0 && !(d in a))
        return !1;
    } else {
      var m = new qt();
      if (i)
        var w = i(c, p, d, a, e, m);
      if (!(w === void 0 ? Ao(p, c, UH | HH, i, m) : w))
        return !1;
    }
  }
  return !0;
}
function xO(a) {
  return a === a && !Ba(a);
}
function Zy(a) {
  for (var e = ce(a), t = e.length; t--; ) {
    var i = e[t], n = a[i];
    e[t] = [i, n, xO(n)];
  }
  return e;
}
function AO(a, e) {
  return function(t) {
    return t == null ? !1 : t[a] === e && (e !== void 0 || a in Object(t));
  };
}
function EO(a) {
  var e = Zy(a);
  return e.length == 1 && e[0][2] ? AO(e[0][0], e[0][1]) : function(t) {
    return t === a || Yy(t, a, e);
  };
}
function VH(a, e) {
  return a != null && e in Object(a);
}
function SO(a, e, t) {
  e = ln(e, a);
  for (var i = -1, n = e.length, r = !1; ++i < n; ) {
    var s = ei(e[i]);
    if (!(r = a != null && t(a, s)))
      break;
    a = a[s];
  }
  return r || ++i != n ? r : (n = a == null ? 0 : a.length, !!n && _o(n) && ji(s, n) && (oa(a) || en(a)));
}
function Ec(a, e) {
  return a != null && SO(a, e, VH);
}
var KH = 1, GH = 2;
function qO(a, e) {
  return qy(a) && xO(e) ? AO(ei(a), e) : function(t) {
    var i = vc(t, a);
    return i === void 0 && i === e ? Ec(t, a) : Ao(e, i, KH | GH);
  };
}
function Xy(a) {
  return function(e) {
    return e == null ? void 0 : e[a];
  };
}
function YH(a) {
  return function(e) {
    return er(e, a);
  };
}
function Jy(a) {
  return qy(a) ? Xy(ei(a)) : YH(a);
}
function da(a) {
  return typeof a == "function" ? a : a == null ? Ce : typeof a == "object" ? oa(a) ? qO(a[0], a[1]) : EO(a) : Jy(a);
}
var ZH = "Expected a function";
function PO(a) {
  var e = a == null ? 0 : a.length, t = da;
  return a = e ? Ka(a, function(i) {
    if (typeof i[1] != "function")
      throw new TypeError(ZH);
    return [t(i[0]), i[1]];
  }) : [], ma(function(i) {
    for (var n = -1; ++n < e; ) {
      var r = a[n];
      if (ot(r[0], this, i))
        return ot(r[1], this, i);
    }
  });
}
function TO(a, e, t) {
  var i = t.length;
  if (a == null)
    return !i;
  for (a = Object(a); i--; ) {
    var n = t[i], r = e[n], s = a[n];
    if (s === void 0 && !(n in a) || !r(s))
      return !1;
  }
  return !0;
}
function XH(a) {
  var e = ce(a);
  return function(t) {
    return TO(t, a, e);
  };
}
var JH = 1;
function RO(a) {
  return XH(ft(a, JH));
}
function OO(a, e) {
  return e == null || TO(a, e, ce(e));
}
function QH(a, e, t, i) {
  for (var n = -1, r = a == null ? 0 : a.length; ++n < r; ) {
    var s = a[n];
    e(i, s, t(s), a);
  }
  return i;
}
function MO(a) {
  return function(e, t, i) {
    for (var n = -1, r = Object(e), s = i(e), o = s.length; o--; ) {
      var d = s[a ? o : ++n];
      if (t(r[d], d, r) === !1)
        break;
    }
    return e;
  };
}
var Qy = MO();
function ti(a, e) {
  return a && Qy(a, e, ce);
}
function CO(a, e) {
  return function(t, i) {
    if (t == null)
      return t;
    if (!Ue(t))
      return a(t, i);
    for (var n = t.length, r = e ? n : -1, s = Object(t); (e ? r-- : ++r < n) && i(s[r], r, s) !== !1; )
      ;
    return t;
  };
}
var mn = CO(ti);
function aV(a, e, t, i) {
  return mn(a, function(n, r, s) {
    e(i, n, t(n), s);
  }), i;
}
function Sc(a, e) {
  return function(t, i) {
    var n = oa(t) ? QH : aV, r = e ? e() : {};
    return n(t, a, da(i), r);
  };
}
var eV = Object.prototype, tV = eV.hasOwnProperty, LO = Sc(function(a, e, t) {
  tV.call(a, t) ? ++a[t] : Ai(a, t, 1);
});
function IO(a, e) {
  var t = is(a);
  return e == null ? t : lO(t, e);
}
var iV = 8;
function qc(a, e, t) {
  e = t ? void 0 : e;
  var i = xi(a, iV, void 0, void 0, void 0, void 0, void 0, e);
  return i.placeholder = qc.placeholder, i;
}
qc.placeholder = {};
var nV = 16;
function Pc(a, e, t) {
  e = t ? void 0 : e;
  var i = xi(a, nV, void 0, void 0, void 0, void 0, void 0, e);
  return i.placeholder = Pc.placeholder, i;
}
Pc.placeholder = {};
var io = function() {
  return he.Date.now();
}, rV = "Expected a function", sV = Math.max, oV = Math.min;
function aw(a, e, t) {
  var i, n, r, s, o, d, c = 0, p = !1, m = !1, w = !0;
  if (typeof a != "function")
    throw new TypeError(rV);
  e = rt(e) || 0, Ba(t) && (p = !!t.leading, m = "maxWait" in t, r = m ? sV(rt(t.maxWait) || 0, e) : r, w = "trailing" in t ? !!t.trailing : w);
  function v(L) {
    var R = i, E = n;
    return i = n = void 0, c = L, s = a.apply(E, R), s;
  }
  function $(L) {
    return c = L, o = setTimeout(z, e), p ? v(L) : s;
  }
  function P(L) {
    var R = L - d, E = L - c, N = e - R;
    return m ? oV(N, r - E) : N;
  }
  function h(L) {
    var R = L - d, E = L - c;
    return d === void 0 || R >= e || R < 0 || m && E >= r;
  }
  function z() {
    var L = io();
    if (h(L))
      return b(L);
    o = setTimeout(z, P(L));
  }
  function b(L) {
    return o = void 0, w && i ? v(L) : (i = n = void 0, s);
  }
  function _() {
    o !== void 0 && clearTimeout(o), c = 0, i = d = n = o = void 0;
  }
  function S() {
    return o === void 0 ? s : b(io());
  }
  function A() {
    var L = io(), R = h(L);
    if (i = arguments, n = this, d = L, R) {
      if (o === void 0)
        return $(d);
      if (m)
        return clearTimeout(o), o = setTimeout(z, e), v(d);
    }
    return o === void 0 && (o = setTimeout(z, e)), s;
  }
  return A.cancel = _, A.flush = S, A;
}
function WO(a, e) {
  return a == null || a !== a ? e : a;
}
var FO = Object.prototype, dV = FO.hasOwnProperty, DO = ma(function(a, e) {
  a = Object(a);
  var t = -1, i = e.length, n = i > 2 ? e[2] : void 0;
  for (n && Be(e[0], e[1], n) && (i = 1); ++t < i; )
    for (var r = e[t], s = He(r), o = -1, d = s.length; ++o < d; ) {
      var c = s[o], p = a[c];
      (p === void 0 || _t(p, FO[c]) && !dV.call(a, c)) && (a[c] = r[c]);
    }
  return a;
});
function _f(a, e, t) {
  (t !== void 0 && !_t(a[e], t) || t === void 0 && !(e in a)) && Ai(a, e, t);
}
function te(a) {
  return Za(a) && Ue(a);
}
function $f(a, e) {
  if (!(e === "constructor" && typeof a[e] == "function") && e != "__proto__")
    return a[e];
}
function ew(a) {
  return ai(a, He(a));
}
function lV(a, e, t, i, n, r, s) {
  var o = $f(a, t), d = $f(e, t), c = s.get(d);
  if (c) {
    _f(a, t, c);
    return;
  }
  var p = r ? r(o, d, t + "", a, e, s) : void 0, m = p === void 0;
  if (m) {
    var w = oa(d), v = !w && vi(d), $ = !w && !v && ar(d);
    p = d, w || v || $ ? oa(o) ? p = o : te(o) ? p = Ze(o) : v ? (m = !1, p = uO(d, !0)) : $ ? (m = !1, p = gO(d, !0)) : p = [] : os(d) || en(d) ? (p = o, en(o) ? p = ew(o) : (!Ba(o) || Qt(o)) && (p = zO(d))) : m = !1;
  }
  m && (s.set(d, p), n(p, d, i, r, s), s.delete(d)), _f(a, t, p);
}
function Tc(a, e, t, i, n) {
  a !== e && Qy(e, function(r, s) {
    if (n || (n = new qt()), Ba(r))
      lV(a, e, s, t, Tc, i, n);
    else {
      var o = i ? i($f(a, s), r, s + "", a, e, n) : void 0;
      o === void 0 && (o = r), _f(a, s, o);
    }
  }, He);
}
function BO(a, e, t, i, n, r) {
  return Ba(a) && Ba(e) && (r.set(e, a), Tc(a, e, void 0, BO, r), r.delete(e)), a;
}
var tw = ss(function(a, e, t, i) {
  Tc(a, e, t, i);
}), NO = ma(function(a) {
  return a.push(void 0, BO), ot(tw, void 0, a);
}), cV = "Expected a function";
function UO(a, e, t) {
  if (typeof a != "function")
    throw new TypeError(cV);
  return setTimeout(function() {
    a.apply(void 0, t);
  }, e);
}
var HO = ma(function(a, e) {
  return UO(a, 1, e);
}), VO = ma(function(a, e, t) {
  return UO(a, rt(e) || 0, t);
});
function iw(a, e, t) {
  for (var i = -1, n = a == null ? 0 : a.length; ++i < n; )
    if (t(e, a[i]))
      return !0;
  return !1;
}
var uV = 200;
function Eo(a, e, t, i) {
  var n = -1, r = fc, s = !0, o = a.length, d = [], c = e.length;
  if (!o)
    return d;
  t && (e = Ka(e, dt(t))), i ? (r = iw, s = !1) : e.length >= uV && (r = fo, s = !1, e = new Gn(e));
  i:
    for (; ++n < o; ) {
      var p = a[n], m = t == null ? p : t(p);
      if (p = i || p !== 0 ? p : 0, s && m === m) {
        for (var w = c; w--; )
          if (e[w] === m)
            continue i;
        d.push(p);
      } else r(e, m, i) || d.push(p);
    }
  return d;
}
var KO = ma(function(a, e) {
  return te(a) ? Eo(a, xe(e, 1, te, !0)) : [];
});
function Qe(a) {
  var e = a == null ? 0 : a.length;
  return e ? a[e - 1] : void 0;
}
var GO = ma(function(a, e) {
  var t = Qe(e);
  return te(t) && (t = void 0), te(a) ? Eo(a, xe(e, 1, te, !0), da(t)) : [];
}), YO = ma(function(a, e) {
  var t = Qe(e);
  return te(t) && (t = void 0), te(a) ? Eo(a, xe(e, 1, te, !0), void 0, t) : [];
}), ZO = uc(function(a, e) {
  return a / e;
}, 1);
function XO(a, e, t) {
  var i = a == null ? 0 : a.length;
  return i ? (e = t || e === void 0 ? 1 : la(e), bt(a, e < 0 ? 0 : e, i)) : [];
}
function JO(a, e, t) {
  var i = a == null ? 0 : a.length;
  return i ? (e = t || e === void 0 ? 1 : la(e), e = i - e, bt(a, 0, e < 0 ? 0 : e)) : [];
}
function Rc(a, e, t, i) {
  for (var n = a.length, r = i ? n : -1; (i ? r-- : ++r < n) && e(a[r], r, a); )
    ;
  return t ? bt(a, i ? 0 : r, i ? r + 1 : n) : bt(a, i ? r + 1 : 0, i ? n : r);
}
function QO(a, e) {
  return a && a.length ? Rc(a, da(e), !0, !0) : [];
}
function a3(a, e) {
  return a && a.length ? Rc(a, da(e), !0) : [];
}
function ii(a) {
  return typeof a == "function" ? a : Ce;
}
function Cl(a, e) {
  var t = oa(a) ? kt : mn;
  return t(a, ii(e));
}
function pV(a, e) {
  for (var t = a == null ? 0 : a.length; t-- && e(a[t], t, a) !== !1; )
    ;
  return a;
}
var e3 = MO(!0);
function nw(a, e) {
  return a && e3(a, e, ce);
}
var t3 = CO(nw, !0);
function Ll(a, e) {
  var t = oa(a) ? pV : t3;
  return t(a, ii(e));
}
function i3(a, e, t) {
  a = ja(a), e = st(e);
  var i = a.length;
  t = t === void 0 ? i : tr(la(t), 0, i);
  var n = t;
  return t -= e.length, t >= 0 && a.slice(t, n) == e;
}
function mV(a, e) {
  return Ka(e, function(t) {
    return [t, a[t]];
  });
}
function gV(a) {
  var e = -1, t = Array(a.size);
  return a.forEach(function(i) {
    t[++e] = [i, i];
  }), t;
}
var zV = "[object Map]", fV = "[object Set]";
function n3(a) {
  return function(e) {
    var t = Pe(e);
    return t == zV ? Gy(e) : t == fV ? gV(e) : mV(e, a(e));
  };
}
var Il = n3(ce), Wl = n3(He), yV = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
}, wV = Ly(yV), r3 = /[&<>"']/g, hV = RegExp(r3.source);
function rw(a) {
  return a = ja(a), a && hV.test(a) ? a.replace(r3, wV) : a;
}
var s3 = /[\\^$.*+?()[\]{}|]/g, bV = RegExp(s3.source);
function o3(a) {
  return a = ja(a), a && bV.test(a) ? a.replace(s3, "\\$&") : a;
}
function d3(a, e) {
  for (var t = -1, i = a == null ? 0 : a.length; ++t < i; )
    if (!e(a[t], t, a))
      return !1;
  return !0;
}
function vV(a, e) {
  var t = !0;
  return mn(a, function(i, n, r) {
    return t = !!e(i, n, r), t;
  }), t;
}
function l3(a, e, t) {
  var i = oa(a) ? d3 : vV;
  return t && Be(a, e, t) && (e = void 0), i(a, da(e));
}
var kV = 4294967295;
function sw(a) {
  return a ? tr(la(a), 0, kV) : 0;
}
function _V(a, e, t, i) {
  var n = a.length;
  for (t = la(t), t < 0 && (t = -t > n ? 0 : n + t), i = i === void 0 || i > n ? n : la(i), i < 0 && (i += n), i = t > i ? 0 : sw(i); t < i; )
    a[t++] = e;
  return a;
}
function c3(a, e, t, i) {
  var n = a == null ? 0 : a.length;
  return n ? (t && typeof t != "number" && Be(a, e, t) && (t = 0, i = n), _V(a, e, t, i)) : [];
}
function u3(a, e) {
  var t = [];
  return mn(a, function(i, n, r) {
    e(i, n, r) && t.push(i);
  }), t;
}
function p3(a, e) {
  var t = oa(a) ? pn : u3;
  return t(a, da(e));
}
function m3(a) {
  return function(e, t, i) {
    var n = Object(e);
    if (!Ue(e)) {
      var r = da(t);
      e = ce(e), t = function(o) {
        return r(n[o], o, n);
      };
    }
    var s = a(e, t, i);
    return s > -1 ? n[r ? e[s] : s] : void 0;
  };
}
var $V = Math.max;
function ow(a, e, t) {
  var i = a == null ? 0 : a.length;
  if (!i)
    return -1;
  var n = t == null ? 0 : la(t);
  return n < 0 && (n = $V(i + n, 0)), zc(a, da(e), n);
}
var g3 = m3(ow);
function z3(a, e, t) {
  var i;
  return t(a, function(n, r, s) {
    if (e(n, r, s))
      return i = r, !1;
  }), i;
}
function f3(a, e) {
  return z3(a, da(e), ti);
}
var jV = Math.max, xV = Math.min;
function dw(a, e, t) {
  var i = a == null ? 0 : a.length;
  if (!i)
    return -1;
  var n = i - 1;
  return t !== void 0 && (n = la(t), n = t < 0 ? jV(i + n, 0) : xV(n, i - 1)), zc(a, da(e), n, !0);
}
var y3 = m3(dw);
function w3(a, e) {
  return z3(a, da(e), nw);
}
function Fl(a) {
  return a && a.length ? a[0] : void 0;
}
function h3(a, e) {
  var t = -1, i = Ue(a) ? Array(a.length) : [];
  return mn(a, function(n, r, s) {
    i[++t] = e(n, r, s);
  }), i;
}
function So(a, e) {
  var t = oa(a) ? Ka : h3;
  return t(a, da(e));
}
function b3(a, e) {
  return xe(So(a, e), 1);
}
var AV = 1 / 0;
function v3(a, e) {
  return xe(So(a, e), AV);
}
function k3(a, e, t) {
  return t = t === void 0 ? 1 : la(t), xe(So(a, e), t);
}
var EV = 1 / 0;
function lw(a) {
  var e = a == null ? 0 : a.length;
  return e ? xe(a, EV) : [];
}
const SV = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: lw
}, Symbol.toStringTag, { value: "Module" }));
function _3(a, e) {
  var t = a == null ? 0 : a.length;
  return t ? (e = e === void 0 ? 1 : la(e), xe(a, e)) : [];
}
var qV = 512;
function $3(a) {
  return xi(a, qV);
}
var j3 = Fy("floor"), PV = "Expected a function", TV = 8, RV = 32, OV = 128, MV = 256;
function x3(a) {
  return qi(function(e) {
    var t = e.length, i = t, n = wt.prototype.thru;
    for (a && e.reverse(); i--; ) {
      var r = e[i];
      if (typeof r != "function")
        throw new TypeError(PV);
      if (n && !s && gl(r) == "wrapper")
        var s = new wt([], !0);
    }
    for (i = s ? i : t; ++i < t; ) {
      r = e[i];
      var o = gl(r), d = o == "wrapper" ? jy(r) : void 0;
      d && ff(d[0]) && d[1] == (OV | TV | RV | MV) && !d[4].length && d[9] == 1 ? s = s[gl(d[0])].apply(s, d[3]) : s = r.length == 1 && ff(r) ? s[o]() : s.thru(r);
    }
    return function() {
      var c = arguments, p = c[0];
      if (s && c.length == 1 && oa(p))
        return s.plant(p).value();
      for (var m = 0, w = t ? e[m].apply(this, c) : p; ++m < t; )
        w = e[m].call(this, w);
      return w;
    };
  });
}
var A3 = x3(), E3 = x3(!0);
function S3(a, e) {
  return a == null ? a : Qy(a, ii(e), He);
}
function q3(a, e) {
  return a == null ? a : e3(a, ii(e), He);
}
function P3(a, e) {
  return a && ti(a, ii(e));
}
function T3(a, e) {
  return a && nw(a, ii(e));
}
function R3(a) {
  for (var e = -1, t = a == null ? 0 : a.length, i = {}; ++e < t; ) {
    var n = a[e];
    i[n[0]] = n[1];
  }
  return i;
}
function Oc(a, e) {
  return pn(e, function(t) {
    return Qt(a[t]);
  });
}
function O3(a) {
  return a == null ? [] : Oc(a, ce(a));
}
function M3(a) {
  return a == null ? [] : Oc(a, He(a));
}
var CV = Object.prototype, LV = CV.hasOwnProperty, C3 = Sc(function(a, e, t) {
  LV.call(a, t) ? a[t].push(e) : Ai(a, t, [e]);
});
function cw(a, e) {
  return a > e;
}
function Mc(a) {
  return function(e, t) {
    return typeof e == "string" && typeof t == "string" || (e = rt(e), t = rt(t)), a(e, t);
  };
}
var L3 = Mc(cw), I3 = Mc(function(a, e) {
  return a >= e;
}), IV = Object.prototype, WV = IV.hasOwnProperty;
function FV(a, e) {
  return a != null && WV.call(a, e);
}
function W3(a, e) {
  return a != null && SO(a, e, FV);
}
var DV = Math.max, BV = Math.min;
function NV(a, e, t) {
  return a >= BV(e, t) && a < DV(e, t);
}
function F3(a, e, t) {
  return e = Jt(e), t === void 0 ? (t = e, e = 0) : t = Jt(t), a = rt(a), NV(a, e, t);
}
var UV = "[object String]";
function qo(a) {
  return typeof a == "string" || !oa(a) && Za(a) && Ne(a) == UV;
}
function uw(a, e) {
  return Ka(e, function(t) {
    return a[t];
  });
}
function ir(a) {
  return a == null ? [] : uw(a, ce(a));
}
var HV = Math.max;
function D3(a, e, t, i) {
  a = Ue(a) ? a : ir(a), t = t && !i ? la(t) : 0;
  var n = a.length;
  return t < 0 && (t = HV(n + t, 0)), qo(a) ? t <= n && a.indexOf(e, t) > -1 : !!n && ns(a, e, t) > -1;
}
var VV = Math.max;
function B3(a, e, t) {
  var i = a == null ? 0 : a.length;
  if (!i)
    return -1;
  var n = t == null ? 0 : la(t);
  return n < 0 && (n = VV(i + n, 0)), ns(a, e, n);
}
function N3(a) {
  var e = a == null ? 0 : a.length;
  return e ? bt(a, 0, -1) : [];
}
var KV = Math.min;
function pw(a, e, t) {
  for (var i = t ? iw : fc, n = a[0].length, r = a.length, s = r, o = Array(r), d = 1 / 0, c = []; s--; ) {
    var p = a[s];
    s && e && (p = Ka(p, dt(e))), d = KV(p.length, d), o[s] = !t && (e || n >= 120 && p.length >= 120) ? new Gn(s && p) : void 0;
  }
  p = a[0];
  var m = -1, w = o[0];
  i:
    for (; ++m < n && c.length < d; ) {
      var v = p[m], $ = e ? e(v) : v;
      if (v = t || v !== 0 ? v : 0, !(w ? fo(w, $) : i(c, $, t))) {
        for (s = r; --s; ) {
          var P = o[s];
          if (!(P ? fo(P, $) : i(a[s], $, t)))
            continue i;
        }
        w && w.push($), c.push(v);
      }
    }
  return c;
}
function mw(a) {
  return te(a) ? a : [];
}
var U3 = ma(function(a) {
  var e = Ka(a, mw);
  return e.length && e[0] === a[0] ? pw(e) : [];
}), H3 = ma(function(a) {
  var e = Qe(a), t = Ka(a, mw);
  return e === Qe(t) ? e = void 0 : t.pop(), t.length && t[0] === a[0] ? pw(t, da(e)) : [];
}), V3 = ma(function(a) {
  var e = Qe(a), t = Ka(a, mw);
  return e = typeof e == "function" ? e : void 0, e && t.pop(), t.length && t[0] === a[0] ? pw(t, void 0, e) : [];
});
function GV(a, e, t, i) {
  return ti(a, function(n, r, s) {
    e(i, t(n), r, s);
  }), i;
}
function K3(a, e) {
  return function(t, i) {
    return GV(t, a, e(i), {});
  };
}
var YV = Object.prototype, ZV = YV.toString, G3 = K3(function(a, e, t) {
  e != null && typeof e.toString != "function" && (e = ZV.call(e)), a[e] = t;
}, gc(Ce)), Y3 = Object.prototype, XV = Y3.hasOwnProperty, JV = Y3.toString, Z3 = K3(function(a, e, t) {
  e != null && typeof e.toString != "function" && (e = JV.call(e)), XV.call(a, e) ? a[e].push(t) : a[e] = [t];
}, da);
function X3(a, e) {
  return e.length < 2 ? a : er(a, bt(e, 0, -1));
}
function Po(a, e, t) {
  e = ln(e, a), a = X3(a, e);
  var i = a == null ? a : a[ei(Qe(e))];
  return i == null ? void 0 : ot(i, a, t);
}
var J3 = ma(Po), Q3 = ma(function(a, e, t) {
  var i = -1, n = typeof e == "function", r = Ue(a) ? Array(a.length) : [];
  return mn(a, function(s) {
    r[++i] = n ? ot(e, s, t) : Po(s, e, t);
  }), r;
}), QV = "[object ArrayBuffer]";
function aK(a) {
  return Za(a) && Ne(a) == QV;
}
var j1 = ht && ht.isArrayBuffer, aM = j1 ? dt(j1) : aK, eK = "[object Boolean]";
function eM(a) {
  return a === !0 || a === !1 || Za(a) && Ne(a) == eK;
}
var tK = "[object Date]";
function iK(a) {
  return Za(a) && Ne(a) == tK;
}
var x1 = ht && ht.isDate, tM = x1 ? dt(x1) : iK;
function iM(a) {
  return Za(a) && a.nodeType === 1 && !os(a);
}
var nK = "[object Map]", rK = "[object Set]", sK = Object.prototype, oK = sK.hasOwnProperty;
function nM(a) {
  if (a == null)
    return !0;
  if (Ue(a) && (oa(a) || typeof a == "string" || typeof a.splice == "function" || vi(a) || ar(a) || en(a)))
    return !a.length;
  var e = Pe(a);
  if (e == nK || e == rK)
    return !a.size;
  if ($o(a))
    return !Sy(a).length;
  for (var t in a)
    if (oK.call(a, t))
      return !1;
  return !0;
}
function rM(a, e) {
  return Ao(a, e);
}
function sM(a, e, t) {
  t = typeof t == "function" ? t : void 0;
  var i = t ? t(a, e) : void 0;
  return i === void 0 ? Ao(a, e, void 0, t) : !!i;
}
var dK = he.isFinite;
function oM(a) {
  return typeof a == "number" && dK(a);
}
function gw(a) {
  return typeof a == "number" && a == la(a);
}
function dM(a, e) {
  return a === e || Yy(a, e, Zy(e));
}
function lM(a, e, t) {
  return t = typeof t == "function" ? t : void 0, Yy(a, e, Zy(e), t);
}
var lK = "[object Number]";
function zw(a) {
  return typeof a == "number" || Za(a) && Ne(a) == lK;
}
function cM(a) {
  return zw(a) && a != +a;
}
var cK = ml ? Qt : wc, uK = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.";
function uM(a) {
  if (cK(a))
    throw new Error(uK);
  return fR(a);
}
function pM(a) {
  return a == null;
}
function mM(a) {
  return a === null;
}
var pK = "[object RegExp]";
function mK(a) {
  return Za(a) && Ne(a) == pK;
}
var A1 = ht && ht.isRegExp, Cc = A1 ? dt(A1) : mK, E1 = 9007199254740991;
function gM(a) {
  return gw(a) && a >= -E1 && a <= E1;
}
function zM(a) {
  return a === void 0;
}
var gK = "[object WeakMap]";
function fM(a) {
  return Za(a) && Pe(a) == gK;
}
var zK = "[object WeakSet]";
function yM(a) {
  return Za(a) && Ne(a) == zK;
}
var fK = 1;
function wM(a) {
  return da(typeof a == "function" ? a : ft(a, fK));
}
var yK = Array.prototype, wK = yK.join;
function hM(a, e) {
  return a == null ? "" : wK.call(a, e);
}
var bM = ls(function(a, e, t) {
  return a + (t ? "-" : "") + e.toLowerCase();
}), vM = Sc(function(a, e, t) {
  Ai(a, t, e);
});
function hK(a, e, t) {
  for (var i = t + 1; i--; )
    if (a[i] === e)
      return i;
  return i;
}
var bK = Math.max, vK = Math.min;
function kM(a, e, t) {
  var i = a == null ? 0 : a.length;
  if (!i)
    return -1;
  var n = i;
  return t !== void 0 && (n = la(t), n = n < 0 ? bK(i + n, 0) : vK(n, i - 1)), e === e ? hK(a, e, n) : zc(a, _R, n, !0);
}
var _M = ls(function(a, e, t) {
  return a + (t ? " " : "") + e.toLowerCase();
}), $M = UR("toLowerCase");
function fw(a, e) {
  return a < e;
}
var jM = Mc(fw), xM = Mc(function(a, e) {
  return a <= e;
});
function AM(a, e) {
  var t = {};
  return e = da(e), ti(a, function(i, n, r) {
    Ai(t, e(i, n, r), i);
  }), t;
}
function EM(a, e) {
  var t = {};
  return e = da(e), ti(a, function(i, n, r) {
    Ai(t, n, e(i, n, r));
  }), t;
}
var kK = 1;
function SM(a) {
  return EO(ft(a, kK));
}
var _K = 1;
function qM(a, e) {
  return qO(a, ft(e, _K));
}
function Lc(a, e, t) {
  for (var i = -1, n = a.length; ++i < n; ) {
    var r = a[i], s = e(r);
    if (s != null && (o === void 0 ? s === s && !Je(s) : t(s, o)))
      var o = s, d = r;
  }
  return d;
}
function PM(a) {
  return a && a.length ? Lc(a, Ce, cw) : void 0;
}
function TM(a, e) {
  return a && a.length ? Lc(a, da(e), cw) : void 0;
}
function yw(a, e) {
  for (var t, i = -1, n = a.length; ++i < n; ) {
    var r = e(a[i]);
    r !== void 0 && (t = t === void 0 ? r : t + r);
  }
  return t;
}
var $K = NaN;
function RM(a, e) {
  var t = a == null ? 0 : a.length;
  return t ? yw(a, e) / t : $K;
}
function OM(a) {
  return RM(a, Ce);
}
function MM(a, e) {
  return RM(a, da(e));
}
var CM = ss(function(a, e, t) {
  Tc(a, e, t);
}), LM = ma(function(a, e) {
  return function(t) {
    return Po(t, a, e);
  };
}), IM = ma(function(a, e) {
  return function(t) {
    return Po(a, t, e);
  };
});
function WM(a) {
  return a && a.length ? Lc(a, Ce, fw) : void 0;
}
function FM(a, e) {
  return a && a.length ? Lc(a, da(e), fw) : void 0;
}
function ww(a, e, t) {
  var i = ce(e), n = Oc(e, i), r = !(Ba(t) && "chain" in t) || !!t.chain, s = Qt(a);
  return kt(n, function(o) {
    var d = e[o];
    a[o] = d, s && (a.prototype[o] = function() {
      var c = this.__chain__;
      if (r || c) {
        var p = a(this.__wrapped__), m = p.__actions__ = Ze(this.__actions__);
        return m.push({ func: d, args: arguments, thisArg: a }), p.__chain__ = c, p;
      }
      return d.apply(a, cn([this.value()], arguments));
    });
  }), a;
}
var DM = uc(function(a, e) {
  return a * e;
}, 1), jK = "Expected a function";
function cs(a) {
  if (typeof a != "function")
    throw new TypeError(jK);
  return function() {
    var e = arguments;
    switch (e.length) {
      case 0:
        return !a.call(this);
      case 1:
        return !a.call(this, e[0]);
      case 2:
        return !a.call(this, e[0], e[1]);
      case 3:
        return !a.call(this, e[0], e[1], e[2]);
    }
    return !a.apply(this, e);
  };
}
function xK(a) {
  for (var e, t = []; !(e = a.next()).done; )
    t.push(e.value);
  return t;
}
var AK = "[object Map]", EK = "[object Set]", im = Oe ? Oe.iterator : void 0;
function hw(a) {
  if (!a)
    return [];
  if (Ue(a))
    return qo(a) ? Rt(a) : Ze(a);
  if (im && a[im])
    return xK(a[im]());
  var e = Pe(a), t = e == AK ? Gy : e == EK ? Ac : ir;
  return t(a);
}
function jf() {
  this.__values__ === void 0 && (this.__values__ = hw(this.value()));
  var a = this.__index__ >= this.__values__.length, e = a ? void 0 : this.__values__[this.__index__++];
  return { done: a, value: e };
}
function BM(a, e) {
  var t = a.length;
  if (t)
    return e += e < 0 ? t : 0, ji(e, t) ? a[e] : void 0;
}
function NM(a, e) {
  return a && a.length ? BM(a, la(e)) : void 0;
}
function UM(a) {
  return a = la(a), ma(function(e) {
    return BM(e, a);
  });
}
function bw(a, e) {
  return e = ln(e, a), a = X3(a, e), a == null || delete a[ei(Qe(e))];
}
function SK(a) {
  return os(a) ? void 0 : a;
}
var qK = 1, PK = 2, TK = 4, HM = qi(function(a, e) {
  var t = {};
  if (a == null)
    return t;
  var i = !1;
  e = Ka(e, function(r) {
    return r = ln(r, a), i || (i = r.length > 1), r;
  }), ai(a, Ny(a), t), i && (t = ft(t, qK | PK | TK, SK));
  for (var n = e.length; n--; )
    bw(t, e[n]);
  return t;
});
function To(a, e, t, i) {
  if (!Ba(a))
    return a;
  e = ln(e, a);
  for (var n = -1, r = e.length, s = r - 1, o = a; o != null && ++n < r; ) {
    var d = ei(e[n]), c = t;
    if (d === "__proto__" || d === "constructor" || d === "prototype")
      return a;
    if (n != s) {
      var p = o[d];
      c = i ? i(p, d, o) : void 0, c === void 0 && (c = Ba(p) ? p : ji(e[n + 1]) ? [] : {});
    }
    ko(o, d, c), o = o[d];
  }
  return a;
}
function VM(a, e, t) {
  for (var i = -1, n = e.length, r = {}; ++i < n; ) {
    var s = e[i], o = er(a, s);
    t(o, s) && To(r, ln(s, a), o);
  }
  return r;
}
function vw(a, e) {
  if (a == null)
    return {};
  var t = Ka(Ny(a), function(i) {
    return [i];
  });
  return e = da(e), VM(a, t, function(i, n) {
    return e(i, n[0]);
  });
}
function KM(a, e) {
  return vw(a, cs(da(e)));
}
function GM(a) {
  return Oy(2, a);
}
function RK(a, e) {
  var t = a.length;
  for (a.sort(e); t--; )
    a[t] = a[t].value;
  return a;
}
function YM(a, e) {
  if (a !== e) {
    var t = a !== void 0, i = a === null, n = a === a, r = Je(a), s = e !== void 0, o = e === null, d = e === e, c = Je(e);
    if (!o && !c && !r && a > e || r && s && d && !o && !c || i && s && d || !t && d || !n)
      return 1;
    if (!i && !r && !c && a < e || c && t && n && !i && !r || o && t && n || !s && n || !d)
      return -1;
  }
  return 0;
}
function OK(a, e, t) {
  for (var i = -1, n = a.criteria, r = e.criteria, s = n.length, o = t.length; ++i < s; ) {
    var d = YM(n[i], r[i]);
    if (d) {
      if (i >= o)
        return d;
      var c = t[i];
      return d * (c == "desc" ? -1 : 1);
    }
  }
  return a.index - e.index;
}
function ZM(a, e, t) {
  e.length ? e = Ka(e, function(r) {
    return oa(r) ? function(s) {
      return er(s, r.length === 1 ? r[0] : r);
    } : r;
  }) : e = [Ce];
  var i = -1;
  e = Ka(e, dt(da));
  var n = h3(a, function(r, s, o) {
    var d = Ka(e, function(c) {
      return c(r);
    });
    return { criteria: d, index: ++i, value: r };
  });
  return RK(n, function(r, s) {
    return OK(r, s, t);
  });
}
function XM(a, e, t, i) {
  return a == null ? [] : (oa(e) || (e = e == null ? [] : [e]), t = i ? void 0 : t, oa(t) || (t = t == null ? [] : [t]), ZM(a, e, t));
}
function kw(a) {
  return qi(function(e) {
    return e = Ka(e, dt(da)), ma(function(t) {
      var i = this;
      return a(e, function(n) {
        return ot(n, i, t);
      });
    });
  });
}
var JM = kw(Ka), MK = ma, CK = Math.min, QM = MK(function(a, e) {
  e = e.length == 1 && oa(e[0]) ? Ka(e[0], dt(da)) : Ka(xe(e, 1), dt(da));
  var t = e.length;
  return ma(function(i) {
    for (var n = -1, r = CK(i.length, t); ++n < r; )
      i[n] = e[n].call(this, i[n]);
    return ot(a, this, i);
  });
}), aC = kw(d3), eC = kw(Ky), LK = 9007199254740991, IK = Math.floor;
function xf(a, e) {
  var t = "";
  if (!a || e < 1 || e > LK)
    return t;
  do
    e % 2 && (t += a), e = IK(e / 2), e && (a += a);
  while (e);
  return t;
}
var WK = Xy("length"), tC = "\\ud800-\\udfff", FK = "\\u0300-\\u036f", DK = "\\ufe20-\\ufe2f", BK = "\\u20d0-\\u20ff", NK = FK + DK + BK, UK = "\\ufe0e\\ufe0f", HK = "[" + tC + "]", Af = "[" + NK + "]", Ef = "\\ud83c[\\udffb-\\udfff]", VK = "(?:" + Af + "|" + Ef + ")", iC = "[^" + tC + "]", nC = "(?:\\ud83c[\\udde6-\\uddff]){2}", rC = "[\\ud800-\\udbff][\\udc00-\\udfff]", KK = "\\u200d", sC = VK + "?", oC = "[" + UK + "]?", GK = "(?:" + KK + "(?:" + [iC, nC, rC].join("|") + ")" + oC + sC + ")*", YK = oC + sC + GK, ZK = "(?:" + [iC + Af + "?", Af, nC, rC, HK].join("|") + ")", S1 = RegExp(Ef + "(?=" + Ef + ")|" + ZK + YK, "g");
function XK(a) {
  for (var e = S1.lastIndex = 0; S1.test(a); )
    ++e;
  return e;
}
function us(a) {
  return ds(a) ? XK(a) : WK(a);
}
var JK = Math.ceil;
function Dl(a, e) {
  e = e === void 0 ? " " : st(e);
  var t = e.length;
  if (t < 2)
    return t ? xf(e, a) : e;
  var i = xf(e, JK(a / us(e)));
  return ds(e) ? un(Rt(i), 0, a).join("") : i.slice(0, a);
}
var QK = Math.ceil, aG = Math.floor;
function dC(a, e, t) {
  a = ja(a), e = la(e);
  var i = e ? us(a) : 0;
  if (!e || i >= e)
    return a;
  var n = (e - i) / 2;
  return Dl(aG(n), t) + a + Dl(QK(n), t);
}
function lC(a, e, t) {
  a = ja(a), e = la(e);
  var i = e ? us(a) : 0;
  return e && i < e ? a + Dl(e - i, t) : a;
}
function cC(a, e, t) {
  a = ja(a), e = la(e);
  var i = e ? us(a) : 0;
  return e && i < e ? Dl(e - i, t) + a : a;
}
var eG = /^\s+/, tG = he.parseInt;
function uC(a, e, t) {
  return t || e == null ? e = 0 : e && (e = +e), tG(ja(a).replace(eG, ""), e || 0);
}
var iG = 32, Ro = ma(function(a, e) {
  var t = an(e, rs(Ro));
  return xi(a, iG, void 0, e, t);
});
Ro.placeholder = {};
var nG = 64, Ic = ma(function(a, e) {
  var t = an(e, rs(Ic));
  return xi(a, nG, void 0, e, t);
});
Ic.placeholder = {};
var pC = Sc(function(a, e, t) {
  a[t ? 0 : 1].push(e);
}, function() {
  return [[], []];
});
function rG(a, e) {
  return VM(a, e, function(t, i) {
    return Ec(a, i);
  });
}
var mC = qi(function(a, e) {
  return a == null ? {} : rG(a, e);
});
function Sf(a) {
  for (var e, t = this; t instanceof pc; ) {
    var i = bR(t);
    i.__index__ = 0, i.__values__ = void 0, e ? n.__wrapped__ = i : e = i;
    var n = i;
    t = t.__wrapped__;
  }
  return n.__wrapped__ = a, e;
}
function gC(a) {
  return function(e) {
    return a == null ? void 0 : er(a, e);
  };
}
function sG(a, e, t, i) {
  for (var n = t - 1, r = a.length; ++n < r; )
    if (i(a[n], e))
      return n;
  return -1;
}
var oG = Array.prototype, q1 = oG.splice;
function _w(a, e, t, i) {
  var n = i ? sG : ns, r = -1, s = e.length, o = a;
  for (a === e && (e = Ze(e)), t && (o = Ka(a, dt(t))); ++r < s; )
    for (var d = 0, c = e[r], p = t ? t(c) : c; (d = n(o, p, d, i)) > -1; )
      o !== a && q1.call(o, d, 1), q1.call(a, d, 1);
  return a;
}
function $w(a, e) {
  return a && a.length && e && e.length ? _w(a, e) : a;
}
var zC = ma($w);
function fC(a, e, t) {
  return a && a.length && e && e.length ? _w(a, e, da(t)) : a;
}
function yC(a, e, t) {
  return a && a.length && e && e.length ? _w(a, e, void 0, t) : a;
}
var dG = Array.prototype, lG = dG.splice;
function wC(a, e) {
  for (var t = a ? e.length : 0, i = t - 1; t--; ) {
    var n = e[t];
    if (t == i || n !== r) {
      var r = n;
      ji(n) ? lG.call(a, n, 1) : bw(a, n);
    }
  }
  return a;
}
var hC = qi(function(a, e) {
  var t = a == null ? 0 : a.length, i = Py(a, e);
  return wC(a, Ka(e, function(n) {
    return ji(n, t) ? +n : n;
  }).sort(YM)), i;
}), cG = Math.floor, uG = Math.random;
function jw(a, e) {
  return a + cG(uG() * (e - a + 1));
}
var pG = parseFloat, mG = Math.min, gG = Math.random;
function bC(a, e, t) {
  if (t && typeof t != "boolean" && Be(a, e, t) && (e = t = void 0), t === void 0 && (typeof e == "boolean" ? (t = e, e = void 0) : typeof a == "boolean" && (t = a, a = void 0)), a === void 0 && e === void 0 ? (a = 0, e = 1) : (a = Jt(a), e === void 0 ? (e = a, a = 0) : e = Jt(e)), a > e) {
    var i = a;
    a = e, e = i;
  }
  if (t || a % 1 || e % 1) {
    var n = gG();
    return mG(a + n * (e - a + pG("1e-" + ((n + "").length - 1))), e);
  }
  return jw(a, e);
}
var zG = Math.ceil, fG = Math.max;
function yG(a, e, t, i) {
  for (var n = -1, r = fG(zG((e - a) / (t || 1)), 0), s = Array(r); r--; )
    s[i ? r : ++n] = a, a += t;
  return s;
}
function vC(a) {
  return function(e, t, i) {
    return i && typeof i != "number" && Be(e, t, i) && (t = i = void 0), e = Jt(e), t === void 0 ? (t = e, e = 0) : t = Jt(t), i = i === void 0 ? e < t ? 1 : -1 : Jt(i), yG(e, t, i, a);
  };
}
var kC = vC(), _C = vC(!0), wG = 256, $C = qi(function(a, e) {
  return xi(a, wG, void 0, void 0, void 0, e);
});
function jC(a, e, t, i, n) {
  return n(a, function(r, s, o) {
    t = i ? (i = !1, r) : e(t, r, s, o);
  }), t;
}
function xC(a, e, t) {
  var i = oa(a) ? Cy : jC, n = arguments.length < 3;
  return i(a, da(e), t, n, mn);
}
function hG(a, e, t, i) {
  var n = a == null ? 0 : a.length;
  for (i && n && (t = a[--n]); n--; )
    t = e(t, a[n], n, a);
  return t;
}
function AC(a, e, t) {
  var i = oa(a) ? hG : jC, n = arguments.length < 3;
  return i(a, da(e), t, n, t3);
}
function EC(a, e) {
  var t = oa(a) ? pn : u3;
  return t(a, cs(da(e)));
}
function SC(a, e) {
  var t = [];
  if (!(a && a.length))
    return t;
  var i = -1, n = [], r = a.length;
  for (e = da(e); ++i < r; ) {
    var s = a[i];
    e(s, i, a) && (t.push(s), n.push(i));
  }
  return wC(a, n), t;
}
function qC(a, e, t) {
  return (t ? Be(a, e, t) : e === void 0) ? e = 1 : e = la(e), xf(ja(a), e);
}
function PC() {
  var a = arguments, e = ja(a[0]);
  return a.length < 3 ? e : e.replace(a[1], a[2]);
}
var bG = "Expected a function";
function TC(a, e) {
  if (typeof a != "function")
    throw new TypeError(bG);
  return e = e === void 0 ? e : la(e), ma(a, e);
}
function RC(a, e, t) {
  e = ln(e, a);
  var i = -1, n = e.length;
  for (n || (n = 1, a = void 0); ++i < n; ) {
    var r = a == null ? void 0 : a[ei(e[i])];
    r === void 0 && (i = n, r = t), a = Qt(r) ? r.call(a) : r;
  }
  return a;
}
var vG = Array.prototype, kG = vG.reverse;
function Bl(a) {
  return a == null ? a : kG.call(a);
}
var OC = Fy("round");
function MC(a) {
  var e = a.length;
  return e ? a[jw(0, e - 1)] : void 0;
}
function _G(a) {
  return MC(ir(a));
}
function CC(a) {
  var e = oa(a) ? MC : _G;
  return e(a);
}
function Wc(a, e) {
  var t = -1, i = a.length, n = i - 1;
  for (e = e === void 0 ? i : e; ++t < e; ) {
    var r = jw(t, n), s = a[r];
    a[r] = a[t], a[t] = s;
  }
  return a.length = e, a;
}
function $G(a, e) {
  return Wc(Ze(a), tr(e, 0, a.length));
}
function jG(a, e) {
  var t = ir(a);
  return Wc(t, tr(e, 0, t.length));
}
function LC(a, e, t) {
  (t ? Be(a, e, t) : e === void 0) ? e = 1 : e = la(e);
  var i = oa(a) ? $G : jG;
  return i(a, e);
}
function IC(a, e, t) {
  return a == null ? a : To(a, e, t);
}
function WC(a, e, t, i) {
  return i = typeof i == "function" ? i : void 0, a == null ? a : To(a, e, t, i);
}
function xG(a) {
  return Wc(Ze(a));
}
function AG(a) {
  return Wc(ir(a));
}
function FC(a) {
  var e = oa(a) ? xG : AG;
  return e(a);
}
var EG = "[object Map]", SG = "[object Set]";
function DC(a) {
  if (a == null)
    return 0;
  if (Ue(a))
    return qo(a) ? us(a) : a.length;
  var e = Pe(a);
  return e == EG || e == SG ? a.size : Sy(a).length;
}
function BC(a, e, t) {
  var i = a == null ? 0 : a.length;
  return i ? (t && typeof t != "number" && Be(a, e, t) ? (e = 0, t = i) : (e = e == null ? 0 : la(e), t = t === void 0 ? i : la(t)), bt(a, e, t)) : [];
}
var NC = ls(function(a, e, t) {
  return a + (t ? "_" : "") + e.toLowerCase();
});
function qG(a, e) {
  var t;
  return mn(a, function(i, n, r) {
    return t = e(i, n, r), !t;
  }), !!t;
}
function UC(a, e, t) {
  var i = oa(a) ? Ky : qG;
  return t && Be(a, e, t) && (e = void 0), i(a, da(e));
}
var HC = ma(function(a, e) {
  if (a == null)
    return [];
  var t = e.length;
  return t > 1 && Be(a, e[0], e[1]) ? e = [] : t > 2 && Be(e[0], e[1], e[2]) && (e = [e[0]]), ZM(a, xe(e, 1), []);
}), PG = 4294967295, TG = PG - 1, RG = Math.floor, OG = Math.min;
function xw(a, e, t, i) {
  var n = 0, r = a == null ? 0 : a.length;
  if (r === 0)
    return 0;
  e = t(e);
  for (var s = e !== e, o = e === null, d = Je(e), c = e === void 0; n < r; ) {
    var p = RG((n + r) / 2), m = t(a[p]), w = m !== void 0, v = m === null, $ = m === m, P = Je(m);
    if (s)
      var h = i || $;
    else c ? h = $ && (i || w) : o ? h = $ && w && (i || !v) : d ? h = $ && w && !v && (i || !P) : v || P ? h = !1 : h = i ? m <= e : m < e;
    h ? n = p + 1 : r = p;
  }
  return OG(r, TG);
}
var MG = 4294967295, CG = MG >>> 1;
function Fc(a, e, t) {
  var i = 0, n = a == null ? i : a.length;
  if (typeof e == "number" && e === e && n <= CG) {
    for (; i < n; ) {
      var r = i + n >>> 1, s = a[r];
      s !== null && !Je(s) && (t ? s <= e : s < e) ? i = r + 1 : n = r;
    }
    return n;
  }
  return xw(a, e, Ce, t);
}
function VC(a, e) {
  return Fc(a, e);
}
function KC(a, e, t) {
  return xw(a, e, da(t));
}
function GC(a, e) {
  var t = a == null ? 0 : a.length;
  if (t) {
    var i = Fc(a, e);
    if (i < t && _t(a[i], e))
      return i;
  }
  return -1;
}
function YC(a, e) {
  return Fc(a, e, !0);
}
function ZC(a, e, t) {
  return xw(a, e, da(t), !0);
}
function XC(a, e) {
  var t = a == null ? 0 : a.length;
  if (t) {
    var i = Fc(a, e, !0) - 1;
    if (_t(a[i], e))
      return i;
  }
  return -1;
}
function JC(a, e) {
  for (var t = -1, i = a.length, n = 0, r = []; ++t < i; ) {
    var s = a[t], o = e ? e(s) : s;
    if (!t || !_t(o, d)) {
      var d = o;
      r[n++] = s === 0 ? 0 : s;
    }
  }
  return r;
}
function QC(a) {
  return a && a.length ? JC(a) : [];
}
function aL(a, e) {
  return a && a.length ? JC(a, da(e)) : [];
}
var LG = 4294967295;
function eL(a, e, t) {
  return t && typeof t != "number" && Be(a, e, t) && (e = t = void 0), t = t === void 0 ? LG : t >>> 0, t ? (a = ja(a), a && (typeof e == "string" || e != null && !Cc(e)) && (e = st(e), !e && ds(a)) ? un(Rt(a), 0, t) : a.split(e, t)) : [];
}
var IG = "Expected a function", WG = Math.max;
function tL(a, e) {
  if (typeof a != "function")
    throw new TypeError(IG);
  return e = e == null ? 0 : WG(la(e), 0), ma(function(t) {
    var i = t[e], n = un(t, 0, e);
    return i && cn(n, i), ot(a, this, n);
  });
}
var iL = ls(function(a, e, t) {
  return a + (t ? " " : "") + jc(e);
});
function nL(a, e, t) {
  return a = ja(a), t = t == null ? 0 : tr(la(t), 0, a.length), e = st(e), a.slice(t, t + e.length) == e;
}
function rL() {
  return {};
}
function sL() {
  return "";
}
function oL() {
  return !0;
}
var dL = uc(function(a, e) {
  return a - e;
}, 0);
function lL(a) {
  return a && a.length ? yw(a, Ce) : 0;
}
function cL(a, e) {
  return a && a.length ? yw(a, da(e)) : 0;
}
function uL(a) {
  var e = a == null ? 0 : a.length;
  return e ? bt(a, 1, e) : [];
}
function pL(a, e, t) {
  return a && a.length ? (e = t || e === void 0 ? 1 : la(e), bt(a, 0, e < 0 ? 0 : e)) : [];
}
function mL(a, e, t) {
  var i = a == null ? 0 : a.length;
  return i ? (e = t || e === void 0 ? 1 : la(e), e = i - e, bt(a, e < 0 ? 0 : e, i)) : [];
}
function gL(a, e) {
  return a && a.length ? Rc(a, da(e), !1, !0) : [];
}
function zL(a, e) {
  return a && a.length ? Rc(a, da(e)) : [];
}
function fL(a, e) {
  return e(a), a;
}
var yL = Object.prototype, FG = yL.hasOwnProperty;
function P1(a, e, t, i) {
  return a === void 0 || _t(a, yL[t]) && !FG.call(i, t) ? e : a;
}
var DG = {
  "\\": "\\",
  "'": "'",
  "\n": "n",
  "\r": "r",
  "\u2028": "u2028",
  "\u2029": "u2029"
};
function BG(a) {
  return "\\" + DG[a];
}
var wL = /<%=([\s\S]+?)%>/g, NG = /<%-([\s\S]+?)%>/g, UG = /<%([\s\S]+?)%>/g, Nl = {
  /**
   * Used to detect `data` property values to be HTML-escaped.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  escape: NG,
  /**
   * Used to detect code to be evaluated.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  evaluate: UG,
  /**
   * Used to detect `data` property values to inject.
   *
   * @memberOf _.templateSettings
   * @type {RegExp}
   */
  interpolate: wL,
  /**
   * Used to reference the data object in the template text.
   *
   * @memberOf _.templateSettings
   * @type {string}
   */
  variable: "",
  /**
   * Used to import variables into the compiled template.
   *
   * @memberOf _.templateSettings
   * @type {Object}
   */
  imports: {
    /**
     * A reference to the `lodash` function.
     *
     * @memberOf _.templateSettings.imports
     * @type {Function}
     */
    _: { escape: rw }
  }
}, HG = "Invalid `variable` option passed into `_.template`", VG = /\b__p \+= '';/g, KG = /\b(__p \+=) '' \+/g, GG = /(__e\(.*?\)|\b__t\)) \+\n'';/g, YG = /[()=,{}\[\]\/\s]/, ZG = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Xd = /($^)/, XG = /['\n\r\u2028\u2029\\]/g, JG = Object.prototype, T1 = JG.hasOwnProperty;
function hL(a, e, t) {
  var i = Nl.imports._.templateSettings || Nl;
  t && Be(a, e, t) && (e = void 0), a = ja(a), e = Gr({}, e, i, P1);
  var n = Gr({}, e.imports, i.imports, P1), r = ce(n), s = uw(n, r), o, d, c = 0, p = e.interpolate || Xd, m = "__p += '", w = RegExp(
    (e.escape || Xd).source + "|" + p.source + "|" + (p === wL ? ZG : Xd).source + "|" + (e.evaluate || Xd).source + "|$",
    "g"
  ), v = T1.call(e, "sourceURL") ? "//# sourceURL=" + (e.sourceURL + "").replace(/\s/g, " ") + `
` : "";
  a.replace(w, function(h, z, b, _, S, A) {
    return b || (b = _), m += a.slice(c, A).replace(XG, BG), z && (o = !0, m += `' +
__e(` + z + `) +
'`), S && (d = !0, m += `';
` + S + `;
__p += '`), b && (m += `' +
((__t = (` + b + `)) == null ? '' : __t) +
'`), c = A + h.length, h;
  }), m += `';
`;
  var $ = T1.call(e, "variable") && e.variable;
  if (!$)
    m = `with (obj) {
` + m + `
}
`;
  else if (YG.test($))
    throw new Error(HG);
  m = (d ? m.replace(VG, "") : m).replace(KG, "$1").replace(GG, "$1;"), m = "function(" + ($ || "obj") + `) {
` + ($ ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (o ? ", __e = _.escape" : "") + (d ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + m + `return __p
}`;
  var P = Ry(function() {
    return Function(r, v + "return " + m).apply(void 0, s);
  });
  if (P.source = m, _c(P))
    throw P;
  return P;
}
var QG = "Expected a function";
function bL(a, e, t) {
  var i = !0, n = !0;
  if (typeof a != "function")
    throw new TypeError(QG);
  return Ba(t) && (i = "leading" in t ? !!t.leading : i, n = "trailing" in t ? !!t.trailing : n), aw(a, e, {
    leading: i,
    maxWait: e,
    trailing: n
  });
}
function ps(a, e) {
  return e(a);
}
var aY = 9007199254740991, nm = 4294967295, eY = Math.min;
function vL(a, e) {
  if (a = la(a), a < 1 || a > aY)
    return [];
  var t = nm, i = eY(a, nm);
  e = ii(e), a -= nm;
  for (var n = Ey(i, e); ++t < a; )
    e(t);
  return n;
}
function qf() {
  return this;
}
function kL(a, e) {
  var t = a;
  return t instanceof ha && (t = t.value()), Cy(e, function(i, n) {
    return n.func.apply(n.thisArg, cn([i], n.args));
  }, t);
}
function Dn() {
  return kL(this.__wrapped__, this.__actions__);
}
function _L(a) {
  return ja(a).toLowerCase();
}
function $L(a) {
  return oa(a) ? Ka(a, ei) : Je(a) ? [a] : Ze(OR(ja(a)));
}
var R1 = 9007199254740991;
function jL(a) {
  return a ? tr(la(a), -R1, R1) : a === 0 ? a : 0;
}
function xL(a) {
  return ja(a).toUpperCase();
}
function AL(a, e, t) {
  var i = oa(a), n = i || vi(a) || ar(a);
  if (e = da(e), t == null) {
    var r = a && a.constructor;
    n ? t = i ? new r() : [] : Ba(a) ? t = Qt(r) ? is(kc(a)) : {} : t = {};
  }
  return (n ? kt : ti)(a, function(s, o, d) {
    return e(t, s, o, d);
  }), t;
}
function EL(a, e) {
  for (var t = a.length; t-- && ns(e, a[t], 0) > -1; )
    ;
  return t;
}
function SL(a, e) {
  for (var t = -1, i = a.length; ++t < i && ns(e, a[t], 0) > -1; )
    ;
  return t;
}
function qL(a, e, t) {
  if (a = ja(a), a && (t || e === void 0))
    return gR(a);
  if (!a || !(e = st(e)))
    return a;
  var i = Rt(a), n = Rt(e), r = SL(i, n), s = EL(i, n) + 1;
  return un(i, r, s).join("");
}
function PL(a, e, t) {
  if (a = ja(a), a && (t || e === void 0))
    return a.slice(0, mR(a) + 1);
  if (!a || !(e = st(e)))
    return a;
  var i = Rt(a), n = EL(i, Rt(e)) + 1;
  return un(i, 0, n).join("");
}
var tY = /^\s+/;
function TL(a, e, t) {
  if (a = ja(a), a && (t || e === void 0))
    return a.replace(tY, "");
  if (!a || !(e = st(e)))
    return a;
  var i = Rt(a), n = SL(i, Rt(e));
  return un(i, n).join("");
}
var iY = 30, nY = "...", rY = /\w*$/;
function RL(a, e) {
  var t = iY, i = nY;
  if (Ba(e)) {
    var n = "separator" in e ? e.separator : n;
    t = "length" in e ? la(e.length) : t, i = "omission" in e ? st(e.omission) : i;
  }
  a = ja(a);
  var r = a.length;
  if (ds(a)) {
    var s = Rt(a);
    r = s.length;
  }
  if (t >= r)
    return a;
  var o = t - us(i);
  if (o < 1)
    return i;
  var d = s ? un(s, 0, o).join("") : a.slice(0, o);
  if (n === void 0)
    return d + i;
  if (s && (o += d.length - o), Cc(n)) {
    if (a.slice(o).search(n)) {
      var c, p = d;
      for (n.global || (n = RegExp(n.source, ja(rY.exec(n)) + "g")), n.lastIndex = 0; c = n.exec(p); )
        var m = c.index;
      d = d.slice(0, m === void 0 ? o : m);
    }
  } else if (a.indexOf(st(n), o) != o) {
    var w = d.lastIndexOf(n);
    w > -1 && (d = d.slice(0, w));
  }
  return d + i;
}
function OL(a) {
  return Ay(a, 1);
}
var sY = {
  "&amp;": "&",
  "&lt;": "<",
  "&gt;": ">",
  "&quot;": '"',
  "&#39;": "'"
}, oY = Ly(sY), ML = /&(?:amp|lt|gt|quot|#39);/g, dY = RegExp(ML.source);
function CL(a) {
  return a = ja(a), a && dY.test(a) ? a.replace(ML, oY) : a;
}
var lY = 1 / 0, cY = Wr && 1 / Ac(new Wr([, -0]))[1] == lY ? function(a) {
  return new Wr(a);
} : mc, uY = 200;
function tn(a, e, t) {
  var i = -1, n = fc, r = a.length, s = !0, o = [], d = o;
  if (t)
    s = !1, n = iw;
  else if (r >= uY) {
    var c = e ? null : cY(a);
    if (c)
      return Ac(c);
    s = !1, n = fo, d = new Gn();
  } else
    d = e ? [] : o;
  i:
    for (; ++i < r; ) {
      var p = a[i], m = e ? e(p) : p;
      if (p = t || p !== 0 ? p : 0, s && m === m) {
        for (var w = d.length; w--; )
          if (d[w] === m)
            continue i;
        e && d.push(m), o.push(p);
      } else n(d, m, t) || (d !== o && d.push(m), o.push(p));
    }
  return o;
}
var LL = ma(function(a) {
  return tn(xe(a, 1, te, !0));
}), IL = ma(function(a) {
  var e = Qe(a);
  return te(e) && (e = void 0), tn(xe(a, 1, te, !0), da(e));
}), WL = ma(function(a) {
  var e = Qe(a);
  return e = typeof e == "function" ? e : void 0, tn(xe(a, 1, te, !0), void 0, e);
});
function FL(a) {
  return a && a.length ? tn(a) : [];
}
function DL(a, e) {
  return a && a.length ? tn(a, da(e)) : [];
}
function BL(a, e) {
  return e = typeof e == "function" ? e : void 0, a && a.length ? tn(a, void 0, e) : [];
}
var pY = 0;
function NL(a) {
  var e = ++pY;
  return ja(a) + e;
}
function UL(a, e) {
  return a == null ? !0 : bw(a, e);
}
var mY = Math.max;
function Dc(a) {
  if (!(a && a.length))
    return [];
  var e = 0;
  return a = pn(a, function(t) {
    if (te(t))
      return e = mY(t.length, e), !0;
  }), Ey(e, function(t) {
    return Ka(a, Xy(t));
  });
}
function Aw(a, e) {
  if (!(a && a.length))
    return [];
  var t = Dc(a);
  return e == null ? t : Ka(t, function(i) {
    return ot(e, void 0, i);
  });
}
function HL(a, e, t, i) {
  return To(a, e, t(er(a, e)), i);
}
function VL(a, e, t) {
  return a == null ? a : HL(a, e, ii(t));
}
function KL(a, e, t, i) {
  return i = typeof i == "function" ? i : void 0, a == null ? a : HL(a, e, ii(t), i);
}
var GL = ls(function(a, e, t) {
  return a + (t ? " " : "") + e.toUpperCase();
});
function YL(a) {
  return a == null ? [] : uw(a, He(a));
}
var ZL = ma(function(a, e) {
  return te(a) ? Eo(a, e) : [];
});
function XL(a, e) {
  return Ro(ii(e), a);
}
var JL = qi(function(a) {
  var e = a.length, t = e ? a[0] : 0, i = this.__wrapped__, n = function(r) {
    return Py(r, a);
  };
  return e > 1 || this.__actions__.length || !(i instanceof ha) || !ji(t) ? this.thru(n) : (i = i.slice(t, +t + (e ? 1 : 0)), i.__actions__.push({
    func: ps,
    args: [n],
    thisArg: void 0
  }), new wt(i, this.__chain__).thru(function(r) {
    return e && !r.length && r.push(void 0), r;
  }));
});
function QL() {
  return Dy(this);
}
function aI() {
  var a = this.__wrapped__;
  if (a instanceof ha) {
    var e = a;
    return this.__actions__.length && (e = new ha(this)), e = e.reverse(), e.__actions__.push({
      func: ps,
      args: [Bl],
      thisArg: void 0
    }), new wt(e, this.__chain__);
  }
  return this.thru(Bl);
}
function Ew(a, e, t) {
  var i = a.length;
  if (i < 2)
    return i ? tn(a[0]) : [];
  for (var n = -1, r = Array(i); ++n < i; )
    for (var s = a[n], o = -1; ++o < i; )
      o != n && (r[n] = Eo(r[n] || s, a[o], e, t));
  return tn(xe(r, 1), e, t);
}
var eI = ma(function(a) {
  return Ew(pn(a, te));
}), tI = ma(function(a) {
  var e = Qe(a);
  return te(e) && (e = void 0), Ew(pn(a, te), da(e));
}), iI = ma(function(a) {
  var e = Qe(a);
  return e = typeof e == "function" ? e : void 0, Ew(pn(a, te), void 0, e);
}), nI = ma(Dc);
function rI(a, e, t) {
  for (var i = -1, n = a.length, r = e.length, s = {}; ++i < n; ) {
    var o = i < r ? e[i] : void 0;
    t(s, a[i], o);
  }
  return s;
}
function sI(a, e) {
  return rI(a || [], e || [], ko);
}
function oI(a, e) {
  return rI(a || [], e || [], To);
}
var dI = ma(function(a) {
  var e = a.length, t = e > 1 ? a[e - 1] : void 0;
  return t = typeof t == "function" ? (a.pop(), t) : void 0, Aw(a, t);
});
const aa = {
  chunk: oO,
  compact: _O,
  concat: $O,
  difference: KO,
  differenceBy: GO,
  differenceWith: YO,
  drop: XO,
  dropRight: JO,
  dropRightWhile: QO,
  dropWhile: a3,
  fill: c3,
  findIndex: ow,
  findLastIndex: dw,
  first: Fl,
  flatten: Ty,
  flattenDeep: lw,
  flattenDepth: _3,
  fromPairs: R3,
  head: Fl,
  indexOf: B3,
  initial: N3,
  intersection: U3,
  intersectionBy: H3,
  intersectionWith: V3,
  join: hM,
  last: Qe,
  lastIndexOf: kM,
  nth: NM,
  pull: zC,
  pullAll: $w,
  pullAllBy: fC,
  pullAllWith: yC,
  pullAt: hC,
  remove: SC,
  reverse: Bl,
  slice: BC,
  sortedIndex: VC,
  sortedIndexBy: KC,
  sortedIndexOf: GC,
  sortedLastIndex: YC,
  sortedLastIndexBy: ZC,
  sortedLastIndexOf: XC,
  sortedUniq: QC,
  sortedUniqBy: aL,
  tail: uL,
  take: pL,
  takeRight: mL,
  takeRightWhile: gL,
  takeWhile: zL,
  union: LL,
  unionBy: IL,
  unionWith: WL,
  uniq: FL,
  uniqBy: DL,
  uniqWith: BL,
  unzip: Dc,
  unzipWith: Aw,
  without: ZL,
  xor: eI,
  xorBy: tI,
  xorWith: iI,
  zip: nI,
  zipObject: sI,
  zipObjectDeep: oI,
  zipWith: dI
}, Oa = {
  countBy: LO,
  each: Cl,
  eachRight: Ll,
  every: l3,
  filter: p3,
  find: g3,
  findLast: y3,
  flatMap: b3,
  flatMapDeep: v3,
  flatMapDepth: k3,
  forEach: Cl,
  forEachRight: Ll,
  groupBy: C3,
  includes: D3,
  invokeMap: Q3,
  keyBy: vM,
  map: So,
  orderBy: XM,
  partition: pC,
  reduce: xC,
  reduceRight: AC,
  reject: EC,
  sample: CC,
  sampleSize: LC,
  shuffle: FC,
  size: DC,
  some: UC,
  sortBy: HC
}, gY = {
  now: io
}, ie = {
  after: zR,
  ary: Ay,
  before: Oy,
  bind: xo,
  bindKey: $c,
  curry: qc,
  curryRight: Pc,
  debounce: aw,
  defer: HO,
  delay: VO,
  flip: $3,
  memoize: jo,
  negate: cs,
  once: GM,
  overArgs: QM,
  partial: Ro,
  partialRight: Ic,
  rearg: $C,
  rest: TC,
  spread: tL,
  throttle: bL,
  unary: OL,
  wrap: XL
}, ia = {
  castArray: rO,
  clone: hO,
  cloneDeep: bO,
  cloneDeepWith: vO,
  cloneWith: kO,
  conformsTo: OO,
  eq: _t,
  gt: L3,
  gte: I3,
  isArguments: en,
  isArray: oa,
  isArrayBuffer: aM,
  isArrayLike: Ue,
  isArrayLikeObject: te,
  isBoolean: eM,
  isBuffer: vi,
  isDate: tM,
  isElement: iM,
  isEmpty: nM,
  isEqual: rM,
  isEqualWith: sM,
  isError: _c,
  isFinite: oM,
  isFunction: Qt,
  isInteger: gw,
  isLength: _o,
  isMap: Hy,
  isMatch: dM,
  isMatchWith: lM,
  isNaN: cM,
  isNative: uM,
  isNil: pM,
  isNull: mM,
  isNumber: zw,
  isObject: Ba,
  isObjectLike: Za,
  isPlainObject: os,
  isRegExp: Cc,
  isSafeInteger: gM,
  isSet: Vy,
  isString: qo,
  isSymbol: Je,
  isTypedArray: ar,
  isUndefined: zM,
  isWeakMap: fM,
  isWeakSet: yM,
  lt: jM,
  lte: xM,
  toArray: hw,
  toFinite: Jt,
  toInteger: la,
  toLength: sw,
  toNumber: rt,
  toPlainObject: ew,
  toSafeInteger: jL,
  toString: ja
}, Ve = {
  add: pR,
  ceil: sO,
  divide: ZO,
  floor: j3,
  max: PM,
  maxBy: TM,
  mean: OM,
  meanBy: MM,
  min: WM,
  minBy: FM,
  multiply: DM,
  round: OC,
  subtract: dL,
  sum: lL,
  sumBy: cL
}, Sw = {
  clamp: dO,
  inRange: F3,
  random: bC
}, sa = {
  assign: TR,
  assignIn: Ol,
  assignInWith: Gr,
  assignWith: RR,
  at: MR,
  create: IO,
  defaults: DO,
  defaultsDeep: NO,
  entries: Il,
  entriesIn: Wl,
  extend: Ol,
  extendWith: Gr,
  findKey: f3,
  findLastKey: w3,
  forIn: S3,
  forInRight: q3,
  forOwn: P3,
  forOwnRight: T3,
  functions: O3,
  functionsIn: M3,
  get: vc,
  has: W3,
  hasIn: Ec,
  invert: G3,
  invertBy: Z3,
  invoke: J3,
  keys: ce,
  keysIn: He,
  mapKeys: AM,
  mapValues: EM,
  merge: CM,
  mergeWith: tw,
  omit: HM,
  omitBy: KM,
  pick: mC,
  pickBy: vw,
  result: RC,
  set: IC,
  setWith: WC,
  toPairs: Il,
  toPairsIn: Wl,
  transform: AL,
  unset: UL,
  update: VL,
  updateWith: KL,
  values: ir,
  valuesIn: YL
}, ni = {
  at: JL,
  chain: Dy,
  commit: kf,
  lodash: y,
  next: jf,
  plant: Sf,
  reverse: aI,
  tap: fL,
  thru: ps,
  toIterator: qf,
  toJSON: Dn,
  value: Dn,
  valueOf: Dn,
  wrapperChain: QL
}, xa = {
  camelCase: nO,
  capitalize: My,
  deburr: Iy,
  endsWith: i3,
  escape: rw,
  escapeRegExp: o3,
  kebabCase: bM,
  lowerCase: _M,
  lowerFirst: $M,
  pad: dC,
  padEnd: lC,
  padStart: cC,
  parseInt: uC,
  repeat: qC,
  replace: PC,
  snakeCase: NC,
  split: eL,
  startCase: iL,
  startsWith: nL,
  template: hL,
  templateSettings: Nl,
  toLower: _L,
  toUpper: xL,
  trim: qL,
  trimEnd: PL,
  trimStart: TL,
  truncate: RL,
  unescape: CL,
  upperCase: GL,
  upperFirst: jc,
  words: Wy
}, Sa = {
  attempt: Ry,
  bindAll: LR,
  cond: PO,
  conforms: RO,
  constant: gc,
  defaultTo: WO,
  flow: A3,
  flowRight: E3,
  identity: Ce,
  iteratee: wM,
  matches: SM,
  matchesProperty: qM,
  method: LM,
  methodOf: IM,
  mixin: ww,
  noop: mc,
  nthArg: UM,
  over: JM,
  overEvery: aC,
  overSome: eC,
  property: Jy,
  propertyOf: gC,
  range: kC,
  rangeRight: _C,
  stubArray: xc,
  stubFalse: wc,
  stubObject: rL,
  stubString: sL,
  stubTrue: oL,
  times: vL,
  toPath: $L,
  uniqueId: NL
};
function zY() {
  var a = new ha(this.__wrapped__);
  return a.__actions__ = Ze(this.__actions__), a.__dir__ = this.__dir__, a.__filtered__ = this.__filtered__, a.__iteratees__ = Ze(this.__iteratees__), a.__takeCount__ = this.__takeCount__, a.__views__ = Ze(this.__views__), a;
}
function fY() {
  if (this.__filtered__) {
    var a = new ha(this);
    a.__dir__ = -1, a.__filtered__ = !0;
  } else
    a = this.clone(), a.__dir__ *= -1;
  return a;
}
var yY = Math.max, wY = Math.min;
function hY(a, e, t) {
  for (var i = -1, n = t.length; ++i < n; ) {
    var r = t[i], s = r.size;
    switch (r.type) {
      case "drop":
        a += s;
        break;
      case "dropRight":
        e -= s;
        break;
      case "take":
        e = wY(e, a + s);
        break;
      case "takeRight":
        a = yY(a, e - s);
        break;
    }
  }
  return { start: a, end: e };
}
var bY = 1, vY = 2, kY = Math.min;
function _Y() {
  var a = this.__wrapped__.value(), e = this.__dir__, t = oa(a), i = e < 0, n = t ? a.length : 0, r = hY(0, n, this.__views__), s = r.start, o = r.end, d = o - s, c = i ? o : s - 1, p = this.__iteratees__, m = p.length, w = 0, v = kY(d, this.__takeCount__);
  if (!t || !i && n == d && v == d)
    return kL(a, this.__actions__);
  var $ = [];
  i:
    for (; d-- && w < v; ) {
      c += e;
      for (var P = -1, h = a[c]; ++P < m; ) {
        var z = p[P], b = z.iteratee, _ = z.type, S = b(h);
        if (_ == vY)
          h = S;
        else if (!S) {
          if (_ == bY)
            continue i;
          break i;
        }
      }
      $[w++] = h;
    }
  return $;
}
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
var $Y = "4.17.21", jY = 2, xY = 1, AY = 3, lI = 4294967295, EY = Array.prototype, SY = Object.prototype, cI = SY.hasOwnProperty, O1 = Oe ? Oe.iterator : void 0, qY = Math.max, M1 = Math.min, qw = /* @__PURE__ */ function(a) {
  return function(e, t, i) {
    if (i == null) {
      var n = Ba(t), r = n && ce(t), s = r && r.length && Oc(t, r);
      (s ? s.length : n) || (i = t, t = e, e = this);
    }
    return a(e, t, i);
  };
}(ww);
y.after = ie.after;
y.ary = ie.ary;
y.assign = sa.assign;
y.assignIn = sa.assignIn;
y.assignInWith = sa.assignInWith;
y.assignWith = sa.assignWith;
y.at = sa.at;
y.before = ie.before;
y.bind = ie.bind;
y.bindAll = Sa.bindAll;
y.bindKey = ie.bindKey;
y.castArray = ia.castArray;
y.chain = ni.chain;
y.chunk = aa.chunk;
y.compact = aa.compact;
y.concat = aa.concat;
y.cond = Sa.cond;
y.conforms = Sa.conforms;
y.constant = Sa.constant;
y.countBy = Oa.countBy;
y.create = sa.create;
y.curry = ie.curry;
y.curryRight = ie.curryRight;
y.debounce = ie.debounce;
y.defaults = sa.defaults;
y.defaultsDeep = sa.defaultsDeep;
y.defer = ie.defer;
y.delay = ie.delay;
y.difference = aa.difference;
y.differenceBy = aa.differenceBy;
y.differenceWith = aa.differenceWith;
y.drop = aa.drop;
y.dropRight = aa.dropRight;
y.dropRightWhile = aa.dropRightWhile;
y.dropWhile = aa.dropWhile;
y.fill = aa.fill;
y.filter = Oa.filter;
y.flatMap = Oa.flatMap;
y.flatMapDeep = Oa.flatMapDeep;
y.flatMapDepth = Oa.flatMapDepth;
y.flatten = aa.flatten;
y.flattenDeep = aa.flattenDeep;
y.flattenDepth = aa.flattenDepth;
y.flip = ie.flip;
y.flow = Sa.flow;
y.flowRight = Sa.flowRight;
y.fromPairs = aa.fromPairs;
y.functions = sa.functions;
y.functionsIn = sa.functionsIn;
y.groupBy = Oa.groupBy;
y.initial = aa.initial;
y.intersection = aa.intersection;
y.intersectionBy = aa.intersectionBy;
y.intersectionWith = aa.intersectionWith;
y.invert = sa.invert;
y.invertBy = sa.invertBy;
y.invokeMap = Oa.invokeMap;
y.iteratee = Sa.iteratee;
y.keyBy = Oa.keyBy;
y.keys = ce;
y.keysIn = sa.keysIn;
y.map = Oa.map;
y.mapKeys = sa.mapKeys;
y.mapValues = sa.mapValues;
y.matches = Sa.matches;
y.matchesProperty = Sa.matchesProperty;
y.memoize = ie.memoize;
y.merge = sa.merge;
y.mergeWith = sa.mergeWith;
y.method = Sa.method;
y.methodOf = Sa.methodOf;
y.mixin = qw;
y.negate = cs;
y.nthArg = Sa.nthArg;
y.omit = sa.omit;
y.omitBy = sa.omitBy;
y.once = ie.once;
y.orderBy = Oa.orderBy;
y.over = Sa.over;
y.overArgs = ie.overArgs;
y.overEvery = Sa.overEvery;
y.overSome = Sa.overSome;
y.partial = ie.partial;
y.partialRight = ie.partialRight;
y.partition = Oa.partition;
y.pick = sa.pick;
y.pickBy = sa.pickBy;
y.property = Sa.property;
y.propertyOf = Sa.propertyOf;
y.pull = aa.pull;
y.pullAll = aa.pullAll;
y.pullAllBy = aa.pullAllBy;
y.pullAllWith = aa.pullAllWith;
y.pullAt = aa.pullAt;
y.range = Sa.range;
y.rangeRight = Sa.rangeRight;
y.rearg = ie.rearg;
y.reject = Oa.reject;
y.remove = aa.remove;
y.rest = ie.rest;
y.reverse = aa.reverse;
y.sampleSize = Oa.sampleSize;
y.set = sa.set;
y.setWith = sa.setWith;
y.shuffle = Oa.shuffle;
y.slice = aa.slice;
y.sortBy = Oa.sortBy;
y.sortedUniq = aa.sortedUniq;
y.sortedUniqBy = aa.sortedUniqBy;
y.split = xa.split;
y.spread = ie.spread;
y.tail = aa.tail;
y.take = aa.take;
y.takeRight = aa.takeRight;
y.takeRightWhile = aa.takeRightWhile;
y.takeWhile = aa.takeWhile;
y.tap = ni.tap;
y.throttle = ie.throttle;
y.thru = ps;
y.toArray = ia.toArray;
y.toPairs = sa.toPairs;
y.toPairsIn = sa.toPairsIn;
y.toPath = Sa.toPath;
y.toPlainObject = ia.toPlainObject;
y.transform = sa.transform;
y.unary = ie.unary;
y.union = aa.union;
y.unionBy = aa.unionBy;
y.unionWith = aa.unionWith;
y.uniq = aa.uniq;
y.uniqBy = aa.uniqBy;
y.uniqWith = aa.uniqWith;
y.unset = sa.unset;
y.unzip = aa.unzip;
y.unzipWith = aa.unzipWith;
y.update = sa.update;
y.updateWith = sa.updateWith;
y.values = sa.values;
y.valuesIn = sa.valuesIn;
y.without = aa.without;
y.words = xa.words;
y.wrap = ie.wrap;
y.xor = aa.xor;
y.xorBy = aa.xorBy;
y.xorWith = aa.xorWith;
y.zip = aa.zip;
y.zipObject = aa.zipObject;
y.zipObjectDeep = aa.zipObjectDeep;
y.zipWith = aa.zipWith;
y.entries = sa.toPairs;
y.entriesIn = sa.toPairsIn;
y.extend = sa.assignIn;
y.extendWith = sa.assignInWith;
qw(y, y);
y.add = Ve.add;
y.attempt = Sa.attempt;
y.camelCase = xa.camelCase;
y.capitalize = xa.capitalize;
y.ceil = Ve.ceil;
y.clamp = Sw.clamp;
y.clone = ia.clone;
y.cloneDeep = ia.cloneDeep;
y.cloneDeepWith = ia.cloneDeepWith;
y.cloneWith = ia.cloneWith;
y.conformsTo = ia.conformsTo;
y.deburr = xa.deburr;
y.defaultTo = Sa.defaultTo;
y.divide = Ve.divide;
y.endsWith = xa.endsWith;
y.eq = ia.eq;
y.escape = xa.escape;
y.escapeRegExp = xa.escapeRegExp;
y.every = Oa.every;
y.find = Oa.find;
y.findIndex = aa.findIndex;
y.findKey = sa.findKey;
y.findLast = Oa.findLast;
y.findLastIndex = aa.findLastIndex;
y.findLastKey = sa.findLastKey;
y.floor = Ve.floor;
y.forEach = Oa.forEach;
y.forEachRight = Oa.forEachRight;
y.forIn = sa.forIn;
y.forInRight = sa.forInRight;
y.forOwn = sa.forOwn;
y.forOwnRight = sa.forOwnRight;
y.get = sa.get;
y.gt = ia.gt;
y.gte = ia.gte;
y.has = sa.has;
y.hasIn = sa.hasIn;
y.head = aa.head;
y.identity = Ce;
y.includes = Oa.includes;
y.indexOf = aa.indexOf;
y.inRange = Sw.inRange;
y.invoke = sa.invoke;
y.isArguments = ia.isArguments;
y.isArray = oa;
y.isArrayBuffer = ia.isArrayBuffer;
y.isArrayLike = ia.isArrayLike;
y.isArrayLikeObject = ia.isArrayLikeObject;
y.isBoolean = ia.isBoolean;
y.isBuffer = ia.isBuffer;
y.isDate = ia.isDate;
y.isElement = ia.isElement;
y.isEmpty = ia.isEmpty;
y.isEqual = ia.isEqual;
y.isEqualWith = ia.isEqualWith;
y.isError = ia.isError;
y.isFinite = ia.isFinite;
y.isFunction = ia.isFunction;
y.isInteger = ia.isInteger;
y.isLength = ia.isLength;
y.isMap = ia.isMap;
y.isMatch = ia.isMatch;
y.isMatchWith = ia.isMatchWith;
y.isNaN = ia.isNaN;
y.isNative = ia.isNative;
y.isNil = ia.isNil;
y.isNull = ia.isNull;
y.isNumber = ia.isNumber;
y.isObject = Ba;
y.isObjectLike = ia.isObjectLike;
y.isPlainObject = ia.isPlainObject;
y.isRegExp = ia.isRegExp;
y.isSafeInteger = ia.isSafeInteger;
y.isSet = ia.isSet;
y.isString = ia.isString;
y.isSymbol = ia.isSymbol;
y.isTypedArray = ia.isTypedArray;
y.isUndefined = ia.isUndefined;
y.isWeakMap = ia.isWeakMap;
y.isWeakSet = ia.isWeakSet;
y.join = aa.join;
y.kebabCase = xa.kebabCase;
y.last = Qe;
y.lastIndexOf = aa.lastIndexOf;
y.lowerCase = xa.lowerCase;
y.lowerFirst = xa.lowerFirst;
y.lt = ia.lt;
y.lte = ia.lte;
y.max = Ve.max;
y.maxBy = Ve.maxBy;
y.mean = Ve.mean;
y.meanBy = Ve.meanBy;
y.min = Ve.min;
y.minBy = Ve.minBy;
y.stubArray = Sa.stubArray;
y.stubFalse = Sa.stubFalse;
y.stubObject = Sa.stubObject;
y.stubString = Sa.stubString;
y.stubTrue = Sa.stubTrue;
y.multiply = Ve.multiply;
y.nth = aa.nth;
y.noop = Sa.noop;
y.now = gY.now;
y.pad = xa.pad;
y.padEnd = xa.padEnd;
y.padStart = xa.padStart;
y.parseInt = xa.parseInt;
y.random = Sw.random;
y.reduce = Oa.reduce;
y.reduceRight = Oa.reduceRight;
y.repeat = xa.repeat;
y.replace = xa.replace;
y.result = sa.result;
y.round = Ve.round;
y.sample = Oa.sample;
y.size = Oa.size;
y.snakeCase = xa.snakeCase;
y.some = Oa.some;
y.sortedIndex = aa.sortedIndex;
y.sortedIndexBy = aa.sortedIndexBy;
y.sortedIndexOf = aa.sortedIndexOf;
y.sortedLastIndex = aa.sortedLastIndex;
y.sortedLastIndexBy = aa.sortedLastIndexBy;
y.sortedLastIndexOf = aa.sortedLastIndexOf;
y.startCase = xa.startCase;
y.startsWith = xa.startsWith;
y.subtract = Ve.subtract;
y.sum = Ve.sum;
y.sumBy = Ve.sumBy;
y.template = xa.template;
y.times = Sa.times;
y.toFinite = ia.toFinite;
y.toInteger = la;
y.toLength = ia.toLength;
y.toLower = xa.toLower;
y.toNumber = ia.toNumber;
y.toSafeInteger = ia.toSafeInteger;
y.toString = ia.toString;
y.toUpper = xa.toUpper;
y.trim = xa.trim;
y.trimEnd = xa.trimEnd;
y.trimStart = xa.trimStart;
y.truncate = xa.truncate;
y.unescape = xa.unescape;
y.uniqueId = Sa.uniqueId;
y.upperCase = xa.upperCase;
y.upperFirst = xa.upperFirst;
y.each = Oa.forEach;
y.eachRight = Oa.forEachRight;
y.first = aa.head;
qw(y, function() {
  var a = {};
  return ti(y, function(e, t) {
    cI.call(y.prototype, t) || (a[t] = e);
  }), a;
}(), { chain: !1 });
y.VERSION = $Y;
(y.templateSettings = xa.templateSettings).imports._ = y;
kt(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(a) {
  y[a].placeholder = y;
});
kt(["drop", "take"], function(a, e) {
  ha.prototype[a] = function(t) {
    t = t === void 0 ? 1 : qY(la(t), 0);
    var i = this.__filtered__ && !e ? new ha(this) : this.clone();
    return i.__filtered__ ? i.__takeCount__ = M1(t, i.__takeCount__) : i.__views__.push({
      size: M1(t, lI),
      type: a + (i.__dir__ < 0 ? "Right" : "")
    }), i;
  }, ha.prototype[a + "Right"] = function(t) {
    return this.reverse()[a](t).reverse();
  };
});
kt(["filter", "map", "takeWhile"], function(a, e) {
  var t = e + 1, i = t == xY || t == AY;
  ha.prototype[a] = function(n) {
    var r = this.clone();
    return r.__iteratees__.push({
      iteratee: da(n),
      type: t
    }), r.__filtered__ = r.__filtered__ || i, r;
  };
});
kt(["head", "last"], function(a, e) {
  var t = "take" + (e ? "Right" : "");
  ha.prototype[a] = function() {
    return this[t](1).value()[0];
  };
});
kt(["initial", "tail"], function(a, e) {
  var t = "drop" + (e ? "" : "Right");
  ha.prototype[a] = function() {
    return this.__filtered__ ? new ha(this) : this[t](1);
  };
});
ha.prototype.compact = function() {
  return this.filter(Ce);
};
ha.prototype.find = function(a) {
  return this.filter(a).head();
};
ha.prototype.findLast = function(a) {
  return this.reverse().find(a);
};
ha.prototype.invokeMap = ma(function(a, e) {
  return typeof a == "function" ? new ha(this) : this.map(function(t) {
    return Po(t, a, e);
  });
});
ha.prototype.reject = function(a) {
  return this.filter(cs(da(a)));
};
ha.prototype.slice = function(a, e) {
  a = la(a);
  var t = this;
  return t.__filtered__ && (a > 0 || e < 0) ? new ha(t) : (a < 0 ? t = t.takeRight(-a) : a && (t = t.drop(a)), e !== void 0 && (e = la(e), t = e < 0 ? t.dropRight(-e) : t.take(e - a)), t);
};
ha.prototype.takeRightWhile = function(a) {
  return this.reverse().takeWhile(a).reverse();
};
ha.prototype.toArray = function() {
  return this.take(lI);
};
ti(ha.prototype, function(a, e) {
  var t = /^(?:filter|find|map|reject)|While$/.test(e), i = /^(?:head|last)$/.test(e), n = y[i ? "take" + (e == "last" ? "Right" : "") : e], r = i || /^find/.test(e);
  n && (y.prototype[e] = function() {
    var s = this.__wrapped__, o = i ? [1] : arguments, d = s instanceof ha, c = o[0], p = d || oa(s), m = function(z) {
      var b = n.apply(y, cn([z], o));
      return i && w ? b[0] : b;
    };
    p && t && typeof c == "function" && c.length != 1 && (d = p = !1);
    var w = this.__chain__, v = !!this.__actions__.length, $ = r && !w, P = d && !v;
    if (!r && p) {
      s = P ? s : new ha(this);
      var h = a.apply(s, o);
      return h.__actions__.push({ func: ps, args: [m], thisArg: void 0 }), new wt(h, w);
    }
    return $ && P ? a.apply(this, o) : (h = this.thru(m), $ ? i ? h.value()[0] : h.value() : h);
  });
});
kt(["pop", "push", "shift", "sort", "splice", "unshift"], function(a) {
  var e = EY[a], t = /^(?:push|sort|unshift)$/.test(a) ? "tap" : "thru", i = /^(?:pop|shift)$/.test(a);
  y.prototype[a] = function() {
    var n = arguments;
    if (i && !this.__chain__) {
      var r = this.value();
      return e.apply(oa(r) ? r : [], n);
    }
    return this[t](function(s) {
      return e.apply(oa(s) ? s : [], n);
    });
  };
});
ti(ha.prototype, function(a, e) {
  var t = y[e];
  if (t) {
    var i = t.name + "";
    cI.call(Ir, i) || (Ir[i] = []), Ir[i].push({ name: e, func: t });
  }
});
Ir[yc(void 0, jY).name] = [{
  name: "wrapper",
  func: void 0
}];
ha.prototype.clone = zY;
ha.prototype.reverse = fY;
ha.prototype.value = _Y;
y.prototype.at = ni.at;
y.prototype.chain = ni.wrapperChain;
y.prototype.commit = ni.commit;
y.prototype.next = ni.next;
y.prototype.plant = ni.plant;
y.prototype.reverse = ni.reverse;
y.prototype.toJSON = y.prototype.valueOf = y.prototype.value = ni.value;
y.prototype.first = y.prototype.head;
O1 && (y.prototype[O1] = ni.toIterator);
/**
 * @license
 * Lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="es" -o ./`
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
const PY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  add: pR,
  after: zR,
  ary: Ay,
  assign: TR,
  assignIn: Ol,
  assignInWith: Gr,
  assignWith: RR,
  at: MR,
  attempt: Ry,
  before: Oy,
  bind: xo,
  bindAll: LR,
  bindKey: $c,
  camelCase: nO,
  capitalize: My,
  castArray: rO,
  ceil: sO,
  chain: Dy,
  chunk: oO,
  clamp: dO,
  clone: hO,
  cloneDeep: bO,
  cloneDeepWith: vO,
  cloneWith: kO,
  commit: kf,
  compact: _O,
  concat: $O,
  cond: PO,
  conforms: RO,
  conformsTo: OO,
  constant: gc,
  countBy: LO,
  create: IO,
  curry: qc,
  curryRight: Pc,
  debounce: aw,
  deburr: Iy,
  default: y,
  defaultTo: WO,
  defaults: DO,
  defaultsDeep: NO,
  defer: HO,
  delay: VO,
  difference: KO,
  differenceBy: GO,
  differenceWith: YO,
  divide: ZO,
  drop: XO,
  dropRight: JO,
  dropRightWhile: QO,
  dropWhile: a3,
  each: Cl,
  eachRight: Ll,
  endsWith: i3,
  entries: Il,
  entriesIn: Wl,
  eq: _t,
  escape: rw,
  escapeRegExp: o3,
  every: l3,
  extend: Ol,
  extendWith: Gr,
  fill: c3,
  filter: p3,
  find: g3,
  findIndex: ow,
  findKey: f3,
  findLast: y3,
  findLastIndex: dw,
  findLastKey: w3,
  first: Fl,
  flatMap: b3,
  flatMapDeep: v3,
  flatMapDepth: k3,
  flatten: Ty,
  flattenDeep: lw,
  flattenDepth: _3,
  flip: $3,
  floor: j3,
  flow: A3,
  flowRight: E3,
  forEach: Cl,
  forEachRight: Ll,
  forIn: S3,
  forInRight: q3,
  forOwn: P3,
  forOwnRight: T3,
  fromPairs: R3,
  functions: O3,
  functionsIn: M3,
  get: vc,
  groupBy: C3,
  gt: L3,
  gte: I3,
  has: W3,
  hasIn: Ec,
  head: Fl,
  identity: Ce,
  inRange: F3,
  includes: D3,
  indexOf: B3,
  initial: N3,
  intersection: U3,
  intersectionBy: H3,
  intersectionWith: V3,
  invert: G3,
  invertBy: Z3,
  invoke: J3,
  invokeMap: Q3,
  isArguments: en,
  isArray: oa,
  isArrayBuffer: aM,
  isArrayLike: Ue,
  isArrayLikeObject: te,
  isBoolean: eM,
  isBuffer: vi,
  isDate: tM,
  isElement: iM,
  isEmpty: nM,
  isEqual: rM,
  isEqualWith: sM,
  isError: _c,
  isFinite: oM,
  isFunction: Qt,
  isInteger: gw,
  isLength: _o,
  isMap: Hy,
  isMatch: dM,
  isMatchWith: lM,
  isNaN: cM,
  isNative: uM,
  isNil: pM,
  isNull: mM,
  isNumber: zw,
  isObject: Ba,
  isObjectLike: Za,
  isPlainObject: os,
  isRegExp: Cc,
  isSafeInteger: gM,
  isSet: Vy,
  isString: qo,
  isSymbol: Je,
  isTypedArray: ar,
  isUndefined: zM,
  isWeakMap: fM,
  isWeakSet: yM,
  iteratee: wM,
  join: hM,
  kebabCase: bM,
  keyBy: vM,
  keys: ce,
  keysIn: He,
  last: Qe,
  lastIndexOf: kM,
  lodash: y,
  lowerCase: _M,
  lowerFirst: $M,
  lt: jM,
  lte: xM,
  map: So,
  mapKeys: AM,
  mapValues: EM,
  matches: SM,
  matchesProperty: qM,
  max: PM,
  maxBy: TM,
  mean: OM,
  meanBy: MM,
  memoize: jo,
  merge: CM,
  mergeWith: tw,
  method: LM,
  methodOf: IM,
  min: WM,
  minBy: FM,
  mixin: ww,
  multiply: DM,
  negate: cs,
  next: jf,
  noop: mc,
  now: io,
  nth: NM,
  nthArg: UM,
  omit: HM,
  omitBy: KM,
  once: GM,
  orderBy: XM,
  over: JM,
  overArgs: QM,
  overEvery: aC,
  overSome: eC,
  pad: dC,
  padEnd: lC,
  padStart: cC,
  parseInt: uC,
  partial: Ro,
  partialRight: Ic,
  partition: pC,
  pick: mC,
  pickBy: vw,
  plant: Sf,
  property: Jy,
  propertyOf: gC,
  pull: zC,
  pullAll: $w,
  pullAllBy: fC,
  pullAllWith: yC,
  pullAt: hC,
  random: bC,
  range: kC,
  rangeRight: _C,
  rearg: $C,
  reduce: xC,
  reduceRight: AC,
  reject: EC,
  remove: SC,
  repeat: qC,
  replace: PC,
  rest: TC,
  result: RC,
  reverse: Bl,
  round: OC,
  sample: CC,
  sampleSize: LC,
  set: IC,
  setWith: WC,
  shuffle: FC,
  size: DC,
  slice: BC,
  snakeCase: NC,
  some: UC,
  sortBy: HC,
  sortedIndex: VC,
  sortedIndexBy: KC,
  sortedIndexOf: GC,
  sortedLastIndex: YC,
  sortedLastIndexBy: ZC,
  sortedLastIndexOf: XC,
  sortedUniq: QC,
  sortedUniqBy: aL,
  split: eL,
  spread: tL,
  startCase: iL,
  startsWith: nL,
  stubArray: xc,
  stubFalse: wc,
  stubObject: rL,
  stubString: sL,
  stubTrue: oL,
  subtract: dL,
  sum: lL,
  sumBy: cL,
  tail: uL,
  take: pL,
  takeRight: mL,
  takeRightWhile: gL,
  takeWhile: zL,
  tap: fL,
  template: hL,
  templateSettings: Nl,
  throttle: bL,
  thru: ps,
  times: vL,
  toArray: hw,
  toFinite: Jt,
  toInteger: la,
  toIterator: qf,
  toJSON: Dn,
  toLength: sw,
  toLower: _L,
  toNumber: rt,
  toPairs: Il,
  toPairsIn: Wl,
  toPath: $L,
  toPlainObject: ew,
  toSafeInteger: jL,
  toString: ja,
  toUpper: xL,
  transform: AL,
  trim: qL,
  trimEnd: PL,
  trimStart: TL,
  truncate: RL,
  unary: OL,
  unescape: CL,
  union: LL,
  unionBy: IL,
  unionWith: WL,
  uniq: FL,
  uniqBy: DL,
  uniqWith: BL,
  uniqueId: NL,
  unset: UL,
  unzip: Dc,
  unzipWith: Aw,
  update: VL,
  updateWith: KL,
  upperCase: GL,
  upperFirst: jc,
  value: Dn,
  valueOf: Dn,
  values: ir,
  valuesIn: YL,
  without: ZL,
  words: Wy,
  wrap: XL,
  wrapperAt: JL,
  wrapperChain: QL,
  wrapperCommit: kf,
  wrapperLodash: y,
  wrapperNext: jf,
  wrapperPlant: Sf,
  wrapperReverse: aI,
  wrapperToIterator: qf,
  wrapperValue: Dn,
  xor: eI,
  xorBy: tI,
  xorWith: iI,
  zip: nI,
  zipObject: sI,
  zipObjectDeep: oI,
  zipWith: dI
}, Symbol.toStringTag, { value: "Module" })), I = /* @__PURE__ */ ts(PY);
var uI = { exports: {} };
(function(a) {
  (function(e, t) {
    a.exports ? a.exports = t() : e.log = t();
  })(Ca, function() {
    var e = function() {
    }, t = "undefined", i = typeof window !== t && typeof window.navigator !== t && /Trident\/|MSIE /.test(window.navigator.userAgent), n = [
      "trace",
      "debug",
      "info",
      "warn",
      "error"
    ], r = {}, s = null;
    function o(P, h) {
      var z = P[h];
      if (typeof z.bind == "function")
        return z.bind(P);
      try {
        return Function.prototype.bind.call(z, P);
      } catch {
        return function() {
          return Function.prototype.apply.apply(z, [P, arguments]);
        };
      }
    }
    function d() {
      console.log && (console.log.apply ? console.log.apply(console, arguments) : Function.prototype.apply.apply(console.log, [console, arguments])), console.trace && console.trace();
    }
    function c(P) {
      return P === "debug" && (P = "log"), typeof console === t ? !1 : P === "trace" && i ? d : console[P] !== void 0 ? o(console, P) : console.log !== void 0 ? o(console, "log") : e;
    }
    function p() {
      for (var P = this.getLevel(), h = 0; h < n.length; h++) {
        var z = n[h];
        this[z] = h < P ? e : this.methodFactory(z, P, this.name);
      }
      if (this.log = this.debug, typeof console === t && P < this.levels.SILENT)
        return "No console available for logging";
    }
    function m(P) {
      return function() {
        typeof console !== t && (p.call(this), this[P].apply(this, arguments));
      };
    }
    function w(P, h, z) {
      return c(P) || m.apply(this, arguments);
    }
    function v(P, h) {
      var z = this, b, _, S, A = "loglevel";
      typeof P == "string" ? A += ":" + P : typeof P == "symbol" && (A = void 0);
      function L(H) {
        var j = (n[H] || "silent").toUpperCase();
        if (!(typeof window === t || !A)) {
          try {
            window.localStorage[A] = j;
            return;
          } catch {
          }
          try {
            window.document.cookie = encodeURIComponent(A) + "=" + j + ";";
          } catch {
          }
        }
      }
      function R() {
        var H;
        if (!(typeof window === t || !A)) {
          try {
            H = window.localStorage[A];
          } catch {
          }
          if (typeof H === t)
            try {
              var j = window.document.cookie, ea = encodeURIComponent(A), ra = j.indexOf(ea + "=");
              ra !== -1 && (H = /^([^;]+)/.exec(
                j.slice(ra + ea.length + 1)
              )[1]);
            } catch {
            }
          return z.levels[H] === void 0 && (H = void 0), H;
        }
      }
      function E() {
        if (!(typeof window === t || !A)) {
          try {
            window.localStorage.removeItem(A);
          } catch {
          }
          try {
            window.document.cookie = encodeURIComponent(A) + "=; expires=Thu, 01 Jan 1970 00:00:00 UTC";
          } catch {
          }
        }
      }
      function N(H) {
        var j = H;
        if (typeof j == "string" && z.levels[j.toUpperCase()] !== void 0 && (j = z.levels[j.toUpperCase()]), typeof j == "number" && j >= 0 && j <= z.levels.SILENT)
          return j;
        throw new TypeError("log.setLevel() called with invalid level: " + H);
      }
      z.name = P, z.levels = {
        TRACE: 0,
        DEBUG: 1,
        INFO: 2,
        WARN: 3,
        ERROR: 4,
        SILENT: 5
      }, z.methodFactory = h || w, z.getLevel = function() {
        return S ?? _ ?? b;
      }, z.setLevel = function(H, j) {
        return S = N(H), j !== !1 && L(S), p.call(z);
      }, z.setDefaultLevel = function(H) {
        _ = N(H), R() || z.setLevel(H, !1);
      }, z.resetLevel = function() {
        S = null, E(), p.call(z);
      }, z.enableAll = function(H) {
        z.setLevel(z.levels.TRACE, H);
      }, z.disableAll = function(H) {
        z.setLevel(z.levels.SILENT, H);
      }, z.rebuild = function() {
        if (s !== z && (b = N(s.getLevel())), p.call(z), s === z)
          for (var H in r)
            r[H].rebuild();
      }, b = N(
        s ? s.getLevel() : "WARN"
      );
      var D = R();
      D != null && (S = N(D)), p.call(z);
    }
    s = new v(), s.getLogger = function(h) {
      if (typeof h != "symbol" && typeof h != "string" || h === "")
        throw new TypeError("You must supply a name when creating a logger.");
      var z = r[h];
      return z || (z = r[h] = new v(
        h,
        s.methodFactory
      )), z;
    };
    var $ = typeof window !== t ? window.log : void 0;
    return s.noConflict = function() {
      return typeof window !== t && window.log === s && (window.log = $), s;
    }, s.getLoggers = function() {
      return r;
    }, s.default = s, s;
  });
})(uI);
var TY = uI.exports, nn = {}, Oo = {}, Ga = {};
Object.defineProperty(Ga, "__esModule", {
  value: !0
});
class RY {
  /**
   * Executes the assessment and return its result.
   *
   * @param {Paper} paper The paper to run this assessment on.
   * @param {Researcher} researcher The researcher used for the assessment.
   * @param {object} i18n The i18n-object used for parsing translations.
   *
   * @returns {AssessmentResult} The result of the assessment.
   */
  getResult(e, t, i) {
    throw "The method getResult is not implemented";
  }
  /**
   * Checks whether the assessment is applicable
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True.
   */
  isApplicable(e) {
    return !0;
  }
}
var mut = Ga.default = RY, gn = {}, Ya = {};
Object.defineProperty(Ya, "__esModule", {
  value: !0
});
Ya.default = function(a) {
  return a.split("_")[0];
};
Object.defineProperty(gn, "__esModule", {
  value: !0
});
gn.default = function(a, e) {
  var t = (0, CY.default)(a);
  return (0, OY.indexOf)(e, t) > -1;
};
var OY = I, MY = Ya, CY = LY(MY);
function LY(a) {
  return a && a.__esModule ? a : { default: a };
}
var va = {}, Mo = {}, Pw = {};
Object.defineProperty(Pw, "__esModule", {
  value: !0
});
var C1 = Object.assign || function(a) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e];
    for (var i in t)
      Object.prototype.hasOwnProperty.call(t, i) && (a[i] = t[i]);
  }
  return a;
};
class Tw {
  /**
   * Initialize the Shortlinker class.
   *
   * @param {Object} [config={}] Optional configuration.
   */
  constructor(e = {}) {
    this.configure(e);
  }
  /**
   * Saves the passed configuration.
   *
   * @param {Object} config             The configuration.
   * @param {Object} [config.params={}] The default params to create the query string with.
   *
   * @returns {void}
   */
  configure(e) {
    this._config = C1({
      params: {}
    }, e);
  }
  /**
   * Creates a query string from a params object.
   *
   * @param {Object} params Params for in the query string.
   *
   * @returns {string} URI encoded query string.
   */
  static createQueryString(e) {
    return Object.keys(e).map((t) => `${encodeURIComponent(t)}=${encodeURIComponent(e[t])}`).join("&");
  }
  /**
   * Creates a link by combining the params from the config and appending them to the url.
   *
   * @param {string} url         The base url.
   * @param {Object} [params={}] Optional params for in the url.
   *
   * @returns {string} The url with query string.
   */
  append(e, t = {}) {
    let i = encodeURI(e);
    const n = Tw.createQueryString(C1({}, this._config.params, t));
    return n !== "" && (i += "?" + n), i;
  }
  /**
   * Creates an anchor opening tag; uses the append function to create the url.
   *
   * @param {string} url         The base url.
   * @param {Object} [params={}] Optional params for in the url.
   *
   * @returns {string} The anchor opening tag.
   */
  createAnchorOpeningTag(e, t = {}) {
    return `<a href='${this.append(e, t)}' target='_blank'>`;
  }
}
Pw.default = Tw;
Object.defineProperty(Mo, "__esModule", {
  value: !0
});
Mo.configureShortlinker = DY;
Mo.createShortlink = BY;
Mo.createAnchorOpeningTag = NY;
var IY = Pw, WY = FY(IY);
function FY(a) {
  return a && a.__esModule ? a : { default: a };
}
let hi;
typeof window > "u" ? typeof self > "u" ? hi = Ca : hi = self : hi = window;
hi.yoast = hi.yoast || {};
hi.yoast.shortlinker = null;
function Rw() {
  return hi.yoast.shortlinker === null && (hi.yoast.shortlinker = new WY.default()), hi.yoast.shortlinker;
}
function DY(a) {
  Rw().configure(a);
}
function BY(a, e = {}) {
  return Rw().append(a, e);
}
function NY(a, e = {}) {
  return Rw().createAnchorOpeningTag(a, e);
}
(function(a) {
  Object.defineProperty(a, "__esModule", {
    value: !0
  });
  var e = Mo;
  Object.keys(e).forEach(function(t) {
    t === "default" || t === "__esModule" || Object.defineProperty(a, t, {
      enumerable: !0,
      get: function() {
        return e[t];
      }
    });
  });
})(va);
var za = {}, ct = {};
Object.defineProperty(ct, "__esModule", {
  value: !0
});
var UY = Object.assign || function(a) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e];
    for (var i in t)
      Object.prototype.hasOwnProperty.call(t, i) && (a[i] = t[i]);
  }
  return a;
}, HY = I;
function Yn(a) {
  (0, HY.defaults)(a, { original: "", marked: "" }), this._properties = a;
}
Yn.prototype.getOriginal = function() {
  return this._properties.original;
};
Yn.prototype.getMarked = function() {
  return this._properties.marked;
};
Yn.prototype.applyWithReplace = function(a) {
  return a.split(this._properties.original).join(this._properties.marked);
};
Yn.prototype.serialize = function() {
  return UY({
    _parseClass: "Mark"
  }, this._properties);
};
Yn.parse = function(a) {
  return delete a._parseClass, new Yn(a);
};
ct.default = Yn;
Object.defineProperty(za, "__esModule", {
  value: !0
});
var Bn = I, VY = ct, KY = GY(VY);
function GY(a) {
  return a && a.__esModule ? a : { default: a };
}
var YY = function() {
  return [];
}, ge = function(e) {
  this._hasScore = !1, this._identifier = "", this._hasMarks = !1, this._marker = YY, this.score = 0, this.text = "", this.marks = [], (0, Bn.isUndefined)(e) && (e = {}), (0, Bn.isUndefined)(e.score) || this.setScore(e.score), (0, Bn.isUndefined)(e.text) || this.setText(e.text), (0, Bn.isUndefined)(e.marks) || this.setMarks(e.marks);
};
ge.prototype.hasScore = function() {
  return this._hasScore;
};
ge.prototype.getScore = function() {
  return this.score;
};
ge.prototype.setScore = function(a) {
  (0, Bn.isNumber)(a) && (this.score = a, this._hasScore = !0);
};
ge.prototype.hasText = function() {
  return this.text !== "";
};
ge.prototype.getText = function() {
  return this.text;
};
ge.prototype.setText = function(a) {
  (0, Bn.isUndefined)(a) && (a = ""), this.text = a;
};
ge.prototype.getMarks = function() {
  return this.marks;
};
ge.prototype.setMarks = function(a) {
  (0, Bn.isArray)(a) && (this.marks = a, this._hasMarks = a.length > 0);
};
ge.prototype.setIdentifier = function(a) {
  this._identifier = a;
};
ge.prototype.getIdentifier = function() {
  return this._identifier;
};
ge.prototype.setMarker = function(a) {
  this._marker = a;
};
ge.prototype.hasMarker = function() {
  return this._hasMarks && this._marker !== this.emptyMarker;
};
ge.prototype.getMarker = function() {
  return this._marker;
};
ge.prototype.setHasMarks = function(a) {
  this._hasMarks = a;
};
ge.prototype.hasMarks = function() {
  return this._hasMarks;
};
ge.prototype.serialize = function() {
  return {
    _parseClass: "AssessmentResult",
    identifier: this._identifier,
    score: this.score,
    text: this.text,
    marks: this.marks.map((a) => a.serialize())
  };
};
ge.parse = function(a) {
  const e = new ge({
    text: a.text,
    score: a.score,
    marks: a.marks.map((t) => KY.default.parse(t))
  });
  return e.setIdentifier(a.identifier), e;
};
var ZY = za.default = ge;
Object.defineProperty(Oo, "__esModule", {
  value: !0
});
var _r = I, XY = Ga, JY = Ow(XY), QY = gn, aZ = Ow(QY), L1 = va, eZ = za, tZ = Ow(eZ);
function Ow(a) {
  return a && a.__esModule ? a : { default: a };
}
const iZ = ["en", "nl", "de", "it", "ru", "fr", "es", "pt"];
class nZ extends JY.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} config The configuration to use.
   * @returns {void}
   */
  constructor(e) {
    super();
    const t = {
      urlTitle: (0, L1.createAnchorOpeningTag)("https://yoa.st/34r"),
      urlCallToAction: (0, L1.createAnchorOpeningTag)("https://yoa.st/34s")
    };
    this.identifier = "fleschReadingEase", this._config = (0, _r.merge)(t, e);
  }
  /**
   * The assessment that runs the FleschReading on the paper.
   *
   * @param {Object} paper The paper to run this assessment on.
   * @param {Object} researcher The researcher used for the assessment.
   * @param {Object} i18n The i18n-object used for parsing translations.
   *
   * @returns {Object} An assessmentResult with the score and formatted text.
   */
  getResult(e, t, i) {
    if (this.fleschReadingResult = t.getResearch("calculateFleschReading"), this.isApplicable(e)) {
      const n = new tZ.default(i), r = this.calculateResult(i);
      return n.setScore(r.score), n.setText(r.resultText), n;
    }
    return null;
  }
  /**
   * Calculates the assessment result based on the fleschReadingScore.
   *
   * @param {Object} i18n The i18n-object used for parsing translations.
   *
   * @returns {Object} Object with score and resultText.
   */
  calculateResult(e) {
    this.fleschReadingResult < 0 && (this.fleschReadingResult = 0), this.fleschReadingResult > 100 && (this.fleschReadingResult = 100);
    let t = 0, i = "", n = e.dgettext("js-text-analysis", "Good job!");
    return this.fleschReadingResult >= this._config.borders.veryEasy ? (t = this._config.scores.veryEasy, i = e.dgettext("js-text-analysis", "very easy")) : (0, _r.inRange)(this.fleschReadingResult, this._config.borders.easy, this._config.borders.veryEasy) ? (t = this._config.scores.easy, i = e.dgettext("js-text-analysis", "easy")) : (0, _r.inRange)(this.fleschReadingResult, this._config.borders.fairlyEasy, this._config.borders.easy) ? (t = this._config.scores.fairlyEasy, i = e.dgettext("js-text-analysis", "fairly easy")) : (0, _r.inRange)(this.fleschReadingResult, this._config.borders.okay, this._config.borders.fairlyEasy) ? (t = this._config.scores.okay, i = e.dgettext("js-text-analysis", "ok")) : (0, _r.inRange)(this.fleschReadingResult, this._config.borders.fairlyDifficult, this._config.borders.okay) ? (t = this._config.scores.fairlyDifficult, i = e.dgettext("js-text-analysis", "fairly difficult"), n = e.dgettext("js-text-analysis", "Try to make shorter sentences to improve readability")) : (0, _r.inRange)(this.fleschReadingResult, this._config.borders.difficult, this._config.borders.fairlyDifficult) ? (t = this._config.scores.difficult, i = e.dgettext("js-text-analysis", "difficult"), n = e.dgettext("js-text-analysis", "Try to make shorter sentences, using less difficult words to improve readability")) : (t = this._config.scores.veryDifficult, i = e.dgettext("js-text-analysis", "very difficult"), n = e.dgettext("js-text-analysis", "Try to make shorter sentences, using less difficult words to improve readability")), t >= this._config.scores.okay ? {
      score: t,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link on yoast.com,
        	%2$s to the anchor end tag,
        	%3$s expands to the numeric Flesch reading ease score,
        	%4$s to the easiness of reading,
        	%5$s expands to a call to action based on the score */
        e.dgettext("js-text-analysis", "%1$sFlesch Reading Ease%2$s: The copy scores %3$s in the test, which is considered %4$s to read. %5$s"),
        this._config.urlTitle,
        "</a>",
        this.fleschReadingResult,
        i,
        n
      )
    } : {
      score: t,
      resultText: e.sprintf(
        /* Translators: %1$s and %5$s expand to a link on yoast.com,
        	%2$s to the anchor end tag,
        	%7$s expands to the anchor end tag and a full stop,
        	%3$s expands to the numeric Flesch reading ease score,
        	%4$s to the easiness of reading,
        	%6$s expands to a call to action based on the score */
        e.dgettext("js-text-analysis", "%1$sFlesch Reading Ease%2$s: The copy scores %3$s in the test, which is considered %4$s to read. %5$s%6$s%7$s"),
        this._config.urlTitle,
        "</a>",
        this.fleschReadingResult,
        i,
        this._config.urlCallToAction,
        n,
        "</a>."
      )
    };
  }
  /**
   * Checks if Flesch reading analysis is available for the language of the paper.
   *
   * @param {Object} paper The paper to have the Flesch score to be calculated for.
   * @returns {boolean} Returns true if the language is available and the paper is not empty.
   */
  isApplicable(e) {
    return (0, aZ.default)(e.getLocale(), iZ) && e.hasText();
  }
}
Oo.default = nZ;
var Co = {}, Ae = {};
Object.defineProperty(Ae, "__esModule", {
  value: !0
});
function Ul(a, e, t) {
  return a > e && a <= t;
}
function pI(a, e, t) {
  return a >= e && a < t;
}
function mI(a, e, t) {
  return a >= e && a <= t;
}
Ae.inRange = Ul;
Ae.inRangeStartInclusive = pI;
Ae.inRangeEndInclusive = Ul;
Ae.inRangeStartEndInclusive = mI;
Ae.default = {
  inRange: Ul,
  inRangeStartInclusive: pI,
  inRangeEndInclusive: Ul,
  inRangeStartEndInclusive: mI
};
var Lo = {};
Object.defineProperty(Lo, "__esModule", {
  value: !0
});
Lo.default = function(a, e) {
  return e > a;
};
var Pi = {};
Object.defineProperty(Pi, "__esModule", {
  value: !0
});
Pi.default = function(a) {
  return "<yoastmark class='yoast-text-mark'>" + a + "</yoastmark>";
};
var re = {}, be = {};
Object.defineProperty(be, "__esModule", {
  value: !0
});
be.default = function(a) {
  return a = a.replace(/\s{2,}/g, " "), a = a.replace(/\s\./g, "."), a = a.replace(/^\s+|\s+$/g, ""), a;
};
var Re = {}, gI = function(a, e) {
  var t;
  for (t = 0; t < a.length; t++)
    if (a[t].regex.test(e))
      return a[t];
}, I1 = function(a, e) {
  var t, i, n;
  for (t = 0; t < e.length; t++)
    if (i = gI(a, e.substring(0, t + 1)), i)
      n = i;
    else if (n)
      return { max_index: t, rule: n };
  return n ? { max_index: e.length, rule: n } : void 0;
}, zI = function(a) {
  var e = "", t = [], i = 1, n = 1, r = function(s, o) {
    a({
      type: o,
      src: s,
      line: i,
      col: n
    });
    var d = s.split(`
`);
    i += d.length - 1, n = (d.length > 1 ? 1 : n) + d[d.length - 1].length;
  };
  return {
    addRule: function(s, o) {
      t.push({ regex: s, type: o });
    },
    onText: function(s) {
      for (var o = e + s, d = I1(t, o); d && d.max_index !== o.length; )
        r(o.substring(0, d.max_index), d.rule.type), o = o.substring(d.max_index), d = I1(t, o);
      e = o;
    },
    end: function() {
      if (e.length !== 0) {
        var s = gI(t, e);
        if (!s) {
          var o = new Error("unable to tokenize");
          throw o.tokenizer2 = {
            buffer: e,
            line: i,
            col: n
          }, o;
        }
        r(e, s.type);
      }
    }
  };
};
Object.defineProperty(Re, "__esModule", {
  value: !0
});
Re.getBlocks = Re.isInlineElement = Re.isBlockElement = Re.inlineElements = Re.blockElements = void 0;
var rZ = zI, sZ = oZ(rZ), fI = I;
function oZ(a) {
  return a && a.__esModule ? a : { default: a };
}
var Io = ["address", "article", "aside", "blockquote", "canvas", "dd", "div", "dl", "fieldset", "figcaption", "figure", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup", "hr", "li", "main", "nav", "noscript", "ol", "output", "p", "pre", "section", "table", "tfoot", "ul", "video"], Wo = ["b", "big", "i", "small", "tt", "abbr", "acronym", "cite", "code", "dfn", "em", "kbd", "strong", "samp", "time", "var", "a", "bdo", "br", "img", "map", "object", "q", "script", "span", "sub", "sup", "button", "input", "label", "select", "textarea"], dZ = new RegExp("^(" + Io.join("|") + ")$", "i"), lZ = new RegExp("^(" + Wo.join("|") + ")$", "i"), cZ = new RegExp("^<(" + Io.join("|") + ")[^>]*?>$", "i"), uZ = new RegExp("^</(" + Io.join("|") + ")[^>]*?>$", "i"), pZ = new RegExp("^<(" + Wo.join("|") + ")[^>]*>$", "i"), mZ = new RegExp("^</(" + Wo.join("|") + ")[^>]*>$", "i"), gZ = /^<([^>\s/]+)[^>]*>$/, zZ = /^<\/([^>\s]+)[^>]*>$/, fZ = /^[^<]+$/, yZ = /^<[^><]*$/, wZ = /<!--(.|[\r\n])*?-->/g, Hl = [], At;
function hZ() {
  Hl = [], At = (0, sZ.default)(function(a) {
    Hl.push(a);
  }), At.addRule(fZ, "content"), At.addRule(yZ, "greater-than-sign-content"), At.addRule(cZ, "block-start"), At.addRule(uZ, "block-end"), At.addRule(pZ, "inline-start"), At.addRule(mZ, "inline-end"), At.addRule(gZ, "other-element-start"), At.addRule(zZ, "other-element-end");
}
function yI(a) {
  return dZ.test(a);
}
function wI(a) {
  return lZ.test(a);
}
function bZ(a) {
  var e = [], t = 0, i = "", n = "", r = "";
  return a = a.replace(wZ, ""), hZ(), At.onText(a), At.end(), (0, fI.forEach)(Hl, function(s, o) {
    var d = Hl[o + 1];
    switch (s.type) {
      case "content":
      case "greater-than-sign-content":
      case "inline-start":
      case "inline-end":
      case "other-tag":
      case "other-element-start":
      case "other-element-end":
      case "greater than sign":
        !d || t === 0 && (d.type === "block-start" || d.type === "block-end") ? (n += s.src, e.push(n), i = "", n = "", r = "") : n += s.src;
        break;
      case "block-start":
        t !== 0 && (n.trim() !== "" && e.push(n), n = "", r = ""), t++, i = s.src;
        break;
      case "block-end":
        t--, r = s.src, i !== "" && r !== "" ? e.push(i + n + r) : n.trim() !== "" && e.push(n), i = "", n = "", r = "";
        break;
    }
    t < 0 && (t = 0);
  }), e;
}
const hI = (0, fI.memoize)(bZ);
Re.blockElements = Io;
Re.inlineElements = Wo;
Re.isBlockElement = yI;
Re.isInlineElement = wI;
Re.getBlocks = hI;
Re.default = {
  blockElements: Io,
  inlineElements: Wo,
  isBlockElement: yI,
  isInlineElement: wI,
  getBlocks: hI
};
Object.defineProperty(re, "__esModule", {
  value: !0
});
re.stripBlockTagsAtStartEnd = re.stripIncompleteTags = re.stripFullTags = void 0;
var vZ = be, kZ = _Z(vZ), bI = Re;
function _Z(a) {
  return a && a.__esModule ? a : { default: a };
}
var $Z = new RegExp("^<(" + bI.blockElements.join("|") + ")[^>]*?>", "i"), jZ = new RegExp("</(" + bI.blockElements.join("|") + ")[^>]*?>$", "i"), vI = function(e) {
  return e = e.replace(/^(<\/([^>]+)>)+/i, ""), e = e.replace(/(<([^/>]+)>)+$/i, ""), e;
}, kI = function(e) {
  return e = e.replace($Z, ""), e = e.replace(jZ, ""), e;
}, _I = function(e) {
  return e = e.replace(/(<([^>]+)>)/ig, " "), e = (0, kZ.default)(e), e;
};
re.stripFullTags = _I;
re.stripIncompleteTags = vI;
re.stripBlockTagsAtStartEnd = kI;
re.default = {
  stripFullTags: _I,
  stripIncompleteTags: vI,
  stripBlockTagsAtStartEnd: kI
};
Object.defineProperty(Co, "__esModule", {
  value: !0
});
var $I = I, xZ = Ae, AZ = Lo, EZ = Bc(AZ), SZ = Pi, qZ = Bc(SZ), W1 = va, PZ = re, TZ = za, RZ = Bc(TZ), OZ = ct, MZ = Bc(OZ);
function Bc(a) {
  return a && a.__esModule ? a : { default: a };
}
const jI = 150, xI = function(e) {
  return (0, $I.filter)(e, function(t) {
    return (0, EZ.default)(jI, t.wordCount);
  });
}, CZ = function(e, t, i) {
  let n;
  const r = (0, W1.createAnchorOpeningTag)("https://yoa.st/35d"), s = (0, W1.createAnchorOpeningTag)("https://yoa.st/35e");
  if (e.length === 0)
    return {};
  const o = e[0].wordCount;
  return o <= 150 && (n = 9), (0, xZ.inRangeEndInclusive)(o, 150, 200) && (n = 6), o > 200 && (n = 3), n >= 7 ? {
    score: n,
    hasMarks: !1,
    text: i.sprintf(
      /* Translators:  %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
      i.dgettext("js-text-analysis", "%1$sParagraph length%2$s: None of the paragraphs are too long. Great job!"),
      r,
      "</a>"
    )
  } : {
    score: n,
    hasMarks: !0,
    text: i.sprintf(
      /* Translators: %1$s and %5$s expand to a link on yoast.com, %2$s expands to the anchor end tag, %3$d expands to the
      number of paragraphs over the recommended word limit, %4$d expands to the word limit */
      i.dngettext("js-text-analysis", "%1$sParagraph length%2$s: %3$d of the paragraphs contains more than the recommended maximum of %4$d words. %5$sShorten your paragraphs%2$s!", "%1$sParagraph length%2$s: %3$d of the paragraphs contain more than the recommended maximum of %4$d words. %5$sShorten your paragraphs%2$s!", t.length),
      r,
      "</a>",
      t.length,
      jI,
      s
    )
  };
};
var LZ = function(e) {
  return e.sort(function(t, i) {
    return i.wordCount - t.wordCount;
  });
}, IZ = function(e, t) {
  var i = t.getResearch("getParagraphLength"), n = xI(i);
  return (0, $I.map)(n, function(r) {
    var s = (0, PZ.stripBlockTagsAtStartEnd)(r.text), o = (0, qZ.default)(s);
    return new MZ.default({
      original: s,
      marked: o
    });
  });
}, WZ = function(e, t, i) {
  var n = t.getResearch("getParagraphLength");
  n = LZ(n);
  var r = xI(n), s = CZ(n, r, i), o = new RZ.default();
  return o.setScore(s.score), o.setText(s.text), o.setHasMarks(s.hasMarks), o;
}, FZ = function(e) {
  return e.hasText();
};
Co.default = {
  identifier: "textParagraphTooLong",
  getResult: WZ,
  isApplicable: FZ,
  getMarks: IZ
};
var Fo = {}, zn = {};
Object.defineProperty(zn, "__esModule", {
  value: !0
});
zn.default = function(a) {
  return Math.round(a) === a ? Math.round(a) : Math.round(a * 10) / 10;
};
Object.defineProperty(Fo, "__esModule", {
  value: !0
});
var DZ = I, BZ = zn, NZ = Do(BZ), UZ = gn, HZ = Do(UZ), VZ = Ae, KZ = Pi, GZ = Do(KZ), F1 = va, YZ = re, ZZ = za, XZ = Do(ZZ), JZ = ct, QZ = Do(JZ);
function Do(a) {
  return a && a.__esModule ? a : { default: a };
}
const aX = ["en", "de", "fr", "es", "ru", "it", "nl", "pl", "sv", "pt", "id", "ar", "he", "hu", "tr"], eX = function(e, t) {
  let i, n = 0;
  const r = 10, s = (0, F1.createAnchorOpeningTag)("https://yoa.st/34t"), o = (0, F1.createAnchorOpeningTag)("https://yoa.st/34u");
  e.total !== 0 && (n = (0, NZ.default)(e.passives.length / e.total * 100));
  const d = n > 0;
  return n <= 10 && (i = 9), (0, VZ.inRangeEndInclusive)(n, 10, 15) && (i = 6), n > 15 && (i = 3), i >= 7 ? {
    score: i,
    hasMarks: d,
    text: t.sprintf(
      /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag. */
      t.dgettext("js-text-analysis", "%1$sPassive voice%2$s: You're using enough active voice. That's great!"),
      s,
      "</a>"
    )
  } : {
    score: i,
    hasMarks: d,
    text: t.sprintf(
      /* Translators: %1$s and %5$s expand to a link on yoast.com, %2$s expands to the anchor end tag,
      %3$s expands to the percentage of sentences in passive voice, %4$s expands to the recommended value. */
      t.dgettext("js-text-analysis", "%1$sPassive voice%2$s: %3$s of the sentences contain passive voice, which is more than the recommended maximum of %4$s. %5$sTry to use their active counterparts%2$s."),
      s,
      "</a>",
      n + "%",
      r + "%",
      o
    )
  };
}, tX = function(e, t) {
  const i = t.getResearch("passiveVoice");
  return (0, DZ.map)(i.passives, function(n) {
    n = (0, YZ.stripIncompleteTags)(n);
    const r = (0, GZ.default)(n);
    return new QZ.default({
      original: n,
      marked: r
    });
  });
}, iX = function(e, t, i) {
  const n = t.getResearch("passiveVoice"), r = eX(n, i), s = new XZ.default();
  return s.setScore(r.score), s.setText(r.text), s.setHasMarks(r.hasMarks), s;
}, nX = function(e) {
  return (0, HZ.default)(e.getLocale(), aX) && e.hasText();
};
Fo.default = {
  identifier: "passiveVoice",
  getResult: iX,
  isApplicable: nX,
  getMarks: tX
};
var Bo = {};
Object.defineProperty(Bo, "__esModule", {
  value: !0
});
var Cr = I, rX = Pi, sX = Nc(rX), D1 = va, oX = re, dX = za, lX = Nc(dX), cX = ct, uX = Nc(cX), pX = gn, mX = Nc(pX);
function Nc(a) {
  return a && a.__esModule ? a : { default: a };
}
const AI = 2, gX = ["en", "de", "es", "fr", "nl", "it", "ru", "pl", "sv", "pt", "id", "ar", "he", "hu", "tr"], zX = function(e) {
  const t = (0, Cr.partition)(e, function(n) {
    return n.count > AI;
  });
  if (t[0].length === 0)
    return { total: 0 };
  const i = (0, Cr.sortBy)(t[0], function(n) {
    return n.count;
  });
  return { total: t[0].length, lowestCount: i[0].count };
}, fX = function(e, t) {
  const i = (0, D1.createAnchorOpeningTag)("https://yoa.st/35f"), n = (0, D1.createAnchorOpeningTag)("https://yoa.st/35g");
  return e.total > 0 ? {
    score: 3,
    hasMarks: !0,
    text: t.sprintf(
      /* Translators: %1$s and %5$s expand to a link on yoast.com, %2$s expands to the anchor end tag,
      %3$d expands to the number of consecutive sentences starting with the same word,
      %4$d expands to the number of instances where 3 or more consecutive sentences start with the same word. */
      t.dngettext("js-text-analysis", "%1$sConsecutive sentences%2$s: The text contains %3$d consecutive sentences starting with the same word. %5$sTry to mix things up%2$s!", "%1$sConsecutive sentences%2$s: The text contains %4$d instances where %3$d or more consecutive sentences start with the same word. %5$sTry to mix things up%2$s!", e.total),
      i,
      "</a>",
      e.lowestCount,
      e.total,
      n
    )
  } : {
    score: 9,
    hasMarks: !1,
    text: t.sprintf(
      /* Translators:  %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sConsecutive sentences%2$s: There is enough variety in your sentences. That's great!"),
      i,
      "</a>"
    )
  };
}, yX = function(e, t) {
  let i = t.getResearch("getSentenceBeginnings");
  i = (0, Cr.filter)(i, function(r) {
    return r.count > AI;
  });
  const n = (0, Cr.map)(i, function(r) {
    return r.sentences;
  });
  return (0, Cr.map)((0, Cr.flatten)(n), function(r) {
    r = (0, oX.stripIncompleteTags)(r);
    const s = (0, sX.default)(r);
    return new uX.default({
      original: r,
      marked: s
    });
  });
}, wX = function(e, t, i) {
  const n = t.getResearch("getSentenceBeginnings"), r = zX(n), s = fX(r, i), o = new lX.default();
  return o.setScore(s.score), o.setText(s.text), o.setHasMarks(s.hasMarks), o;
}, hX = function(e) {
  return (0, mX.default)(e.getLocale(), gX) && e.hasText();
};
Bo.default = {
  identifier: "sentenceBeginnings",
  getResult: wX,
  isApplicable: hX,
  getMarks: yX
};
var Mw = {}, Uc = {};
Object.defineProperty(Uc, "__esModule", {
  value: !0
});
Uc.default = function(a, e) {
  var t = (0, bX.filter)(a, function(i) {
    return (0, kX.default)(e, i.sentenceLength);
  });
  return t;
};
var bX = I, vX = Lo, kX = _X(vX);
function _X(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(Mw, "__esModule", {
  value: !0
});
var $X = zn, jX = Cw($X), xX = Ae, AX = va, EX = za, SX = Cw(EX), qX = Uc, PX = Cw(qX);
function Cw(a) {
  return a && a.__esModule ? a : { default: a };
}
var TX = function(e, t) {
  var i, n = 0, r = 20, s = (0, PX.default)(e, r).length;
  const o = (0, AX.createAnchorOpeningTag)("https://yoa.st/short-sentences");
  return e.length !== 0 && (n = (0, jX.default)(s / e.length * 100)), n <= 20 && (i = 9), (0, xX.inRangeEndInclusive)(n, 20, 25) && (i = 6), n > 25 && (i = 3), i >= 7 ? {
    score: i,
    text: t.sprintf(t.dgettext(
      "js-text-analysis",
      // Translators: %1$s expands to a link on yoast.com, %2$s expands to the recommended maximum sentence length,
      // %3$s expands to the anchor end tag.
      "The meta description contains no sentences %1$sover %2$s words%3$s."
    ), o, r, "</a>")
  } : {
    score: i,
    text: t.sprintf(t.dngettext(
      "js-text-analysis",
      // Translators: %1$d expands to number of sentences, %2$s expands to a link on yoast.com,
      // %3$s expands to the recommended maximum sentence length, %4$s expands to the anchor end tag.
      "The meta description contains %1$d sentence %2$sover %3$s words%4$s. Try to shorten this sentence.",
      "The meta description contains %1$d sentences %2$sover %3$s words%4$s. Try to shorten these sentences.",
      s
    ), s, o, r, "</a>")
  };
}, RX = function(e, t, i) {
  var n = t.getResearch("countSentencesFromDescription"), r = TX(n, i), s = new SX.default();
  return s.setScore(r.score), s.setText(r.text), s;
};
const OX = function(e) {
  return e.hasDescription();
};
Mw.default = {
  identifier: "metaDescriptionSentenceLength",
  getResult: RX,
  isApplicable: OX
};
var No = {};
Object.defineProperty(No, "__esModule", {
  value: !0
});
var B1 = I, MX = Ga, CX = ms(MX), LX = Uc, IX = ms(LX), WX = zn, FX = ms(WX), DX = Ae, BX = Pi, NX = ms(BX), N1 = va, UX = re, HX = za, VX = ms(HX), KX = ct, GX = ms(KX);
function ms(a) {
  return a && a.__esModule ? a : { default: a };
}
class YX extends CX.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {object} config The configuration to use.
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      recommendedWordCount: 20,
      slightlyTooMany: 25,
      farTooMany: 30
    };
    this.identifier = "textSentenceLength", this._config = (0, B1.merge)(t, e);
  }
  /**
   * Scores the percentage of sentences including more than the recommended number of words.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {object} i18n The object used for translations.
   * @returns {AssessmentResult} The Assessment result.
   */
  getResult(e, t, i) {
    const n = t.getResearch("countSentencesFromText"), r = this.calculatePercentage(n), s = this.calculateScore(r), o = new VX.default();
    return o.setScore(s), o.setText(this.translateScore(s, r, i)), o.setHasMarks(r > 0), o;
  }
  /**
   * Checks whether the paper has text.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True when there is text.
   */
  isApplicable(e) {
    return e.hasText();
  }
  /**
   * Mark the sentences.
   *
   * @param {Paper} paper The paper to use for the marking.
   * @param {Researcher} researcher The researcher to use.
   *
   * @returns {Array} Array with all the marked sentences.
   */
  getMarks(e, t) {
    const i = t.getResearch("countSentencesFromText"), n = this.getTooLongSentences(i);
    return (0, B1.map)(n, function(r) {
      const s = (0, UX.stripIncompleteTags)(r.sentence);
      return new GX.default({
        original: s,
        marked: (0, NX.default)(s)
      });
    });
  }
  /**
   * Translates the score to a message the user can understand.
   *
   * @param {number} score The score.
   * @param {number} percentage The percentage.
   * @param {object} i18n The object used for translations.
   *
   * @returns {string} A string.
   */
  translateScore(e, t, i) {
    const n = (0, N1.createAnchorOpeningTag)("https://yoa.st/34v"), r = (0, N1.createAnchorOpeningTag)("https://yoa.st/34w");
    return e >= 7 ? i.sprintf(
      /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
      i.dgettext("js-text-analysis", "%1$sSentence length%2$s: Great!"),
      n,
      "</a>"
    ) : i.sprintf(
      /* Translators: %1$s and %6$s expand to a link on yoast.com, %2$s expands to the anchor end tag,
      %3$d expands to percentage of sentences, %4$s expands to the recommended maximum sentence length,
      %5$s expands to the recommended maximum percentage. */
      i.dgettext("js-text-analysis", "%1$sSentence length%2$s: %3$s of the sentences contain more than %4$s words, which is more than the recommended maximum of %5$s. %6$sTry to shorten the sentences%2$s."),
      n,
      "</a>",
      t + "%",
      this._config.recommendedWordCount,
      this._config.slightlyTooMany + "%",
      r
    );
  }
  /**
   * Calculates the percentage of sentences that are too long.
   *
   * @param {Array} sentences The sentences to calculate the percentage for.
   * @returns {number} The calculates percentage of too long sentences.
   */
  calculatePercentage(e) {
    let t = 0;
    if (e.length !== 0) {
      const i = this.countTooLongSentences(e);
      t = (0, FX.default)(i / e.length * 100);
    }
    return t;
  }
  /**
   * Calculates the score for the given percentage.
   *
   * @param {number} percentage The percentage to calculate the score for.
   * @returns {number} The calculated score.
   */
  calculateScore(e) {
    let t;
    return e <= this._config.slightlyTooMany && (t = 9), (0, DX.inRangeEndInclusive)(e, this._config.slightlyTooMany, this._config.farTooMany) && (t = 6), e > this._config.farTooMany && (t = 3), t;
  }
  /**
   * Gets the sentences that are qualified as being too long.
   *
   * @param {array} sentences The sentences to filter through.
   * @returns {array} Array with all the sentences considered to be too long.
   */
  getTooLongSentences(e) {
    return (0, IX.default)(e, this._config.recommendedWordCount);
  }
  /**
   * Get the total amount of sentences that are qualified as being too long.
   *
   * @param {Array} sentences The sentences to filter through.
   * @returns {Number} The amount of sentences that are considered too long.
   */
  countTooLongSentences(e) {
    return this.getTooLongSentences(e).length;
  }
}
No.default = YX;
var Uo = {}, Mt = {};
Object.defineProperty(Mt, "__esModule", {
  value: !0
});
function Lw(a) {
  const e = [], t = /<h([1-6])(?:[^>]+)?>(.*?)<\/h\1>/ig;
  let i;
  for (; (i = t.exec(a)) !== null; )
    e.push(i);
  return e;
}
function Iw(a) {
  const e = [], t = /<h([2-3])(?:[^>]+)?>(.*?)<\/h\1>/ig;
  let i;
  for (; (i = t.exec(a)) !== null; )
    e.push(i);
  return e;
}
function EI(a) {
  return Lw(a).map((t) => t[0]);
}
function SI(a) {
  return Iw(a).map((t) => t[0]);
}
function qI(a) {
  const e = /<h([2-3])(?:[^>]+)?>(.*?)<\/h\1>/ig;
  return a.replace(e, "");
}
Mt.getSubheadings = Lw;
Mt.getSubheadingsTopLevel = Iw;
Mt.getSubheadingContents = EI;
Mt.getSubheadingContentsTopLevel = SI;
Mt.removeSubheadingsTopLevel = qI;
Mt.default = {
  getSubheadings: Lw,
  getSubheadingsTopLevel: Iw,
  getSubheadingContents: EI,
  getSubheadingContentsTopLevel: SI,
  removeSubheadingsTopLevel: qI
};
var se = {}, Ho = {};
Object.defineProperty(Ho, "__esModule", {
  value: !0
});
Ho.default = function(a) {
  return a = a.replace(ZX, ""), a = a.replace(XX, ""), a;
};
var PI = `[\\–\\-\\(\\)_\\[\\]’“”〝〞〟‟„"'.?!:;,¿¡«»‹›—×+&۔؟،؛\\<>]+`, ZX = new RegExp("^" + PI), XX = new RegExp(PI + "$");
Object.defineProperty(se, "__esModule", {
  value: !0
});
se.default = function(a) {
  if (a = (0, aJ.default)((0, JX.stripFullTags)(a)), a === "")
    return [];
  var e = a.split(/\s/g);
  return e = (0, U1.map)(e, function(t) {
    return (0, tJ.default)(t);
  }), (0, U1.filter)(e, function(t) {
    return t.trim() !== "";
  });
};
var JX = re, QX = be, aJ = TI(QX), eJ = Ho, tJ = TI(eJ), U1 = I;
function TI(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(Uo, "__esModule", {
  value: !0
});
var H1 = I, iJ = Ga, nJ = Hc(iJ), rJ = Ae, sJ = Lo, oJ = Hc(sJ), V1 = va, dJ = Mt, lJ = se, cJ = Hc(lJ), uJ = za, pJ = Hc(uJ);
function Hc(a) {
  return a && a.__esModule ? a : { default: a };
}
class mJ extends nJ.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} config The configuration to use.
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      parameters: {
        // The maximum recommended value of the subheading text.
        recommendedMaximumWordCount: 300,
        slightlyTooMany: 300,
        farTooMany: 350
      },
      urlTitle: (0, V1.createAnchorOpeningTag)("https://yoa.st/34x"),
      urlCallToAction: (0, V1.createAnchorOpeningTag)("https://yoa.st/34y"),
      scores: {
        goodShortTextNoSubheadings: 9,
        goodSubheadings: 9,
        okSubheadings: 6,
        badSubheadings: 3,
        badLongTextNoSubheadings: 2
      }
    };
    this.identifier = "subheadingsTooLong", this._config = (0, H1.merge)(t, e);
  }
  /**
   * Runs the getSubheadingTextLength research and checks scores based on length.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Object} i18n The object used for translations.
   *
   * @returns {AssessmentResult} The assessment result.
   */
  getResult(e, t, i) {
    this._subheadingTextsLength = t.getResearch("getSubheadingTextLengths"), this._subheadingTextsLength = this._subheadingTextsLength.sort(function(s, o) {
      return o.wordCount - s.wordCount;
    }), this._tooLongTextsNumber = this.getTooLongSubheadingTexts().length;
    const n = new pJ.default();
    n.setIdentifier(this.identifier), this._hasSubheadings = this.hasSubheadings(e), this._textLength = (0, cJ.default)(e.getText()).length;
    const r = this.calculateResult(i);
    return r.resultTextPlural = r.resultTextPlural || "", n.setScore(r.score), n.setText(r.resultText), n;
  }
  /**
   * Checks whether the paper has text.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True when there is text.
   */
  isApplicable(e) {
    return e.hasText();
  }
  /**
   * Checks whether the paper has subheadings.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True when there is at least one subheading.
   */
  hasSubheadings(e) {
    return (0, dJ.getSubheadings)(e.getText()).length > 0;
  }
  /**
   * Counts the number of subheading texts that are too long.
   *
   * @returns {number} The number of subheading texts that are too long.
   */
  getTooLongSubheadingTexts() {
    return (0, H1.filter)(this._subheadingTextsLength, (function(e) {
      return (0, oJ.default)(this._config.parameters.recommendedMaximumWordCount, e.wordCount);
    }).bind(this));
  }
  /**
   * Calculates the score and creates a feedback string based on the subheading texts length.
   *
   * @param {Object} i18n The object used for translations.
   *
   * @returns {Object} The calculated result.
   */
  calculateResult(e) {
    if (this._textLength > 300) {
      if (this._hasSubheadings) {
        const t = this._subheadingTextsLength[0].wordCount;
        return t <= this._config.parameters.slightlyTooMany ? {
          score: this._config.scores.goodSubheadings,
          resultText: e.sprintf(
            // Translators: %1$s expands to a link to https://yoa.st/headings, %2$s expands to the link closing tag.
            e.dgettext("js-text-analysis", "%1$sSubheading distribution%2$s: Great job!"),
            this._config.urlTitle,
            "</a>"
          )
        } : (0, rJ.inRangeEndInclusive)(t, this._config.parameters.slightlyTooMany, this._config.parameters.farTooMany) ? {
          score: this._config.scores.okSubheadings,
          resultText: e.sprintf(
            /*
             * Translators: %1$s and %5$s expand to a link on yoast.com, %3$d to the number of text sections
             * not separated by subheadings, %4$d expands to the recommended number of words following a
             * subheading, %2$s expands to the link closing tag.
             */
            e.dngettext("js-text-analysis", "%1$sSubheading distribution%2$s: %3$d section of your text is longer than %4$d words and is not separated by any subheadings. %5$sAdd subheadings to improve readability%2$s.", "%1$sSubheading distribution%2$s: %3$d sections of your text are longer than %4$d words and are not separated by any subheadings. %5$sAdd subheadings to improve readability%2$s.", this._tooLongTextsNumber),
            this._config.urlTitle,
            "</a>",
            this._tooLongTextsNumber,
            this._config.parameters.recommendedMaximumWordCount,
            this._config.urlCallToAction
          )
        } : {
          score: this._config.scores.badSubheadings,
          resultText: e.sprintf(
            /* Translators: %1$s and %5$s expand to a link on yoast.com, %3$d to the number of text sections
            not separated by subheadings, %4$d expands to the recommended number of words following a
            subheading, %2$s expands to the link closing tag. */
            e.dngettext("js-text-analysis", "%1$sSubheading distribution%2$s: %3$d section of your text is longer than %4$d words and is not separated by any subheadings. %5$sAdd subheadings to improve readability%2$s.", "%1$sSubheading distribution%2$s: %3$d sections of your text are longer than %4$d words and are not separated by any subheadings. %5$sAdd subheadings to improve readability%2$s.", this._tooLongTextsNumber),
            this._config.urlTitle,
            "</a>",
            this._tooLongTextsNumber,
            this._config.parameters.recommendedMaximumWordCount,
            this._config.urlCallToAction
          )
        };
      }
      return {
        score: this._config.scores.badLongTextNoSubheadings,
        resultText: e.sprintf(
          /* Translators: %1$s and %3$s expand to a link to https://yoa.st/headings, %2$s expands to the link closing tag. */
          e.dgettext("js-text-analysis", "%1$sSubheading distribution%2$s: You are not using any subheadings, although your text is rather long. %3$sTry and add some subheadings%2$s."),
          this._config.urlTitle,
          "</a>",
          this._config.urlCallToAction
        )
      };
    }
    return this._hasSubheadings ? {
      score: this._config.scores.goodSubheadings,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link to https://yoa.st/headings, %2$s expands to the link closing tag. */
        e.dgettext("js-text-analysis", "%1$sSubheading distribution%2$s: Great job!"),
        this._config.urlTitle,
        "</a>"
      )
    } : {
      score: this._config.scores.goodShortTextNoSubheadings,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link to https://yoa.st/headings, %2$s expands to the link closing tag. */
        e.dgettext("js-text-analysis", "%1$sSubheading distribution%2$s: You are not using any subheadings, but your text is short enough and probably doesn't need them."),
        this._config.urlTitle,
        "</a>"
      )
    };
  }
}
Uo.default = mJ;
var Vo = {};
Object.defineProperty(Vo, "__esModule", {
  value: !0
});
var K1 = va, gJ = re, zJ = za, G1 = fJ(zJ);
function fJ(a) {
  return a && a.__esModule ? a : { default: a };
}
function yJ(a, e, t) {
  const i = (0, gJ.stripFullTags)(a.getText()), n = (0, K1.createAnchorOpeningTag)("https://yoa.st/35h"), r = (0, K1.createAnchorOpeningTag)("https://yoa.st/35i");
  if (i.length < 50) {
    const s = new G1.default();
    return s.setText(t.sprintf(
      /* Translators: %1$s and %3$s expand to links to articles on Yoast.com,
      %2$s expands to the anchor end tag*/
      t.dgettext("js-text-analysis", "%1$sNot enough content%2$s: %3$sPlease add some content to enable a good analysis%2$s."),
      n,
      "</a>",
      r
    )), s.setScore(3), s;
  }
  return new G1.default();
}
Vo.default = {
  identifier: "textPresence",
  getResult: yJ
};
var Ko = {};
Object.defineProperty(Ko, "__esModule", {
  value: !0
});
var wJ = I, hJ = zn, zl = Go(hJ), bJ = Ae, Y1 = va, vJ = re, kJ = za, _J = Go(kJ), $J = ct, jJ = Go($J), xJ = Pi, AJ = Go(xJ), EJ = gn, SJ = Go(EJ);
function Go(a) {
  return a && a.__esModule ? a : { default: a };
}
const qJ = ["en", "de", "es", "fr", "nl", "it", "pt", "ru", "ca", "pl", "sv", "hu", "id", "ar", "he", "tr"], PJ = function(e) {
  return e.transitionWordSentences === 0 || e.totalSentences === 0 ? 0 : (0, zl.default)(e.transitionWordSentences / e.totalSentences * 100);
}, TJ = function(e) {
  if (e < 20)
    return 3;
  if ((0, bJ.inRangeStartInclusive)(e, 20, 30))
    return 6;
  if (e >= 30)
    return 9;
}, RJ = function(e, t) {
  const i = PJ(e), n = TJ(i), r = i > 0, s = (0, Y1.createAnchorOpeningTag)("https://yoa.st/34z"), o = (0, Y1.createAnchorOpeningTag)("https://yoa.st/35a");
  return n < 7 && i === 0 ? {
    score: (0, zl.default)(n),
    hasMarks: r,
    text: t.sprintf(
      /* Translators: %1$s and %3$s expand to a link to yoast.com, %2$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sTransition words%2$s: None of the sentences contain transition words. %3$sUse some%2$s."),
      s,
      "</a>",
      o
    )
  } : n < 7 ? {
    score: (0, zl.default)(n),
    hasMarks: r,
    text: t.sprintf(
      /* Translators: %1$s and %4$s expand to a link to yoast.com, %2$s expands to the anchor end tag,
      %3$s expands to the percentage of sentences containing transition words */
      t.dgettext("js-text-analysis", "%1$sTransition words%2$s: Only %3$s of the sentences contain transition words, which is not enough. %4$sUse more of them%2$s."),
      s,
      "</a>",
      i + "%",
      o
    )
  } : {
    score: (0, zl.default)(n),
    hasMarks: r,
    text: t.sprintf(
      /* Translators: %1$s expands to a link on yoast.com, %3$s expands to the anchor end tag. */
      t.dgettext("js-text-analysis", "%1$sTransition words%2$s: Well done!"),
      s,
      "</a>"
    )
  };
}, OJ = function(e, t, i) {
  const n = t.getResearch("findTransitionWords"), r = RJ(n, i), s = new _J.default();
  return s.setScore(r.score), s.setText(r.text), s.setHasMarks(r.hasMarks), s;
}, MJ = function(e, t) {
  const i = t.getResearch("findTransitionWords");
  return (0, wJ.map)(i.sentenceResults, function(n) {
    let r = n.sentence;
    return r = (0, vJ.stripIncompleteTags)(r), new jJ.default({
      original: r,
      marked: (0, AJ.default)(r)
    });
  });
}, CJ = function(e) {
  return (0, SJ.default)(e.getLocale(), qJ) && e.hasText();
};
Ko.default = {
  identifier: "textTransitionWords",
  getResult: OJ,
  isApplicable: CJ,
  getMarks: MJ
};
var Ww = {}, Fw = {};
Object.defineProperty(Fw, "__esModule", {
  value: !0
});
Fw.default = function(a) {
  return a.replace(LJ, "");
};
var LJ = /[.?!:;,]/g;
Object.defineProperty(Ww, "__esModule", {
  value: !0
});
var Fr = I, IJ = zn, Z1 = Yo(IJ), WJ = Pi, FJ = Yo(WJ), DJ = va, BJ = Fw, NJ = Yo(BJ), UJ = za, HJ = Yo(UJ), VJ = ct, KJ = Yo(VJ);
function Yo(a) {
  return a && a.__esModule ? a : { default: a };
}
var Pf = 3, RI = function(e) {
  return (0, Fr.filter)(e, function(t) {
    return t.complexity > Pf;
  });
}, GJ = function(e, t, i) {
  var n = 0, r = RI(t).length;
  e !== 0 && (n = r / e * 100), n = (0, Z1.default)(n);
  var s = n > 0, o = 5, d = (0, DJ.createAnchorOpeningTag)("https://yoa.st/difficult-words"), c = 9 - Math.max(Math.min(0.6 * (n - 1.7), 6), 0);
  return c = (0, Z1.default)(c), c >= 7 ? {
    score: c,
    hasMarks: s,
    text: i.sprintf(i.dgettext(
      "js-text-analysis",
      // Translators: %1$s expands to the percentage of complex words, %2$s expands to a link on yoast.com,
      // %3$d expands to the recommended maximum number of syllables,
      // %4$s expands to the anchor end tag, %5$s expands to the recommended maximum number of syllables.
      "%1$s of the words contain %2$sover %3$s syllables%4$s, which is less than or equal to the recommended maximum of %5$s."
    ), n + "%", d, Pf, "</a>", o + "%")
  } : {
    score: c,
    hasMarks: s,
    text: i.sprintf(i.dgettext(
      "js-text-analysis",
      // Translators: %1$s expands to the percentage of complex words, %2$s expands to a link on yoast.com,
      // %3$d expands to the recommended maximum number of syllables,
      // %4$s expands to the anchor end tag, %5$s expands to the recommended maximum number of syllables.
      "%1$s of the words contain %2$sover %3$s syllables%4$s, which is more than the recommended maximum of %5$s."
    ), n + "%", d, Pf, "</a>", o + "%")
  };
}, YJ = function(e, t) {
  var i = e.split(/\s+/);
  return (0, Fr.forEach)(t, function(n) {
    var r = n.wordIndex;
    (n.word === i[r] || n.word === (0, NJ.default)(i[r])) && (i[r] = i[r].replace(n.word, (0, FJ.default)(n.word)));
  }), i;
}, ZJ = function(e) {
  var t = e.split(/\S+/);
  return t.pop(), t.shift(), t;
}, XJ = function(e, t) {
  var i = t.getResearch("wordComplexity");
  return (0, Fr.flatMap)(i, function(n) {
    var r = n.words, s = n.sentence, o = RI(r);
    if (o.length === 0)
      return [];
    var d = YJ(s, o), c = ZJ(s), p = (0, Fr.zip)(d, c);
    return p = (0, Fr.flatten)(p), p = p.join(""), new KJ.default({
      original: s,
      marked: p
    });
  });
}, JJ = function(e, t, i) {
  var n = t.getResearch("wordComplexity");
  n = (0, Fr.flatMap)(n, function(d) {
    return d.words;
  });
  var r = n.length, s = GJ(r, n, i), o = new HJ.default();
  return o.setScore(s.score), o.setText(s.text), o.setHasMarks(s.hasMarks), o;
}, QJ = function(e) {
  return e.hasText();
};
Ww.default = {
  identifier: "wordComplexity",
  getResult: JJ,
  isApplicable: QJ,
  getMarks: XJ
};
var Ti = {};
Object.defineProperty(Ti, "__esModule", {
  value: !0
});
var X1 = I, aQ = Ga, eQ = OI(aQ), J1 = va, tQ = za, iQ = OI(tQ);
function OI(a) {
  return a && a.__esModule ? a : { default: a };
}
class nQ extends eQ.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   * @param {number} [config.scores.onlyFunctionWords] The score to return if the keyphrase contains only function words.
   * @param {string} [config.urlTitle] The URL to the relevant KB article.
   * @param {string} [config.urlCallToAction] The URL to the call-to-action article.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      scores: {
        onlyFunctionWords: 0
      },
      urlTitle: (0, J1.createAnchorOpeningTag)("https://yoa.st/functionwordskeyphrase-1"),
      urlCallToAction: (0, J1.createAnchorOpeningTag)("https://yoa.st/functionwordskeyphrase-2")
    };
    this.identifier = "functionWordsInKeyphrase", this._config = (0, X1.merge)(t, e);
  }
  /**
   * Runs the functionWordsInKeyphrase researcher, based on this returns an assessment result with score.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {AssessmentResult} The result of the assessment.
   */
  getResult(e, t, i) {
    this._functionWordsInKeyphrase = t.getResearch("functionWordsInKeyphrase"), this._keyword = (0, X1.escape)(e.getKeyword());
    const n = new iQ.default();
    return this._functionWordsInKeyphrase && (n.setScore(this._config.scores.onlyFunctionWords), n.setText(i.sprintf(
      /**
       * Translators:
       * %1$s and %2$s expand to links on yoast.com,
       * %3$s expands to the anchor end tag,
       * %4$s expands to the focus keyphrase of the article.
       */
      i.dgettext("js-text-analysis", '%1$sFunction words in keyphrase%3$s: Your keyphrase "%4$s" contains function words only. %2$sLearn more about what makes a good keyphrase.%3$s'),
      this._config.urlTitle,
      this._config.urlCallToAction,
      "</a>",
      this._keyword
    ))), n;
  }
  /**
   * Checks if assessment is applicable to the paper.
   *
   * @param {Paper} paper The paper to be analyzed.
   *
   * @returns {boolean} Whether the paper has keyword.
   */
  isApplicable(e) {
    return e.hasKeyword();
  }
}
Ti.default = nQ;
var Zo = {};
Object.defineProperty(Zo, "__esModule", {
  value: !0
});
var rQ = I, sQ = Ga, oQ = MI(sQ), Q1 = va, dQ = za, lQ = MI(dQ);
function MI(a) {
  return a && a.__esModule ? a : { default: a };
}
class cQ extends oQ.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   * @param {number} [config.parameters.recommendedMinimum] The recommended minimum number of internal links in the text.
   * @param {number} [config.scores.allInternalFollow] The score to return if all internal links are do-follow.
   * @param {number} [config.scores.someInternalFollow] The score to return if some but not all internal links are do-follow.
   * @param {number} [config.scores.noneInternalFollow] The score to return if all internal links are no-follow.
   * @param {number} [config.scores.noInternal] The score to return if there are no internal links.
   * @param {string} [config.url] The URL to the relevant KB article.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      parameters: {
        recommendedMinimum: 1
      },
      scores: {
        allInternalFollow: 9,
        someInternalFollow: 8,
        noneInternalFollow: 7,
        noInternal: 3
      },
      urlTitle: (0, Q1.createAnchorOpeningTag)("https://yoa.st/33z"),
      urlCallToAction: (0, Q1.createAnchorOpeningTag)("https://yoa.st/34a")
    };
    this.identifier = "internalLinks", this._config = (0, rQ.merge)(t, e);
  }
  /**
   * Runs the getLinkStatistics module, based on this returns an assessment result with score.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {AssessmentResult} The result of the assessment.
   */
  getResult(e, t, i) {
    this.linkStatistics = t.getResearch("getLinkStatistics");
    const n = new lQ.default(), r = this.calculateResult(i);
    return n.setScore(r.score), n.setText(r.resultText), n;
  }
  /**
   * Checks if assessment is applicable to the paper.
   *
   * @param {Paper} paper The paper to be analyzed.
   *
   * @returns {boolean} Whether the paper has text.
   */
  isApplicable(e) {
    return e.hasText();
  }
  /**
   * Returns a score and text based on the linkStatistics object.
   *
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {Object} ResultObject with score and text
   */
  calculateResult(e) {
    return this.linkStatistics.internalTotal === 0 ? {
      score: this._config.scores.noInternal,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sInternal links%3$s: No internal links appear in this page, %2$smake sure to add some%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : this.linkStatistics.internalNofollow === this.linkStatistics.internalTotal ? {
      score: this._config.scores.noneInternalFollow,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sInternal links%3$s: The internal links in this page are all nofollowed. %2$sAdd some good internal links%3$s."),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : this.linkStatistics.internalDofollow === this.linkStatistics.internalTotal ? {
      score: this._config.scores.allInternalFollow,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sInternal links%2$s: You have enough internal links. Good job!"),
        this._config.urlTitle,
        "</a>"
      )
    } : {
      score: this._config.scores.someInternalFollow,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sInternal links%2$s: There are both nofollowed and normal internal links on this page. Good job!"),
        this._config.urlTitle,
        "</a>"
      )
    };
  }
}
Zo.default = cQ;
var Ri = {};
Object.defineProperty(Ri, "__esModule", {
  value: !0
});
var uQ = I, pQ = Ga, mQ = CI(pQ), a$ = va, gQ = za, zQ = CI(gQ);
function CI(a) {
  return a && a.__esModule ? a : { default: a };
}
class fQ extends mQ.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   * @param {number} [config.scores.good] The score to return if there is a match within one sentence in the first paragraph.
   * @param {number} [config.scores.okay] The score to return if all words are matched in the first paragraph.
   * @param {number} [config.scores.bad] The score to return if not all words are matched in the first paragraph.
   * @param {string} [config.url] The URL to the relevant article on Yoast.com.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      scores: {
        good: 9,
        okay: 6,
        bad: 3
      },
      urlTitle: (0, a$.createAnchorOpeningTag)("https://yoa.st/33e"),
      urlCallToAction: (0, a$.createAnchorOpeningTag)("https://yoa.st/33f")
    };
    this.identifier = "introductionKeyword", this._config = (0, uQ.merge)(t, e);
  }
  /**
   * Assesses the presence of keyphrase or synonyms in the first paragraph.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {AssessmentResult} The result of this assessment.
   */
  getResult(e, t, i) {
    const n = new zQ.default();
    this._firstParagraphMatches = t.getResearch("firstParagraph");
    const r = this.calculateResult(i);
    return n.setScore(r.score), n.setText(r.resultText), n;
  }
  /**
   * Checks if the paper has both keyword and text.
   *
   * @param {Paper} paper The paper to be analyzed.
   *
   * @returns {boolean} Whether the assessment is applicable or not.
   */
  isApplicable(e) {
    return e.hasKeyword() && e.hasText();
  }
  /**
   * Returns a result based on the number of occurrences of keyphrase in the first paragraph.
   *
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {Object} result object with a score and translation text.
   */
  calculateResult(e) {
    return this._firstParagraphMatches.foundInOneSentence ? {
      score: this._config.scores.good,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in introduction%2$s: Well done!"),
        this._config.urlTitle,
        "</a>"
      )
    } : this._firstParagraphMatches.foundInParagraph ? {
      score: this._config.scores.okay,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in introduction%3$s:Your keyphrase or its synonyms appear in the first paragraph of the copy, but not within one sentence. %2$sFix that%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : {
      score: this._config.scores.bad,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in introduction%3$s: Your keyphrase or its synonyms do not appear in the first paragraph. %2$sMake sure the topic is clear immediately%3$s."),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    };
  }
}
Ri.default = fQ;
var Vc = {}, Le = {}, nr = {};
Object.defineProperty(nr, "__esModule", {
  value: !0
});
var Dw = function(e) {
  return e.replace(/&nbsp;/g, " ");
}, Bw = function(e) {
  return e.replace(/\s/g, " ");
}, LI = function(e) {
  return e = Dw(e), Bw(e);
};
nr.unifyNonBreakingSpace = Dw;
nr.unifyWhiteSpace = Bw;
nr.unifyAllSpaces = LI;
nr.default = {
  unifyNonBreakingSpace: Dw,
  unifyWhiteSpace: Bw,
  unifyAllSpaces: LI
};
var Nw = {}, Ke = {};
Object.defineProperty(Ke, "__esModule", {
  value: !0
});
function Uw(a) {
  return a.replace(/[‘’‛`]/g, "'");
}
function Hw(a) {
  return a.replace(/[“”〝〞〟‟„]/g, '"');
}
function II(a) {
  return Hw(Uw(a));
}
Ke.normalizeSingle = Uw;
Ke.normalizeDouble = Hw;
Ke.normalize = II;
Ke.default = {
  normalizeSingle: Uw,
  normalizeDouble: Hw,
  normalize: II
};
Object.defineProperty(Nw, "__esModule", {
  value: !0
});
var Gi = I, yQ = zI, wQ = bQ(yQ), hQ = Ke;
function bQ(a) {
  return a && a.__esModule ? a : { default: a };
}
const Vw = ".", Kw = "?!;…۔؟", vQ = new RegExp("^[" + Vw + "]$"), kQ = new RegExp("^[" + Kw + "]$"), _Q = new RegExp("^[^" + Vw + Kw + "<\\(\\)\\[\\]]+$"), $Q = /^<[^><]*$/, jQ = /^<([^>\s/]+)[^>]*>$/mi, xQ = /^<\/([^>\s]+)[^>]*>$/mi, AQ = /^\s*[[({]\s*$/, EQ = /^\s*[\])}]\s*$/, SQ = new RegExp("[" + Vw + Kw + "]$");
class qQ {
  /**
   * Returns whether or not a certain character is a number.
   *
   * @param {string} character The character to check.
   * @returns {boolean} Whether or not the character is a capital letter.
   */
  isNumber(e) {
    return !(0, Gi.isNaN)(parseInt(e, 10));
  }
  /**
   * Returns whether or not a given HTML tag is a break tag.
   *
   * @param {string} htmlTag The HTML tag to check.
   * @returns {boolean} Whether or not the given HTML tag is a break tag.
   */
  isBreakTag(e) {
    return /<br/.test(e);
  }
  /**
   * Returns whether or not a given character is quotation mark.
   *
   * @param {string} character The character to check.
   * @returns {boolean} Whether or not the given character is a quotation mark.
   */
  isQuotation(e) {
    return e = (0, hQ.normalize)(e), e === "'" || e === '"';
  }
  /**
   * Returns whether or not a given character is a punctuation mark that can be at the beginning
   * of a sentence, like ¿ and ¡ used in Spanish.
   *
   * @param {string} character The character to check.
   * @returns {boolean} Whether or not the given character is a punctuation mark.
   */
  isPunctuation(e) {
    return e === "¿" || e === "¡";
  }
  /**
   * Removes duplicate whitespace from a given text.
   *
   * @param {string} text The text with duplicate whitespace.
   * @returns {string} The text without duplicate whitespace.
   */
  removeDuplicateWhitespace(e) {
    return e.replace(/\s+/, " ");
  }
  /**
   * Returns whether or not a certain character is a capital letter.
   *
   * @param {string} character The character to check.
   * @returns {boolean} Whether or not the character is a capital letter.
   */
  isCapitalLetter(e) {
    return e !== e.toLocaleLowerCase();
  }
  /**
   * Checks whether the given character is a smaller than sign.
   *
   * This function is used to make sure that tokenizing the content after
   * the smaller than sign works as expected.
   * E.g. 'A sentence. < Hello world!' = ['A sentence.', '< Hello world!'].
   *
   * @param {string} character The character to check.
   * @returns {boolean} Whether the character is a smaller than sign ('<') or not.
   */
  isSmallerThanSign(e) {
    return e === "<";
  }
  /**
   * Retrieves the next two characters from an array with the two next tokens.
   *
   * @param {Array} nextTokens The two next tokens. Might be undefined.
   * @returns {string} The next two characters.
   */
  getNextTwoCharacters(e) {
    let t = "";
    return (0, Gi.isUndefined)(e[0]) || (t += e[0].src), (0, Gi.isUndefined)(e[1]) || (t += e[1].src), t = this.removeDuplicateWhitespace(t), t;
  }
  /**
   * Checks whether a character is from a language that's written from right to left.
   * These languages don't have capital letter forms. Therefore any letter from these languages is a
   * potential sentence beginning.
   *
   * @param {string} letter The letter to check.
   *
   * @returns {boolean} Whether the letter is from an LTR language.
   */
  isLetterfromRTLLanguage(e) {
    return [
      // Hebrew characters.
      /^[\u0590-\u05fe]+$/i,
      // Arabic characters (used for Arabic, Farsi, Urdu).
      /^[\u0600-\u06FF]+$/i,
      // Additional Farsi characters.
      /^[\uFB8A\u067E\u0686\u06AF]+$/i
    ].some((i) => i.test(e));
  }
  /**
   * Checks if the sentenceBeginning beginning is a valid beginning.
   *
   * @param {string} sentenceBeginning The beginning of the sentence to validate.
   * @returns {boolean} Returns true if it is a valid beginning, false if it is not.
   */
  isValidSentenceBeginning(e) {
    return this.isCapitalLetter(e) || this.isLetterfromRTLLanguage(e) || this.isNumber(e) || this.isQuotation(e) || this.isPunctuation(e) || this.isSmallerThanSign(e);
  }
  /**
   * Checks if the token is a valid sentence start.
   *
   * @param {Object} token The token to validate.
   * @returns {boolean} Returns true if the token is valid sentence start, false if it is not.
   */
  isSentenceStart(e) {
    return !(0, Gi.isUndefined)(e) && (e.type === "html-start" || e.type === "html-end" || e.type === "block-start");
  }
  /**
   * Checks if the token is a valid sentence ending. A valid sentence ending is either a full stop or another
   * delimiter such as "?", "!", etc.
   *
   * @param {Object} token The token to validate.
   * @returns {boolean} Returns true if the token is valid sentence ending, false if it is not.
   */
  isSentenceEnding(e) {
    return !(0, Gi.isUndefined)(e) && (e.type === "full-stop" || e.type === "sentence-delimiter");
  }
  /**
   * Tokens that represent a '<', followed by content until it enters another '<' or '>'
   * gets another pass by the tokenizer.
   *
   * @param {Object} token A token of type 'smaller-than-sign-content'.
   * @param {string[]} tokenSentences The current array of found sentences. Sentences may get added by this method.
   * @param {string} currentSentence The current sentence. Sentence parts may get appended by this method.
   * @returns {{tokenSentences, currentSentence}} The found sentences and the current sentence, appended when necessary.
   */
  tokenizeSmallerThanContent(e, t, i) {
    const n = e.src.substring(1), r = this.createTokenizer();
    this.tokenize(r.tokenizer, n);
    const s = this.getSentencesFromTokens(r.tokens, !1);
    if (s[0] = (0, Gi.isUndefined)(s[0]) ? "<" : "<" + s[0], this.isValidSentenceBeginning(s[0]) && (t.push(i), i = ""), i += s[0], s.length > 1) {
      t.push(i), i = "", s.shift();
      const o = s.pop();
      s.forEach((d) => {
        t.push(d);
      }), o.match(SQ) ? t.push(o) : i = o;
    }
    return {
      tokenSentences: t,
      currentSentence: i
    };
  }
  /**
   * Creates a tokenizer.
   *
   * @returns {Object} The tokenizer and the tokens.
   */
  createTokenizer() {
    const e = [], t = (0, wQ.default)(function(i) {
      e.push(i);
    });
    return t.addRule(vQ, "full-stop"), t.addRule($Q, "smaller-than-sign-content"), t.addRule(jQ, "html-start"), t.addRule(xQ, "html-end"), t.addRule(AQ, "block-start"), t.addRule(EQ, "block-end"), t.addRule(kQ, "sentence-delimiter"), t.addRule(_Q, "sentence"), {
      tokenizer: t,
      tokens: e
    };
  }
  /**
   * Tokenizes the given text using the given tokenizer.
   *
   * @param {Object} tokenizer The tokenizer to use.
   * @param {string} text The text to tokenize.
   * @returns {void}
   */
  tokenize(e, t) {
    e.onText(t);
    try {
      e.end();
    } catch (i) {
      console.error("Tokenizer end error:", i, i.tokenizer2);
    }
  }
  /**
   * Returns an array of sentences for a given array of tokens, assumes that the text has already been split into blocks.
   *
   * @param {Object[]} tokenArray The tokens from the sentence tokenizer.
   * @param {boolean} [trimSentences=true] Whether to trim the sentences at the end or not.
   *
   * @returns {string[]} A list of sentences.
   */
  getSentencesFromTokens(e, t = !0) {
    let i = [], n = "", r, s;
    do {
      s = !1;
      const o = e[0], d = e[e.length - 1];
      o && d && o.type === "html-start" && d.type === "html-end" && (e = e.slice(1, e.length - 1), s = !0);
    } while (s && e.length > 1);
    return e.forEach((o, d) => {
      let c, p, m;
      const w = e[d + 1], v = e[d - 1], $ = e[d + 2];
      switch (o.type) {
        case "html-start":
        case "html-end":
          this.isBreakTag(o.src) ? (i.push(n), n = "") : n += o.src;
          break;
        case "smaller-than-sign-content":
          m = this.tokenizeSmallerThanContent(o, i, n), i = m.tokenSentences, n = m.currentSentence;
          break;
        case "sentence":
          n += o.src;
          break;
        case "sentence-delimiter":
          n += o.src, !(0, Gi.isUndefined)(w) && w.type !== "block-end" && w.type !== "sentence-delimiter" && (i.push(n), n = "");
          break;
        case "full-stop":
          if (n += o.src, p = this.getNextTwoCharacters([w, $]), c = p.length >= 2, r = c ? p[1] : "", c && this.isNumber(p[0]))
            break;
          (c && this.isValidSentenceBeginning(r) || this.isSentenceStart(w)) && (i.push(n), n = "");
          break;
        case "block-start":
          n += o.src;
          break;
        case "block-end":
          if (n += o.src, p = this.getNextTwoCharacters([w, $]), c = p.length >= 2, r = c ? p[0] : "", c && this.isNumber(p[0]) || this.isSentenceEnding(v) && !(this.isValidSentenceBeginning(r) || this.isSentenceStart(w)))
            break;
          this.isSentenceEnding(v) && (this.isValidSentenceBeginning(r) || this.isSentenceStart(w)) && (i.push(n), n = "");
          break;
      }
    }), n !== "" && i.push(n), t && (i = (0, Gi.map)(i, function(o) {
      return o.trim();
    })), i;
  }
}
Nw.default = qQ;
Object.defineProperty(Le, "__esModule", {
  value: !0
});
Le.default = function(a) {
  a = (0, TQ.unifyNonBreakingSpace)(a);
  let e = (0, PQ.getBlocks)(a);
  e = (0, Or.flatMap)(e, function(i) {
    return i.split(LQ);
  });
  const t = (0, Or.flatMap)(e, WQ);
  return (0, Or.filter)(t, (0, Or.negate)(Or.isEmpty));
};
var Or = I, PQ = Re, TQ = nr, RQ = Nw, OQ = MQ(RQ);
function MQ(a) {
  return a && a.__esModule ? a : { default: a };
}
const CQ = `
\r|
|\r`, LQ = new RegExp(CQ);
function IQ(a) {
  const e = new OQ.default();
  var t = e.createTokenizer();
  const i = t.tokenizer, n = t.tokens;
  return e.tokenize(i, a), n.length === 0 ? [] : e.getSentencesFromTokens(n);
}
const WQ = (0, Or.memoize)(IQ);
Object.defineProperty(Vc, "__esModule", {
  value: !0
});
var FQ = I, DQ = Ga, BQ = Gw(DQ), e$ = va, NQ = Le, UQ = Gw(NQ), HQ = za, VQ = Gw(HQ);
function Gw(a) {
  return a && a.__esModule ? a : { default: a };
}
class KQ extends BQ.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   * @param {number} [config.parameters.goodDistributionScore]
   *      The average distribution score that needs to be received from the step function to get a GOOD result.
   * @param {number} [config.parameters.acceptableDistributionScore]
   *      The average distribution score that needs to be received from the step function to get an OKAY result.
   * @param {number} [config.scores.good]             The score to return if keyword occurrences are evenly distributed.
   * @param {number} [config.scores.okay]             The score to return if keyword occurrences are somewhat unevenly distributed.
   * @param {number} [config.scores.bad]              The score to return if there is way too much text between keyword occurrences.
   * @param {number} [config.scores.consideration]    The score to return if there are no keyword occurrences.
   * @param {string} [config.url]                     The URL to the relevant KB article.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      parameters: {
        goodDistributionScore: 30,
        acceptableDistributionScore: 50
      },
      scores: {
        good: 9,
        okay: 6,
        bad: 1,
        consideration: 0
      },
      urlTitle: (0, e$.createAnchorOpeningTag)("https://yoa.st/33q"),
      urlCallToAction: (0, e$.createAnchorOpeningTag)("https://yoa.st/33u")
    };
    this.identifier = "keyphraseDistribution", this._config = (0, FQ.merge)(t, e);
  }
  /**
   * Runs the keyphraseDistribution research and based on this returns an assessment result.
   *
   * @param {Paper}      paper      The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Jed}        i18n       The object used for translations.
   *
   * @returns {AssessmentResult} The assessment result.
   */
  getResult(e, t, i) {
    this._keyphraseDistribution = t.getResearch("keyphraseDistribution");
    const n = new VQ.default(), r = this.calculateResult(i);
    return n.setScore(r.score), n.setText(r.resultText), n.setHasMarks(this._keyphraseDistribution.sentencesToHighlight.length > 0), n;
  }
  /**
   * Calculates the result based on the keyphraseDistribution research.
   *
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {Object} Object with score and feedback text.
   */
  calculateResult(e) {
    const t = this._keyphraseDistribution.keyphraseDistributionScore;
    return t === 100 ? {
      score: this._config.scores.consideration,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links to Yoast.com articles,
        %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sKeyphrase distribution%3$s: %2$sInclude your keyphrase or its synonyms in the text so that we can check keyphrase distribution%3$s."),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : t > this._config.parameters.acceptableDistributionScore ? {
      score: this._config.scores.bad,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links to Yoast.com articles,
        %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sKeyphrase distribution%3$s: Very uneven. Large parts of your text do not contain the keyphrase or its synonyms. %2$sDistribute them more evenly%3$s."),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : t > this._config.parameters.goodDistributionScore && t <= this._config.parameters.acceptableDistributionScore ? {
      score: this._config.scores.okay,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links to Yoast.com articles,
        %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sKeyphrase distribution%3$s: Uneven. Some parts of your text do not contain the keyphrase or its synonyms. %2$sDistribute them more evenly%3$s."),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : {
      score: this._config.scores.good,
      resultText: e.sprintf(
        /* Translators: %1$s expands to links to Yoast.com articles, %2$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sKeyphrase distribution%2$s: Good job!"),
        this._config.urlTitle,
        "</a>"
      )
    };
  }
  /**
   * Creates a marker for all content words in keyphrase and synonyms.
   *
   * @returns {Array} All markers for the current text.
   */
  getMarks() {
    return this._keyphraseDistribution.sentencesToHighlight;
  }
  /**
   * Checks whether the paper has a text with at least 10 words and a keyword.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True when there is a keyword and a text with 10 words or more.
   */
  isApplicable(e) {
    return e.hasText() && e.hasKeyword() && (0, UQ.default)(e.getText()).length >= 15;
  }
}
Vc.default = KQ;
var Oi = {}, Kc = {}, fn = {}, Yw = {}, gs = {};
Object.defineProperty(gs, "__esModule", {
  value: !0
});
gs.default = function() {
  return {
    participleLike: rm,
    otherAuxiliaries: sm.concat(om),
    // These auxiliaries are filtered from the beginning and end of word combinations in the prominent words.
    filteredAuxiliaries: rm.concat(sm),
    // These auxiliaries are not filtered from the beginning of word combinations in the prominent words.
    infinitiveAuxiliaries: om,
    allAuxiliaries: rm.concat(sm, om)
  };
};
var rm = ["bekommst", "bekommt", "bekamst", "bekommest", "bekommet", "bekämest", "bekämst", "bekämet", "bekämt", "gekriegt", "gehörst", "gehört", "gehörtest", "gehörtet", "gehörest", "gehöret", "erhältst", "erhält", "erhaltet", "erhielt", "erhieltest", "erhieltst", "erhieltet", "erhaltest"], sm = ["werde", "wirst", "wird", "werden", "werdet", "wurde", "ward", "wurdest", "wardst", "wurden", "wurdet", "worden", "werdest", "würde", "würdest", "würden", "würdet", "bekomme", "bekommen", "bekam", "bekamen", "bekäme", "bekämen", "kriege", "kriegst", "kriegt", "kriegen", "kriegte", "kriegtest", "kriegten", "kriegtet", "kriegest", "krieget", "gehöre", "gehören", "gehörte", "gehörten", "erhalte", "erhalten", "erhielten", "erhielte"], om = ["werden", "bekommen", "kriegen", "gehören", "erhalten"], Gc = {};
Object.defineProperty(Gc, "__esModule", {
  value: !0
});
Gc.default = function() {
  return {
    singleWords: t$,
    multipleWords: i$,
    allWords: t$.concat(i$)
  };
};
const t$ = ["aber", "abschließend", "abschliessend", "alldieweil", "allerdings", "also", "anderenteils", "andererseits", "andernteils", "anfaenglich", "anfänglich", "anfangs", "angenommen", "anschliessend", "anschließend", "aufgrund", "ausgenommen", "ausserdem", "außerdem", "beispielsweise", "bevor", "beziehungsweise", "bspw", "bzw", "d.h", "da", "dabei", "dadurch", "dafuer", "dafür", "dagegen", "daher", "dahingegen", "danach", "dann", "darauf", "darum", "dass", "davor", "dazu", "dementgegen", "dementsprechend", "demgegenüber", "demgegenueber", "demgemaess", "demgemäß", "demzufolge", "denn", "dennoch", "dergestalt", "derweil", "desto", "deshalb", "desungeachtet", "deswegen", "doch", "dort", "drittens", "ebenfalls", "ebenso", "endlich", "ehe", "einerseits", "einesteils", "entsprechend", "entweder", "erst", "erstens", "falls", "ferner", "folgerichtig", "folglich", "fürderhin", "fuerderhin", "genauso", "hierdurch", "hierzu", "hingegen", "immerhin", "indem", "indes", "indessen", "infolge", "infolgedessen", "insofern", "insoweit", "inzwischen", "jedenfalls", "jedoch", "kurzum", "m.a.w", "mitnichten", "mitunter", "möglicherweise", "moeglicherweise", "nachdem", "nebenher", "nichtsdestotrotz", "nichtsdestoweniger", "ob", "obenrein", "obgleich", "obschon", "obwohl", "obzwar", "ohnehin", "richtigerweise", "schliesslich", "schließlich", "seit", "seitdem", "sobald", "sodass", "so dass", "sofern", "sogar", "solang", "solange", "somit", "sondern", "sooft", "soviel", "soweit", "sowie", "sowohl", "statt", "stattdessen", "trotz", "trotzdem", "überdies", "übrigens", "ueberdies", "uebrigens", "ungeachtet", "vielmehr", "vorausgesetzt", "vorher", "waehrend", "während", "währenddessen", "waehrenddessen", "weder", "wegen", "weil", "weiter", "weiterhin", "wenn", "wenngleich", "wennschon", "wennzwar", "weshalb", "widrigenfalls", "wiewohl", "wobei", "wohingegen", "z.b", "zudem", "zuerst", "zufolge", "zuletzt", "zumal", "zuvor", "zwar", "zweitens"], i$ = ["abgesehen von", "abgesehen davon", "als dass", "als ob", "als wenn", "anders ausgedrückt", "anders ausgedrueckt", "anders formuliert", "anders gefasst", "anders gefragt", "anders gesagt", "anders gesprochen", "anstatt dass", "auch wenn", "auf grund", "auf jeden fall", "aus diesem grund", "ausser dass", "außer dass", "ausser wenn", "außer wenn", "besser ausgedrückt", "besser ausgedrueckt", "besser formuliert", "besser gesagt", "besser gesprochen", "bloss dass", "bloß dass", "darüber hinaus", "das heisst", "das heißt", "des weiteren", "dessen ungeachtet", "ebenso wie", "genauso wie", "geschweige denn", "im fall", "im falle", "im folgenden", "im gegensatz dazu", "im gegenteil", "im grunde genommen", "in diesem sinne", "je nachdem", "kurz gesagt", "mit anderen worten", "ohne dass", "so dass", "umso mehr als", "umso weniger als", "umso mehr, als", "umso weniger, als", "unbeschadet dessen", "und zwar", "ungeachtet dessen", "unter dem strich", "zum beispiel", "zunächts einmal"];
Object.defineProperty(Yw, "__esModule", {
  value: !0
});
Yw.default = function() {
  return {
    // These word categories are filtered at the beginning of word combinations.
    filteredAtBeginning: [].concat(_$, r$, O$, j$, P$),
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(l$, M$),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(o$, x$, A$, p$, T$, g$),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(s$, v$, c$, u$, XQ, z$, C$, d$, $$, q$, k$, n$, R$, y$, E$, S$, w$, b$, F$, h$, L$, I$, W$, f$, m$),
    // This export contains all of the above words.
    all: [].concat(o$, d$, l$, p$, m$, z$, f$, c$, u$, g$, y$, w$, h$, b$, v$, n$, r$, k$, _$, $$, j$, x$, A$, E$, S$, q$, P$, s$, JQ, T$, R$, O$, C$, M$, L$, W$, F$, I$, QQ, aaa)
  };
};
var GQ = gs, WI = FI(GQ), YQ = Gc, ZQ = FI(YQ);
function FI(a) {
  return a && a.__esModule ? a : { default: a };
}
const n$ = (0, WI.default)().filteredAuxiliaries, r$ = (0, WI.default)().infinitiveAuxiliaries, s$ = (0, ZQ.default)().singleWords, o$ = ["das", "dem", "den", "der", "des", "die", "ein", "eine", "einem", "einen", "einer", "eines"], d$ = ["eins", "zwei", "drei", "vier", "fünf", "sechs", "sieben", "acht", "neun", "zehn", "elf", "zwölf", "zwoelf", "dreizehn", "vierzehn", "fünfzehn", "fuenfzehn", "sechzehn", "siebzehn", "achtzehn", "neunzehn", "zwanzig", "hundert", "einhundert", "zweihundert", "dreihundert", "vierhundert", "fünfhundert", "fuenfhundert", "sechshundert", "siebenhundert", "achthundert", "neunhundert", "tausend", "million", "milliarde", "billion", "billiarde"], l$ = ["erste", "erster", "ersten", "erstem", "erstes", "zweite", "zweites", "zweiter", "zweitem", "zweiten", "dritte", "dritter", "drittes", "dritten", "drittem", "vierter", "vierten", "viertem", "viertes", "vierte", "fünfte", "fünfter", "fünftes", "fünften", "fünftem", "fuenfte", "fuenfter", "fuenftem", "fuenften", "fuenftes", "sechste", "sechster", "sechstes", "sechsten", "sechstem", "siebte", "siebter", "siebten", "siebtem", "siebtes", "achte", "achter", "achten", "achtem", "achtes", "neunte", "neunter", "neuntes", "neunten", "neuntem", "zehnte", "zehnter", "zehnten", "zehntem", "zehntes", "elfte", "elfter", "elftes", "elften", "elftem", "zwölfte", "zwölfter", "zwölften", "zwölftem", "zwölftes", "zwoelfte", "zwoelfter", "zwoelften", "zwoelftem", "zwoelftes", "dreizehnte", "dreizehnter", "dreizehntes", "dreizehnten", "dreizehntem", "vierzehnte", "vierzehnter", "vierzehntes", "vierzehnten", "vierzehntem", "fünfzehnte", "fünfzehnten", "fünfzehntem", "fünfzehnter", "fünfzehntes", "fuenfzehnte", "fuenfzehnten", "fuenfzehntem", "fuenfzehnter", "fuenfzehntes", "sechzehnte", "sechzehnter", "sechzehnten", "sechzehntes", "sechzehntem", "siebzehnte", "siebzehnter", "siebzehntes", "siebzehntem", "siebzehnten", "achtzehnter", "achtzehnten", "achtzehntem", "achtzehntes", "achtzehnte", "nehnzehnte", "nehnzehnter", "nehnzehntem", "nehnzehnten", "nehnzehntes", "zwanzigste", "zwanzigster", "zwanzigstem", "zwanzigsten", "zwanzigstes"], c$ = ["ich", "du", "er", "sie", "es", "wir", "ihr"], u$ = ["mich", "dich", "ihn", "uns", "euch"], XQ = ["mir", "dir", "ihm", "ihnen"], p$ = ["denen", "deren", "derer", "dessen", "diese", "diesem", "diesen", "dieser", "dieses", "jene", "jenem", "jenen", "jener", "jenes", "welch", "welcher", "welches", "derjenige", "desjenigen", "demjenigen", "denjenigen", "diejenige", "derjenigen", "dasjenige", "diejenigen"], m$ = ["mein", "meine", "meinem", "meiner", "meines", "meinen", "dein", "deine", "deinem", "deiner", "deines", "deinen", "sein", "seine", "seinem", "seiner", "seines", "ihre", "ihrem", "ihren", "ihrer", "ihres", "unser", "unsere", "unserem", "unseren", "unserer", "unseres", "euer", "eure", "eurem", "euren", "eurer", "eures", "einanders"], g$ = ["manche", "manch", "viele", "viel", "vieler", "vielen", "vielem", "all", "alle", "aller", "alles", "allen", "allem", "allerlei", "solcherlei", "einige", "etliche", "wenige", "weniger", "wenigen", "wenigem", "weniges", "wenig", "wenigerer", "wenigeren", "wenigerem", "wenigere", "wenigeres", "wenig", "bisschen", "paar", "kein", "keines", "keinem", "keinen", "keine", "mehr", "genug", "mehrere", "mehrerer", "mehreren", "mehrerem", "mehreres", "verschiedene", "verschiedener", "verschiedenen", "verschiedenem", "verschiedenes", "verschiedne", "verschiedner", "verschiednen", "verschiednem", "verschiednes", "art", "arten", "sorte", "sorten"], z$ = ["sich"], f$ = ["einander"], y$ = ["andere", "anderer", "anderem", "anderen", "anderes", "andren", "andern", "andrem", "anderm", "andre", "andrer", "andres", "beide", "beides", "beidem", "beider", "beiden", "etwas", "irgendetwas", "irgendein", "irgendeinen", "irgendeinem", "irgendeines", "irgendeine", "irgendeiner", "irgendwas", "irgendwessen", "irgendwer", "irgendwen", "irgendwem", "irgendwelche", "irgendwelcher", "irgendwelchem", "irgendwelchen", "irgendwelches", "irgendjemand", "irgendjemanden", "irgendjemandem", "irgendjemandes", "irgendwie", "wer", "wen", "wem", "wessen", "was", "welchen", "welchem", "welche", "jeder", "jedes", "jedem", "jeden", "jede", "jedweder", "jedweden", "jedwedem", "jedwedes", "jedwede", "jeglicher", "jeglichen", "jeglichem", "jegliches", "jegliche", "jedermann", "jedermanns", "jemand", "jemanden", "jemandem", "jemands", "jemandes", "man", "meinesgleichen", "sämtlich", "saemtlich", "sämtlicher", "saemtlicher", "sämtlichen", "saemtlichen", "sämtlichem", "saemtlichem", "sämtliches", "saemtliches", "sämtliche", "saemtliche", "solche", "solcher", "solchen", "solchem", "solches", "niemand", "niemanden", "niemandem", "niemandes", "niemands", "nichts", "zweiter"], w$ = ["warum", "wie", "wo", "woher", "wohin", "wann"], h$ = ["dahinter", "damit", "daneben", "daran", "daraus", "darin", "darunter", "darüber", "darueber", "davon", "dazwischen", "hieran", "hierauf", "hieraus", "hierbei", "hierfuer", "hierfür", "hiergegen", "hierhinter", "hierin", "hiermit", "hiernach", "hierum", "hierunter", "hierueber", "hierüber", "hiervor", "hierzwischen", "hierneben", "hiervon", "wodurch", "wofür", "wofuer", "wogegen", "wohinter", "womit", "wonach", "woneben", "woran", "worauf", "woraus", "worin", "worum", "worunter", "worüber", "worueber", "wovon", "wovor", "wozu", "wozwischen"], b$ = ["hier", "dorthin", "hierher", "dorther"], v$ = ["allenfalls", "keinesfalls", "anderenfalls", "andernfalls", "andrenfalls", "äußerstenfalls", "bejahendenfalls", "bestenfalls", "eintretendenfalls", "entgegengesetztenfalls", "erforderlichenfalls", "gegebenenfalls", "geringstenfalls", "gleichfalls", "günstigenfalls", "günstigstenfalls", "höchstenfalls", "möglichenfalls", "notfalls", "nötigenfalls", "notwendigenfalls", "schlimmstenfalls", "vorkommendenfalls", "zutreffendenfalls", "keineswegs", "durchwegs", "geradenwegs", "geradeswegs", "geradewegs", "gradenwegs", "halbwegs", "mittwegs", "unterwegs"], k$ = ["habe", "hast", "hat", "habt", "habest", "habet", "hatte", "hattest", "hatten", "hätte", "haette", "hättest", "haettest", "hätten", "haetten", "haettet", "hättet", "hab", "bin", "bist", "ist", "sind", "sei", "seiest", "seien", "seiet", "war", "warst", "waren", "wart", "wäre", "waere", "wärest", "waerest", "wärst", "waerst", "wären", "waeren", "wäret", "waeret", "wärt", "waert", "seid", "darf", "darfst", "dürft", "duerft", "dürfe", "duerfe", "dürfest", "duerfest", "dürfet", "duerfet", "durfte", "durftest", "durften", "durftet", "dürfte", "duerfte", "dürftest", "duerftest", "dürften", "duerften", "dürftet", "duerftet", "kann", "kannst", "könnt", "koennt", "könne", "koenne", "könnest", "koennest", "könnet", "koennet", "konnte", "konntest", "konnten", "konntet", "könnte", "koennte", "könntest", "koenntest", "könnten", "koennten", "könntet", "koenntet", "mag", "magst", "mögt", "moegt", "möge", "moege", "mögest", "moegest", "möget", "moeget", "mochte", "mochtest", "mochten", "mochtet", "möchte", "moechte", "möchtest", "moechtest", "möchten", "moechten", "möchtet", "moechtet", "muss", "muß", "musst", "mußt", "müsst", "muesst", "müßt", "mueßt", "müsse", "muesse", "müssest", "muessest", "müsset", "muesset", "musste", "mußte", "musstest", "mußtest", "mussten", "mußten", "musstet", "mußtet", "müsste", "muesste", "müßte", "mueßte", "müsstest", "muesstest", "müßtest", "mueßtest", "müssten", "muessten", "müßten", "mueßten", "müsstet", "muesstet", "müßtet", "mueßtet", "soll", "sollst", "sollt", "solle", "sollest", "sollet", "sollte", "solltest", "sollten", "solltet", "will", "willst", "wollt", "wolle", "wollest", "wollet", "wollte", "wolltest", "wollten", "wolltet", "lasse", "lässt", "laesst", "läßt", "laeßt", "lasst", "laßt", "lassest", "lasset", "ließ", "ließest", "ließt", "ließen", "ließe", "ließet", "liess", "liessest", "liesst", "liessen", "liesse", "liesset"], _$ = ["haben", "dürfen", "duerfen", "können", "koennen", "mögen", "moegen", "müssen", "muessen", "sollen", "wollen", "lassen"], $$ = ["bleibe", "bleibst", "bleibt", "bleibest", "bleibet", "blieb", "bliebst", "bliebt", "blieben", "bliebe", "bliebest", "bliebet", "heiße", "heißt", "heißest", "heißet", "heisse", "heisst", "heissest", "heisset", "hieß", "hießest", "hießt", "hießen", "hieße", "hießet", "hiess", "hiessest", "hiesst", "hiessen", "hiesse", "hiesset", "giltst", "gilt", "geltet", "gelte", "geltest", "galt", "galtest", "galtst", "galten", "galtet", "gälte", "gaelte", "gölte", "goelte", "gältest", "gaeltest", "göltest", "goeltest", "gälten", "gaelten", "gölten", "goelten", "gältet", "gaeltet", "göltet", "goeltet", "aussehe", "aussiehst", "aussieht", "ausseht", "aussehest", "aussehet", "aussah", "aussahst", "aussahen", "aussaht", "aussähe", "aussaehe", "aussähest", "aussaehest", "aussähst", "aussaehst", "aussähet", "aussaehet", "aussäht", "aussaeht", "aussähen", "aussaehen", "scheine", "scheinst", "scheint", "scheinest", "scheinet", "schien", "schienst", "schienen", "schient", "schiene", "schienest", "schienet", "erscheine", "erscheinst", "erscheint", "erscheinest", "erscheinet", "erschien", "erschienst", "erschienen", "erschient", "erschiene", "erschienest", "erschienet"], j$ = ["bleiben", "heißen", "heissen", "gelten", "aussehen", "scheinen", "erscheinen"], x$ = ["a", "à", "ab", "abseits", "abzüglich", "abzueglich", "als", "am", "an", "angelegentlich", "angesichts", "anhand", "anlässlich", "anlaesslich", "ans", "anstatt", "anstelle", "auf", "aufs", "aufseiten", "aus", "ausgangs", "ausschließlich", "ausschliesslich", "außerhalb", "ausserhalb", "ausweislich", "bar", "behufs", "bei", "beidseits", "beiderseits", "beim", "betreffs", "bezüglich", "bezueglich", "binnen", "bis", "contra", "dank", "diesseits", "durch", "einbezüglich", "einbezueglich", "eingangs", "eingedenk", "einschließlich", "einschliesslich", "entgegen", "entlang", "exklusive", "fern", "fernab", "fuer", "für", "fuers", "fürs", "gegen", "gegenüber", "gegenueber", "gelegentlich", "gemäß", "gemaeß", "gen", "getreu", "gleich", "halber", "hinsichtlich", "hinter", "hinterm", "hinters", "im", "in", "inklusive", "inmitten", "innerhalb", "innert", "ins", "je", "jenseits", "kontra", "kraft", "längs", "laengs", "längsseits", "laengsseits", "laut", "links", "mangels", "minus", "mit", "mithilfe", "mitsamt", "mittels", "nach", "nächst", "naechst", "nah", "namens", "neben", "nebst", "nördlich", "noerdlich", "nordöstlich", "nordoestlich", "nordwestlich", "oberhalb", "ohne", "östlich", "oestlich", "per", "plus", "pro", "quer", "rechts", "rücksichtlich", "ruecksichtlich", "samt", "seitens", "seitlich", "seitwärts", "seitwaerts", "südlich", "suedlich", "südöstlich", "suedoestlich", "südwestlich", "suedwestlich", "über", "ueber", "überm", "ueberm", "übern", "uebern", "übers", "uebers", "um", "ums", "unbeschadet", "unerachtet", "unfern", "unter", "unterhalb", "unterm", "untern", "unters", "unweit", "vermittels", "vermittelst", "vermöge", "vermoege", "via", "vom", "von", "vonseiten", "vor", "vorbehaltlich", "wegen", "wider", "zeit", "zu", "zugunsten", "zulieb", "zuliebe", "zum", "zur", "zusätzlich", "zusaetzlich", "zuungunsten", "zuwider", "zuzüglich", "zuzueglich", "zwecks", "zwischen"], A$ = ["und", "oder", "umso"], E$ = ["auch", "noch", "nur"], S$ = ["nun", "so", "gleichwohl"], q$ = ["sage", "sagst", "sagt", "sagest", "saget", "sagte", "sagtest", "sagten", "sagtet", "gesagt", "fragst", "fragt", "fragest", "fraget", "fragte", "fragtest", "fragten", "fragtet", "gefragt", "erkläre", "erklärst", "erklärt", "erklaere", "erklaerst", "erklaert", "erklärte", "erklärtest", "erklärtet", "erklärten", "erklaerte", "erklaertest", "erklaertet", "erklaerten", "denke", "denkst", "denkt", "denkest", "denket", "dachte", "dachtest", "dachten", "dachtet", "dächte", "dächtest", "dächten", "dächtet", "daechte", "daechtest", "daechten", "daechtet", "finde", "findest", "findet", "gefunden"], P$ = ["sagen", "erklären", "erklaeren", "denken", "finden"], JQ = ["etwa", "absolut", "unbedingt", "wieder", "definitiv", "bestimmt", "immer", "äußerst", "aeußerst", "höchst", "hoechst", "sofort", "augenblicklich", "umgehend", "direkt", "unmittelbar", "nämlich", "naemlich", "natürlich", "natuerlich", "besonders", "hauptsächlich", "hauptsaechlich", "jetzt", "eben", "heutzutage", "eindeutig", "wirklich", "echt", "wahrhaft", "ehrlich", "aufrichtig", "wahrheitsgemäß", "letztlich", "einmalig", "unübertrefflich", "normalerweise", "gewöhnlich", "gewoehnlich", "üblicherweise", "ueblicherweise", "sonst", "fast", "nahezu", "beinahe", "knapp", "annähernd", "annaehernd", "geradezu", "bald", "vielleicht", "wahrscheinlich", "wohl", "voraussichtlich", "zugegeben", "ursprünglich", "insgesamt", "tatsächlich", "eigentlich", "wahrhaftig", "bereits", "schon", "oft", "häufig", "haeufig", "regelmäßig", "regelmaeßig", "gleichmäßig", "gleichmaeßig", "einfach", "lediglich", "bloß", "bloss", "halt", "wahlweise", "eventuell", "manchmal", "teilweise", "nie", "niemals", "nimmer", "jemals", "allzeit", "irgendeinmal", "anders", "momentan", "gegenwärtig", "gegenwaertig", "nebenbei", "anderswo", "woanders", "anderswohin", "anderorts", "insbesondere", "namentlich", "sonderlich", "ausdrücklich", "ausdruecklich", "vollends", "kürzlich", "kuerzlich", "jüngst", "juengst", "unlängst", "unlaengst", "neuerdings", "neulich", "letztens", "neuerlich", "verhältnismäßig", "verhaeltnismaessig", "deutlich", "klar", "offenbar", "anscheinend", "genau", "u.a", "damals", "zumindest"], T$ = ["sehr", "recht", "überaus", "ueberaus", "ungemein", "weitaus", "einigermaßen", "einigermassen", "ganz", "schwer", "tierisch", "ungleich", "ziemlich", "übelst", "uebelst", "stark", "volkommen", "durchaus", "gar"], R$ = ["geschienen", "meinst", "meint", "meinest", "meinet", "meinte", "meintest", "meinten", "meintet", "gemeint", "stehe", "stehst", "steht", "gehe", "gehst", "geht", "gegangen", "ging", "gingst", "gingen", "gingt"], O$ = ["tun", "machen", "stehen", "wissen", "gehen", "kommen"], M$ = ["einerlei", "egal", "neu", "neue", "neuer", "neuen", "neues", "neuem", "neuerer", "neueren", "neuerem", "neueres", "neuere", "neuester", "neuster", "neuesten", "neusten", "neuestem", "neustem", "neuestes", "neustes", "neueste", "neuste", "alt", "alter", "alten", "altem", "altes", "alte", "ältere", "älteren", "älterer", "älteres", "ältester", "ältesten", "ältestem", "ältestes", "älteste", "aeltere", "aelteren", "aelterer", "aelteres", "aeltester", "aeltesten", "aeltestem", "aeltestes", "aelteste", "gut", "guter", "gutem", "guten", "gutes", "gute", "besser", "besserer", "besseren", "besserem", "besseres", "bester", "besten", "bestem", "bestes", "beste", "größte", "grösste", "groß", "großer", "großen", "großem", "großes", "große", "großerer", "großerem", "großeren", "großeres", "großere", "großter", "großten", "großtem", "großtes", "großte", "gross", "grosser", "grossen", "grossem", "grosses", "grosse", "grosserer", "grosserem", "grosseren", "grosseres", "grossere", "grosster", "grossten", "grosstem", "grosstes", "grosste", "einfacher", "einfachen", "einfachem", "einfaches", "einfache", "einfacherer", "einfacheren", "einfacherem", "einfacheres", "einfachere", "einfachste", "einfachster", "einfachsten", "einfachstes", "einfachstem", "schnell", "schneller", "schnellen", "schnellem", "schnelles", "schnelle", "schnellere", "schnellerer", "schnelleren", "schnelleres", "schnellerem", "schnellster", "schnellste", "schnellsten", "schnellstem", "schnellstes", "weit", "weiten", "weitem", "weites", "weiterer", "weiteren", "weiterem", "weiteres", "weitere", "weitester", "weitesten", "weitestem", "weitestes", "weiteste", "eigen", "eigener", "eigenen", "eigenes", "eigenem", "eigene", "eigenerer", "eignerer", "eigeneren", "eigneren", "eigenerem", "eignerem", "eigeneres", "eigneres", "eigenere", "eignere", "eigenster", "eigensten", "eigenstem", "eigenstes", "eigenste", "wenigster", "wenigsten", "wenigstem", "wenigstes", "wenigste", "minderer", "minderen", "minderem", "mindere", "minderes", "mindester", "mindesten", "mindestes", "mindestem", "mindeste", "lang", "langer", "langen", "langem", "langes", "längerer", "längeren", "längerem", "längeres", "längere", "längster", "längsten", "längstem", "längstes", "längste", "laengerer", "laengeren", "laengerem", "laengeres", "laengere", "laengster", "laengsten", "laengstem", "laengstes", "laengste", "tief", "tiefer", "tiefen", "tiefem", "tiefes", "tiefe", "tieferer", "tieferen", "tieferem", "tieferes", "tiefere", "tiefster", "tiefsten", "tiefstem", "tiefste", "tiefstes", "hoch", "hoher", "hohen", "hohem", "hohes", "hohe", "höher", "höherer", "höhere", "höheren", "höherem", "höheres", "hoeherer", "hoehere", "hoeheren", "hoeherem", "hoeheres", "höchster", "höchste", "höchsten", "höchstem", "höchstes", "hoechster", "hoechste", "hoechsten", "hoechstem", "hoechstes", "regulär", "regulärer", "regulären", "regulärem", "reguläres", "reguläre", "regulaer", "regulaerer", "regulaeren", "regulaerem", "regulaeres", "regulaere", "regulärerer", "reguläreren", "regulärerem", "reguläreres", "regulärere", "regulaererer", "regulaereren", "regulaererem", "regulaereres", "regulaerere", "regulärster", "regulärsten", "regulärstem", "regulärstes", "regulärste", "regulaerster", "regulaersten", "regulaerstem", "regulaerstes", "regulaerste", "normal", "normaler", "normalen", "normalem", "normales", "normale", "normalerer", "normaleren", "normalerem", "normaleres", "normalere", "normalster", "normalsten", "normalstem", "normalstes", "normalste", "klein", "kleiner", "kleinen", "kleinem", "kleines", "kleine", "kleinerer", "kleineres", "kleineren", "kleinerem", "kleinere", "kleinster", "kleinsten", "kleinstem", "kleinstes", "kleinste", "winzig", "winziger", "winzigen", "winzigem", "winziges", "winzigerer", "winzigeren", "winzigerem", "winzigeres", "winzigere", "winzigster", "winzigsten", "winzigstem", "winzigste", "winzigstes", "sogenannt", "sogenannter", "sogenannten", "sogenanntem", "sogenanntes", "sogenannte", "kurz", "kurzer", "kurzen", "kurzem", "kurzes", "kurze", "kürzerer", "kürzeres", "kürzeren", "kürzerem", "kürzere", "kuerzerer", "kuerzeres", "kuerzeren", "kuerzerem", "kuerzere", "kürzester", "kürzesten", "kürzestem", "kürzestes", "kürzeste", "kuerzester", "kuerzesten", "kuerzestem", "kuerzestes", "kuerzeste", "wirklicher", "wirklichen", "wirklichem", "wirkliches", "wirkliche", "wirklicherer", "wirklicheren", "wirklicherem", "wirklicheres", "wirklichere", "wirklichster", "wirklichsten", "wirklichstes", "wirklichstem", "wirklichste", "eigentlicher", "eigentlichen", "eigentlichem", "eigentliches", "eigentliche", "schön", "schöner", "schönen", "schönem", "schönes", "schöne", "schönerer", "schöneren", "schönerem", "schöneres", "schönere", "schönster", "schönsten", "schönstem", "schönstes", "schönste", "real", "realer", "realen", "realem", "reales", "realerer", "realeren", "realerem", "realeres", "realere", "realster", "realsten", "realstem", "realstes", "realste", "derselbe", "denselben", "demselben", "desselben", "dasselbe", "dieselbe", "derselben", "dieselben", "gleicher", "gleichen", "gleichem", "gleiches", "gleiche", "gleicherer", "gleicheren", "gleicherem", "gleicheres", "gleichere", "gleichster", "gleichsten", "gleichstem", "gleichstes", "gleichste", "bestimmter", "bestimmten", "bestimmtem", "bestimmtes", "bestimmte", "bestimmtere", "bestimmterer", "bestimmterem", "bestimmteren", "bestimmteres", "bestimmtester", "bestimmtesten", "bestimmtestem", "bestimmtestes", "bestimmteste", "überwiegend", "ueberwiegend", "zumeist", "meistens", "meisten", "meiste", "meistem", "meistes", "großenteils", "grossenteils", "meistenteils", "weithin", "ständig", "staendig", "laufend", "dauernd", "andauernd", "immerfort", "irgendwo", "irgendwann", "ähnlicher", "ähnlichen", "ähnlichem", "ähnliches", "ähnliche", "ähnlich", "ähnlicherer", "ähnlicheren", "ähnlicherem", "ähnlicheres", "ähnlichere", "ähnlichster", "ähnlichsten", "ähnlichstem", "ähnlichstes", "ähnlichste", "schlecht", "schlechter", "schlechten", "schlechtem", "schlechtes", "schlechte", "schlechterer", "schlechteren", "schlechterem", "schlechteres", "schlechtere", "schlechtester", "schlechtesten", "schlechtestem", "schlechtestes", "schlechteste", "schlimm", "schlimmer", "schlimmen", "schlimmem", "schlimmes", "schlimme", "schlimmerer", "schlimmeren", "schlimmerem", "schlimmeres", "schlimmere", "schlimmster", "schlimmsten", "schlimmstem", "schlimmstes", "schlimmste", "toll", "toller", "tollen", "tollem", "tolles", "tolle", "tollerer", "tolleren", "tollerem", "tollere", "tolleres", "tollster", "tollsten", "tollstem", "tollstes", "tollste", "super", "mögliche", "möglicher", "mögliches", "möglichen", "möglichem", "möglich", "moegliche", "moeglicher", "moegliches", "moeglichen", "moeglichem", "moeglich", "nächsten", "nächster", "nächstem", "nächste", "nächstes", "naechsten", "voll", "voller", "vollen", "vollem", "volle", "volles", "vollerer", "volleren", "vollerem", "vollere", "volleres", "vollster", "vollsten", "vollstem", "vollste", "vollstes", "außen", "ganzer", "ganzen", "ganzem", "ganze", "ganzes", "gern", "gerne", "oben", "unten", "zurück", "zurueck", "nicht", "eher", "ehere", "eherem", "eheren", "eheres", "eheste", "ehestem", "ehensten", "ehesten"], C$ = ["ach", "aha", "oh", "au", "bäh", "baeh", "igitt", "huch", "hurra", "hoppla", "nanu", "oha", "olala", "pfui", "tja", "uups", "wow", "grr", "äh", "aeh", "ähm", "aehm", "öhm", "oehm", "hm", "mei", "mhm", "okay", "richtig", "eijeijeijei"], L$ = ["g", "el", "tl", "wg", "be", "bd", "cl", "dl", "dag", "do", "gl", "gr", "kg", "kl", "cb", "ccm", "l", "ms", "mg", "ml", "mi", "pk", "pr", "pp", "sc", "sp", "st", "sk", "ta", "tr", "cm", "mass"], I$ = ["sekunde", "sekunden", "minute", "minuten", "stunde", "stunden", "uhr", "tag", "tages", "tags", "tage", "tagen", "woche", "wochen", "monat", "monate", "monates", "monats", "monaten", "jahr", "jahres", "jahrs", "jahre", "jahren", "morgens", "mittags", "abends", "nachts", "heute", "gestern", "morgen", "vorgestern", "übermorgen", "uebermorgen"], W$ = ["ding", "dinge", "dinges", "dinger", "dingern", "dingen", "sache", "sachen", "weise", "weisen", "wahrscheinlichkeit", "zeug", "zeuge", "zeuges", "zeugen", "mal", "einmal", "teil", "teile", "teiles", "teilen", "prozent", "prozents", "prozentes", "prozente", "prozenten", "beispiel", "beispiele", "beispieles", "beispiels", "beispielen", "aspekt", "aspekte", "aspektes", "aspekts", "aspekten", "idee", "ideen", "ahnung", "ahnungen", "thema", "themas", "themata", "themen", "fall", "falle", "falles", "fälle", "fällen", "faelle", "faellen", "mensch", "menschen", "leute"], F$ = ["nix", "nixe", "nixes", "nixen", "usw.", "amen", "ja", "nein", "euro"], QQ = ["fr", "hr", "dr", "prof"], aaa = ["jr", "jun", "sen", "sr"];
var Xo = {}, Yc = {};
Object.defineProperty(Yc, "__esModule", {
  value: !0
});
Yc.default = function() {
  return {
    filteredAuxiliaries: D$,
    notFilteredAuxiliaries: B$,
    all: D$.concat(B$)
  };
};
var D$ = ["am", "is", "are", "was", "were", "been", "get", "gets", "got", "gotten", "be", "she's", "he's", "it's", "i'm", "we're", "they're", "you're", "isn't", "weren't", "wasn't", "that's", "aren't"], B$ = ["being", "getting", "having", "what's"], Zc = {};
Object.defineProperty(Zc, "__esModule", {
  value: !0
});
Zc.default = function() {
  return {
    singleWords: N$,
    multipleWords: U$,
    allWords: N$.concat(U$)
  };
};
var N$ = ["accordingly", "additionally", "afterward", "afterwards", "albeit", "also", "although", "altogether", "another", "basically", "because", "before", "besides", "but", "certainly", "chiefly", "comparatively", "concurrently", "consequently", "contrarily", "conversely", "correspondingly", "despite", "doubtedly", "during", "e.g.", "earlier", "emphatically", "equally", "especially", "eventually", "evidently", "explicitly", "finally", "firstly", "following", "formerly", "forthwith", "fourthly", "further", "furthermore", "generally", "hence", "henceforth", "however", "i.e.", "identically", "indeed", "initially", "instead", "last", "lastly", "later", "lest", "likewise", "markedly", "meanwhile", "moreover", "nevertheless", "nonetheless", "nor", "notwithstanding", "obviously", "occasionally", "otherwise", "overall", "particularly", "presently", "previously", "rather", "regardless", "secondly", "shortly", "significantly", "similarly", "simultaneously", "since", "so", "soon", "specifically", "still", "straightaway", "subsequently", "surely", "surprisingly", "than", "then", "thereafter", "therefore", "thereupon", "thirdly", "though", "thus", "till", "undeniably", "undoubtedly", "unless", "unlike", "unquestionably", "until", "when", "whenever", "whereas", "while"], U$ = ["above all", "after all", "after that", "all in all", "all of a sudden", "all things considered", "analogous to", "although this may be true", "analogous to", "another key point", "as a matter of fact", "as a result", "as an illustration", "as can be seen", "as has been noted", "as I have noted", "as I have said", "as I have shown", "as long as", "as much as", "as opposed to", "as shown above", "as soon as", "as well as", "at any rate", "at first", "at last", "at least", "at length", "at the present time", "at the same time", "at this instant", "at this point", "at this time", "balanced against", "being that", "by all means", "by and large", "by comparison", "by the same token", "by the time", "compared to", "be that as it may", "coupled with", "different from", "due to", "equally important", "even if", "even more", "even so", "even though", "first thing to remember", "for example", "for fear that", "for instance", "for one thing", "for that reason", "for the most part", "for the purpose of", "for the same reason", "for this purpose", "for this reason", "from time to time", "given that", "given these points", "important to realize", "in a word", "in addition", "in another case", "in any case", "in any event", "in brief", "in case", "in conclusion", "in contrast", "in detail", "in due time", "in effect", "in either case", "in essence", "in fact", "in general", "in light of", "in like fashion", "in like manner", "in order that", "in order to", "in other words", "in particular", "in reality", "in short", "in similar fashion", "in spite of", "in sum", "in summary", "in that case", "in the event that", "in the final analysis", "in the first place", "in the fourth place", "in the hope that", "in the light of", "in the long run", "in the meantime", "in the same fashion", "in the same way", "in the second place", "in the third place", "in this case", "in this situation", "in time", "in truth", "in view of", "inasmuch as", "most compelling evidence", "most important", "must be remembered", "not only", "not to mention", "note that", "now that", "of course", "on account of", "on balance", "on condition that", "on one hand", "on the condition that", "on the contrary", "on the negative side", "on the other hand", "on the positive side", "on the whole", "on this occasion", "once", "once in a while", "only if", "owing to", "point often overlooked", "prior to", "provided that", "seeing that", "so as to", "so far", "so long as", "so that", "sooner or later", "such as", "summing up", "take the case of", "that is", "that is to say", "then again", "this time", "to be sure", "to begin with", "to clarify", "to conclude", "to demonstrate", "to emphasize", "to enumerate", "to explain", "to illustrate", "to list", "to point out", "to put it another way", "to put it differently", "to repeat", "to rephrase it", "to say nothing of", "to sum up", "to summarize", "to that end", "to the end that", "to this end", "together with", "under those circumstances", "until now", "up against", "up to the present time", "vis a vis", "what's more", "while it may be true", "while this may be true", "with attention to", "with the result that", "with this in mind", "with this intention", "with this purpose in mind", "without a doubt", "without delay", "without doubt", "without reservation"];
Object.defineProperty(Xo, "__esModule", {
  value: !0
});
Xo.default = function() {
  return {
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(lm, zm, lj),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(dm, fm, rj, cm, dj, pm, um),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(V$, ij, G$, Y$, Z$, cj, K$, H$, mm, gm, ym, wm, X$, sj, oj, J$, Q$, aj, tj, mj, nj, ej, uj, oaa, pj),
    // These categories are used in the passive voice assessment. If they directly precede a participle, the sentence part is not passive.
    cannotDirectlyPrecedePassiveParticiple: [].concat(dm, fm, cm, um, lm, zm, pm),
    /*
    These categories are used in the passive voice assessment. If they appear between an auxiliary and a participle,
    the sentence part is not passive.
    */
    cannotBeBetweenPassiveAuxiliaryAndParticiple: [].concat(mm, gm, ym, wm),
    // This export contains all of the above words.
    all: [].concat(dm, K$, lm, cm, um, Z$, G$, Y$, pm, X$, zm, raa, J$, Q$, aj, ej, tj, ij, nj, H$, naa, mm, gm, fm, rj, sj, oj, ym, V$, saa, dj, wm, cj, lj, uj, pj, mj, daa, laa)
  };
};
var eaa = Yc, DI = BI(eaa), taa = Zc, iaa = BI(taa);
function BI(a) {
  return a && a.__esModule ? a : { default: a };
}
const H$ = (0, DI.default)().filteredAuxiliaries, naa = (0, DI.default)().notFilteredAuxiliaries, V$ = (0, iaa.default)().singleWords, dm = ["the", "an", "a"], K$ = ["one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen", "twenty", "hundred", "hundreds", "thousand", "thousands", "million", "millions", "billion", "billions"], lm = ["first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth", "twentieth"], G$ = ["i", "you", "he", "she", "it", "we", "they"], Y$ = ["me", "him", "us", "them"], cm = ["this", "that", "these", "those"], um = ["my", "your", "his", "her", "its", "their", "our", "mine", "yours", "hers", "theirs", "ours"], pm = ["all", "some", "many", "lot", "lots", "ton", "tons", "bit", "no", "every", "enough", "little", "much", "more", "most", "plenty", "several", "few", "fewer", "kind", "kinds"], Z$ = ["myself", "yourself", "himself", "herself", "itself", "oneself", "ourselves", "yourselves", "themselves"], X$ = ["none", "nobody", "everyone", "everybody", "someone", "somebody", "anyone", "anybody", "nothing", "everything", "something", "anything", "each", "other", "whatever", "whichever", "whoever", "whomever", "whomsoever", "whosoever", "others", "neither", "both", "either", "any", "such"], raa = ["one's", "nobody's", "everyone's", "everybody's", "someone's", "somebody's", "anyone's", "anybody's", "nothing's", "everything's", "something's", "anything's", "whoever's", "others'", "other's", "another's", "neither's", "either's"], J$ = ["which", "what", "whose"], Q$ = ["who", "whom"], aj = ["where", "how", "why", "whether", "wherever", "whyever", "wheresoever", "whensoever", "howsoever", "whysoever", "whatsoever", "whereso", "whomso", "whenso", "howso", "whyso", "whoso", "whatso"], ej = ["therefor", "therein", "hereby", "hereto", "wherein", "therewith", "herewith", "wherewith", "thereby"], tj = ["there", "here", "whither", "thither", "hither", "whence", "thence"], ij = ["always", "once", "twice", "thrice"], mm = ["can", "cannot", "can't", "could", "couldn't", "could've", "dare", "dares", "dared", "do", "don't", "does", "doesn't", "did", "didn't", "done", "have", "haven't", "had", "hadn't", "has", "hasn't", "i've", "you've", "we've", "they've", "i'd", "you'd", "he'd", "she'd", "it'd", "we'd", "they'd", "would", "wouldn't", "would've", "may", "might", "must", "need", "needn't", "needs", "ought", "shall", "shalln't", "shan't", "should", "shouldn't", "will", "won't", "i'll", "you'll", "he'll", "she'll", "it'll", "we'll", "they'll", "there's", "there're", "there'll", "here's", "here're", "there'll"], gm = ["appear", "appears", "appeared", "become", "becomes", "became", "come", "comes", "came", "keep", "keeps", "kept", "remain", "remains", "remained", "stay", "stays", "stayed", "turn", "turns", "turned"], zm = ["doing", "daring", "having", "appearing", "becoming", "coming", "keeping", "remaining", "staying", "saying", "asking", "stating", "seeming", "letting", "making", "setting", "showing", "putting", "adding", "going", "using", "trying", "containing"], fm = ["in", "from", "with", "under", "throughout", "atop", "for", "on", "of", "to", "aboard", "about", "above", "abreast", "absent", "across", "adjacent", "after", "against", "along", "alongside", "amid", "mid", "among", "apropos", "apud", "around", "as", "astride", "at", "ontop", "afore", "tofore", "behind", "ahind", "below", "ablow", "beneath", "neath", "beside", "between", "atween", "beyond", "ayond", "by", "chez", "circa", "spite", "down", "except", "into", "less", "like", "minus", "near", "nearer", "nearest", "anear", "notwithstanding", "off", "onto", "opposite", "out", "outen", "over", "past", "per", "pre", "qua", "sans", "sauf", "sithence", "through", "thru", "truout", "toward", "underneath", "up", "upon", "upside", "versus", "via", "vis-à-vis", "without", "ago", "apart", "aside", "aslant", "away", "withal", "towards", "amidst", "amongst", "midst", "whilst"], nj = ["back", "within", "forward", "backward", "ahead"], rj = ["and", "or", "and/or", "yet"], sj = ["sooner", "just", "only"], oj = ["if", "even"], ym = ["say", "says", "said", "claimed", "ask", "asks", "asked", "stated", "explain", "explains", "explained", "think", "thinks", "talks", "talked", "announces", "announced", "tells", "told", "discusses", "discussed", "suggests", "suggested", "understands", "understood"], saa = ["again", "definitely", "eternally", "expressively", "instead", "expressly", "immediately", "including", "instantly", "namely", "naturally", "next", "notably", "now", "nowadays", "ordinarily", "positively", "truly", "ultimately", "uniquely", "usually", "almost", "maybe", "probably", "granted", "initially", "too", "actually", "already", "e.g", "i.e", "often", "regularly", "simply", "optionally", "perhaps", "sometimes", "likely", "never", "ever", "else", "inasmuch", "provided", "currently", "incidentally", "elsewhere", "particular", "recently", "relatively", "f.i", "clearly", "apparently"], dj = ["highly", "very", "really", "extremely", "absolutely", "completely", "totally", "utterly", "quite", "somewhat", "seriously", "fairly", "fully", "amazingly"], wm = ["seem", "seems", "seemed", "let", "let's", "lets", "make", "makes", "made", "want", "showed", "shown", "go", "goes", "went", "gone", "take", "takes", "took", "taken", "put", "puts", "use", "used", "try", "tries", "tried", "mean", "means", "meant", "called", "based", "add", "adds", "added", "contain", "contains", "contained", "consist", "consists", "consisted", "ensure", "ensures", "ensured"], lj = ["new", "newer", "newest", "old", "older", "oldest", "previous", "good", "well", "better", "best", "big", "bigger", "biggest", "easy", "easier", "easiest", "fast", "faster", "fastest", "far", "hard", "harder", "hardest", "least", "own", "large", "larger", "largest", "long", "longer", "longest", "low", "lower", "lowest", "high", "higher", "highest", "regular", "simple", "simpler", "simplest", "small", "smaller", "smallest", "tiny", "tinier", "tiniest", "short", "shorter", "shortest", "main", "actual", "nice", "nicer", "nicest", "real", "same", "able", "certain", "usual", "so-called", "mainly", "mostly", "recent", "anymore", "complete", "lately", "possible", "commonly", "constantly", "continually", "directly", "easily", "nearly", "slightly", "somewhere", "estimated", "latest", "different", "similar", "widely", "bad", "worse", "worst", "great", "specific", "available", "average", "awful", "awesome", "basic", "beautiful", "busy", "current", "entire", "everywhere", "important", "major", "multiple", "normal", "necessary", "obvious", "partly", "special", "last", "early", "earlier", "earliest", "young", "younger", "youngest", ""], cj = ["oh", "wow", "tut-tut", "tsk-tsk", "ugh", "whew", "phew", "yeah", "yea", "shh", "oops", "ouch", "aha", "yikes"], uj = ["tbs", "tbsp", "spk", "lb", "qt", "pk", "bu", "oz", "pt", "mod", "doz", "hr", "f.g", "ml", "dl", "cl", "l", "mg", "g", "kg", "quart"], oaa = ["seconds", "minute", "minutes", "hour", "hours", "day", "days", "week", "weeks", "month", "months", "year", "years", "today", "tomorrow", "yesterday"], pj = ["thing", "things", "way", "ways", "matter", "case", "likelihood", "ones", "piece", "pieces", "stuff", "times", "part", "parts", "percent", "instance", "instances", "aspect", "aspects", "item", "items", "idea", "theme", "person", "instance", "instances", "detail", "details", "factor", "factors", "difference", "differences"], mj = ["not", "yes", "sure", "top", "bottom", "ok", "okay", "amen", "aka", "etc", "etcetera", "sorry", "please"], daa = ["ms", "mss", "mrs", "mr", "dr", "prof"], laa = ["jr", "sr"];
var Xc = {}, Jc = {};
Object.defineProperty(Jc, "__esModule", {
  value: !0
});
Jc.default = function() {
  return {
    singleWords: gj,
    multipleWords: zj,
    allWords: gj.concat(zj)
  };
};
const gj = ["aangezien", "al", "aldus", "allereerst", "als", "alsook", "anderzijds", "bijgevolg", "bijvoorbeeld", "bovendien", "concluderend", "daardoor", "daarentegen", "daarmee", "daarna", "daarnaast", "daarom", "daartoe", "daarvoor", "dadelijk", "dan", "desondanks", "dienovereenkomstig", "dientegevolge", "doch", "doordat", "dus", "echter", "eerst", "evenals", "eveneens", "evenzeer", "hierom", "hoewel", "immers", "indien", "integendeel", "intussen", "kortom", "later", "maar", "mits", "nadat", "namelijk", "net als", "niettemin", "noch", "ofschoon", "omdat", "ondanks", "ondertussen", "ook", "opdat", "resumerend", "samengevat", "samenvattend", "tegenwoordig", "teneinde", "tenzij", "terwijl", "tevens", "toch", "toen", "uiteindelijk", "vanwege", "vervolgens", "voorafgaand", "vooralsnog", "voordat", "voorts", "vroeger", "waardoor", "waarmee", "waaronder", "wanneer", "want", "zoals", "zodat", "zodoende", "zodra"], zj = ["aan de andere kant", "aan de ene kant", "aangenomen dat", "al met al", "alles afwegend", "alles bij elkaar", "alles in aanmerking nemend", "als gevolg van", "anders gezegd", "daar staat tegenover", "daarbij komt", "daaruit volgt", "dat betekent", "dat blijkt uit", "de oorzaak daarvan is", "de oorzaak hiervan is", "door middel van", "een voorbeeld hiervan", "een voorbeeld van", "gesteld dat", "hetzelfde als", "hieruit kunnen we afleiden", "hieruit volgt", "hoe het ook zij", "in de derde plaats", "in de eerste plaats", "in de tweede plaats", "in één woord", "in het bijzonder", "in het geval dat", "in plaats van", "in tegenstelling tot", "in vergelijking met", "maar ook", "met als doel", "met andere woorden", "met behulp van", "met de bedoeling", "neem nou", "net als", "om kort te gaan", "onder andere", "op dezelfde wijze", "stel dat", "te danken aan", "te wijten aan", "ten derde", "ten eerste", "ten gevolge van", "ten slotte", "ten tweede", "ter conclusie", "ter illustratie", "ter verduidelijking", "tot nog toe", "tot slot", "vandaar dat", "vergeleken met", "voor het geval dat"];
Object.defineProperty(Xc, "__esModule", {
  value: !0
});
Xc.default = function() {
  return {
    // These word categories are filtered at the ending of word combinations.
    filteredAtBeginning: [].concat(Sj, Pj, jm, Wj),
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(yj, Fj),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(hm, xm, Rj, bj, Lj, vj),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(fj, wj, hj, km, Dj, bm, Ej, qj, $m, Cj, Ij, _j, Oj, Mj, _m, jj, Aj, Uj, Tj, xj, Bj, gaa, Nj, kj, vm),
    cannotDirectlyPrecedePassiveParticiple: [].concat(hm, _m, bm, vm, km, $j, $m, jm, xm),
    // This export contains all of the above words.
    all: [].concat(hm, bm, yj, bj, vm, km, kj, wj, hj, vj, _j, $j, jj, _m, xj, Aj, Tj, Ej, Sj, qj, Pj, $m, jm, xm, Rj, Oj, Mj, Cj, fj, maa, Lj, Ij, Wj, Dj, Fj, Bj, Nj, Uj, zaa, faa)
  };
};
var caa = Jc, uaa = paa(caa);
function paa(a) {
  return a && a.__esModule ? a : { default: a };
}
const fj = (0, uaa.default)().singleWords, hm = ["de", "het", "een", "der", "des", "den"], bm = ["eén", "één", "twee", "drie", "vier", "vijf", "zes", "zeven", "acht", "negen", "tien", "elf", "twaalf", "dertien", "veertien", "vijftien", "zestien", "zeventien", "achttien", "negentien", "twintig", "honderd", "honderden", "duizend", "duizenden", "miljoen", "miljoenen", "biljoen", "biljoenen"], yj = ["eerste", "tweede", "derde", "vierde", "vijfde", "zesde", "zevende", "achtste", "negende", "tiende", "elfde", "twaalfde", "dertiende", "veertiende", "vijftiende", "zestiende", "zeventiende", "achttiende", "negentiende", "twinstigste"], wj = ["ik", "je", "jij", "hij", "ze", "we", "wij", "jullie", "zij", "u", "ge", "gij", "men"], hj = ["mij", "jou", "hem", "haar", "hen", "hun", "uw"], bj = ["dit", "dat", "deze", "die", "zelf"], vm = ["mijn", "mijne", "jouw", "jouwe", "zijne", "hare", "ons", "onze", "hunne", "uwe", "elkaars", "elkanders"], vj = ["alle", "sommige", "sommigen", "weinig", "weinige", "weinigen", "veel", "vele", "velen", "geen", "beetje", "elke", "elk", "genoeg", "meer", "meest", "meeste", "meesten", "paar", "zoveel", "enkele", "enkelen", "zoveelste", "hoeveelste", "laatste", "laatsten", "iedere", "allemaal", "zekere", "ander", "andere", "gene", "enig", "enige", "verscheidene", "verschillende", "voldoende", "allerlei", "allerhande", "enerlei", "enerhande", "beiderlei", "beiderhande", "tweeërlei", "tweeërhande", "drieërlei", "drieërhande", "velerlei", "velerhande", "menigerlei", "menigerhande", "enigerlei", "enigerhande", "generlei", "generhande"], km = ["mezelf", "mijzelf", "jezelf", "jouzelf", "zichzelf", "haarzelf", "hemzelf", "onszelf", "julliezelf", "henzelf", "hunzelf", "uzelf", "zich"], kj = ["mekaar", "elkaar", "elkander", "mekander"], _j = ["iedereen", "ieder", "eenieder", "alleman", "allen", "alles", "iemand", "niemand", "iets", "niets", "menigeen"], $j = ["ieders", "aller", "iedereens", "eenieders"], jj = ["welke", "welk", "wat", "wie", "wiens", "wier"], _m = ["hoe", "waarom", "waar", "hoezo", "hoeveel"], xj = ["daaraan", "daarachter", "daaraf", "daarbij", "daarbinnen", "daarboven", "daarbuiten", "daardoorheen", "daarheen", "daarin", "daarjegens", "daarmede", "daarnaar", "daarnaartoe", "daaromtrent", "daaronder", "daarop", "daarover", "daaroverheen", "daarrond", "daartegen", "daartussen", "daartussenuit", "daaruit", "daarvan", "daarvandaan", "eraan", "erachter", "erachteraan", "eraf", "erbij", "erbinnen", "erboven", "erbuiten", "erdoor", "erdoorheen", "erheen", "erin", "erjegens", "ermede", "ermee", "erna", "ernaar", "ernaartoe", "ernaast", "erom", "eromtrent", "eronder", "eronderdoor", "erop", "eropaf", "eropuit", "erover", "eroverheen", "errond", "ertegen", "ertegenaan", "ertoe", "ertussen", "ertussenuit", "eruit", "ervan", "ervandaan", "ervandoor", "ervoor", "hieraan", "hierachter", "hieraf", "hierbij", "hierbinnen", "hierboven", "hierbuiten", "hierdoor", "hierdoorheen", "hierheen", "hierin", "hierjegens", "hierlangs", "hiermede", "hiermee", "hierna", "hiernaar", "hiernaartoe", "hiernaast", "hieromheen", "hieromtrent", "hieronder", "hierop", "hierover", "hieroverheen", "hierrond", "hiertegen", "hiertoe", "hiertussen", "hiertussenuit", "hieruit", "hiervan", "hiervandaan", "hiervoor", "vandaan", "waaraan", "waarachter", "waaraf", "waarbij", "waarboven", "waarbuiten", "waardoorheen", "waarheen", "waarin", "waarjegens", "waarmede", "waarna", "waarnaar", "waarnaartoe", "waarnaast", "waarop", "waarover", "waaroverheen", "waarrond", "waartegen", "waartegenin", "waartoe", "waartussen", "waartussenuit", "waaruit", "waarvan", "waarvandaan", "waarvoor"], Aj = ["daar", "hier", "ginder", "daarginds", "ginds", "ver", "veraf", "ergens", "nergens", "overal", "dichtbij", "kortbij"], Ej = ["word", "wordt", "werd", "werden", "ben", "bent", "is", "was", "waren"], Sj = ["worden", "zijn"], qj = ["heb", "hebt", "heeft", "hadden", "had", "kun", "kan", "kunt", "kon", "konden", "mag", "mocht", "mochten", "dien", "dient", "diende", "dienden", "moet", "moest", "moesten", "ga", "gaat", "ging", "gingen"], Pj = ["hebben", "kunnen", "mogen", "dienen", "moeten", "gaan"], $m = ["blijkt", "blijk", "bleek", "bleken", "gebleken", "dunkt", "dunk", "dunkte", "dunkten", "gedunkt", "heet", "heette", "heetten", "geheten", "lijkt", "lijk", "geleken", "leek", "leken", "schijn", "schijnt", "scheen", "schenen", "toescheen", "toeschijnt", "toeschijn", "toeschenen"], jm = ["blijken", "dunken", "heten", "lijken", "schijnen", "toeschijnen"], xm = ["à", "aan", "aangaande", "achter", "behalve", "behoudens", "beneden", "benevens", "benoorden", "benoordoosten", "benoordwesten", "beoosten", "betreffende", "bewesten", "bezijden", "bezuiden", "bezuidoosten", "bezuidwesten", "bij", "binnen", "blijkens", "boven", "bovenaan", "buiten", "circa", "conform", "contra", "cum", "dankzij", "door", "gedurende", "gezien", "in", "ingevolge", "inzake", "jegens", "krachtens", "langs", "luidens", "met", "middels", "na", "naar", "naast", "nabij", "namens", "nevens", "niettegenstaande", "nopens", "om", "omstreeks", "omtrent", "onder", "onderaan", "ongeacht", "onverminderd", "op", "over", "overeenkomstig", "per", "plus", "post", "richting", "rond", "rondom", "spijts", "staande", "te", "tegen", "tegenover", "ten", "ter", "tijdens", "tot", "tussen", "uit", "van", "vanaf", "vanuit", "versus", "via", "vis-à-vis", "volgens", "voor", "voorbij", "wegens", "zijdens", "zonder"], Tj = ["af", "heen", "mee", "toe", "achterop", "onderin", "voorin", "bovenop", "buitenop", "achteraan", "onderop", "binnenin", "tevoren"], Rj = ["en", "alsmede", "of", "ofwel", "en/of"], Oj = ["zowel", "evenmin", "zomin", "hetzij"], Mj = ["vermits", "dewijl", "dorodien", "naardien", "nademaal", "overmits", "wijl", "eer", "eerdat", "aleer", "vooraleer", "alvorens", "totdat", "zolang", "sinds", "sedert", "ingeval", "tenware", "alhoewel", "hoezeer", "uitgezonderd", "zoverre", "zover", "naargelang", "naarmate", "alsof"], Cj = ["zegt", "zei", "vraagt", "vroeg", "denkt", "dacht", "stelt", "pleit", "pleitte"], maa = ["absoluut", "zeker", "ongetwijfeld", "sowieso", "onmiddelijk", "meteen", "inclusief", "direct", "ogenblikkelijk", "terstond", "natuurlijk", "vanzelfsprekend", "gewoonlijk", "normaliter", "doorgaans", "werkelijk", "daadwerkelijk", "inderdaad", "waarachtig", "oprecht", "bijna", "meestal", "misschien", "waarschijnlijk", "wellicht", "mogelijk", "vermoedelijk", "allicht", "aannemelijk", "oorspronkelijk", "aanvankelijk", "initieel", "eigenlijk", "feitelijk", "wezenlijk", "juist", "reeds", "alvast", "bijv.", "vaak", "dikwijls", "veelal", "geregeld", "menigmaal", "regelmatig", "veelvuldig", "eenvoudigweg", "simpelweg", "louter", "kortweg", "stomweg", "domweg", "zomaar", "eventueel", "mogelijkerwijs", "eens", "weleens", "nooit", "ooit", "anders", "momenteel", "thans", "incidenteel", "trouwens", "elders", "volgend", "recent", "onlangs", "recentelijk", "laatst", "zojuist", "relatief", "duidelijk", "overduidelijk", "klaarblijkelijk", "nadrukkelijk", "ogenschijnlijk", "kennelijk", "schijnbaar", "alweer", "continu", "herhaaldelijk", "nog", "steeds", "nu"], Lj = ["zeer", "erg", "redelijk", "flink", "tikkeltje", "bijzonder", "ernstig", "enigszins", "zo", "tamelijk", "nogal", "behoorlijk", "zwaar", "heel", "hele", "reuze", "buitengewoon", "ontzettend", "vreselijk"], Ij = ["laat", "liet", "lieten", "kom", "komt", "kwam", "kwamen", "maakt", "maak", "maakte", "maakten", "doe", "doet", "deed", "deden", "vindt", "vind", "vond", "vonden"], Wj = ["laten", "komen", "maken", "doen", "vinden"], Fj = ["nieuw", "nieuwe", "nieuwer", "nieuwere", "nieuwst", "nieuwste", "oud", "oude", "ouder", "oudere", "oudst", "oudste", "vorig", "vorige", "goed", "goede", "beter", "betere", "best", "beste", "groot", "grote", "groter", "grotere", "grootst", "grootste", "makkelijk", "makkelijke", "makkelijker", "makkelijkere", "makkelijkst", "makkelijste", "gemakkelijk", "gemakkelijke", "gemakkelijker", "gemakkelijkere", "gemakkelijkst", "gemakkelijste", "simpel", "simpele", "simpeler", "simpelere", "simpelst", "simpelste", "snel", "snelle", "sneller", "snellere", "snelst", "snelste", "verre", "verder", "verdere", "verst", "verste", "lang", "lange", "langer", "langere", "langst", "langste", "hard", "harde", "harder", "hardere", "hardst", "hardste", "minder", "mindere", "minst", "minste", "eigen", "laag", "lage", "lager", "lagere", "laagst", "laagste", "hoog", "hoge", "hoger", "hogere", "hoogst", "hoogste", "klein", "kleine", "kleiner", "kleinere", "kleinst", "kleinste", "kort", "korte", "korter", "kortere", "kortst", "kortste", "herhaaldelijke", "directe", "ongeveer", "slecht", "slechte", "slechter", "slechtere", "slechtst", "slechtste", "zulke", "zulk", "zo'n", "zulks", "er", "extreem", "extreme", "bijbehorende", "bijbehorend", "niet"], Dj = ["oh", "wauw", "hèhè", "hè", "hé", "au", "ai", "jaja", "welja", "jawel", "ssst", "heremijntijd", "hemeltjelief", "aha", "foei", "hmm", "nou", "nee", "tja", "nja", "okido", "ho", "halt", "komaan", "komop", "verrek", "nietwaar", "brr", "oef", "ach", "och", "bah", "enfin", "afijn", "haha", "hihi", "hatsjie", "hatsjoe", "hm", "tring", "vroem", "boem", "hopla"], Bj = ["ml", "cl", "dl", "l", "tl", "el", "mg", "g", "gr", "kg", "ca", "theel", "min", "sec", "uur"], gaa = ["seconde", "secondes", "seconden", "minuut", "minuten", "uur", "uren", "dag", "dagen", "week", "weken", "maand", "maanden", "jaar", "jaren", "vandaag", "morgen", "overmorgen", "gisteren", "eergisteren", "'s", "morgens", "avonds", "middags", "nachts"], Nj = ["ding", "dingen", "manier", "manieren", "item", "items", "keer", "maal", "procent", "geval", "aspect", "persoon", "personen", "deel"], Uj = ["wel", "ja", "neen", "oké", "oke", "okee", "ok", "zoiets", "€", "euro"], zaa = ["mevr", "dhr", "mr", "dr", "prof"], faa = ["jr", "sr"];
var Jo = {}, Qc = {};
Object.defineProperty(Qc, "__esModule", {
  value: !0
});
Qc.default = function() {
  return {
    singleWords: Hj,
    multipleWords: Vj,
    allWords: Hj.concat(Vj)
  };
};
const Hj = ["además", "adicional", "así", "asimismo", "aún", "aunque", "ciertamente", "como", "concluyendo", "conque", "contrariamente", "cuando", "decididamente", "decisivamente", "después", "diferentemente", "efectivamente", "entonces", "especialmente", "específicamente", "eventualmente", "evidentemente", "finalmente", "frecuentemente", "generalmente", "igualmente", "lógicamente", "luego", "mas", "mientras", "pero", "por", "porque", "posteriormente", "primero", "principalmente", "pronto", "próximamente", "pues", "raramente", "realmente", "seguidamente", "segundo", "semejantemente", "si", "siguiente", "sino", "súbitamente", "supongamos", "también", "tampoco", "tercero", "verbigracia", "vice-versa", "ya"], Vj = ["a causa de", "a continuación", "a diferencia de", "a fin de cuentas", "a la inversa", "a la misma vez", "a más de", "a más de esto", "a menos que", "a no ser que", "a pesar de", "a pesar de eso", "a pesar de todo", "a peser de", "a propósito", "a saber", "a todo esto", "ahora bien", "al contrario", "al fin y al cabo", "al final", "al inicio", "al mismo tiempo", "al principio", "ante todo", "antes bien", "antes de", "antes de nada", "antes que nada", "aparte de", "as así como", "así como", "así mismo", "así pues", "así que", "así y todo", "aún así", "claro está que", "claro que", "claro que sí", "como caso típico", "como decíamos", "como era de esperar", "como es de esperar", "como muestra", "como resultado", "como se ha notado", "como sigue", "comparado con", "con el objeto de", "con el propósito de", "con que", "con relación a", "con tal de que", "con todo", "dado que", "de ahí", "de cierta manera", "de cualquier manera", "de cualquier modo", "de ello resulta que", "de este modo", "de golpe", "de hecho", "de igual manera", "de igual modo", "de igualmanera", "de la manera siguiente", "de la misma forma", "de la misma manera", "de manera semejante", "del mismo modo", "de modo que", "de nuevo", "de otra manera", "de otro modo", "de pronto", "de qualquier manera", "de repente", "de suerte que", "de tal modo", "de todas formas", "de todas maneras", "de todos modos", "de veras", "debido a", "debido a que", "del mismo modo", "dentro de poco", "desde entonces", "después de", "después de todo", "ejemplo de esto", "el caso es que", "en aquel tiempo", "en cambio", "en cierto modo", "en comparación con", "en conclusión", "en concreto", "en conformidad con", "en consecuencia", "en consiguiente", "en contraste con", "en cualquier caso", "en cuanto", "en cuanto a", "en definitiva", "en efecto", "en el caso de que", "en este sentido", "en fin", "en fin de cuentas", "en general", "en lugar de", "en otras palabras", "en otro orden", "en otros términos", "en particular", "en primer lugar", "en primer término", "en primera instancia", "en realidad", "en relación a", "en relación con", "en representación de", "en resumen", "en resumidas cuentas", "en segundo lugar", "en seguida", "en síntesis", "en suma", "en todo caso", "en último término", "en verdad", "en vez de", "en virtud de", "entre ellas figura", "entre ellos figura", "es cierto que", "es decir", "es evidente que", "es incuestionable", "es indudable", "es más", "está claro que", "esto indica", "excepto si", "generalmente por ejemplo", "gracias a", "hasta aquí", "hasta cierto punto", "hasta el momento", "hay que añadir", "igual que", "la mayor parte del tiempo", "la mayoría del tiempo", "lo que es peor", "más tarde", "mejor dicho", "mientras tanto", "mirándolo todo", "nadie puede ignorar", "no faltaría más", "no obstante", "o sea", "otra vez", "otro aspecto", "par ilustrar", "para concluir", "para conclusión", "para continuar", "para empezar", "para finalizar", "para mencionar una cosa", "para que", "para resumir", "para terminar", "pongamos por caso", "por añadidura", "por cierto", "por consiguiente", "por ejemplo", "por el consiguiente", "por el contrario", "por el hecho que", "por eso", "por esta razón", "por esto", "por fin", "por la mayor parte", "por lo general", "por lo que", "por lo tanto", "por otro lado", "por otra parte", "por otro lado", "por supuesto", "por tanto", "por último", "por un lado", "por una parte", "primero que nada", "primero que todo", "pues bien", "puesto que", "rara vez", "resulta que", "sea como sea", "seguidamente entre tanto", "si bien", "siempre que", "siempre y cuando", "sigue que", "sin duda", "sin embargo", "sin ir más lejos", "sobre todo", "supuesto que", "tal como", "tales como", "tan pronto como", "tanto como", "una vez", "ya que"];
Object.defineProperty(Jo, "__esModule", {
  value: !0
});
Jo.default = function() {
  return {
    // These word categories are filtered at the beginning of word combinations.
    filteredAtBeginning: sx,
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(Sm, Qj, Wm, ex, Um),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(Am, Fm, tx, Yj, rx, Zj, Rm),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(Kj, Gj, qm, Pm, Tm, ox, Em, Jj, Im, ax, Bm, Nm, Om, ix, nx, Mm, Cm, Lm, Xj, cx, Dm, dx, vaa, lx),
    // These word categories cannot directly precede a passive participle.
    cannotDirectlyPrecedePassiveParticiple: [].concat(Am, Fm, qm, Rm, Om, Lm, Em, Sm, Nm, Um, Bm, Mm, Cm, Tm, Pm, Dm),
    // These word categories cannot intervene between an auxiliary and a corresponding passive participle.
    cannotBeBetweenPassiveAuxiliaryAndParticiple: [].concat(Im, Wm),
    // This export contains all of the above words.
    all: [].concat(Am, Em, Sm, Yj, Rm, Gj, Tm, Pm, qm, Zj, Om, Mm, Cm, Lm, Xj, Dm, Jj, Qj, Im, ax, Wm, ex, Fm, tx, ix, nx, Bm, Kj, baa, rx, Nm, Um, ox, sx, dx, lx, cx, kaa, _aa)
  };
};
var yaa = Qc, waa = haa(yaa);
function haa(a) {
  return a && a.__esModule ? a : { default: a };
}
const Kj = (0, waa.default)().singleWords, Am = ["el", "la", "los", "las", "un", "una", "unos", "unas"], Em = ["dos", "tres", "cuatro", "cinco", "seis", "siete", "ocho", "nueve", "diez", "once", "doce", "trece", "catorce", "quince", "dieciseis", "diecisiete", "dieciocho", "diecinueve", "veinte", "cien", "centena", "mil", "millon", "millones"], Sm = ["primera", "segunda", "tercera", "cuarto", "cuarta", "quinto", "quinta", "sexto", "sexta", "septimo", "septima", "octavo", "octava", "noveno", "novena", "décimo", "décima", "vigésimo", "vigésima", "primeros", "primeras", "segundos", "segundas", "terceros", "terceras", "cuartos", "cuartas", "quintos", "quintas", "sextos", "sextas", "septimos", "septimas", "octavos", "octavas", "novenos", "novenas", "décimos", "décimas", "vigésimos", "vigésimas"], Gj = ["yo", "yos", "yoes", "tú", "él", "ella", "ello", "nosotros", "nosotras", "vosotros", "vosotras", "ustedes", "ellos", "ellas"], qm = ["me", "te", "lo", "se", "nos", "os", "les"], Pm = ["mí", "ti", "ud", "uds", "usted"], Tm = ["conmigo", "contigo", "consigo"], Yj = ["este", "ese", "aquel", "esta", "esa", "aquella", "estos", "esos", "aquellos", "estas", "esas", "aquellas", "esto", "eso", "aquello"], Rm = ["mi", "mis", "mío", "míos", "mía", "mías", "nuestro", "nuestros", "nuestra", "nuestras", "tuyo", "tuyos", "tuya", "tuyas", "tu", "tus", "vuestro", "vuestros", "vuestra", "vuestras", "suyo", "suyos", "suya", "suyas", "su", "sus"], Zj = ["bastante", "bastantes", "mucho", "muchas", "mucha", "muchos", "más", "muchísimo", "muchísima", "muchísimos", "muchísimas", "demasiado", "demasiada", "demasiados", "demasiadas", "poco", "poca", "pocos", "pocas", "menos", "poquísimo", "poquísima", "poquísimos", "poquísimas", "demás", "otros", "otras", "todo", "toda", "todos", "todas"], Om = ["alguien", "algo", "algún", "alguno", "alguna", "algunos", "algunas", "nadie", "nada", "ningún", "ninguno", "ninguna", "ningunos", "ningunas", "tanto", "tantos", "tanta", "tantas"], Mm = ["cuyas", "cual"], Cm = ["cuyo"], Lm = ["comoquiera", "cualesquiera", "cualquier", "cuanta", "cuantas", "cuanto", "cuantos", "cuál", "cuáles", "cuánta", "cuántas", "cuánto", "cuántos", "cómo", "dondequiera", "dónde", "quien", "quienes", "quienquiera", "quién", "quiénes", "qué"], Xj = ["allí", "ahí", "allá", "aquí", "acá", "adónde", "delante", "detrás", "debajo", "adelante", "atrás", "adentro", "afuera"], Jj = ["he", "has", "ha", "hay", "hemos", "habéis", "han", "hube", "hubiste", "hubo", "hubimos", "hubisteis", "hubieron", "había", "habías", "habíamos", "habíais", "habían", "habría", "habrías", "habríais", "habrían", "habré", "habrás", "habrá", "habremos", "habréis", "habrán", "haya", "hayas", "hayamos", "hayáis", "hayan", "hubiera", "hubieras", "hubiéramos", "hubierais", "hubieran", "hubiese", "hubieses", "hubiésemos", "hubieseis", "hubiesen", "hubiere", "hubieres", "hubiéremos", "hubiereis", "hubieren", "habed", "habido", "debo", "debes", "debe", "debemos", "debéis", "deben", "debí", "debiste", "debió", "debimos", "debisteis", "debieron", "debía", "debías", "debíamos", "debíais", "debían", "debería", "deberías", "deberíamos", "deberíais", "deberían", "deberé", "deberás", "deberá", "deberemos", "deberéis", "deberán", "deba", "debas", "debamos", "debáis", "deban", "debiera", "debieras", "debiéramos", "debierais", "debieran", "debiese", "debieses", "debiésemos", "debieseis", "debiesen", "debiere", "debieres", "debiéremos", "debiereis", "debieren", "debed", "debido", "empiezo", "empiezas", "empieza", "empezáis", "empiezan", "empecé", "empezaste", "empezó", "empezamos", "empezasteis", "empezaron", "empezaba", "empezabas", "empezábamos", "empezabais", "empezaban", "empezaría", "empezarías", "empezaríamos", "empezaríais", "empezarían", "empezaré", "empezarás", "empezará", "empezaremos", "empezaréis", "empezarán", "empiece", "empieces", "empecemos", "empecéis", "empiecen", "empezara", "empezaras", "empezáramos", "empezarais", "empezaran", "empezase", "empezases", "empezásemos", "empezaseis", "empezasen", "empezare", "empezares", "empezáremos", "empezareis", "empezaren", "empezad", "empezado", "comienzo", "comienzas", "comienza", "comenzamos", "comenzáis", "comienzan", "comencé", "comenzaste", "comenzó", "comenzasteis", "comenzaron", "comenzaba", "comenzabas", "comenzábamos", "comenzabais", "comenzaban", "comenzaría", "comenzarías", "comenzaríamos", "comenzaríais", "comenzarían", "comenzaré", "comenzarás", "comenzará", "comenzaremos", "comenzaréis", "comenzarán", "comience", "comiences", "comencemos", "comencéis", "comiencen", "comenzara", "comenzaras", "comenzáramos", "comenzarais", "comenzaran", "comenzase", "comenzases", "comenzásemos", "comenzaseis", "comenzasen", "comenzare", "comenzares", "comenzáremos", "comenzareis", "comenzaren", "comenzad", "comenzado", "sigo", "sigues", "sigue", "seguimos", "seguis", "siguen", "seguí", "seguiste", "siguió", "seguisteis", "siguieron", "seguía", "seguías", "seguíamos", "seguíais", "seguían", "seguiría", "seguirías", "seguiríamos", "seguiríais", "seguirían", "seguiré", "seguirás", "seguirá", "seguiremos", "seguiréis", "seguirán", "siga", "sigas", "sigamos", "sigáis", "sigan", "siguiera", "siguieras", "siguiéramos", "siguierais", "siguieran", "siguiese", "siguieses", "siguiésemos", "siguieseis", "siguiesen", "siguiere", "siguieres", "siguiéremos", "siguiereis", "siguieren", "seguid", "seguido", "tengo", "tienes", "tiene", "tenemos", "tenéis", "tienen", "tuve", "tuviste", "tuvo", "tuvimos", "tuvisteis", "tuvieron", "tenía", "tenías", "teníamos", "teníais", "tenían", "tendría", "tendrías", "tendríamos", "tendríais", "tendrían", "tendré", "tendrás", "tendrá", "tendremos", "tendréis", "tendrán", "tenga", "tengas", "tengamos", "tengáis", "tengan", "tuviera", "tuvieras", "tuviéramos", "tuvierais", "tuvieran", "tuviese", "tuvieses", "tuviésemos", "tuvieseis", "tuviesen", "tuviere", "tuvieres", "tuviéremos", "tuviereis", "tuvieren", "ten", "tened", "tenido", "ando", "andas", "andamos", "andáis", "andan", "anduve", "anduviste", "anduvo", "anduvimos", "anduvisteis", "anduvieron", "andaba", "andabas", "andábamos", "andabais", "andaban", "andaría", "andarías", "andaríamos", "andaríais", "andarían", "andaré", "andarás", "andará", "andaremos", "andaréis", "andarán", "ande", "andes", "andemos", "andéis", "anden", "anduviera", "anduvieras", "anduviéramos", "anduvierais", "anduvieran", "anduviese", "anduvieses", "anduviésemos", "anduvieseis", "anduviesen", "anduviere", "anduvieres", "anduviéremos", "anduviereis", "anduvieren", "andad", "andado", "quedo", "quedas", "queda", "quedamos", "quedáis", "quedan", "quedé", "quedasteis", "quedaron", "quedaba", "quedabas", "quedábamos", "quedabais", "quedaban", "quedaría", "quedarías", "quedaríamos", "quedaríais", "quedarían", "quedaré", "quedarás", "quedará", "quedaremos", "quedaréis", "quedarán", "quede", "quedes", "quedemos", "quedéis", "queden", "quedara", "quedaras", "quedáramos", "quedarais", "quedaran", "quedase", "quedases", "quedásemos", "quedaseis", "quedasen", "quedare", "quedares", "quedáremos", "quedareis", "quedaren", "quedad", "quedado", "hallo", "hallas", "halla", "hallamos", "halláis", "hallan", "hallé", "hallaste", "halló", "hallasteis", "hallaron", "hallaba", "hallabas", "hallábamos", "hallabais", "hallaban", "hallaría", "hallarías", "hallaríamos", "hallaríais", "hallarían", "hallaré", "hallarás", "hallará", "hallaremos", "hallaréis", "hallarán", "halle", "halles", "hallemos", "halléis", "hallen", "hallara", "hallaras", "halláramos", "hallarais", "hallaran", "hallase", "hallases", "hallásemos", "hallaseis", "hallasen", "hallare", "hallares", "halláremos", "hallareis", "hallaren", "hallad", "hallado", "vengo", "vienes", "viene", "venimos", "venis", "vienen", "vine", "viniste", "vino", "vinimos", "vinisteis", "vinieron", "venía", "vanías", "verníamos", "veníais", "venían", "vendría", "vendrías", "vendríamos", "vendíais", "vendrían", "vendré", "vendrás", "vendrá", "vendremos", "vendréis", "vendrán", "venga", "vengas", "vengamos", "vengáis", "vengan", "viniera", "vinieras", "viniéramos", "vinierais", "vinieran", "viniese", "vinieses", "viniésemos", "vinieseis", "viniesen", "viniere", "vinieres", "viniéremos", "viniereis", "vinieren", "ven", "venid", "venido", "abro", "abres", "abre", "abrismos", "abrís", "abren", "abrí", "abriste", "abrió", "abristeis", "abrieron", "abría", "abrías", "abríais", "abrían", "abriría", "abrirías", "abriríamos", "abriríais", "abrirían", "abriré", "abrirás", "abrirá", "abriremos", "abriréis", "abrirán", "abra", "abras", "abramos", "abráis", "abran", "abriera", "abrieras", "abriéramos", "abrierais", "abrieran", "abriese", "abrieses", "abriésemos", "abrieseis", "abriesen", "abriere", "abrieres", "abriéremos", "abriereis", "abrieren", "abrid", "abierto", "voy", "vas", "va", "vamos", "vais", "van", "iba", "ibas", "íbamos", "ibais", "iban", "iría", "irías", "iríamos", "iríais", "irían", "iré", "irás", "irá", "iremos", "iréis", "irán", "vaya", "vayas", "vayamos", "vayáis", "vayan", "ve", "id", "ido", "acabo", "acabas", "acaba", "acabamos", "acabáis", "acaban", "acabé", "acabaste", "acabó", "acabasteis", "acabaron", "acababa", "acababas", "acabábamos", "acababais", "acababan", "acabaría", "acabarías", "acabaríamos", "acabaríais", "acabarían", "acabaré", "acabarás", "acabará", "acabaremos", "acabaréis", "acabarán", "acabe", "acabes", "acabemos", "acabéis", "acaben", "acabara", "acabaras", "acabáramos", "acabarais", "acabaran", "acabase", "acabases", "acabásemos", "acabaseis", "acabasen", "acabare", "acabares", "acabáremos", "acabareis", "acabaren", "acabad", "acabado", "llevo", "llevas", "lleva", "llevamos", "lleváis", "llevan", "llevé", "llevaste", "llevó", "llevasteis", "llevaron", "llevaba", "llevabas", "llevábamos", "llevabais", "llevaban", "llevaría", "llevarías", "llevaríamos", "llevaríais", "llevarían", "llevaré", "llevarás", "llevará", "llevaremos", "llevaréis", "llevarán", "lleve", "lleves", "llevemos", "llevéis", "lleven", "llevara", "llevaras", "lleváramos", "llevarais", "llevaran", "llevase", "llevases", "llevásemos", "llevaseis", "llevasen", "llevare", "llevares", "lleváremos", "llevareis", "llevaren", "llevad", "llevado", "alcanzo", "alcanzas", "alcanza", "alcanzamos", "alcanzáis", "alcanzan", "alcancé", "alcanzaste", "alcanzó", "alcanzasteis", "alcanzaron", "alcanzaba", "alcanzabas", "alcanzábamos", "alcanzabais", "alcanzaban", "alcanzaría", "alcanzarías", "alcanzaríamos", "alcanzaríais", "alcanzarían", "alcanzaré", "alcanzarás", "alcanzará", "alcanzaremos", "alcanzaréis", "alcanzarán", "alcance", "alcances", "alcancemos", "alcancéis", "alcancen", "alcanzara", "alcanzaras", "alcanzáramos", "alcanzarais", "alcanzaran", "alcanzase", "alcanzases", "alcanzásemos", "alcanzaseis", "alcanzasen", "alcanzare", "alcanzares", "alcanzáremos", "alcanzareis", "alcanzaren", "alcanzad", "alcanzado", "digo", "dices", "dice", "decimos", "decís", "dicen", "dije", "dijiste", "dijo", "dijimos", "dijisteis", "dijeron", "decía", "decías", "decíamos", "decíais", "decían", "diría", "dirías", "diríamos", "diríais", "dirían", "diré", "dirás", "dirá", "diremos", "diréis", "dirán", "diga", "digas", "digamos", "digáis", "digan", "dijera", "dijeras", "dijéramos", "dijerais", "dijeran", "dijese", "dijeses", "dijésemos", "dijeseis", "dijesen", "dijere", "dijeres", "dijéremos", "dijereis", "dijeren", "di", "decid", "dicho", "continúo", "continúas", "continúa", "continuamos", "continuáis", "continúan", "continué", "continuaste", "continuó", "continuasteis", "continuaron", "continuaba", "continuabas", "continuábamos", "continuabais", "continuaban", "continuaría", "continuarías", "continuaríamos", "continuaríais", "continuarían", "continuaré", "continuarás", "continuará", "continuaremos", "continuaréis", "continuarán", "continúe", "continúes", "continuemos", "continuéis", "continúen", "continuara", "continuaras", "continuáramos", "continuarais", "continuaran", "continuase", "continuases", "continuásemos", "continuaseis", "continuasen", "continuare", "continuares", "continuáremos", "continuareis", "continuaren", "continuad", "continuado", "resulto", "resultas", "resulta", "resultamos", "resultáis", "resultan", "resulté", "resultaste", "resultó", "resultasteis", "resultaron", "resultaba", "resultabas", "resultábamos", "resultabais", "resultaban", "resultaría", "resultarías", "resultaríamos", "resultaríais", "resultarían", "resultaré", "resultarás", "resultará", "resultaremos", "resultaréis", "resultarán", "resulte", "resultes", "resultemos", "resultéis", "resulten", "resultara", "resultaras", "resultáramos", "resultarais", "resultaran", "resultase", "resultases", "resultásemos", "resultaseis", "resultasen", "resultare", "resultares", "resultáremos", "resultareis", "resultaren", "resultad", "resultado", "puedo", "puedes", "puede", "podemos", "podéis", "pueden", "pude", "pudiste", "pudo", "pudimos", "pudisteis", "pudieron", "podía", "podías", "podíamos", "podíais", "podían", "podría", "podrías", "podríamos", "podríais", "podrían", "podré", "podrás", "podrá", "podremos", "podréis", "podrán", "pueda", "puedas", "podamos", "podáis", "puedan", "pudiera", "pudieras", "pudiéramos", "pudierais", "pudieran", "pudiese", "pudieses", "pudiésemos", "pudieseis", "pudiesen", "pudiere", "pudieres", "pudiéremos", "pudiereis", "pudieren", "poded", "podido", "quiero", "quieres", "quiere", "queremos", "queréis", "quieren", "quise", "quisiste", "quiso", "quisimos", "quisisteis", "quisieron", "quería", "querías", "queríamos", "queríais", "querían", "querría", "querrías", "querríamos", "querríais", "querrían", "querré", "querrás", "querrá", "querremos", "querréis", "querrán", "quiera", "quieras", "queramos", "queráis", "quieran", "quisiera", "quisieras", "quisiéramos", "quisierais", "quisieran", "quisiese", "quisieses", "quisiésemos", "quisieseis", "quisiesen", "quisiere", "quisieres", "quisiéremos", "quisiereis", "quisieren", "quered", "querido", "sabes", "sabe", "sabemos", "sabéis", "saben", "supe", "supiste", "supo", "supimos", "supisteis", "supieron", "sabía", "sabías", "sabíamos", "sabíais", "sabían", "sabría", "sabrías", "sabríamos", "sabríais", "sabrían", "sabré", "sabrás", "sabrá", "sabremos", "sabréis", "sabrán", "sepa", "sepas", "sepamos", "sepáis", "sepan", "supiera", "supieras", "supiéramos", "supierais", "supieran", "supiese", "supieses", "supiésemos", "supieseis", "supiesen", "supiere", "supieres", "supiéremos", "supiereis", "supieren", "sabed", "sabido", "suelo", "sueles", "suele", "solemos", "soléis", "suelen", "solí", "soliste", "solió", "solimos", "solisteis", "solieron", "solía", "solías", "solíamos", "solíais", "solían", "solería", "solerías", "soleríamos", "soleríais", "solerían", "soleré", "solerás", "solerá", "soleremos", "soleréis", "solerán", "suela", "suelas", "solamos", "soláis", "suelan", "soliera", "solieras", "soliéramos", "solierais", "solieran", "soliese", "solieses", "soliésemos", "solieseis", "soliesen", "soliere", "solieres", "soliéremos", "soliereis", "solieren", "soled", "solido", "necesito", "necesitas", "necesitamos", "necesitáis", "necesitan", "necesité", "necesitaste", "necesitó", "necesitasteis", "necesitaron", "necesitaba", "necesitabas", "necesitábamos", "necesitabais", "necesitaban", "necesitaría", "necesitarías", "necesitaríamos", "necesitaríais", "necesitarían", "necesitaré", "necesitarás", "necesitará", "necesitaremos", "necesitaréis", "necesitarán", "necesite", "necesites", "necesitemos", "necesitéis", "necesiten", "necesitara", "necesitaras", "necesitáramos", "necesitarais", "necesitaran", "necesitase", "necesitases", "necesitásemos", "necesitaseis", "necesitasen", "necesitare", "necesitares", "necesitáremos", "necesitareis", "necesitaren", "necesita", "necesitad", "necesitado"], Qj = ["haber", "deber", "empezar", "comenzar", "seguir", "tener", "andar", "quedar", "hallar", "venir", "abrir", "ir", "acabar", "llevar", "alcanzar", "decir", "continuar", "resultar", "poder", "querer", "saber", "soler", "necesitar"], Im = ["estoy", "estás", "está", "estamos", "estáis", "están", "estuve", "estuviste", "estuvo", "estuvimos", "estuvisteis", "estuvieron", "estuba", "estabas", "estábamos", "estabais", "estaban", "estraría", "estarías", "estaríamos", "estaríais", "estarían", "estaré", "estarás", "estará", "estaremos", "estaréis", "estarán", "esté", "estés", "estemos", "estéis", "estén", "estuviera", "estuviese", "estuvieras", "estuviéramos", "estuvierais", "estuvieran", "estuvieses", "estuviésemos", "estuvieseis", "estuviesen", "estuviere", "estuvieres", "estuviéremos", "estuviereis", "estuvieren", "estad", "estado"], ax = ["soy", "eres", "es", "somos", "sois", "son", "fui", "fuiste", "fuimos", "fuisteis", "fueron", "era", "eras", "éramos", "erais", "eran", "sería", "serías", "seríamos", "seríais", "serían", "seré", "serás", "seremos", "seréis", "serán", "sea", "seas", "seamos", "seáis", "sean", "fueras", "fuéramos", "fuerais", "fueran", "fuese", "fueses", "fuésemos", "fueseis", "fuesen", "fuere", "fueres", "fuéremos", "fuereis", "fueren", "sé", "sed", "sido"], Wm = ["estar"], ex = ["ser"], Fm = ["a", "ante", "abajo", "adonde", "al", "allende", "alrededor", "amén", "antes", "arriba", "aun", "bajo", "cabe", "cabo", "con", "contigo", "contra", "de", "dejante", "del", "dentro", "desde", "donde", "durante", "en", "encima", "entre", "excepto", "fuera", "hacia", "hasta", "incluso", "mediante", "más", "opuesto", "par", "para", "próximo", "salvo", "según", "sin", "so", "sobre", "tras", "versus", "vía"], Dm = ["cerca"], tx = ["o", "y", "entonces", "e", "u", "ni", "bien", "ora"], ix = ["igual"], nx = ["apenas", "segun", "que"], Bm = ["apunto", "apunta", "confieso", "confiesa", "confesaba", "revelado", "revelo", "revela", "revelaba", "declarado", "declaro", "declara", "declaba", "señalo", "señala", "señalaba", "declaraba", "comento", "comenta"], baa = ["básicamente", "esencialmente", "primeramente", "siempre", "nunca", "ahora", "quizá", "acaso", "inclusive", "probablemente", "verdaderamente", "seguramente", "jamás", "obviamente", "indiscutiblement", "inmediatamente", "previamente"], rx = ["muy", "tan", "completamente", "suficiente", "tal", "tales"], Nm = ["hago", "haces", "hace", "hacemos", "hacéis", "hacen", "hice", "hiciste", "hizo", "hicimos", "hicisteis", "hicieron", "hacía", "hacías", "hacíamos", "hacíais", "hacían", "haría,", "harías", "haríamos", "haríais", "harían", "haré", "harás", "hará", "haremos", "haréis", "harán", "haga", "hagas", "hagamos", "hagáis", "hagan", "hiciera", "hicieras", "hiciéramos", "hicierais", "hicieran", "hiciese", "hicieses", "hiciésemos", "hicieseis", "hiciesen", "hiciere", "hicieres", "hiciéremos", "hiciereis", "hicieren", "haz", "haced", "hecho", "parezco", "pareces", "parece", "parecemos", "parecéis", "parecen", "parecí", "pareciste", "pareció", "parecimos", "parecisteis", "parecieron", "parecía", "parecías", "parecíamos", "parecíais", "parecían", "parecería", "parecerías", "pareceríamos", "pareceríais", "parecerían", "pareceré", "parecerás", "parecerá", "pareceremos", "pareceréis", "parecerán", "parezca", "parezcas", "parezcamos", "parezcáis", "parezcan", "pareciera", "parecieras", "pareciéramos", "parecierais", "parecieran", "pareciese", "parecieses", "pareciésemos", "parecieseis", "pareciesen", "pareciere", "parecieres", "pareciéremos", "pareciereis", "parecieren", "pareced", "parecido", "iba", "ibais", "iban", "ibas", "id", "ido", "iremos", "irá", "irán", "irás", "iré", "iréis", "iría", "iríais", "iríamos", "irían", "irías", "va", "vais", "vamos", "van", "vas", "vaya", "vayamos", "vayan", "vayas", "vayáis", "ve", "voy", "yendo", "íbamos"], Um = ["hacer", "parecer", "ir"], sx = ["enfrente", "claro", "bueno", "mejor", "mejores", "buena", "buenos", "buenas", "óptimo", "óptimos", "óptimas", "bonísimo", "bonísima", "bonísimos", "bonísimas", "buenísimo", "buenísima", "buenísimos", "buenísimas", "buenérrimo", "buenérrima", "buenérrimos", "buenérrimas", "nuevo", "nueva", "nuevos", "nuevas", "novísimo", "novísima", "novísimos", "novísimas", "nuevísimo", "nuevísima", "nuevísimos", "nuevísimas", "viejo", "viejos", "vieja", "viejas", "anterior", "grande", "gran", "grandes", "mayores", "mayor", "máximo", "máxima", "grandísimo", "grandísima", "máximos", "máximas", "grandísimos", "grandísimas", "fácil", "fáciles", "rápido", "rápida", "rápidos", "rápidas", "lejos", "lejas", "lejote", "lejotes", "difícil", "difíciles", "propio", "propios", "propia", "propias", "largo", "larga", "largos", "largas", "bajos", "baja", "bajas", "inferior", "ínfimo", "ínfima", "ínfimos", "ínfimas", "bajísimo", "bajísima", "bajísimos", "bajísimas", "alto", "alta", "altos", "altas", "superior", "superiores", "supremo", "suprema", "supremos", "supremas", "sumo", "suma", "sumos", "sumas", "altísimo", "altísima", "altísimos", "altísimas", "regular", "regulares", "normal", "pequeño", "pequeña", "pequeños", "pequeñas", "menor", "pequeñísimo", "pequeñísima", "pequeñísimos", "pequeñísimas", "mínimo", "mínima", "mínimos", "mínimas", "diminuta", "diminuto", "diminutas", "diminutos", "chiquitito", "chiquititos", "chiquitita", "chiquititas", "corta", "corto", "cortas", "cortos", "principal", "principales", "mismo", "mismos", "misma", "mismas", "capaz", "capaces", "cierta", "cierto", "ciertas", "ciertos", "certísimos", "certísimas", "ciertísimo", "ciertísima", "ciertísimos", "ciertísimas", "llamado", "llamada", "llamados", "llamadas", "mayormente", "reciente", "recientes", "completa", "completo", "completas", "completos", "absoluta", "absoluto", "absolutas", "absolutos", "últimamente", "posible", "común", "comúnes", "comúnmente", "constantemente", "continuamente", "directamente", "fácilmente", "casi", "ligeramente", "estima", "estimada", "estimado", "aproximada", "aproximadamente", "última", "últimas", "último", "últimos", "diferente", "diferentes", "similar", "mal", "malo", "malos", "mala", "malas", "peor", "pésimo", "pésima", "malísimo", "malísima", "pésimos", "pésimas", "malísimos", "malísimas", "perfectamente", "excelente", "final", "general"], ox = ["ah", "eh", "ejem", "ele", "achís", "adiós", "agur", "ajá", "ajajá", "ala", "alá", "albricias", "aleluya", "alerta", "alirón", "aló", "amalaya", "ar", "aro", "arrarray", "arre", "arsa", "atatay", "aúpa", "ax", "ay", "ayayay", "bah", "banzai", "barajo", "bla", "bravo", "buf", "bum", "ca", "caguendiós", "canastos", "caracho", "caracoles", "carajo", "caramba", "carape", "caray", "cáscaras", "cáspita", "cataplum", "ce", "chao", "chau", "che", "chis", "chist", "chitón", "cho", "chucho", "chus", "cielos", "clo", "coche", "cochi", "cojones", "concho", "coño", "córcholis", "cuchí", "cuidado", "cuz", "demonio", "demontre", "despacio", "diablo", "diantre", "dios", "ea", "epa", "equilicuá", "estúpido", "eureka", "evohé", "exacto", "fantástico", "firmes", "fo", "forte", "gua", "gualá", "guarte", "guay", "hala", "hale", "he", "hi", "hin", "hola", "hopo", "huesque", "huiche", "huichó", "huifa", "hurra", "huy", "ja", "jajajá", "jajay", "jaque", "jau", "jo", "jobar", "joder", "jolín", "jopo", "leñe", "listo", "malhayas", "mamola", "mecachis", "miéchica", "mondo", "moste", "mutis", "nanay", "narices", "oh", "ojalá", "ojo", "okay", "ole", "olé", "órdiga", "oste", "ostras", "ox", "oxte", "paf", "pardiez", "paso", "pucha", "puf", "puff", "pumba", "puñeta", "quia", "quiúbole", "recórcholis", "rediez", "rediós", "salve", "sanseacabó", "sniff", "socorro", "ta", "tararira", "tate", "tururú", "uf", "uh", "ui", "upa", "uste", "uy", "victoria", "vítor", "viva", "za", "zambomba", "zapateta", "zape", "zas"], dx = ["kg", "mg", "gr", "g", "km", "m", "l", "ml", "cl"], vaa = ["minuto", "minutos", "hora", "horas", "día", "días", "semana", "semanas", "mes", "meses", "año", "años", "hoy", "mañana", "ayer"], lx = ["cosa", "cosas", "manera", "maneras", "caso", "casos", "pieza", "piezas", "vez", "veces", "parte", "partes", "porcentaje", "instancia", "aspecto", "aspectos", "punto", "puntos", "objeto", "objectos", "persona", "personas"], cx = ["no", "euros", "sí", "síes", "noes"], kaa = ["sra", "sras", "srta", "sr", "sres", "dra", "dr", "profa", "prof"], _aa = ["jr", "sr"];
var Qo = {}, au = {};
Object.defineProperty(au, "__esModule", {
  value: !0
});
au.default = function() {
  return {
    singleWords: ux,
    multipleWords: px,
    allWords: ux.concat(px)
  };
};
const ux = ["abbastanza", "acciocché", "acciocchè", "adesso", "affinché", "affinchè", "allora", "almeno", "alquanto", "altrettanto", "altrimenti", "analogamente", "anche", "ancora", "antecedentemente", "anzi", "anzitutto", "apertamente", "appena", "assai", "attualmente", "benché", "benchè", "beninteso", "bensì", "brevemente", "bruscamente", "casomai", "celermente", "certamente", "certo", "chiaramente", "ciononostante", "cioé", "cioè", "comparabilmente", "come", "complessivamente", "completamente", "comunque", "concisamente", "concludendo", "conformemente", "congiuntamente", "conseguentemente", "considerando", "considerato", "considerevolmente", "contemporaneamente", "continuamente", "contrariamente", "controbilanciato", "così", "cosicché", "cosicchè", "dapprima", "dato", "davvero", "definitivamente", "dettagliatamente", "differentemente", "diversamente", "dopo", "dopodiché", "dopodichè", "durante", "dunque", "eccetto", "eccome", "effettivamente", "egualmente", "elencando", "enfaticamente", "eppure", "esaurientemente", "esplicitamente", "espressamente", "estesamente", "evidentemente", "finalmente", "finché", "finchè", "fino", "finora", "fintanto", "fintanto che", "fintantoché", "fintantochè", "fondamentalmente", "frattanto", "frequentemente", "generalmente", "già", "gradualmente", "illustrando", "immantinente", "immediatamente", "importantissimo", "incontestabilmente", "incredibilmente", "indipendentemente", "indiscutibilmente", "indubbiamente", "infatti", "infine", "innanzitutto", "innegabilmente", "inoltre", "insomma", "intanto", "interamente", "istantaneamente", "invece", "logicamente", "lentamente", "ma", "malgrado", "marcatamente", "memorabile", "mentre", "motivatamente", "naturalmente", "né", "nè", "neanche", "neppure", "nonché", "nonchè", "nondimeno", "nonostante", "notevolmente", "occasionalmente", "oltretutto", "onde", "onestamente", "ossia", "ostinatamente", "ovvero", "ovviamente", "parimenti", "particolarmente", "peraltro", "perché", "perchè", "perciò", "perlomeno", "però", "pertanto", "pesantemente", "piuttosto", "poi", "poiché", "poichè", "praticamente", "precedentemente", "preferibilmente", "precisamente", "prematuramente", "presto", "prima", "primariamente", "primo", "principalmente", "prontamente", "proporzionalmente", "pure", "purché", "purchè", "quando", "quanto", "quantomeno", "quindi", "raramente", "realmente", "relativamente", "riassumendo", "riformulando", "ripetutamente", "saltuariamente", "schiettamente", "sebbene", "secondariamente", "secondo", "sempre", "sennò", "seguente", "sensibilmente", "seppure", "seriamente", "siccome", "sicuramente", "significativamente", "similmente", "simultaneamente", "singolarmente", "sinteticamente", "solitamente", "solo", "soltanto", "soprattutto", "sopravvalutato", "sorprendentemente", "sostanzialmente", "sottolineando", "sottovalutato", "specialmente", "specificamente", "specificatamente", "subitamente", "subito", "successivamente", "successivo", "talmente", "terzo", "totalmente", "tranne", "tuttavia", "ugualmente", "ulteriormente", "ultimamente", "veramente", "verosimilmente", "visto"], px = ["a breve", "a causa", "a causa di", "a condizione che", "a conseguenza", "a conti fatti", "a differenza di", "a differenza del", "a differenza della", "a differenza dei", "a differenza degli", "a differenza delle", "a dire il vero", "a dire la verità", "a dirla tutta", "a dispetto di", "a lungo", "a lungo termine", "a maggior ragione", "a meno che non", "a parte", "a patto che", "a prescindere", "a prima vista", "a proposito", "a qualunque costo", "a quanto", "a quel proposito", "a quel tempo", "a quell'epoca", "a questo fine", "a questo proposito", "a questo punto", "a questo riguardo", "a questo scopo", "a riguardo", "a seguire", "a seguito", "a sottolineare", "a tal fine", "a tal proposito", "a tempo debito", "a tutti gli effetti", "a tutti i costi", "a una prima occhiata", "ad eccezione di", "ad esempio", "ad essere maliziosi", "ad essere sinceri", "ad ogni buon conto", "ad ogni costo", "ad ogni modo", "ad una prima occhiata", "adesso che", "al che", "al contrario", "al contrario di", "al fine di", "al fine di fare", "al giorno d'oggi", "al momento", "al momento giusto", "al momento opportuno", "al più presto", "al posto di", "al suo posto", "al termine", "all'epoca", "all'infuori di", "all'inizio", "all'opposto", "all'ultimo", "alla fine", "alla fine della fiera", "alla luce", "alla luce di", "alla lunga", "alla moda", "alla stessa maniera", "allo scopo di", "allo stesso modo", "allo stesso tempo", "anch'esso", "anch'io", "anche se", "ancora più", "ancora di più", "assumendo che", "bisogna chiarire che", "bisogna considerare che", "causato da", "ciò nondimeno", "ciò nonostante", "col tempo", "con il tempo", "come a dire", "come abbiamo dimostrato", "come è stato notato", "come è stato detto", "come è stato dimostrato", "come hanno detto", "come ho detto", "come ho dimostrato", "come ho notato", "come potete notare", "come potete vedere", "come puoi notare", "come puoi vedere", "come si è dimostrato", "come si può vedere", "come si può notare", "come sopra indicato", "comunque sia", "con attenzione", "con enfasi", "con il risultato che", "con l'obiettivo di", "con ostinazione", "con questa intenzione", "con questa idea", "con queste idee", "con questo in testa", "con questo scopo", "così che", "così da", "d'altra parte", "d'altro canto", "d'altro lato", "d'altronde", "d'ora in avanti", "d'ora in poi", "da allora", "da quando", "da quanto", "da quel momento", "da quella volta", "da questo momento in poi", "da questo momento", "da qui", "da ultimo", "da un certo punto di vista", "da un lato", "da una parte", "dall'altro lato", "dall'epoca", "dal che", "dato che", "dato per assunto che", "davanti a", "del tutto", "dell'epoca", "detto questo", "di certo", "di colpo", "di conseguenza", "di fatto", "di fronte", "di fronte a", "di lì a poco", "di punto in bianco", "di quando in quando", "di quanto non sia", "di quel tempo", "di qui a", "di rado", "di seguito", "di si", "di sicuro", "di solito", "di tanto in tanto", "di tutt'altra pasta", "di quando in quando", "differente da", "diversamente da", "diverso da", "dopotutto", "dovuto a", "e anche", "e inoltre", "entro breve", "fermo restando che", "faccia a faccia", "fin da", "fin dall'inizio", "fin quando", "finché non", "finchè non", "fin dal primo momento", "fin dall'inizio", "fino a", "fino a questo momento", "fino ad oggi", "fino ai giorni nostri", "fino adesso", "fino a un certo punto", "fino adesso", "fra quanto", "il prima possibile", "in aggiunta", "in altre parole", "in altri termini", "in ambo i casi", "in breve", "in caso di", "in conclusione", "in conformità", "in confronto", "in confronto a", "in conseguenza", "in considerazione", "in considerazione di", "in definitiva", "in dettaglio", "importante rendersi conto", "in effetti", "in entrambi i casi", "in fin dei conti", "in generale", "in genere", "in linea di massima", "in poche parole", "il più possibile", "in maggior parte", "in maniera analoga", "in maniera convincente", "in maniera esauriente", "in maniera esaustiva", "in maniera esplicita", "in maniera evidente", "in maniera incontestabile", "in maniera indiscutibile", "in maniera innegabile", "in maniera significativa", "in maniera simile", "in modo allusivo", "in modo analogo", "in modo che", "in modo convincente", "in modo da", "in modo identico", "in modo notevole", "in modo significativo", "in modo significativo", "in modo simile", "in ogni caso", "in ogni modo", "in ogni momento", "in parte considerevole", "in parti uguali", "in particolare", "in particolare per", "in particolare", "in più", "in pratica", "in precedenza", "in prima battuta", "in prima istanza", "in primo luogo", "in rapporto", "in qualche modo", "in qualsiasi modo", "in qualsiasi momento", "in qualunque modo", "in qualunque momento", "in quarta battuta", "in quarta istanza", "in quarto luogo", "in quel caso", "in quelle circostanze", "in questa occasione", "in questa situazione", "in questo caso", "in questo caso particolare", "in questo istante", "in questo momento", "in rare occasioni", "in realtà", "in seconda battuta", "in seconda istanza", "in secondo luogo", "in seguito", "in sintesi", "in sostanza", "in tempo", "in terza battuta", "in terza istanza", "in terzo luogo", "in totale", "in tutto", "in ugual maniera", "in ugual misura", "in ugual modo", "in ultima analisi", "in ultima istanza", "in un altro caso", "in una parola", "in verità", "insieme a", "insieme con", "invece che", "invece di", "la prima cosa da considerare", "la prima cosa da tenere a mente", "lo stesso", "mentre potrebbe essere vero", "motivo per cui", "motivo per il quale", "ne consegue che", "ne deriva che", "nei dettagli", "nel caso", "nel caso che", "nel caso in cui", "nel complesso", "nel corso del", "nel corso di", "nel frattempo", "nel lungo periodo", "nel mentre", "nell'eventualità che", "nella misura in cui", "nella speranza che", "nella stessa maniera", "nella stessa misura", "nello specifico", "nello stesso modo", "nello stesso momento", "nello stesso stile", "non appena", "non per essere maliziosi", "non più da", "nonostante ciò", "nonostante tutto", "ogni qualvolta", "ogni tanto", "ogni volta", "oltre a", "oltre a ciò", "ora che", "passo dopo passo", "per causa di", "per certo", "per chiarezza", "per chiarire", "per come", "per concludere", "per conto di", "per contro", "per cui", "per davvero", "per di più", "per dirla in altro modo", "per dirla meglio", "per dirla tutta", "per es.", "per esempio", "per essere sinceri", "per far vedere", "per farla breve", "per finire", "per l'avvenire", "per l'ultima volta", "per la maggior parte", "per la stessa ragione", "per la verità", "per lo più", "per mettere in luce", "per metterla in altro modo", "per non dire di", "per non parlare di", "per ora", "per ovvi motivi", "per paura di", "per paura dei", "per paura delle", "per paura degli", "per prima cosa", "per quanto", "per questa ragione", "per questo motivo", "per riassumere", "per sottolineare", "per timore", "per trarre le conclusioni", "per ultima", "per ultime", "per ultimi", "per ultimo", "per via di", "perché si", "perchè si", "perfino se", "piano piano", "più di ogni altra cosa", "più di tutto", "più facilmente", "più importante", "più tardi", "poco a poco", "poco dopo", "prendiamo il caso di", "presto o tardi", "prima che", "prima di", "prima di ogni cosa", "prima di tutto", "prima o dopo", "prima o poi", "questo è probabilmente vero", "questo potrebbe essere vero", "restando inteso che", "riassumendo", "quanto prima", "questa volta", "se confrontato con", "se e solo se", "se no", "seduta stante", "sempreché", "semprechè", "sempre che", "senz'altro", "senza alcun riguardo", "senza dubbio", "senz'ombra di dubbio", "senza ombra di dubbio", "senza riguardo per", "senza tregua", "senza ulteriore ritardo", "sia quel che sia", "solo se", "sotto questa luce", "sperando che", "sta volta", "su tutto", "subito dopo", "sul serio", "tanto per cominciare", "tanto quanto", "tra breve", "tra l'altro", "tra poco", "tra quanto", "tutte le volte", "tutti insieme", "tutto a un tratto", "tutto ad un tratto", "tutto d'un tratto", "tutto considerato", "tutto sommato", "un passo alla volta", "un tempo", "una volta", "una volta ogni tanto", "unito a", "va chiarito che", "va considerato che", "vada come vada", "vale a dire", "visto che"];
Object.defineProperty(Qo, "__esModule", {
  value: !0
});
Qo.default = function() {
  return {
    // These word categories are filtered at the beginning of word combinations.
    filteredAtBeginning: Ex,
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(Km, xx, bx, tg, kx, sg, Sx),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(Hm, ig, _x, zx, Ax, fx, Zm),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(mx, gx, Gm, Ym, qx, Vm, hx, eg, vx, ng, rg, Xm, $x, jx, Jm, Qm, ag, wx, Ox, yx, Px, Tx, Rx),
    // These word categories cannot directly precede a passive participle.
    cannotDirectlyPrecedePassiveParticiple: [].concat(Hm, ig, Gm, Zm, Xm, Vm, Km, rg, sg, ng, Jm, Qm, Ym, ag),
    // These word categories cannot intervene between an auxiliary and a corresponding passive participle.
    cannotBeBetweenPassiveAuxiliaryAndParticiple: [].concat(eg, tg),
    // This export contains all of the above words.
    all: [].concat(Hm, Vm, Km, zx, Zm, gx, Gm, Ym, fx, Xm, Qm, ag, Jm, yx, wx, hx, bx, eg, tg, vx, kx, ig, _x, $x, jx, ng, xx, mx, Aaa, Ax, rg, sg, qx, Ex, Sx, Px, Rx, Ox, Tx, Eaa)
  };
};
var $aa = au, jaa = xaa($aa);
function xaa(a) {
  return a && a.__esModule ? a : { default: a };
}
const mx = (0, jaa.default)().singleWords, Hm = ["il", "i", "la", "le", "lo", "gli", "un", "uno", "una"], Vm = ["due", "tre", "quattro", "cinque", "sette", "otto", "nove", "dieci", "undici", "dodici", "tredici", "quattordici", "quindici", "sedici", "diciassette", "diciotto", "diciannove", "venti", "cento", "mille", "mila", "duemila", "tremila", "quattromila", "cinquemila", "seimila", "settemila", "ottomila", "novemila", "diecimila", "milione", "milioni", "miliardo", "miliardi"], Km = ["prima", "primi", "prime", "secondo", "seconda", "secondi", "seconde", "terzo", "terza", "terzi", "terze", "quarto", "quarta", "quarti", "quarte", "quinto", "quinta", "quinti", "quinte", "sesto", "sesta", "sesti", "seste", "settimo", "settima", "settimi", "settime", "ottavo", "ottava", "ottavi", "ottave", "nono", "nona", "noni", "none", "decimo", "decima", "decimi", "decime", "undicesimo", "undicesima", "undicesimi", "undicesime", "dodicesimo", "dodicesima", "dodicesimi", "dodicesime", "tredicesimo", "tredicesima", "tredicesimi", "tredicesime", "quattordicesimo", "quattordicesima", "quattordicesimi", "quattordicesime", "quindicesimo", "quindicesima", "quindicesimi", "quindicesime", "sedicesimo", "sedicesima", "sedicesimi", "sedicesime", "diciassettesimo", "diciassettesima", "diciassettesimi", "diciassettesime", "diciannovesimo", "diciannovesima", "diciannovesimi", "diciannovesime", "ventesimo", "ventesima", "ventesimi", "ventesime"], gx = ["io", "tu", "egli", "esso", "lui", "ella", "essa", "lei", "noi", "voi", "essi", "esse", "loro"], Gm = ["mi", "ti", "si", "ci", "vi", "li", "me", "te", "se", "glie", "glielo", "gliela", "glieli", "gliele", "gliene", "ce", "ve"], Ym = ["sé"], zx = ["ciò", "codesto", "codesta", "codesti", "codeste", "colei", "colui", "coloro", "costei", "costui", "costoro", "medesimo", "medesima", "medesimi", "medesime", "questo", "questa", "questi", "queste", "quello", "quella", "quelli", "quelle", "quel", "quei", "quegli"], Zm = ["mio", "mia", "miei", "mie", "tuo", "tua", "tuoi", "tue", "suo", "sua", "suoi", "sue", "nostro", "nostra", "nostri", "nostre", "vostro", "vostra", "vostri", "vostre"], fx = ["affatto", "alcun", "alcuna", "alcune", "alcuni", "alcuno", "bastantemente", "grandemente", "massimamente", "meno", "minimamente", "molta", "molte", "molti", "moltissimo", "molto", "nessun", "nessuna", "nessuno", "niente", "nulla", "ogni", "più", "po'", "poca", "poche", "pochi", "poco", "pochissime", "pochissimi", "qualche", "qualsiasi", "qualunque", "quintali", "rara", "rarissima", "rarissimo", "raro", "spesso", "spessissimo", "sufficientemente", "taluno", "taluna", "taluni", "talune", "tanta", "tante", "tanti", "tantissime", "tantissimi", "tanto", "tonnellate", "troppa", "troppe", "troppi", "troppo", "tutta", "tutte", "tutti", "tutto"], Xm = ["alcunché", "alcunchè", "altro", "altra", "altri", "altre", "certa", "certi", "certe", "checché", "checchè", "chicchessia", "chiunque", "ciascuno", "ciascuna", "ciascun", "diverso", "diversa", "diversi", "diverse", "parecchio", "parecchia", "parecchi", "parecchie", "qualcosa", "qualcuno", "qualcuna", "vario", "varia", "vari", "varie"], Jm = ["che", "cosa", "cui", "qual", "quale", "quali"], Qm = ["chi", "quanta", "quante", "quanti", "quanto"], ag = ["com'è", "com'era", "com'erano", "donde", "d'onde", "dove", "dov'è", "dov'era", "dov'erano", "dovunque"], yx = ["ne"], wx = ["accanto", "altrove", "attorno", "dappertutto", "giù", "là", "laggiù", "lassù", "lì", "ovunque", "qua", "quaggiù", "quassù", "qui"], hx = ["vengano", "vengo", "vengono", "veniamo", "veniate", "venimmo", "venisse", "venissero", "venissi", "venissimo", "veniste", "venisti", "venite", "veniva", "venivamo", "venivano", "venivate", "venivi", "venivo", "venne", "vennero", "venni", "verrà", "verrai", "verranno", "verrebbe", "verrebbero", "verrei", "verremmo", "verremo", "verreste", "verresti", "verrete", "verrò", "viene", "vieni"], bx = ["venire", "venir"], eg = ["abbi", "abbia", "abbiamo", "abbiano", "abbiate", "abbiente", "avemmo", "avendo", "avente", "avesse", "avessero", "avessi", "avessimo", "aveste", "avesti", "avete", "aveva", "avevamo", "avevano", "avevate", "avevi", "avevo", "avrà", "avrai", "avranno", "avrebbe", "avrebbero", "avrei", "avremmo", "avremo", "avreste", "avresti", "avrete", "avrò", "avuto", "ebbe", "ebbero", "ebbi", "ha", "hai", "hanno", "ho", "l'abbi", "l'abbia", "l'abbiamo", "l'abbiano", "l'abbiate", "l'abbiente", "l'avemmo", "l'avendo", "l'avente", "l'avesse", "l'avessero", "l'avessi", "l'avessimo", "l'aveste", "l'avesti", "l'avete", "l'aveva", "l'avevamo", "l'avevano", "l'avevate", "l'avevi", "l'avevo", "l'avrà", "l'avrai", "l'avranno", "l'avrebbe", "l'avrebbero", "l'avrei", "l'avremmo", "l'avremo", "l'avreste", "l'avresti", "l'avrete", "l'avrò", "l'avuto", "l'ebbe", "l'ebbero", "l'ebbi", "l'ha", "l'hai", "l'hanno", "l'ho", "possa", "possano", "possiamo", "possiate", "posso", "possono", "poté", "potei", "potemmo", "potendo", "potente", "poterono", "potesse", "potessero", "potessi", "potessimo", "poteste", "potesti", "potete", "potette", "potettero", "potetti", "poteva", "potevamo", "potevano", "potevate", "potevi", "potevo", "potrà", "potrai", "potranno", "potrebbe", "potrebbero", "potrei", "potremmo", "potremo", "potreste", "potresti", "potrete", "potrò", "potuto", "può", "puoi", "voglia", "vogliamo", "vogliano", "vogliate", "voglio", "vogliono", "volemmo", "volendo", "volente", "volesse", "volessero", "volessi", "volessimo", "voleste", "volesti", "volete", "voleva", "volevamo", "volevano", "volevate", "volevi", "volevo", "volle", "vollero", "volli", "voluto", "vorrà", "vorrai", "vorranno", "vorrebbe", "vorrebbero", "vorrei", "vorremmo", "vorremo", "vorreste", "vorresti", "vorrete", "vorrò", "vuoi", "vuole", "debba", "debbano", "debbono", "deva", "deve", "devi", "devo", "devono", "dobbiamo", "dobbiate", "dové", "dovei", "dovemmo", "dovendo", "doverono", "dovesse", "dovessero", "dovessi", "dovessimo", "doveste", "dovesti", "dovete", "dovette", "dovettero", "dovetti", "doveva", "dovevamo", "dovevano", "dovevate", "dovevi", "dovevo", "dovrà", "dovrai", "dovranno", "dovrebbe", "dovrebbero", "dovrei", "dovremmo", "dovremo", "dovreste", "dovresti", "dovrete", "dovrò", "dovuto", "sa", "sai", "sanno", "sapemmo", "sapendo", "sapesse", "sapessero", "sapessi", "sapessimo", "sapeste", "sapesti", "sapete", "sapeva", "sapevamo", "sapevano", "sapevate", "sapevi", "sapevo", "sappi", "sappia", "sappiamo", "sappiano", "sappiate", "saprà", "saprai", "sapranno", "saprebbe", "saprebbero", "saprei", "sapremmo", "sapremo", "sapreste", "sapresti", "saprete", "saprò", "saputo", "seppe", "seppero", "seppi", "so", "soglia", "sogliamo", "sogliano", "sogliate", "soglio", "sogliono", "solesse", "solessero", "solessi", "solessimo", "soleste", "solete", "soleva", "solevamo", "solevano", "solevate", "solevi", "solevo", "suoli", "sta", "stai", "stando", "stanno", "stante", "starà", "starai", "staranno", "staremo", "starete", "starò", "stava", "stavamo", "stavano", "stavate", "stavi", "stavo", "stemmo", "stessero", "stessimo", "steste", "stesti", "stette", "stettero", "stetti", "stia", "stiamo", "stiano", "stiate", "sto"], tg = ["avere", "l'avere", "aver", "l'aver", "potere", "poter", "volere", "voler", "dovere", "dover", "sapere", "saper", "solere", "stare", "star"], vx = ["è", "e'", "era", "erano", "eravamo", "eravate", "eri", "ero", "essendo", "essente", "fosse", "fossero", "fossi", "fossimo", "foste", "fosti", "fu", "fui", "fummo", "furono", "sarà", "sarai", "saranno", "sarebbe", "sarebbero", "sarei", "saremmo", "saremo", "sareste", "saresti", "sarete", "sarò", "sei", "sia", "siamo", "siano", "siate", "siete", "sii", "sono", "stata", "state", "stati", "stato"], kx = ["essere", "esser"], ig = ["di", "del", "dello", "della", "dei", "degli", "delle", "a", "ad", "al", "allo", "alla", "ai", "agli", "alle", "da", "dal", "dallo", "dalla", "dai", "dagli", "dalle", "in", "nel", "nello", "nella", "nei", "negli", "nelle", "con", "col", "collo", "colla", "coi", "cogli", "colle", "su", "sul", "sullo", "sulla", "sui", "sugli", "sulle", "per", "pel", "pello", "pella", "pei", "pegli", "tra", "fra", "attraverso", "circa", "contro", "davanti", "dentro", "dietro", "entro", "escluso", "fuori", "insieme", "intorno", "lontano", "lungo", "mediante", "oltre", "presso", "rasente", "riguardo", "senza", "sopra", "sotto", "tramite", "vicino"], _x = ["e", "ed", "o", "oppure"], $x = ["tale", "l'uno", "l'altro", "tali", "dall'altra"], jx = ["anziché", "anzichè", "fuorché", "fuorchè", "giacché", "giacchè", "laddove", "modo", "ove", "qualora", "quantunque", "volta"], ng = ["dice", "dicono", "diceva", "dicevano", "disse", "dissero", "detto", "domanda", "domandano", "domandava", "domandavano", "domandò", "domandarono", "domandato", "afferma", "affermato", "aggiunge", "aggiunto", "ammette", "ammesso", "annuncia", "annunciato", "assicura", "assicurato", "chiede", "chiesto", "commentato", "conclude", "concluso", "continua", "continuato", "denuncia", "denunciato", "dichiara", "dichiarato", "esordisce", "esordito", "inizia", "iniziato", "precisato", "prosegue", "proseguito", "racconta", "raccontato", "recita", "recitato", "replica", "replicato", "risponde", "risposto", "rimarca", "rimarcato", "rivela", "rivelato", "scandisce", "scandito", "segnala", "segnalato", "sottolinea", "sottolineato", "spiega", "spiegato"], xx = ["affermare", "aggiungere", "ammettere", "annunciare", "assicurare", "chiedere", "commentare", "concludere", "continuare", "denunciare", "dichiarare", "esordire", "iniziare", "precisare", "proseguire", "raccontare", "recitare", "replicare", "rispondere", "rimarcare", "rivelare", "scandire", "segnalare", "sottolineare", "spiegare"], Aaa = ["eventualmente", "forse", "mai", "probabilmente"], Ax = ["addirittura", "assolutamente", "ben", "estremamente", "mica", "nemmeno", "quasi"], rg = ["fa", "fa'", "faccia", "facciamo", "facciano", "facciate", "faccio", "facemmo", "facendo", "facente", "facesse", "facessero", "facessi", "facessimo", "faceste", "facesti", "faceva", "facevamo", "facevano", "facevate", "facevi", "facevo", "fai", "fanno", "farà", "farai", "faranno", "farebbe", "farebbero", "farei", "faremmo", "faremo", "fareste", "faresti", "farete", "farò", "fate", "fatto", "fece", "fecero", "feci", "fo"], sg = ["fare"], Ex = ["anteriore", "anteriori", "precedente", "precedenti", "facile", "facili", "facilissimo", "facilissima", "facilissimi", "facilissime", "semplice", "semplici", "semplicissima", "semplicissimo", "semplicissimi", "semplicissime", "semplicemente", "rapido", "rapida", "rapidi", "rapide", "veloce", "veloci", "differente", "difficile", "difficili", "difficilissimo", "difficilissima", "difficilissimi", "difficilissime", "basso", "bassa", "bassi", "basse", "alto", "alta", "alti", "alte", "normale", "normali", "normalmente", "corto", "corta", "corti", "corte", "breve", "brevi", "recente", "recenti", "totale", "totali", "completo", "completa", "completi", "complete", "possibile", "possibili", "ultimo", "ultima", "ultimi", "ultime", "differenti", "simile", "simili", "prossimo", "prossima", "prossimi", "prossime", "giusto", "giusta", "giusti", "giuste", "giustamente", "cosiddetto", "bene", "meglio", "benissimo", "male", "peggio", "malissimo", "comunemente", "constantemente", "direttamente", "esattamente", "facilmente", "generalmente", "leggermente", "personalmente", "recentemente", "sinceramente", "solamente", "avanti", "indietro"], Sx = ["nuovo", "nuova", "nuovi", "nuove", "vecchio", "vecchia", "vecchi", "vecchie", "bello", "bella", "belli", "belle", "bei", "begli", "bellissimo", "bellissima", "bellissimi", "bellissime", "buono", "buona", "buoni", "buone", "buonissimo", "buonissima", "buonissimi", "buonissime", "grande", "grandi", "grandissimo", "grandissima", "grandissimi", "grandissime", "lunga", "lunghi", "lunghe", "piccolo", "piccola", "piccoli", "piccole", "piccolissimo", "piccolissima", "piccolissimi", "piccolissime", "proprio", "propria", "propri", "proprie", "solito", "solita", "soliti", "solite", "stesso", "stessa", "stessi", "stesse"], qx = ["accidenti", "acciderba", "ah", "aah", "ahi", "ahia", "ahimé", "bah", "beh", "boh", "ca", "caspita", "chissà", "de'", "diamine", "ecco", "eh", "ehi", "eeh", "ehilà", "ehm", "gna", "ih", "magari", "macché", "macchè", "mah", "mhm", "nca", "neh", "oibò", "oh", "ohe", "ohé", "ohilá", "ohibò", "ohimé", "okay", "ok", "olà", "poh", "pota", "puah", "sorbole", "to'", "toh", "ts", "uff", "uffa", "uh", "uhi"], Px = ["cc", "g", "hg", "hl", "kg", "l", "prs", "pz", "q.b.", "qb", "ta", "tz"], Tx = ["minuto", "minuti", "ora", "ore", "giorno", "giorni", "giornata", "giornate", "settimana", "settimane", "mese", "mesi", "anno", "anni", "oggi", "domani", "ieri", "stamattina", "stanotte", "stasera", "tardi"], Rx = ["aspetto", "aspetti", "caso", "casi", "cose", "idea", "idee", "istanza", "maniera", "oggetto", "oggetti", "parte", "parti", "persona", "persone", "pezzo", "pezzi", "punto", "punti", "sorta", "sorte", "tema", "temi", "volte"], Ox = ["sì", "no", "non", "€", "euro", "euros", "ecc", "eccetera"], Eaa = ["sig.na", "sig.ra", "sig", "sigg", "dr", "dr.ssa", "dott", "dott.ssa", "prof", "prof.ssa", "gent", "gent.mo", "gent.mi", "gent.ma", "gent.me", "egr", "egr.i", "egr.ia", "egr.ie", "preg.mo", "preg.mo", "preg.ma", "preg.me", "ill", "ill.mo", "ill.mi", "ill.ma", "ill.me", "cav", "on", "spett"];
var ad = {}, eu = {};
Object.defineProperty(eu, "__esModule", {
  value: !0
});
eu.default = function() {
  return {
    singleWords: Mx,
    multipleWords: Cx,
    allWords: Mx.concat(Cx)
  };
};
const Mx = ["ainsi", "alors", "aussi", "car", "cependant", "certainement", "certes", "conséquemment", "d'abord", "d'ailleurs", "d'après", "davantage", "désormais", "deuxièmement", "donc", "dorénavant", "effectivement", "également", "enfin", "ensuite", "entre-temps", "essentiellement", "excepté", "finalement", "globalement", "jusqu'ici", "là-dessus", "lorsque", "mais", "malgré", "néanmoins", "notamment", "partant", "plutôt", "pourtant", "précédemment", "premièrement", "probablement", "puis", "puisque", "quoique", "sauf", "selon", "semblablement", "sinon", "suivant", "toutefois", "troisièmement"], Cx = ["à cause de", "à ce jour", "à ce propos", "à ce sujet", "à cet égard", "à cette fin", "à compter de", "à condition que", "à défaut de", "à force de", "à juste titre", "à la lumière de", "à la suite de", "à l'aide de", "à l'appui de", "à l'encontre de", "à l'époque actuelle", "à l'exception de", "à l'exclusion de", "à l'heure actuelle", "à l'image de", "à l'instar de", "à l'inverse", "à l'inverse de", "à l'opposé", "à la condition que", "à mesure que", "à moins que", "à nouveau", "à partir de", "à première vue", "à savoir", "à seule fin que", "à supposer que", "à tel point que", "à tout prendre", "à vrai dire", "afin de", "afin d'attirer l'attention sur", "afin que", "ainsi donc", "ainsi que", "alors que", "antérieurement", "après cela", "après quoi", "après que", "après réflexion", "après tout", "attendu que", "au cas où", "au contraire", "au fond", "au fur et à mesure", "au lieu de", "au même temps", "au moment où", "au moyen de", "au point que", "au risque de", "au surplus", "au total", "aussi bien que", "aussitôt que", "autant que", "autrement dit", "avant que", "avant tout", "ayant fini", "bien que", "c'est à dire que", "c'est ainsi que", "c'est dans ce but que", "c'est dire", "c'est le cas de", "c'est pour cela que", "c'est la raison pour laquelle", "c'est pourquoi", "c'est qu'en effet", "c'est-à-dire", "ça confirme que", "ça montre que", "ça prouve que", "cela étant", "cela dit", "cependant que", "compte tenu", "comme l'illustre", "comme le souligne", "comme on pouvait s'y attendre", "comme quoi", "comme si", "commençons par examiner", "comparativement à", "conformément à", "contrairement à", "considérons par exemple", "d'autant plus", "d'autant que", "d'autre part", "d'ici là", "d'où", "d'un autre côté", "d'un côté", "d'une façon générale", "dans ce cas", "dans ces conditions", "dans cet esprit", "dans l'ensemble", "dans l'état actuel des choses", "dans l'éventualité où", "dans l'hypothèse où", "dans la mesure où", "dans le but de", "dans le cadre de", "dans le cas où", "dans les circonstances actuelles", "dans les grandes lignes", "dans un autre ordre d'idée", "dans un délai de", "de ce fait", "de cette façon", "de crainte que", "de façon à", "de façon à ce que", "de façon que", "de fait", "de l'autre côté", "de la même manière", "de la même façon que", "de manière que", "de même", "de même qu'à", "de même que", "de nos jours", "de peur que", "de prime abord", "de sorte que", "de surcroît", "de telle manière que", "de telle sorte que", "de toute évidence", "de toute façon", "de toute manière", "depuis que", "dès lors que", "dès maintenant", "dès qua", "dès que", "du fait que", "du moins", "du moment que", "du point de vue de", "du reste", "d'ici là", "d'ores et déjà", "en admettant que", "en attendant que", "en bref", "en cas de", "en cas que", "en ce cas", "en ce domaine", "en ce moment", "en ce qui a trait à", "en ce qui concerne", "en ce sens", "en cela", "en comparaison de", "en conclusion", "en conformité avec", "en conséquence", "en d'autres termes", "en définitive", "en dépit de", "en dernier lieu", "en deuxième lieu", "en effet", "en face de", "en fait", "en fin de compte", "en général", "en guise de conclusion", "en matière de", "en même temps que", "en outre", "en particulier", "en plus", "en premier lieu", "en principe", "en raison de", "en réalité", "en règle générale", "en résumé", "en revanche", "en second lieu", "en somme", "en sorte que", "en supposant que", "en tant que", "en terminant", "en théorie", "en tout cas", "en tout premier lieu", "en troisième lieu", "en un mot", "en vérité", "en vue que", "encore que", "encore une fois", "entre autres", "et même", "et puis", "étant donné qu'à", "étant donné que", "face à", "grâce à", "il est à noter que", "il est indéniable que", "il est question de", "il est vrai que", "il faut dire aussi que", "il faut reconnaître que", "il faut souligner que", "il ne faut pas oublier que", "il s'ensuit que", "il suffit de prendre pour exemple", "jusqu'ici", "il y a aussi", "jusqu'à ce que", "jusqu'à ce jour", "jusqu'à maintenant", "jusqu'à présent", "jusqu'au moment où", "jusqu'ici", "l'aspect le plus important de", "l'exemple le plus significatif", "jusqu'au moment où", "la preuve c'est que", "loin que", "mais en réalité", "malgré cela", "malgré tout", "même si", "mentionnons que", "mis à part le fait que", "notons que", "nul doute que", "ou bien", "outre cela", "où que", "par ailleurs", "par conséquent", "par contre", "par exception", "par exemple", "par la suite", "par l'entremise de", "par l'intermédiaire de", "par rapport à", "par suite", "par suite de", "par surcroît", "parce que", "pareillement", "partant de ce fait", "pas du tout", "pendant que", "plus précisément", "plus tard", "pour ainsi dire", "pour autant que", "pour ce qui est de", "pour ces motifs", "pour ces raisons", "pour cette raison", "pour commencer", "pour conclure", "pour le moment", "pour marquer la causalité", "pour l'instant", "pour peu que", "pour prendre un autre exemple", "pour que", "pour résumé", "pour terminer", "pour tout dire", "pour toutes ces raisons", "pourvu que", "prenons le cas de", "quand bien même que", "quand même", "quant à", "quel que soit", "qui plus est", "qui que", "quitte à", "quoi qu'il en soit", "quoi que", "quoiqu'il en soit", "sans délai", "sans doute", "sans parler de", "sans préjuger", "sans tarder", "sauf si", "selon que", "si bien que", "si ce n'est que", "si l'on songe que", "sitôt que", "somme toute", "sous cette réserve", "sous prétexte que", "sous réserve de", "sous réserve que", "suivant que", "supposé que", "sur le plan de", "tandis que", "tant et si bien que", "tant que", "tel que", "tellement que", "touchant à", "tout à fait", "tout bien pesé", "tout compte fait", "tout d'abord", "tout d'abord examinons", "tout d'abord il faut dire que", "tout de même", "tout en reconnaissant que", "une fois de plus", "vu que"];
Object.defineProperty(ad, "__esModule", {
  value: !0
});
ad.default = function() {
  return {
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(lg, yg, vg, Vx, Zx, Qx),
    // These word categories are filtered at the beginning of word combinations.
    filteredAtBeginning: Jx,
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(og, wg, Kx, Wx, Xx, Fx, pg),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(Lx, Ix, ug, cg, mg, a2, dg, Hx, hg, fg, bg, gg, Gx, Yx, zg, Dx, Ux, n2, Nx, e2, t2, i2),
    // These word categories cannot directly precede a passive participle.
    cannotDirectlyPrecedePassiveParticiple: [].concat(og, wg, cg, ug, pg, mg, gg, Bx, zg, dg, lg, bg, hg, vg),
    // These word categories cannot intervene between an auxiliary and a corresponding passive participle.
    cannotBeBetweenPassiveAuxiliaryAndParticiple: [].concat(fg, yg),
    // This export contains all of the above words.
    all: [].concat(og, dg, lg, Wx, pg, mg, Ix, ug, Dx, Fx, gg, Bx, Nx, Ux, fg, yg, zg, Hx, Vx, wg, Kx, Gx, Yx, hg, Zx, Lx, Taa, Xx, bg, vg, a2, Jx, Qx, e2, i2, n2, t2, Raa, Oaa, cg)
  };
};
var Saa = eu, qaa = Paa(Saa);
function Paa(a) {
  return a && a.__esModule ? a : { default: a };
}
const Lx = (0, qaa.default)().singleWords, og = ["le", "la", "les", "un", "une", "des", "aux", "du", "au", "d'un", "d'une", "l'un", "l'une"], dg = ["deux", "trois", "quatre", "cinq", "six", "sept", "huit", "neuf", "dix", "onze", "douze", "treize", "quatorze", "quinze", "seize", "dix-sept", "dix-huit", "dix-neuf", "vingt", "trente", "quarante", "cinquante", "soixante", "soixante-dix", "quatre-vingt", "quatre-vingt-dix", "septante", "huitante", "octante", "nonante", "cent", "mille", "million", "milliard"], lg = ["second", "secondes", "deuxième", "deuxièmes", "troisième", "troisièmes", "quatrième", "quatrièmes", "cinquième", "cinquièmes", "sixième", "sixièmes", "septième", "septièmes", "huitième", "huitièmes", "neuvième", "neuvièmes", "dixième", "dixièmes", "onzième", "onzièmes", "douzième", "douzièmes", "treizième", "treizièmes", "quatorzième", "quatorzièmes", "quinzième", "quinzièmes", "seizième", "seizièmes", "dix-septième", "dix-septièmes", "dix-huitième", "dix-huitièmes", "dix-neuvième", "dix-neuvièmes", "vingtième", "vingtièmes"], Ix = ["je", "tu", "il", "elle", "on", "nous", "vous", "ils", "elles", "qu'il", "qu'elle", "qu'ils", "qu'elles", "qu'on", "d'elle", "d'elles"], cg = ["moi", "toi", "lui", "soi", "eux", "d'eux", "qu'eux"], ug = ["me", "te"], Wx = ["celui", "celle", "ceux", "celles", "ce", "celui-ci", "celui-là", "celle-ci", "celle-là", "ceux-ci", "ceux-là", "celles-ci", "celles-là", "ceci", "cela", "ça", "cette", "cet", "ces"], pg = ["mon", "ton", "son", "ma", "ta", "sa", "mes", "tes", "ses", "notre", "votre", "leur", "nos", "vos", "leurs"], Fx = ["beaucoup", "peu", "quelque", "quelques", "tous", "tout", "toute", "toutes", "plusieurs", "plein", "chaque", "suffisant", "suffisante", "suffisantes", "suffisants", "faible", "moins", "tant", "plus", "divers", "diverse", "diverses"], mg = ["se"], gg = ["aucun", "aucune", "autre", "autres", "d'autres", "certain", "certaine", "certaines", "certains", "chacun", "chacune", "même", "mêmes", "quelqu'un", "quelqu'une", "quelques'uns", "quelques'unes", "autrui", "nul", "personne", "quiconque", "rien", "d'aucunes", "d'aucuns", "nuls", "nules", "l'autre", "tel", "telle", "tels", "telles"], Dx = ["qui", "que", "lequel", "laquelle", "auquel", "auxquels", "auxquelles", "duquel", "desquels", "desquelles", "dont", "où", "quoi"], Bx = ["combien", "comment", "pourquoi", "d'où"], zg = ["quel", "quels", "quelle"], Nx = ["y", "n'y"], Ux = ["là", "ici", "d'ici", "voici"], fg = ["a", "a-t-elle", "a-t-il", "a-t-on", "ai", "ai-je", "aie", "as", "as-tu", "aura", "aurai", "auraient", "aurais", "aurait", "auras", "aurez", "auriez", "aurons", "auront", "avaient", "avais", "avait", "avez", "avez-vous", "aviez", "avions", "avons", "avons-nous", "ayez", "ayons", "eu", "eûmes", "eurent", "eus", "eut", "eûtes", "j'ai", "j'aurai", "j'avais", "j'eus", "ont", "ont-elles", "ont-ils", "vais", "vas", "va", "allons", "allez", "vont", "vais-je", "vas-tu", "va-t-il", "va-t-elle", "va-t-on", "allons-nous", "allez-vous", "vont-elles", "vont-ils", "allé", "allés", "j'allai", "allai", "allas", "alla", "allâmes", "allâtes", "allèrent", "j'allais", "allais", "allait", "allions", "alliez", "allaient", "j'irai", "iras", "ira", "irons", "irez", "iront", "j'aille", "aille", "ailles", "aillent", "j'allasse", "allasse", "allasses", "allât", "allassions", "allassiez", "allassent", "j'irais", "irais", "irait", "irions", "iriez", "iraient", "allant", "viens", "vient", "venons", "venez", "viennent", "viens-je", "viens-de", "vient-il", "vient-elle", "vient-on", "venons-nous", "venez-vous", "viennent-elles", "viennent-ils", "vins", "vint", "vînmes", "vîntes", "vinrent", "venu", "venus", "venais", "venait", "venions", "veniez", "venaient", "viendrai", "viendras", "viendra", "viendrons", "viendrez", "viendront", "vienne", "viennes", "vinsse", "vinsses", "vînt", "vinssions", "vinssiez", "vinssent", "viendrais", "viendrait", "viendrions", "viendriez", "viendraient", "venant", "dois", "doit", "devons", "devez", "doivent", "dois-je", "dois-tu", "doit-il", "doit-elle", "doit-on", "devons-nous", "devez-vous", "doivent-elles", "doivent-ils", "dus", "dut", "dûmes", "dûtes", "durent", "dû", "devais", "devait", "devions", "deviez", "devaient", "devrai", "devras", "devra", "devrons", "devrez", "devront", "doive", "doives", "dusse", "dusses", "dût", "dussions", "dussiez", "dussent", "devrais", "devrait", "devrions", "devriez", "devraient", "peux", "peut", "pouvons", "pouvez", "peuvent", "peux-je", "peux-tu", "peut-il", "peut-elle", "peut-on", "pouvons-nous", "pouvez-vous", "peuvent-ils", "peuvent-elles", "pus", "put", "pûmes", "pûtes", "purent", "pu", "pouvais", "pouvait", "pouvions", "pouviez", "pouvaient", "pourrai", "pourras", "pourra", "pourrons", "pourrez", "pourront", "puisse", "puisses", "puissions", "puissiez", "puissent", "pusse", "pusses", "pût", "pussions", "pussiez", "pussent", "pourrais", "pourrait", "pourrions", "pourriez", "pourraient", "pouvant", "semble", "sembles", "semblons", "semblez", "semblent", "semble-je", "sembles-il", "sembles-elle", "sembles-on", "semblons-nous", "semblez-vous", "semblent-ils", "semblent-elles", "semblai", "semblas", "sembla", "semblâmes", "semblâtes", "semblèrent", "semblais", "semblait", "semblions", "sembliez", "semblaient", "semblerai", "sembleras", "semblera", "semblerons", "semblerez", "sembleront", "semblé", "semblasse", "semblasses", "semblât", "semblassions", "semblassiez", "semblassent", "semblerais", "semblerait", "semblerions", "sembleriez", "sembleraient", "parais", "paraît", "ait", "paraissons", "paraissez", "paraissent", "parais-je", "parais-tu", "paraît-il", "paraît-elle", "paraît-on", "ait-il", "ait-elle", "ait-on", "paraissons-nous", "paraissez-vous", "paraissent-ils", "paraissent-elles", "parus", "parut", "parûmes", "parûtes", "parurent", "paraissais", "paraissait", "paraissions", "paraissiez", "paraissaient", "paraîtrai", "paraîtras", "paraîtra", "paraîtrons", "paraîtrez", "paraîtront", "paru", "paraisse", "paraisses", "parusse", "parusses", "parût", "parussions", "parussiez", "parussent", "paraîtrais", "paraîtrait", "paraîtrions", "paraîtriez", "paraîtraient", "paraitrais", "paraitrait", "paraitrions", "paraitriez", "paraitraient", "paraissant", "mets", "met", "mettons", "mettez", "mettent", "mets-je", "mets-tu", "met-il", "met-elle", "met-on", "mettons-nous", "mettez-vous", "mettent-ils", "mettent-elles", "mis", "mit", "mîmes", "mîtes", "mirent", "mettais", "mettait", "mettions", "mettiez", "mettaient", "mettrai", "mettras", "mettra", "mettrons", "mettrez", "mettront", "mette", "mettes", "misse", "misses", "mît", "missions", "missiez", "missent", "mettrais", "mettrait", "mettrions", "mettriez", "mettraient", "mettant", "finis", "finit", "finissons", "finissez", "finissent", "finis-je", "finis-tu", "finit-il", "finit-elle", "finit-on", "finissons-nous", "finissez-vous", "finissent-ils", "finissent-elles", "finîmes", "finîtes", "finirent", "finissais", "finissait", "finissions", "finissiez", "finissaient", "finirai", "finiras", "finira", "finirons", "finirez", "finiront", "fini", "finisse", "finisses", "finît", "finirais", "finirait", "finirions", "finiriez", "finiraient", "finissant", "n'a", "n'ai", "n'aie", "n'as", "n'aura", "n'aurai", "n'auraient", "n'aurais", "n'aurait", "n'auras", "n'aurez", "n'auriez", "n'aurons", "n'auront", "n'avaient", "n'avais", "n'avait", "n'avez", "n'avez-vous", "n'aviez", "n'avions", "n'avons", "n'avons-nous", "n'ayez", "n'ayons", "n'ont", "n'ont-elles", "n'ont-ils", "n'allons", "n'allez", "n'allais", "n'allait", "n'allions", "n'alliez", "n'allaient", "n'iras", "n'ira", "n'irons", "n'irez", "n'iront", "qu'a"], yg = ["avoir", "aller", "venir", "devoir", "pouvoir", "sembler", "paraître", "paraitre", "mettre", "finir", "d'avoir", "d'aller", "n'avoir", "l'avoir"], Hx = ["suis", "es", "est", "est-ce", "n'est", "sommes", "êtes", "sont", "suis-je", "es-tu", "est-il", "est-elle", "est-on", "sommes-nous", "êtes-vous", "sont-ils", "sont-elles", "étais", "était", "étions", "étiez", "étaient", "serai", "seras", "sera", "serons", "serez", "seront", "serais", "serait", "serions", "seriez", "seraient", "sois", "soit", "soyons", "soyez", "soient", "été", "n'es", "n'est-ce", "n'êtes", "n'était", "n'étais", "n'étions", "n'étiez", "n'étaient", "qu'est"], Vx = ["être", "d'être"], wg = ["à", "après", "d'après", "au-delà", "au-dessous", "au-dessus", "avant", "avec", "concernant", "chez", "contre", "dans", "de", "depuis", "derrière", "dès", "devant", "durant", "en", "entre", "envers", "environ", "hormis", "hors", "jusque", "jusqu'à", "jusqu'au", "jusqu'aux", "loin", "moyennant", "outre", "par", "parmi", "pendant", "pour", "près", "quant", "sans", "sous", "sur", "travers", "vers", "voilà"], Kx = ["et", "ni", "or", "ou"], Gx = ["non", "pas", "seulement", "sitôt", "aussitôt", "d'autre"], Yx = ["afin", "autant", "comme", "d'autant", "d'ici", "quand", "lors", "parce", "si", "tandis"], hg = ["dit", "disent", "dit-il", "dit-elle", "disent-ils", "disent-elles", "disait", "disait-il", "disait-elle", "disaient-ils", "disaient-elles", "dirent", "demande", "demandent", "demande-t-il", "demande-t-elle", "demandent-ils", "demandent-elles", "demandait", "demandaient", "demandait-il", "demandait-elle", "demandaient-ils", "demandaient-elles", "demanda", "demanda-t-il", "demanda-t-elle", "demandé", "pense", "pensent", "pense-t-il", "pense-t-elle", "pensent-ils", "pensent-elles", "pensait", "pensaient", "pensait-il", "pensait-elle", "pensaient-ils", "pensaient-elles", "pensa", "pensa-t-il", "pensa-t-elle", "pensé", "affirme", "affirme-t-il", "affirme-t-elle", "affirmé", "avoue", "avoue-t-il", "avoue-t-elle", "avoué", "concède", "concède-t-il", "concède-t-elle", "concédé", "confie", "confie-t-il", "confie-t-elle", "confié", "continue", "continue-t-il", "continue-t-elle", "continué", "déclame", "déclame-t-il", "déclame-t-elle", "déclamé", "déclare", "déclare-t-il", "déclare-t-elle", "déclaré", "déplore", "déplore-t-il", "déplore-t-elle", "déploré", "explique", "explique-t-il", "explique-t-elle", "expliqué", "lance", "lance-t-il", "lance-t-elle", "lancé", "narre", "narre-t-il", "narre-t-elle", "narré", "raconte", "raconte-t-il", "raconte-t-elle", "raconté", "rappelle", "rappelle-t-il", "rappelle-t-elle", "rappelé", "réagit", "réagit-il", "réagit-elle", "réagi", "répond", "répond-il", "répond-elle", "répondu", "rétorque", "rétorque-t-il", "rétorque-t-elle", "rétorqué", "souligne", "souligne-t-il", "souligne-t-elle", "souligné", "affirme-t-il", "affirme-t-elle", "ajoute-t-il", "ajoute-t-elle", "analyse-t-il", "analyse-t-elle", "avance-t-il", "avance-t-elle", "écrit-il", "écrit-elle", "indique-t-il", "indique-t-elle", "poursuit-il", "poursuit-elle", "précise-t-il", "précise-t-elle", "résume-t-il", "résume-t-elle", "souvient-il", "souvient-elle", "témoigne-t-il", "témoigne-t-elle"], Zx = ["dire", "penser", "demander", "concéder", "continuer", "confier", "déclamer", "déclarer", "déplorer", "expliquer", "lancer", "narrer", "raconter", "rappeler", "réagir", "répondre", "rétorquer", "souligner", "affirmer", "ajouter", "analyser", "avancer", "écrire", "indiquer", "poursuivre", "préciser", "résumer", "témoigner"], Taa = ["encore", "éternellement", "immédiatement", "compris", "comprenant", "inclus", "naturellement", "particulièrement", "notablement", "actuellement", "maintenant", "ordinairement", "généralement", "habituellement", "d'habitude", "vraiment", "finalement", "uniquement", "peut-être", "initialement", "déjà", "c.-à-d", "souvent", "fréquemment", "régulièrement", "simplement", "éventuellement", "quelquefois", "parfois", "probable", "plausible", "jamais", "toujours", "incidemment", "accidentellement", "récemment", "dernièrement", "relativement", "clairement", "évidemment", "apparemment", "pourvu"], Xx = ["assez", "trop", "tellement", "presque", "très", "absolument", "extrêmement", "quasi", "quasiment", "fort"], bg = ["fais", "fait", "faisons", "faites", "font", "fais-je", "fait-il", "fait-elle", "fait-on", "faisons-nous", "faites-vous", "font-ils", "font-elles", "fis", "fit", "fîmes", "fîtes", "firent", "faisais", "faisait", "faisions", "faisiez", "faisaient", "ferai", "feras", "fera", "ferons", "ferez", "feront", "veux", "veut", "voulons", "voulez", "veulent", "voulus", "voulut", "voulûmes", "voulûtes", "voulurent", "voulais", "voulait", "voulions", "vouliez", "voulaient", "voudrai", "voudras", "voudra", "voudrons", "voudrez", "voudront", "voulu", "veux-je", "veux-tu", "veut-il", "veut-elle", "veut-on", "voulons-nous", "voulez-vous", "veulent-ils", "veulent-elles", "voudrais", "voudrait", "voudrions", "voudriez", "voudraient", "voulant"], vg = ["faire", "vouloir"], Jx = ["antérieur", "antérieures", "antérieurs", "antérieure", "précédent", "précédents", "précédente", "précédentes", "facile", "faciles", "simple", "simples", "vite", "vites", "vitesse", "vitesses", "difficile", "difficiles", "propre", "propres", "long", "longe", "longs", "longes", "longue", "longues", "bas", "basse", "basses", "ordinaire", "ordinaires", "bref", "brefs", "brève", "brèves", "sûr", "sûrs", "sûre", "sûres", "sure", "sures", "surs", "habituel", "habituels", "habituelle", "habituelles", "soi-disant", "surtout", "récent", "récents", "récente", "récentes", "total", "totaux", "totale", "totales", "complet", "complets", "complète", "complètes", "possible", "possibles", "communément", "constamment", "facilement", "continuellement", "directement", "légèrement", "dernier", "derniers", "dernière", "dernières", "différent", "différents", "différente", "différentes", "similaire", "similaires", "pareil", "pareils", "pareille", "pareilles", "largement", "mal", "super", "bien", "pire", "pires", "suivants", "suivante", "suivantes", "prochain", "prochaine", "prochains", "prochaines", "proche", "proches", "fur"], Qx = ["nouveau", "nouvel", "nouvelle", "nouveaux", "nouvelles", "vieux", "vieil", "vieille", "vieilles", "beau", "bel", "belle", "belles", "bon", "bons", "bonne", "bonnes", "grand", "grande", "grands", "grandes", "haut", "hauts", "haute", "hautes", "petit", "petite", "petits", "petites", "meilleur", "meilleurs", "meilleure", "meilleures", "joli", "jolis", "jolie", "jolies", "gros", "grosse", "grosses", "mauvais", "mauvaise", "mauvaises", "dernier", "derniers", "dernière", "dernières"], a2 = ["ah", "ha", "oh", "ho", "bis", "plouf", "vlan", "ciel", "pouf", "paf", "crac", "hurrah", "allo", "stop", "bravo", "ô", "eh", "hé", "aïe", "oef", "ahi", "fi", "zest", "hem", "holà", "chut"], e2 = ["mg", "g", "kg", "ml", "dl", "cl", "l", "grammes", "gram", "once", "onces", "oz", "lbs", "càc", "cc", "càd", "càs", "càt", "cd", "cs", "ct"], t2 = ["minute", "minutes", "heure", "heures", "journée", "journées", "semaine", "semaines", "mois", "année", "années", "aujourd'hui", "demain", "hier", "après-demain", "avant-hier"], i2 = ["chose", "choses", "façon", "façons", "pièce", "pièces", "truc", "trucs", "fois", "cas", "aspect", "aspects", "objet", "objets", "idée", "idées", "thème", "thèmes", "sujet", "sujets", "personnes", "manière", "manières", "sorte", "sortes"], n2 = ["ne", "oui", "d'accord", "amen", "euro", "euros", "etc"], Raa = ["mme", "mmes", "mlle", "mlles", "mm", "dr", "pr"], Oaa = ["jr", "sr"];
var tu = {}, iu = {};
Object.defineProperty(iu, "__esModule", {
  value: !0
});
iu.default = function() {
  return {
    singleWords: r2,
    multipleWords: s2,
    allWords: r2.concat(s2)
  };
};
const r2 = ["ademais", "afinal", "aliás", "analogamente", "anteriormente", "assim", "certamente", "conforme", "conquanto", "contudo", "decerto", "embora", "enfim", "enquanto", "então", "entretanto", "eventualmente", "igualmente", "inegavelmente", "inesperadamente", "mas", "outrossim", "pois", "porquanto", "porque", "portanto", "posteriormente", "precipuamente", "primeiramente", "primordialmente", "principalmente", "salvo", "semelhantemente", "similarmente", "sobretudo", "surpreendentemente", "todavia"], s2 = ["a fim de", "a fim de que", "a menos que", "a princípio", "a saber", "acima de tudo", "ainda assim", "ainda mais", "ainda que", "além disso", "antes de mais nada", "antes de tudo", "antes que", "ao mesmo tempo", "ao passo que", "ao propósito", "apesar de", "às vezes", "assim como", "assim que", "assim sendo", "assim também", "bem como", "com a finalidade de", "com efeito", "com o fim de", "com o intuito de", "com o propósito de", "com toda a certeza", "como resultado", "como se", "da mesma forma", "de acordo com", "de conformidade com", "de fato", "de maneira idêntica", "de tal forma que", "de tal sorte que", "depois que", "desde que", "dessa forma", "dessa maneira", "desse modo", "do mesmo modo", "é provável", "em conclusão", "em contrapartida", "em contraste com", "em outras palavras", "em primeiro lugar", "em princípio", "em resumo", "em seguida", "em segundo lugar", "em síntese", "em suma", "em terceiro lugar", "em virtude de", "finalmente agora atualmente", "isto é", "já que", "logo após", "logo depois", "logo que", "mesmo que", "não apenas", "nesse hiato", "nesse ínterim", "nesse meio tempo", "nesse sentido", "no entanto", "no momento em que", "ou por outra", "ou seja", "para que", "pelo contrário", "por analogia", "por causa de", "por certo", "por conseguinte", "por conseqüência", "por exemplo", "por fim", "por isso", "por mais que", "por menos que", "por outro lado", "posto que", "se acaso", "se bem que", "seja como for", "sem dúvida", "só para exemplificar", "só para ilustrar", "só que", "sob o mesmo ponto de vista", "talvez provavelmente", "tanto quanto", "uma vez que", "visto que"];
Object.defineProperty(tu, "__esModule", {
  value: !0
});
tu.default = function() {
  return {
    // These word categories are filtered at the beginning of word combinations.
    filteredAtBeginning: _2,
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat($g, f2, w2, Tg, $2),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(kg, Sg, h2, u2, k2, p2, xg),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(Iaa, _g, o2, jg, d2, l2, c2, Ag, m2, Eg, g2, z2, y2, b2, qg, v2, Pg, j2, x2, A2, E2, S2, q2),
    // These word categories cannot directly precede a passive participle.
    cannotDirectlyPrecedePassiveParticiple: [].concat(kg, Sg, jg, xg, Ag, Eg, _g, $g, Pg, Tg, qg),
    // This export contains all of the above words.
    all: [].concat(kg, _g, $g, o2, jg, d2, l2, c2, u2, xg, p2, Ag, m2, Eg, g2, z2, f2, y2, w2, Sg, h2, b2, qg, v2, k2, Pg, Tg, _2, $2, j2, x2, A2, E2, S2, q2)
  };
};
var Maa = iu, Caa = Laa(Maa);
function Laa(a) {
  return a && a.__esModule ? a : { default: a };
}
const Iaa = (0, Caa.default)().singleWords, kg = ["o", "a", "os", "as", "um", "uns", "uma", "umas"], _g = ["uma", "duas", "dois", "três", "cuatro", "cinco", "seis", "sete", "oito", "nove", "dez", "onze", "doze", "treze", "quatorze", "catorze", "quinze", "dezesseis", "dezessete", "dezasseis", "dezassete", "dezoito", "dezenove", "dezanove", "vinte", "cem", "cento", "mil", "milhão", "milhões", "bilhão", "bilhões"], $g = ["primeiro", "primeiros", "primeira", "primeiras", "segundo", "segunda", "segundos", "segundas", "terceiro", "terceira", "terceiros", "terceiras", "quarto", "quartos", "quarta", "quartas", "quinto", "quintos", "quinta", "quintas", "sexto", "sextos", "sexta", "sextas", "sétimo", "sétimos", "sétima", "sétimas", "oitavo", "oitavos", "oitava", "oitavas", "nono", "nonos", "nona", "nonas", "décimo", "décimos", "décima", "décimas", "vigésimo", "vigésimos", "vigésima", "vigésimas"], o2 = ["eu", "tu", "ele", "ela", "nós", "vós", "você", "vocês", "eles", "elas"], jg = ["me", "te", "lhe", "nos", "vos", "lhes"], d2 = ["dele", "dela", "deles", "delas", "nele", "nela", "neles", "nelas", "mim", "ti", "si"], l2 = ["conmigo", "contigo", "consigo", "convosco", "conosco", "connosco"], c2 = ["se"], u2 = ["aquilo", "àquele", "àquela", "àqueles", "àquelas", "àquilo", "este", "estes", "esta", "estas", "àqueles", "aqueles", "aquele", "aquela", "aquelas", "aquilo", "esse", "esses", "essa", "essas", "isto", "isso"], xg = ["minhas", "tuas", "suas", "minha", "tua", "sua", "minhas", "tuas", "suas", "vossa", "vossas", "meu", "meus", "teu", "teus", "seu", "seus", "nosso", "nossos", "nossa", "nossas"], p2 = ["apenas", "vário", "vários", "vária", "várias", "mais", "muito", "muitos", "muita", "muitas", "puoco", "puocos", "puoca", "puocas", "bastante", "todo", "todos", "toda", "todas"], Ag = ["alguma", "algumas", "nenhuns", "nenhumas", "todo", "toda", "todas", "outro", "outra", "outros", "outras", "qualquer", "quaisquer", "outrem", "tudo", "nada", "algo", "tanto", "tanta", "tantos", "tantas", "quanto", "quanta", "quantos", "quantas", "ninguém", "cada"], m2 = ["quais", "qual", "quem", "cujo", "cuja", "cujos", "cujas"], Eg = ["como", "porque", "quanto", "quanta", "onde", "quando", "quão", "quantos", "quantas", "donde", "aonde", "que"], g2 = ["cá", "além", "aqui", "ali", "lá", "acolá", "aí"], z2 = ["tenho", "tens", "tem", "temos", "tendes", "têm", "tive", "tiveste", "teve", "tivemos", "tivestes", "tiveram", "tínhamos", "tínheis", "tinham", "tivera", "tiveras", "tivéramos", "tivéreis", "tiveram", "terei", "terás", "terá", "teremos", "tereis", "terão", "teria", "terias", "teríamos", "teríeis", "teriam", "tenha", "tenhas", "tenhamos", "tenhais", "tenham", "tivesse", "tivesses", "tivéssemos", "tivésseis", "tivessem", "tiver", "tiveres", "tivermos", "tiverdes", "tiverem", "tende", "teres", "termos", "terdes", "terem", "tido", "hei", "hás", "há", "havemos", "hemos", "haveis", "heis", "hão", "houve", "houveste", "houvemos", "houvestes", "houveram", "havia", "havias", "havíamos", "havíeis", "haviam", "houvera", "houveras", "houvéramos", "houvéreis", "houveram", "haverei", "haverás", "haverá", "haveremos", "havereis", "haverão", "haveria", "haverias", "haveríamos", "haveríeis", "haveriam", "haja", "hajas", "hajamos", "hajais", "hajam", "houvesse", "houvesses", "houvéssemos", "houvésseis", "houvessem", "houver", "houveres", "houvermos", "houverdes", "houverem", "havei", "hajais", "haveres", "havermos", "haverdes", "haverem", "havido", "poder", "posso", "podes", "pode", "podemos", "podeis", "podem", "pude", "pudeste", "pôde", "pudemos", "pudestes", "puderam", "podia", "podias", "podia", "podíamos", "podíeis", "podiam", "pudera", "puderas", "pudéramos", "pudéreis", "puderam", "poderei", "poderás", "poderá", "poderemos", "podereis", "poderão", "poderia", "poderias", "poderíamos", "poderíeis", "poderiam", "possa", "possas", "possamos", "possais", "possam", "pudesse", "pudesses", "pudéssemos", "pudésseis", "pudessem", "puder", "puderes", "pudermos", "puderdes", "puderem"], f2 = ["ter", "haver"], y2 = ["sou", "és", "é", "somos", "sois", "são", "fui", "foste", "foi", "fomos", "fostes", "foram", "era", "eras", "éramos", "éreis", "eram", "fôramos", "fôreis", "fora", "foras", "foram", "serei", "serás", "será", "seremos", "sereis", "serão", "seria", "serias", "seríamos", "seríeis", "seriam", "seja", "sejas", "seja", "sejamos", "sejais", "sejam", "fosse", "fosses", "fôssemos", "fôsseis", "fossem", "for", "fores", "formos", "fordes", "forem", "sê", "sede", "sermos", "serdes", "serem", "seres", "sido", "estou", "está", "estamos", "estás", "estás", "estais", "estão", "estive", "estiveste", "esteve", "estivemos", "estivestes", "estiveram", "estava", "estavas", "estávamos", "estáveis", "estavam", "estivera", "estiveras", "estivéramos", "estivéreis", "estiveram", "estarei", "estarás", "estará", "estaremos", "estareis", "estarão", "estaria", "estarias", "estaríamos", "estaríeis", "estariam", "esteja", "estejas", "estejamos", "estejais", "estejam", "estivesse", "estivesses", "estivéssemos", "estivésseis", "estivessem", "estiver", "estiveres", "estivermos", "estiverdes", "estiverem", "estai", "estejas", "estejais", "estares", "estarmos", "estardes", "estarem", "estado"], w2 = ["estar", "ser"], Sg = ["a", "ante", "antes", "após", "até", "através", "com", "contra", "depois", "desde", "sem", "entre", "para", "pra", "perante", "sob", "sobre", "trás", "de", "por", "em", "ao", "à", "aos", "às", "do", "da", "dos", "das", "dum", "duma", "duns", "dumas", "no", "na", "nos", "nas", "num", "numa", "nuns", "numas", "pelo", "pela", "pelos", "pelas", "deste", "desse", "daquele", "desta", "dessa", "daquela", "destes", "desses", "daqueles", "destas", "dessas", "daquelas", "neste", "nesse", "naquele", "nesta", "nessa", "naquela", "nestes", "nesses", "naqueles", "nestas", "nessas", "naquelas", "disto", "disso", "daquilo", "nisto", "nisso", "naquilo", "durante"], h2 = ["também", "e", "ou", "nem"], b2 = ["agora", "conforme", "conquanto", "contanto", "embora", "enquanto", "então", "entretanto", "malgrado", "mas", "pois", "porém", "porquanto", "porque", "senão", "contudo"], qg = ["diz", "dizem", "disse", "disseram", "dizia", "diziam", "reivindica", "reivindicam", "reivindicou", "reivindicaram", "reivindicava", "reivindicavam", "requer", "requerem", "requereu", "requereram", "requeria", "requeriam", "afirma", "afirmam", "afirmou", "afirmaram", "afirmava", "afirmavam", "reivindica", "reivindicam", "reivindicou", "reivindicaram", "reivindicava", "reivindicavam", "perguntam", "perguntou", "perguntaram", "perguntava", "perguntavam", "explica", "explicam", "explicou", "explicaram", "explicava", "explicavam", "relata", "relatam", "relatou", "relataram"], v2 = ["provavelmente", "imediatamente", "ocasionalmente", "indubitavelmente", "para", "possivelmente", "logo", "simultaneamente", "exceto", "inquestionavelmente"], k2 = ["extremamente", "bem", "completamente", "totalmente", "grandemente", "seriamente", "absolutamente", "bastante", "sobremodo", "sobremaneira", "tão"], Pg = ["dou", "dás", "dá", "damos", "dais", "dão", "dei", "deu", "demos", "deram", "dava", "davas", "dávamos", "dáveis", "davam", "dera", "deras", "déramos", "déreis", "deram", "darei", "darás", "dará", "daremos", "dareis", "darão", "daria", "darias", "daríamos", "daríeis", "dariam", "dê", "dês", "dêmos", "deis", "deem", "déssemos", "désseis", "dessem", "der", "deres", "dermos", "derdes", "derem", "dai", "deis", "dares", "darmos", "dardes", "darem", "fazendo", "faço", "fazes", "faz", "fazemos", "fazeis", "fazem", "fiz", "fizeste", "fez", "fizemos", "fizestes", "fizeram", "fazia", "fazias", "fazíamos", "fazíeis", "faziam", "fizera", "fizeras", "fizéramos", "fizéreis", "farei", "farás", "fará", "faremos", "fareis", "faria", "farias", "faríamos", "faríeis", "fariam", "faça", "faças", "façamos", "façais", "façam", "fizesse", "fizesses", "fizéssemos", "fizésseis", "fizessem", "fizer", "fizeres", "fizermos", "fizerdes", "fizerem", "fazei", "fazeres", "fazermos", "fazerdes", "fazerem"], Tg = ["dar", "fazer"], _2 = ["devagar", "rapidamente", "grande", "grandes", "depressa", "claramente", "effectivamente", "realmente", "exclusivamente", "simplesemente", "somente", "unicamente", "lentamente", "raramente", "certamente", "talvez", "actualmente", "dificilmente", "principalmente", "gerlamente", "enorme", "enormes", "pequeno", "pequena", "pequenos", "pequenas", "minúsculo", "minúsculos", "minúscula", "minúsculas", "velho", "velhos", "velha", "velhas", "lindo", "linda", "lindos", "lindas", "alto", "alta", "altos", "altas", "baixo", "baixa", "baixos", "baixas", "longo", "longa", "longos", "longas", "curto", "curta", "curtos", "curtas", "fácil", "fáceis", "difícil", "difíceis", "simples", "mesmo", "mesma", "mesmos", "mesmas", "mêsmo", "mêsmos", "mêsma", "mêsmas", "cedo", "tarde", "importante", "importantes", "capaz", "capazes", "certo", "certa", "certos", "certas", "usual", "usuals", "ultimamente", "possível", "possíveis", "comum", "comuns", "freqüentemente", "constantemente", "continuamente", "diretamente", "levemente", "algures", "semelhante", "semelhantes", "similar", "similares", "sempre", "ainda", "já", "atrás", "depois"], $2 = ["pior", "melhor", "melhores", "bom", "boa", "bons", "boas", "bonito", "bonita", "bonitos", "bonitas", "grande", "grandes", "pequeno", "pequena", "pequenos", "pequenas", "velho", "velhos", "velha", "velhas", "mau", "má", "maus", "más"], j2 = ["ai", "ah", "ih", "alô", "oi", "olá", "ui", "uf", "psiu", "mau", "olha", "viva", "uau", "wow", "oh", "shi"], x2 = ["kg", "mg", "gr", "g", "km", "m", "l", "ml", "cl"], A2 = ["segundos", "minuto", "minutos", "hora", "horas", "dia", "dias", "semana", "semanas", "mes", "meses", "ano", "anos", "hoje", "amanhã", "ontem"], E2 = ["caso", "casos", "coisa", "coisas", "detalhe", "detalhes", "forma", "formas", "jeito", "jeitos", "maneira", "maneiras", "modo", "modos", "suijeto", "sujeitos", "tópico", "tópicos", "vez", "vezes"], S2 = ["sim", "não", "ok", "amém", "etc", "euro", "euros", "adeus", "jeitos"], q2 = ["sr", "sra", "sras", "dr", "dra", "prof"];
var Zw = {}, nu = {};
Object.defineProperty(nu, "__esModule", {
  value: !0
});
nu.default = function() {
  return {
    singleWords: P2,
    multipleWords: T2,
    allWords: P2.concat(T2)
  };
};
const P2 = ["безусловно", "бесспорно", "вероятно", "вестимо", "вдобавок", "видимо", "вишь", "во-вторых", "во-первых", "вообще-то", "впрочем", "дабы", "едва", "ежели", "если", "затем ", "зачем", "ибо", "итак", "кабы", "кажется", "кажись", "коли", "кстати", "лишь", "лучше", "наверно", "наверное", "например", "небось", "нежели", "несомненно", "но", "однако", "особенно", "оттого", "отчего", "поди", "пожалуй", "позволь", "позвольте", "покамест", "покуда", "поскольку", "потому", "притом", "причем", "только", "хотя", "чтоб", "чтобы", "чуть", "якобы"], T2 = ["а вдобавок", "а вот", "а именно", "а не то", "а не", "а потом", "а также", "без всякого сомнения", "без того чтобы не", "без того, чтобы не", "благодаря тому", "более того", "будто бы", "будь то", "буквально", "в итоге", "в конце концов", "в общей сложности", "в общем-то", "в общем", "в отношении того что", "в отношении того, что", "в принципе", "в противовес тому что", "в противовес тому, что", "в противоположность тому", "в результате", "в самом деле", "в свою очередь", "в связи с тем что", "в связи с тем", "в силу того что", "в силу того", "в силу чего", "в случа", "в сравнении с тем", "в сущности говоря", "в сущности", "в таком случае", "в то время как", "в то время, как", "в том случае", "в частности", "в-третьих", "ввиду того", "вернее говоря", "вероятнее всего", "видите ли", "видишь ли", "вместе с тем", "вместо того", "вне всякого сомнения", "вне сомнения", "во всяком случае", "воля ваша", "воля твоя", "вообще говоря", "вопреки тому", "вплоть до того", "вроде того как", "вроде того что", "вроде того", "вроде того", "вследствие того что", "вследствие чего", "грубо говоря", "да еще", "да и то", "дай бог память", "даром что", "для того чтобы", "для того, чтобы", "до тех пор пока", "до тех пор, пока", "до того как", "до того, как", "едва лишь", "едва только", "ежели бы", "если угодно", "жалко, что", "жаль, что", "за счет того что", "за счет того, что", "знамо дело", "и вот еще", "из-за того что", "из-за того, что", "иначе говоря", "исходя из того", "к вашему сведению", "к несчастью", "к огорчению", "к примеру сказать", "к примеру", "к прискорбию", "к радости", "к слову сказать", "к сожалению", "к стыду своему", "к стыду", "к счастью", "к твоему сведению", "к тому же", "к удивлению", "к ужасу", "к чести", "как будто", "как бы там ни было", "как бы то ни было", "как бы", "как вам известно", "как вдруг", "как видите", "как видишь", "как видно", "как водится", "как выяснилось", "как выясняется", "как говорилось", "как говорится", "как если бы", "как знать", "как известно", "как на заказ", "как назло", "как нарочно", "как ни говори", "как ни говорите", "как ни странно", "как оказалось", "как оказывается", "как полагается", "как положено", "как правило", "как принято говорить", "как принято", "как сказано", "как скоро", "как следствие", "как словно", "как только", "как хотите", "как это ни странно", "ко всему прочему", "коль скоро", "коль уж", "коротко говоря", "короче говоря", "кроме всего прочего", "кстати говоря", "кстати сказать", "лишь бы", "лишь только", "мало сказать", "мало того", "между нами говоря", "между прочим", "между тем как", "может статься", "можно подумать", "мягко выражаясь", "мягко говоря", "на беду", "на ваш взгляд", "на мой взгляд", "на несчастье", "на основании того что", "на основании того, что", "на первый взгляд", "на самом деле", "на случай", "на твой взгляд", "на худой конец", "надо полагать", "наряду с тем что", "наряду с тем", "насчет того что", "насчет того, что", "не в пример тому как", "не в пример тому, как", "не то чтобы", "невзирая на то", "независимо от того", "несмотря на то", "ничего не скажешь", "но вообще-то", "кроме того", "однако же", "откровенно сказать", "относительно того что", "относительно того, что", "перед тем", "по вашему мнению", "по видимости", "по всей вероятности", "по всей видимости", "по данным", "по замыслу", "по идее", "по крайней мере", "по мере того как", "по мере того, как", "по мнению", "по моему мнению", "по обыкновению", "по обычаю", "по определению", "по поводу того", "по правде говоря", "по правде сказать", "по правде", "по преданию", "по причине того", "по прогнозам", "по сведениям", "по своему обыкновению", "по слухам", "по совести говоря", "по совести сказать", "по совести", "по сообщению", "по сообщениям", "по справедливости говоря", "по справедливости", "по сравнению", "по статистике", "по сути говоря", "по сути дела", "по сути", "по существу говоря", "по существу", "по счастью", "по твоему мнению", "по чести говоря", "по чести признаться", "по чести сказать", "по-вашему", "по-видимому", "по-ихнему", "по-моему", "по-нашему", "по-твоему", "под видом того что", "под видом того, что", "под предлогом", "подобно тому", "подумать только", "помимо всего прочего", "помимо всего", "помимо того", "помимо того", "помимо этого", "понятное дело", "попросту говоря", "попросту сказать", "после того", "потому как", "потому что", "правду говоря", "правду сказать", "правильнее говоря", "прежде всего", "прежде нежели", "прежде чем", "при всем том", "при условии что", "при условии, что", "против обыкновения", "проще говоря", "проще сказать", "прямо-таки как", "пускай бы", "равно как", "ради того чтобы", "разве что", "разумеется", "с вашего позволения", "с вашего разрешения", "с другой стороны", "с моей точки зрения", "с одной стороны", "с позволения сказать", "с твоего позволения", "с твоего разрешения", "с тем чтобы", "с тех пор как", "с той целью чтобы", "с точки зрения", "само собой разумеется", "сверх того что", "сверх того", "сказать по правде", "сказать по совести", "сказать по чести", "скорее всего", "смотря по тому", "со своей стороны", "собственно говоря", "совсем как", "стало быть", "стоит отметить", "строго говоря", "судя по всему", "судя по тому", "так или иначе", "так как", "так что", "так чтобы", "тем более что", "тем не менее", "тем паче что", "то бишь", "то есть", "тогда как", "только бы", "только лишь", "только чуть", "точнее говоря", "точнее сказать", "точно так же", "что и говорить", "что ни говори", "что ни говорите", "чуть лишь", "чуть только", "шутка ли сказать", "шутка ли", "шутка сказать", "это значит, что"];
Object.defineProperty(Zw, "__esModule", {
  value: !0
});
Zw.default = function() {
  return {
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(F2, Q2),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(aA, eA, B2, J2, U2, N2),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(R2, X2, D2, H2, iA, W2, O2, M2, C2, L2, I2, V2, tA, K2, G2, Y2, Z2, sA, nA, Naa, rA),
    // This export contains all of the above words.
    all: [].concat(W2, F2, B2, N2, H2, D2, U2, V2, Baa, K2, G2, Y2, Z2, X2, O2, M2, C2, aA, eA, tA, L2, R2, J2, I2, iA, Q2, nA, rA, sA, Uaa, Haa)
  };
};
var Waa = nu, Faa = Daa(Waa);
function Daa(a) {
  return a && a.__esModule ? a : { default: a };
}
const R2 = (0, Faa.default)().allWords, O2 = ["быть", "был", "была", "было", "были", "будет", "будут"], M2 = ["мочь", "мог", "могла", "могли", "могу", "можешь", "может", "можем", "можете", "могут", "смочь", "смогу", "сможешь", "сможет", "сможем", "сможете", "смогут", "решиться", "решился", "решилась", "решились", "решусь", "решишься", "решится", "решимся", "решитесь", "решатся", "делать", "делал", "делала", "делало", "делали", "делали", "делаю", "делаешь", "делает", "делаем", "делаете", "делают", "сделать", "сделал", "сделала", "сделало", "сделали", "сделали", "сделаю", "сделаешь", "сделает", "сделаем", "сделаете", "сделают", "иметь", "имел", "имела", "имело", "имели", "имею", "имеешь", "имеет", "имеем", "имеете", "имеют", "следует", "следовало", "необходимо", "необходим", "необходима", "необходимы", "нужно", "нужен", "нужна", "обязан", "обязана", "обязано", "обязаны", "должен", "должна", "должно", "должны", "требуется", "требуются", "имеется", "имеются", "есть", "можно"], C2 = ["появиться", "появился", "появилась", "появилось", "появились", "появлюсь", "появишься", "появится", "появимся", "появитесь", "появимся", "появляться", "появлялся", "появлялась", "появлялось", "появлялись", "появляюсь", "появляешься", "появляется", "появляемся", "появляются", "появляетесь", "стал", "стала", "стало", "стану", "станешь", "станет", "станем", "станете", "станут", "становиться", "становился", "становилось", "становилась", "становились", "становлюсь", "становишься", "становится", "становимся", "становитесь", "становятся", "прийти", "пришел", "пришёл", "пришла", "пришло", "пришли", "приду", "придешь", "придёшь", "придет", "придёт", "придем", "придём", "придете", "придёте", "придут", "приходить", "приходил", "приходила", "приходило", "приходили", "прихожу", "приходишь", "приходит", "приходим", "приходите", "происходить", "происходил", "происходила", "происходило", "происходили", "происходит", "происходят", "держать", "держал", "держала", "держало", "держали", "держу", "держишь", "держит", "держим", "держите", "держут", "содержать", "содержал", "содержала", "содержало", "содержали", "содержу", "содержишь", "содержит", "содержим", "содержите", "содержут", "остаться", "остался", "осталась", "осталось", "остались", "останусь", "останешься", "останется", "останутся", "останетесь", "останемся", "оставаться", "оставался", "оставалась", "оставалось", "оставались", "остаюсь", "остаешься", "остаёшься", "остается", "остаётся", "остаемся", "остаёмся", "остаетесь", "остаётесь", "остаются", "изменяться", "изменялся", "изменялась", "изменялось", "изменялись", "изменюсь", "изменишься", "изменится", "изменимся", "изменитесь", "изменятся", "успеть", "успел", "успела", "успело", "успели", "успею", "успеешь", "успеет", "успеем", "успеете", "успеют", "заниматься", "занимался", "занималась", "занимаюсь", "занимаешься", "занимается", "занимаемся", "занимаетесь", "занимаемся", "заняться", "занялся", "занялась", "занялись", "займусь", "займешься", "займется", "займемся", "займетесь", "займутся", "займёшься", "займётся", "займёмся", "займётесь"], L2 = ["сказать", "сказал", "сказала", "сказали", "говорить", "говорил", "говорила", "говорили", "говорит", "говорю", "говорим", "говоришь", "говорят", "говорите", "объявить", "объявил", "объявила", "объявили", "заявить", "заявил", "заявила", "заявили", "спросить", "спросил", "спросила", "спросили", "указать", "указал", "указала", "указали", "объяснить", "объяснил", "объяснила", "объяснили", "подумать", "подумал", "подумала", "подумали", "думать", "думал", "думала", "думали", "думаю", "думает", "думаешь", "думаем", "думаете", "думают", "рассказывать", "рассказывал", "рассказывала", "рассказывали", "рассказывают", "рассказывает", "рассказать", "рассказал", "рассказала", "рассказали", "обсудить", "обсудил", "обсудила", "обсудили", "предложить", "предложил", "предложила", "предложили", "понимать", "понимал", "понимала", "понимали", "понимаю", "понимаешь", "понимает", "понимаем", "понимаете", "понимают", "добавить", "добавил", "добавила", "добавили", "добавлю", "добавишь", "добавит", "добавим", "добавите", "добавят"], I2 = ["казаться", "кажется", "казалось", "казалась", "казался", "казались", "кажутся", "давайте", "давай", "хотеть", "хочу", "хочешь", "хочет", "хотим", "хотите", "хотят", "хотел", "хотела", "хотело", "хотели", "показать", "показал", "показала", "показало", "показали", "покажу", "покажешь", "покажет", "покажем", "покажете", "покажут", "показывать", "показывал", "показывала", "показывало", "показывали", "показываю", "показываешь", "показывает", "показываем", "показываете", "показывают", "идти", "шел", "шёл", "шла", "шло", "шли", "иду", "идешь", "идёшь", "идет", "идёт", "идем", "идём", "идете", "идёте", "идут", "брать", "брал", "брала", "брало", "брали", "беру", "берешь", "берёшь", "берёт", "берем", "берём", "берёте", "берут", "взять", "взял", "взяла", "взяло", "взяли", "возьму", "возьмешь", "возьмет", "возьмем", "возьмете", "возьмут", "класть", "кладу", "кладешь", "кладет", "кладёшь", "кладёт", "кладем", "кладете", "кладём", "кладёте", "кладут", "положить", "положил", "положила", "положило", "положили", "положу", "положишь", "положит", "положим", "положите", "положат", "использовать", "использовал", "использовала", "использовало", "использовали", "использую", "используешь", "используем", "используете", "используют", "пробовать", "пробовал", "пробовала", "пробовало", "пробовали", "пробую", "пробуешь", "пробует", "пробуем", "пробуете", "пробуют", "попробовать", "попробовал", "попробовала", "попробовало", "попробовали", "попробую", "попробуешь", "попробует", "попробуем", "попробуете", "попробуют", "иметь", "имел", "имела", "имело", "имели", "имею", "имеешь", "имеет", "имеем", "имеете", "имеют", "означать", "означал", "означала", "означало", "означали", "означает", "означают", "добавлять", "добавлял", "добавляла", "добавляло", "добавляли", "добавляю", "добавляешь", "добавляет", "добавляем", "добавляете", "добавляют", "состоять", "состоял", "состояла", "состояло", "состояли", "состою", "состоишь", "состоит", "состоим", "состоите", "состоят", "убеждаться", "убедился", "убедилась", "убедилось", "убедишься", "убедится", "убедимся", "убедитесь", "убедятся", "убеждать", "убедил", "убедила", "убедили", "убедишь", "убедит", "убедим", "убедите", "убедят", "являться", "являлся", "являлась", "являлось", "являлись", "являюсь", "являешься", "является", "являемся", "являетесь", "являются"], W2 = ["один", "одна", "одно", "одни", "два", "две", "двое", "двух", "двоих", "двум", "двоим", "двумя", "двоими", "три", "трое", "трех", "трёх", "троих", "трем", "трём", "троим", "тремя", "четыре", "пять", "шесть", "семь", "восемь", "девять", "десять", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать", "двадцать", "тридцать", "сорок", "пятьдесят", "шестьдесят", "семьдесят", "восемьдесят", "девяносто", "сто", "сотни", "двести", "триста", "четыреста", "пятьсот", "шестьсот", "семьсот", "восемьсот", "девятьсот", "тысяча", "тысячи", "тысяче", "тысячей", "тысячам", "тысячами", "тысячах", "тыс", "миллион", "миллиона", "миллиону", "миллионом", "миллионе", "миллионы", "миллионов", "миллионам", "миллионами", "миллионах", "миллиард", "миллиарда", "миллиарду", "миллиардом", "миллиарде", "миллиарды", "миллиардов", "миллиардам", "миллиардами", "миллиардах"], F2 = ["первый", "первого", "первому", "первом", "первым", "первая", "первой", "первое", "первые", "первых", "первыми", "второй", "второго", "второму", "втором", "вторым", "вторая", "второй", "второе", "вторые", "вторых", "вторыми", "третий", "третьего", "третьему", "третьим", "третьем", "третья", "третьей", "третье", "третьи", "третьих", "третьими", "четвертый", "четвертого", "четвертому", "четвертым", "четвертом", "четвертая", "четвертой", "четвертое", "четвертые", "четвертых", "четвертыми", "пятый", "пятого", "пятому", "пятом", "пятым", "пятая", "пятое", "пятые", "пятых", "пятыми", "шестой", "шестого", "шестому", "шестым", "шестая", "шестое", "шестые", "шестых", "шестыми", "седьмой", "седьмого", "седьмому", "седьмым", "седьмая", "седьмое", "седьмые", "седьмых", "седьмыми", "восьмой", "восьмого", "восьмому", "восьмым", "восьмая", "восьмое", "восьмые", "восьмых", "восьмыми", "девятый", "девятого", "девятому", "девятым", "девятая", "девятое", "девятые", "девятых", "девятыми", "десятый", "десятого", "десятому", "десятым", "десятая", "десятое", "десятые", "десятых", "десятыми", "одиннадцатый", "одиннадцатого", "одиннадцатому", "одиннадцатым", "одиннадцатая", "одиннадцатое", "одиннадцатые", "одиннадцатых", "одиннадцатыми", "двенадцатый", "двенадцатого", "двенадцатому", "двенадцатым", "двенадцатая", "двенадцатое", "двенадцатые", "двенадцатых", "двенадцатыми", "тринадцатый", "тринадцатого", "тринадцатому", "тринадцатым", "тринадцатая", "тринадцатое", "тринадцатые", "тринадцатых", "тринадцатыми", "четырнадцатый", "четырнадцатого", "четырнадцатому", "четырнадцатым", "четырнадцатая", "четырнадцатое", "четырнадцатые", "четырнадцатых", "четырнадцатыми", "пятнадцатый", "пятнадцатого", "пятнадцатому", "пятнадцатым", "пятнадцатая", "пятнадцатое", "пятнадцатые", "пятнадцатых", "пятнадцатыми", "шестнадцатый", "шестнадцатого", "шестнадцатому", "шестнадцатым", "шестнадцатая", "шестнадцатое", "шестнадцатые", "шестнадцатых", "шестнадцатыми", "семнадцатый", "семнадцатого", "семнадцатому", "семнадцатым", "семнадцатая", "семнадцатое", "семнадцатые", "семнадцатых", "семнадцатыми", "восемнадцатый", "восемнадцатого", "восемнадцатому", "восемнадцатым", "восемнадцатая", "восемнадцатое", "восемнадцатые", "восемнадцатых", "восемнадцатыми", "девятнадцатый", "девятнадцатого", "девятнадцатому", "девятнадцатым", "девятнадцатая", "девятнадцатое", "девятнадцатые", "девятнадцатых", "девятнадцатыми", "двадцатый", "двадцатого", "двадцатому", "двадцатым", "двадцатая", "двадцатое", "двадцатые", "двадцатых", "двадцатыми", "тридцатый", "тридцатого", "тридцатому", "тридцатым", "тридцатая", "тридцатое", "тридцатые", "тридцатых", "тридцатыми", "сороковой", "сорокового", "сороковому", "сороковым", "сороковая", "сороковое", "сороковые", "сороковых", "сороковыми", "пятидесятый", "пятидесятого", "пятидесятому", "пятидесятым", "пятидесятая", "пятидесятое", "пятидесятые", "пятидесятых", "пятидесятыми", "шестидесятый", "шестидесятого", "шестидесятому", "шестидесятым", "шестидесятая", "шестидесятое", "шестидесятые", "шестидесятых", "шестидесятыми", "семидесятый", "семидесятого", "семидесятому", "семидесятым", "семидесятая", "семидесятое", "семидесятые", "семидесятых", "семидесятыми", "восьмидесятый", "восьмидесятого", "восьмидесятому", "восьмидесятым", "восьмидесятая", "восьмидесятое", "восьмидесятые", "восьмидесятых", "восьмидесятыми", "девяностый", "девяностого", "девяностому", "девяностым", "девяностая", "девяностое", "девяностые", "девяностых", "девяностыми", "сотый", "сотого", "сотому", "сотым", "сотая", "сотое", "сотые", "сотых", "сотыми", "двухсотый", "двухсотого", "двухсотому", "двухсотым", "двухсотая", "двухсотое", "двухсотые", "двухсотых", "двухсотыми", "трехсотый", "трехсотого", "трехсотому", "трехсотым", "трехсотая", "трехсотое", "трехсотые", "трехсотых", "трехсотыми", "трёхсотый", "трёхсотого", "трёхсотому", "трёхсотым", "трёхсотая", "трёхсотое", "трёхсотые", "трёхсотых", "трёхсотыми", "четырехсотый", "четырехсотого", "четырехсотому", "четырехсотым", "четырехсотая", "четырехсотое", "четырехсотые", "четырехсотых", "четырехсотыми", "четырёхсотый", "четырёхсотого", "четырёхсотому", "четырёхсотым", "четырёхсотая", "четырёхсотое", "четырёхсотые", "четырёхсотых", "четырёхсотыми", "пятисотый", "пятисотого", "пятисотому", "пятисотым", "пятисотая", "пятисотое", "пятисотые", "пятисотых", "пятисотыми", "шестисотый", "шестисотого", "шестисотому", "шестисотым", "шестисотая", "шестисотое", "шестисотые", "шестисотых", "шестисотыми", "семисотый", "семисотого", "семисотому", "семисотым", "семисотая", "семисотое", "семисотые", "семисотых", "семисотыми", "восьмисотый", "восьмисотого", "восьмисотому", "восьмисотым", "восьмисотая", "восьмисотое", "восьмисотые", "восьмисотых", "восьмисотыми", "девятисотый", "девятисотого", "девятисотому", "девятисотым", "девятисотая", "девятисотое", "девятисотые", "девятисотых", "девятисотыми", "тысячный", "тысячного", "тысячному", "тысячным", "тысячная", "тысячное", "тысячные", "тысячных", "тысячными", "миллионный", "миллионного", "миллионному", "миллионным", "миллионная", "миллионное", "миллионные", "миллионных", "миллионными", "миллиардный", "миллиардного", "миллиардному", "миллиардным", "миллиардная", "миллиардное", "миллиардные", "миллиардных", "миллиардными"], D2 = ["я", "меня", "мне", "мной", "мною", "ты", "тебя", "тебе", "тобой", "он", "его", "него", "ему", "нему", "нем", "нём", "им", "ним", "она", "ее", "нее", "неё", "её", "ей", "ею", "ней", "нею", "оно", "мы", "нам", "нас", "нами", "вы", "вас", "вам", "вами", "они", "них", "ими", "ними", "их"], B2 = ["тот", "тому", "том", "тем", "того", "та", "той", "ту", "то", "те", "тех", "теми", "этот", "этому", "этом", "этим", "этого", "эта", "этой", "эту", "это", "эти", "этих", "этими", "такой", "такого", "такому", "таким", "таком", "такая", "такую", "такое", "такие", "таких", "такими", "этакий", "этакого", "этакому", "этаким", "этаком", "этакая", "этакую", "этакое", "этакие", "этаких", "этакими"], N2 = [
  "мой",
  "моего",
  "моему",
  "моём",
  "моим",
  "моя",
  "моей",
  "мое",
  "моё",
  "мои",
  "моих",
  "моим",
  "твой",
  "твоего",
  "твоему",
  "твоём",
  "твоем",
  "твоим",
  "твоя",
  "твоей",
  "твою",
  "твое",
  "твоё",
  "твои",
  "твоих",
  "твоим",
  "свой",
  "своего",
  "своему",
  "своём",
  "своем",
  "своим",
  "своя",
  "своей",
  "свою",
  "свое",
  "своё",
  "свои",
  "своих",
  "своим",
  // Words "его", "ее", "их" already included in personalPronouns
  "наш",
  "нашего",
  "нашему",
  "нашем",
  "наша",
  "нашей",
  "наше",
  "наши",
  "нашим",
  "наших",
  "ваш",
  "вашего",
  "вашему",
  "вашем",
  "ваша",
  "вашей",
  "ваше",
  "ваши",
  "вашим",
  "ваших"
], U2 = [
  "некоторый",
  "некоторого",
  "некоторому",
  "некоторым",
  "некотором",
  "некоторая",
  "некоторую",
  "некоторое",
  "некоторые",
  "некоторых",
  "некоторыми",
  "многие",
  "многого",
  "многому",
  "многим",
  "многом",
  "многая",
  "многую",
  "многое",
  "многие",
  "многих",
  "многими",
  "много",
  "множество",
  "каждый",
  "каждого",
  "каждому",
  "каждым",
  "каждом",
  "каждая",
  "каждую",
  "каждое",
  "каждые",
  "каждых",
  "каждыми",
  "достаточно",
  "мало",
  "более",
  "больше",
  "большинство",
  "большинства",
  "большинству",
  "большинстве",
  "несколько",
  "нескольких",
  "менее",
  "меньше",
  "наиболее",
  "наименее",
  // For expressions like "что угодно", "кто угодно", "зачем угодно"
  "угодно",
  "же"
], H2 = ["себя", "себе"], V2 = ["ничто", "ничего", "ничему", "ничем", "ни о чем", "ни о чём", "никто", "никого", "никому", "никем", "ни о ком", "весь", "всего", "всему", "всем", "всём", "все", "всё", "всех", "всеми", "всякий", "всякого", "всякому", "всяким", "всяком", "всякая", "всякой", "всякую", "всякое", "всякие", "всяких", "всякими", "кто-то", "кого-то", "кому-то", "кем-то", "ком-то", "что-то", "чего-то", "чему-то", "чем-то", "чём-то", "кто-либо", "кого-либо", "кому-либо", "кем-либо", "ком-либо", "что-либо", "чего-либо", "чему-либо", "чем-либо", "чём-либо", "кое-кто", "кое-кого", "кое-кому", "кое-кем", "кое-ком", "кое-что", "кое-чего", "кое-чему", "кое-чем", "кое-чём", "любой", "любого", "любому", "любым", "любом", "любая", "любую", "любое", "любые", "любых", "любыми", "какой", "какого", "какому", "каким", "каком", "какая", "какую", "какое", "какие", "каких", "какими", "какой-то", "какого-то", "какому-то", "каким-то", "каком-то", "какая-то", "какую-то", "какое-то", "какие-то", "каких-то", "какими-то"], Baa = ["чей-то", "чьего-то", "чьему-то", "чьим-то", "чьем-то", "чьём-то", "чья-то", "чьей-то", "чье-то", "чьё-то", "чьи-то", "чьих-то", "чьими-то", "ничей", "чьего", "чьему", "чьим", "чьем", "чьём", "чья", "чьей", "чье", "чьё", "чьи", "чьих", "чьими", "ничейный", "ничейного", "ничейному", "ничейным", "ничейном", "ничейная", "ничейной", "ничейную", "ничейное", "ничейные", "ничейных", "ничейными"], K2 = ["который", "которого", "которому", "которым", "котором", "которая", "которую", "которое", "которые", "которых", "которыми", "чей", "чьего", "чьему", "чьим", "чьем", "чьём", "чья", "чьей", "чье", "чьё", "чьи", "чьих", "чьими"], G2 = ["кто", "кого", "кому", "кем", "что", "чего", "чему", "чем", "чём"], Y2 = ["где", "куда", "откуда", "как", "почему", "зачем", "сколько", "ли", "когда"], Z2 = ["везде", "нигде", "там", "здесь", "повсюду"], X2 = ["никогда", "всегда", "однажды", "единожды", "дважды", "трижды", "четырежды", "уже"], J2 = ["чрезвычайно", "очень", "крайне", "абсолютно", "полностью", "совершенно", "часто", "чаще", "довольно", "несколько", "значительно", "немного", "немножко", "частично", "просто"], Q2 = ["базовый", "базового", "базовому", "базовым", "базовом", "базовая", "базовой", "базовое", "базовые", "базовых", "базовым", "базовыми", "быстрый", "быстрого", "быстрому", "быстрым", "быстром", "быстрая", "быстрой", "быстрое", "быстрые", "быстрых", "быстрым", "быстрыми", "быстрейший", "быстрейшего", "быстрейшему", "быстрейшим", "быстрейшем", "быстрейшая", "быстрейшей", "быстрейшее", "быстрейшие", "быстрейших", "быстрейшим", "быстрейшими", "большой", "большого", "большому", "большим", "большом", "большая", "большое", "большие", "больших", "большим", "большими", "быстрее", "быстро", "важный", "важного", "важному", "важным", "важном", "важная", "важной", "важное", "важные", "важных", "важным", "важными", "важнее", "важно", "возможный", "возможного", "возможному", "возможным", "возможном", "возможная", "возможной", "возможное", "возможные", "возможных", "возможным", "возможными", "высокий", "высокого", "высокому", "высоким", "высоком", "высокая", "высокой", "высокое", "высокие", "высоких", "высоким", "высокими", "выше", "высоко", "главный", "главного", "главному", "главным", "главном", "главная", "главной", "главное", "главные", "главных", "главным", "главными", "далекий", "далекого", "далекому", "далеким", "далеком", "далекая", "далекой", "далекое", "далекие", "далеких", "далеким", "далекими", "далёкий", "далёкого", "далёкому", "далёким", "далёком", "далёкая", "далёкой", "далёкое", "далёкие", "далёких", "далёким", "далёкими", "длиннее", "длинный", "длинного", "длинному", "длинным", "длинном", "длинная", "длинной", "длинное", "длинные", "длинных", "длинным", "длинными", "доступный", "доступного", "доступному", "доступным", "доступном", "доступная", "доступной", "доступное", "доступные", "доступных", "доступным", "доступными", "жуткий", "жуткого", "жуткому", "жутким", "жутком", "жуткая", "жуткой", "жуткое", "жуткие", "жутких", "жутким", "жуткими", "законченный", "законченного", "законченному", "законченным", "законченном", "законченная", "законченной", "законченное", "законченные", "законченных", "законченным", "законченными", "занят", "занята", "заняты", "занятой", "занятого", "занятому", "занятым", "занятом", "занятая", "занятое", "занятые", "занятых", "занятым", "занятыми", "короткий", "короткого", "короткому", "коротким", "коротком", "короткая", "короткой", "короткое", "короткие", "коротких", "коротким", "короткими", "короче", "кошмарный", "кошмарного", "кошмарному", "кошмарным", "кошмарном", "кошмарная", "кошмарной", "кошмарное", "кошмарные", "кошмарных", "кошмарным", "кошмарными", "красивый", "красивого", "красивому", "красивым", "красивом", "красивая", "красивой", "красивое", "красивые", "красивых", "красивым", "красивыми", "лёгкий", "лёгкого", "лёгкому", "лёгким", "лёгком", "лёгкая", "лёгкой", "лёгкое", "лёгкие", "лёгких", "лёгким", "лёгкими", "легкий", "легкого", "легкому", "легким", "легком", "легкая", "легкой", "легкое", "легкие", "легких", "легким", "легкими", "легко", "легче", "лучше", "лучший", "лучшего", "лучшему", "лучшим", "лучшем", "лучшая", "лучшей", "лучшее", "лучшие", "лучших", "лучшим", "лучшими", "маленький", "маленького", "маленькому", "маленьким", "маленьком", "маленькая", "маленькой", "маленькое", "маленькие", "маленьких", "маленьким", "маленькими", "малюсенький", "малюсенького", "малюсенькому", "малюсеньким", "малюсеньком", "малюсенькая", "малюсенькой", "малюсенькое", "малюсенькие", "малюсеньких", "малюсеньким", "малюсенькими", "меньший", "меньшего", "меньшему", "меньшим", "меньшем", "меньшая", "меньшей", "меньшее", "меньшие", "меньших", "меньшим", "меньшими", "многочисленный", "многочисленного", "многочисленному", "многочисленным", "многочисленном", "многочисленная", "многочисленной", "многочисленное", "многочисленные", "многочисленных", "многочисленным", "многочисленными", "молодой", "молодого", "молодому", "молодым", "молодом", "молодая", "молодое", "называемый", "называемого", "называемому", "называемым", "называемом", "называемая", "называемой", "называемое", "называемые", "называемых", "называемым", "называемыми", "больший", "большего", "большему", "большим", "большем", "большая", "большей", "большее", "большие", "больших", "большим", "большими", "наибольший", "наибольшего", "наибольшему", "наибольшим", "наибольшем", "наибольшая", "наибольшей", "наибольшее", "наибольшие", "наибольших", "наибольшим", "наибольшими", "меньший", "меньшего", "меньшему", "меньшим", "меньшем", "меньшая", "меньшей", "меньшее", "меньшие", "меньших", "меньшим", "меньшими", "наименьший", "наименьшего", "наименьшему", "наименьшим", "наименьшем", "наименьшая", "наименьшей", "наименьшее", "наименьшие", "наименьших", "наименьшим", "наименьшими", "наихудший", "наихудшего", "наихудшему", "наихудшим", "наихудшем", "наихудшая", "наихудшей", "наихудшее", "наихудшие", "наихудших", "наихудшим", "наихудшими", "напрямую", "настоящий", "настоящего", "настоящему", "настоящим", "настоящем", "настоящая", "настоящей", "настоящее", "настоящие", "настоящих", "настоящим", "настоящими", "недавний", "недавнего", "недавнему", "недавним", "недавнем", "недавняя", "недавней", "недавнее", "недавние", "недавних", "недавним", "недавними", "необходимый", "необходимого", "необходимому", "необходимым", "необходимом", "необходимая", "необходимой", "необходимое", "необходимые", "необходимых", "необходимым", "необходимыми", "ниже", "низкий", "низкого", "низкому", "низким", "низком", "низкая", "низкой", "низкое", "низкие", "низких", "низким", "низкими", "новейший", "новейшего", "новейшему", "новейшим", "новейшем", "новейшая", "новейшей", "новейшее", "новейшие", "новейших", "новейшим", "новейшими", "новый", "нового", "новому", "новым", "новом", "новая", "новое", "новые", "новых", "новым", "новыми", "нормальный", "нормального", "нормальному", "нормальным", "нормальном", "нормальная", "нормальное", "нормальные", "нормальных", "нормальным", "нормальными", "обыкновенный", "обыкновенного", "обыкновенному", "обыкновенным", "обыкновенном", "обыкновенная", "обыкновенное", "обыкновенные", "обыкновенных", "обыкновенным", "обыкновенными", "обычный", "обычного", "обычному", "обычным", "обычном", "обычная", "обычное", "обычные", "обычных", "обычным", "обычными", "основной", "основного", "основному", "основным", "основном", "основная", "основное", "основные", "основных", "основным", "основными", "особенный", "особенного", "особенному", "особенным", "особенном", "особенная", "особенное", "особенные", "особенных", "особенным", "особенными", "отличный", "отличного", "отличному", "отличным", "отличном", "отличная", "отличное", "отличные", "отличных", "отличным", "отличными", "очевидный", "очевидного", "очевидному", "очевидным", "очевидном", "очевидная", "очевидное", "очевидные", "очевидных", "очевидным", "очевидными", "плохой", "плохого", "плохому", "плохим", "плохом", "плохая", "плохое", "плохие", "плохих", "плохим", "плохими", "последний", "последнего", "последнему", "последним", "последнем", "последняя", "последней", "последнее", "последние", "последних", "последним", "последними", "постоянно", "постоянный", "постоянного", "постоянному", "постоянным", "постоянном", "постоянная", "постоянное", "постоянные", "постоянных", "постоянным", "постоянными", "похожий", "похожего", "похожему", "похожим", "похожем", "похожая", "похожей", "похожее", "похожие", "похожих", "похожим", "похожими", "почти", "предыдущий", "предыдущего", "предыдущему", "предыдущим", "предыдущем", "предыдущая", "предыдущей", "предыдущее", "предыдущие", "предыдущих", "предыдущим", "предыдущими", "простейший", "простейшая", "простейшей", "простой", "простого", "простому", "простым", "простом", "простая", "простое", "простые", "простых", "простым", "простыми", "проще", "ранний", "раннего", "раннему", "ранним", "раннем", "ранняя", "ранней", "раннее", "ранние", "ранних", "ранним", "ранними", "разный", "разного", "разному", "разным", "разном", "разная", "разной", "разное", "разные", "разных", "разным", "разными", "самый", "самого", "самому", "самым", "самом", "самая", "самой", "самое", "самые", "самых", "самым", "самыми", "собственный", "собственного", "собственному", "собственным", "собственном", "собственная", "собственное", "собственные", "собственных", "собственным", "собственными", "специальный", "специального", "специальному", "специальным", "специальном", "специальная", "специальное", "специальные", "специальных", "специальным", "специальными", "специфичный", "специфичного", "специфичному", "специфичным", "специфичном", "специфичная", "специфичное", "специфичные", "специфичных", "специфичным", "специфичными", "средний", "среднего", "среднему", "средним", "среднем", "средняя", "средней", "среднее", "средние", "средних", "средним", "средними", "старейший", "старейшего", "старейшему", "старейшим", "старейшем", "старейшая", "старейшей", "старейшее", "старейшие", "старейших", "старейшим", "старейшими", "старый", "старого", "старому", "старым", "старом", "старая", "старой", "старое", "старые", "старых", "старым", "старыми", "текущий", "текущего", "текущему", "текущим", "текущем", "текущая", "текущей", "текущее", "текущие", "текущих", "текущим", "текущими", "тяжелее", "тяжёлый", "тяжёлого", "тяжёлому", "тяжёлым", "тяжёлом", "тяжёлая", "тяжёлое", "тяжёлые", "тяжёлых", "тяжёлым", "тяжёлыми", "тяжелый", "тяжелого", "тяжелому", "тяжелым", "тяжелом", "тяжелая", "тяжелое", "тяжелые", "тяжелых", "тяжелым", "тяжелыми", "хороший", "хорошего", "хорошему", "хорошим", "хорошем", "хорошая", "хорошей", "хорошее", "хорошие", "хороших", "хорошим", "хорошими", "хорошо", "худший", "худшего", "худшему", "худшим", "худшем", "худшая", "худшей", "худшее", "худшие", "худших", "худшим", "худшими", "хуже", "целый", "целого", "целому", "целым", "целом", "целая", "целой", "целое", "целые", "целых", "целым", "целыми", "именно", "обязательно", "действительно"], aA = ["а-ля", "без", "безо", "без ведома", "благодаря", "близ", "в", "во", "в адрес", "в аспекте", "в виде", "в глазах", "в глубь", "в деле", "в дополнение к", "в духе", "в завершение", "в зависимости от", "в заключение", "в знак", "в интересах", "в качестве", "в лице", "в меру", "в направлении", "в направлении к", "в направлении ко", "в нарушение", "в области", "в обмен на", "в обстановке", "в обход", "в ответ на", "в отдалении от", "в отличие от", "в отношении", "в память", "в плане", "в пользу", "в порядке", "в предвидении", "в предвкушении", "в преддверии", "в присутствии", "в продолжение", "в противность", "в противовес", "в противоположность", "в процессе", "в разрезе", "в районе", "в рамках", "в рассуждении", "в расчете на", "в результате", "в роли", "в ряду", "в свете", "в связи с", "в связи со", "в силу", "в случае", "в смысле", "в согласии с", "в сообществе с", "в соответствии с", "в соответствии со", "в сопоставлении с", "в сопровождении", "в составе", "в сравнении с", "в сравнении со", "в стороне от", "в сторону", "в сфере", "в счет", "в течение", "в угоду", "в унисон с", "в условиях", "в ущерб", "в форме", "в ходе", "в целях", "в честь", "в числе", "в число", "вблизи", "вблизи от", "вверху", "ввиду", "вглубь", "вдалеке от", "вдали", "вдали от", "вдобавок к", "вдобавок ко", "вдогон", "вдогонку", "вдоль", "вдоль по", "взамен", "включая", "вкось", "вкруг", "вместе с", "вместе со", "вместо", "вне", "вне зависимости от", "внизу", "внутри", "внутрь", "вовнутрь", "во время", "во главе", "во главе с", "во главе со", "во избежание", "во изменение", "во имя", "во исполнение", "во славу", "возле", "вокруг", "волею", "вопреки", "вперед", "впереди", "вплоть до", "впредь до", "вразрез", "времен", "вроде", "вслед", "вослед", "вслед за", "вследствие", "выше", "для", "до", "за", "за исключением", "за счет", "заботами", "из", "изо", "из числа", "из-за", "из-под", "из-подо", "изнутри", "именем", "имени", "исключая", "исходя из", "к", "ко", "к числу", "касаемо", "касательно", "кончая", "кроме", "кругом", "между", "меж", "промеж", "промежду", "на", "мимо", "минуя", "на", "на базе", "на благо", "на глазах у", "на грани", "на имя", "на манер", "на основании", "на основе", "на почве", "на правах", "на предмет", "на протяжении", "на пути", "на пути к", "на пути ко", "на путях", "на путях к", "на путях ко", "на радость", "на случай", "на смену", "на стороне", "на сторону", "на уровне", "на фоне", "наверху", "навстречу", "над", "надо", "назади", "накануне", "наперекор", "наперерез", "наперехват", "наподобие", "напротив", "наравне с", "наравне со", "наряду с", "наряду со", "насупротив", "насчет", "начиная", "начиная от", "начиная с", "начиная со", "не без", "не в пример", "не говоря о", "не говоря об", "не говоря обо", "не до", "не считая", "невдалеке от", "невзирая на", "недалеко", "недалеко от", "независимо", "независимо от", "неподалеку от", "несмотря на", "ниже", "о", "об", "обо", "около", "окрест", "от", "ото", "от имени", "от лица", "относительно", "памяти", "перед", "передо", "пред", "предо", "перед", "передо", "пред", "предо", "перед лицом", "плюс к", "плюс ко", "по", "по адресу", "по аналогии с", "по аналогии со", "по вине", "по истечении", "по линии", "по мере", "по направлению", "по направлению к", "по направлению ко", "по отношению к", "по отношению ко", "по поводу", "по праву", "по примеру", "по причине", "по прошествии", "по пути", "по случаю", "по сравнению с", "по сравнению со", "по стопам", "по части", "по-за", "по-над", "по-под", "поблизости", "поблизости от", "поверх", "погодя", "под", "подо", "под видом", "под знаком", "под предлогом", "под председательством", "под эгидой", "подле", "подобно", "позади", "позднее", "поздней", "позже", "помимо", "поодаль от", "поперед", "поперек", "порядка", "посереди", "посередине", "посередке", "посередь", "после", "посреди", "посредине", "посредством", "превыше", "прежде", "при", "при всей", "при всем", "при всех", "при помощи", "при посредстве", "при условии", "применительно к", "применительно ко", "про", "против", "противно", "путем", "ради", "раньше", "рядом с", "рядом со", "с", "со", "с ведома", "с помощью", "с учетом", "с целью", "сбоку", "сбоку от", "сверх", "сверху", "свыше", "сзади", "силами", "сквозь", "следом за", "смотря по", "снаружи", "снизу", "со стороны", "совместно с", "совместно со", "совокупно с", "согласно", "согласно с", "согласно со", "сообразно", "сообразно с", "сообразно со", "сообща с", "сообща со", "соответственно", "соответственно с", "соответственно со", "соразмерно", "соразмерно с", "соразмерно со", "спереди", "спустя", "сравнительно с", "сравнительно со", "среди", "средь", "сродни", "судя по", "супротив", "считая", "типа", "у", "ценой", "ценою", "через", "что до"], eA = ["и", "или", "и/или", "еще", "ещё", "а"], tA = ["если", "даже"], iA = ["ох", "вау", "тю-тю", "ох-ох-ох", "эх", "фуф", "ага", "угу", "упс", "ой", "бее", "ну", "вот"], nA = ["ст", "ч", "л", "кг", "полкило", "г", "гр", "мл", "дл", "пол-литра", "мг", "см", "м", "км"], Naa = ["секунд", "секунда", "минут", "минута", "час", "часа", "часов", "день", "дня", "дней", "неделя", "недели", "недель", "месяц", "месяца", "месяцев", "год", "года", "году", "годы", "лет", "гг", "сегодня", "завтра", "послезавтра", "вчера", "позавчера", "тыс до н э", "н э", "до н э", "тыс до н"], rA = ["вещь", "вещи", "вещью", "вещей", "вещам", "вещами", "вещах", "метод", "метода", "методом", "методу", "методе", "методы", "методам", "методами", "методах", "способ", "способа", "способом", "способу", "способе", "способы", "способам", "способами", "способах", "свойство", "свойства", "свойстве", "свойств", "свойствам", "свойствах", "свойствами", "случай", "случая", "случаем", "случаю", "случае", "случаи", "случаям", "случаями", "случаях", "дело", "дела", "делом", "делу", "деле", "делам", "делами", "делах", "сходство", "сходства", "сходстве", "сходств", "сходствам", "сходствах", "сходствами", "часть", "части", "частью", "частей", "частям", "частями", "частях", "штука", "штуки", "штуке", "штуку", "штук", "штукам", "штуками", "штуках", "раз", "раза", "разом", "разу", "разе", "разы", "разам", "разами", "разах", "вид", "вида", "видом", "виду", "виде", "виды", "видам", "видами", "видах", "процент", "процента", "процентом", "проценту", "проценте", "проценты", "процентам", "процентами", "процентах", "аспект", "аспекта", "аспектом", "аспекту", "аспекте", "аспекты", "аспектам", "аспектами", "аспектах", "пункт", "пункта", "пунктом", "пункту", "пункте", "пункты", "пунктам", "пунктами", "пунктах", "идея", "идеи", "идее", "идеей", "идеям", "идеями", "идеях", "тема", "темы", "теме", "тему", "темой", "темам", "темами", "темах", "человек", "человека", "человеком", "человеку", "человеке", "деталь", "детали", "деталью", "деталей", "деталям", "деталями", "деталях", "подробность", "подробности", "подробностью", "подробностей", "подробностям", "подробностями", "подробностях", "фактор", "фактора", "фактором", "фактору", "факторе", "факторы", "факторам", "факторами", "факторах", "разница", "разницы", "разнице", "разницу", "разницей", "различие", "различия", "различию", "различий", "различиям", "различиями", "различиях", "отличие", "отличия", "отличию", "отличий", "отличиям", "отличиями", "отличиях", "ситуация", "ситуации", "ситуацией", "ситуаций", "ситуациям", "ситуациями", "ситуациях", "сфера", "сферы", "сфере", "сферу", "сферой", "сферам", "сферами", "сферах"], sA = ["нет", "да", "конечно", "отлично", "верх", "низ", "ок", "окей", "аминь", "и т д", "и т. д.", "и так далее", "и тому подобное", "прости", "простите", "пожалуйста", "тут", "так", "не", "вдруг", "теперь", "точно", "бы", "сам", "сама", "само", "сами", "иногда", "сейчас", "тоже", "также", "пока", "ведь", "потом", "поэтому", "явно", "ни", "не", "будто", "напрочь", "причем", "причём", "зато", "вперед", "вперёд", "назад", "сразу", "пусть", "пускай"], Uaa = ["г-н", "г-жа", "тов", "гр-н", "гр-а", "гр", "проф"], Haa = ["мл"];
var ed = {}, ru = {};
Object.defineProperty(ru, "__esModule", {
  value: !0
});
ru.default = function() {
  return {
    singleWords: oA,
    multipleWords: dA,
    allWords: oA.concat(dA)
  };
};
const oA = ["aby", "abym", "abyśmy", "abyś", "abyście", "acz", "aczkolwiek", "albowiem", "ale", "aliści", "bo", "bowiem", "bynajmniej", "choć", "chociaż", "chociażby", "czyli", "dlatego", "dodatkowo", "dopóki", "dotychczas", "faktycznie", "gdy", "gdyż", "jakkolwiek", "iż", "jednak", "jednakże", "jeśli", "kiedy", "lecz", "mianowicie", "mimo", "np", "najpierw", "następnie", "natomiast", "ni", "niemniej", "niż", "notabene", "oczywiście", "ogółem", "ostatecznie", "owszem", "podobnie", "podsumowując", "pokrótce", "pomimo", "ponadto", "ponieważ", "poprzednio", "potem", "później", "przecież", "przeto", "przynajmniej", "raczej", "również", "rzeczywiście", "skoro", "także", "też", "toteż", "tudzież", "tymczasem", "wedle", "według", "więc", "właściwie", "wobec", "wpierw", "wprawdzie", "wreszcie", "wskutek", "wstępnie", "wszakże", "wszelako", "zamiast", "zanim", "zarówno", "zaś", "zatem", "zresztą", "zwłaszcza", "żeby", "żebym", "żebyś", "żebyście", "żebyśmy"], dA = ["a konkretnie", "a propos", "aby wrocić do rzeczy", "analogicznie do", "bacząc na to że", "bądź co bądź", "bez wątpienia", "bez względu", "biorąc pod uwagę", "choćby", "chodzi o to", "chyba że", "co do", "co gorsza", "co prawda", "co się tyczy", "co ważniejsze", "co więcej", "dzięki czemu", "dzięki któremu", "dzięki której", "dzięki którym", "dzięki temu", "faktem jest że", "inaczej mówiąc", "innymi słowy", "jak dotąd", "jak już mówiłam", "jak już mówiłem", "jak już wspomniano", "jak widać", "jako przykład", "jednym słowem", "jeśli chodzi o", "jeżeli chodzi o", "konkretnie to", "krótko mówiąc", "łącznie z", "mając to na uwadzę", "mam na myśli", "mamy na myśli", "mówiąc w skrócie", "na celu", "na dłuższą metę", "na dodatek", "na koniec", "na końcu", "na przykład", "na skutek", "na wstęp", "na wypadek gdyby", "na zakończenie", "nade wszystko", "należy pamiętać", "nawiasem mówiąc", "nie mówiąc już", "nie mówiąc o tym", "nie pomijając", "nie schodząc z tematu", "nie wspominając już", "nie wspominając o", "nie wspominając to", "nie wspominając że", "nie zważając na", "o ile", "o tyle", "od czasu do czasu", "od momentu", "odnośnie do", "ogólnie mówiąc", "ogólnie rzecz biorąc", "oprócz tego", "oznacza to że", "po czwarte", "po drugie", "po piąte", "po pierwsze", "po to", "po trzecie", "pod warunkiem", "podczas gdy", "podczas kiedy", "podobnym sposobem", "ponad wszystko", "poza tym", "prawdę mówiąc", "prawdę powiedziawszy", "prędzej czy później", "przechodząc do", "przede wszystkim", "przez co", "przez tą", "przez tego", "przez to", "przy tym", "przypuściwszy że", "raz na jakiś czas", "rzecz jasna", "ściśle biorąc", "ściśle mówiąc", "skutkiem tego", "tak czy inaczej", "tak czy owak", "tak naprawdę", "takich jak", "takie jak", "to znaczy", "tym samym", "w celu", "w ciągu", "w dodatku", "w efekcie", "w innych słowach", "w istocie", "w każdym razie", "w końcu", "w konsekwencji", "w kwestii", "w międzyczasie", "w nadziei że", "w obawie że", "w odróżnieniu", "w podobny sposób", "w podsumowaniu", "w przeciwieństwie do", "w przeciwnym razie", "w przypadku", "w rezultacie", "w rozumieniu że", "w rzeczy samej", "w rzeczywistości", "w skrócie", "w szczególności", "w takim razie", "w ten sposób", "w tych okolicznościach", "w tym przypadku", "w wyniku", "w wyniku tego", "w związku z tym", "wbrew pozorom", "włącznie z", "wracając do rzeczy", "wracając do tematu", "wręcz przeciwnie", "z drugiej strony", "z drugiej zaś strony", "z jednej strony", "z mocy że", "z obawy że", "z pewnością", "z powodu", "z przyczyny", "z tą intencją", "z tego powodu", "z uwagi że", "zacznijmy od", "zakładając że", "ze względu na", "ze względu że", "zważywszy na to", "zważywszy że"];
Object.defineProperty(ed, "__esModule", {
  value: !0
});
ed.default = function() {
  return {
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(Og, AA, EA, Hg, Bg, vA),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(Ng, _A, wA, hA, xA, Cg, Lg, fA),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(lA, jA, Rg, cA, uA, pA, mA, gA, Mg, zA, Ig, Wg, Fg, yA, bA, kA, $A, Ug, Vg, SA, qA, PA, TA, RA, OA, Dg),
    // These word categories cannot directly precede a passive participle.
    cannotDirectlyPrecedePassiveParticiple: [].concat(Ng, Mg, Cg, Rg, Og, Ug, Hg, Vg, Fg, Ig, Wg),
    // These word categories cannot intervene between an auxiliary and a corresponding passive participle.
    cannotBeBetweenPassiveAuxiliaryAndParticiple: [].concat(Dg, Bg, Lg),
    // This export contains all of the above words.
    all: [].concat(lA, jA, Rg, cA, uA, pA, mA, gA, Mg, zA, Ig, Wg, Fg, yA, bA, Dg, kA, $A, Ug, Vg, SA, qA, PA, TA, RA, OA, Yaa, Ng, _A, wA, hA, xA, Cg, Lg, fA, Og, AA, EA, Hg, Bg, vA)
  };
};
var Vaa = ru, Kaa = Gaa(Vaa);
function Gaa(a) {
  return a && a.__esModule ? a : { default: a };
}
const lA = (0, Kaa.default)().singleWords, Rg = ["czterech", "czterem", "czterema", "czternaście", "czternastce", "czternastek", "czternastka", "czternastką", "czternastkach", "czternastkami", "czternastkę", "czternastki", "czternastko", "czternastkom", "czternastoma", "czternastu", "cztery", "czwórce", "czwórek", "czwórka", "czwórką", "czwórkach", "czwórkami", "czwórkę", "czwórki", "czwórko", "czwórkom", "czworo", "dwa", "dwadzieścia", "dwanaście", "dwie", "dwiema", "dwóch", "dwójce", "dwoje", "dwójek", "dwójka", "dwójką", "dwójkach", "dwójkami", "dwójki", "dwójko", "dwójkom", "dwóm", "dwoma", "dwudziestce", "dwudziestek", "dwudziestka", "dwudziestką", "dwudziestkach", "dwudziestkami", "dwudziestkę", "dwudziestki", "dwudziestkom", "dwudziestoma", "dwudziestu", "dwunastce", "dwunastek", "dwunastka", "dwunastką", "dwunastkach", "dwunastkami", "dwunastkę", "dwunastki", "dwunastko", "dwunastkom", "dwunastoma", "dwunastu", "dziesiątce", "dziesiątek", "dziesiątka", "dziesiątką", "dziesiątkach", "dziesiątkami", "dziesiątkę", "dziesiątki", "dziesiątko", "dziesiątkom", "dziesięć", "dziesięcioma", "dziesięciu", "dziewiątce", "dziewiątek", "dziewiątka", "dziewiątką", "dziewiątkach", "dziewiątkami", "dziewiątkę", "dziewiątki", "dziewiątko", "dziewiątkom", "dziewięć", "dziewięcioma", "dziewięciorga", "dziewięciorgiem", "dziewięciorgu", "dziewięcioro", "dziewięciu", "dziewiętnaście", "dziewiętnastce", "dziewiętnastek", "dziewiętnastka", "dziewiętnastką", "dziewiętnastkach", "dziewiętnastkami", "dziewiętnastkę", "dziewiętnastki", "dziewiętnastkom", "dziewiętnastoma", "dziewiętnastu", "jeden", "jedenaście", "jedenastce", "jedenastek", "jedenastka", "jedenastką", "jedenastkach", "jedenastkami", "jedenastkę", "jedenastki", "jedenastko", "jedenastkom", "jedenastoma", "jedenastu", "jedna", "jedną", "jednego", "jednej", "jednemu", "jedno", "jednym", "jedynce", "jedynek", "jedynka", "jedynką", "jedynkach", "jedynkami", "jedynkę", "jedynki", "jedynko", "jedynkom", "miliard", "miliarda", "miliardach", "miliardami", "miliardem", "miliardom", "miliardów", "miliardowi", "miliardy", "miliardzie", "milion", "miliona", "milionach", "milionami", "milionem", "milionie", "milionom", "milionów", "milionowi", "miliony", "ósemce", "ósemek", "ósemka", "ósemką", "ósemkach", "ósemkami", "ósemkę", "ósemki", "ósemko", "ósemkom", "osiem", "osiemnaście", "osiemnastce", "osiemnastek", "osiemnastka", "osiemnastką", "osiemnastkach", "osiemnastkam", "osiemnastkę", "osiemnastki", "osiemnastko", "osiemnastkom", "osiemnastoma", "osiemnastu", "ośmioma", "ośmiorga", "ośmiorgiem", "ośmiorgu", "ośmioro", "ośmiu", "piątce", "piątek", "piątka", "piątką", "piątkach", "piątkami", "piątkę", "piątki", "piątko", "piątkom", "pięć", "pięcioma", "pięciorga", "pięciorgiem", "pięciorgu", "pięcioro", "pięciu", "piętnaście", "piętnastce", "piętnastek", "piętnastka", "piętnastką", "piętnastkach", "piętnastkami", "piętnastkę", "piętnastki", "piętnastko", "piętnastkom", "piętnastoma", "piętnastu", "raz", "setce", "setek", "setka", "setkach", "setkami", "setkę", "setki", "setkom", "siedem", "siedemnaście", "siedemnastce", "siedemnastek", "siedemnastka", "siedemnastką", "siedemnastkach", "siedemnastkami", "siedemnastkę", "siedemnastki", "siedemnastko", "siedemnastkom", "siedemnastoma", "siedemnastu", "siedmioma", "siedmiorga", "siedmiorgiem", "siedmiorgu", "siedmioro", "siedmiu", "siódemce", "siódemek", "siódemka", "siódemką", "siódemkach", "siódemkami", "siódemkę", "siódemki", "siódemko", "siódemkom", "sto", "stoma", "stu", "sześć", "sześcioma", "sześciorga", "sześciorgiem", "sześciorgu", "sześcioro", "sześciu", "szesnaście", "szesnastce", "szesnastek", "szesnastka", "szesnastką", "szesnastkach", "szesnastkami", "szesnastkę", "szesnastki", "szesnastko", "szesnastkom", "szesnastoma", "szesnastu", "szóstce", "szóstek", "szóstka", "szóstką", "szóstkach", "szóstkami", "szóstkę", "szóstki", "szóstko", "szóstkom", "trójce", "troje", "trójek", "trójka", "trójką", "trójkach", "trójkami", "trójki", "trójko", "trójkom", "trzech", "trzem", "trzema", "trzy", "trzynaście", "trzynastce", "trzynastek", "trzynastka", "trzynastką", "trzynastkach", "trzynastkami", "trzynastkę", "trzynastki", "trzynastko", "trzynastkom", "trzynastoma", "trzynastu", "tysiąc", "tysiąca", "tysiącach", "tysiącami", "tysiące", "tysiącem", "tysiącom", "tysiącowi", "tysiącu", "tysięcy"], Og = ["czternaści", "czternasta", "czternastą", "czternaste", "czternastego", "czternastej", "czternastemu", "czternasty", "czternastych", "czternastym", "czternastymi", "czwarci", "czwarta", "czwartą", "czwarte", "czwartego", "czwartej", "czwartemu", "czwarty", "czwartych", "czwartym", "czwartymi", "drudzy", "druga", "drugą", "drugi", "drugich", "drugie", "drugiego", "drugiej", "drugiemu", "drugim", "drugimi", "dwudzieści", "dwudziesta", "dwudziestą", "dwudzieste", "dwudziestego", "dwudziestej", "dwudziestemu", "dwudziesty", "dwudziestych", "dwudziestym", "dwudziestymi", "dwunaści", "dwunasta", "dwunastą", "dwunaste", "dwunastego", "dwunastej", "dwunastemu", "dwunasty", "dwunastych", "dwunastym", "dwunastymi", "dziesiąci", "dziesiąta", "dziesiątą", "dziesiąte", "dziesiątego", "dziesiątej", "dziesiątemu", "dziesiąty", "dziesiątych", "dziesiątym", "dziesiątymi", "dziewiąci", "dziewiąta", "dziewiątą", "dziewiąte", "dziewiątego", "dziewiątej", "dziewiątemu", "dziewiąty", "dziewiątych", "dziewiątym", "dziewiątymi", "dziewiętnaści", "dziewiętnasta", "dziewiętnastą", "dziewiętnaste", "dziewiętnastego", "dziewiętnastej", "dziewiętnastemu", "dziewiętnasty", "dziewiętnastych", "dziewiętnastym", "dziewiętnastymi", "jedenaści", "jedenasta", "jedenastą", "jedenaste", "jedenastego", "jedenastej", "jedenastemu", "jedenasty", "jedenastych", "jedenastym", "jedenastymi", "osiemnaści", "osiemnasta", "osiemnastą", "osiemnaste", "osiemnastego", "osiemnastej", "osiemnastemu", "osiemnasty", "osiemnastych", "osiemnastym", "osiemnastymi", "ósma", "ósmą", "ósme", "ósmego", "ósmej", "ósmemu", "óśmi", "ósmy", "ósmych", "ósmym", "ósmymi", "piąci", "piąta", "piątą", "piąte", "piątego", "piątej", "piątemu", "piąty", "piątych", "piątym", "piątymi", "pierwsi", "pierwsza", "pierwszą", "pierwsze", "pierwszego", "pierwszej", "pierwszemu", "pierwszy", "pierwszych", "pierwszym", "pierwszymi", "piętnaści", "piętnasta", "piętnastą", "piętnaste", "piętnastego", "piętnastej", "piętnastemu", "piętnasty", "piętnastych", "piętnastym", "piętnastymi", "siedemnaści", "siedemnasta", "siedemnastą", "siedemnaste", "siedemnastego", "siedemnastej", "siedemnastemu", "siedemnasty", "siedemnastych", "siedemnastym", "siedemnastymi", "siódma", "siódmą", "siódme", "siódmego", "siódmej", "siódmemu", "siódmi", "siódmy", "siódmych", "siódmym", "siódmymi", "szesnaści", "szesnasta", "szesnastą", "szesnaste", "szesnastego", "szesnastej", "szesnastemu", "szesnasty", "szesnastych", "szesnastymi", "szóści", "szósta", "szóstą", "szóste", "szóstego", "szóstej", "szóstemu", "szósty", "szóstych", "szóstym", "szóstymi", "trzeci", "trzecia", "trzecią", "trzecich", "trzecie", "trzeciego", "trzeciej", "trzeciemu", "trzecim", "trzecimi", "trzynaści", "trzynasta", "trzynastą", "trzynaste", "trzynastego", "trzynastej", "trzynastemu", "trzynasty", "trzynastych", "trzynastym", "trzynastymi"], cA = ["ja", "my", "on", "ona", "one", "oni", "ono", "ty", "wy"], uA = ["cię", "ciebie", "go", "ich", "ją", "je", "jego", "mnie", "nas", "nią", "nich", "nie", "niego", "was"], pA = ["jej", "niej"], mA = ["mi", "ci", "im", "jemu", "mu", "nam", "niemu", "nim", "tobie", "wam"], gA = ["mną", "nami", "nią", "nim", "nimi", "tobą", "wami"], Mg = ["myśmy", "wyście", "żeście", "żeśmy"], zA = ["doń", "nań", "zeń"], Cg = ["ich", "jego", "jej", "ma", "mą", "me", "mego", "mej", "memu", "moi", "moich", "moim", "moimi", "mój", "moja", "moją", "moje", "mojego", "mojej", "mojemu", "mych", "mym", "mymi", "nasi", "nasz", "nasza", "naszą", "nasze", "naszego", "naszej", "naszemu", "naszych", "naszym", "naszymi", "swa", "swą", "swe", "swego", "swej", "swemu", "swoi", "swoich", "swoim", "swoimi", "swój", "swoja", "swoją", "swoje", "swojego", "swojej", "swojemu", "swych", "swym", "swymi", "twa", "twą", "twe", "twego", "twej", "twemu", "twoi", "twoich", "twoim", "twoimi", "twój", "twoja", "twoją", "twoje", "twojego", "twojej", "twojemu", "twych", "twym", "twymi", "wasi", "wasz", "wasza", "waszą", "wasze", "waszego", "waszej", "waszemu", "waszych", "waszym", "waszymi"], Lg = ["się"], fA = ["siebie", "sobą"], Ig = ["czyi", "czyich", "czyim", "czyimi", "czyj", "czyja", "czyją", "czyje", "czyjego", "czyjej", "czyjemu", "kim", "kogo", "komu", "kto"], Wg = ["czy", "czyś", "czyśbyś", "dlaczego", "dokąd", "dokądże", "dokądżeś", "gdzie", "gdzież", "gdzieżeś", "ile", "ileż", "jak", "jakbyś", "jakże", "jakżebyś", "jakżeś", "kiedy", "którędy", "którędyż", "skąd", "skądże", "skądżeś"], Fg = ["co", "czego", "czemu", "czym", "jacy", "jaka", "jaką", "jaki", "jakich", "jakie", "jakiego", "jakiej", "jakiemu", "jakim", "jakimi", "która", "którą", "które", "którego", "której", "któremu", "który", "których", "którym", "którymi", "którzy"], yA = ["coś", "czegoś", "czemuś", "czyichkolwiek", "czyichś", "czyikolwiek", "czyimikolwiek", "czyimiś", "czyimkolwiek", "czyimkolwiem", "czyimś", "czyiś", "czyjakolwiek", "czyjąkolwiek", "czyjaś", "czyjąś", "czyjegokolwiek", "czyjegoś", "czyjejkolwiek", "czyjejś", "czyjekolwiek", "czyjemukolwiek", "czyjemuś", "czyjeś", "czyjkolwiek", "czymś", "dlaczegoś", "dokądkolwiek", "dokądś", "gdziekolwiek", "gdzieś", "ilekolwiek", "ileś", "jacykolwiek", "jacyś", "jakakolwiek", "jakąkolwiek", "jakaś", "jakąś", "jakichkolwiek", "jakichś", "jakiegokolwiek", "jakiegoś", "jakiejkolwiek", "jakiejś", "jakiekolwiek", "jakiemukolwiek", "jakiemuś", "jakieś", "jakikolwiek", "jakimikolwiek", "jakimkolwiek", "jakimś", "jakiś", "jakkolwiek", "jakoś", "każda", "każdą", "każde", "każdego", "każdej", "każdemu", "każdy", "każdym", "kiedykolwiek", "kiedyś", "kimkolwiek", "kimś", "kogokolwiek", "kogoś", "komukolwiek", "komuś", "ktokolwiek", "którakolwiek", "którąkolwiek", "któraś", "którąś", "którędykolwiek", "którędyś", "któregokolwiek", "któregoś", "którejkolwiek", "którejś", "którekolwiek", "któremukolwiek", "któremuś", "któreś", "którychkolwiek", "którychś", "którykolwiek", "którymikolwiek", "którymiś", "którymkolwiek", "którymś", "któryś", "którzykolwiek", "którzyś", "ktoś", "nawzajem", "nic", "niczego", "niczemu", "niczyi", "niczyich", "niczyim", "niczyimi", "niczyj", "niczyja", "niczyją", "niczyjego", "niczyjej", "niczyjemu", "niczym", "nikim", "nikogo", "nikogokolwiek", "nikomu", "nikt", "skądkolwiek", "skądś", "wszyscy", "wszyskiego", "wszystkich", "wszystkie", "wszystkiemu", "wszystkim", "wszystkimi", "wszystko", "żaden", "żadna", "żadną", "żadne", "żadnego", "żadnej", "żadnemu", "żadni", "żadnych", "żadnym", "żadnymi"], wA = ["ci", "dlatego", "ów", "owa", "ową", "owe", "owego", "owej", "owemu", "owi", "owo", "owych", "owym", "stąd", "stamtąd", "ta", "tacy", "tak", "taka", "taką", "taki", "takich", "takie", "takiego", "takiej", "takiemu", "takim", "takimi", "tam", "tamci", "tamta", "tamtą", "tamte", "tamtego", "tamtej", "tamtemu", "tamten", "tamto", "tamtych", "tamtym", "tamtymi", "tą", "te", "tę", "tędy", "tego", "tegoż", "tej", "temu", "ten", "to", "tu", "tutaj", "tych", "tyle", "tyloma", "tylu", "tym", "tymi", "wtedy"], hA = ["ciut", "część", "części", "częścią", "częściach", "częściami", "częściom", "dość", "dosyć", "dużo", "kilka", "kilkadziesiąt", "kilkanaście", "kilkaset", "kilknasty", "kilkoma", "kilku", "kilkudziesiąte", "kilkudziesiątego", "kilkudziesiątej", "kilkudziesiąty", "kilkudziesiątych", "kilkudziesiątym", "kilkudziesiątymi", "kilkudziesięcioma", "kilkudziesięciu", "kilkunasta", "kilkunastą", "kilkunaste", "kilkunastego", "kilkunastej", "kilkunastemu", "kilkunastoma", "kilkunastu", "kilkunastym", "kilkuset", "kilkustoma", "kiludziesiąta", "mało", "malutko", "mniej", "mnóstwa", "mnóstwem", "mnóstwie", "mnóstwo", "mnóstwu", "multum", "nadto", "najmniej", "najwięcej", "nieco", "niedużo", "niejednokroć", "niektóre", "niektórzy", "niektórych", "niektórym", "niektórymi", "niemało", "niewiele", "niewieloma", "niewielu", "oba", "obaj", "obie", "oboje", "obojga", "obojgiem", "obojgu", "obóm", "oboma", "obu", "obydwa", "obydwaj", "obydwie", "obydwiema", "obydwóch", "obydwoje", "obydwojgiem", "obydwojgu", "obydwóm", "obydwoma", "obydwu", "odrobiną", "odrobince", "odrobinę", "odrobinie", "odrobinką", "odrobinkę", "odrobinki", "odrobiny", "parę", "parędziesiąt", "parędziesięcioma", "parędziesięciu", "paręnaście", "paręnastoma", "paręnastu", "parokroć", "paroma", "paru", "parze", "pełno", "pół", "półczwarta", "połowa", "połową", "połowie", "połowy", "półtora", "półtorej", "sporo", "trochę", "trochu", "troszeczkę", "troszkę", "wcale", "więcej", "większość", "większości", "większością", "większościach", "większościami", "większościom", "wiele", "wielokrotnie", "wieloma", "wielu"], bA = ["czasem", "często", "nigdy", "rzadko", "zawsze"], Dg = ["chcą", "chcąc", "chcąca", "chcące", "chcący", "chce", "chcę", "chcecie", "chcemy", "chcesz", "chciał", "chciała", "chciałaby", "chciałabym", "chciałabyś", "chciałam", "chciałaś", "chciałby", "chciałbym", "chciałbyś", "chciałem", "chciałeś", "chciały", "chciałyby", "chciałybyście", "chciałybyśmy", "chciałyście", "chciałyśmy", "chcieli", "chcieliby", "chcielibyście", "chcieliście", "chcieliśmy", "chcono", "ma", "macie", "mają", "mając", "mam", "mamy", "masz", "miał", "miała", "miałaby", "miałabym", "miałabyś", "miałam", "miałaś", "miałby", "miałbym", "miałbyś", "miałem", "miałeś", "miało", "miałoby", "miały", "miałyby", "miałybyście", "miałybyśmy", "miałyście", "miałyśmy", "miano", "miej", "miejąca", "miejące", "miejący", "miejcie", "miejmy", "mieli", "mieliby", "mielibyście", "mielibyśmy", "mieliście", "mieliśmy", "mogą", "mogąc", "mogąca", "mogące", "mogący", "mogę", "mógł", "mogła", "mogłaby", "mogłabym", "mogłabyś", "mogłam", "mogłaś", "mógłby", "mógłbym", "mógłbyś", "mogłem", "mogłeś", "mogli", "mogliby", "moglibyście", "moglibyśmy", "mogliście", "mogliśmy", "mogły", "mogłyby", "mogłybyście", "mogłybyśmy", "mogłyście", "mogłyśmy", "może", "możecie", "możemy", "możesz", "można", "możnaby", "musi", "musiał", "musiała", "musiałaby", "musiałabym", "musiałabyś", "musiałam", "musiałaś", "musiałby", "musiałbym", "musiałbyś", "musiałem", "musiałeś", "musiało", "musiałoby", "musiały", "musiałyby", "musiałybyście", "musiałybyśmy", "musiałyście", "musiałyśmy", "musiano", "musicie", "musieli", "musieliby", "musielibyście", "musielibyśmy", "musieliście", "musieliśmy", "musimy", "musisz", "muszą", "musząc", "musząca", "muszące", "muszący", "muszę", "należy", "niech", "potrafi", "potrafią", "potrafiąc", "potrafiąca", "potrafiące", "potrafiący", "potraficie", "potrafię", "potrafiłaby", "potrafiłabym", "potrafiłabyś", "potrafiłam", "potrafiłaś", "potrafiłbym", "potrafiłbyś", "potrafiłem", "potrafiłeś", "potrafili", "potrafiliby", "potrafilibyście", "potrafilibyśmy", "potrafiliście", "potrafiliśmy", "potrafiło", "potrafiłoby", "potrafiłyby", "potrafiłybyście", "potrafiłybyśmy", "potrafiłyście", "potrafiłyśmy", "potrafimy", "potrafiono", "potrafisz", "powinien", "powinienem", "powinieneś", "powinna", "powinnam", "powinnaś", "powinne", "powinni", "powinniście", "powinniśmy", "powinnyście", "powinnyśmy", "pozostaje", "stają", "stając", "stająca", "stające", "stający", "staje", "staję", "stajecie", "stajemy", "stajesz", "stał", "stała", "stałaby", "stałabym", "stałabyś", "stałam", "stałaś", "stałby", "stałbym", "stałbyś", "stałem", "stałeś", "stali", "staliby", "stalibyście", "stalibyśmy", "staliście", "staliśmy", "stało", "stały", "stałyby", "stałybyście", "stałybyśmy", "stałyście", "stałyśmy", "stanie", "stano", "stawać", "stawając", "stawająca", "stawające", "stawający", "stawał", "stawała", "stawałaby", "stawałabym", "stawałabyś", "stawałabyście", "stawałam", "stawałaś", "stawałby", "stawałbym", "stawałbyś", "stawałem", "stawałeś", "stawali", "stawaliby", "stawalibyście", "stawalibyśmy", "stawaliście", "stawaliśmy", "stawały", "stawałyby", "stawałybyśmy", "stawałyście", "stawałyśmy", "stawano", "stawawszy", "stawszy", "trzeba", "warto", "wystarczy"], Yaa = ["bądź", "bądźcie", "bądźmy", "będą", "będąc", "będę", "będzie", "będziecie", "będziemy", "będziesz", "by", "był", "była", "byłaby", "byłabym", "byłabyś", "byłam", "byłaś", "byłby", "byłbym", "byłbyś", "byłem", "byłeś", "byli", "byliby", "bylibyście", "bylibyśmy", "byliście", "byliśmy", "było", "byłoby", "były", "byłyby", "byłybyście", "byłybyśmy", "byłyście", "byłyśmy", "bym", "byś", "byście", "byśmy", "byto", "bywało", "jest", "jestem", "jesteś", "jesteście", "jesteśmy", "są", "zostają", "zostając", "zostająca", "zostające", "zostający", "zostaje", "zostaję", "zostajecie", "zostajemy", "zostajesz", "został", "została", "zostałaby", "zostałabym", "zostałabyś", "zostałam", "zostałaś", "zostałby", "zostałbym", "zostałbyś", "zostałem", "zostałeś", "zostali", "zostaliby", "zostalibyście", "zostalibyśmy", "zostaliście", "zostaliśmy", "zostało", "zostaloby", "zostały", "zostałyby", "zostałybyście", "zostałybyśmy", "zostałyście", "zostałyśmy", "zostań", "zostaną", "zostańcie", "zostanę", "zostanie", "zostaniecie", "zostaniemy", "zostaniesz", "zostańmy", "zostawało", "zostawano", "zostawszy"], vA = ["być", "zostać"], Bg = ["chcieć", "mieć", "móc", "musieć", "potrafić", "stać"], Ng = ["bez", "beze", "blisko", "daleko", "dla", "do", "dole", "dookoła", "górze", "jako", "koło", "ku", "między", "mimo", "na", "nad", "nade", "naokoło", "naprzeciwko", "niedaleko", "nieopodal", "niż", "o", "obok", "od", "ode", "około", "oprócz", "po", "pod", "podczas", "pode", "pomiędzy", "ponad", "poniżej", "poprzek", "poprzez", "pośród", "powyżej", "poza", "przeciw", "przeciwko", "przed", "przede", "przez", "przeze", "przy", "spodem", "spośród", "spoza", "u", "w", "wbrew", "we", "wedle", "wewnątrz", "wpół", "wraz", "wśród", "wzdłuż", "z", "za", "ze", "zza"], kA = ["bliska", "daleka", "przodu", "tyłu"], _A = ["albo", "ani", "bądź", "i", "lub", "oraz", "tylko"], $A = ["aż", "by", "czy", "gdyby", "jak", "jeśli", "jeżeli", "że"], jA = ["ano", "ciągu", "coraz", "dzięki", "chyba", "jakby", "jednocześnie", "jeszcze", "już", "nadal", "nagle", "znowu", "prawdopodobnie", "niestety", "dziś", "dzisiaj", "oczywiście", "względem", "m.in.", "właśnie", "zaraz"], Ug = ["bierz", "bierzcie", "bierzecie", "bierzemy", "bierzesz", "bierzmy", "biorą", "biorąc", "biorąca", "biorące", "biorący", "biorę", "brał", "brała", "brałaby", "brałabym", "brałabyś", "brałam", "brałaś", "brałby", "brałbym", "brałbyś", "brałem", "brałeś", "brali", "braliby", "bralibyście", "bralibyśmy", "braliście", "braliśmy", "brało", "brałoby", "brały", "brałyby", "brałybyście", "brałybyśmy", "brałyście", "brałyśmy", "brany", "da", "dacie", "dadzą", "daj", "dają", "dając", "dająca", "dające", "dający", "dajcie", "daje", "daję", "dajecie", "dajemy", "dajesz", "dajmy", "dał", "dała", "dałaby", "dałabym", "dałabyś", "dałam", "dałaś", "dałby", "dałbym", "dałbyś", "dałem", "dałeś", "dali", "daliby", "dalibyście", "dalibyśmy", "daliście", "daliśmy", "dało", "dałoby", "dały", "dałyby", "dałybyście", "dałybyśmy", "dałyście", "dałyśmy", "dam", "damy", "dana", "dano", "dany", "dasz", "dawaj", "dawajcie", "dawajmy", "dawał", "dawała", "dawałaby", "dawałabym", "dawałabyś", "dawałam", "dawałaś", "dawałby", "dawałbym", "dawałbyś", "dawałem", "dawałeś", "dawali", "dawaliby", "dawalibyście", "dawalibyśmy", "dawaliście", "dawaliśmy", "dawało", "dawały", "dawałyby", "dawałybyście", "dawałybyśmy", "dawałyście", "dawałyśmy", "dawana", "dawane", "dawano", "dawany", "idą", "idąc", "idąca", "idące", "idący", "idę", "idź", "idźcie", "idzie", "idziecie", "idziemy", "idziesz", "idźmy", "rób", "róbcie", "robi", "robią", "robiąc", "robiąca", "robiące", "robiący", "robicie", "robię", "robił", "robiła", "robiłaby", "robiłabym", "robiłabyś", "robiłam", "robiłaś", "robiłby", "robiłbym", "robiłbyś", "robiłem", "robiłeś", "robili", "robilibiście", "robiliby", "robilibyśmy", "robiliście", "robiliśmy", "robiło", "robiły", "robiłyby", "robiłybyście", "robiłybyśmy", "robiłyście", "robiłyśmy", "robimy", "robiono", "robiony", "robisz", "róbmy", "stanowi", "stanowią", "stanowiły", "stanowili", "stoi", "stoicie", "stoimy", "stoisz", "stój", "stoją", "stojąc", "stojąca", "stojące", "stojący", "stójcie", "stoję", "stójmy", "świadczy", "szedł", "szedłby", "szedłbym", "szedłbyś", "szedłem", "szedłeś", "szła", "szłaby", "szłabym", "szłabyś", "szłam", "szłaś", "szli", "szliby", "szlibyście", "szlibyśmy", "szliście", "szliśmy", "szło", "szłoby", "szły", "szłyby", "szłybyście", "szłybyśmy", "szłyście", "uprawia", "uprawiacie", "uprawiają", "uprawiając", "uprawiająca", "uprawiające", "uprawiający", "uprawiał", "uprawiała", "uprawiałaby", "uprawiałabym", "uprawiałabyś", "uprawiałam", "uprawiałaś", "uprawiałby", "uprawiałbym", "uprawiałbyś", "uprawiałem", "uprawiałeś", "uprawiali", "uprawialiby", "uprawialibyście", "uprawialibyśmy", "uprawialiście", "uprawialiśmy", "uprawiało", "uprawiałoby", "uprawiały", "uprawiałyby", "uprawiałybyście", "uprawiałybyśmy", "uprawiałyście", "uprawiałyśmy", "uprawiam", "uprawiamy", "uprawiana", "uprawiane", "uprawiano", "uprawiany", "uprawiasz", "weź", "weźcie", "wezmą", "wezmę", "weźmie", "weźmiecie", "weźmiemy", "weźmiesz", "weźmy", "wykonuj", "wykonują", "wykonując", "wykonująca", "wykonujące", "wykonujący", "wykonujcie", "wykonuje", "wykonuję", "wykonujecie", "wykonujemy", "wykonujesz", "wykonujmy", "wykonywał", "wykonywała", "wykonywałaby", "wykonywałabym", "wykonywałabyś", "wykonywałam", "wykonywałaś", "wykonywałby", "wykonywałbym", "wykonywałbyś", "wykonywałem", "wykonywałeś", "wykonywali", "wykonywaliby", "wykonywalibyście", "wykonywalibyśmy", "wykonywaliście", "wykonywaliśmy", "wykonywało", "wykonywałoby", "wykonywały", "wykonywałyby", "wykonywałybyście", "wykonywałybyśmy", "wykonywałyście", "wykonywałyśmy", "wykonywana", "wykonywane", "wykonywany", "wziął", "wziąłby", "wziąłbym", "wziąłbyś", "wziąłem", "wziąłeś", "wziąwszy", "wzięła", "wzięłaby", "wzięłabym", "wzięłabyś", "wzięłam", "wzięłaś", "wzięli", "wzięliby", "wzięlibyście", "wzięlibyśmy", "wzięliście", "wzięliśmy", "wzięło", "wzięłoby", "wzięły", "wzięłyby", "wzięłybyście", "wzięłybyśmy", "wzięłyście", "wzięłyśmy", "zrób", "zróbcie", "zrobi", "zrobią", "zrobiąc", "zrobiąca", "zrobiące", "zrobiący", "zrobicie", "zrobię", "zrobił", "zrobiła", "zrobiłaby", "zrobiłabym", "zrobiłabyś", "zrobiłam", "zrobiłaś", "zrobiłby", "zrobiłbym", "zrobiłbyś", "zrobiłem", "zrobiłeś", "zrobili", "zrobilibiście", "zrobiliby", "zrobilibyśmy", "zrobiliście", "zrobiliśmy", "zrobiło", "zrobiły", "zrobiłyby", "zrobiłybyście", "zrobiłybyśmy", "zrobiłyście", "zrobiłyśmy", "zrobimy", "zrobiono", "zrobiony", "zrobisz", "zróbmy", "powinno", "bywa", "wiedzieć", "znać", "wiedział", "wiedziała", "wiedziały", "wiedzieli", "znał", "znała", "znali", "znały", "powie", "wie", "zna", "zobaczy", "powiedzą", "powiedziano", "powiem", "wiedzą", "wiedzące", "wiedzący", "wiedziało", "wiedziano", "wiem", "znają", "znające", "znający", "znało", "znam", "znane", "znano", "zobaczą", "zobaczę", "zobaczone", "zobaczono", "powiecie", "powiedz", "powiedzcie", "powiedzenie", "powiedział", "powiedziała", "powiedziałaby", "powiedziałabym", "powiedziałabyś", "powiedziałam", "powiedziałaś", "powiedziałby", "powiedziałbym", "powiedziałbyś", "powiedziałem", "powiedziałeś", "powiedziało", "powiedziałoby", "powiedziały", "powiedziałyby", "powiedziałybyście", "powiedziałybyśmy", "powiedziałyście", "powiedziałyśmy", "powiedziawszy", "powiedzieć", "powiedzieli", "powiedzieliby", "powiedzielibyście", "powiedzielibyśmy", "powiedzieliście", "powiedzieliśmy", "powiedzmy", "powiemy", "powiesz", "wiecie", "wiedz", "wiedząc", "wiedząca", "wiedzcie", "wiedziałaby", "wiedziałabym", "wiedziałabyś", "wiedziałam", "wiedziałaś", "wiedziałby", "wiedziałbym", "wiedziałbyś", "wiedziałem", "wiedziałeś", "wiedziałoby", "wiedziałyby", "wiedziałybyście", "wiedziałybyśmy", "wiedziałyście", "wiedziałyśmy", "wiedzieliby", "wiedzielibyście", "wiedzielibyśmy", "wiedzieliście", "wiedzieliśmy", "wiedzmy", "wiemy", "wiesz", "znacie", "znaj", "znając", "znająca", "znajcie", "znajmy", "znałaby", "znałabym", "znałabyś", "znałam", "znałaś", "znałby", "znałbym", "znałbyś", "znałem", "znałeś", "znaliby", "znalibyście", "znalibyśmy", "znaliście", "znaliśmy", "znałoby", "znałyby", "znałybyście", "znałybyśmy", "znałyście", "znałyśmy", "znamy", "znana", "znani", "znanie", "znany", "znasz", "zobacz", "zobaczcie", "zobaczeni", "zobaczenie", "zobaczmy", "zobaczona", "zobaczony", "zobaczyć", "zobaczycie", "zobaczył", "zobaczyła", "zobaczyłaby", "zobaczyłabym", "zobaczyłabyś", "zobaczyłam", "zobaczyłaś", "zobaczyłby", "zobaczyłbym", "zobaczyłbyś", "zobaczyłem", "zobaczyłeś", "zobaczyli", "zobaczyliby", "zobaczylibyście", "zobaczylibyśmy", "zobaczyliście", "zobaczyliśmy", "zobaczyło", "zobaczyłoby", "zobaczyły", "zobaczyłyby", "zobaczyłybyście", "zobaczyłybyśmy", "zobaczyłyście", "zobaczyłyśmy", "zobaczymy", "zobaczysz", "zobaczywszy"], Hg = ["brać", "dać", "dawać", "iść", "robić", "stanowić", "uprawiać", "wykonywać", "wziąć", "zrobić"], Vg = ["informowali", "informowały", "informują", "informuje", "informuję", "mówi", "mówią", "mówię", "mówił", "mówiła", "mówili", "mówiły", "odpowiada", "odpowiadają", "odpowiadam", "odpowiedział", "odpowiedziała", "odpowiedziałam", "odpowiedziały", "odpowiedzieli", "odwiedziałam", "poinformowałam", "poinformowali", "poinformowały", "powiedział", "powiedziała", "powiedziałam", "powiedziały", "powiedzieli", "pyta", "pytać", "pytał", "pytała", "pytałam", "pytali", "pytały", "pytam", "sądzą", "sądzę", "sądzi", "sądzić", "sądziłam", "sądzili", "sądziły", "spytał", "spytała", "spytałam", "spytali", "spytały", "stwierdziały", "stwierdzieli", "stwierdził", "stwierdziła", "stwierdziłam", "twierdzą", "twierdzę", "twierdzi", "twierdziały", "twierdzić", "twierdzieli", "twierdził", "twierdziła", "twierdziłam", "uważa", "uważają", "uważał", "uważała", "uważali", "uważały", "uważam", "wyjaśnia", "wyjaśniać", "wyjaśniają", "wyjaśniam", "wyjaśnił", "wyjaśniła", "wyjaśnili", "wyjaśniły", "zapytał", "zapytała", "zapytałam", "zapytali", "zapytały", "zaznacza", "zaznaczają", "zaznaczam", "zaznaczył", "zaznaczyła", "zaznaczyłam", "zaznaczyli", "zaznaczyły"], xA = ["bardziej", "bardzo", "całkiem", "całkowicie", "doskonale", "dość", "dosyć", "kompletnie", "najbardziej", "naprawdę", "nawet", "nieco", "niezbyt", "niezmiernie", "niezwykle", "ogromnie", "strasznie", "świetnie", "wielce", "wyjątkowo", "zbyt", "znacznie", "zupełnie"], AA = ["cała", "całą", "całe", "całego", "całej", "całemu", "cali", "cały", "całych", "całym", "całymi", "ciekawa", "ciekawą", "ciekawe", "ciekawego", "ciekawej", "ciekawemu", "ciekawi", "ciekawy", "ciekawych", "ciekawym", "ciekawymi", "dłudzy", "długa", "długą", "długi", "długich", "długie", "długiego", "długiej", "długiemu", "długim", "długimi", "dłużsi", "dłuższa", "dłuższą", "dłuższe", "dłuższego", "dłuższej", "dłuższemu", "dłuższy", "dłuższych", "dłuższym", "dłuższymi", "dobra", "dobrą", "dobre", "dobrego", "dobrej", "dobremu", "dobry", "dobrych", "dobrym", "dobrymi", "dobrzy", "fajna", "fajną", "fajne", "fajnego", "fajnej", "fajnemu", "fajni", "fajny", "fajnych", "fajnym", "fajnymi", "główna", "główną", "główne", "głównego", "głównej", "głównemu", "główni", "główny", "głównych", "głównym", "głównymi", "inna", "inną", "inne", "innego", "innej", "innemu", "inni", "inny", "innych", "innym", "innymi", "krótcy", "krótka", "krótką", "krótki", "krótkich", "krótkie", "krótkiego", "krótkiej", "krótkiemu", "krótkim", "krótkimi", "krótsi", "krótsza", "krótszą", "krótsze", "krótszego", "krótszej", "krótszemu", "krótszych", "krótszym", "krótszymi", "łatwe", "łatwego", "łatwiejsze", "łatwym", "lepsi", "lepsza", "lepszą", "lepsze", "lepszego", "lepszej", "lepszemu", "lepszy", "lepszych", "lepszym", "lepszymi", "mała", "małą", "małe", "małego", "małej", "małemu", "mali", "mały", "małych", "małym", "małymi", "mniejsi", "mniejsza", "mniejszą", "mniejsze", "mniejszego", "mniejszej", "mniejszemu", "mniejszy", "mniejszych", "mniejszym", "mniejszymi", "najdłużsi", "najdłuższa", "najdłuższą", "najdłuższe", "najdłuższego", "najdłuższej", "najdłuższemu", "najdłuższy", "najdłuższych", "najdłuższym", "najdłuższymi", "najkrótsi", "najkrótsza", "najkrótszą", "najkrótsze", "najkrótszego", "najkrótszej", "najkrótszemu", "najkrótszych", "najkrótszym", "najkrótszymi", "najłatwiejsze", "najlepsi", "najlepsza", "najlepszą", "najlepsze", "najlepszego", "najlepszej", "najlepszemu", "najlepszych", "najlepszym", "najlepszymi", "najmniejsi", "najmniejsza", "najmniejszą", "najmniejsze", "najmniejszego", "najmniejszej", "najmniejszemu", "najmniejszy", "najmniejszych", "najmniejszym", "najmniejszymi", "najniżsi", "najniższa", "najniższą", "najniższe", "najniższego", "najniższej", "najniższemu", "najniższy", "najniższych", "najniższym", "najniższymi", "najtrudniejsze", "najwięksi", "największa", "największą", "największe", "największego", "największej", "największemu", "największych", "największym", "największymi", "najwyżsi", "najwyższa", "najwyższą", "najwyższe", "najwyższego", "najwyższej", "najwyższemu", "najwyższy", "najwyższych", "najwyższym", "najwyższymi", "następna", "następną", "następne", "następnego", "następnej", "następni", "następny", "następnych", "następnym", "następnymi", "niewłaściwa", "niewłaściwą", "niewłaściwe", "niewłaściwego", "niewłaściwej", "niewłaściwemu", "niewłaściwi", "niewłaściwy", "niewłaściwych", "niewłaściwym", "niewłaściwymi", "niscy", "niska", "niską", "niski", "niskich", "niskie", "niskiego", "niskiej", "niskiemu", "niskim", "niskimi", "niżsi", "niższa", "niższą", "niższe", "niższego", "niższej", "niższemu", "niższy", "niższych", "niższym", "niższymi", "ostatni", "ostatnia", "ostatnią", "ostatnich", "ostatnie", "ostatniego", "ostatniej", "ostatniemu", "ostatnim", "ostatnimi", "poprzedni", "poprzednia", "poprzednią", "poprzednich", "poprzednie", "poprzedniego", "poprzedniej", "poprzedniemu", "poprzednim", "poprzednimi", "sam", "sama", "samą", "same", "samego", "samej", "samemu", "sami", "samo", "samych", "samym", "samymi", "trudne", "trudnego", "trudniejsze", "trudnym", "więksi", "większa", "większą", "większe", "większego", "większej", "większemu", "większych", "większym", "większymi", "wielcy", "wielka", "wielką", "wielki", "wielkich", "wielkie", "wielkiego", "wielkiej", "wielkiemu", "wielkim", "wielkimi", "właściwa", "właściwą", "właściwe", "właściwego", "właściwej", "właściwemu", "właściwi", "właściwy", "właściwych", "właściwym", "właściwymi", "wysocy", "wysoka", "wysoką", "wysoki", "wysokich", "wysokie", "wysokiego", "wysokiej", "wysokiemu", "wysokim", "wysokimi", "wyżsi", "wyższa", "wyższą", "wyższe", "wyższego", "wyższej", "wyższemu", "wyższy", "wyższych", "wyższym", "wyższymi", "kolejne", "różne", "złe", "kolejnych", "różnych", "złych", "kolejnego", "kolejnej", "kolejny", "kolejnym", "różnego", "różnej", "różny", "różnym", "złego", "złej", "zły", "złym", "kolejna", "kolejną", "kolejnemu", "kolejni", "kolejnymi", "różna", "różną", "różnemu", "różni", "różnymi", "zła", "złą", "złemu", "źli", "złymi"], EA = ["blisko", "bliżej", "ciągle", "ciężko", "czasami", "czasem", "częściej", "często", "dalej", "daleko", "dawniej", "dawno", "dobrze", "dopiero", "fajnie", "fajniej", "gorzej", "inaczej", "ładnie", "łatwiej", "łatwo", "lepiej", "najbliżej", "najczęściej", "najdalej", "najdawniej", "najfajniej", "najgorzej", "najłatwiej", "najlepiej", "najniżej", "najpóźniej", "najprościej", "najszybciej", "najtrudniej", "najwcześniej", "najwyżej", "naprawdę", "niedaleko", "niedawno", "nisko", "niżej", "ostatnio", "pewno", "póżniej", "późno", "prawie", "prościej", "prosto", "prostu", "szybciej", "szybko", "trochę", "trudniej", "trudno", "wcześnie", "wcześniej", "wolno", "wszędzie", "wysoko", "wyżej", "zazwyczaj", "źle", "jedynie", "obecnie", "teraz", "szczególnie", "zwykle"], SA = ["dni", "dnia", "dniach", "dniami", "dnie", "dzień", "dzisiaj", "godzin", "godzina", "godzinach", "godzinami", "godzinę", "godziny", "jutro", "lata", "latach", "latami", "miesiąc", "miesiąca", "miesiącach", "miesiącami", "miesiące", "miesiącem", "miesiącu", "miesięcy", "minut", "minuta", "minutach", "minutę", "minuty", "pojutrze", "przedwczoraj", "rok", "rokiem", "roku", "sekund", "sekunda", "sekundach", "sekundę", "sekundy", "tydzień", "tygodni", "tygodnia", "tygodniach", "tygodniami", "tygodnie", "tygodniu", "wczoraj"], qA = ["chwila", "chwilą", "chwilach", "chwilami", "chwile", "chwilę", "chwili", "chwilom", "część", "części", "częścią", "częściach", "częściami", "częściom", "momencie", "moment", "ogóle", "osób", "osoba", "osobą", "osobach", "osobami", "osobę", "osobie", "osobom", "osoby", "powód", "powodach", "powodami", "powodem", "powodom", "powodów", "powodowi", "powodu", "powody", "powodzie", "przypadkiem", "przypadku", "raz", "razach", "razami", "razem", "razie", "razom", "razów", "razowi", "razu", "razy", "rodzaj", "rodzajach", "rodzajami", "rodzajem", "rodzajom", "rodzajów", "rodzajowi", "rodzaju", "rzecz", "rzeczą", "rzeczach", "rzeczami", "rzeczom", "rzeczy", "sposób", "sposobem", "sprawa", "sprawą", "sprawach", "sprawami", "sprawę", "sprawie", "sprawom", "sprawy", "temacie", "temat", "tematach", "tematami", "tematem", "tematom", "tematów", "tematowi", "tematu", "tematy"], PA = ["dr", "dyr", "mgr", "p", "pan", "pani", "panie", "panowie", "prof", "hab"], TA = ["a", "ach", "aha", "aj", "akurat", "ał", "aua", "auć", "ba", "brawo", "e", "ech", "ehe", "ehm", "ej", "ejże", "ekhm", "ekstra", "jej", "jejku", "łał", "och", "oh", "oho", "oj", "ojej", "ojejku", "phi", "precz", "super", "uwaga", "wow"], RA = ["°C", "°F", "ar", "ary", "arów", "arach", "c", "cl", "cm", "cm²", "cm³", "dag", "deka", "dl", "f", "ft", "g", "gram", "gramów", "gramy", "ha", "hektar", "hektary", "hektarów", "hektarach", "in", "kg", "kilo", "km", "km²", "cm³", "l", "litr", "litrów", "litry", "łyżeczka", "łyżeczkę", "łyżeczki", "łyżka", "łyżkę", "łyżki", "m", "m²", "m³", "mg", "ml", "mm", "mm²", "mm³", "szczypta", "szczyptę", "szczypty", "szklanka", "szklankę", "szklanki", "tuzin"], OA = ["nie", "no", "oto", "tak", "sobie", "ok", "okej", "itp", "itd", "tzw"];
var Xw = {};
const MA = ["alltså", "ändå", "annars", "ännu", "även", "avslutningsvis", "bl.a.", "d.v.s.", "då", "därav", "därefter", "däremot", "därför", "därmed", "därpå", "dessutom", "dock", "efteråt", "eftersom", "emellertid", "enligt", "exempelvis", "fastän", "följaktligen", "förrän", "först", "förutom", "huvudsakligen", "ifall", "inledningsvis", "innan", "jämförelsevis", "likadant", "likaså", "liksom", "medan", "men", "nämligen", "när", "oavsett", "också", "omvänt", "säkerligen", "således", "sålunda", "sammanfattningsvis", "sammantaget", "samt", "samtidigt", "särskilt", "såsom", "sist", "slutligen", "speciellt", "t.ex.", "tidigare", "tillika", "tills", "trots", "tvärtemot", "tvärtom", "tydligen", "varpå", "vidare", "uppenbarligen", "ytterligare"], CA = ["å andra sidan", "å ena sidan", "allt som allt", "anledningen är", "anledningen blir", "annorlunda än", "av den orsaken", "av detta skäl", "beroende på", "bland annat", "därtill kommer", "det beror på att", "det vill säga", "det visar", "detta beror på", "detta går ut på att", "detta innebär att", "detta leder till", "detta medför att", "effekten blir", "efter ett tag", "ej heller", "en effekt av detta", "en förklaring till detta", "ett exempel på detta", "ett liknande exempel", "exakt som", "följden blir", "för att avrunda", "för all del", "för att förklara", "för att inte säga", "för att inte tala om", "för att klargöra", "för att poängtera", "för att säga det på ett annat sätt", "för att sammanfatta", "för att understryka", "för att visa", "för det andra", "för det första", "för det tredje", "förr eller senare", "för närvarande", "framför allt", "fram till nu", "har att göra med", "härav följer", "i båda fallen", "i det fallet", "i det hela", "i det här fallet", "i det långa loppet", "i enlighet med", "i förhållande till", "i fråga om", "i jämförelse med", "i kontrast till", "i likhet med", "i ljuset av", "i motsats till", "i och med", "i relation till", "i samband med", "i sin tur", "i själva verket", "i slutändan", "i stället för", "i syfte att", "i synnerhet", "i verkligheten", "icke desto mindre", "ihop med", "inte desto mindre", "jämfört med", "kan sammanfattas", "kort sagt", "konsekvensen av detta", "lika viktigt är", "målet är att", "med andra ord", "med anledning av", "med det i åtanke", "med det i tankarna", "med ett ord", "med hänsyn till", "med härledning av", "mot bakgrund av", "mot den bakgrunden", "när allt kommer omkring", "när det gäller", "närmare bestämt", "nu när", "orsaken är", "på det sättet", "på grund av", "på liknande sätt", "på så sätt", "på samma sätt", "resultatet blir", "så länge som", "så småningom", "så snart som", "sist men inte minst", "slutsatsen blir", "som antytt", "som en följd av", "som en konsekvens av", "som ett exempel på", "som ett resultat", "som jag tidigare antytt", "som konklusion kan", "som man kan se", "som nämnt", "som tidigare nämnts", "summa summarum", "tack vare", "till att börja med", "till dess", "till exempel", "till en början", "till följd av", "till sist", "till skillnad från", "till slut", "till största delen", "tillsammans med", "tvärt om", "under de omständigheterna", "under omständigheterna", "under tiden", "vad mera är", "viktigt att inse", "vilket innebär"];
var NI = function() {
  return {
    singleWords: MA,
    multipleWords: CA,
    allWords: MA.concat(CA)
  };
};
Object.defineProperty(Xw, "__esModule", {
  value: !0
});
Xw.default = function() {
  return {
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(WA, sE, oE, QA, iE, eE, rE),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(LA, lE, uE, UA, cE, ZA, NA),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(Qaa, FA, DA, BA, HA, zE, IA, aE, JA, nE, tE, GA, YA, pE, VA, KA, yE, XA, fE, mE, gE, dE),
    // This export contains all of the above words.
    all: [].concat(LA, IA, WA, FA, DA, BA, NA, UA, HA, VA, KA, GA, YA, ZA, XA, JA, QA, aE, eE, tE, iE, nE, rE, sE, oE, dE, lE, cE, uE, pE, mE, gE, zE, fE, yE)
  };
};
var Zaa = NI, Xaa = Jaa(Zaa);
function Jaa(a) {
  return a && a.__esModule ? a : { default: a };
}
const Qaa = (0, Xaa.default)().singleWords, LA = ["en", "ett", "det", "den", "de"], IA = ["två", "tre", "fyra", "fem", "sex", "sju", "åtta", "nio", "tio", "tiotals", "elva", "tolv", "tretton", "fjorton", "femton", "sexton", "sjutton", "arton", "aderton", "nitton", "tjugo", "hundra", "hundratals", "tusen", "tusentals", "miljon", "miljoner", "miljontals", "miljard", "miljarder"], WA = ["första", "andra", "tredje", "fjärde", "femte", "sjätte", "sjunde", "åttonde", "nionde", "tionde", "elfte", "tolfte", "trettonde", "fjortonde", "femtonde", "sextonde", "sjuttonde", "artonde", "nittonde", "tjugonde"], FA = ["jag", "du", "han", "hon", "hen", "vi", "ni"], DA = ["mig", "dig", "honom", "henne", "oss", "er", "dem", "henom", "eder"], BA = ["sig", "sin", "sitt", "sina"], NA = ["min", "mitt", "mina", "din", "ditt", "dina", "hans", "hennes", "dess", "ens", "vår", "vårt", "våra", "er", "ert", "era", "ers", "deras", "hens"], UA = ["denne", "denna", "detta", "dessa", "här", "där", "varifrån", "därav", "hit", "dit", "vart", "hädan", "dädan", "vadan", "hän", "sen"], HA = ["som", "vilken", "vilket", "vilka", "vars", "då"], VA = ["vem", "vems", "vad"], KA = ["hur", "varför"], GA = ["någon", "något", "några", "nån", "nåt", "ingen", "inget", "inga", "annan", "annat", "andra", "någonstans", "ingenstans", "annastans", "överallt", "någonstädes", "ingenstädes", "annorstädes", "allestädes", "någorlunda", "ingalunda", "annorlunda", "någonting", "ingenting", "allting", "all", "allt", "alla", "somlig", "somligt", "somliga", "mången", "månget", "man", "en", "ens"], YA = ["varandra", "varsin", "varsitt", "envar", "varannan", "vartannat"], ZA = ["andra", "åtskilliga", "bådadera", "både", "få", "fårre", "fåtalig", "fåtaliga", "flera", "flesta", "föga", "ganska", "icke", "inte", "lite", "litet", "många", "mer", "mera", "mest", "mindre", "minst", "mycket", "nog", "ollika", "tillräckligt", "vardera", "varje", "viss", "visst", "vissa", "visse"], XA = ["bakåt", "bakifrån", "bortifrån", "däråt", "därav", "därhän", "däri", "därifrån", "därom", "därpå", "därtill", "däruti", "därvid", "ditåt", "dithän", "dittills", "efteråt", "förrut", "framåt", "hädenefter", "häråt", "härav", "härefter", "häremot", "häri", "härifrån", "härmed", "härom", "härpå", "härtill", "häruti", "härvid", "hitåt", "hittills", "ini", "inifrån", "intill", "inuti", "nedanför", "nedåt", "nedför", "nedtill", "uppåt", "uppför", "upptill", "varav", "varefter", "varemot", "varför", "varfrån", "vari", "varifrån", "varmed", "varom", "varpå", "varthän", "vartill", "varur", "varvid"], JA = ["behövande", "behöver", "behövt", "behövde", "bör", "börande", "borde", "bort", "brukade", "brukande", "brukar", "brukat", "fående", "får", "fått", "fick", "hade", "haft", "har", "hava", "havande", "kan", "kunde", "kunnande", "kunnat", "mådde", "mående", "mår", "måste", "mått", "måtte", "skall", "skulle", "varande", "velat", "viljande", "vill", "ville"], QA = ["behöva", "böra", "bruka", "få", "ha", "kunna", "må", "ska", "vilja"], aE = ["är", "var", "varit", "vore", "blivit", "blivande", "blir", "bliver", "blev", "blitt", "funnits", "finnande", "finns", "fanns", "befunnit", "befinnande", "befinner", "befann", "tyckts", "tyckande", "tycks", "tycktes"], eE = ["vara", "bli", "finnas", "befinna", "tyckas"], tE = ["gående", "gällande", "gällde", "gäller", "gällt", "går", "gått", "gav", "ger", "gett", "gick", "givande", "giver", "gjorde", "gjort", "gör", "görande", "kom", "kommande", "kommer", "kommit", "ligger", "ligges", "lå", "ligget", "liggande", "ställer", "ställde", "ställt", "ställ", "ställande", "ställd", "ställas", "ställs", "ställes", "ställdes", "ställts", "tagande", "tager", "tagit", "tar", "tog", "utgör", "utgjorde", "utgjort", "utgörande", "utgjord", "utgöras", "utgörs", "utgöres", "utgjordes", "utgjorts"], iE = ["gå", "gälla", "ge", "göra", "komma", "ligga", "ställa", "ta", "utgöra"], nE = ["angav", "anger", "angett", "angiver", "angivit", "berättade", "berättar", "berättat", "föreslagit", "föreslår", "föreslått", "föreslog", "förklarade", "förklarar", "förklarat", "förstår", "förstått", "förstod", "frågade", "frågar", "frågat", "påstår", "påstått", "påstod", "sa", "sade", "säger", "sagt", "svarade", "svarar", "svarat", "talade", "talar", "talat", "tänker", "tänkt", "tänkte"], rE = ["ange", "berätta", "föreslå", "förklara", "förstå", "fråga", "påstå", "säga", "svara", "tala", "tänka"], sE = ["äldre", "äldst", "äldsta", "äldste", "bäst", "bättre", "dålig", "dåliga", "dålige", "dåligt", "egen", "eget", "egna", "egne", "enkel", "enkelt", "enkla", "enklare", "enklast", "enklaste", "enkle", "fel", "gamla", "gamle", "gammal", "gammalt", "god", "goda", "godare", "godast", "godaste", "gode", "gott", "grundläggande", "hel", "hela", "helare", "helast", "helaste", "hele", "helt", "kort", "korta", "kortare", "kortast", "kortaste", "korte", "lång", "långa", "långe", "längre", "långsam", "långsamma", "långsammare", "långsammast", "långsammaste", "långsamme", "långsamt", "längst", "längsta", "längste", "långt", "liknande", "lilla", "lille", "liten", "litet", "mindre", "minst", "minsta", "minste", "möjlig", "möjliga", "möjligare", "möjligast", "möjligaste", "möjlige", "möjligt", "nödvändig", "nödvändiga", "nödvändigare", "nödvändigast", "nödvändigaste", "nödvändige", "nödvändigt", "normal", "normala", "normalare", "normalast", "normalaste", "normale", "normalt", "ny", "nya", "nyare", "nyast", "nyaste", "nye", "nytt", "olikt", "olika", "olike", "samma", "sämre", "sämst", "sämsta", "sämste", "särskild", "särskilda", "särskilde", "särskilt", "sen", "sena", "senare", "senast", "senaste", "sene", "sent", "små", "snabb", "snabba", "snabbare", "snabbast", "snabbaste", "snabbe", "snabbt", "stor", "stora", "store", "större", "störst", "största", "störste", "stort", "svår", "svåra", "svårare", "svårast", "svåraste", "svåre", "svårt", "tidig", "tidiga", "tidigare", "tidigast", "tidigaste", "tidige", "tidigt", "trevlig", "trevliga", "trevligare", "trevligast", "trevligaste", "trevlige", "trevligt", "ung", "unga", "unge", "ungt", "uppenbar", "uppenbara", "uppenbare", "uppenbart", "värre", "värst", "värsta", "värste", "verklig", "viktig", "viktiga", "viktigare", "viktigast", "viktigaste", "viktige", "viktigt", "yngre", "yngst", "yngsta", "yngste"], oE = ["aldrig", "allmänt", "alltid", "delvis", "direkt", "huvudsakligen", "ibland", "långsamt", "mestadels", "nästan", "ofta", "relativt", "riktigt", "riktigare", "riktigast", "sällan", "snabbt", "ständigt", "väl", "vanligt"], dE = ["antal", "antalet", "antals", "antalets", "antalen", "antalens", "bit", "bitar", "bitarna", "bitarnas", "bitars", "biten", "bitens", "bits", "del", "delar", "delarna", "delarnas", "delars", "delen", "delens", "dels", "detalj", "detaljen", "detaljens", "detaljer", "detaljerna", "detaljernas", "detaljers", "detaljs", "exempel", "exempels", "exemplet", "exemplets", "exemplen", "exemplens", "person", "personen", "personens", "personer", "personerna", "personernas", "personers", "persons", "procent", "punkt", "punkten", "punktens", "punkter", "punkterna", "punkternas", "punkters", "sak", "saken", "sakens", "saker", "sakerna", "sakernas", "sakers", "saks", "sätt", "sätten", "sättens", "sättet", "sättets", "sätts", "skillnad", "skillnaden", "skillnadens", "skillnader", "skillnaderna", "skillnadernas", "skillnaders", "skillnads", "sort", "sorten", "sortens", "sorter", "sorterna", "sorternas", "sorters", "sorts", "tema", "teman", "temanas", "temans", "temas", "temat", "temats", "tid", "tiden", "tidens", "tider", "tiderna", "tidernas", "tiders", "tids", "ting", "tingen", "tingens", "tinget", "tingets", "tings"], lE = ["åt", "av", "bakom", "bland", "bortom", "bredvid", "cirka", "efter", "emellan", "emot", "enligt", "för", "före", "förutom", "framför", "från", "genom", "hos", "i", "igenom", "inom", "inuti", "längs", "med", "mellan", "mittemot", "mot", "nära", "nästa", "nedan", "ner", "olik", "om", "omkring", "ovanför", "ovanpå", "över", "på", "runt", "sedan", "som", "till", "tvärs", "tvärsöver", "under", "upp", "ur", "ut", "utan", "utanför", "utom", "via", "vid"], cE = ["absolut", "alldeles", "allra", "bra", "fullständigt", "fullt", "ganska", "helt", "illa", "jätte", "rysligt", "så", "storligen", "totalt", "väldigt", "ytterst"], uE = ["eller", "och"], pE = ["att"], mE = ["år", "årens", "året", "årets", "års", "årtal", "årtalen", "årtalens", "årtaconst", "årtaconsts", "årtals", "dag", "dagar", "dagarna", "dagarnas", "dagars", "dagen", "dagens", "dags", "går", "idag", "månad", "månaden", "månadens", "månader", "månaderna", "månadernas", "månaders", "månads", "minut", "minuten", "minutens", "minuter", "minuterna", "minuternas", "minuters", "minuts", "morgon", "sekund", "sekunden", "sekundens", "sekunder", "sekunderna", "sekundernas", "sekunders", "sekunds", "timmar", "timmarna", "timmarnas", "timmars", "timme", "timmen", "timmens", "timmes", "vecka", "veckan", "veckans", "veckas", "veckor", "veckorna", "veckornas", "veckors"], gE = ["prof", "doc", "dr"], zE = ["å", "aj", "aja", "fy", "grattis", "hej", "hu", "jaså", "javisst", "o", "oj", "ojdå", "prosit", "puh", "skål", "usch"], fE = ["c", "cl", "cm", "dl", "g", "kg", "km", "krm", "l", "m", "mg", "ml", "mm", "msk", "pkt", "st", "tsk"], yE = ["förlåt", "ja", "jo", "ju", "m.m", "nej", "ok", "okej", "tack"];
var Jw = {};
Object.defineProperty(Jw, "__esModule", {
  value: !0
});
Jw.default = function() {
  return {
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(aea),
    // These word categories are filtered at the ending of word combinations.
    filteredAtBeginning: [].concat(bE, eea),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(wE, CE, _E, FE, $E, tea),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(PE, vE, xE, NE, hE, TE, RE, WE, DE, AE, LE, IE, EE, SE, qE, nea, VE, ME, UE, rea, HE, BE, kE, OE, jE),
    // This export contains all of the above words.
    all: [].concat(wE, hE, bE, _E, $E, xE, vE, jE, AE, EE, SE, qE, ME, PE, TE, RE, OE, CE, LE, IE, WE, iea, FE, DE, NE, BE, UE, HE, VE, sea, kE)
  };
};
const wE = ["si", "sang", "kaum", "sri", "hang", "dang", "para"], hE = ["nol", "satu", "dua", "tiga", "empat", "lima", "enam", "tujuh", "delapan", "sembilan", "sepuluh", "sebelas", "seratus", "seribu", "sejuta", "semiliar", "setriliun"], bE = ["kesatu", "pertama", "kedua", "ketiga", "keempat", "kelima", "keenam", "ketujuh", "kedelapan", "kesembilan", "kesepuluh", "kesebelas", "keseratus", "keseribu"], aea = ["lah", "pun", "dong", "kan", "sih", "toh", "nah", "lho", "kok", "ding"], eea = ["sebuah", "seorang", "seekor", "sebiji", "selembar", "secarik", "sehelai", "sebutir", "sebatang", "sebidang", "sebentuk", "sebilah", "sekuntum", "sepatah", "sepucuk", "setangkai", "seutas", "sebelah", "segenggam", "segugus", "sepiring", "sejenis", "semacam", "sepotong", "setetes", "suatu"], vE = ["aku", "saya", "engkau", "kau", "kamu", "anda", "kita", "kami", "kalian", "ia", "dia", "beliau", "mereka", "dikau", "daku", "beta", "sayalah", "engkaulah", "kaulah", "kamulah", "andalah", "kitalah", "kamilah", "kalianlah", "dialah", "kamu-kamu", "saya-saya", "mereka-mereka", "beliau-beliau", "anda-anda", "mereka-merekalah", "beliau-beliaulah", "kamu-kamulah", "anda-andalah"], kE = ["yang"], _E = ["ini", "itu", "tersebut", "tadi", "inilah", "itulah"], $E = ["milikku", "milikmu", "miliknya", "punyanya", "punyaku", "punyamu", "kepunyaannya", "kepunyaanmu", "kepunyaanku"], tea = ["bu", "pak", "bang", "nak", "kak", "dik"], jE = ["belasan", "puluhan", "ribuan", "miliaran", "triliunan", "setengah", "seperdua", "sepertiga", "seperempat", "seperlima", "seperenam", "sepertujuh", "seperdelapan", "sepersembilan", "sepersepuluh", "sedikit", "setiap", "banyak", "semua", "lebih", "kurang", "sebagian", "cukup", "beberapa", "berpuluh-puluh", "beratus-ratus", "beribu-ribu", "berjuta-juta", "ratusan", "paling", "tiap-tiap"], xE = ["diriku", "dirinya", "dirimu"], AE = ["lain", "lainnya", "seseorang", "sesuatu", "siapa-siapa", "apa-apa", "semuanya", "segalanya", "seluruhnya", "keduanya", "ketiganya", "ketiga-tiganya", "kedua-duanya", "dua-duanya", "tiga-tiganya", "masing-masing", "apapun", "siapapun", "manapun", "sedemikian", "demikian"], EE = ["apa", "manakah", "mana", "apanya", "inikah", "itukah", "manalagi"], SE = ["siapa", "siapakah", "kamukah", "andakah", "sayakah", "akukah", "diakah", "merekakah", "engkaukah", "kamikah", "kitakah", "beliaukah", "iakah", "dirinyakah", "dirikukah", "siapatah", "siapalah", "siapanya"], qE = ["bagaimana", "mengapa", "kenapa", "kapan", "berapa", "kapankah", "berapakah", "bagaimanakah", "apakah", "kapanpun", "apatah", "apalah", "berapatah", "berapalah", "mengapakah", "mengapatah", "mengapalah", "kenapakah", "kenapatah", "kenapalah", "kapantah", "kapanlah", "manatah", "mananya", "manalah", "bagaimanatah", "bagaimanalah", "bilamana", "bilamanakah", "bilamanatah", "bilamananya", "bilamanalah", "keberapa", "mampukah", "beginikah", "begitukah"], PE = ["selalu", "sekali", "berkali-kali"], TE = ["dapat", "dapatkah", "bisa", "bisakah", "boleh", "bolehkah", "akan", "akankah", "bukan", "dapatlah", "bisatah", "bisanya", "bisalah", "bolehtah", "bolehnya", "bolehlah", "akantah", "akannya", "akanlah", "harus", "haruskah", "harustah", "harusnya", "haruslah", "bukankah", "bukantah", "bukannya", "bukanlah", "mungkin", "mungkinkah", "mungkintah", "mungkinlah", "belum", "belumkah", "belumlah", "sudah", "sudahkah", "sudahlah", "takkan", "masih", "masihkah", "pernah", "pernahkah"], RE = ["adalah", "ialah", "merupakan", "ada", "berada"], OE = ["antara", "seantero", "bagai", "bagaikan", "bagi", "buat", "dari", "demi", "dengan", "di", "terhadap", "menjelang", "ke", "kecuali", "sekeliling", "mengenai", "sekitar", "melalui", "selama", "lepas", "lewat", "oleh", "selewat", "pada", "sepanjang", "per", "seputar", "bersama", "sejak", "semenjak", "seperti", "serta", "tentang", "menuju", "menurut", "untuk", "tanpa", "adapun", "antar", "diantara", "silam", "lalu", "selaku", "melalui", "sebagai", "bahwasanya"], ME = ["atas", "bawah", "dalam", "luar", "depan", "belakang", "sebelah", "samping"], CE = ["dan", "atau", "lalu", "kemudian", "serta", "sedangkan", "sementara", "sambil", "seraya", "ataupun", "ataukah"], LE = ["maupun", "bukan", "begitu", "baru", "hanya"], IE = ["setelah", "sehabis", "sejak", "sampai", "ketika", "waktu", "tatkala", "saat", "kalau", "jika", "jikalau", "bila", "bilamana", "apabila", "asal", "asalkan", "seandainya", "andaikata", "sekiranya", "karena", "sebab", "lantaran", "gara-gara", "mentang-mentang", "kalau-kalau", "supaya", "agar", "guna", "sehingga", "hingga", "sampai", "sebelum", "sesudah", "meski", "meskipun", "kendati", "kendatipun", "walau", "walaupun", "sekalipun", "biarpun", "sungguhpun", "padahal", "seakan-akan", "seolah-olah", "daripada", "alih-alih", "melainkan", "apalagi", "bahwa", "saja"], WE = ["kata", "bilang", "berkata", "mengeklaim", "bertanya", "menayakan", "menyatakan", "tanya", "klaim", "jelas", "jelaskan", "menjelaskan", "dijelaskan", "ditanya", "pikir", "berpikir", "berbicara", "membicarakan", "mengumumkan", "diumumkan", "dibicarakan", "mendiskusikan", "menyarankan", "disarankan", "mengerti"], iea = ["yakni", "yaitu", "artinya", "awalnya", "akhirnya", "makanya", "malahan", "malah", "memang", "nantinya", "nanti", "pula", "seketika", "sekarang", "benar-benar", "kadang", "justru", "tetapi", "tapi"], FE = ["sangat", "amat", "terlalu", "terlampau", "sungguh", "serba", "agak", "begitu", "demikian", "makin", "semakin", "kian", "tambah", "bertambah", "begini", "amatlah"], DE = ["ada", "punya", "milik", "terlihat", "kelihatan", "mari", "marilah", "membuat", "dibuat", "menunjukkan", "ditunjukkan", "pergi", "ambil", "diambil", "meletkakkan", "letakkan", "ambilkan", "mencoba", "dicoba", "bermakna", "berarti", "terdiri", "memastikan", "dipastikan", "mengandung", "termasuk", "maknanya", "artinya", "ingin", "inginkan"], BE = ["terbesar", "besar", "terkecil", "kecil", "terbaru", "baru", "tertua", "tua", "lalu", "semudah", "termudah", "mudah", "cepat", "jauh", "susah", "keras", "panjang", "rendah", "pendek", "tinggi", "biasa", "simpel", "kebanyakan", "baru-baru", "lagi", "selesai", "mungkin", "umum", "baik", "buruk", "bagus", "utama", "sama", "tertentu", "biasanya", "spesifik", "langsung", "dekat", "terbaru", "berbeda", "beda", "sibuk", "terkini", "penting", "terpenting", "sebesar", "sekecil", "setua", "termuda", "semuda", "muda", "tercepat", "secepat", "termudah", "semudah", "terjauh", "sejauh", "tersusah", "sesusah", "terkeras", "sekeras", "sepanjang", "terpanjang", "terpendek", "sependek", "terbiasa", "tersimpel", "sesimpel", "terbaik", "sebaik", "terburuk", "seburuk", "sebagus", "terbagus", "terutama", "terdekat", "sedekat", "tersibuk", "sepenting", "lambat", "terlambat", "luas", "terluas", "seluas", "keren", "tersedia", "cepat-cepat", "erat-erat", "betul-betul", "diam-diam", "keras-keras", "jauh-jauh", "secepat-cepatnya", "baik-baik", "sebaik-baiknya", "sekeras-kerasnya", "lekas-lekas", "selekas-lekasnya", "tinggi-tinggi", "setinggi-tingginya", "seberat-beratnya", "sejauh-jauhnya", "sedikit-dikitnya", "sekurang-kurangnya", "setidak-tidaknya", "sedapat-dapatnya", "seenak-enaknya", "seenaknya", "seadanya", "sekenanya", "selambat-lambatnya", "selebih-lebihnya", "sedikitnya", "sepenuhnya", "besar-besaran", "kecil-kecilan", "habis-habisan", "mati-matian", "terang-terangan", "terus-terusan", "untung-untungan", "kesekian", "berdua-dua", "bertiga-tiga", "berdua", "bertiga", "berempat", "berlima", "berenam", "bertujuh", "berdelapan", "bersembilan", "bersepuluh", "bersebelas", "berseratus", "berseribu", "berduaan", "agaknya", "sepenting-pentingnya", "sepanjang-panjangnya", "spesifik", "spesial", "semuda-mudanya", "setua-tuanya", "seburuk-buruknya", "seluas-luasnya", "terlebih", "selamanya", "selama-lamanya", "mampu", "begini", "beginilah", "begitu", "begitulah", "sebegini", "sebegitu", "semula", "pasti", "pastilah", "pastinya", "dini", "sedini", "sering", "seringnya", "jarang", "terbanyak"], nea = ["putus-putusnya", "jemu-jemunya", "jera-jeranya", "puas-puasnya", "bosan-bosannya", "henti-hentinya", "berhenti-hentinya"], NE = ["bah", "cis", "ih", "idih", "sialan", "buset", "aduh", "waduh", "duh", "aduhai", "amboi", "asyik", "wah", "syukur", "alhamdulillah", "untung", "aduh", "aih", "aih", "lo", "duilah", "eh", "oh", "ah", "astaga", "astagfirullah", "masyaallah", "masa", "alamak", "gila", "ayo", "yuk", "mari", "hai", "he", "hai", "halo"], UE = ["sdm", "sdt", "gr", "kg", "cm", "mg", "ml", "l", "dl", "cl", "ons", "lbr", "cc", "bh", "ltr", "pon"], rea = ["detik", "menit", "jam", "detik-detik", "menit-menit", "jam-jam", "hari", "hari-hari", "minggu", "minggu-minggu", "bulan", "bulan-bulan", "tahun", "tahun-tahun", "besok", "kemarin", "lusa", "malam-malam", "siang-siang", "subuh", "bedug", "keesokan"], HE = ["cara", "barang", "masalah", "bagian", "bagian-bagian", "aspek", "aspek-aspek", "ide", "item", "tema", "hal", "perkara", "faktor", "faktor-faktor", "detil", "perbedaan", "adanya", "beginian", "rupanya", "diri"], VE = ["tidak", "iya", "tak", "tentu", "ok", "oke", "amin", "dll", "maaf", "tolong", "mohon", "jangan", "sebagainya", "hanya", "cuma", "jangankan", "janganlah", "tolonglah"], sea = ["tuan", "nyonya", "nona", "bang", "pak", "bu", "bang", "kak", "prof", "gus", "ning", "kyai", "ustad", "ustadzah", "nyai", "raden", "tengku"];
var Qw = {};
Object.defineProperty(Qw, "__esModule", {
  value: !0
});
Qw.default = function() {
  return {
    // This export contains all of the above words.
    all: [].concat(oea, dea, lea, cea, uea, pea, mea, gea, zea, fea, yea, wea, hea, bea, vea, kea, _ea, $ea, jea)
  };
};
const oea = [
  // 1-10
  "אחת",
  "אחד",
  "שתים",
  "שנים",
  "שתיים",
  "שלש",
  "שלשה",
  "ארבע",
  "ארבעה",
  "חמש",
  "חמשה",
  "שש",
  "ששה",
  "שבע",
  "שבעה",
  "שמונה",
  "שמונה",
  "תשע",
  "תשעה",
  "עשר",
  "עשרה",
  // 20
  "עשרים",
  // 100
  "מאה",
  // 1000
  "אלף",
  // Million
  "מיליון",
  // Billion
  "מילירד"
], dea = [
  // Ordinals for 1-10; for higher humbers ordinal numerals are the same as the cardinals.
  "ראשון",
  "ראשונה",
  "שני",
  "שניה",
  "שלישי",
  "שלישית",
  "רביעי",
  "רביעית",
  "חמישי",
  "חמישית",
  "ששי",
  "ששית",
  "שביעי",
  "שביעית",
  "שמיני",
  "שמינית",
  "תשיעי",
  "תשיעית",
  "עשירי",
  "עשירית"
], lea = [
  "אני‎",
  "אנחנו‎",
  "אנו‎",
  "אתה‎",
  "את‎",
  "אתם‎",
  "אתן‎",
  "הוא‎",
  "היא‎",
  "הם‎",
  "הן‎",
  // Personal pronouns - prefixed forms
  "שאני",
  "שאתה",
  "שהוא",
  "ואני",
  "שהיא"
], cea = [
  // Demonstrative pronoun "ze"
  "זה",
  "זאת",
  "זו",
  "ההוא",
  "ההיא",
  "איזה",
  "איזו",
  "אלה",
  "אלו",
  "ההם",
  "ההן",
  "אילו",
  "לזה",
  // Demonstrative pronoun "ze" - prefixed forms
  "הזה",
  "שזה"
], uea = [
  // What
  "מה",
  // Who
  "מי",
  // Why
  "למה",
  // How much/many
  "כמה",
  // Particle for y/n questions
  "האם",
  // Where
  "איפה",
  // Which
  "איזה",
  "איזו",
  "אילו",
  // When
  "מתי",
  "כאשר",
  // How
  "איך",
  // If
  "אי",
  // Unless
  "אלמלא"
], pea = [
  // All
  "כולם",
  "כול",
  // Most
  "רוב",
  // Part
  "חלק",
  // Less
  "פחות",
  // Few, little
  "מעט",
  // Many, much
  "הרבה",
  // Many, numerous
  "רב",
  "רבה",
  "רבים",
  "רבות",
  // At least
  "לפחות"
], mea = ["עצמי", "לעצמי", "בעצמי", "עצמך", "לעצמך", "בעצמך", "עצמך", "לעצמך", "בעצמך", "עצמו", "עצמה", "עצמנו", "עצמכם", "עצמכן", "עצמם", "עצמן"], gea = [
  // Something
  "משהו",
  // Someone
  "מישהו",
  "מישהי",
  // Nothing
  "כלום"
], zea = [
  // Each paradigm is one preposition with different pronominal affixes and possibly prefixes
  // Definite object preposition
  "את",
  "אותי",
  "אותנו",
  "אותך",
  "אתכם",
  "אתכן",
  "אותו",
  "אותה",
  "אותם",
  "אותן",
  "שאת",
  // Possessive preposition
  "של",
  "שלי",
  "שלנו",
  "שלך",
  "שלכם",
  "שלכן",
  "שלו",
  "שלהם",
  "שלהן",
  // To/for/of
  "לי",
  "לך",
  "לו",
  "לה",
  "לנו",
  "לכם",
  "לכן",
  "להם",
  "להן",
  // On/upon
  "על",
  "עליי",
  "עלינו",
  "עליך",
  "עלייך",
  "עליכם",
  "עליכן",
  "עליו",
  "עליה",
  "עליהם",
  "עליהן",
  "גבי",
  "גבנו",
  "גבך",
  "גבה",
  "גבנו",
  "גבכם",
  "גבכן",
  "גבם",
  "גבן",
  // To/towards/into
  "אל",
  "אליי",
  "אלינו",
  "אליך",
  "אלייך",
  "אליכם",
  "אליכן",
  "אליו",
  "אליה",
  "אליהם",
  "אליהן",
  "ואל",
  // With
  "עם",
  "איתי",
  "עימי",
  "איתנו",
  "עימנו",
  "איתך",
  "עימך",
  "איתכם",
  "איתכן",
  "איתו",
  "איתה",
  "איתם",
  "עימם",
  // As
  "כמו",
  "כמוני",
  "כמונו",
  "כמוך",
  "כמוך",
  "כמוכם",
  "כמוכן",
  "כמוהו",
  "כמוה",
  "כמוהם",
  "כמוהן",
  "כמוכם",
  "כמוכן",
  // Before
  "לפני",
  "לפניי",
  "לפנינו",
  "לפניך",
  "לפנייך",
  "לפניו",
  "לפניה",
  "לפניכם",
  "לפניכן",
  "לפניהם",
  "לפניהן",
  // In
  "ובכן",
  "בן",
  "בי",
  "בנו",
  "בך",
  "בכם",
  "בכן",
  "בו",
  "בה",
  "בהם",
  "בהן",
  // Because
  "בגלל",
  "בגללי",
  "בגללנו",
  "בגללך",
  "בגללכם",
  "בגללכן",
  "בגללו",
  "בגללה",
  "בגללם",
  "בגללן",
  // After
  "אחר",
  "אחריי",
  "אחרינו",
  "אחריך",
  "אחרייך",
  "אחריכם",
  "אחריכן",
  "אחריו",
  "אחריה",
  "אחריהם",
  "אחריהן",
  // For the sake of
  "בשביל",
  "בשבילי",
  "בשבילנו",
  "בשבילך",
  "בשבילו",
  "בשבילה",
  "בשבילכם",
  "בשבילכן",
  "בשבילם",
  "בשבילן",
  // Instead of
  "במקום",
  "במקומי",
  "במקומנו",
  "במקומך",
  "במקומו",
  "במקומה",
  "במקומכם",
  "במקומכן",
  "במקומם",
  "במקומן",
  // Until, up to
  "עד",
  // About
  "אודות",
  "אודותי",
  "אודותנו",
  "אודותך",
  "אודותכם",
  "אודותכן",
  "אודותו",
  "אודותה",
  "אודותם",
  "אודותן",
  // Behind
  "מאחורי",
  "מאחוריי",
  "מאחורינו",
  "מאחוריך",
  "מאחורייך",
  "מאחוריכם",
  "מאחוריכן",
  "מאחוריו",
  "מאחוריה",
  "מאחוריהם",
  "מאחוריהן",
  // At
  "אצל",
  "אצלי",
  "אצלנו",
  "אצלך",
  "אצלך",
  "אצלכם",
  "אצלכן",
  "אצלו",
  "אצלה",
  "אצלם",
  "אצלן",
  // By means of
  "באמצעות",
  "באמצעותי",
  "באמצעותנו",
  "באמצעותך",
  "באמצעותכם",
  "באמצעותכן",
  "באמצעותו",
  "באמצעותה",
  "באמצעותם",
  "באמצעותן",
  // Due to
  "בזכות",
  "בזכותי",
  "בזכותנו",
  "בזכותך",
  "בזכותכם",
  "בזכותכן",
  "בזכותו",
  "בזכותה",
  "בזכותם",
  "בזכותן",
  // Between
  "ביני",
  "בינינו",
  "בינך",
  "ביניכם",
  "ביניכן",
  "בינו",
  "בינה",
  "ביניהם",
  "ביניהן",
  // Without
  "בלעדיי",
  "בלעדינו",
  "בלעדיך",
  "בלעדייך",
  "בלעדיכם",
  "בלעדיכן",
  "בלעדיו",
  "בלעדיה",
  "בלעדיהם",
  "בלעדיהן",
  // In favor of
  "בעד",
  "בעדי",
  "בעדנו",
  "בעדך",
  "בעדך",
  "בעדכם",
  "בעדכן",
  "בעדו",
  "בעדה",
  "בעדם",
  "בעדן",
  // As a result of
  "בעקבות",
  "בעקבי",
  "בעקביי",
  "בעקבינו",
  "בעקביך",
  "בעקבייך",
  "בעקביכם",
  "בעקביכן",
  "בעקביו",
  "בעקביה",
  "בעקביהם",
  "בעקביהן",
  // Facing
  "בפני",
  "בפניי",
  "בפנינו",
  "בפניך",
  "בפנייך",
  "בפניכם",
  "בפניכן",
  "בפניו",
  "בפניה",
  "בפניהם",
  "בפניהן",
  // Among
  "בקרב",
  "בקרבי",
  "בקרבנו",
  "בקרבך",
  "בקרבך",
  "בקרבכם",
  "בקרבכן",
  "בקרבו",
  "בקרבה",
  "בקרבם",
  "בקרבן",
  // On behalf of
  "בשם",
  "בשמי",
  "בשמנו",
  "בשמך",
  "בשמך",
  "בשמכם",
  "בשמכן",
  "בשמו",
  "בשמה",
  "בשמם",
  "בשמן",
  // Inside
  "בתוך",
  "בתוכי",
  "בתוכנו",
  "בתוכך",
  "בתוכך",
  "בתוככם",
  "בתוככן",
  "בתוכו",
  "בתוכה",
  "בתוכם",
  "בתוכן",
  // As
  "כמוני",
  "כמונו",
  "כמוך",
  "כמוך",
  "כמוכם",
  "כמוכן",
  "כמוהו",
  "כמוה",
  "כמוהם",
  "כמוהן",
  // In relation
  "כלפי",
  "כלפיי",
  "כלפינו",
  "כלפיך",
  "כלפייך",
  "כלפיכם",
  "כלפיכן",
  "כלפיו",
  "כלפיה",
  "כלפיהם",
  "כלפיהן",
  // Against
  "כנגד",
  "כנגדי",
  "כנגדנו",
  "כנגדך",
  "כנגדך",
  "כנגדכם",
  "כנגדכן",
  "כנגדו",
  "כנגדה",
  "כנגדם",
  "כנגדן",
  // Along
  "לאורך",
  "לאורכי",
  "לאורכנו",
  "לאורכך",
  "לאורכך",
  "לאורככם",
  "לאורככן",
  "לאורכו",
  "לאורכה",
  "לאורכם",
  "לאורכן",
  // Regarding
  "לגבי",
  "לגביי",
  "לגבינו",
  "לגביך",
  "לגבייך",
  "לגביכם",
  "לגביכן",
  "לגביו",
  "לגביה",
  "לגביהם",
  "לגביהן",
  // According to
  "לדברי",
  "לדבריי",
  "לדברינו",
  "לדבריך",
  "לדברייך",
  "לדבריכם",
  "לדבריכן",
  "לדבריו",
  "לדבריה",
  "לדבריהם",
  "לדבריהן",
  // Near
  "ליד",
  "לידי",
  "לידנו",
  "לידך",
  "לידך",
  "לידכם",
  "לידכן",
  "לידו",
  "לידה",
  "לידם",
  "לידן",
  // For the sake of
  "למען",
  "למעני",
  "למעננו",
  "למענך",
  "למענך",
  "למענכם",
  "למענכן",
  "למענו",
  "למענה",
  "למענם",
  "למענן",
  // According to
  "לפי",
  "לפי",
  "לפינו",
  "לפיך",
  "לפיך",
  "לפיכם",
  "לפיכן",
  "לפיו",
  "לפיהו",
  "לפיה",
  "לפיהם",
  "לפיהן",
  // Towards
  "לקראת",
  "לקראתי",
  "לקראתנו",
  "לקראתך",
  "לקראתך",
  "לקראתכם",
  "לקראתכן",
  "לקראתו",
  "לקראתה",
  "לקראתם",
  "לקראתן",
  // Across
  "לרוחב",
  "לרוחבי",
  "לרוחבנו",
  "לרוחבך",
  "לרוחבך",
  "לרוחבכם",
  "לרוחבכן",
  "לרוחבו",
  "לרוחבה",
  "לרוחבם",
  "לרוחבן",
  // Opposite
  "מול",
  "מולי",
  "מולנו",
  "מולך",
  "מולך",
  "מולכם",
  "מולכן",
  "מולו",
  "מולה",
  "מולם",
  "מולן",
  // From
  "מן",
  "ממני",
  "ממנו",
  "מאיתנו",
  "ממך",
  "ממך",
  "מכם",
  "מכן",
  "ממנו",
  "ממנה",
  "מהם",
  "מהן",
  // Over
  "מעל",
  "מעליי",
  "מעלינו",
  "מעליך",
  "מעלייך",
  "מעליכם",
  "מעליכן",
  "מעליו",
  "מעליה",
  "מעליהם",
  "מעליהן",
  // From
  "מפני",
  "מפניי",
  "מפנינו",
  "מפניך",
  "מפנייך",
  "מפניכם",
  "מפניכן",
  "מפניו",
  "מפניה",
  "מפניהם",
  "מפניהן",
  // Below
  "מתחת",
  "מתחתיי",
  "מתחתינו",
  "מתחתיך",
  "מתחתייך",
  "מתחתיכם",
  "מתחתיכן",
  "מתחתיו",
  "מתחתיה",
  "מתחתיהם",
  "מתחתם",
  "מתחתיהן",
  "מתחתן",
  // For
  "עבור",
  "עבורי",
  "עבורנו",
  "עבורך",
  "עבורכם",
  "עבורכן",
  "עבורו",
  "עבורה",
  "עבורם",
  "עבורן",
  // Under
  "תחת",
  "תחתיי",
  "תחתינו",
  "תחתיך",
  "תחתייך",
  "תחתיכם",
  "תחתיכן",
  "תחתיו",
  "תחתיה",
  "תחתיהם",
  "תחתם",
  "תחתיהן",
  "תחתן",
  // Compared with
  "לעומת",
  "לעומתי",
  "לעומתנו",
  "לעומתך",
  "לעומתך",
  "לעומתכם",
  "לעומתכן",
  "לעומתו",
  "לעומתה",
  "לעומתם",
  "לעומתן",
  // Part of according to
  "פי"
], fea = [
  // But
  "אבל",
  "אך",
  "אלא",
  // If
  "אם",
  // Then
  "אז",
  // Or
  "או",
  // In order to
  "כדי",
  // Because
  "כי",
  // Indeed
  "אכן",
  // By the way
  "אגב",
  // However
  "אולם",
  // Although
  "אע״פ",
  // Relative clause marker
  "אשר",
  // While
  "בעוד",
  // And/or
  "ו/או",
  // Since
  "יען",
  // Were it not for
  "לולא",
  // Unless
  "פן"
], yea = [
  // Say
  "אומר",
  "אומרת",
  "אומרים",
  "אומרות",
  "אמרתי",
  "אמרנו",
  "אמרת",
  "אמרתם",
  "אמרתן",
  "אמר",
  "אמרה",
  "אמרו",
  "נאמר",
  "תאמר",
  "תאמרי",
  "תאמרו",
  "תאמרנה",
  "יאמר",
  "תאמר",
  "תאמרנה",
  "יאמר",
  "יאמרו",
  "אמור",
  "אמרי",
  "אמורנה",
  // Speak
  "מדבר",
  "מדברת",
  "מדברים",
  "מדברות",
  "דיברתי",
  "דיברנו",
  "דיברת",
  "דיברתם",
  "דיברתן",
  "דיבר",
  "דיברה",
  "דיברו",
  "אדבר",
  "נדבר",
  "תדבר",
  "תדברי",
  "תדברו",
  "תדברנה",
  "ידבר",
  "ידברו",
  "דבר‏",
  "דברי‏",
  "דברו‏",
  "דברנה‏",
  "לדבר",
  // Understand
  "מבין",
  "מבינה",
  "מבינים",
  "מבינות",
  "הבנתי",
  "הבינותי",
  "הבנו",
  "הבינונו",
  "הבנת",
  "הבינות",
  "הבנתם",
  "הבינותם",
  "הבנתן",
  "הבינותן",
  "הבין",
  "הבינה",
  "הבינו",
  "אבין",
  "נבין",
  "תבין",
  "תביני",
  "תבינו",
  "תבנה",
  "יבין",
  "יבינו",
  "תבינינה",
  "הבן‏",
  "הביני‏",
  "הבנה‏",
  "להבין",
  // Believe
  "מאמין",
  "מאמינה",
  "מאמינים",
  "מאמינות",
  "האמנתי",
  "האמנו",
  "האמנת",
  "האמנתם",
  "האמנתן",
  "האמין",
  "האמינה",
  "האמינו",
  "אאמין",
  "נאמין",
  "תאמין",
  "תאמיני",
  "תאמינו",
  "תאמנה",
  "יאמין",
  "יאמינו",
  "האמן‏",
  "האמיני‏",
  "האמינו‏",
  "האה‏",
  "להאמין",
  // Know
  "יודע",
  "יודעת",
  "יודעים",
  "יודעות",
  "ידעתי",
  "ידענו",
  "ידעת",
  "ידעתם",
  "ידעתן",
  "ידע",
  "ידעה",
  "ידעו",
  "אדע",
  "נדע",
  "תדע",
  "תדעי",
  "תדעו",
  "תדענה",
  "דע‏",
  "דעי‏",
  "דעו‏",
  "דענה‏",
  "לדעת",
  // Ask
  "שואל",
  "שואלת",
  "שואלים",
  "שואלות",
  "שאלתי",
  "שאלנו",
  "שאלת",
  "שאלתם",
  "שאלתן",
  "שאל",
  "שאלה",
  "שאלו",
  "אשאל",
  "נשאל",
  "תשאל",
  "תשאלי",
  "תשאלו",
  "תשאלנה",
  "ישאל",
  "ישאלו",
  "שאל‏",
  "שאלי‏",
  "שאלו‏",
  "שאלנה‏",
  "לשאול"
], wea = [
  // Very
  "מאוד",
  // Definitely
  "בהחלט",
  // The most
  "ביותר",
  // Terribly
  "נורא",
  // Completely
  "לגמרי",
  // Enough
  "די"
], hea = [
  // To be - infinitive
  "להיות",
  // To be - past
  "היי",
  "הייתי",
  "יהיה",
  "היית",
  "הייתה",
  "היינו",
  "הייתם",
  "הייתן",
  "היו",
  // To be - future
  "אהיה",
  "תהיה",
  "תהיי",
  "יהיה",
  "נהיה",
  "תהיו",
  "תהיינה",
  "יהיו",
  "היינה",
  // There is
  "יש",
  "שיש",
  // Here is
  "הנה",
  // There is not
  "אין",
  // Want
  "רוצה",
  "רוצים",
  "רציתי",
  "רצה",
  // Can
  "יכול",
  "יכולה",
  "יכולים",
  "נוכל",
  // Should
  "צריך",
  "צריכה",
  // Must
  "חייב",
  // Do, make
  "לעשות",
  "עושה",
  // Think
  "חושב",
  "חשבתי",
  "חושבת",
  // See
  "נראה",
  "לראות",
  "רואה",
  // Come
  "בוא",
  // Go
  "הולך",
  "ללכת",
  "הולכת",
  "הלכתי",
  "הלכת",
  "הלכת",
  "הלך",
  "הלכה",
  "אלך",
  "תלך",
  "תלכי",
  "ילך",
  "לכי",
  "הולכים",
  "הולכות",
  "הלכנו",
  "הלכתם",
  "הלכתן",
  "הלכו",
  "נלך",
  "תלכו",
  "תלכנה",
  "ילכו",
  "לכו",
  "לכנה",
  // To be sorry
  "מצטער",
  // Happen
  "קרה",
  "קורה",
  // Love
  "אוהב",
  // Put
  "שום",
  // Use
  "להשתמש",
  // Try
  "לנסות",
  "מנסה",
  // Take
  "לוקח",
  "אקח",
  // Put
  "לשים",
  // Give
  "נותן",
  "נותנת",
  "נותנים",
  "נותנות",
  "נת",
  "תינתנו",
  "נתת",
  "נתתם",
  "נתתן",
  "נתן",
  "נתנה",
  "נתנו",
  "אתן",
  "ניתן",
  "תיתן",
  "תיתני",
  "תיתנותיתנה",
  "ייתןנתתתיתן",
  "ייתנו",
  "תיתנה",
  "תן‏",
  "תני‏",
  "תנו‏",
  "תנה‏",
  "לתת"
], bea = [
  // Only
  "רק",
  // All
  "כל",
  // More
  "יותר",
  // Here
  "כאן",
  // So, such
  "כך",
  "כה",
  // Right, correct
  "נכון",
  // Now
  "עכשיו",
  "עכשיו",
  // There
  "שם",
  // Forward
  "קדימה",
  // Also
  "אף",
  // Yet, still
  "עוד",
  // Really
  "באמת",
  "ממש",
  // Maybe
  "אולי",
  // Already
  "כבר",
  // Here
  "פה",
  // Slighly
  "קצת",
  // Still
  "עדיין",
  // Just
  "בדיוק",
  // Again
  "שוב",
  // Always
  "תמיד",
  // Even
  "אפילו",
  // Certainly
  "בטח",
  // Late
  "מאוחר",
  // Recently
  "לאחרונה",
  // Soon
  "בקרוב",
  // Immediately
  "מיד",
  // Outside
  "בחוץ",
  // Fast
  "מהר",
  // Hard
  "קשה",
  // Slowly
  "לאט",
  // Mostly
  "לרוב",
  // Almost
  "כמעט",
  // Usually
  "בדרך",
  "כלל",
  // Sometimes
  "לפעמים",
  // Together
  "יחד",
  // Alone
  "לבד",
  // Backwards
  "אחורה",
  // As if
  "כאילו",
  // Too
  "גם",
  // Approximately
  "בערך",
  // The most
  "הכי",
  // Full
  "מלא",
  "מלאה",
  "מלאים",
  "מלאות",
  // Good
  "טוב",
  "טובה",
  "טובים",
  "טובות",
  // New
  "חדש",
  "חדשה",
  "חדשים",
  "חדשות",
  // Old
  "ישן",
  "ישנה",
  "ישנים",
  "ישנות",
  // Young
  "צעיn",
  "צעירה",
  "צעירים",
  "צעירות",
  // Big
  "גדול",
  "גדולה",
  "גדולים",
  "גדולות",
  // Easy
  "קל",
  "קלה",
  "קלים",
  "קלות",
  // Fast
  "מהיר",
  "מהירה",
  "מהירים",
  "מהירות",
  // Far
  "רחוק",
  "רחוקה",
  "רחוקים",
  "רחוקות",
  // Nice
  "נחמד",
  "נחמדה",
  "נחמדים",
  "נחמדות",
  // Special
  "מיוחד",
  "מיוחדת",
  "מיוחדים",
  "מיוחדות",
  // Simple
  "פשוט",
  "פשוטה",
  "פשוטים",
  "פשוטות",
  // Small
  "קטן",
  "קטנה",
  "קטנים",
  "קטנות",
  // Long
  "ארוך",
  "ארוכה",
  "ארוכים",
  "ארוכות",
  // Short
  "קצר",
  "קצרה",
  "קצרים",
  "קצרות",
  // Low
  "נמוך",
  "נמוכה",
  "נמוכים",
  "נמוכות",
  // Complete
  "שלם",
  "שלמה",
  "שלמים",
  "שלמות",
  // High
  "גבוה",
  "גבוהה",
  "גבוהים",
  "גבוהות",
  // Important
  "חשוב",
  "חשובה",
  "חשובים",
  "חשובות"
], vea = [
  // Ha (laughter)
  "ח",
  // Oh
  "הו",
  // Wow
  "וואו"
], kea = [
  // Kg
  'ק"ג',
  // G
  "ג'",
  // Gram
  "גרם",
  // Cl
  'סמ"ק',
  // Ml
  'מ"ל',
  // Liter
  "ליטר",
  // Tbsp
  "כף",
  // Tsp
  "כפית",
  // Cup
  "כוס",
  "כוסות"
], _ea = [
  // Today
  "היום",
  // Yesterday
  "אתמול",
  // Tomorrow
  "מחר",
  // Day
  "יום",
  "ימים",
  // Week
  "שבוע",
  "בשבוע",
  "שבועות",
  // Hour
  "שעה",
  "שעות",
  // Minute
  "דקה",
  "דקות",
  // Moment
  "רגע",
  "רגעים",
  // Month
  "חודש",
  "חודשים",
  // Year
  "שנה",
  "שנים",
  "השנה"
], $ea = [
  // Thing
  "דבר",
  // Time(s)
  "פעם",
  "פעמים",
  // Time
  "זמן",
  "הזמן",
  // All
  "הכל",
  "בכל",
  // Men
  "אנשים",
  // Place (used in multiple constructions such as e.g. "everywhere")
  "מקום",
  // Time (used for some adverbial constructions)
  "לעתים",
  // Number (e.g. in "a number of")
  "מספר",
  // Percent
  "אחוז",
  "אחוזים"
], jea = [
  // Yes
  "כן",
  // No, not (incl. prefixed forms)
  "לא",
  "שלא",
  // All right
  "בסדר",
  // Thank you
  "תודה",
  // Please
  "בבקשה",
  // Hello
  "שלום",
  // Percent
  "אחוז",
  // Mr
  "מר",
  "אדוני",
  // Ms, Mrs
  "גברת",
  // Person
  "אדם"
];
var ah = {};
Object.defineProperty(ah, "__esModule", {
  value: !0
});
ah.default = function() {
  return {
    // These word categories are filtered at the ending of word combinations.
    filteredAtEnding: [].concat(Gg, cS),
    // These word categories are filtered at the beginning and ending of word combinations.
    filteredAtBeginningAndEnding: [].concat(Kg, Qg, sS, dS, Yg, aS, Zg),
    // These word categories are filtered everywhere within word combinations.
    filteredAnywhere: [].concat(zS, rS, GE, YE, XE, uS, KE, Xg, Jg, az, ez, JE, lS, eS, tS, iS, nS, gS, oS, pS, Aea, mS, ZE, QE),
    // These categories are used in the passive voice assessment. If they directly precede a participle, the sentence part is not passive.
    cannotDirectlyPrecedePassiveParticiple: [].concat(Kg, Qg, Yg, Gg, Zg),
    /*
    These categories are used in the passive voice assessment. If they appear between an auxiliary and a participle,
    the sentence part is not passive.
    */
    cannotBeBetweenPassiveAuxiliaryAndParticiple: [].concat(Xg, Jg, az, ez),
    // This export contains all of the above words.
    all: [].concat(Kg, KE, Gg, Yg, XE, GE, YE, Zg, JE, eS, tS, iS, nS, rS, oS, Xg, Jg, Qg, dS, lS, az, zS, xea, aS, ez, uS, cS, pS, mS, gS, Eea, ZE, QE, sS)
  };
};
const Kg = ["الـ"], KE = ["صفر", "واحد", "واحدة", "أحد", "إحدى", "إثنان", "اثنتان", "إثنين", "ثنتين", "إثنتين", "إثنا", "إثنى", "إثنتا", "إثنتي", "ثلاث", "ثلاثة", "أربع", "أربعة", "خمس", "خمسة", "ست", "ستة", "سبع", "سبعة", "ثمان", "ثمانية", "تسع", "تسعة", "عشر", "عشرة", "عشرون", "ثلاثون", "أربعين", "أربعون", "خمسون", "ستون", "سبعون", "ثمانون", "تسعون", "مئة", "مائة", "مئتان", "ثلاثمئة", "ثلاثمائة", "أربعمئة", "أربعمائة", "خمسمئة", "خمسمائة", "ستمئة", "ستمائة", "سبعمئة", "سبعمائة", "ثمانمئة", "ثمانمائة", "تسعمئة", "تسعمائة", "ألف", "ألآف", "ألفا", "ألفين", "مليون", "ملايين", "مليار"], Gg = ["الأول", "الأولى", "الثاني", "الثانية", "الثالث", "الثالثة", "الرابع", "الرابعة", "الخامس", "الخامسة", "السادس", "السادسة", "السابع", "السابعة", "الثامن", "الثامنة", "التاسع", "التاسعة", "العاشر", "العاشرة", "الحادي", "الحادية", "العشرون", "الثلاثون", "الأربعون", "الخمسون", "الستون", "السبعون", "الثمانون", "التسعون", "المئة", "المائة"], GE = ["أنا", "انت", "هو", "هي", "نحن", "أنتما", "هما", "أنتم", "أنتن", "هم", "هن", "وأنا", "وأنت", "وهو", "وانا", "ونحن", "وهي", "وانت", "أنتي", "فهو", "وهم", "وأنتما"], YE = ["إياه", "إياهما", "إياهم", "إياها", "إياكما", "إياهن", "إياك", "إياكم", "إياكن", "إياي", "إيانا"], Yg = ["هذا", "هذه", "هذان", "هذين", "هتان", "هـتين", "ذا", "ذان", "ذين", "أولئ", "ذلك", "ذانك", "ذينك", "تلك", "تانك", "تينك", "أولئك", "هؤلاء", "ذاك", "هاتان", "هاتين", "ذه", "هأولئ", "ذلكم", "ذلكم", "وهذا", "هذة", "أولئك"], ZE = ["يا", "أي", "هيا", "أ", "آ", "أيها", "أيتها"], Zg = ["جميع", "كل", "بعض", "كثير", "كثيرة", "عديد", "عديدة", "لبعض", "قليلا", "كافية", "كافي", "صغير", "صغيرة", "قليل", "قليلة", "كثيرا", "بالكثير", "أكثر", "اكبر", "اغلب", "عديدة", "عديد", "قليلون", "أقل", "كل", "الكثير", "المزيد", "اكثر", "الأقل", "يكفي", "العديد", "كله", "جميعا", "كلها", "وكل", "كلنا", "كثيرة", "الأكثر", "ببعض", "بضعة", "عدة"], XE = ["نفسي", "نفسك", "نفسه", "نفسها", "أنفسنا", "أنسفكم", "أنفسهم", "أنفسهما", "أنفسكما", "أنفسكن", "أنفسهن", "بنفسي"], JE = ["ليس", "جميع", "الكل", "الجميع", "شخص", "شيء", "شيئا", "أخرى", "آخرين", "أي", "أيا", "من", "الآخرين", "أحد", "شئ", "أخرى", "شىء", "احد", "أية", "اخرى", "البعض", "أخر", "الآخر", "أحدهم", "الأخرى", "الشئ", "بعضنا", "بشيء", "شي", "الغير"], QE = ["الذي", "التي", "الذى", "التى", "الذين", "مالذي", "اللذان", "الذين", "اللتان", "اللاتي", "الذي", "اللتين", "اللذين"], aS = ["جدا", "حقا", "للغاية", "تماما", "فعلا"], eS = ["ماذا", "لمن", "ما", "أي", "أى", "وماذا", "وما", "بماذا", "ماهو", "ماهذا"], tS = ["من", "ومن"], iS = ["اين", "كيف", "لماذا", "لم", "سواء", "أينما", "كيفما", "مـتى", "كم", "هل", "أين", "أهذا", "وكيف", "وهل"], nS = ["هنا", "هناك", "هنالك"], rS = ["دائما", "مرة", "مرتين"], Xg = ["يجب", "سوف", "قد", "أستطيع", "يستطيع", "نستطيع", "تستطيع", "استطيع", "تستطيعين", "استطعت", "استطاعت", "استطاع", "استطعتما", "استطاعتا", "استطاعا", "استطعنا", "استطعتن", "استطعتم", "استطعن", "استطاعوا", "تستطيعان", "يستطيعان", "تستطعن", "تستطيعون", "يستطعن", "يستطيعون", "تستطيعي", "تستطيعا", "يستطيعا", "تستطيعوا", "يستطيعوا", "استطيعت", "استطيعتا", "استطيعا", "استطيعوا", "تستطاعين", "تستطاع", "يستطاع", "نستطاع", "تستطاعان", "يستطاعان", "تستطاعون", "يستطاعون", "أستطاع", "تستطاعي", "تستطاعا", "يستطاعا", "يستطاعوا", "تستطاعوا", "استطيعي", "يمكنني", "يمكن", "يمكننى", "بإمكانك", "لابد", "ينبغي", "وسوف", "هلا", "بد", "وقد", "ولقد", "يمكنه", "يمكنهما", "يمكنهم", "يمكنها", "يمكنكما", "يمكنهن", "يمكنك", "يمكنكم", "يمكنكن", "يمكني", "يمكننا"], Jg = ["لدي", "لديك", "لدينا", "لديه", "لديها", "لديهم", "لديهما", "لديكم", "لديكما", "لديهن", "لديكن", "صبحت", "صبح", "صبحتما", "صبحا", "صبحتا", "صبحنا", "صبحتن", "صبحتم", "صبحن", "صبحوا", "أصبح", "تصبحين", "تصبح", "يصبح", "تصبحان", "يصبحان", "نصبح", "تصبحن", "تصبحون", "تصبحي", "تصبحا", "يصبحا", "تصبحوا", "يصبحوا", "اصبحي", "اصبحوا", "اصبحا", "ابقى", "كان", "كنت", "كانت", "يكون", "كنتما", "كانتا", "كانا", "كنا", "كن", "كانوا", "كنتم", "أكون", "تكونين", "تكون", "تكونان", "يكونان", "نكون", "تكونون", "يكن", "يكونون", "تكوني", "تكونا", "يكونا", "تكونوا", "يكونوا", "كونا", "كونوا", "كن", "أكن", "اكون", "وكان", "كوني", "اكن", "سنكون", "كنا", "سيكون", "يكن", "ستكون", "تكن", "سأكون", "بت", "باتت", "بات", "بتما", "باتتا", "باتا", "بتنا", "بتن", "بتم", "باتوا", "أبيت", "بت", "صرت", "صرت", "صار", "صرتما", "صارتا", "صارا", "صرنا", "صرتن", "صرتم", "صرن", "صاروا", "أصير", "تصيرين", "تصير", "يصير", "تصيران", "يصيران", "نصير", "تصرن", "يصرن", "تصيرون", "يصيرون", "تصيري", "تصيرا", "يصيرا", "تصيروا", "يصيروا", "ليس", "وليس", "ليست", "ليسوا", "ليسا", "ليسنا", "ليسن", "أليس", "اليس", "لست", "لسنا"], Qg = ["أن", "في", "على", "إلى", "ان", "عن", "فى", "مع", "الى", "بعد", "بدون", "تحت", "طوال", "علي", "غير", "لدى", "حول", "خلال", "لكي", "بين", "الي", "خارج", "بشأن", "فوق", "دون", "لـ", "بـ", "بلا", "بواسطة", "ضد", "أمام", "وفي", "وشك", "نحو", "ذو", "أسفل", "ب", "خلف", "بجانب", "عدا", "طبقا", "بعد", "عكس", "منذ"], sS = ["إليه", "إليهما", "إليهم", "إليها", "إليكما", "إليهن", "إليك", "إليكم", "إليكن", "إلي", "إلينا", "عليه", "عليهما", "عليهم", "عليها", "عليكما", "عليهن", "عليك", "عليكم", "عليكن", "علي", "علينا", "عنه", "عنهما", "عنهم", "عنها", "عنكما", "عنهن", "عنك", "عنكم", "عنكن", "عني", "عننا", "له", "لهما", "لهم", "لها", "لكما", "لهن", "لك", "لكم", "لكن", "لي", "لنا", "معه", "معهما", "معهم", "معها", "معكما", "معهن", "معك", "معكم", "معكن", "معي", "معنا", "منه", "منهما", "منهم", "منها", "منكم", "منهن", "منك", "منكم", "منكن", "مني", "منا", "فيه", "فيهما", "فيهم", "فيها", "فيكما", "فيهن", "فيك", "فيكم", "به", "بهما", "بهم", "بها", "بكما", "بهن", "بك", "بكم", "بكن", "بي", "بنا", "بينهم", "بينهما", "بينكما", "بينكم", "بتلك", "بذلك", "فأنت", "بيننا", "بهذا", "بهذه", "فأنا", "فهذا", "فيما", "أجلك", "كهذا", "لأي", "لذلك", "لما", "لنفسك", "لهذا", "لهذه"], oS = ["داخل", "ضمن", "قدما"], dS = ["و", "و/او", "او", "أو"], lS = ["إذا", "لو", "اذا", "وإذا", "أذا"], az = ["أقول", "تقول", "تقولين", "تقولان", "يقول", "تقول", "يقولان", "تقولان", "نقول", "تقولون", "تقلن", "يقولون", "قلت", "قلتما", "قال", "قالت", "قالا", "قالتا", "قلنا", "قلتما", "قلتن", "قالوا", "قلنا", "تدعي", "يدعي", "تدعيان", "تدعون", "يدعون", "يدعين", "ادعيت", "ادعيت", "ادعيتما", "ادعى", "ادعت", "ادعينا", "ادعيتما", "ادعيتن", "ادعوا", "ادعينا", "تسأل", "تسألين", "يسأل", "تسأل", "نسأل", "تسألون", "تسألن", "يسألون", "يسألن", "سألت", "سألنا", "سألتم", "سألتن", "سألوا", "سألنا", "تشرح", "تشرحين", "يشرح", "تشرح", "نشرح", "تشرحون", "تشرحن", "يشرحون", "يشرحن", "شرحت", "شرح", "شرحت", "شرحنا", "شرحتم", "شرحتن", "شرحوا", "شرحنا", "شرحن", "أعتقد", "تعتقد", "تعتقدين", "يعتقد", "تعتقد", "تعتقدون", "تعتقدن", "يعتقدون", "يعتقدن", "اعتقدت", "اعتق", "اعتقدت", "أتحدث", "تتحدث", "تتحدثين", "يتحدث", "تتحدث", "نتحدث", "تحدثت", "تحدث", "تحدثت", "تحدثوا", "تحدثن", "أعلن", "تعلن", "تعلنين", "يعلن", "تعلن", "نعلن", "يعلنون", "يعلن", "أعلنت", "أعلن", "أعلنت", "أعلنا", "أعلنوا", "أعلن", "أناقش", "تناقش", "تناقشين", "يناقش", "تناقش", "نناقش", "تناقشون", "تناقشن", "يناقشون", "يناقشن", "ناقشت", "ناقشت", "ناقشت", "ناقشت", "ناقشت", "ناقشنا", "ناقشتم", "ناقشتن", "ناقشوا", "ناقشن", "أفهم", "تفهم", "تفهمين", "يفهم", "تفهم", "نفهم", "يفهمون", "يفهمن", "فهمت", "فهم", "فهمت", "فهمنا", "فهموا", "فهمن"], xea = ["الآن", "كذلك", "ربما", "كما", "لذا", "الان", "الأن", "بما", "أيضا", "بالنسبة", "فحسب", "والآن", "بكل", "مما", "ايضا", "بخصوص", "القادمة", "المحتمل", "مازال", "مازلت", "طالما", "بالتأكيد", "بدلا", "بوضوح", "فورا", "حالا", "التالي", "حاليا", "بالعادة", "تقريبا", "ببساطة", "اختياريا", "أحيانا", "أبدا", "بالمناسبة", "خاصة", "مؤخرا", "نسبيا"], ez = ["يعني", "أحتاج", "يعمل", "تعني", "تقوم", "أود", "عندك", "البقاء", "حاولت", "توجد", "دعونا", "تفكر", "جئت", "يريدون", "أتيت", "فعلته", "تقصد", "زال", "إرادة‎", "مريد‎", "مراد‎", "أردت‎", "أردت‎", "أردت‎", "أرادت‎", "أريد‎", "تريد‎", "تريدين‎", "يريد‎", "تريد‎", "أريد‎", "تريد‎", "يريد‎", "تريد‎", "أرد‎", "ترد‎", "يرد‎", "ترد‎", "أرد‎", "أريدي‎", "أردتما", "تريدان‎", "تريدا‎", "تريدا‎", "أريدا‎", "أرادا‎", "أرادتا‎", "يريدان‎", "تريدان‎", "يريدا‎", "تريدا‎", "أردنا‎", "نريد‎", "نريد‎", "نرد‎", "أردتم‎", "أردتن‎", "تريدون‎", "تردن‎", "تريدوا‎", "تردن‎", "تريدوا‎", "تردن‎", "أريدوا‎", "أردن‎", "أرادوا‎", "أردن‎", "يريدون‎", "يردن‎", "يريدوا‎", "أردت‎", "أراد", "أراد", "أرد‎", "أردت‎", "أريد‎", "أردتما‎", "أريدا‎", "أردنا‎", "أردتم‎", "أريدوا‎", "أردت‎", "أريدت‎", "أريدتا‎", "أردتن‎", "أردن‎", "تراد‎", "يراد‎", "ترادان‎", "يرادان‎", "نراد‎", "ترادون‎", "يرادون‎", "ترادين‎", "تراد‎", "ترادان‎", "تردن‎", "يردن‎", "تراد‎", "يراد‎", "ترادا‎", "يرادا‎", "نراد‎", "ترادوا‎", "يرادوا‎", "ترادي‎", "تراد‎", "ترادا‎", "تردن‎", "يردن‎", "ترد‎", "يرد‎", "ترادا‎", "يرادا‎", "نرد‎", "ترادوا‎", "يرادوا‎", "ترادي‎", "ترد‎", "ترادا‎", "تردن‎", "يردن‎", "أرد‎", "اعتقاد‎", "معتقد‎", "معتقد‎", "اعتقدت‎", "اعتقدت‎", "اعتقد", "اعتقدتما‎", "اعتقدا‎", "اعتقدنا‎", "اعتقدتم‎", "اعتقدوا‎", "اعتقدت‎", "اعتقدت‎", "اعتقدتا‎", "اعتقدتن‎", "اعتقدن‎", "تعتقد‎", "يعتقد‎", "تعتقدان‎", "يعتقدان‎", "نعتقد‎", "تعتقدون‎", "يعتقدون‎", "تعتقدين‎", "تعتقد‎", "تعتقدان‎", "تعتقدن‎", "يعتقدن‎", "تعتقد‎", "يعتقد‎", "تعتقدا‎", "يعتقدا‎", "نعتقد‎", "تعتقدوا‎", "يعتقدوا‎", "تعتقدي‎", "تعتقد‎", "تعتقدا‎", "تعتقدن‎", "يعتقدن‎", "تعتقد‎", "يعتقد‎", "تعتقدا‎", "يعتقدا‎", "نعتقد‎", "تعتقدوا‎", "يعتقدوا‎", "تعتقدي‎", "تعتقد‎", "تعتقدا‎", "تعتقدن‎", "يعتقدن‎", "اعتقدي‎", "اعتقدن‎", "اعتقد", "اعتقدا‎", "اعتقدوا‎", "اعتقدت‎", "اعتقدت‎", "اعتقد", "اعتقدتما‎", "اعتقدا‎", "اعتقدنا‎", "اعتقدتم‎", "اعتقدوا‎", "اعتقدت‎", "اعتقدت‎", "اعتقدتا‎", "اعتقدتن‎", "اعتقدن‎", "أعتقد‎", "تعتقد‎", "يعتقد‎", "تعتقدان‎", "يعتقدان‎", "نعتقد‎", "تعتقدون‎", "يعتقدون‎", "تعتقدين‎", "تعتقد‎", "تعتقدان‎", "تعتقدن‎", "يعتقدن‎", "أعتقد‎", "تعتقد‎", "يعتقد‎", "تعتقدا‎", "يعتقدا‎", "نعتقد‎", "تعتقدوا‎", "يعتقدوا‎", "تعتقدي‎", "تعتقد‎", "تعتقدا‎", "تعتقدن‎", "يعتقدن‎", "أعتقد‎", "تعتقد‎", "يعتقد‎", "تعتقدا‎", "يعتقدا‎", "نعتقد‎", "تعتقدوا‎", "يعتقدوا‎", "تعتقدي‎", "تعتقد‎", "تعتقدا‎", "تعتقدن‎", "يعتقدن‎", "اعتقد", "اعتقدا‎", "اعتقدوا‎", "إيجاد‎", "موجد‎", "موجد‎", "أوجدت‎", "أوجدت‎", "أوجد", "أوجدتما‎", "أوجدا‎", "أوجدنا‎", "أوجدتم‎", "أوجدوا‎", "أوجدت‎", "أوجدت‎", "أوجدتا‎", "أوجدتن‎", "أوجدن‎", "أوجد", "توجد‎", "يوجد‎", "توجدان‎", "يوجدان‎", "نوجد‎", "توجدون‎", "يوجدون‎", "توجدين‎", "توجد‎", "توجدان‎", "توجدن‎", "يوجدن‎", "أوجد", "توجد‎", "يوجد‎", "توجدا‎", "يوجدا‎", "نوجد‎", "توجدوا‎", "يوجدوا‎", "توجدي‎", "توجد‎", "توجدا‎", "توجدن‎", "يوجدن‎", "أوجد", "توجد‎", "يوجد‎", "توجدا‎", "يوجدا‎", "نوجد‎", "توجدوا‎", "يوجدوا‎", "توجدي‎", "توجد‎", "توجدا‎", "توجدن‎", "يوجدن‎", "أوجد", "أوجدا‎", "أوجدوا‎", "أوجدي‎", "أوجدن‎", "أوجدت‎", "أوجدت‎", "أوجد", "أوجدتما‎", "أوجدا‎", "أوجدنا‎", "أوجدتم‎", "أوجدوا‎", "أوجدت‎", "أوجدت‎", "أوجدتا‎", "أوجدتن‎", "أوجدن‎", "أوجد", "توجد‎", "يوجد‎", "توجدان‎", "يوجدان‎", "نوجد‎", "توجدون‎", "يوجدون‎", "توجدين‎", "توجد‎", "توجدان‎", "توجدن‎", "يوجدن‎", "أوجد", "توجد‎", "يوجد‎", "توجدا‎", "يوجدا‎", "نوجد‎", "توجدوا‎", "يوجدوا‎", "توجدي‎", "توجد‎", "توجدا‎", "توجدن‎", "يوجدن‎", "أوجد", "توجد‎", "يوجد‎", "توجدا‎", "يوجدا‎", "نوجد‎", "توجدوا‎", "يوجدوا‎", "توجدي‎", "توجد‎", "توجدا‎", "توجدن‎", "يوجدن‎", "اعتقد", "اريد", "أذهب", "إذهاب‎", "مذهب‎", "مذهب‎", "أذهبت‎", "أذهبت‎", "أذهب", "أذهبتما‎", "أذهبا‎", "أذهبنا‎", "أذهبتم‎", "أذهبوا‎", "أذهبت‎", "أذهبت‎", "أذهبتا‎", "أذهبتن‎", "أذهبن‎", "أذهب", "تذهب‎", "يذهب‎", "تذهبان‎", "يذهبان‎", "نذهب‎", "تذهبون‎", "يذهبون‎", "تذهبين‎", "تذهب‎", "تذهبان‎", "تذهبن‎", "يذهبن‎", "أذهب", "تذهب‎", "يذهب‎", "تذهبا‎", "يذهبا‎", "نذهب‎", "تذهبوا‎", "يذهبوا‎", "تذهبي‎", "تذهب‎", "تذهبا‎", "تذهبن‎", "يذهبن‎", "أذهب", "تذهب‎", "يذهب‎", "تذهبا‎", "يذهبا‎", "نذهب‎", "تذهبوا‎", "يذهبوا‎", "تذهبي‎", "تذهب‎", "تذهبا‎", "تذهبن‎", "يذهبن‎", "أذهب", "أذهبا‎", "أذهبوا‎", "أذهبي‎", "أذهبن‎", "أذهبت‎", "أذهبت‎", "أذهب", "أذهبتما‎", "أذهبا‎", "أذهبنا‎", "أذهبتم‎", "أذهبوا‎", "أذهبت‎", "أذهبت‎", "أذهبتا‎", "أذهبتن‎", "أذهبن‎", "أذهب", "تذهب‎", "يذهب‎", "تذهبان‎", "يذهبان‎", "نذهب‎", "تذهبون‎", "يذهبون‎", "تذهبين‎", "تذهب‎", "تذهبان‎", "تذهبن‎", "يذهبن‎", "أذهب", "تذهب‎", "يذهب‎", "تذهبا‎", "يذهبا‎", "نذهب‎", "تذهبوا‎", "يذهبوا‎", "تذهبي‎", "تذهب‎", "تذهبا‎", "تذهبن‎", "يذهبن‎", "أذهب", "تذهب‎", "يذهب‎", "تذهبا‎", "يذهبا‎", "نذهب‎", "تذهبوا‎", "يذهبوا‎", "تذهبي‎", "تذهب‎", "تذهبا‎", "تذهبن‎", "يذهبن‎", "نذهب", "مذهب‎", "ذاهب‎", "مذهوب‎", "ذهبت‎", "ذهبت‎", "ذهب", "ذهبتما‎", "ذهبا‎", "ذهبنا‎", "ذهبتم‎", "ذهبوا‎", "ذهبت‎", "ذهبت‎", "ذهبتا‎", "ذهبتن‎", "ذهبن‎", "أذهب‎", "تذهب‎", "يذهب‎", "تذهبان‎", "يذهبان‎", "نذهب‎", "تذهبون‎", "يذهبون‎", "تذهبين‎", "تذهب‎", "تذهبان‎", "تذهبن‎", "يذهبن‎", "أذهب‎", "تذهب‎", "يذهب‎", "تذهبا‎", "يذهبا‎", "نذهب‎", "تذهبوا‎", "يذهبوا‎", "تذهبي‎", "تذهب‎", "تذهبا‎", "تذهبن‎", "يذهبن‎", "أذهب‎", "تذهب‎", "يذهب‎", "تذهبا‎", "يذهبا‎", "نذهب‎", "تذهبوا‎", "يذهبوا‎", "تذهبي‎", "تذهب‎", "تذهبا‎", "تذهبن‎", "يذهبن‎", "اذهب‎", "اذهبا‎", "اذهبوا‎", "اذهبي‎", "اذهبن‎", "ذهب", "يذهب‎", "يذهب‎", "يذهب‎", "أظن", "ظن", "ظان‎", "مظنون‎", "ظننت‎", "ظننت‎", "ظن", "ظننتما‎", "ظنا‎", "ظننا‎", "ظننتم‎", "ظنوا‎", "ظننت‎", "ظنت‎", "ظنتا‎", "ظننتن‎", "ظنن‎", "أظن‎", "تظن‎", "يظن‎", "تظنان‎", "يظنان‎", "نظن‎", "تظنون‎", "يظنون‎", "تظنين‎", "تظن‎", "تظنان‎", "تظنن‎", "يظنن‎", "أظن‎", "تظن‎", "يظن‎", "تظنا‎", "يظنا‎", "نظن‎", "تظنوا‎", "يظنوا‎", "تظني‎", "تظن‎", "تظنا‎", "تظنن‎", "يظنن‎", "أظنن‎", "تظنا‎", "يظنا‎", "تظنوا‎", "يظنوا‎", "تظنن‎", "تظني‎", "تظنا‎", "تظنن‎", "يظنن‎", "أظن", "أظن", "تظن‎", "تظن‎", "يظنن‎", "يظن‎", "ظني‎", "اظنن‎", "يظن‎", "نظنن‎", "نظن‎", "نظن‎", "تظنن‎", "تظن‎", "تظن‎", "ظنا‎", "اظنن‎", "ظن", "ظن", "ظنوا‎", "اذهب‎", "اذهبا‎", "اذهبوا‎", "ظننت‎", "ظننت‎", "ظن", "ظننتما‎", "ظنا‎", "ظننا‎", "ظننتم‎", "ظنوا‎", "ظننت‎", "ظنت‎", "ظنتا‎", "ظننتن‎", "ظنن‎", "أظن‎", "تظن‎", "يظن‎", "تظنان‎", "يظنان‎", "نظن‎", "تظنون‎", "يظنون‎", "تظنين‎", "تظن‎", "تظنان‎", "تظنن‎", "يظنن‎", "أظن‎", "تظن‎", "يظن‎", "تظنا‎", "يظنا‎", "نظن‎", "تظنوا‎", "يظنوا‎", "تظني‎", "تظن‎", "تظنا‎", "تظنن‎", "يظنن‎", "أظنن‎", "تظنا‎", "يظنا‎", "تظنوا‎", "يظنوا‎", "أظن‎", "تظني‎", "تظنا‎", "تظنن‎", "يظنن‎", "تظنن‎", "تظن‎", "تظن‎", "يظنن‎", "يظن‎", "يظن‎", "نظنن‎", "نظن‎", "نظن‎", "تظنن‎", "تظن‎", "تظن‎", "ذهبت", "تظن", "توجدت‎", "توجدت‎", "توجد", "توجدتما‎", "توجدا‎", "توجدنا‎", "توجدتم‎", "توجدوا‎", "توجدت‎", "توجدت‎", "توجدتا‎", "توجدتن‎", "توجدن‎", "أتوجد‎", "ʾتتوجد‎", "يتوجد‎", "تتوجدان‎", "يتوجدان‎", "نتوجد‎", "تتوجدون‎", "يتوجدون‎", "تتوجدين‎", "تتوجد‎", "تتوجدان‎", "تتوجدن‎", "يتوجدن‎", "أتوجد‎", "ʾتتوجد‎", "يتوجد‎", "تتوجدا‎", "يتوجدا‎", "نتوجد‎", "تتوجدوا‎", "يتوجدوا‎", "تتوجدي‎", "تتوجد‎", "تتوجدا‎", "تتوجدن‎", "يتوجدن‎", "أتوجد‎", "ʾتتوجد‎", "يتوجد‎", "تتوجدا‎", "يتوجدا‎", "نتوجد‎", "تتوجدوا‎", "يتوجدوا‎", "تتوجدي‎", "تتوجد‎", "تتوجدا‎", "تتوجدن‎", "يتوجدن‎", "توجد", "توجدا‎", "توجدوا‎", "توجدي‎", "توجدن‎", "توجد", "يتوجد‎", "يتوجد‎", "يتوجد‎", "توجد", "متوجد‎", "متوجد‎", "دعاء‎", "داع‎", "مدعو‎", "دعوت‎", "دعوت‎", "دعا", "دعوتما‎", "دعوا‎", "دعونا‎", "دعوتم‎", "دعوا‎", "دعوت‎", "دعت‎", "دعتا‎", "دعوتن‎", "دعون‎", "أدعو‎", "تدعو‎", "يدعو‎", "تدعوان‎", "يدعوان‎", "ندعو‎", "تدعون‎", "يدعون‎", "تدعين‎", "تدعو‎", "تدعوان‎", "تدعون‎", "يدعون‎", "أدعو‎", "تدعو‎", "يدعو‎", "تدعوا‎", "يدعوا‎", "ندعو‎", "تدعوا‎", "يدعوا‎", "تدعي‎", "تدعو‎", "تدعوا‎", "تدعون‎", "يدعون‎", "أدع‎", "تدع‎", "يدع‎", "تدعوا‎", "يدعوا‎", "ندع‎", "تدعوا‎", "يدعوا‎", "تدعي‎", "تدع‎", "تدعوا‎", "تدعون‎", "يدعون‎", "ادع‎", "ادعوا‎", "ادعوا‎", "ادعي‎", "ادعون‎", "دعيت‎", "دعيت‎", "دعي‎", "دعيتما‎", "دعيا‎", "دعينا‎", "دعيتم‎", "دعوا‎", "دعيت‎", "دعيت‎", "دعيتا‎", "دعيتن‎", "دعين‎", "أدعى‎", "تدعى‎", "يدعى‎", "تدعيان‎", "يدعيان‎", "ندعى‎", "تدعون‎", "يدعون‎", "تدعين‎", "تدعى‎", "تدعيان‎", "تدعين‎", "يدعين‎", "أدعى‎", "تدعى‎", "يدعى‎", "تدعيا‎", "يدعيا‎", "ندعى‎", "تدعوا‎", "يدعوا‎", "تدعي‎", "تدعى‎", "تدعيا‎", "تدعين‎", "يدعين‎", "أدع‎", "تدع‎", "يدع‎", "تدعيا‎", "يدعيا‎", "ندع‎", "تدعوا‎", "يدعوا‎", "تدعي‎", "تدع‎", "تدعيا‎", "تدعين‎", "يدعين‎", "تفكر", "متفكر‎", "متفكر‎", "تفكرت‎", "تفكرت‎", "تفكر", "تفكرتما‎", "تفكرا‎", "تفكرنا‎", "تفكرتم‎", "تفكروا‎", "تفكرت‎", "تفكرت‎", "تفكرتا‎", "تفكرتن‎", "تفكرن‎", "أتفكر‎", "تتفكر‎", "يتفكر‎", "تتفكران‎", "يتفكران‎", "نتفكر‎", "تتفكرون‎", "يتفكرون‎", "تتفكرين‎", "تتفكر‎", "تتفكران‎", "تتفكرن‎", "يتفكرن‎", "أتفكر‎", "تتفكر‎", "يتفكر‎", "تتفكرا‎", "يتفكرا‎", "نتفكر‎", "تتفكروا‎", "يتفكروا‎", "تتفكري‎", "تتفكر‎", "تتفكرا‎", "تتفكرن‎", "يتفكرن‎", "أتفكر‎", "تتفكر‎", "يتفكر‎", "تتفكرا‎", "يتفكرا‎", "نتفكر‎", "تتفكروا‎", "يتفكروا‎", "تتفكري‎", "تتفكر‎", "تتفكرا‎", "تتفكرن‎", "يتفكرن‎", "تفكر", "تفكرا‎", "تفكروا‎", "تفكري‎", "تفكرن‎", "تفكر", "يتفكر‎", "يتفكر‎", "يتفكر‎", "مجيء‎", "جيء‎", "جيئة‎", "جيئة‎", "جاء", "مجيء‎", "جئت‎", "جئت‎", "جاء", "جئتما‎", "جاءا‎", "جئنا‎", "جئتم‎", "جائوا‎", "جاؤوا‎", "جئت‎", "جاءت‎", "جاءتا‎", "جئتن‎", "جئن‎", "أجيء‎", "تجيء‎", "يجيء‎", "تجيئان‎", "يجيئان‎", "نجيء‎", "تجيئون‎", "تجيؤون‎", "يجيئون‎", "يجيؤون‎", "تجيئين‎", "تجيء‎", "تجيئان‎", "تجئن‎", "يجئن‎", "أجيء‎", "تجيء‎", "يجيء‎", "تجيئا‎", "يجيئا‎", "نجيء‎", "تجيئوا‎", "تجيؤوا‎", "يجيئوا‎", "يجيؤوا‎", "تجيئي‎", "تجيء‎", "تجيئا‎", "تجئن‎", "يجئن‎", "أجئ‎", "تجئ‎", "يجئ‎", "تجيئا‎", "يجيئا‎", "نجئ‎", "تجيئوا‎", "تجيؤوا‎", "يجيئوا‎", "يجيؤوا‎", "تجيئي‎", "تجئ‎", "تجيئا‎", "تجئن‎", "يجئن‎", "جئ‎", "جيئا‎", "جيئوا‎", "جيؤوا‎", "جيئي‎", "جئن‎", "جئت‎", "جئت‎", "جيء‎", "جئتما‎", "جيئا‎", "جئنا‎", "جئتم‎", "جيئوا‎", "جيؤوا‎", "جئت‎", "جيئت‎", "جيئتا‎", "جئتن‎", "جئن‎", "أجاء‎", "تجاء‎", "يجاء‎", "تجاءان‎", "يجاءان‎", "نجاء‎", "تجائون‎", "تجاؤون‎", "يجائون‎", "يجاؤون‎", "تجائين‎", "تجاء‎", "تجاءان‎", "تجأن‎", "يجأن‎", "أجاء‎", "تجاء‎", "يجاء‎", "تجاءا‎", "يجاءا‎", "نجاء‎", "تجائوا‎", "تجاؤوا‎", "يجائوا‎", "يجاؤوا‎", "تجائي‎", "تجاء‎", "تجاءا‎", "تجأن‎", "يجأن‎", "أجأ‎", "تجأ‎", "يجأ‎", "تجاءا‎", "يجاءا‎", "نجأ‎", "تجائوا‎", "تجاؤوا‎", "يجائوا‎", "يجاؤوا‎", "تجائي‎", "تجأ‎", "تجاءا‎", "تجأن‎", "يجأن‎", "إرادة‎", "مريد‎", "مراد‎", "أردت‎", "أردت‎", "أراد", "أردتما‎", "أرادا‎", "أردنا‎", "أردتم‎", "أرادوا‎", "أردت‎", "أرادت‎", "أرادتا‎", "أردتن‎", "أردن‎", "أريد‎", "تريد‎", "يريد‎", "تريدان‎", "يريدان‎", "نريد‎", "تريدون‎", "يريدون‎", "تريدين‎", "تريد‎", "تريدان‎", "تردن‎", "يردن‎", "أريد‎", "تريد‎", "يريد‎", "تريدا‎", "يريدا‎", "نريد‎", "تريدوا‎", "يريدوا‎", "تريدي‎", "تريد‎", "تريدا‎", "تردن‎", "يردن‎", "أرد‎", "ترد‎", "يرد‎", "تريدا‎", "يريدا‎", "نرد‎", "تريدوا‎", "يريدوا‎", "تريدي‎", "ترد‎", "تريدا‎", "تردن‎", "يردن‎", "أرد‎", "أريدا‎", "أريدوا‎", "أريدي‎", "أردن‎", "أردت‎", "أردت‎", "أريد‎", "أردتما‎", "أريدا‎", "أردنا‎", "أردتم‎", "أريدوا‎", "أردت‎", "أريدت‎", "أريدتا‎", "أردتن‎", "أردن‎", "أراد", "تراد‎", "يراد‎", "ترادان‎", "يرادان‎", "نراد‎", "ترادون‎", "يرادون‎", "ترادين‎", "تراد‎", "ترادان‎", "تردن‎", "يردن‎", "أراد", "تراد‎", "يراد‎", "ترادا‎", "يرادا‎", "نراد‎", "ترادوا‎", "يرادوا‎", "ترادي‎", "تراد‎", "ترادا‎", "تردن‎", "يردن‎", "أرد‎", "ترد‎", "يرد‎", "ترادا‎", "يرادا‎", "نرد‎", "ترادوا‎", "يرادوا‎", "ترادي‎", "ترد‎", "ترادا‎", "تردن‎", "يردن‎", "إتيان‎", "أتي‎", "مأتاة‎", "مأتى‎", "آت‎", "مأتي‎", "أتيت‎", "أتيت‎", "أتى", "أتيتما‎", "أتيا‎", "أتينا‎", "أتيتم‎", "أتوا‎", "أتيت‎", "أتت‎", "أتتا‎", "أتيتن‎", "أتين‎", "آتي‎", "تأتي‎", "يأتي‎", "تأتيان‎", "يأتيان‎", "نأتي‎", "تأتون‎", "يأتون‎", "تأتين‎", "تأتي‎", "تأتيان‎", "تأتين‎", "يأتين‎", "آتي‎", "تأتي‎", "يأتي‎", "تأتيا‎", "يأتيا‎", "نأتي‎", "تأتوا‎", "يأتوا‎", "تأتي‎", "تأتي‎", "تأتيا‎", "تأتين‎", "يأتين‎", "آت‎", "تأت‎", "يأت‎", "تأتيا‎", "يأتيا‎", "نأت‎", "تأتوا‎", "يأتوا‎", "تأتي‎", "تأت‎", "تأتيا‎", "تأتين‎", "يأتين‎", "ايت‎", "ايتيا‎", "ايتوا‎", "ايتي‎", "ايتين‎", "أتيت‎", "أتيت‎", "أتي‎", "أتيتما‎", "أتيا‎", "أتينا‎", "أتيتم‎", "أتوا‎", "أتيت‎", "أتيت‎", "أتيتا‎", "أتيتن‎", "أتين‎", "أوتى‎", "تؤتى‎", "يؤتى‎", "تؤتيان‎", "يؤتيان‎", "نؤتى‎", "تؤتون‎", "يؤتون‎", "تؤتين‎", "تؤتى‎", "تؤتيان‎", "تؤتين‎", "يؤتين‎", "أوتى‎", "تؤتى‎", "يؤتى‎", "تؤتيا‎", "يؤتيا‎", "نؤتى‎", "تؤتوا‎", "يؤتوا‎", "تؤتي‎", "تؤتى‎", "تؤتيا‎", "تؤتين‎", "يؤتين‎", "أوت‎", "تؤت‎", "يؤت‎", "تؤتيا‎", "يؤتيا‎", "نؤت‎", "تؤتوا‎", "يؤتوا‎", "تؤتي‎", "تؤت‎", "تؤتيا‎", "تؤتين‎", "يؤتين‎", "فعلته", "فعل", "فعل", "فاعل‎", "مفعول‎", "فعلت‎", "فعلت‎", "فعل", "فعلتما‎", "فعلا‎", "فعلنا‎", "فعلتم‎", "فعلوا‎", "فعلت‎", "فعلت‎", "فعلتا‎", "فعلتن‎", "فعلن‎", "أفعل‎", "تفعل‎", "يفعل‎", "تفعلان‎", "يفعلان‎", "نفعل‎", "تفعلون‎", "يفعلون‎", "تفعلين‎", "تفعل‎", "تفعلان‎", "تفعلن‎", "يفعلن‎", "أفعل‎", "تفعل‎", "يفعل‎", "تفعلا‎", "يفعلا‎", "نفعل‎", "تفعلوا‎", "يفعلوا‎", "تفعلي‎", "تفعل‎", "تفعلا‎", "تفعلن‎", "يفعلن‎", "أفعل‎", "تفعل‎", "يفعل‎", "تفعلا‎", "يفعلا‎", "نفعل‎", "تفعلوا‎", "يفعلوا‎", "تفعلي‎", "تفعل‎", "تفعلا‎", "تفعلن‎", "يفعلن‎", "افعل‎", "افعلا‎", "افعلوا‎", "افعلي‎", "افعلن‎", "فعلت‎", "فعلت‎", "فعل", "فعلتما‎", "فعلا‎", "فعلنا‎", "فعلتم‎", "فعلوا‎", "فعلت‎", "فعلت‎", "فعلتا‎", "فعلتن‎", "فعلن‎", "أفعل‎", "تفعل‎", "يفعل‎", "تفعلان‎", "يفعلان‎", "نفعل‎", "تفعلون‎", "يفعلون‎", "تفعلين‎", "تفعل‎", "تفعلان‎", "تفعلن‎", "يفعلن‎", "أفعل‎", "تفعل‎", "يفعل‎", "تفعلا‎", "يفعلا‎", "نفعل‎", "تفعلوا‎", "يفعلوا‎", "تفعلي‎", "تفعل‎", "تفعلا‎", "تفعلن‎", "يفعلن‎", "أفعل‎", "تفعل‎", "يفعل‎", "تفعلا‎", "يفعلا‎", "نفعل‎", "تفعلوا‎", "يفعلوا‎", "تفعلي‎", "تفعل‎", "تفعلا‎", "تفعلن‎", "يفعلن‎", "قصد", "مقصد‎", "قاصد‎", "مقصود‎", "قصدت‎", "قصدت‎", "قصد", "قصدتما‎", "قصدا‎", "قصدنا‎", "قصدتم‎", "قصدوا‎", "قصدت‎", "قصدت‎", "قصدتا‎", "قصدتن‎", "قصدن‎", "أقصد‎", "تقصد‎", "يقصد‎", "تقصدان‎", "يقصدان‎", "نقصد‎", "تقصدون‎", "يقصدون‎", "تقصدين‎", "تقصد‎", "تقصدان‎", "تقصدن‎", "يقصدن‎", "أقصد‎", "تقصد‎", "يقصد‎", "تقصدا‎", "يقصدا‎", "نقصد‎", "تقصدوا‎", "يقصدوا‎", "تقصدي‎", "تقصد‎", "تقصدا‎", "تقصدن‎", "يقصدن‎", "أقصد‎", "تقصد‎", "يقصد‎", "تقصدا‎", "يقصدا‎", "نقصد‎", "تقصدوا‎", "يقصدوا‎", "تقصدي‎", "تقصد‎", "تقصدا‎", "تقصدن‎", "يقصدن‎", "اقصد‎", "اقصدا‎", "اقصدوا‎", "اقصدي‎", "اقصدن‎", "قصدت‎", "قصدت‎", "قصد", "قصدتما‎", "قصدا‎", "قصدنا‎", "قصدتم‎", "قصدوا‎", "قصدت‎", "قصدت‎", "قصدتا‎", "قصدتن‎", "قصدن‎", "أقصد‎", "تقصد‎", "يقصد‎", "تقصدان‎", "يقصدان‎", "نقصد‎", "تقصدون‎", "يقصدون‎", "تقصدين‎", "تقصد‎", "تقصدان‎", "تقصدن‎", "يقصدن‎", "أقصد‎", "تقصد‎", "يقصد‎", "تقصدا‎", "يقصدا‎", "نقصد‎", "تقصدوا‎", "يقصدوا‎", "تقصدي‎", "تقصد‎", "تقصدا‎", "تقصدن‎", "يقصدن‎", "أقصد‎", "تقصد‎", "يقصد‎", "تقصدا‎", "يقصدا‎", "نقصد‎", "تقصدوا‎", "يقصدوا‎", "تقصدي‎", "تقصد‎", "تقصدا‎", "تقصدن‎", "يقصدن‎", "زائل‎", "زلت‎", "زلت‎", "زال", "زلتما‎", "زالا‎", "زلنا‎", "زلتم‎", "زالوا‎", "زلت‎", "زالت‎", "زالتا‎", "زلتن‎", "زلن‎", "أزال‎", "تزال‎", "يزال‎", "تزالان‎", "يزالان‎", "نزال‎", "تزالون‎", "يزالون‎", "تزالين‎", "تزال‎", "تزالان‎", "تزلن‎", "يزلن‎", "أزال‎", "تزال‎", "يزال‎", "تزالا‎", "يزالا‎", "نزال‎", "تزالوا‎", "يزالوا‎", "تزالي‎", "تزال‎", "تزالا‎", "تزلن‎", "يزلن‎", "أزل‎", "تزل‎", "يزل‎", "تزالا‎", "يزالا‎", "نزل‎", "تزالوا‎", "يزالوا‎", "تزالي‎", "تزل‎", "تزالا‎", "تزلن‎", "يزلن‎", "زل‎", "زالا‎", "زالوا‎", "زالي‎", "زلن‎", "عملت‎", "عملت‎", "عمل", "عملتما‎", "عملا‎", "عملنا‎", "عملتم‎", "عملوا‎", "عملت‎", "عملت‎", "عملتا‎", "عملتن‎", "عملن‎", "أعمل‎", "تعمل‎", "يعمل‎", "تعملان‎", "يعملان‎", "نعمل‎", "تعملون‎", "يعملون‎", "تعملين‎", "تعملن‎", "يعملن‎", "أعمل‎", "تعمل‎", "يعمل‎", "تعملا‎", "يعملا‎", "نعمل‎", "تعملوا‎", "يعملوا‎", "تعملي‎", "أعمل‎", "تعمل‎", "يعمل‎", "نعمل‎", "اعمل‎", "اعملا‎", "اعملوا‎", "اعملي‎", "اعملن‎", "عملت‎", "عملت‎", "عمل", "عملتما‎", "عملا‎", "عملنا‎", "عملتم‎", "عملوا‎", "عملت‎", "عملت‎", "عملتا‎", "عملتن‎", "عملن‎", "أعمل‎", "تعمل‎", "يعمل‎", "تعملان‎", "يعملان‎", "نعمل‎", "تعملون‎", "يعملون‎", "تعملين‎", "تعملن‎", "يعملن‎", "أعمل", "تعمل‎", "يعمل‎", "تعملا‎", "يعملا‎", "نعمل‎", "تعملوا‎", "يعملوا‎", "تعملي‎", "أعمل‎", "تعمل‎", "يعمل‎", "نعمل‎", "عملت‎", "عننت‎", "عننت‎", "عن", "عننتما‎", "عنا‎", "عننا‎", "عننتم‎", "عنوا‎", "عننت‎", "عنت‎", "عنتا‎", "عننتن‎", "عنن‎", "أعن‎", "أعن‎", "تعن‎", "تعن‎", "يعن‎", "يعن‎", "تعنان‎", "تعنان‎", "يعنان‎", "يعنان‎", "نعن‎", "نعن‎", "تعنون‎", "تعنون‎", "يعنون‎", "يعنون‎", "تعنين‎", "تعنين‎", "تعنن‎", "تعنن‎", "يعنن‎", "يعنن‎", "أعن‎", "أعن‎", "تعن‎", "تعن‎", "يعن‎", "يعن‎", "تعنا‎", "تعنا‎", "يعنا‎", "يعنا‎", "نعن‎", "نعن‎", "تعنوا‎", "تعنوا‎", "يعنوا‎", "يعنوا‎", "تعني‎", "تعني‎", "أعن‎", "أعنن‎", "أعن‎", "أعنن‎", "تعن‎", "تعنن‎", "تعن‎", "تعنن‎", "يعن‎", "يعنن‎", "يعن‎", "يعنن‎", "نعن‎", "نعنن‎", "نعن‎", "نعنن‎", "عن", "عن", "اعنن‎", "عن", "عن", "اعنن‎", "عنا‎", "عنا‎", "‎عنوا‎", "عني‎", "عني‎", "اعنن‎", "اعنن‎", "يعن‎", "يعن‎", "يعن‎", "يعنن‎", "قمت‎", "قمت‎", "قام", "قمتما‎", "قاما‎", "قمنا‎", "قمتم‎", "قاموا‎", "قمت‎", "قامت‎", "قامتا‎", "قمتن‎", "قمن‎", "أقوم‎", "تقوم‎", "يقوم‎", "تقومان‎", "يقومان‎", "نقوم‎", "تقومون‎", "يقومون‎", "تقومين‎", "تقمن‎", "يقمن‎", "أقوم‎", "تقوم‎", "يقوم‎", "تقوما‎", "يقوما‎", "نقوم‎", "تقوموا‎", "يقوموا‎", "تقومي‎", "أقم‎", "تقم‎", "يقم‎", "نقم‎", "قم‎", "قوما‎", "قوموا‎", "قومي‎", "قيم‎", "يقام‎", "يقام‎", "يقم‎", "وددت‎", "وددت‎", "ود", "وددتما‎", "ودا‎", "وددنا‎", "وددتم‎", "ودوا‎", "وددت‎", "ودت‎", "ودتا‎", "وددتن‎", "وددن‎", "أود‎", "تود‎", "يود‎", "تودان‎", "يودان‎", "نود‎", "تودون‎", "يودون‎", "تودين‎", "توددن‎", "يوددن‎", "أود‎", "تود‎", "يود‎", "تودا‎", "يودا‎", "نود‎", "تودوا‎", "يودوا‎", "تودي‎", "أود‎", "أودد‎", "تود‎", "تودد‎", "يود‎", "يودد‎", "نود‎", "نودد‎", "ود", "ايدد‎", "ودي‎", "ايددن‎", "وددت‎", "وددت‎", "ود", "وددتما‎", "ودا‎", "وددنا‎", "وددتم‎", "ودوا‎", "وددت‎", "ودت‎", "ودتا‎", "وددتن‎", "وددن‎", "أود‎", "تود‎", "يود‎", "تودان‎", "يودان‎", "نود‎", "تودون‎", "يودون‎", "تودين‎", "توددن‎", "يوددن‎", "أود‎", "تود‎", "يود‎", "تودا‎", "يودا‎", "نود‎", "تودوا‎", "يودوا‎", "تودي‎", "أود‎", "أودد‎", "تود‎", "تودد‎", "يود‎", "يودد‎", "نود‎", "نودد‎", "حاولت‎", "حاولت‎", "حاول", "حاولتما‎", "حاولا‎", "حاولنا‎", "حاولتم‎", "حاولوا‎", "حاولت‎", "حاولت‎", "حاولتا‎", "حاولتن‎", "حاولن‎", "أحاول‎", "تحاول‎", "يحاول‎", "تحاولان‎", "يحاولان‎", "نحاول‎", "تحاولون‎", "يحاولون‎", "تحاولين‎", "تحاولن‎", "يحاولن‎", "أحاول‎", "تحاول‎", "يحاول‎", "تحاولا‎", "يحاولا‎", "نحاول‎", "تحاولوا‎", "يحاولوا‎", "تحاولي‎", "أحاول‎", "تحاول‎", "يحاول‎", "نحاول‎", "حاول", "حاولا‎", "حاولوا‎", "حاولي‎", "حاولن‎", "حوولت‎", "حوولت‎", "حوول‎", "حوولتما‎", "حوولا‎", "حوولنا‎", "حوولتم‎", "حوولوا‎", "حوولت‎", "حوولت‎", "حوولتا‎", "حوولتن‎", "حوولن‎", "أحاول‎", "تحاول‎", "يحاول‎", "تحاولان‎", "يحاولان‎", "نحاول‎", "تحاولون‎", "يحاولون‎", "تحاولين‎", "تحاولن‎", "يحاولن‎", "أحاول‎", "تحاول‎", "يحاول‎", "تحاولا‎", "يحاولا‎", "نحاول‎", "تحاولوا‎", "يحاولوا‎", "تحاولي‎", "أحاول‎", "تحاول‎", "يحاول‎", "نحاول‎", "احتجت‎", "احتجت‎", "احتاج", "احتجتما‎", "احتاجا‎", "احتجنا‎", "احتجتم‎", "احتاجوا‎", "احتجت‎", "احتاجت‎", "احتاجتا‎", "احتجتن‎", "احتجن‎", "أحتاج‎", "تحتاج‎", "يحتاج‎", "تحتاجان‎", "يحتاجان‎", "نحتاج‎", "تحتاجون‎", "يحتاجون‎", "تحتاجين‎", "تحتجن‎", "يحتجن‎", "أحتاج‎", "تحتاج‎", "يحتاج‎", "تحتاجا‎", "يحتاجا‎", "نحتاج‎", "تحتاجوا‎", "يحتاجوا‎", "تحتاجي‎", "أحتج‎", "تحتج‎", "يحتج‎", "نحتج‎", "احتج‎", "احتاجي‎", "احتجت‎", "احتجت‎", "احتيج‎", "احتجتما‎", "احتيجا‎", "احتجنا‎", "احتجتم‎", "احتيجوا‎", "احتجت‎", "احتيجت‎", "احتيجتا‎", "احتجتن‎", "احتجن‎", "أحتاج‎", "تحتاج‎", "يحتاج‎", "تحتاجان‎", "يحتاجان‎", "نحتاج‎", "تحتاجون‎", "يحتاجون‎", "تحتاجين‎", "تحتجن‎", "يحتجن‎", "أحتاج‎", "تحتاج‎", "يحتاج‎", "تحتاجا‎", "يحتاجا‎", "نحتاج‎", "تحتاجوا‎", "يحتاجوا‎", "تحتاجي‎", "أحتج‎", "تحتج‎", "يحتج‎", "نحتج‎", "عنيت‎", "عنيت‎", "عنى", "عنيتما‎", "عنيا‎", "عنينا‎", "عنيتم‎", "عنوا‎", "عنيت‎", "عنت‎", "عنتا‎", "عنيتن‎", "عنين‎", "أعني‎", "تعني‎", "يعني‎", "تعنيان‎", "يعنيان‎", "نعني‎", "تعنون‎", "يعنون‎", "تعنين‎", "يعنين‎", "أعني‎", "تعني‎", "يعني‎", "تعنيا‎", "يعنيا‎", "نعني‎", "تعنوا‎", "يعنوا‎", "أعن‎", "تعن‎", "يعن‎", "نعن‎", "اعن‎", "اعنيا‎", "اعنوا‎", "اعني‎", "اعنين‎", "عنيت‎", "عنيت‎", "عني‎", "عنيتما‎", "عنيا‎", "عنينا‎", "عنيتم‎", "عنوا‎", "عنيت‎", "عنيت‎", "عنيتا‎", "عنيتن‎", "عنين‎", "أعنى‎", "تعنى‎", "يعنى‎", "تعنيان‎", "يعنيان‎", "نعنى‎", "تعنون‎", "يعنون‎", "تعنين‎", "يعنين‎", "تعنيا‎", "يعنيا‎", "تعنوا‎", "يعنوا‎", "تعني‎", "أعن‎", "تعن‎", "يعن‎", "نعن‎", "يعنين", "عندي‎", "عندنا‎", "عندك‎", "عندك‎", "عندكما‎", "عندكم‎", "عندكن‎", "عنده‎", "عندها‎", "عندهما‎", "عندهم‎", "عندهن‎", "بقاء", "البقاء‎", "بقاء", "البقاء‎", "بقاء", "بقاء", "البقاء‎", "بقاء", "بقاء", "البقاء‎", "بقاء"], cS = ["جيد", "آخر", "رائع", "أفضل", "جيدة", "نفس", "فقط", "مجرد", "كبير", "الأفضل", "عظيم", "جميلة", "كبيرة", "رائعة", "جديد", "صغيرة", "الصغير", "متأكد", "مهما", "صغير", "جيدا", "الصغيرة", "أكبر", "جديدة", "افضل", "الجديد", "طويلة", "ممكن", "اخر", "طويل", "الممكن", "الخاصة", "سيئة", "الكبير", "حقيقي", "بعيدا", "الجيد", "مهم", "الجديدة", "كثير", "الكبيرة", "القليل", "ممتاز", "الحقيقي", "سيء", "معا", "قليل", "بعيد", "واضح", "مختلف", "متأكدة", "الصعب", "أسوأ", "حوالي", "كامل", "سيئ", "بالإمكان", "بكثير", "خاص", "سوية", "مختلفة", "قريب", "الأخير", "الأخيرة", "الافضل", "خير"], uS = ["واو", "هيا", "آه", "هيه", "هاى", "أوه", "أخخ", "هووه", "صه", "أوبس", "أها", "آخ", "أح", "شو", "ههههه"], pS = ["كلغ", "ملغ", "الكوارت", "جرام", "جالون", "ربع ", "كوارتات", "لتر", "سنتيلتر", "مليمتر", "دزينة", "ملاعق", "ذراع", "قبضة", "عربية", "قصبة", "بريد", "قدم", "ربع"], Aea = ["اليوم", "يوم", "ليلة", "دقيقة", "ساعة", "عام", "دقائق", "سنة", "الساعة", "أيام", "العام", "الأسبوع", "غدا", "ساعات", "أمس", "أشهر", "الأيام", "شهر", "السنة", "الغد", "يوما", "ثانية", "ثوان", "أسبوع", "أسابيع", "أسبوعا", "بالأمس"], mS = ["الأمر", "الأشياء", "الشيء", "الأمور", "الامر", "أشياء", "جزء", "الاشياء", "الامور", "الطريقة", "طريقا", "طرق", "قطعة", "الأجزاء", "مادة", "مرات", "بالمئة", "جانب", "جوانب", "بند", "عنصر", "عناصر", "بنود", "فكرة", "موضوع", "تفصيل", "تفاصيل", "فرق", "فروق"], gS = ["نعم", "حسنا", "إنه", "إني", "إنها", "إنك", "إنكم", "إنهم", "إنكما", "إنهما", "إننا", "إنهن", "فإن", "إنني", "كلا", "أجل", "أنه", "أنك", "انها", "أنها", "بأن", "أنني", "أنكم", "أنهما", "أنكما", "أنهن", "أنهم", "انك", "أني", "أننا", "انهم", "بأنك", "لأنه", "بأنه", "اني", "أننى", "انني", "اننا", "بأنني", "اننى", "بأني", "بأنها", "وأن", "بأننا", "للتو", "ها", "رجاء", "تفضل", "اجل", "حالك", "فضلك", "أرجوك", "هكذا", "انة", "بلى", "أعلى", "انى", "لا", "لن", "لم", "ولا", "ألا", "ولم", "ولن", "عدم", "فلا", "فلن", "يلا", "يلة"], Eea = ["السيد", "السيدة", "افندم", "سعادتك", "استاذة", "استاذ", "مدام", "أستاذ", "أسـتاذة", "الأخ", "الأخت"], zS = ["عندما", "مثل", "بالطبع", "لأن", "إذن", "بشكل", "متى", "حتى", "قبل", "ثم", "عند", "حيث", "بينما", "لمدة", "مثلك", "حين", "بأي", "زلت", "وعندما", "أثناء", "حينما", "أولا", "لاحقا", "أما", "وإلا", "لفترة", "كلما", "عندنا", "إلا", "الا"];
var eh = {};
Object.defineProperty(eh, "__esModule", {
  value: !0
});
eh.default = function() {
  return {
    // This export contains all of the above words.
    all: [].concat(Sea, qea, Pea, Tea, Rea, Oea, Mea, Cea, Lea, Iea, Wea, Fea, Dea, Bea, Nea, Uea, Hea, Vea, Kea)
  };
};
const Sea = ["یک", "دو", "سه", "چهار", "پنج", "شش", "هفت", "هشت", "نه", "ده", "یازده", "دوازده", "سیزده", "چهارده", "پانزده", "شانزده", "هفده", "هجده", "نوزده", "بیست", "صد", "هزار", "میلیون", "میلیارد"], qea = ["اول", "اوّل", "دوم", "سوم", "چهارم", "پنجم", "ششم", "هفتم", "هشتم", "نهم", "دهم", "یازدهم", "دوازدهم", "سیزدهم", "چهاردهم", "پانزدهم", "شانزدهم", "هفدهم", "هجدهم", "نوزدهم", "بیستم"], Pea = ["مرا", "من را", "من‌را", "به من", "تو را", "شما را", "شما", "به تو", "به شما", "اون رو", "اونو", "به اون", "اون", "او را", "به او", "او", "به ایشان", "ایشان را", "ایشان", "به ایشون", "ایشون رو", "ایشون را", "ایشون", "این", "این را", "آن", "به این", "به آن", "آن را", "این رو", "اینو", "ما را", "به ما", "به اونا", "آن‌ها", "آنها را", "آن‌ها را", "به آنها", "به آن‌ها", "اونا", "اونارو", "اونا رو", "من", "تو", "ما", "آنها"], Tea = [], Rea = [], Oea = ["خودم", "خودت", "خودش", "یک نفر خودش", "خودمان", "خودتان", "خودشان"], Mea = [], Cea = ["با", "بی", "در", "را", "یا", "اگر", "مگر", "نه", "چه", "باری", "بر", "برای", "برای این", "برای این که", "برای آن که", "برای آن", "از برای", "خواه", "زیرا", "که", "نیز", "چون", "چونان که", "چونان‌که", "چنان", "چنان‌چه", "چنانچه", "چنان‌که", "چونکه", "چون که", "چون‌که", "چندان که", "چندان‌که", "زیرا که", "زیراکه", "همین که", "همین‌که", "همان که", "همان‌که", "بلکه", "جز", "الا", "الاّ", "الی", "تا اینکه", "تااینکه", "تا آنکه", "تاآنکه", "آن‌جا که", "آن‌گاه که", "از آن‌جا که", "ازآنجاکه", "از آن‌که", "ازآنکه", "زیرا", "چون‌که", "چون که", "از این رو", "ازاین‌رو", "ازین‌رو", "از بس", "ازبس", "از بس که", "ازبس‌که", "از بهر آن‌که", "اکنون که", "اگرچه", "اگر چنانچه", "اگرچنانچه", "الا این‌که", "با این حال", "بااین‌حال", "با این‌که", "بااین‌که", "بااینکه", "با وجود این", "باوجوداین", "با این وجود", "بس که", "از بس که", "بس‌که", "از بس‌که", "به شرط آن‌که", "به‌شرط آن‌که", "به شرطی که", "به شروطی که", "بعد از", "قبل از", "از بعد از", "از قبل از", "اندر", "بدون", "علیه", "ضد", "غیر", "واسه‎ی", "برای", "واسه", "برای"], Lea = [], Iea = [], Wea = [], Fea = [], Dea = [], Bea = [], Nea = [], Uea = ["فروردین", "اردیبهشت", "خرداد", "تیر", "مرداد", "شهریور", "مهر", "آبان", "آذر", "دی", "بهمن", "اسفند"], Hea = [], Vea = [], Kea = ["دوباره", "قطعاً", "حتماً", "اصلاً", "قاعدتاً", "ظبیعتاً", "شاید", "کاملاً", "به", "از", "و", "همچنین", "هم", "مانند", "مثل", "شبیه به", "ولی", "اما", "امّا", "لیکن", "ولو", "در ضمن", "در کنار", "ترجیحاً", "وگرنه", "پس", "سپس", "وقتی", "زمانی که", "به خاطر", "مخصوصاً", "مشخصاً", "در کل", "بعد", "قبل", "تا"];
var th = {};
const fS = ["ahányszor", "ahelyett", "ahogy", "ahol", "ahonnan", "ahová", "akár", "akárcsak", "akkor", "alapvetően", "alighogy", "ám", "ámbár", "ámde", "ameddig", "amennyiben", "amennyire", "amennyiszer", "amíg", "amikor", "amikorra", "aminthogy", "amióta", "amire", "annálfogva", "annyira", "avagy", "azaz", "azazhogy", "azért", "azonban", "azonkívül", "azután", "bár", "befejezésül", "bizony", "csakhogy", "de", "dehát", "dehogy", "egybehangzóan", "egyidejűleg", "egyöntetűen", "egyöntetűleg", "ekképpen", "ellenben", "először", "előzőleg", "elsősorban", "ennélfogva", "eredményeképp", "eredményeképpen", "és", "eszerint", "ezért", "feltétlenül", "főként", "főleg", "függetlenül", "ha", "habár", "hanem", "hányszor", "harmadjára", "harmadszor", "hasonlóan", "hasonlóképpen", "hát", "hirtelen", "hirtelenjében", "hisz", "hiszen", "hogy", "hogyha", "hol", "holott", "honnan", "hová", "így", "illetőleg", "illetve", "immár", "is", "jóllehet", "kár", "kétségtelenül", "kifejezetten", "kiváltképp", "következésképpen", "legalábbis", "legfőképp", "maga", "máskülönben", "másodsorban", "másodszor", "meg", "mégis", "megkérdőjelezhetetlenül", "megkérdőjelezhetően", "mégpedig", "mégsem", "mennél", "mennyiszer", "merre", "mert", "merthogy", "midőn", "mielőtt", "míg", "mihelyt", "miként", "miképp", "mikor", "mikorra", "mindamellett", "mindazáltal", "mindazonáltal", "mindenekelőtt", "minél", "mint", "mintha", "minthogy", "mióta", "mire", "miután", "mivel", "mivelhogy", "nahát", "nehogy", "noha", "nos", "nyilvánvalóan", "óh", "összefoglalva", "összehasonlításképp", "összehasonlításképpen", "pedig", "például", "plusz", "s", "sajna", "satöbbi", "se", "sem", "sőt", "szintén", "tagadhatatlanul", "tehát", "továbbá", "tudniillik", "úgy", "ugyan", "ugyanis", "úgyhogy", "vagy", "vagyis", "valamennyi", "valamint", "valóban", "végezetül", "végül", "végülis", "viszont", "amerről", "hiába", "miközben", "egyszersmind", "csakugyan", "különben", "mialatt", "mintegy", "miszerint", "nemde", "ugye", "vajon", "semmint", "hacsak", "úgymint", "mintsem"], yS = ["a továbbiakban", "abba, hogy", "abban, hogy", "abból, hogy", "addig, amíg", "addig, hogy", "addig, míg", "afelé, hogy", "ahelyett, hogy", "ahhoz, hogy", "ahogy fent látható", "ahogy írtam", "ahogy megmutattam", "ahogy megjegyeztem", "akként, hogy", "akkorra, hogy", "amiatt, hogy", "amellett, hogy", "amint azt megjegyeztük", "amint csak", "amint láthatjuk", "anélkül, hogy", "annak érdekében, hogy", "annak okáért", "annyi, hogy", "annyi, mint", "annyira, hogy", "annyira, mint", "arra, hogy", "arról, hogy", "attól fogva, hogy", "attól, hogy", "avégett, hogy", "avégre, hogy", "az ellen, hogy", "az első dolog", "az első dolog, amit meg kell jegyezni", "az iránt, hogy", "azelőtt, hogy", "azért, hogy", "azonos módon", "azok után, hogy", "azon, hogy", "azonkívül, hogy", "azóta, hogy", "azt követően", "aztán pedig", "azután, hogy", "azzal a feltétellel, hogy", "azzal, hogy", "bár igaz lehet", "ebből a célból", "ebből az okból", "előbb vagy utóbb", "ennek eredményeként", "ennek folytán", "ennek megfelelően", "éppen ellenkezőleg", "éppen úgy", "erre a célra", "ezen felül", "fenntartás nélkül", "ha egyébként", "ha egyszer", "ha különben", "ha ugyan", "hasonló módon", "hogy sem", "hogy sem mint", "hol hol", "holott pedig", "időről időre", "igaz, hogy", "így tehát", "ilyen körülmények között", "késedelem nélkül", "kétség nélkül", "más szóval", "más szavakkal", "másképpen fogalmazva", "még akkor is", "még ha", "mert különben", "mert tény, hogy", "mind mind", "mindaddig, amíg", "mindezek után", "mint sem hogy", "nem is beszélve", "nem különben", "nem úgy, mint", "oda, hogy", "oly módon, hogy", "sem hogy", "szem előtt tartva", "tény, hogy", "úgy, hogy", "úgy, mint", "ugyanazon okból", "ugyanolyan okból", "olybá tűnik", "egyszer s mindenkorra", "akkor, amikor", "azóta, mióta", "attól kezdve, mióta", "attól kezdve, hogy", "akkorra, amikorra", "akkor, ha", "azóta, amióta", "akkorra, amikorra", "addigra, amikorra", "akkor, hogyha", "akkor, ha", "úgy-ahogy", "mintsem hogy"];
var UI = function() {
  return {
    singleWords: fS,
    multipleWords: yS,
    allWords: fS.concat(yS)
  };
};
Object.defineProperty(th, "__esModule", {
  value: !0
});
th.default = function() {
  return {
    // This export contains all of the above words.
    all: [].concat(Jea, Qea, ata, eta, tta, ita, nta, rta, sta, ota, dta, lta, cta, uta, pta, mta, gta, zta, fta, Xea)
  };
};
var Gea = UI, Yea = Zea(Gea);
function Zea(a) {
  return a && a.__esModule ? a : { default: a };
}
const Xea = (0, Yea.default)().singleWords, Jea = ["a", "az", "egy"], Qea = ["egy", "kettő", "három", "négy", "öt", "hat", "hét", "nyolc", "kilenc", "tíz", "tizenegy", "tizenkettő", "tizenhárom", "tizennégy", "tizenöt", "tizenhat", "tizenhét", "tizennyolc", "tizenkilenc", "húsz", "száz", "ezer", "tízezer", "százezer", "millió", "félmillió", "egymillió"], ata = ["első", "második", "harmadik", "negyedik", "ötödik", "hatodik", "hetedik", "nyolcadik", "kilencedik", "tizedik", "tizenegyedik", "tizenkettedik", "tizenharmadik", "tizennegyedik", "tizenötödik", "tizenhatodik", "tizenhetedik", "tizennyolcadik", "tizenkilencedik", "huszadik", "századik", "ezredik", "tízezredik", "százezredik", "milliomodik", "egymilliomodik"], eta = [
  // Personal pronouns.
  "én",
  "engem",
  "enyém",
  "nekem",
  "velem",
  "értem",
  "bennem",
  "belém",
  "belőlem",
  "nálam",
  "hozzám",
  "tőlem",
  "rajtam",
  "rám",
  "rólam",
  "te",
  "téged",
  "tiéd",
  "neked",
  "veled",
  "érted",
  "benned",
  "beléd",
  "belőled",
  "nálad",
  "hozzád",
  "tőled",
  "rajtad",
  "rád",
  "rólad",
  "ő",
  "őt",
  "övé",
  "neki",
  "vele",
  "érte",
  "benne",
  "bele",
  "belé",
  "nála",
  "hozzá",
  "tőle",
  "rajta",
  "rá",
  "róla",
  "mi",
  "minket",
  "mienk",
  "nekünk",
  "velünk",
  "értünk",
  "bennünk",
  "belénk",
  "nálunk",
  "hozzánk",
  "tőlünk",
  "rajtunk",
  "ránk",
  "rólunk",
  "ti",
  "titeket",
  "tiétek",
  "nektek",
  "veletek",
  "értetek",
  "bennetek",
  "belétek",
  "nálatok",
  "hozzátok",
  "tőletek",
  "rajtatok",
  "rátok",
  "rólatok",
  "ők",
  "őket",
  "övék",
  "nekik",
  "velük",
  "értük",
  "bennük",
  "beléjük",
  "náluk",
  "hozzájuk",
  "tőlük",
  "rajtuk",
  "rájuk",
  "róluk",
  "Ön",
  "Önt",
  "Öné",
  "Önnek",
  "Önnel",
  "Önért",
  "Önben",
  "Önbe",
  // Formal pronouns.
  "Ön",
  "Önt",
  "Öné",
  "Önnek",
  "Önnel",
  "Önért",
  "Önben",
  "Önbe",
  "Önből",
  "Önnél",
  "Önhöz",
  "Öntől",
  "Önön",
  "Önre",
  "Önről",
  "Önök",
  "Önöket",
  "Önöké",
  "Önöknek",
  "Önökkel",
  "Önökért",
  "Önökben",
  "Önökbe",
  "Önökből",
  "Önöknél",
  "Önökhöz",
  "Önöktől",
  "Önökön",
  "Önökre",
  "Önökről",
  // Demonstrative pronouns.
  "ez",
  "emez",
  "ugyanez",
  "ezt",
  "emezt",
  "ugyanezt",
  "ezé",
  "emezé",
  "ugyanezé",
  "ennek",
  "emennek",
  "ugyanennek",
  "ezzel",
  "emezzel",
  "ugyanezzel",
  "ezért",
  "emezért",
  "ugyanezért",
  "ebben",
  "emebben",
  "ugyanebben",
  "ebbe",
  "emebbe",
  "ugyanebbe",
  "ebből",
  "emebből",
  "ugyanebből",
  "ennél",
  "emennél",
  "ugyanennél",
  "ehhez",
  "emehhez",
  "ugyanehhez",
  "ettől",
  "emettől",
  "ugyanettől",
  "ezen",
  "emezen",
  "ugyanezen",
  "erre",
  "emerre",
  "ugyanerre",
  "erről",
  "emerről",
  "ugyanerről",
  "eddig",
  "emeddig",
  "ugyaneddig",
  "ekkor",
  "emekkor",
  "ugyanekkor",
  "ezzé",
  "emezzé",
  "ugyanezzé",
  "ekként",
  "emekként",
  "ugyanekként",
  "az",
  "amaz",
  "ugyanaz",
  "azt",
  "amazt",
  "ugyanazt",
  "azé",
  "amazé",
  "ugyanazé",
  "annak",
  "amannak",
  "ugyanannak",
  "azzal",
  "amazzal",
  "ugyanazzal",
  "azért",
  "amazért",
  "ugyanazért",
  "abban",
  "amabban",
  "ugyanabban",
  "abba",
  "amabba",
  "ugyanabba",
  "abból",
  "amabból",
  "ugyanabból",
  "annál",
  "amannál",
  "ugyanannál",
  "ahhoz",
  "amahhoz",
  "ugyanahhoz",
  "attól",
  "amattól",
  "ugyanattól",
  "azon",
  "amazon",
  "ugyanazon",
  "arra",
  "amarra",
  "ugyanarra",
  "arról",
  "amarról",
  "ugyanarról",
  "addig",
  "amaddig",
  "ugyanaddig",
  "akkor",
  "amakkor",
  "ugyanakkor",
  "azzá",
  "amazzá",
  "ugyanazzá",
  "akként",
  "amakként",
  "ugyanakként",
  "ilyen",
  "emilyen",
  "ugyanilyen",
  "ilyet",
  "emilyet",
  "ugyanilyet",
  "ilyennek",
  "emilyennek",
  "ugyanilyennek",
  "ilyennel",
  "emilyennel",
  "ugyanilyennel",
  "ilyenért",
  "emilyenért",
  "ugyanilyenért",
  "ilyenben",
  "emilyenben",
  "ugyanilyenben",
  "ilyenbe",
  "emilyenbe",
  "ugyanilyenbe",
  "ilyenből",
  "emilyenből",
  "ugyanilyenből",
  "ilyennél",
  "emilyennél",
  "ugyanilyennél",
  "ilyenhez",
  "emilyenhez",
  "ugyanilyenhez",
  "ilyentől",
  "emilyentől",
  "ugyanilyentől",
  "ilyenen",
  "emilyenen",
  "ugyanilyenen",
  "ilyenre",
  "emilyenre",
  "ugyanilyenre",
  "ilyenről",
  "emilyenről",
  "ugyanilyenről",
  "ilyenkor",
  "emilyenkor",
  "ugyanilyenkor",
  "ilyenné",
  "emilyenné",
  "ugyanilyenné",
  "olyan",
  "amolyan",
  "ugyanolyan",
  "olyat",
  "amolyat",
  "ugyanolyat",
  "olyannak",
  "amolyannak",
  "ugyanolyannak",
  "olyannal",
  "amolyannal",
  "ugyanolyannal",
  "olyanért",
  "amolyanért",
  "ugyanolyanért",
  "olyanban",
  "amolyanban",
  "ugyanolyanban",
  "olyanba",
  "amolyanba",
  "ugyanolyanba",
  "olyanból",
  "amolyanból",
  "ugyanolyanból",
  "olyannál",
  "amolyannál",
  "ugyanolyannál",
  "olyanhoz",
  "amolyanhoz",
  "ugyanolyanhoz",
  "olyantól",
  "amolyantól",
  "ugyanolyantól",
  "olyanon",
  "amolyanon",
  "ugyanolyanon",
  "olyanra",
  "amolyanra",
  "ugyanolyanra",
  "olyanról",
  "amolyanról",
  "ugyanolyanról",
  "olyankor",
  "amolyankor",
  "ugyanolyankor",
  "olyanná",
  "amolyanná",
  "ugyanolyanná",
  "ennyi",
  "emennyi",
  "ugyanennyi",
  "ennyit",
  "emennyit",
  "ugyanennyit",
  "ennyinek",
  "emennyinek",
  "ugyanennyinek",
  "ennyivel",
  "emennyivel",
  "ugyanennyivel",
  "ennyiért",
  "emennyiért",
  "ugyanennyiért",
  "ennyiben",
  "emennyiben",
  "ugyanennyiben",
  "ennyibe",
  "emennyibe",
  "ugyanennyibe",
  "ennyiből",
  "emennyiből",
  "ugyanennyiből",
  "ennyinél",
  "emennyinél",
  "ugyanennyinél",
  "ennyihez",
  "emennyihez",
  "ugyanennyihez",
  "ennyitől",
  "emennyitől",
  "ugyanennyitől",
  "ennyin",
  "emennyin",
  "ugyanennyin",
  "ennyire",
  "emennyire",
  "ugyenennyire",
  "ennyiről",
  "emennyiről",
  "ugyanennyiről",
  "ennyivé",
  "emennyivé",
  "ugyanennyivé",
  "annyi",
  "amannyi",
  "ugyanannyi",
  "annyit",
  "amannyit",
  "ugyanannyit",
  "annyinak",
  "amannyinak",
  "ugyanannyinak",
  "annyival",
  "amannyival",
  "ugyanannyival",
  "annyiért",
  "amannyiért",
  "ugyanannyiért",
  "annyiban",
  "amannyiban",
  "ugyanannyiban",
  "annyiba",
  "amannyiba",
  "ugyanannyiba",
  "annyiból",
  "amannyiból",
  "ugyanannyiból",
  "annyinál",
  "amannyinál",
  "ugyanannyinál",
  "annyihoz",
  "amannyihoz",
  "ugyanannyihoz",
  "annyitól",
  "amannyitól",
  "ugyananyitól",
  "annyin",
  "amannyin",
  "ugyanannyin",
  "annyira",
  "amannyira",
  "ugyanannyira",
  "annyiról",
  "amannyiról",
  "ugyanannyiról",
  "annyivá",
  "amannyivá",
  "ugyanannyivá",
  "így",
  "emígy",
  "ugyanígy",
  "úgy",
  "amúgy",
  "ugyanúgy",
  "itt",
  "ott",
  "ugyanitt",
  "ogyanott",
  "ide",
  "oda",
  "ugyanide",
  "ugyanoda",
  "amoda",
  "emide",
  "innen",
  "onnan",
  "ugyaninnen",
  "ogyanonnan",
  "amonnan",
  "eminnen",
  "eddig",
  "addig",
  "ezután",
  "azután",
  "ezelőtt",
  "azelőtt",
  "ugyaneddig",
  "ugyanaddig",
  "emeddig",
  "amaddig",
  "ekkora",
  "ekkorát",
  "ekkorának",
  "ekkorával",
  "ekkoráért",
  "ekkorában",
  "ekkorába",
  "ekkorából",
  "ekkoránál",
  "ekkorához",
  "ekkorától",
  "ekkorán",
  "ekkorára",
  "ekkoráról",
  "ekkorává",
  "akkora",
  "akkorát",
  "akkorának",
  "akkorával",
  "akkoráért",
  "akkorában",
  "akkorába",
  "akkorából",
  "akkoránál",
  "akkorához",
  "akkorától",
  "akkorán",
  "akkorára",
  "akkoráról",
  "akkorává",
  "ekképpen",
  "akképpen",
  "ezek",
  "emezek",
  "ugyanezek",
  "ezeket",
  "emezeket",
  "ugyanezeket",
  "ezeké",
  "emezeké",
  "ugyanezeké",
  "ezeknek",
  "emezeknek",
  "ugyanezeknek",
  "ezekkel",
  "emezekkel",
  "ugyanezekkel",
  "ezekért",
  "emezekért",
  "ugyanezekért",
  "ezekben",
  "emezekben",
  "ugyanezekben",
  "ezekbe",
  "emezekbe",
  "ugyanezekbe",
  "ezekből",
  "emezekből",
  "ugyanezekből",
  "ezeknél",
  "emezeknél",
  "ugyanezeknél",
  "ezekhez",
  "emezekhez",
  "ugyanezekhez",
  "ezektől",
  "emezektől",
  "ugyanezektől",
  "ezekre",
  "emezekre",
  "ugyanezekre",
  "ezekről",
  "emezekről",
  "ugyanezekről",
  "ezekig",
  "emezekig",
  "ugyanezekig",
  "ezekké",
  "emezekké",
  "ugyanezekké",
  "ezekként",
  "emezekként",
  "ugyanezekként",
  "azok",
  "amazok",
  "ugyanazok",
  "azokat",
  "amazokat",
  "ugyanazokat",
  "azoké",
  "amazoké",
  "ugyanazoké",
  "azoknak",
  "amazoknak",
  "ugyanazoknak",
  "azokkal",
  "amazokkal",
  "ugyanazokkal",
  "azokért",
  "amazokért",
  "ugyanazokért",
  "azokban",
  "amazokban",
  "ugyanazokban",
  "azokba",
  "amazokba",
  "ugyanazokba",
  "azokból",
  "amazokból",
  "ugyanazokból",
  "azoknál",
  "amazoknál",
  "ugyanazoknál",
  "azokhoz",
  "amazokhoz",
  "ugyanazokhoz",
  "azoktól",
  "amazoktól",
  "ugyanazoktól",
  "azokra",
  "amazokra",
  "ugyanazokra",
  "azokról",
  "amazokról",
  "ugyanazokról",
  "azokig",
  "amazokig",
  "ugyanazokig",
  "azokká",
  "amazokká",
  "ugyanazokká",
  "ilyenek",
  "emilyenek",
  "ugyanilyenek",
  "ilyeneket",
  "emilyeneket",
  "ugyanilyeneket",
  "ilyeneknek",
  "emilyeneknek",
  "ugyanilyeneknek",
  "ilyenekkel",
  "emilyenekkel",
  "ugyanilyenekkel",
  "ilyenekért",
  "emilyenekért",
  "ugyanilyenekért",
  "ilyenekben",
  "emilyenekben",
  "ugyanilyenekben",
  "ilyenekbe",
  "emilyenekbe",
  "ugyanilyenekbe",
  "ilyenekből",
  "emilyenekből",
  "ugyanilyenekből",
  "ilyeneknél",
  "emilyeneknél",
  "ugyanilyeneknél",
  "ilyenekhez",
  "emilyenekhez",
  "ugyanilyenekhez",
  "ilyenektől",
  "emilyenektől",
  "ugyanilyenektől",
  "ilyeneken",
  "emilyeneken",
  "ugyanilyeneken",
  "ilyenekre",
  "emilyenekre",
  "ugyanilyenekre",
  "ilyenekről",
  "emilyenekről",
  "ugyanilyenekről",
  "ilyenekké",
  "emilyenekké",
  "ugyanilyenekké",
  "olyanok",
  "amolyanok",
  "ugyanolyanok",
  "olyanokat",
  "amolyanokat",
  "ugyanolyanokat",
  "olyanoknak",
  "amolyanoknak",
  "ugyanolyanoknak",
  "olyanokkal",
  "amolyanokkal",
  "ugyanolyanokkal",
  "olyanokért",
  "amolyanokért",
  "ugyanolyanokért",
  "olyanokban",
  "amolyanokban",
  "ugyanolyanokban",
  "olyanokba",
  "amolyanokba",
  "ugyanolyanokba",
  "olyanokból",
  "amolyanokból",
  "ugyanolyanokból",
  "olyanoknál",
  "amolyanoknál",
  "ugyanolyanoknál",
  "olyanokhoz",
  "amolyanokhoz",
  "ugyanolyanokhoz",
  "olyanoktól",
  "amolyanoktól",
  "ugyanolyanoktól",
  "olyanokon",
  "amolyanokon",
  "ugyanolyanokon",
  "olyanokra",
  "amolyanokra",
  "ugyanolyanokra",
  "olyanokról",
  "amolyanokról",
  "ugyanolyanokról",
  "olyanokká",
  "amolyanokká",
  "ugyanolyanokká",
  // Relative pronouns.
  "aki",
  "akit",
  "akié",
  "akinek",
  "akivel",
  "akiért",
  "akiben",
  "akibe",
  "akiből",
  "akinél",
  "akihez",
  "akitől",
  "akin",
  "akire",
  "akiről",
  "akivé",
  "ami",
  "amit",
  "amié",
  "aminek",
  "amivel",
  "amiért",
  "amiben",
  "amibe",
  "amiből",
  "aminél",
  "amihez",
  "amitől",
  "amin",
  "amire",
  "amiről",
  "amivé",
  "amilyen",
  "amilyet",
  "amilyennek",
  "amilyennel",
  "amilyenért",
  "amilyenben",
  "amilyenbe",
  "amilyenből",
  "amilyennél",
  "amilyenhez",
  "amilyentől",
  "amilyenen",
  "amilyenre",
  "amilyenről",
  "amilyenné",
  "amekkora",
  "amekkorát",
  "amekkorának",
  "amekkorával",
  "amekkoráért",
  "amekkorában",
  "amekkorába",
  "amekkorából",
  "amekkoránál",
  "amekkorához",
  "amekkorától",
  "amekkorán",
  "amekkorára",
  "amekkoráról",
  "amekkorává",
  "amely",
  "amelyet",
  "amelynek",
  "amellyel",
  "amelyért",
  "amelyben",
  "amelybe",
  "amelyből",
  "amelynél",
  "amelyhez",
  "amelytől",
  "amelyen",
  "amelyre",
  "amelyről",
  "amellyé",
  "ahány",
  "ahányat",
  "ahánynak",
  "ahánnyal",
  "ahányért",
  "ahányban",
  "ahányba",
  "ahányból",
  "ahánynál",
  "ahányhoz",
  "ahánytól",
  "ahányan",
  "ahányra",
  "ahányról",
  "ahánnyá",
  "amennyi",
  "amennyit",
  "amennyinek",
  "amennyivel",
  "amennyiért",
  "amennyiben",
  "amennyibe",
  "amennyiből",
  "amennyinél",
  "amennyihez",
  "amennyitől",
  "amennyin",
  "amennyire",
  "amennyiről",
  "amennyivé",
  "ahányadik",
  "ahányadikat",
  "ahányadiknak",
  "ahányadika",
  "ahányadikért",
  "ahányadikban",
  "ahányadikba",
  "ahányadikból",
  "ahányadiknál",
  "ahányadikhoz",
  "ahányadiktól",
  "ahányadikon",
  "ahányadikra",
  "ahányadikról",
  "ahányadikká",
  "ahová",
  "ahonnan",
  "ahonnantól",
  "amerre",
  "amerről",
  "ahogy",
  "ahogyan",
  "amiért",
  "amikor",
  "amikortól",
  "amikorra",
  "akik",
  "akiket",
  "akiké",
  "akiknek",
  "akikkel",
  "akikért",
  "akikben",
  "akikbe",
  "akikból",
  "akiknél",
  "akikhez",
  "akiktől",
  "akiken",
  "akikre",
  "akikről",
  "akikké",
  "amik",
  "amiket",
  "amiké",
  "amiknek",
  "amikkel",
  "amikért",
  "amikben",
  "amikbe",
  "amikból",
  "amiknél",
  "amikhez",
  "amiktől",
  "amiken",
  "amikre",
  "amikről",
  "amikké",
  "amilyenek",
  "amilyeneket",
  "amilyeneknek",
  "amilyenekkel",
  "amilyenekért",
  "amilyenekben",
  "amilyenekbe",
  "amilyenekből",
  "amilyeneknél",
  "amilyenekhez",
  "amilyenektől",
  "amilyeneken",
  "amilyenekre",
  "amilyenekről",
  "amekkorák",
  "amekkorákat",
  "amekkoráknak",
  "amekkorákkal",
  "amekkorákért",
  "amekkorákban",
  "amekkorákba",
  "amekkorákból",
  "amekkoráknál",
  "amekkorákhoz",
  "amekkoráktól",
  "amekkorákon",
  "amekkorákra",
  "amekkorákról",
  "amekkorákká",
  "amelyek",
  "amelyeket",
  "amelyeknek",
  "amelyekkel",
  "amelyekért",
  "amelyekben",
  "amelyekbe",
  "amelyekből",
  "amelyeknél",
  "amelyekhez",
  "amelyektől",
  "amelyeken",
  "amelyekre",
  "amelyekről",
  "ahányak",
  "ahányakat",
  "ahányaknak",
  "ahányakkal",
  "ahányakért",
  "ahányakban",
  "ahányakba",
  "ahányakból",
  "ahányaknál",
  "ahányakhoz",
  "ahányaktól",
  "ahányakon",
  "ahányakra",
  "ahányakról",
  "ahányakká",
  "amennyik",
  "amennyiket",
  "amennyiknek",
  "amennyikkel",
  "amennyikért",
  "amennyikben",
  "amennyikbe",
  "amennyikből",
  "amennyiknél",
  "amennyikhez",
  "amennyiktől",
  "amennyiken",
  "amennyikre",
  "amennyikről",
  "amennyikké",
  "ahányadikak",
  "ahányadikat",
  "ahányadiknak",
  "ahányadikkal",
  "ahányadikért",
  "ahányadikban",
  "ahányadikba",
  "ahányadikból",
  "ahányadiknál",
  "ahányadikhoz",
  "ahányadiktól",
  "ahányadikon",
  "ahányadikra",
  "ahányadikról",
  "ahányadikká",
  "amikért",
  // Reciprocal pronouns.
  "egymás",
  "egymást",
  "egymásé",
  "egymásnak",
  "egymással",
  "egymásért",
  "egymásban",
  "egymásba",
  "egymásból",
  "egymásnál",
  "egymáshoz",
  "egymástól",
  "egymáson",
  "egymásra",
  "egymásról",
  "egymássá"
], tta = ["ki", "kit", "kié", "kinek", "kivel", "kiért", "kiben", "kibe", "kiből", "kinél", "kihez", "kitől", "kin", "kire", "kiről", "kicsoda", "kicsodát", "kicsodának", "kicsodával", "kicsodáért", "kicsodában", "kicsodába", "kicsodából", "kicsodánál", "kicsodához", "kicsodától", "kicsodán", "kicsodára", "kicsodáról", "mi", "mit", "minek", "mivel", "miért", "miben", "mibe", "miből", "minél", "mihez", "mitől", "min", "mire", "miről", "micsoda", "micsodát", "micsodának", "micsodával", "micsodáért", "micsodában", "micsodába", "micsodából", "micsodánál", "micsodához", "micsodától", "micsodán", "micsodára", "micsodáról", "milyen", "milyet", "milyennek", "milyennel", "milyenért", "milyenben", "milyenbe", "milyenből", "milyennél", "milyenhez", "milyentől", "milyenen", "milyenre", "milyenről", "mekkora", "mekkorát", "mekkorának", "mekkorával", "mekkoráért", "mekkorában", "mekkorába", "mekkorából", "mekkoránál", "mekkorához", "mekkorától", "mekkorán", "mekkorára", "mekkoráról", "miféle", "mifélét", "mifélének", "mifélével", "miféléért", "mifélében", "mifélébe", "miféléből", "mifélénél", "miféléhez", "mifélétől", "mifélén", "mifélére", "miféléről", "melyik", "melyiket", "melyiknek", "melyikkel", "melyikért", "melyikben", "melyikbe", "melyikből", "melyiknél", "melyikhez", "melyiktől", "melyiken", "melyikre", "melyikről", "hány", "hányat", "hánynak", "hánnyal", "hányért", "hányban", "hányba", "hányból", "hánynál", "hányhoz", "hánytól", "hányon", "hányra", "hányról", "mennyi", "mennyit", "mennyinek", "mennyivel", "mennyiért", "mennyiben", "mennyibe", "mennyiből", "mennyinél", "mennyihez", "mennyitől", "mennyin", "mennyire", "mennyiről", "hányadik", "hányadikat", "hányadiknak", "hányadikkal", "hányadikért", "hányadikban", "hányadikba", "hányadikból", "hányadiknál", "hányadikhoz", "hányadiktól", "hányadikon", "hányadikra", "hányadikról", "hol", "hová", "honnan", "honnantól", "honnanról", "merre", "mettől", "merről", "meddig", "meddigtől", "meddigről", "mióta", "hogyan", "miként", "kik", "kiket", "kiknek", "kikkel", "kikért", "kikben", "kikbe", "kikből", "kiknél", "kikhez", "kiktől", "kiken", "kikre", "kikről", "kicsodák", "kicsodákat", "kicsodáknak", "kicsodákkal", "kicsodákért", "kicsodákban", "kicsodákba", "kicsodákból", "kicsodáknál", "kicsodákhoz", "kicsodáktól", "kicsodákon", "kicsodákra", "kicsodáról", "mik", "miket", "miknek", "mikkel", "mikért", "mikben", "mikbe", "mikből", "miknél", "mikhez", "miktől", "miken", "mikre", "mikről", "micsodák", "micsodákat", "micsodáknak", "micsodákkal", "micsodákért", "micsodákban", "micsodákba", "micsodákból", "micsodáknál", "micsodákhoz", "micsodáktól", "micsodákon", "micsodákra", "micsodákról", "milyenek", "milyeneket", "milyeneknek", "milyenekkel", "milyenekért", "milyenekben", "milyenekbe", "milyenekből", "milyeneknél", "milyenekhez", "milyenektől", "milyeneken", "milyenekre", "milyenekről", "mekkorák", "mekkorákat", "mekkoráknak", "mekkorákkal", "mekkorákért", "mekkorákban", "mekkorákba", "mekkorákból", "mekkoráknál", "mekkorákhoz", "mekkoráktól", "mekkorákon", "mekkorákra", "mekkorákról", "mifélék", "miféléket", "miféléknek", "mifélékkel", "mifélékért", "mifélékben", "mifélékbe", "mifélékből", "miféléknél", "mifélékhez", "miféléktől", "miféléken", "mifélékre", "mifélékről", "melyikek", "melyikeket", "melyikeknek", "melyikekkel", "melyikekért", "melyikekben", "melyikekbe", "melyikekből", "melyikeknél", "melyikekhez", "melyikektől", "melyikeken", "melyikekre", "melyikekről", "hányak", "hányakat", "hányaknak", "hányakkal", "hányakért", "hányakban", "hányakba", "hányakból", "hányaknál", "hányakhoz", "hányaktól", "hányakon", "hányakra", "hányakról", "mennyik", "mennyiket", "mennyiknek", "mennyikkel", "mennyikért", "mennyikben", "mennyikbe", "mennyikből", "mennyiknél", "mennyikhez", "mennyiktől", "mennyiken", "mennyikre", "mennyikről", "hányadikak", "hányadikakat", "hányadikaknak", "hányadikakkal", "hányadikakért", "hányadikakban", "hányadikakba", "hányadikakból", "hányadikaknál", "hányadikakhoz", "hányadikaktól", "hányadikakon", "hányadikakra", "hányadikakról"], ita = ["sok", "kevés", "elég", "jónéhány", "néhány", "rengeteg", "töredék", "temérdek", "tengernyi", "számtalan", "számos", "elegendő", "kevéske", "egy csomó", "egy rakás", "egy halom"], nta = ["magam", "magamat", "magamé", "magamnak", "magammal", "magamért", "magamban", "magamba", "magamból", "magamnál", "magamhoz", "magamtól", "magamon", "magamra", "magamról", "magammá", "magad", "magadat", "magadé", "magadnak", "magaddal", "magadért", "magadban", "magadba", "magadból", "magadnál", "magadhoz", "magadtól", "magadon", "magadra", "magadról", "magaddá", "maga", "magát", "magáé", "magának", "magával", "magáért", "magában", "magába", "magából", "magánál", "magához", "magától", "magán", "magára", "magáról", "magává", "magunk", "magunkat", "magunké", "magunknak", "magunkkal", "magunkért", "magunkban", "magunkba", "magunkból", "magunknál", "magunkhoz", "magunktól", "magunkon", "magunkra", "magunkról", "magunkká", "magatok", "magatokat", "magatoké", "magatoknak", "magatokkal", "magatokért", "magatokban", "magatokba", "magatokból", "magatoknál", "magatokhoz", "magatoktól", "magatokon", "magatokra", "magatokról", "magatokká", "maguk", "magukat", "maguké", "maguknak", "magukkal", "magukért", "magukban", "magukba", "magukból", "maguknál", "magukhoz", "maguktól", "magukon", "magukra", "magukról", "magukká"], rta = ["valaki", "valakit", "valakié", "valakinek", "valakivel", "valakiért", "valakiben", "valakibe", "valakiből", "valakinél", "valakihez", "valakitől", "valakin", "valakire", "valakiről", "valakivé", "valami", "valamit", "valamié", "valaminek", "valamivel", "valamiért", "valamiben", "valamibe", "valamiből", "valaminél", "valamihez", "valamitől", "valamin", "valamire", "valamiről", "valamivé", "valamilyen", "valamilyet", "valamilyennek", "valamilyennel", "valamilyenért", "valamilyenben", "valamilyenbe", "valamilyenből", "valamilyennél", "valamilyenhez", "valamilyentől", "valamilyenen", "valamilyenre", "valamilyenről", "valaminő", "valamelyes", "valamelyest", "valamekkora", "valamekkorát", "valamekkorának", "valamekkorával", "valamekkoráért", "valamekkorában", "valamekkorába", "valamekkorából", "valamekkoránál", "valamekkorához", "valamekkorától", "valamekkorán", "valamekkorára", "valamekkoráról", "valamekkorává", "valamely", "valamelyet", "valamelynek", "valamellyel", "valamelyért", "valamelyben", "valamelybe", "valamelyből", "valamelynél", "valamelyhez", "valamelytől", "valamelyen", "valamelyre", "valamelyről", "valamellyé", "valamelyik", "valamelyiket", "valemelyiknek", "valamelyikkel", "valamelyikért", "valamelyikben", "valamelyikbe", "valamelyikből", "valamelyiknél", "valamelyikhez", "valamelyiktől", "valamelyiken", "valamelyikre", "valamelyikről", "valamelyikké", "valamiféle", "valamifélét", "valamifélének", "valamifélével", "valamiféléért", "valamifélében", "valamifélébe", "valamiféléből", "valamifélénél", "valamiféléhez", "valamifélétől", "valamifélén", "valamifélére", "valamiféléről", "valamennyi", "valamennyit", "valamennyié", "valamennyinek", "valamennyivel", "valamennyiért", "valamennyiben", "valamennyibe", "valamennyiből", "valamennyinél", "valamennyihez", "valamennyitől", "valamennyin", "valamennyire", "valamennyiről", "valamennyivé", "valahány", "valahányat", "valahánynak", "valahánnyal", "valahányért", "valahányban", "valahányba", "valahányból", "valahánynál", "valahányhoz", "valahánytól", "valahányon", "valahányra", "valahányról", "valahánnyá", "némely", "némelyet", "némelynek", "némelynél", "némelyért", "némelyben", "némelybe", "némelyből", "némelynél", "némelyhez", "némelytől", "némelyen", "némelyre", "némelyről", "némi", "némelyik", "némelyiket", "némelyiknek", "némelyikkel", "némelyikért", "némelyikben", "némelyikbe", "némelyikből", "némelyiknél", "némelyikhez", "némelyiktől", "némelyiken", "némelyikre", "némelyikről", "néminemű", "néhány", "néhányat", "néhánynak", "néhánnyal", "néhányért", "néhányban", "néhányba", "néhányból", "néhánynál", "néhányhoz", "néhánytól", "néhányon", "néhányra", "néhányról", "valahol", "valahová", "valamerre", "valahonnan", "valamikor", "valaha", "valaha", "valahogyan", "valamiképpen", "valamiért", "néhol", "néha", "némelykor", "némiképpen", "némileg", "mindenki", "mindenféle", "mindegyik", "mindahány", "mindenhol", "mindenütt", "mindenhová", "mindenhonnan", "mindenkor", "mindenhogyan", "mindenképpen", "bárki", "bármi", "bármelyik", "bármilyen", "bármennyi", "bárhol", "bárhová", "bárhonnan", "bármikor", "bármeddig", "bárhogyan", "akárki", "akármi", "akármelyik", "akármilyen", "akármennyi", "akárhány", "akárhol", "akárhová", "akárhonnan", "akármikor", "akárhogyan", "senki", "semmi", "semmilyen", "semennyi", "sehány", "sehol", "sehová", "sehonnan", "semmikor", "sehogy", "semmiképp", "valakik", "valakiket", "valakiké", "valakiknek", "valakikkel", "valakikért", "valakikben", "valakikbe", "valakikből", "valakiknél", "valakikhez", "valakiktől", "valakiken", "valakikre", "valakikről", "valakikké", "valamik", "valamiket", "valamiké", "valamiknek", "valamikkel", "valamikért", "valamikben", "valamikbe", "valamikből", "valamiknél", "valamikhez", "valamiktől", "valamiken", "valamikre", "valamikről", "valamikké", "valamilyenek", "valamilyeneket", "valamilyeneknek", "valamilyenekkel", "valamilyenekért", "valamilyenekben", "valamilyenekbe", "valamilyenekből", "valamilyeneknél", "valamilyenekhez", "valamilyenektől", "valamilyeneken", "valamilyenekre", "valamilyenekről", "valamilyenekké", "valaminők", "valamekkorák", "valamekkorákat", "valamekkoráknak", "valamekkorákkal", "valamekkorákért", "valamekkorákban", "valamekkorákba", "valamekkorákból", "valamekkoráknál", "valamekkorákhoz", "valamekkoráktól", "valamekkorákon", "valamekkorákra", "valamekkorákról", "valamelyek", "valamelyeket", "valamelyeknek", "valamelyekkel", "valamelyekért", "valamelyekben", "valamelyekbe", "valamelyekből", "valamelyeknél", "valamelyekhez", "valamelyektől", "valamelyeken", "valamelyekre", "valamelyekről", "valamelyekké", "valamelyikek", "valamelyikeket", "valamelyikeknek", "valamelyikekkel", "valamelyikekért", "valamelyikekben", "valamelyikekbe", "valamelyikekből", "valamelyikeknél", "valamelyikekhez", "valamelyikektől", "valamelyikeken", "valamelyikekre", "valamelyikekről", "valamifélék", "valamiféléket", "valamiféléknek", "valamifélékkel", "valamifélékért", "valamifélékben", "valamifélékbe", "valamifélékből", "valamiféléknél", "valamifélékhez", "valamiféléktől", "valamiféléken", "valamifélékre", "valamifélékről", "valamennyik", "valamennyiket", "valamennyiknek", "valamennyikkel", "valamennyikért", "valamennyikben", "valamennyikbe", "valamennyikből", "valamennyiknél", "valamennyikhez", "valamennyiktől", "valamennyiken", "valamennyikre", "valamennyikről", "valahányak", "valahányakat", "valahányaknak", "valahányakkal", "valahányakért", "valahányakban", "valahányakba", "valahányakból", "valahányaknál", "valahányakhoz", "valahányaktól", "valahányakon", "valahányakra", "valahányakról", "némelyek", "némelyeket", "némelyeknek", "némelyekkel", "némelyekért", "némelyekben", "némelyekbe", "némelyekből", "némelyeknél", "némelyekhez", "némelyektől", "némelyeken", "némelyekre", "némelyekről", "némelyikek", "némelyikeket", "némelyikeknek", "némelyikekkel", "némelyikekért", "némelyikekben", "némelyikekbe", "némelyikekből", "némelyikeknél", "némelyikekhez", "némelyikektől", "némelyikeken", "némelyikekre", "némelyikekről", "néhányak", "néhányakat", "néhányaknak", "néhányakkal", "néhányakért", "néhányakban", "néhányakba", "néhányakból", "néhányaknál", "néhányakhoz", "néhányaktól", "néhányakon", "néhányakra", "néhányakról"], sta = ["előtt", "elé", "elől", "alatt", "alá", "alól", "túl", "alatt", "belül", "előtt", "fogva", "hosszat", "múlva", "óta", "tájt", "ellen", "helyett", "iránt", "miatt", "nélkül", "részére", "számára", "végett", "között"], ota = ["és", "s", "se", "sem", "vagy", "is", "de"], dta = ["mond", "bejelent", "megerősít", "kijelent", "javasol", "említ", "tájékoztat", "értesít", "kérdez", "beszél", "megkérdez", "állít", "elmagyaráz", "magyaráz", "gondol", "hisz", "megtárgyal", "tárgyal", "vitat", "megvitat", "ért", "megért", "elmond", "elmesél", "tud", "megtud", "megbeszél", "megmond", "megmagyaráz"], lta = ["alig", "kissé", "különösen", "nagyon", "teljesen", "túl", "túlságosan", "kevésbé", "nagyrészt", "kicsit", "picit", "szörnyen", "borzasztóan", "iszonyatosan", "irtó", "irtózatosan", "komolyan", "súlyosan", "könnyedén", "nehezen"], cta = ["fog", "volna", "akar", "bír", "kell", "kíván", "látszik", "lehet", "tud", "szabad", "tetszik", "méltóztatik", "szokott"], uta = [
  // General adjective.
  "nagy",
  "kicsi",
  "gyors",
  "lassú",
  "jó",
  "rossz",
  "drága",
  "olcsó",
  "vastag",
  "vékony",
  "keskeny",
  "széles",
  "puha",
  "hangos",
  "halk",
  "intelligens",
  "buta",
  "nedves",
  "száraz",
  "nehéz",
  "könnyű",
  "kemény",
  "lágy",
  "sekély",
  "mély",
  "gyönge",
  "erős",
  "gazdag",
  "szegény",
  "fiatal",
  "öreg",
  "hosszú",
  "rövid",
  "magas",
  "alacsony",
  "bőkezű",
  "fukar",
  "igaz",
  "hamis",
  "gyönyörű",
  "csúnya",
  "új",
  "régi",
  "boldog",
  "szomorú",
  "idős",
  "gyenge",
  "biztonságos",
  "veszélyes",
  "korán",
  "későn",
  "világos",
  "sötét",
  "nyitva",
  "zárva",
  "szoros",
  "laza",
  "teli",
  "üres",
  "sok",
  "kevés",
  "élő",
  "halott",
  "meleg",
  "hideg",
  "érdekes",
  "unalmas",
  "szerencsés",
  "szerencsétlen",
  "fontos",
  "lényegtelen",
  "messze",
  "közel",
  "tiszta",
  "piszkos",
  "kedves",
  "gonosz",
  "kellemes",
  "kellemetlen",
  "kiváló",
  "borzalmas",
  "normális",
  "szép",
  // General adverbs.
  "nagyon",
  "kicsit",
  "gyorsan",
  "lassan",
  "jól",
  "rosszul",
  "drágán",
  "olcsón",
  "hangosan",
  "halkan",
  "nehezen",
  "könnyen",
  "gyengén",
  "erősen",
  "gazdagon",
  "fiatalon",
  "öreg",
  "hosszan",
  "röviden",
  "magasan",
  "alacsonyan",
  "bőkezűen",
  "gyönyörűen",
  "csúnyán",
  "boldogan",
  "szomorúan",
  "gyengéden",
  "biztonságosan",
  "veszélyesen",
  "világosan",
  "szorosan",
  "lazán",
  "sokan",
  "kevesen",
  "élve",
  "melegen",
  "hidegen",
  "érdekesen",
  "unalmasan",
  "szerencsésen",
  "szerencsétlenül",
  "tisztán",
  "piszkosan",
  "kedvesen",
  "gonoszan",
  "kellemesen",
  "kellemetlenül",
  "kiválóan",
  "borzalmasan",
  "normálisan",
  "szépen"
], pta = ["ó", "óh", "jaj", "a kutyafáját", "a fenébe", "a csudába", "a francba", "atyaég", "atyavilág", "azta", "aztamindenit", "juj", "juhú", "éljen", "jé", "hű", "hú", "ajjaj", "pszt", "csitt", "hess", "hé", "ej", "ejnye", "na", "nicsak", "nocsak", "natessék", "nahát", "rajta", "hajrá", "juhú", "teringettét", "nosza", "uccu", "csitt", "kuss", "dirr", "durr"], mta = ["liter", "l", "deciliter", "dl", "milliliter", "gramm", "g", "dekagramm", "dkg", "kilogramm", "kg", "milligramm", "mg", "tucat", "centiliter", "cl", "méter", "m", "deciméter", "dm", "centiméter", "cm", "milliméter", "mm", "evőkanál", "ek.", "mokkáskanál", "mk.", "kávéskanál", "kk.", "gyermekkanál", "gyk.", "kávéscsésze", "kcs.", "teáscsésze", "tcs.", "csésze", "csé.", "bögre", "bgr.", "mélytányér", "ujjnyi", "csomag", "gerezd", "csokor"], gta = ["másodperc", "perc", "óra", "nap", "hét", "hónap", "év", "évtized", "évszázad", "évezred", "ma", "holnap", "tegnap", "jövő héten", "jövő hónapban", "jövő évben", "múlt héten", "múlt hónapban", "múlt évben", "tavaly", "jövőre", "reggel", "délben", "este", "éjszaka", "hajnalban", "délután", "délelőtt"], zta = ["dolog", "izé", "valami", "személy", "ember", "alkalom", "eset", "ügy", "tárgy", "valamicsoda", "téma", "ötlet"], fta = [
  "stb.",
  // Fractions.
  "fél",
  "harmad",
  "negyed",
  "ötöd",
  "hatod",
  "heted",
  "nyolcad",
  "kilenced",
  "tized",
  "egyharmad",
  "egynegyed",
  "egyötöd",
  "egyhatod",
  "egyheted",
  "egynyolcad",
  "egykilenced",
  "egytized",
  "század",
  "ezred"
];
var ih = {};
Object.defineProperty(ih, "__esModule", {
  value: !0
});
ih.default = function() {
  return {
    // This export contains all of the above words.
    all: [].concat(yta, wta, hta, bta, vta, kta, _ta, $ta, jta, xta, Ata, Eta, Sta, qta, Pta, Tta, Rta, Ota, Mta)
  };
};
const yta = ["det", "en"], wta = ["en", "to", "tre", "fire", "fem", "seks", "syv", "åtte", "ni", "ti", "elleve", "tolv", "tretten", "fjorten", "femten", "seksten", "sytten", "atten", "nitten", "tjue", "hundre", "tusen", "million", "milliarder"], hta = ["første", "først", "sekund", "tredje", "fjerde", "femte", "sjette", "syvende", "åttende", "niende", "tiende"], bta = [
  // Personal pronouns.
  "jeg",
  "du",
  "den",
  "vi",
  "de",
  "han",
  "hun",
  "henne",
  "oss",
  "meg",
  "ham",
  "dem",
  // Possessive pronouns.
  "vår",
  "deres",
  "ditt",
  "mitt",
  "våre",
  "vårt",
  "hans",
  "hennes",
  "dens",
  "egen",
  "egne",
  // Demonstrative pronouns.
  "denne",
  "dette",
  "disse",
  // Reciprocal pronouns.
  "hverandre",
  "hvert"
], vta = ["hvem", "hvordan", "hvorfor", "hvor", "hva", "hvilken", "hvilket"], kta = ["mange", "hele", "mer", "ingen", "alle", "noen", "flere", "hver", "begge", "sov", "mest", "fleste"], _ta = [], $ta = ["ingenting"], jta = ["sånn", "ved", "mot", "ned", "enn", "over", "inn", "sa", "opp", "der", "fra", "din", "nei", "mellom", "di", "oppe", "av", "om", "den", "de", "at", "med", "til", "å", "på", "du", "uten", "én", "under", "hos", "inne", "gjennom", "unna", "del", "nede", "kun", "innen", "blant"], xta = ["eller", "hvis", "ja", "et", "som", "i", "og"], Ata = ["tror", "fortelle", "fortell", "fortalte", "tenkte", "tenk"], Eta = ["virkelig", "akkurat", "visst"], Sta = [], qta = [
  // General adjective.
  "helt",
  "andre",
  "litt",
  "lenge",
  "siste",
  "fint",
  "annet",
  "stor",
  "neste",
  "lenger",
  "annen",
  "nye",
  "alene",
  "flott",
  "klart",
  "liten",
  "langt",
  "gamle",
  "dårlig",
  "hyggelig",
  "gode",
  "sånt",
  "nytt",
  "best",
  "lang",
  "små",
  "lot",
  "større",
  "høyt",
  "største",
  "slikt",
  // General adverbs.
  "alltid",
  "godt",
  "sammen",
  "tilbake",
  "etter",
  "igjen",
  "bare",
  "så",
  "veldig",
  "bedre",
  "samme",
  "far",
  "eneste",
  "enig",
  "borte",
  "snart",
  "rundt",
  "beste",
  "bort",
  "vekk",
  "nesten",
  "ganske",
  "senere",
  "videre",
  "mindre",
  "straks",
  "svært"
], Pta = ["hei"], Tta = [], Rta = ["år", "dag", "nå", "tid", "tiden", "morgen", "dager", "minutter", "dagen", "uke", "uker", "måneder", "stund"], Ota = ["ting", "tingene"], Mta = ["ok", "okay", "ja", "jaså", "nei", "ikke", "unnskyld", "beklager", "herr", "altså"];
var nh = {};
Object.defineProperty(nh, "__esModule", {
  value: !0
});
nh.default = function() {
  return {
    // This export contains all of the above words.
    all: [].concat(Cta, Lta, Ita, Wta, Fta, Dta, Bta, Nta, Uta, Hta, Vta, Kta, Gta, Yta, Zta, Xta, Jta, Qta, aia, eia, tia)
  };
};
const Cta = ["bir"], Lta = ["i̇ki", "üç", "dört", "beş", "altı", "yedi", "sekiz", "dokuz", "on", "on bir", "on i̇ki", "on üç", "on dört", "on beş", "on altı", "on yedi", "on sekiz", "on dokuz", "yirmi", "yirmi bir", "yirmi i̇ki", "yirmi üç", "yirmi dört", "yirmi beş", "yirmi altı", "yirmi yedi", "yirmi sekiz", "yirmi dokuz", "otuz", "kırk", "elli", "altmış", "yetmiş", "seksen", "doksan", "yüz", "bin", "milyon", "milyar"], Ita = ["birinci", "i̇kinci", "üçüncü", "dördüncü", "beşinci", "altıncı", "yedinci", "sekizinci", "dokuzuncu", "onuncu"], Wta = ["tam", "yarım", "çeyrek", "üçte biri", "üçte ikisi", "tamamı", "yarısı", "çeyreği", "üçte biri", "üçte ikisi"], Fta = [
  // Personal pronouns.
  "ben",
  "sen",
  "o",
  "biz",
  "siz",
  "onlar",
  "beni",
  "seni",
  "onu",
  "bizi",
  "sizi",
  "onları",
  "bizleri",
  "sizleri",
  "bana",
  "sana",
  "ona",
  "bize",
  "size",
  "onlara",
  "bizlere",
  "sizlere",
  "bende",
  "sende",
  "onda",
  "bizde",
  "sizde",
  "onlarda",
  "bizlerde",
  "sizlerde",
  "benden",
  "senden",
  "ondan",
  "bizden",
  "sizden",
  "onlardan",
  "bizlerden",
  "sizlerden",
  // Possessive pronouns.
  "benim",
  "senin",
  "onun",
  "bizim",
  "sizin",
  "onların",
  "bizlerin",
  "sizlerin",
  // Demonstrative pronouns.
  "bu",
  "şu",
  "o",
  "öteki",
  "beriki",
  "bura",
  "şura",
  "ora",
  "burası",
  "şurası",
  "orası",
  "böylesi",
  "şöylesi",
  "öylesi",
  "bunlar",
  "şunlar",
  "onlar",
  "ötekiler",
  "berikiler",
  "buralar",
  "şuralar",
  "oralar",
  // Reciprocal pronouns.
  "birbiri",
  "birbirimiz",
  "birbiriniz",
  "birbirleri",
  "birbirimizi",
  "birbirinizi",
  "birbirlerini",
  "birbirimize",
  "birbirinize",
  "birbirlerine",
  "birbirimizde",
  "birbirinizde",
  "birbirlerinde",
  "birbirimizden",
  "birbirinizden",
  "birbirlerinden",
  "birbirimizle",
  "birbirinizle",
  "birbirleriyle"
], Dta = ["kim", "kimi", "kime", "kimde", "kimden", "kimin", "kiminle", "ne", "neyi", "neyde", "neyden", "neyle", "ne için", "niçin", "niye", "ne diye", "nere", "nereyi", "nereye", "nerede", "nereden", "neresi", "neden", "hangi", "hangisi", "kaç", "kaçı", "kaçıncı", "kaçta", "nasıl", "ne kadar", "ne zaman", "mı", "hangi", "hangisi", "kimler", "kimleri", "kimlere", "kimlerde", "kimlerden", "neler", "neleri", "nelere", "nelerde", "nelerden", "hangiler", "hangileri", "hangilere"], Bta = ["hepsi", "bazısı", "çoğu", "birçoğu", "birazı", "hepsi", "bütünü", "yeteri kadarı", "birkaçı", "biri", "her ikisi", "i̇kisinden biri", "hiç biri", "diğeri", "tümü", "bir kısmı", "pek çoğu", "her biri", "bazı", "çok", "çoğu", "birçok", "biraz", "bütün", "yeteri kadar", "birkaç", "bir", "her iki", "hiç bir", "diğer", "tüm", "bir kısım", "pek çok", "her bir"], Nta = ["kendi", "kendim", "kendimi", "kendime", "kendimde", "kendimden", "kendin", "kendini", "kendine", "kendinde", "kendinden", "kendisi", "kendiyle", "kendileri", "kendilerine", "kendilerinde", "kendilerinden", "kendileriyle"], Uta = ["kimi", "kimse", "biri", "birisi", "başkası", "bazısı", "bir çoğu", "bir takımı", "birkaçı", "birazı", "herkes", "hepsi", "hepimiz", "hiçbiri", "herhangi biri", "her biri", "şey", "falan", "filan", "falanca", "öteberi", "tümü", "bütünü", "kimileri", "kimseler", "birileri", "başkaları", "bazıları", "bir çokları", "herkesler"], Hta = ["i̇çin", "gibi", "kadar", "ancak", "yalnız", "i̇le", "sadece", "sanki", "değil", "üzere", "dair", "karşın", "rağmen", "özgü", "doğru", "dek", "değin", "ait", "beri", "başka", "itibaren", "dolayı", "ötürü", "adeta", "sırf", "diye", "tek", "karşı"], Vta = ["ve", "i̇le", "veya", "ya da", "yahut", "veyahut", "ama", "fakat", "lakin", "yalnız", "ancak", "oysa", "oysaki", "halbu ki", "ne var ki", "çünkü", "zira", "de", "da", "ki", "meğer", "madem", "mademki", "demek", "demek ki", "üstelik", "hatta", "yani", "hem...hem", "hem de", "ne", "kah", "i̇ster", "ister", "açıkcası", "bile", "ya", "da", "ise", "öyleyse", "kim bilir", "gerek", "gerekse de", "ta ki", "zati"], Kta = ["demek", "dedim", "dedin", "dedi", "dedik", "dediniz", "dediler", "der", "söylemek", "söyledim", "söyledin", "söyledi", "söyledik", "söylediniz", "söylediler", "söyler", "söylerler", "sormak", "sordum", "sordun", "sordu", "sorduk", "sordunuz", "sordular", "sorar", "sorarlar", "belirtmek", "belirttim", "belirttin", "belirtti", "belirttik", "belirttiniz", "belirttiler", "belirtir", "belirtirler", "açıklamak", "açıkladım", "açıkladın", "açıkladı", "açıkladık", "açıkladınız", "açıkladılar", "açıklar", "açıklarlar", "düşünmek", "düşündüm", "düşündün", "düşündü", "düşündük", "düşündünüz", "düşündüler", "düşünür", "düşünürler", "konuşmak", "konuşdum", "konuştun", "konuştu", "konuştuk", "konuştunuz", "konuştular", "konuşur", "konuşurlar", "bildirmek", "bildirdim", "bildirdin", "bildirdi", "bildirdik", "bildirdiniz", "bildirdiler", "birdirir", "bildirirler", "ele", "almak", "aldım", "aldın", "aldı", "aldık", "aldınız", "aldılar", "önermek", "önerdim", "önerdin", "önerdi", "önerdik", "önerdiniz", "önerdiler", "önerir", "önerirler", "anlamak", "anladım", "anladın", "anladı", "anladık", "anladınız", "anladılar", "anlar", "anlarlar"], Gta = ["en", "daha", "pek çok", "en çok", "fazla", "epey", "epeyce", "bayağı", "oldukça", "pek", "gayet", "fazlaca", "fevkalede", "tamamen", "fena halde", "fena şekilde", "gerçekten", "zerre kadar", "biraz", "son derece", "deli gibi", "en", "çok", "azıcık"], Yta = ["etmek", "olmak", "yapmak", "kalmak", "gelmek", "kalmak", "bulunmak", "demek", "dilemek", "söylemek", "durmak", "eylemek", "yazmak", "durmak", "vermek", "kabul", "teşekkür", "memnun", "seyir", "zan", "bilmek"], Zta = [
  // General adjective.
  "yeni",
  "eski",
  "önceki",
  "i̇yi",
  "büyük",
  "küçük",
  "kolay",
  "zor",
  "hızlı",
  "yavaş",
  "yüksek",
  "alçak",
  "kısa",
  "uzun",
  "i̇nce",
  "kalın",
  "gerçek",
  "yalan",
  "yanlış",
  "basit",
  "zor",
  "aynı",
  "farklı",
  "belli",
  "belirsiz",
  "modern",
  "geleneksel",
  "muhtemel",
  "yaygın",
  "genç",
  "yaşlı",
  "zamansız",
  "acı",
  "tatlı",
  "tuzlu",
  "sıcak",
  "soğuk",
  "kalabalık",
  "sakin",
  "yalnız",
  "dar",
  "geniş",
  "siyah",
  "beyaz",
  "mavi",
  "kırmızı",
  "sarı",
  "temiz",
  "kirli",
  "muhteşem",
  "nazik",
  "kibar",
  "akıllı",
  "zeki",
  "gizli",
  "açık",
  "kapalı",
  "dikkatli",
  "gürültülü",
  "sevinçli",
  // General adverbs.
  "eski",
  "önce",
  "i̇yi",
  "büyük",
  "küçük",
  "kolay",
  "zor",
  "hızlı",
  "yavaş",
  "yüksek",
  "alçak",
  "kısa",
  "uzun",
  "i̇nce",
  "kalın",
  "gerçek",
  "yanlış",
  "basit",
  "zor",
  "aynı",
  "farklı",
  "belli",
  "belirsiz",
  "modern",
  "geleneksel",
  "muhtemel",
  "yaygın",
  "nadir",
  "genç",
  "yaşlı",
  "zamansız",
  "acı",
  "tatlı",
  "tuzlu",
  "sıcak",
  "soğuk",
  "kalabalık",
  "sakin",
  "yalnız",
  "dar",
  "geniş",
  "siyah",
  "beyaz",
  "mavi",
  "kırmızı",
  "sarı",
  "temiz",
  "kirli",
  "muhteşem",
  "nazik",
  "kibar",
  "akıllı",
  "zeki",
  "gizli",
  "açık",
  "kapalı",
  "dikkatle",
  "gürültülü",
  "uzun",
  "sevinçle",
  "aşağı",
  "yukarı",
  "sağa",
  "sola",
  "i̇çeri dışarı",
  "bugün",
  "yarın",
  "haftaya",
  "seneye",
  "ne zaman",
  "nereye",
  "neden",
  "niye",
  "ne kadar",
  "nasıl",
  "ne"
], Xta = ["ey", "hey", "bre", "hişt", "şşt", "ah", "ahh", "ee", "vay", "i̇mdat", "hah", "ay", "aa", "aaa", "hay allah", "aman", "aman dikkat", "vah", "ya", "yaa", "ooo", "of", "tüh", "peh", "aman", "haydi", "sakın", "yuh"], Jta = ["çay kaşığı", "çay k.", "yemek kaşığı", "yemek k.", "tatlı kaşığı", "tatlı k.", "çay bardağı", "çay b.", "su bardağı", "su b.", "kahve fincanı", "kahve f.", "tepeleme", "tepeleme kaşık", "tepeleme bardak", "gr", "ml", "kg", "mg", "cl", "oz", "çeyrek", "tam", "yarım", "üçte biri", "üçte ikisi", "parmak"], Qta = ["saniye", "saniyeler", "dakika", "dakikalar", "saat", "saatler", "gün", "günler", "hafta", "haftalar", "ay", "aylar", "yıl", "yıllar", "bugün", "yarın", "dün", "sabah", "öğlen", "akşam", "gece", "gündüz"], aia = ["şey", "şeyler", "olasılık", "çeşit", "kişi"], eia = ["hapşu", "hapşırık", "hapşurmak", "horr", "horultu", "horlamak", "şırıl", "şırıltı", "şırıldamak", "hışır", "hışırtı", "hışırdamak", "gıcır", "gıcırtı", "gıcırdamak", "çatır", "çatırtı", "çatırdamak", "pat", "patlamak", "vın", "vınlamak", "zırr", "zırıltı", "zırlamak", "tık", "tıkırtı", "tıkırdamak", "çıt", "çıtırtı", "çıtırdamak", "fokur", "fokurtu", "fokurdamak", "kıt", "kıtırtı", "kıtırdamak", "patırtı"], tia = ["bayan", "bay", "hanımefendi", "hanfendi", "hanım", "beyefendi", "beyfendi", "bey", "sayın", "profesör", "prof.", "doktor", "dr."];
Object.defineProperty(fn, "__esModule", {
  value: !0
});
fn.default = function() {
  return {
    en: Iia,
    de: Lia,
    nl: Wia,
    fr: Bia,
    es: Fia,
    it: Dia,
    pt: Nia,
    ru: Uia,
    pl: Hia,
    sv: Via,
    id: Kia,
    he: Gia,
    ar: Yia,
    fa: Zia,
    hu: Xia,
    nb: Jia,
    tr: Qia
  };
};
var iia = Yw, nia = Ee(iia), ria = Xo, sia = Ee(ria), oia = Xc, dia = Ee(oia), lia = Jo, cia = Ee(lia), uia = Qo, pia = Ee(uia), mia = ad, gia = Ee(mia), zia = tu, fia = Ee(zia), yia = Zw, wia = Ee(yia), hia = ed, bia = Ee(hia), via = Xw, kia = Ee(via), _ia = Jw, $ia = Ee(_ia), jia = Qw, xia = Ee(jia), Aia = ah, Eia = Ee(Aia), Sia = eh, qia = Ee(Sia), Pia = th, Tia = Ee(Pia), Ria = ih, Oia = Ee(Ria), Mia = nh, Cia = Ee(Mia);
function Ee(a) {
  return a && a.__esModule ? a : { default: a };
}
const Lia = (0, nia.default)(), Iia = (0, sia.default)(), Wia = (0, dia.default)(), Fia = (0, cia.default)(), Dia = (0, pia.default)(), Bia = (0, gia.default)(), Nia = (0, fia.default)(), Uia = (0, wia.default)(), Hia = (0, bia.default)(), Via = (0, kia.default)(), Kia = (0, $ia.default)(), Gia = (0, xia.default)(), Yia = (0, Eia.default)(), Zia = (0, qia.default)(), Xia = (0, Tia.default)(), Jia = (0, Oia.default)(), Qia = (0, Cia.default)();
Object.defineProperty(Kc, "__esModule", {
  value: !0
});
Kc.default = function() {
  const a = (0, ena.default)();
  return Object.keys(a);
};
var ana = fn, ena = tna(ana);
function tna(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(Oi, "__esModule", {
  value: !0
});
var Vs = I, ina = Ga, nna = su(ina), rna = Kc, sna = su(rna), ona = Ya, dna = su(ona), wS = va, lna = za, cna = su(lna);
function su(a) {
  return a && a.__esModule ? a : { default: a };
}
class una extends nna.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   * @param {number} [config.parameters.recommendedMinimum] The recommended minimum length of the keyphrase (in words).
   * @param {number} [config.parameters.acceptableMaximum] The acceptable maximum length of the keyphrase (in words).
   * @param {number} [config.scores.veryBad] The score to return if the length of the keyphrase is below recommended minimum.
   * @param {number} [config.scores.consideration] The score to return if the length of the keyphrase is above acceptable maximum.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      parameters: {
        recommendedMinimum: 1,
        recommendedMaximum: 4,
        acceptableMaximum: 8
      },
      parametersNoFunctionWordSupport: {
        recommendedMaximum: 6,
        acceptableMaximum: 9
      },
      scores: {
        veryBad: -999,
        bad: 3,
        okay: 6,
        good: 9
      },
      urlTitle: (0, wS.createAnchorOpeningTag)("https://yoa.st/33i"),
      urlCallToAction: (0, wS.createAnchorOpeningTag)("https://yoa.st/33j"),
      isRelatedKeyphrase: !1
    };
    this.identifier = "keyphraseLength", this._config = (0, Vs.merge)(t, e);
  }
  /**
   * Assesses the keyphrase presence and length.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {AssessmentResult} The result of this assessment.
   */
  getResult(e, t, i) {
    this._keyphraseLength = t.getResearch("keyphraseLength");
    const n = new cna.default();
    this._boundaries = this._config.parameters, (0, sna.default)().includes((0, dna.default)(e.getLocale())) === !1 && (this._boundaries = (0, Vs.merge)({}, this._config.parameters, this._config.parametersNoFunctionWordSupport));
    const s = this.calculateResult(i);
    return (0, Vs.isUndefined)(s) || (n.setScore(s.score), n.setText(s.resultText)), n;
  }
  /**
   * Calculates the result based on the keyphraseLength research.
   *
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {Object} Object with score and text.
   */
  calculateResult(e) {
    return this._keyphraseLength < this._boundaries.recommendedMinimum ? this._config.isRelatedKeyphrase ? {
      score: this._config.scores.veryBad,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sKeyphrase length%3$s: %2$sSet a keyphrase in order to calculate your SEO score%3$s."),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : {
      score: this._config.scores.veryBad,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sKeyphrase length%3$s: No focus keyphrase was set for this page. %2$sSet a keyphrase in order to calculate your SEO score%3$s."),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : (0, Vs.inRange)(this._keyphraseLength, this._boundaries.recommendedMinimum, this._boundaries.recommendedMaximum + 1) ? {
      score: this._config.scores.good,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase length%2$s: Good job!"),
        this._config.urlTitle,
        "</a>"
      )
    } : (0, Vs.inRange)(this._keyphraseLength, this._boundaries.recommendedMaximum + 1, this._boundaries.acceptableMaximum + 1) ? {
      score: this._config.scores.okay,
      resultText: e.sprintf(
        /* Translators:
        %1$d expands to the number of words in the keyphrase,
        %2$d expands to the recommended maximum of words in the keyphrase,
        %3$s and %4$s expand to links on yoast.com,
        %5$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%3$sKeyphrase length%5$s: The keyphrase is %1$d words long. That's more than the recommended maximum of %2$d words. %4$sMake it shorter%5$s!"),
        this._keyphraseLength,
        this._boundaries.recommendedMaximum,
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : {
      score: this._config.scores.bad,
      resultText: e.sprintf(
        /* Translators:
        %1$d expands to the number of words in the keyphrase,
        %2$d expands to the recommended maximum of words in the keyphrase,
        %3$s and %4$s expand to links on yoast.com,
        %5$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%3$sKeyphrase length%5$s: The keyphrase is %1$d words long. That's way more than the recommended maximum of %2$d words. %4$sMake it shorter%5$s!"),
        this._keyphraseLength,
        this._boundaries.recommendedMaximum,
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    };
  }
}
Oi.default = una;
var Mi = {}, rh = {}, ut = {};
Object.defineProperty(ut, "__esModule", {
  value: !0
});
ut.default = function(a) {
  return (0, mna.default)(a).length;
};
var pna = se, mna = gna(pna);
function gna(a) {
  return a && a.__esModule ? a : { default: a };
}
var ou = {};
Object.defineProperty(ou, "__esModule", {
  value: !0
});
ou.default = function(a) {
  return 0.7 + a / 3;
};
Object.defineProperty(rh, "__esModule", {
  value: !0
});
rh.default = function(a, e, t, i) {
  const n = (0, fna.default)(a);
  if (n === 0)
    return 0;
  const r = (0, wna.default)(e), s = t * n / (100 * r);
  if (s < 2)
    return 2;
  switch (i) {
    case "min":
      return Math.ceil(s);
    default:
    case "max":
      return Math.floor(s);
  }
};
var zna = ut, fna = HI(zna), yna = ou, wna = HI(yna);
function HI(a) {
  return a && a.__esModule ? a : { default: a };
}
var du = {}, lu = {}, rr = {}, yn = {};
Object.defineProperty(yn, "__esModule", {
  value: !0
});
yn.buildOneFormFromRegex = hna;
function hna(a, e) {
  for (let t = 0; t < e.length; t++)
    if (e[t].reg.test(a) === !0)
      return a.replace(e[t].reg, e[t].repl);
}
var Ct = {};
Object.defineProperty(Ct, "__esModule", {
  value: !0
});
const VI = function(e, t = "i") {
  if (e.length === 2)
    return {
      reg: new RegExp(e[0], t),
      repl: e[1]
    };
  if (e.length === 3)
    return {
      reg: new RegExp(e[0], t),
      repl1: e[1],
      repl2: e[2]
    };
}, KI = function(e, t = "i") {
  return e.map((i) => VI(i, t));
};
Ct.createSingleRuleFromMorphologyData = VI;
Ct.createRulesFromMorphologyData = KI;
Ct.default = KI;
var sh = {};
Object.defineProperty(sh, "__esModule", {
  value: !0
});
sh.default = function(a, e, t) {
  if (nz("er", 4, t.erExceptions)(a)) {
    const s = (0, iz.default)(e.comparativeToBase);
    return {
      base: (0, tz.buildOneFormFromRegex)(a, s) || a,
      guessedForm: "er"
    };
  }
  if (nz("est", 5, t.estExceptions)(a)) {
    const s = (0, iz.default)(e.superlativeToBase);
    return {
      base: (0, tz.buildOneFormFromRegex)(a, s) || a,
      guessedForm: "est"
    };
  }
  if (nz("ly", 5, t.lyExceptions)(a)) {
    const s = (0, iz.default)(e.adverbToBase);
    return {
      base: (0, tz.buildOneFormFromRegex)(a, s),
      guessedForm: "ly"
    };
  }
  return {
    base: a,
    guessedForm: "base"
  };
};
var tz = yn, bna = Ct, iz = vna(bna);
function vna(a) {
  return a && a.__esModule ? a : { default: a };
}
const nz = function(e, t, i) {
  return (n) => {
    const r = n.length;
    return r < t ? !1 : n.substring(r - e.length, r) === e && !i.includes(n);
  };
};
var Zt = {};
Object.defineProperty(Zt, "__esModule", {
  value: !0
});
Zt.normalizePrefixed = Zt.endsWithIng = Zt.checkIrregulars = Zt.getInfinitive = void 0;
var hS = I, kna = Ct, rz = _na(kna), sz = yn;
function _na(a) {
  return a && a.__esModule ? a : { default: a };
}
const GI = /([aeiouy])/g, YI = function(e, t) {
  for (const i in t)
    t.hasOwnProperty(i) && (t[i] = new RegExp(t[i], "i"));
  if (t.sevenLetterHyphenPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.sevenLetterHyphenPrefixes, ""),
      prefix: e.substring(0, 8)
    };
  if (t.sevenLetterPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.sevenLetterPrefixes, ""),
      prefix: e.substring(0, 7)
    };
  if (t.fiveLetterHyphenPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.fiveLetterHyphenPrefixes, ""),
      prefix: e.substring(0, 6)
    };
  if (t.fiveLetterPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.fiveLetterPrefixes, ""),
      prefix: e.substring(0, 5)
    };
  if (t.fourLetterHyphenPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.fourLetterHyphenPrefixes, ""),
      prefix: e.substring(0, 5)
    };
  if (t.fourLetterPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.fourLetterPrefixes, ""),
      prefix: e.substring(0, 4)
    };
  if (t.threeLetterHyphenPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.threeLetterHyphenPrefixes, ""),
      prefix: e.substring(0, 4)
    };
  if (t.threeLetterPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.threeLetterPrefixes, ""),
      prefix: e.substring(0, 3)
    };
  if (t.twoLetterHyphenPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.twoLetterHyphenPrefixes, ""),
      prefix: e.substring(0, 3)
    };
  if (t.twoLetterPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.twoLetterPrefixes, ""),
      prefix: e.substring(0, 2)
    };
  if (t.oneLetterPrefixes.test(e) === !0)
    return {
      normalizedWord: e.replace(t.oneLetterPrefixes, ""),
      prefix: e.substring(0, 1)
    };
}, $na = function(e, t, i) {
  let n;
  if (t.forEach(function(r) {
    r.forEach(function(s) {
      s === e && (n = r);
    });
  }), (0, hS.isUndefined)(n)) {
    const r = YI(e, i);
    (0, hS.isUndefined)(r) || t.forEach(function(s) {
      s.forEach(function(o) {
        o === r.normalizedWord && (n = s.map(function(d) {
          return r.prefix.concat(d);
        }));
      });
    });
  }
  return n;
}, jna = function(e) {
  return e.length > 3 ? e[e.length - 1] === "s" : !1;
}, ZI = function(e) {
  return (e.match(GI) || []).length > 1 && e.length > 4 ? e.substring(e.length - 3, e.length) === "ing" : !1;
}, xna = function(e) {
  const t = (e.match(GI) || []).length;
  return t > 1 || t === 1 && e.substring(e.length - 3, e.length - 2) !== "e" ? e.substring(e.length - 2, e.length) === "ed" : !1;
}, Ana = function(e, t) {
  const i = (0, rz.default)(t.sFormToInfinitive), n = (0, rz.default)(t.ingFormToInfinitive), r = (0, rz.default)(t.edFormToInfinitive);
  return jna(e) ? {
    infinitive: (0, sz.buildOneFormFromRegex)(e, i),
    guessedForm: "s"
  } : ZI(e) ? {
    infinitive: (0, sz.buildOneFormFromRegex)(e, n),
    guessedForm: "ing"
  } : xna(e) ? {
    infinitive: (0, sz.buildOneFormFromRegex)(e, r) || e,
    guessedForm: "ed"
  } : {
    infinitive: e,
    guessedForm: "inf"
  };
};
Zt.getInfinitive = Ana;
Zt.checkIrregulars = $na;
Zt.endsWithIng = ZI;
Zt.normalizePrefixed = YI;
Object.defineProperty(rr, "__esModule", {
  value: !0
});
rr.findShortestAndAlphabeticallyFirst = JI;
rr.determineIrregularStem = wl;
rr.determineIrregularVerbStem = QI;
rr.determineRegularStem = aW;
rr.determineStem = Pna;
var yo = I, fl = yn, Ena = Ct, yl = XI(Ena), Sna = sh, qna = XI(Sna), Tf = Zt;
function XI(a) {
  return a && a.__esModule ? a : { default: a };
}
function JI(a) {
  const e = (0, yo.flatten)(a);
  let t = e.pop();
  return e.forEach((i) => {
    const n = i.length - t.length;
    n === 0 ? i.localeCompare(t) < 0 && (t = i) : n < 0 && (t = i);
  }), t;
}
function wl(a, e) {
  for (let t = 0; t < e.length; t++) {
    const i = e[t];
    for (let n = 0; n < i.length; n++)
      if (i[n] === a)
        return i[0];
  }
  return null;
}
function QI(a, e) {
  const t = (0, Tf.checkIrregulars)(a, e.irregularVerbs, e.regexVerb.verbPrefixes);
  return (0, yo.isUndefined)(t) ? null : t[0];
}
function aW(a, e) {
  const t = e.verbs.regexVerb, i = (0, fl.buildOneFormFromRegex)(a, (0, yl.default)(e.nouns.regexNoun.singularize));
  if (!(0, yo.isUndefined)(i))
    return (0, Tf.endsWithIng)(i) ? (0, fl.buildOneFormFromRegex)(i, (0, yl.default)(t.ingFormToInfinitive)) : i;
  const n = e.adjectives.regexAdjective, r = (0, fl.buildOneFormFromRegex)(a, (0, yl.default)(n.icallyToBase));
  if (!(0, yo.isUndefined)(r))
    return r;
  const s = [], o = (0, Tf.getInfinitive)(a, t).infinitive;
  s.push(o);
  const d = e.adjectives.stopAdjectives, c = (0, qna.default)(a, n, d).base;
  return s.push(c), JI(s);
}
function Pna(a, e) {
  const t = e.nouns, i = (0, fl.buildOneFormFromRegex)(a, (0, yl.default)(t.regexNoun.possessiveToBase));
  let n, r;
  return (0, yo.isUndefined)(i) ? (n = a, r = wl(a, t.irregularNouns) || wl(a, e.adjectives.irregularAdjectives) || QI(a, e.verbs)) : (n = i, r = wl(i, t.irregularNouns)), r || aW(n, e);
}
var oh = {}, dh = {}, cu = {};
Object.defineProperty(cu, "__esModule", {
  value: !0
});
cu.default = function() {
  return ["geht", "gämsbart", "gemsbart", "geäst", "gebarungsbericht", "geähnelt", "geartet", "gebäudetrakt", "gebet", "gebiet", "gebietsrepräsentant", "gebildbrot", "gebirgsart", "gebirgsgrat", "gebirgskurort", "gebirgsluft", "gebirgsschlucht", "geblüt", "geblütsrecht", "gebohntkraut", "gebot", "gebrauchsgut", "gebrauchstext", "gebrauchsverlust", "gebrauchtgerät", "gebrauchtwagengeschäft", "gebrauchtwagenmarkt", "geburt", "geburtsakt", "geburtsgeschwulst", "geburtsgewicht", "geburtsort", "geburtsrecht", "geburtsstadt", "geburtstagsfest", "geckenart", "gedächtniskonzert", "gedächtniskunst", "gedächtnisverlust", "gedankenarmut", "gedankenexperiment", "gedankenflucht", "gedankengut", "gedankenschritt", "gedankenwelt", "gedenkkonzert", "gedicht", "geest", "gefahrengebiet", "gefahrenmoment", "gefahrenpunkt", "gefahrgut", "gefahrguttransport", "gefährt", "gefälligkeitsakzept", "gefallsucht", "gefangenenanstalt", "gefangenentransport", "gefängnisarzt", "gefängniskluft", "gefäßnaht", "gefecht", "gefechtsabschnitt", "gefechtsbereit", "gefechtsgebiet", "gefechtsgewicht", "gefechtshut", "gefechtsmast", "gefechtsmast", "geflecht", "geflügelaufzucht", "geflügelleberwurst", "geflügelmarkt", "geflügelmast", "geflügelpest", "geflügelsalat", "geflügelwurst", "geflügelzucht", "gefolgsleute", "gefrett", "gefriergerät", "gefriergut", "gefrierobst", "gefrierpunkt", "gefrierschnitt", "gefühlsarmut", "gefühlswelt", "gegenangebot", "gegenansicht", "gegenargument", "gegengeschäft", "gegengewalt", "gegengewicht", "gegenkandidat", "gegenkompliment", "gegenkonzept", "gegenlicht", "gegenmacht", "gegenpapst", "gegenpart", "gegensatzwort", "gegenstandpunkt", "gegenstandsgebiet", "gegenwart", "gegenwartskunst", "gegenwelt", "gegenwort", "gehaart", "gehandicapt", "gehandikapt", "geheimagent", "geheimbericht", "geheimdokument", "geheimfavorit", "geheimkontakt", "geheimkult", "geheimnisverrat", "geheimpolizist", "geheimrat", "geheimrezept", "geheimtext", "gehirnakrobat", "gehirngeschwulst", "gehirnhaut", "gehirnsandgeschwulst", "gehirntot", "gehirntrust", "gehöft", "gehörlosensport", "geigenkonzert", "geißbart", "geißblatt", "geißhirte", "geißhirt", "geist", "geisterfahrt", "geisterstadt", "geisterwelt", "geistesarmut", "geistesart", "geistesfürst", "geistesgegenwart", "geistesgestört", "geistesprodukt", "geistestat", "geistesverwandt", "geisteswelt", "geklüft", "geländefahrt", "geländeritt", "geländesport", "gelangweilt", "gelaut", "geläut", "gelblicht", "gelbrost", "gelbsucht", "gelbwurst", "gelcoat", "geldausgabeautomat", "geldautomat", "geldgeschäft", "geldheirat", "geldinstitut", "geldmarkt", "geldsurrogat", "geldtransport", "geldverlust", "gelehrtenstreit", "gelehrtenwelt", "geleit", "geleitboot", "geleitwort", "gelenkgicht", "gelenkwassersucht", "geleucht", "geltungssucht", "gelüst", "gemächt", "gemeindeamt", "gemeindebürgerrecht", "gemeindegut", "gemeindekirchenrat", "gemeindepräsident", "gemeinderat", "gemeingeist", "gemeingut", "gemeinschaftsgeist", "gemeinschaftsprojekt", "gemeinschaftsunterkunft", "gemengesaat", "gemüseart", "gemüsebeet", "gemüsegeschäft", "gemüsemarkt", "gemüsesaft", "gemüsesalat", "gemüsezucht", "gemüt", "gemütsarmut", "gemütsart", "gemütsathlet", "gemütskalt", "genausogut", "genausooft", "genausoweit", "gendefekt", "generalagent", "generalarzt", "generalat", "generalbassinstrument", "generalbaßinstrument", "generalbundesanwalt", "generalgouvernement", "generalintendant", "generalist", "generalkonsulat", "generalleutnant", "generaloberst", "generalresident", "generalsekretariat", "generalstaaten", "generalstaatsanwalt", "generalsuperintendent", "generalüberholt", "generalvikariat", "generalvollmacht", "generationenkonflikt", "generativist", "genist", "genitivattribut", "genitivobjekt", "genmanipuliert", "gennesaret", "genotzüchtigt", "gent", "genuasamt", "genussgift", "genußgift", "genusssucht", "genuss-sucht", "genußsucht", "genverändert", "geobiont", "geodät", "geografieunterricht", "geographieunterricht", "geokrat", "geophyt", "gepäckfracht", "geradeausfahrt", "geradesogut", "gefälligst", "gerant", "gerät", "gerätewart", "geräuschlaut", "gerbextrakt", "gericht", "gerichtsarzt", "gerichtsort", "gerichtspräsident", "germanisiert", "germanist", "germanistikstudent", "gerodelt", "geröllschicht", "geröllschutt", "geront", "gerontokrat", "gerstenbrot", "gerstensaft", "gerstenschrot", "gerücht", "gerüst", "gesamtansicht", "gesamtaspekt", "gesamtdurchschnitt", "gesamtgewicht", "gesamtgut", "gesamt", "gesamtklassement", "gesamtunterricht", "gesandtschaftsrat", "gesangskunst", "gesangspart", "gesangssolist", "gesangsunterricht", "gesangunterricht", "geschäft", "geschäftsaufsicht", "geschäftsbericht", "geschäftsgeist", "geschäftswelt", "geschenkpaket", "geschichtsunterricht", "geschicklichkeitstest", "geschicklichkeitstest", "geschlecht", "geschlechtsakt", "geschlechtslust", "geschlechtsprodukt", "geschlechtswort", "geschmackstest", "geschwindigkeitslimit", "geschworenengericht", "geschwulst", "gesellschaftsfahrt", "gesellschaftsschicht", "gesetzblatt", "gesetzespaket", "gesetzestext", "gesicht", "gesichtshaut", "gesichtspunkt", "gesichtsschnitt", "gesichtsverlust", "gespenst", "gespensterfurcht", "gespinst", "gespött", "gesprächstherapeut", "gestalt", "gestaltungselement", "gesteinsart", "gesteinschutt", "gesteinsschicht", "gestüt", "gestüthengst", "verantwortungsbewusst", "verantwortungsbewußt", "getast", "getränkeabholmarkt", "getränkeautomat", "getränkemarkt", "getreideart", "getreideaussaat", "getreideexport", "getreideimport", "getreideprodukt", "getreideschnitt", "getreidevorrat", "gewährfrist", "gewalt", "gewaltakt", "gewaltbereit", "gewalttat", "gesprächsbereit", "gewaltverbot", "gewaltverzicht", "gewässerbett", "gewässerwart", "gewebeschicht", "gewebsrest", "gewicht", "gewichtsprozent", "gewichtsverlust", "gewerbeamt", "gewerbearzt", "gewerbeaufsicht", "gewerbeaufsichtsamt", "gewerbegebiet", "gewerberecht", "gewerbsunzucht", "gewerkschaft", "gewerkschaftsjournalist", "gewindestift", "gewinnsucht", "gewinst", "gewissensangst", "gewissenskonflikt", "gewitterfront", "gewitterluft", "gewohnheitsrecht", "gewürzextrakt", "gewürzkraut", "gezücht", "erbbaurecht", "erbfolgerecht", "erbfolgestreit", "erbgut", "erbhofrecht", "erblast", "erbpacht", "erbrecht", "erbschaftsstreit", "erbsenkraut", "erbbedingt", "erbberechtigt", "erblasst", "erblaßt", "erbswurst", "erbverzicht", "erbwort", "erbzinsgut", "erdbebengebiet", "erdbeerjogurt", "erdbeerjoghurt", "erdbeeryoghurt", "erdbeerkompott", "erdbeerrot", "erdbeersaft", "erdbeersekt", "erdengut", "erdenlust", "erdfrucht", "erdgeist", "erdkundeunterricht", "erdlicht", "erdmittelpunkt", "erdnussfett", "erdölprodukt", "erdölproduzent", "erdsatellit", "erdschicht", "erdsicht", "erdtrabant", "erdverhaftet", "eremit", "erfahrungsbericht", "erfahrungshorizont", "erfahrungswelt", "erfindergeist", "erfolgsaussicht", "erfolgsorientiert", "erfolgsrezept", "erfolgsverwöhnt", "erfüllungsort", "erfurt", "ergänzungsheft", "ergänzungssport", "ergänzungstest", "ergostat", "ergotherapeut", "erholungsgebiet", "erholungsort", "erkundungsfahrt", "erlaucht", "erläuterungstext", "erlebnisbericht", "erlebnisorientiert", "erlebniswelt", "ernährungsamt", "ernst", "ernstgemeint", "ernteaussicht", "erntedankfest", "erntefest", "erntemonat", "ernteresultat", "eroberungsabsicht", "eroberungsgeist", "eroberungslust", "eroberungssucht", "eröffnungskonzert", "ersatzgeschwächt", "ersatzgut", "ersatzkandidat", "ersatzobjekt", "ersatzpräparat", "ersatzreservist", "ersatztorwart", "erscheinungsfest", "erscheinungsort", "erscheinungswelt", "erschließungsgebiet", "erst", "erstbundesligist", "erstfahrt", "erstgebot", "erstgeburt", "erstgeburtsrecht", "erstklassbillett", "erstklaßbillett", "erstkommunikant", "erstkonsument", "erstligist", "erstplatziert", "erstplaciert", "erstplaziert", "erstrecht", "ertragsaussicht", "erwartungsangst", "erwartungshorizont", "erwerbseinkünfte", "erythrit", "erythroblast", "erythrozyt", "erzählertalent", "erzählgut", "erzählkunst", "erzähltalent", "erzamt", "erzdemokrat", "erzeugungsschlacht", "erzfaschist", "erziehungsanstalt", "erziehungsberechtigt", "erziehungsinstitut", "erzkommunist", "erzprotestant", "veranlassungswort", "veranschaulicht", "veranschlagt", "verantwortungsbewusst", "verantwortungsbewußt", "veräußerungsverbot", "verbalist", "verbalkontrakt", "verbändestaat", "verbannungsort", "verbildlicht", "verbindungspunkt", "verbindungsstudent", "verbraucherkredit", "verbrauchermarkt", "verbrauchsgut", "verbrechernest", "verbrechersyndikat", "verbrecherwelt", "verbreitungsgebiet", "verbrennungsprodukt", "verdachtsmoment", "verdampfungsgerät", "verdauungstrakt", "verdikt", "veredelungsprodukt", "verehrerpost", "vereinspräsident", "vereinsrecht", "vereinssport", "verfahrensrecht", "verfassungsfahrt", "verfassungsgericht", "verfassungsrecht", "verfassungsstaat", "verfolgungsrecht", "verfremdungseffekt", "verfügungsgewalt", "verfügungsrecht", "verfügungsberechtigt", "verführungskunst", "vergegenständlicht", "vergegenwärtigt", "vergeltungsakt", "vergenossenschaftlicht", "vergissmeinnicht", "vergißmeinnicht", "vergleichsmonat", "vergleichsobjekt", "vergleichspunkt", "vergnügungsetablissement", "vergnügungsfahrt", "vergnügungssucht", "vergrößerungsgerät", "verhaltensgestört", "verhältniswahlrecht", "verhältniswort", "verhandlungsangebot", "verhandlungsbereit", "versandbereit", "verteidigungsbereit", "verhandlungsmandat", "verhandlungsort", "verhandlungspunkt", "verhöramt", "verist", "verjährungsfrist", "verkaufsagent", "verkaufsangebot", "verkaufsargument", "verkaufsautomat", "verkaufsfront", "verkaufshit", "verkaufsobjekt", "verkaufsorientiert", "verkaufspunkt", "verkehrsamt", "verkehrsdelikt", "verkehrsinfarkt", "verkehrsknotenpunkt", "verkehrslicht", "verkehrsnachricht", "verkehrspolizist", "verkehrsrecht", "verkehrsunterricht", "verkehrsverbot", "verklarungsbericht", "verknüpfungspunkt", "verkündungsblatt", "verlagsanstalt", "verlagsprospekt", "verlagsrecht", "verlagsrepräsentant", "verlagssignet", "verlust", "verlustgeschäft", "verlust", "verlustgeschäft", "verlustpunkt", "vermessungsamt", "vermittlungsamt", "vermögensrecht", "vermont", "vermummungsverbot", "verneinungswort", "vernichtungswut", "vernunft", "vernunftheirat", "verordnungsblatt", "verpackungsflut", "verpflichtungsgeschäft", "verrat", "versammlungsort", "versammlungsrecht", "versandgeschäft", "versandgut", "versart", "verschlusslaut", "verschnitt", "verschwendungssucht", "versehrtensport", "versicherungsagent", "versicherungsanstalt", "versicherungsrecht", "verskunst", "versöhnungsfest", "versorgungsamt", "versorgungsberechtigt", "versorgungsgebiet", "versorgungsgut", "versorgungsstaat", "verstakt", "verständigungsbereit", "verstellungskunst", "verstürznaht", "versuchsanstalt", "versuchsobjekt", "versuchsprojekt", "vertebrat", "verteidigungsbudget", "verteidigungsetat", "verteidigungspakt", "verteilungskonflikt", "verteilungszahlwort", "vertikalschnitt", "vertikutiergerät", "vertragsgerecht", "vertragspunkt", "vertragsrecht", "vertragsstaat", "vertragstext", "vertragswerkstatt", "vertrauensanwalt", "vertrauensarzt", "vertrauensverlust", "vertriebsrecht", "vervielfältigungsrecht", "vervielfältigungszahlwort", "verwaltungsakt", "verwaltungsgericht", "verwaltungsrat", "verwaltungsrecht", "verwundetentransport", "verzicht", "verzweiflungsakt", "verzweiflungstat", "entbindungsanstalt", "entdeckungsfahrt", "entenbrust", "entenfett", "entertainment", "enthusiast", "entlastungsmoment", "entlüftungsschacht", "entnazifizierungsgericht", "entoblast", "entoparasit", "entrechat", "entrefilet", "entrepot", "entscheidungsfurcht", "entscheidungsgewalt", "entscheidungsrecht", "entscheidungsschlacht", "entstehungsort", "entsteht", "entwässerungsschacht", "entwicklungsabschnitt", "entwicklungsinstitut", "entwicklungsprojekt", "entwicklungsschritt", "entziehungsanstalt", "zerat", "zerebrallaut", "zerfallsprodukt", "zergliederungskunst", "zerit", "zermatt", "zersetzungsprodukt", "zerstörungslust", "zerstörungswut", "zertifikat", "zerussit", "zervelat", "zervelatwurst", "beamtenrecht", "beamtenschicht", "beamtenstaat", "beat", "beatmungsgerät", "beaufort", "becherfrucht", "beckengurt", "becquereleffekt", "bedarfsgut", "bedenkfrist", "bedienungselement", "bedienungsgerät", "bedienungskomfort", "bedingtgut", "bedürfnisanstalt", "beeinflusst", "beeinflußt", "beerdigungsanstalt", "beerdigungsinstitut", "beerenfrucht", "beerenobst", "beerensaft", "beet", "befasst", "befaßt", "befehlsgewalt", "beförderungsentgelt", "beförderungsrecht", "begabungstest", "begegnungsort", "begleitinstrument", "begleittext", "begleitwort", "begnadigungsrecht", "begräbt", "begrenzungslicht", "begriffswelt", "begriffswort", "begrüßungswort", "behaviorist", "behebungsfrist", "behelfsausfahrt", "behelfsunterkunft", "behindertengerecht", "behindertensport", "behindertentransport", "behmlot", "beiblatt", "beiboot", "beignet", "beiheft", "beikost", "beilast", "beileidswort", "beinamputiert", "beinhaut", "beirat", "beirut", "beistandskredit", "beistandspakt", "beitritt", "beitrittsabsicht", "beitrittsgebiet", "beiwacht", "beiwort", "beizgerät", "bekehrungswut", "bekennergeist", "bekennermut", "bekleidungsamt", "bekommen", "belegarzt", "belegbett", "belegfrist", "belehrungssucht", "belemnit", "belesprit", "beleuchtungseffekt", "beleuchtungsgerät", "belfast", "belkantist", "belcantist", "belletrist", "bellizist", "belt", "benedikt", "benediktenkraut", "benefiziant", "benefiziat", "benefizkonzert", "beneluxstaat", "bentonit", "benzindunst", "beratungspunkt", "bereit", "bereicherungsabsicht", "bereitschaftsarzt", "bergamt", "bergeslast", "bergfahrt", "bergfest", "berggeist", "berggrat", "bergluft", "bergpredigt", "bergsport", "berg-und-Tal-Fahrt", "bergwacht", "bergwelt", "bericht", "berichtsmonat", "beritt", "bermudashort", "bernbiet", "berserkerwut", "berufsaussicht", "berufssoldat", "berufssport", "berufsstart", "berufstracht", "berufsverbot", "berufungsfrist", "berufungsgericht", "berufungsrecht", "berührungsangst", "berührungspunkt", "besanmast", "besatzungsgebiet", "besatzungsmacht", "besatzungsrecht", "besatzungssoldat", "besatzungsstatut", "beschaffungsamt", "beschäftigungstherapeut", "beschlächt", "beschlussrecht", "beschlußrecht", "beschmet", "beschneidungsfest", "beschlächt", "beschlussrecht", "beschlußrecht", "beschmet", "beschneidungsfest", "beschwerdefrist", "beschwerderecht", "beschwörungskunst", "beseitigungsanstalt", "besetzungsgebiet", "besetzungsmacht", "besetzungsstatut", "besichtigungsfahrt", "besitzrecht", "besoldungsrecht", "besprechungspunkt", "besserungsanstalt", "bestattungsinstitut", "bestimmungsort", "bestimmungswort", "bestinformiert", "bestqualifiziert", "bestrahlungsgerät", "bestrenommiert", "bestsituiert", "bestverkauft", "besucherrat", "besuchsrecht", "betpult", "betracht", "betreibungsamt", "betriebsarzt", "betriebsfest", "betriebsrat", "betriebswirt", "bett", "bettelmusikant", "bettelvogt", "bettstatt", "bettwurst", "beulenpest", "beutegut", "beutekunst", "beuterecht", "bevölkerungsschicht", "bewahranstalt", "bewährungsfrist", "bewegungsarmut", "beweislast", "bewußt", "bewusst", "beziehungsgeflecht", "bezirksamt", "bezirksarzt", "bezirksgericht", "bezirkskabinett", "bezirksschulrat", "bezirksstadt", "bezugspunkt", "bezugsrecht", "heraklit", "herat", "herbalist", "herbst", "herbstmonat", "herbstpunkt", "herdbuchzucht", "herdeninstinkt", "herfahrt", "heringsfilet", "heringssalat", "herkuleskraut", "herkunft", "herkunftsort", "hermaphrodit", "heroenkult", "heroinsucht", "heroldsamt", "heroldskunst", "herostrat", "herrenabfahrt", "herrenbrot", "herrendienst", "herrenfest", "herrenhut", "herrenrecht", "herrenschnitt", "herrenwelt", "herrgott", "herrnhut", "herrschaftsgebiet", "herrschaftsgewalt", "herrschaftsinstrument", "herrschergeschlecht", "herrscherkult", "herrschsucht", "herstellungsart", "herzacht", "herzangst", "herzblatt", "herzblut", "herzensangst", "herzensgut", "herzenslust", "herzenstrost", "herzgeliebt", "herzinfarkt", "herzinnenhaut", "herzklappendefekt", "herzogshut", "herzlichst", "herzpatient", "herzpunkt", "herzspezialist", "überbackt", "ueberbackt", "überbacktet", "ueberbacktet", "überbietet", "ueberbietet", "überbot", "ueberbot", "überbotet", "ueberbotet", "überbindet", "ueberbindet", "überbandet", "ueberbandet", "überbläst", "ueberblaest", "überbliest", "ueberbliest", "überbrät", "ueberbraet", "überbratet", "ueberbratet", "überbriet", "ueberbriet", "überbrietet", "ueberbrietet", "überbringt", "ueberbringt", "überbrachtet", "ueberbrachtet", "überbrücktet", "ueberbruecktet", "überbrühtet", "ueberbrühtet", "überbrülltet", "ueberbruelltet", "überbuchtet", "ueberbuchtet", "überbürdetet", "ueberbuerdetet", "überdecktet", "ueberdecktet", "überdehntet", "ueberdehntet", "überdenkt", "ueberdenkt", "überdachtet", "ueberdachtet", "überdosiertet", "ueberdosiertet", "überdrehtet", "ueberdrehtet", "überdrucktet", "ueberdrucktet", "überdüngtet", "ueberdüngtet", "übereignetet", "uebereignetet", "übereiltet", "uebereiltet", "übererfülltet", "uebererfuelltet", "überißt", "ueberisst", "ueberißt", "überisst", "überesst", "ueberesst", "übereßt", "uebereßt", "überaßt", "ueberaßt", "überesset", "ueberesset", "überäßet", "ueberaesset", "überfährt", "ueberfaehrt", "überfahrt", "ueberfahrt", "überfuhrt", "ueberfuhrt", "überfällt", "ueberfaellt", "überfallet", "ueberfallet", "überfielt", "ueberfielt", "überfielet", "ueberfielet", "überfängt", "ueberfaengt", "überfingt", "ueberfingt", "überfinget", "ueberfinget", "überfärbet", "ueberfaerbet", "überfettetet", "ueberfettetet", "überfirnisset", "ueberfirnisset", "überfirnißtet", "ueberfirnisstet", "überfischet", "ueberfischet", "überfischtet", "ueberfischtet", "überflanktet", "ueberflanktet", "überflanktet", "ueberflanktet", "überfliegt", "ueberfliegt", "überflieget", "ueberflieget", "überflöget", "ueberflöget", "überflösset", "ueberfloesset", "überflosst", "ueberflosst", "überfloßt", "ueberflosst", "überfließt", "ueberfliesst", "überflutetet", "ueberflutetet", "überformet", "ueberformet", "überformtet", "ueberformtet", "überfrachtetet", "ueberfrachtetet", "überfracht", "ueberfracht", "überfraget", "ueberfraget", "überfragtet", "ueberfragtet", "überfremdetet", "ueberfremdetet", "überfrisst", "ueberfrisst", "überfrißt", "ueberfrißt", "überfresst", "ueberfresst", "überfreßt", "ueberfreßt", "überfresset", "ueberfresset", "überfraßt", "ueberfraßt", "ueberfrasst", "überfräßet", "ueberfraesset", "überfriert", "ueberfriert", "überfrieret", "ueberfrieret", "überfrort", "ueberfrort", "überfröret", "ueberfroeret", "überfrört", "ueberfroert", "überführet", "ueberfuehret", "überführtet", "ueberfuehrtet", "überfüllet", "ueberfuellet", "übergibt", "uebergibt", "übergebt", "uebergebt", "übergebet", "uebergebet", "übergabt", "uebergabt", "übergäbet", "uebergaebet", "übergäbt", "uebergaebt", "übergeht", "uebergeht", "übergehet", "uebergehet", "übergingt", "uebergingt", "übergewichtetet", "uebergewichtetet", "übergießet", "uebergiesset", "übergießt", "uebergiesst", "übergösset", "uebergoesset", "übergosst", "uebergosst", "uebergoßt", "übergipset", "uebergipset", "übergipstet", "uebergipstet", "übergipset", "uebergipset", "übergipstet", "uebergipstet", "überglänzet", "ueberglaenzet", "überglänztet", "ueberglaenztet", "überglaset", "ueberglaset", "überglastet", "ueberglastet", "überglühet", "uebergluehet", "überglühtet", "uebergluehtet", "übergoldetet", "uebergoldetet", "übergraset", "uebergraset", "übergrastet", "uebergrastet", "übergrätschet", "uebergraetschet", "übergrätschtet", "uebergraetschtet", "übergreift", "uebergreift", "übergreifet", "uebergreifet", "übergrifft", "uebergrifft", "übergriffet", "uebergriffet", "übergreift", "uebergreift", "übergreifet", "uebergreifet", "übergriffet", "uebergriffet", "übergrifft", "uebergrifft", "übergrünet", "uebergruenet", "übergrüntet", "uebergruentet", "überhat", "ueberhat", "überhabt", "ueberhabt", "überhabet", "ueberhabet", "überhattet", "ueberhattet", "überhättet", "ueberhaettet", "überhält", "ueberhaelt", "überhaltet", "ueberhaltet", "überhielt", "ueberhielt", "überhieltet", "ueberhieltet", "überhändiget", "ueberhaendiget", "überhändigtet", "ueberhaendigtet", "überhängt", "ueberhaengt", "überhänget", "ueberhaenget", "überhingt", "ueberhingt", "überhinget", "ueberhinget", "überhängt", "ueberhaengt", "überhänget", "ueberhaenget", "überhängtet", "ueberhaengtet", "überhänget", "ueberhaenget", "überhängtet", "ueberhaengtet", "überhängt", "ueberhaengt", "überhänget", "ueberhaenget", "überhingt", "ueberhingt", "überhinget", "ueberhinget", "überhastetet", "ueberhastetet", "überhäufet", "ueberhaeufet", "überhäuftet", "ueberhaeuftet", "überhebt", "ueberhebt", "überhebet", "ueberhebet", "überhobt", "ueberhobt", "überhöbet", "ueberhoebet", "überhebt", "ueberhebt", "überhebet", "ueberhebet", "überhobt", "ueberhobt", "überheiztet", "ueberheiztet", "überheizet", "ueberheizet", "überhöhet", "ueberhoehet", "überhöhtet", "ueberhoehtet", "überhitzet", "ueberhitzet", "überhitztet", "ueberhitztet", "überholet", "ueberholet", "überholtet", "ueberholtet", "überhöret", "ueberhoeret", "überhörtet", "ueberhoertet", "überinterpretieret", "ueberinterpretieret", "überinterpretiertet", "ueberinterpretiertet", "überinterpretieret", "ueberinterpretieret", "überinterpretiertet", "ueberinterpretiertet", "überklebet", "ueberklebet", "überklebtet", "ueberklebtet", "überkleidetet", "ueberkleidetet", "überkochet", "ueberkochet", "überkochtet", "ueberkochtet", "überkommet", "ueberkommet", "überkamt", "ueberkamt", "überkämet", "ueberkaemet", "überkämt", "ueberkaemt", "überkompensieret", "ueberkompensieret", "überkompensiertet", "ueberkompensiertet", "überkreuzet", "ueberkreuzet", "überkreuztet", "ueberkreuztet", "überkronet", "ueberkronet", "überkrontet", "ueberkrontet", "überkrustetet", "ueberkrustetet", "überladet", "ueberladet", "überludet", "ueberludet", "überlüdet", "ueberluedet", "überlappet", "ueberlappet", "überlapptet", "ueberlapptet", "überlasset", "ueberlasset", "überlaßt", "ueberlaßt", "ueberlasst", "ueberlasst", "überlässt", "ueberlaesst", "überließt", "ueberließt", "ueberliesst", "überließet", "ueberließet", "ueberliesset", "überlastet", "ueberlastet", "überlastetet", "ueberlastetet", "überläuft", "ueberlaeuft", "überlaufet", "ueberlaufet", "überlieft", "ueberlieft", "überliefet", "ueberliefet", "überlebet", "ueberlebet", "überlebtet", "ueberlebtet", "überleget", "ueberleget", "überlegtet", "ueberlegtet", "überlegt", "ueberlegt", "überleget", "ueberleget", "überlegtet", "ueberlegtet", "überleitet", "ueberleitet", "überleitetet", "ueberleitetet", "überleset", "ueberleset", "überlast", "ueberlast", "überläset", "ueberlaeset", "überliegt", "ueberliegt", "überlieget", "ueberlieget", "überlagt", "ueberlagt", "überläget", "ueberlaeget", "überlägt", "ueberlaegt", "überlistetet", "ueberlistetet", "übermachet", "uebermachet", "übermachtet", "uebermachtet", "übermalet", "uebermalet", "übermaltet", "uebermaltet", "übermalet", "uebermalet", "übermaltet", "uebermaltet", "übermannet", "uebermannet", "übermanntet", "uebermanntet", "übermarchtet", "uebermarchtet", "übermarchet", "uebermarchet", "übermästetet", "uebermaestetet", "übermüdetet", "uebermuedetet", "übernächtiget", "uebernaechtiget", "übernächtigtet", "uebernaechtigtet", "übernimmt", "uebernimmt", "übernehmt", "uebernehmt", "übernehmet", "uebernehmet", "übernahmt", "uebernahmt", "übernähmet", "uebernaehmet", "übernähmt", "uebernaehmt", "übernutzet", "uebernutzet", "übernutztet", "uebernutztet", "überpflanzt", "ueberpflanzt", "überpflanzet", "ueberpflanzet", "überpflanztet", "ueberpflanztet", "überplanet", "ueberplanet", "überplantet", "ueberplantet", "überprüfet", "ueberpruefet", "überprüftet", "ueberprueftet", "überquillt", "ueberquillt", "überquellt", "ueberquellt", "überquellet", "ueberquellet", "überquollt", "ueberquollt", "überquöllet", "ueberquoellet", "ueberquöllt", "ueberquoellt", "überqueret", "ueberqueret", "überquertet", "ueberquertet", "überraget", "ueberraget", "überragtet", "ueberragtet", "überragt", "ueberragt", "überraget", "ueberraget", "überragtet", "ueberragtet", "überraschet", "ueberraschet", "überraschtet", "ueberraschtet", "überreagieret", "ueberreagieret", "überreagiertet", "ueberreagiertet", "überrechnetet", "ueberrechnetet", "überredetet", "ueberredetet", "überreglementieret", "ueberreglementieret", "überreglementiertet", "ueberreglementiertet", "überregulieret", "ueberregulieret", "überreguliertet", "ueberreguliertet", "überreichet", "ueberreichet", "überreichtet", "ueberreichtet", "überreißet", "ueberreisset", "überrisset", "ueberrisset", "überreitet", "ueberreitet", "überrittet", "ueberrittet", "überreizet", "ueberreizet", "überreiztet", "ueberreiztet", "überrennet", "ueberrennet", "überrenntet", "ueberrenntet", "überrollet", "ueberrollet", "überrolltet", "ueberrolltet", "überrundetet", "ueberrundetet", "übersäet", "uebersaeet", "übersätet", "uebersaetet", "übersättiget", "uebersaettiget", "uebersaettigtet", "übersättigtet", "überschattetet", "ueberschattetet", "überschätzet", "ueberschaetzet", "überschätztet", "ueberschaetztet", "überschauet", "ueberschauet", "überschautet", "ueberschautet", "überschäumt", "ueberschaeumt", "überschäumet", "ueberschaeumet", "überschäumtet", "ueberschaeumtet", "überschießt", "ueberschießt", "ueberschiesst", "überschießet", "ueberschiesset", "ueberschießet", "überschosst", "ueberschosst", "überschosst", "ueberschosst", "überschoßt", "ueberschoßt", "überschösset", "ueberschoesset", "überschlafet", "ueberschlafet", "überschliefet", "ueberschliefet", "überschlieft", "ueberschlieft", "überschlaget", "ueberschlaget", "überschlüget", "ueberschlueget", "überschlügt", "ueberschluegt", "überschlägt", "ueberschlaegt", "überschlagt", "ueberschlagt", "überschlaget", "ueberschlaget", "überschlugt", "ueberschlugt", "überschlüget", "ueberschlueget", "überschlügt", "ueberschluegt", "überschlägt", "ueberschlaegt", "überschlagt", "ueberschlagt", "überschlaget", "ueberschlaget", "überschlugt", "ueberschlugt", "überschlüget", "ueberschlueget", "ueberschluegt", "überschlügt", "überschließt", "ueberschließt", "ueberschliesst", "überschließet", "ueberschliesset", "überschlosst", "ueberschlosst", "überschloßt", "ueberschlosst", "überschlösset", "ueberschloesset", "überschmieret", "ueberschmieret", "überschmiertet", "ueberschmiertet", "überschminket", "ueberschminket", "überschminktet", "ueberschminktet", "überschnappt", "ueberschnappt", "überschnappet", "ueberschnappet", "überschnapptet", "ueberschnapptet", "überschneidet", "ueberschneidet", "überschnittet", "ueberschnittet", "überschneiet", "ueberschneiet", "überschneitet", "ueberschneitet", "überschreibet", "ueberschreibet", "überschriebet", "ueberschriebet", "überschriebt", "ueberschriebt", "überschreiet", "ueberschreiet", "überschrieet", "ueberschrieet", "überschriet", "ueberschriet", "überschriet", "ueberschriet", "überschreitet", "ueberschreitet", "überschritt", "ueberschritt", "überschrittet", "ueberschrittet", "überschuldetet", "ueberschuldetet", "überschüttet", "ueberschüttet", "überschüttetet", "ueberschüttetet", "überschüttetet", "ueberschuettetet", "überschwappt", "ueberschwappt", "überschwappet", "ueberschwappet", "überschwapptet", "ueberschwapptet", "überschwemmet", "ueberschwemmet", "überschwemmtet", "ueberschwemmtet", "überschwinget", "ueberschwinget", "überschwangt", "ueberschwangt", "überschwänget", "ueberschwaenget", "überschwängt", "ueberschwaengt", "übersieht", "uebersieht", "überseht", "ueberseht", "übersehet", "uebersehet", "übersaht", "uebersaht", "übersähet", "uebersaehet", "übersäht", "uebersaeht", "übersähet", "uebersaehet", "übersäht", "uebersaeht", "übersandtet", "uebersandtet", "übersendetet", "uebersendetet", "übersensibilisieret", "uebersensibilisieret", "übersensibilisiertet", "uebersensibilisiertet", "übersetzt", "uebersetzt", "übersetzet", "uebersetzet", "übersetztet", "uebersetztet", "übersetzet", "uebersetzet", "übersetztet", "uebersetztet", "übersiedet", "uebersiedet", "übersiedetet", "uebersiedetet", "übersott", "uebersott", "übersottet", "uebersottet", "übersöttet", "uebersoettet", "übersiedet", "uebersiedet", "übersiedetet", "uebersiedetet", "übersott", "uebersott", "übersottet", "uebersottet", "übersöttet", "uebersoettet", "überspannet", "ueberspannet", "überspanntet", "ueberspanntet", "überspielet", "ueberspielet", "überspieltet", "ueberspieltet", "überspinnet", "ueberspinnet", "überspännet", "ueberspaennet", "überspännt", "ueberspaennt", "überspönnet", "ueberspoennet", "überspönnt", "ueberspoennt", "überspitzet", "ueberspitzet", "überspitztet", "ueberspitztet", "übersprechet", "uebersprechet", "überspracht", "ueberspracht", "übersprächet", "ueberspraechet", "übersprächt", "ueberspraecht", "überspringt", "ueberspringt", "überspringet", "ueberspringet", "überspränget", "ueberspraenget", "übersprängt", "ueberspraengt", "überspringt", "ueberspringt", "überspringet", "ueberspringet", "übersprangt", "uebersprangt", "überspränget", "ueberspraenget", "übersprängt", "ueberspraengt", "übersprühet", "ueberspruehet", "übersprühtet", "ueberspruehtet", "übersprühet", "ueberspruehet", "übersprühtet", "ueberspruehtet", "überspület", "ueberspuelet", "überspültet", "überspueltet", "übersticht", "uebersticht", "überstecht", "ueberstecht", "überstechet", "ueberstechet", "überstacht", "ueberstacht", "überstächet", "ueberstaechet", "überstächt", "ueberstaecht", "übersticht", "uebersticht", "überstecht", "ueberstecht", "überstechet", "ueberstechet", "überstacht", "ueberstacht", "überstächet", "ueberstaechet", "überstächt", "ueberstaecht", "überstehet", "ueberstehet", "überstandet", "überstandet", "überständet", "überstaendet", "überstündet", "überstuendet", "übersteht", "uebersteht", "überstehet", "ueberstehet", "überstandet", "ueberstandet", "überständet", "ueberstaendet", "überstündet", "ueberstuendet", "übersteiget", "uebersteiget", "überstieget", "ueberstieget", "überstiegt", "ueberstiegt", "übersteigt", "uebersteigt", "übersteiget", "uebersteiget", "überstiegt", "ueberstiegt", "überstieget", "ueberstieget", "überstellet", "ueberstellet", "überstilisieret", "ueberstilisieret", "überstimmet", "ueberstimmet", "überstimmtet", "ueberstimmtet", "überstrahlet", "ueberstrahlet", "überstrahltet", "ueberstrahltet", "überstrapazieret", "ueberstrapazieret", "überstrapaziertet", "ueberstrapaziertet", "überstreicht", "ueberstreicht", "überstreichet", "ueberstreichet", "überstricht", "ueberstricht", "überstrichet", "ueberstrichet", "überstreichet", "ueberstreichet", "überstrichet", "ueberstrichet", "überstricht", "ueberstricht", "überstreift", "ueberstreift", "überstreifet", "ueberstreifet", "überstreiftet", "ueberstreiftet", "überstreuet", "ueberstreuet", "überstreutet", "ueberstreutet", "überströmet", "ueberstroemet", "überströmtet", "überstroemtet", "überstülpt", "überstuelpt", "ueberstuelpet", "überstülpet", "überstülptet", "ueberstuelptet", "überstürzet", "ueberstuerzet", "überstürztet", "ueberstuerztet", "übertäubet", "uebertaeubet", "übertäubtet", "uebertaeubtet", "übertauchet", "uebertauchet", "übertauchtet", "uebertauchtet", "übertippet", "uebertippet", "übertipptet", "uebertipptet", "übertönet", "uebertoenet", "übertöntet", "uebertoentet", "übertouret", "uebertouret", "übertourtet", "uebertourtet", "überträgt", "uebertraegt", "übertragt", "uebertragt", "übertraget", "uebertraget", "übertrugt", "uebertrugt", "übertrüget", "uebertrueget", "übertrügt", "uebertruegt", "übertrainieret", "uebertrainieret", "übertrainiertet", "uebertrainiertet", "übertreffet", "uebertreffet", "übertraft", "uebertraft", "überträfet", "uebertraefet", "überträft", "uebertraeft", "übertreibt", "uebertreibt", "übertreibet", "uebertreibet", "übertriebet", "uebertriebet", "übertriebt", "uebertriebt", "übertritt", "uebertritt", "übertretet", "uebertretet", "übertrat", "uebertrat", "übertratet", "uebertratet", "überträtet", "uebertraetet", "übertritt", "uebertritt", "übertretet", "uebertretet", "übertrat", "uebertrat", "übertratet", "uebertratet", "überträtet", "uebertraetet", "übertrumpfet", "uebertrumpfet", "übertrumpftet", "uebertrumpftet", "übertünchet", "uebertuenchet", "übertünchtet", "überversorget", "ueberversorget", "überversorgtet", "ueberversorgtet", "übervorteilet", "uebervorteilet", "übervorteiltet", "uebervorteiltet", "überwachet", "ueberwachet", "überwachtet", "ueberwachtet", "überwachset", "ueberwachset", "überwüchset", "ueberwuechset", "überwallt", "ueberwallt", "überwallet", "ueberwallet", "überwalltet", "ueberwalltet", "überwallet", "ueberwallet", "überwalltet", "ueberwalltet", "überwältiget", "ueberwaeltiget", "überwältigtet", "ueberwaeltigtet", "überwalzet", "ueberwalzet", "überwalztet", "ueberwalztet", "überwälzet", "ueberwaelzet", "überwälztet", "ueberwaelztet", "überwechtetet", "ueberwechtetet", "überwächtetet", "ueberwaechtetet", "überwehet", "ueberwehet", "überwehtet", "ueberwehtet", "überweidetet", "ueberweidetet", "überweist", "ueberweist", "überweiset", "ueberweiset", "überwiest", "ueberwiest", "überwieset", "ueberwieset", "überweißet", "ueberweisset", "überweißtet", "ueberweisstet", "überwirft", "ueberwirft", "überwerft", "ueberwerft", "überwerfet", "ueberwerfet", "überwarft", "ueberwarft", "überwürfet", "ueberwuerfet", "überwürft", "ueberwuerft", "überwirft", "ueberwirft", "überwerft", "ueberwerft", "überwerfet", "ueberwerfet", "überwarft", "ueberwarft", "überwürfet", "ueberwuerfet", "überwürft", "ueberwuerft", "überwertetet", "ueberwertetet", "überwiegt", "ueberwiegt", "überwieget", "ueberwieget", "überwogt", "ueberwogt", "überwöget", "ueberwoeget", "überwögt", "ueberwoegt", "überwindet", "ueberwindet", "überwandet", "ueberwandet", "überwändet", "ueberwaendet", "überwölbet", "ueberwoelbet", "überwölbtet", "ueberwoelbtet", "ueberwuerzet", "ueberwuerzet", "überwürztet", "ueberwuerztet", "überzahlet", "ueberzahlet", "überzahltet", "ueberzahltet", "überzahltet", "ueberzahltet", "überzeichnetet", "ueberzeichnetet", "überzeuget", "ueberzeuget", "überzeugtet", "ueberzeugtet", "überzieht", "ueberzieht", "überziehet", "ueberziehet", "überzogt", "ueberzogt", "überzöget", "ueberzoeget", "überzögt", "ueberzoegt", "überzüchtetet", "ueberzuechtetet", "überangebot", "ueberangebot", "überbrückungskredit", "ueberbrückungskredit", "übereinkunft", "uebereinkunft", "überfahrt", "ueberfahrt", "überflugverbot", "ueberflugverbot", "überflutungsgebiet", "ueberflutungsgebiet", "überfracht", "ueberfracht", "überfrucht", "ueberfrucht", "übergangslaut", "uebergangslaut", "übergebot", "uebergebot", "übergewicht", "uebergewicht", "überhangmandat", "ueberhangmandat", "überhangsrecht", "ueberhangsrecht", "überholverbot", "ueberholverbot", "überladenheit", "ueberladenheit", "überlandfahrt", "ueberlandfahrt", "überlast", "ueberlast", "überlegenheit", "ueberlegenheit", "übermacht", "uebermacht", "übermaßverbot", "uebermassverbot", "übermut", "uebermut", "überraschungseffekt", "ueberraschungseffekt", "überraschungsgast", "ueberraschungsgast", "überraschungsmoment", "ueberraschungsmoment", "überredungskunst", "ueberredungskunst", "überreiztheit", "ueberreiztheit", "überrest", "ueberrest", "überschicht", "ueberschicht", "überschnitt", "ueberschnitt", "überschrift", "ueberschrift", "überschwemmungsgebiet", "ueberschwemmungsgebiet", "überseegebiet", "ueberseegebiet", "überseegeschäft", "ueberseegeschaeft", "übersicht", "uebersicht", "überspanntheit", "ueberspanntheit", "überspitztheit", "ueberspitztheit", "übertragungsrecht", "uebertragungsrecht", "übertriebenheit", "uebertriebenheit", "übertritt", "uebertritt", "überwachungsdienst", "ueberwachungsdienst", "überwachungsstaat", "ueberwachungsstaat", "überwelt", "ueberwelt", "überwinterungsgebiet", "ueberwinterungsgebiet", "überzeugtheit", "ueberzeugtheit", "überzeugungstat", "ueberzeugungstat", "überziehungskredit", "ueberziehungskredit"];
};
var td = {};
Object.defineProperty(td, "__esModule", {
  value: !0
});
td.exceptions = eW;
td.default = function() {
  return {
    verbsBeginningWithGe: Ina,
    verbsBeginningWithErVerEntBeZerHerUber: Wna,
    verbsWithGeInMiddle: Fna,
    verbsWithErVerEntBeZerHerUberInMiddle: Dna,
    verbsEndingWithIert: Bna,
    exceptions: eW
  };
};
var Tna = /^((ge)\S+t($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>]))/ig, Rna = /^(((be|ent|er|her|ver|zer|über|ueber)\S+([^s]t|sst))($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>]))/ig, Ona = /(ab|an|auf|aus|vor|wieder|zurück)(ge)\S+t($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>])/ig, Mna = /((ab|an|auf|aus|vor|wieder|zurück)(be|ent|er|her|ver|zer|über|ueber)\S+([^s]t|sst))($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>])/ig, Cna = /\S+iert($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>])/ig, Lna = /\S+(apparat|arbeit|dienst|haft|halt|kraft|not|pflicht|schaft|schrift|tät|wert|zeit)($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>])/ig, Ina = function(e) {
  return e.match(Tna) || [];
}, Wna = function(e) {
  return e.match(Rna) || [];
}, Fna = function(e) {
  return e.match(Ona) || [];
}, Dna = function(e) {
  return e.match(Mna) || [];
}, Bna = function(e) {
  return e.match(Cna) || [];
};
function eW(a) {
  return a.match(Lna) || [];
}
Object.defineProperty(dh, "__esModule", {
  value: !0
});
dh.detectAndStemRegularParticiple = Yna;
var Nna = cu, Una = Vna(Nna), Hna = td;
function Vna(a) {
  return a && a.__esModule ? a : { default: a };
}
const Kna = function(e, t) {
  const i = new RegExp("^" + e.participleStemmingClasses[1].regex);
  return new RegExp("^" + e.participleStemmingClasses[0].regex).test(t) ? t.slice(2, t.length - 2) : i.test(t) ? t.slice(2, t.length - 1) : null;
}, bS = function(e, t, i, n, r) {
  for (const s of t)
    if (new RegExp("^" + s + i).test(e)) {
      const d = e.slice(s.length - e.length), c = d.slice(n, d.length - r);
      return s + c;
    }
  return null;
}, Gna = function(e, t) {
  const i = e.prefixes.separableOrInseparable;
  for (const n of e.participleStemmingClasses) {
    const r = n.regex, s = n.startStem, o = n.endStem, c = n.separable ? e.prefixes.separable : e.prefixes.inseparable;
    let p = bS(t, c, r, s, o);
    if (p || (p = bS(t, i, r, s, o), p))
      return p;
  }
  return null;
};
function Yna(a, e) {
  if ((0, Hna.exceptions)(e).length > 0 || (0, Una.default)().includes(e))
    return "";
  let t = Kna(a, e);
  return t || (t = Gna(a, e), t) ? t : null;
}
var sr = {};
Object.defineProperty(sr, "__esModule", {
  value: !0
});
sr.flattenSortLength = Xna;
var Zna = I;
function Xna(a) {
  return (0, Zna.flatten)(Object.values(a)).sort((t, i) => i.length - t.length || t.localeCompare(i));
}
var lh = {};
Object.defineProperty(lh, "__esModule", {
  value: !0
});
lh.default = ira;
const Jna = function(e) {
  let t = e.search(/[aeiouyäöü][^aeiouyäöü]/);
  return t !== -1 && (t += 2), t !== -1 && t < 3 && (t = 3), t;
}, vS = function(e) {
  const t = e.search(/(em|ern|er)$/g), i = e.search(/(e|en|es)$/g);
  let n = e.search(/([bdfghklmnrt]s)$/g);
  n !== -1 && n++;
  let r = "", s = 1e4;
  return t !== -1 ? (r = "a", s = t, { index1: s, optionUsed1: r }) : i !== -1 ? (r = "b", s = i, { index1: s, optionUsed1: r }) : n !== -1 ? (r = "c", s = n, { index1: s, optionUsed1: r }) : { index1: s, optionUsed1: r };
}, Qna = function(e) {
  const t = e.search(/(en|er|est)$/g);
  let i = e.search(/(.{3}[bdfghklmnt]st)$/g);
  i !== -1 && (i += 4);
  let n = 1e4;
  return t !== -1 ? n = t : i !== -1 && (n = i), n;
}, ara = function(e, t, i, n) {
  return t !== 1e4 && n !== -1 && t >= n && (e = e.substring(0, t), i === "b" && e.search(/niss$/) !== -1 && (e = e.substring(0, e.length - 1))), e;
}, era = function(e, t, i) {
  return t !== 1e4 && i !== -1 && t >= i && (e = e.substring(0, t)), e;
}, tra = function(e, t) {
  const n = e.veryIrregularVerbs.find((r) => r.forms.includes(t));
  return n ? n.stem : null;
};
function ira(a, e) {
  const t = tra(a, e);
  if (t)
    return t;
  e = e.replace(/([aeiouyäöü])u([aeiouyäöü])/g, "$1U$2"), e = e.replace(/([aeiouyäöü])y([aeiouyäöü])/g, "$1Y$2"), e = e.replace(/([aeiouyäöü])i([aeiouyäöü])/g, "$1I$2"), e = e.replace(/([aeiouyäöü])e([aeiouyäöü])/g, "$1E$2");
  const i = Jna(e), n = vS(e).index1, r = vS(e).optionUsed1;
  e = ara(e, n, r, i);
  const s = Qna(e);
  return e = era(e, s, i), e = e.replace(/U/g, "u"), e = e.replace(/Y/g, "y"), e = e.replace(/I/g, "i"), e = e.replace(/E/g, "e"), e;
}
Object.defineProperty(oh, "__esModule", {
  value: !0
});
oh.determineStem = mra;
var nra = I, rra = dh, sra = sr, ora = lh, dra = lra(ora);
function lra(a) {
  return a && a.__esModule ? a : { default: a };
}
const cra = function(e, t) {
  const i = e.exceptionStems;
  for (const n of i) {
    const r = n.find((s) => t.endsWith(s));
    if (r)
      return t.slice(0, t.length - r.length) + n[0];
  }
  return null;
}, ura = function(e, t) {
  const i = e.exceptions;
  for (const n of Object.keys(i)) {
    const r = i[n];
    for (const s of r)
      if (s.includes(t))
        return s[0];
  }
  return null;
}, pra = function(e, t) {
  let i = t;
  const n = e.strongAndIrregularVerbs.stems;
  let s = (0, sra.flattenSortLength)(e.prefixes).find((o) => t.startsWith(o));
  if (s) {
    const o = i.slice(s.length, i.length);
    o.length > 2 ? i = o : s = null;
  }
  for (const o of n) {
    let d = o.stems;
    if (d = (0, nra.flatten)(Object.values(d)), d.includes(i))
      return s ? s + o.stems.present : o.stems.present;
  }
  return null;
};
function mra(a, e) {
  const t = e.verbs, i = (0, dra.default)(t, a);
  return cra(e.nouns, i) || ura(e.adjectives, i) || pra(t, i) || (0, rra.detectAndStemRegularParticiple)(t, a) || i;
}
var ch = {}, uh = {}, ri = {};
Object.defineProperty(ri, "__esModule", {
  value: !0
});
ri.checkIfWordEndingIsOnExceptionList = zra;
ri.checkIfWordIsOnVerbExceptionList = fra;
ri.checkExceptionListWithTwoStems = yra;
var gra = sr;
function zra(a, e) {
  for (let t = 0; t < e.length; t++)
    if (a.endsWith(e[t]))
      return !0;
  return !1;
}
function fra(a, e, t) {
  const n = (0, gra.flattenSortLength)(t).find((s) => a.startsWith(s));
  let r = "";
  return typeof n == "string" && (r = a.slice(n.length), r.length > 2 && (a = r)), e.includes(a);
}
function yra(a, e) {
  for (const t of a) {
    const i = t.find((n) => e.endsWith(n));
    if (i)
      return e.slice(0, e.length - i.length) + t[0];
  }
}
var uu = {};
Object.defineProperty(uu, "__esModule", {
  value: !0
});
uu.removeSuffixesFromFullForm = wra;
uu.removeSuffixFromFullForm = hra;
function wra(a, e, t) {
  for (let i = 0; i < a.length; i++)
    if (t.startsWith(a[i])) {
      const n = t.substring(a[i].length);
      for (let r = 0; r < e.length; r++)
        if (e[r] === n)
          return t.slice(0, -n.length);
    }
}
function hra(a, e, t) {
  for (let i = 0; i < a.length; i++)
    if (t.endsWith(a[i]))
      return t.slice(0, -e.length);
}
var ph = {}, or = {};
Object.defineProperty(or, "__esModule", {
  value: !0
});
or.modifyStem = _ra;
or.isVowelDoublingAllowed = $ra;
var Rf = ri;
const bra = function(e, t, i) {
  if ((0, Rf.checkIfWordEndingIsOnExceptionList)(e, t.endingMatch) || (0, Rf.checkIfWordIsOnVerbExceptionList)(e, t.verbs, i) || t.exactMatch.includes(e))
    return !0;
}, vra = function(e) {
  const t = e.charAt(e.length - 4), i = e.charAt(e.length - 3);
  return t !== i;
}, kra = function(e, t) {
  return e.search(new RegExp(t)) === -1;
};
function _ra(a, e) {
  const t = e.find((i) => a.search(new RegExp(i[0])) !== -1);
  return typeof t < "u" && (a = a.replace(new RegExp(t[0]), t[1])), a;
}
function $ra(a, e, t) {
  const i = (0, Rf.checkIfWordIsOnVerbExceptionList)(a, e.getVowelDoubling, t), n = bra(a, e.noVowelDoubling, t), r = vra(a), s = kra(a, e.noVowelDoubling.rule);
  return i || !n && r && s;
}
Object.defineProperty(ph, "__esModule", {
  value: !0
});
ph.default = qra;
var Cn = or;
const jra = function(e) {
  let t = e.search(/[aeiouyèäüëïöáéíóú][^aeiouyèäüëïöáéíóú]/);
  return t !== -1 && (t += 2), t !== -1 && t < 3 && (t = 3), t;
}, xra = function(e, t, i) {
  for (const n in t)
    if (t.hasOwnProperty(n)) {
      const s = t[n].suffixes.find((o) => new RegExp(o).exec(e));
      if (s) {
        const o = new RegExp(s).exec(e), d = o[o.length - 1], c = e.lastIndexOf(d);
        if (i !== -1 && c >= i)
          return {
            suffixIndex: c,
            stemModification: t[n].stemModification
          };
      }
    }
}, Ara = function(e, t, i, n, r) {
  return n === "hedenToHeid" ? (0, Cn.modifyStem)(e, r.regularStemmer.stemModifications.hedenToHeid) : (e = e.substring(0, i), n === "changeIedtoId" ? (0, Cn.modifyStem)(e, r.regularStemmer.stemModifications.iedToId) : n === "changeInktoIng" && e.endsWith("ink") ? (0, Cn.modifyStem)(e, r.regularStemmer.stemModifications.inkToIng) : n === "vowelDoubling" && (0, Cn.isVowelDoublingAllowed)(e, r.regularStemmer.stemModifications.exceptionsStemModifications, r.pastParticipleStemmer.compoundVerbsPrefixes) ? (0, Cn.modifyStem)(e, r.regularStemmer.stemModifications.doubleVowel) : e);
}, Era = function(e, t, i, n) {
  const r = xra(e, t, i);
  return typeof r < "u" && (e = Ara(e, t, r.suffixIndex, r.stemModification, n)), e;
}, Sra = function(e, t, i, n) {
  for (const r in t)
    t.hasOwnProperty(r) && (e = Era(e, t[r], i, n));
  return e;
};
function qra(a, e) {
  a = (0, Cn.modifyStem)(a, e.regularStemmer.stemModifications.IAndYToUppercase);
  const t = jra(a), i = e.regularStemmer.suffixes;
  return a = Sra(a, i, t, e), (0, Cn.modifyStem)(a, e.regularStemmer.stemModifications.finalChanges);
}
var pu = {}, wn = {};
Object.defineProperty(wn, "__esModule", {
  value: !0
});
wn.doesWordMatchRegex = Pra;
wn.searchAndReplaceWithRegex = Tra;
wn.applyAllReplacements = Rra;
function Pra(a, e) {
  return RegExp(e).test(a);
}
function Tra(a, e) {
  for (const t of e)
    if (a.search(new RegExp(t[0])) !== -1)
      return a = a.replace(new RegExp(t[0]), t[1]), a;
}
function Rra(a, e) {
  return e.forEach(function(t) {
    a = a.replace(new RegExp(t[0]), t[1]);
  }), a;
}
Object.defineProperty(pu, "__esModule", {
  value: !0
});
pu.generateCorrectStemWithTAndDEnding = Mra;
var Of = ri, Dr = wn, tW = or;
const kS = function(e, t, i) {
  if ((0, Dr.doesWordMatchRegex)(i, t[0])) {
    const n = i.replace(new RegExp(t[0]), t[1]);
    if ((0, tW.isVowelDoublingAllowed)(n, e.regularStemmer.stemModifications.exceptionsStemModifications, e.pastParticipleStemmer.compoundVerbsPrefixes)) {
      const r = (0, Dr.searchAndReplaceWithRegex)(n, e.regularStemmer.stemModifications.doubleVowel);
      return r || n;
    }
    return n;
  }
  return null;
}, Ora = function(e, t) {
  const i = t.ambiguousTAndDEndings.tOrDArePartOfStem;
  let n = (0, Dr.searchAndReplaceWithRegex)(e, i.firstTOrDPartOfStem);
  if (n)
    return n;
  if (i.verbsDenShouldBeStemmed.includes(e))
    return e.slice(0, -3);
  if ((0, Of.checkIfWordEndingIsOnExceptionList)(e, i.wordsStemOnlyEnEnding.endingMatch) || (0, Of.checkIfWordIsOnVerbExceptionList)(e, i.wordsStemOnlyEnEnding.verbs, t.pastParticipleStemmer.compoundVerbsPrefixes) || (0, Dr.doesWordMatchRegex)(e, i.denEnding)) {
    if (n = e.slice(0, -2), (0, tW.isVowelDoublingAllowed)(n, t.regularStemmer.stemModifications.exceptionsStemModifications, t.pastParticipleStemmer.compoundVerbsPrefixes)) {
      const o = (0, Dr.searchAndReplaceWithRegex)(n, t.regularStemmer.stemModifications.doubleVowel);
      return o || n;
    }
    return n;
  }
  const r = i.deEnding;
  if (n = kS(t, r, e), n)
    return n;
  const s = i.teAndTenEndings;
  return n = kS(t, s, e), n || null;
};
function Mra(a, e) {
  if ((0, Of.checkIfWordEndingIsOnExceptionList)(e, a.ambiguousTAndDEndings.wordsTShouldBeStemmed))
    return e.slice(0, -1);
  if ((0, Dr.doesWordMatchRegex)(e, a.ambiguousTAndDEndings.tOrDArePartOfStem.tEnding))
    return e;
  const t = Ora(e, a);
  return t || null;
}
var mu = {};
Object.defineProperty(mu, "__esModule", {
  value: !0
});
mu.default = function(a, e) {
  const t = a.stemExceptions.stemmingExceptionStemsWithFullForms;
  let i = Lra(e, t.verbs, a.pastParticipleStemmer.compoundVerbsPrefixes);
  return i || (i = Ira(e, t.endingMatch), i) || (i = Wra(e, t.exactMatch), i) ? i : null;
};
var mh = I, Cra = sr;
const Lra = function(e, t, i) {
  const r = (0, Cra.flattenSortLength)(i).find((s) => e.startsWith(s));
  typeof r == "string" && (e = e.slice(r.length));
  for (let s = 0; s < t.length; s++) {
    const o = (0, mh.flatten)(t[s]);
    for (let d = 0; d < o.length; d++)
      if (o.includes(e))
        return typeof r == "string" ? r + o[0] : o[0];
  }
  return null;
}, Ira = function(e, t) {
  for (let i = 0; i < t.length; i++) {
    const n = (0, mh.flatten)(t[i]);
    for (let r = 0; r < n.length; r++)
      if (e.endsWith(n[r])) {
        const s = e.slice(0, -n[r].length);
        return s.length === 1 ? null : s.length > 1 ? s + n[0] : n[0];
      }
  }
  return null;
}, Wra = function(e, t) {
  for (let i = 0; i < t.length; i++) {
    const n = (0, mh.flatten)(t[i]);
    for (let r = 0; r < n.length; r++)
      if (n.includes(e))
        return n[0];
  }
  return null;
};
var gu = {}, zu = {};
Object.defineProperty(zu, "__esModule", {
  value: !0
});
zu.default = function() {
  return ["gebraad", "gemoed", "gebed", "gebied", "gebod", "gebodsbord", "geboorte-eiland", "geboortestad", "gebruikspaard", "gedachtewereld", "gedenkblad", "gedenknaald", "gedichtenwedstrijd", "gedoogakkoord", "gedoogbeleid", "geduld", "geestenwereld", "geesteskind", "geestestoestand", "geesteswereld", "gehandicaptenbeleid", "gehoorafstand", "gehoorsafstand", "geitenbaard", "geitenhuid", "geld", "geldhond", "geldvoorraad", "geleidehond", "gelijkekansenbeleid", "geloofsdaad", "geloofsinhoud", "geluidswand", "gelukskind", "gemeenschapsraad", "gemeentebeleid", "gemeenteraad", "gemeenteraadslid", "gemoedstoestand", "genadeverbond", "genderbeleid", "geneesmiddelenbeleid", "generaalsbewind", "geslachtsdaad", "gespreksavond", "gespreksflard", "getijdengebied", "gevangenisbeleid", "gevangeniswereld", "gevechtsafstand", "gevelwand", "gevoelstoestand", "gevoelswereld", "gewelddaad", "geweldigaard", "geweldverbod", "gezelschapshond", "gezichtsafstand", "gezichtshuid", "gezinsbeleid", "gezinsbond", "gezinshoofd", "gezinslid", "gezinspaard", "gezinstoestand", "gezondheidsbeleid", "gezondheidstoestand", "gezondheidszorgbeleid", "gecentreerd", "geserreerd", "gepolitoerd", "gebocheld", "gebrild", "gegleufd", "gekarteld", "gemeubeld", "gesausd", "geaccidenteerd", "geaccrediteerd", "geacheveerd", "geaderd", "geaggregeerd", "geagiteerd", "geallieerd", "geanimeerd", "geanticipeerd", "gearticuleerd", "geassorteerd", "gebenedijd", "gebiedend", "geblaseerd", "geblindeerd", "geborneerd", "gebronzeerd", "gebrouilleerd", "gebruind", "gecharmeerd", "gechromeerd", "geciviliseerd", "geclausuleerd", "gecoiffeerd", "geconditioneerd", "geconstipeerd", "gecontinueerd", "gecoöpteerd", "gecrispeerd", "gecultiveerd", "gedecideerd", "gedecolleteerd", "gedegouteerd", "gedemilitariseerd", "gedemodeerd", "gedesillusioneerd", "gedesinteresseerd", "gedetailleerd", "gediplomeerd", "gedisciplineerd", "gedisponeerd", "gedistingeerd", "gedomicilieerd", "gedoteerd", "gedupeerd", "geëigend", "geestdodend", "geestverruimend", "geëxalteerd", "geëxponeerd", "gefigureerd", "gefingeerd", "geflatteerd", "geforceerd", "gefumeerd", "gegeerd", "gegeneerd", "gegradueerd", "gegriepeerd", "gehaaid", "gehandschoend", "gehavend", "gehomologeerd", "gehorend", "geïllustreerd", "geïmponeerd", "geïmproviseerd", "geïncrimineerd", "geïrriteerd", "geklasseerd", "gekmakend", "gekuifd", "gekwalificeerd", "gelardeerd", "geldend", "geldverslindend", "geleed", "geleidend", "gelieerd", "geliefkoosd", "gelijkluidend", "gelinieerd", "geluiddempend", "geluidswerend", "geluidwerend", "gemarineerd", "gematteerd", "gemiddeld", "geoccupeerd", "geoutilleerd", "geparaffineerd", "geparfumeerd", "gepatenteerd", "gepermitteerd", "geplafonneerd", "geplisseerd", "gepredisponeerd", "geprefabriceerd", "gepreoccupeerd", "geproportioneerd", "geraffineerd", "gerandomiseerd", "gereformeerd", "gereglementeerd", "geresigneerd", "geresponsabiliseerd", "gerimpeld", "geringschattend", "geruchtmakend", "geruststellend", "gesatureerd", "gesauteerd", "geschakeerd", "gesepareerd", "geseponeerd", "gesofisticeerd", "gesoigneerd", "gespeend", "gespikkeld", "gestresseerd", "geurenblind", "gevergeerd", "geverseerd", "gezaghebbend", "gezagsondermijnend", "gezichtsbepalend", "gezinsvervangend", "gezwind", "geit", "gedragstherapeut", "geveltoerist", "gezant", "gerant", "gerst", "gerstenat", "geut", "gebarenkunst", "gebedsbijeenkomst", "gebekvecht", "gebiedsagent", "gebit", "geboorterecht", "gebruikersovereenkomst", "gebruiksrecht", "gebruiksvoorschrift", "gedragsvoorschrift", "geest", "geestdrift", "geesteskracht", "geestesproduct", "geestkracht", "gefluit", "gehandicaptensport", "geheimhoudingsplicht", "geheimschrift", "geheugenkunst", "gehoorapparaat", "geitenteelt", "gekloot", "geldautomaat", "geldingskracht", "geldingszucht", "geldkist", "geldmarkt", "geldmarkttekort", "geldpot", "geldsoort", "geldtekort", "geldtransport", "gelduitgifteautomaat", "geldzucht", "gelegenheidsargument", "geloofsgenoot", "geluidseffect", "geluidsoverlast", "geluidspoort", "gemaksproduct", "gemakzucht", "gemberpot", "gemeenschapsrecht", "gemeenteadvocaat", "gemeenteraadsbesluit", "gemeenterecht", "gemeentewet", "gemeentewiet", "gemoedsrust", "geneeskracht", "geneeskundestudent", "geneeskunst", "geneesmiddelenfabrikant", "geneesmiddelenmarkt", "generatieconflict", "generatiegenoot", "generatiepact", "generatiestudent", "genetkat", "genocidewet", "genot", "genotsproduct", "genotzucht", "gent", "geodeet", "geologiedocent", "gereedschapskist", "gerucht", "geruchtencircuit", "geschiedenisdocent", "geschiedenisstudent", "geschiet", "geschrift", "gespreksgenoot", "gesprekspunt", "getijdenkracht", "gevangenispoort", "gevecht", "gevechtskracht", "gevechtssport", "gevellijst", "gevelornament", "gewest", "gewetensangst", "gewetensconflict", "gewicht", "gewinzucht", "gewondentransport", "gewoonterecht", "gewricht", "gezagsapparaat", "gezinsbudget", "gezinsrapport", "gezondheidseffect", "gezondheidsklacht", "gezondheidsproduct", "gezondheidsrecht", "gezondheidswet", "gezondheidswinst", "gerokt", "gevlekt", "gebuikt", "gesaust", "gebiedsgericht", "geel-zwart", "gehandicapt", "gereformeerd-vrijgemaakt", "gestuikt", "geëtst", "bed", "bediendevakbond", "bedrijfsbeleid", "bedrijfsblad", "bedrijfspand", "bedrijfswereld", "bedrijvenbond", "beekdonderpad", "beeld", "beginselakkoord", "begintoestand", "begripsinhoud", "begrotingsakkoord", "begrotingsbeleid", "behandelaanbod", "beheerraad", "beheersgebied", "behoud", "beiaard", "bejaardenbeleid", "bekerwedstrijd", "belastinggebied", "belastinggeld", "belastingschuld", "beleggingsbeleid", "beleggingspand", "beleid", "beleidsdaad", "beleidsgebied", "belevingswereld", "belplafond", "beltegoed", "bemanningslid", "Bemiddelingsraad", "bendehoofd", "bendelid", "benedenstad", "benefietwedstrijd", "benoemingenbeleid", "benuttingsgraad", "berberpaard", "beregeningsverbod", "bergeend", "berggebied", "bergland", "bergpaard", "bergpad", "bergwand", "beroepsarbeid", "beroepsverbod", "beroepswereld", "beschermingsbeleid", "beschermingsgebied", "beslissingswedstrijd", "besparingsbeleid", "bestand", "bestandsakkoord", "besteleend", "besturenbond", "bestuursakkoord", "bestuursbeleid", "bestuurshoofd", "bestuurslid", "beukenblad", "beursmaand", "beursrecord", "beurswaakhond", "beurswereld", "beveiligingsbeleid", "bevolkingsbeleid", "bewind", "bewustzijnsinhoud", "bewustzijnstoestand", "bezuinigingsbeleid", "beenhard", "bebrild", "beangstigend", "bebaard", "bedeesd", "bederfwerend", "bedreigend", "bedrijvend", "bedroevend", "beduidend", "beduusd", "bedwelmend", "beeldbepalend", "beeldend", "beeldvormend", "beeldvullend", "begeleidend", "begerenswaard", "begrijpend", "behartenswaard", "behartigenswaard", "behoudend", "bejaard", "beklagenswaard", "beklemmend", "belanghebbend", "belangstellend", "belangwekkend", "belastingbesparend", "belastingbetalend", "beledigend", "beleerd", "beleidsadviserend", "belendend", "belerend", "bemoedigend", "benauwend", "benijdenswaard", "bepalend", "beperkend", "beregoed", "berekenend", "beroemd", "beroepsblind", "beschaamd", "beschamend", "beschouwend", "beschrijvend", "besdragend", "beslissend", "bestaand", "bestverkopend", "beteuterd", "betoverend", "betraand", "betreffend", "betreurenswaard", "bevelend", "bevelhebbend", "bevestigend", "bevoegd", "bevredigend", "bevreemdend", "bevriend", "bewonderenswaard", "bewustzijnsverruimend", "bezwarend", "beest", "berggeit", "betaalkracht", "beerput", "bergamot", "beschuit", "beademingsapparaat", "beddenfabrikant", "bedeltocht", "bedevaart", "bedevaartstocht", "bediendecontract", "bedieningsfout", "bedilzucht", "bedoeïenentent", "bedrijfsadvocaat", "bedrijfsfeest", "bedrijfsfysiotherapeut", "bedrijfsmanagement", "bedrijfsopbrengst", "bedrijfsrestaurant", "bedrijfsresultaat", "bedrijfssport", "bedrijfswinst", "bedrijvenmarkt", "bedrust", "beeldhouwkunst", "beeldmoment", "beeldrecht", "beeldsnijkunst", "beestenmarkt", "beet", "begeleidwonenproject", "beginnersfout", "beginpunt", "begrippenapparaat", "begrotingsdebat", "begrotingsrecht", "begrotingstekort", "behaagzucht", "behandelingsresultaat", "behoudzucht", "bejaardenpaspoort", "bekerplant", "bekerwinst", "beklagrecht", "beklemrecht", "belangenconflict", "belastingafdracht", "belastingbiljet", "belastingconsulent", "belastingdienst", "belastingexpert", "belastingopbrengst", "belastingplicht", "belastingrecht", "belastingspecialist", "belastingwet", "beleggersmarkt", "beleggingsexpert", "beleggingsmarkt", "beleggingsopbrengst", "beleggingsproduct", "beleggingsresultaat", "beleidsaspect", "beleidsdebat", "beleidsfout", "beleidsresultaat", "beleidsspecialist", "belevingsrestaurant", "belgicist", "belminuut", "beltegoedkaart", "bemoeizucht", "benefiet", "benefietconcert", "benoemingsbesluit", "benzinelucht", "benzinemarkt", "benzinetekort", "beoordelingsfout", "beoordelingsrapport", "berghut", "bergklimaat", "berglucht", "bergrit", "bergsport", "bergtijdrit", "bergtocht", "berichtendienst", "berkenhout", "bermmonument", "bermrecreant", "bermsloot", "bermtoerist", "beroepsdiplomaat", "beroepsernst", "beroepsfout", "beroepsgenoot", "beroepsjournalist", "beroepskracht", "beroepsrecht", "beroepssoldaat", "beroepssport", "berufsverbot", "beschermingsbesluit", "beschikkingsrecht", "beslismoment", "beslissingsrecht", "besluit", "bestaansrecht", "bestandsformaat", "bestelbiljet", "bestelkaart", "bestuursapparaat", "bestuursassistent", "bestuursbesluit", "bestuursconflict", "bestuurskracht", "bestuurskundedocent", "bestuursmandaat", "bestuursprocesrecht", "bestuursrecht", "betaalautomaat", "betaaldienst", "betaalkaart", "betaalopdracht", "betalingsbalanstekort", "betalingsopdracht", "bètastudent", "beterschapskaart", "betrouwbaarheidsrit", "beukenhout", "beursapparaat", "beursklimaat", "beurskrant", "beursmarkt", "beursstudent", "beurt", "beverrat", "bevoegdheidsconflict", "bevrijdingsconcert", "bevrijdingsfeest", "bewaarplicht", "bewegingsapparaat", "bewegingsdocent", "bewegingskunst", "bewijskracht", "bewijsrecht", "bewustwordingsproject", "bezemkast", "bezit", "bezitsrecht", "bezoekrecht", "bezuinigingsdrift", "bezuinigingsopdracht", "bezwaarschrift", "beroepsgericht", "bedompt", "bedrijfsgericht", "beginselvast", "beleidsgericht", "bewolkt", "bezweet", "verbeterblad", "verband", "verbeeldingswereld", "verbod", "verbodsbord", "verbond", "verdwaalarmband", "verdwijnwoord", "verenigingsblad", "verenigingslid", "verfhuid", "vergismoord", "vergunningenbeleid", "verhalenpad", "verhalenwedstrijd", "verkeersaanbod", "verkeersbeleid", "verkeersbord", "verkiezingsavond", "verkleinwoord", "verkoopbeleid", "verkoopverbod", "vernieuwingsbeleid", "verpleeghuisbed", "verraad", "verschijningsverbod", "verstand", "vertoningsverbod", "vertrekbeleid", "vervalmaand", "vervoerbeleid", "vervoersaanbod", "vervoersbeleid", "vervoersbond", "vervoersverbod", "vervolgingsbeleid", "verwijderingsbeleid", "verzamelbeleid", "verzekeringswereld", "verzetsdaad", "verzetsheld", "verzuimbeleid", "verdragend", "verkeersremmend", "verbazend", "verbazingwekkend", "verbijsterend", "verblindend", "verbluffend", "verbouwereerd", "verdaagd", "verdedigend", "verdovend", "vereend", "verfrissend", "vergelijkend", "verhalend", "verheffend", "verheugend", "verkikkerd", "verklarend", "verkwikkend", "verkwistend", "verlammend", "verlangend", "verliesgevend", "verlieslatend", "verlieslijdend", "verlokkend", "verlossend", "vermeend", "vermeldenswaard", "vermeldingswaard", "vermoeiend", "vermogend", "vernederend", "vernietigend", "verontrustend", "verpletterend", "verrassend", "verscheurend", "verschillend", "verslaafd", "verspringend", "verstikkend", "verstrekkend", "verstrooid", "vertederend", "vertrouwenwekkend", "vertwijfeld", "vervelend", "verwaand", "verwarrend", "verwoestend", "verzachtend", "verziend", "verzoenend", "verwant", "verantwoordingsplicht", "verbandkist", "verbeeldingskracht", "verbintenissenrecht", "verblijfsrecht", "verbrandingsproduct", "verbroederingsfeest", "verdedigingsfout", "verdragsrecht", "verdriet", "verdringingseffect", "veredelingsproduct", "verenigingsrecht", "verffabrikant", "verfpot", "verfrest", "vergiet", "vergoedingslimiet", "vergrotingsapparaat", "vergunningplicht", "verhaalsrecht", "verhuiskist", "verhuurboot", "verjaardagsfeest", "verjaardagsgast", "verjaardagstaart", "verjaarfeest", "verjaringsfeest", "verkeersagent", "verkeersinfarct", "verkeersmanagement", "verkeersmarkt", "verkeersoverlast", "verkeerswet", "verkenningstocht", "verkiezingsbijeenkomst", "verkiezingsbiljet", "verkiezingsdebat", "verkiezingsinkt", "verkiezingsresultaat", "verkiezingswinst", "verkleedkist", "verkoopapparaat", "verkoopargument", "verkoopopbrengst", "verkoopopdracht", "verkooprecht", "verkoopresultaat", "verkopersmarkt", "verlatingsangst", "verlovingsfeest", "verminderingskaart", "vermogensrecht", "vermogenstekort", "vermogenswinst", "vernielzucht", "vernietigingskracht", "vernieuwingsdebat", "vernieuwingsproject", "veroveringstocht", "veroveringszucht", "verpleegassistent", "verrassingseffect", "verrassingsfeest", "verrijkingsmarkt", "verruimingskandidaat", "verschoningsrecht", "verschot", "versproduct", "versterfrecht", "vertaalfout", "vertaalproject", "vertaalrecht", "vertebraat", "vertegenwoordigingsrecht", "vervangingsmarkt", "vervoersmanagement", "vervoersmarkt", "vervolgbijeenkomst", "vervolgingsapparaat", "vervolgopdracht", "vervolgproject", "vervreemdingseffect", "verwijt", "verzakingsrecht", "verzamelkrant", "verzekeringsagent", "verzekeringsmarkt", "verzekeringsproduct", "verzekeringsrecht", "verzekeringsresultaat", "verzetskrant", "verzoeningsbijeenkomst", "verzorgingsproduct", "slingerpad", "avondgebed", "bibbergeld", "dageraad", "drinkgeld", "kalfsgebraad", "leefgeld", "ochtendgebed", "ongelukskind", "vluggerd", "voltigeerpaard", "voltigepaard", "aandachtsgebied", "aanlijngebod", "aardbevingsgebied", "abonnementsgeld", "achtergrondgeluid", "achterstandsgebied", "actiegebied", "afzetgebied", "akkerbouwgebied", "alpengebied", "amazonegebied", "ambtsgebied", "ambtsgewaad", "antigeluid", "aspergebed", "autonomiegebied", "baggereiland", "bangerd", "bijgeluid", "bijstandsgeld", "binnenduingebied", "blindengeleidehond", "blowgebodsbord", "boezemgebied", "bongerd", "bosgebied", "bridgeavond", "bridgebond", "bridgewedstrijd", "broedgebied", "brongebied", "budgetbeleid", "burgerbewind", "centrumgebied", "collegelid", "computergebied", "concentratiegebied", "conceptregeerakkoord", "concessiegebied", "conflictgebied", "contactgeluid", "crisisgebied", "cultuurgebied", "dankgebed", "deelgebied", "deelnemingenbeleid", "deltagebied", "deskundigheidsgebied", "dierengeluid", "doelgebied", "doodsgewaad", "doorgangsgebied", "dopgeld", "douanegebied", "drempelgeld", "driekoningenavond", "duinengebied", "duingebied", "eigendomsvoorbehoud", "energiegebied", "engerd", "eurogebied", "feestgewaad", "filmgebied", "foerageergebied", "formuliergebed", "frequentiegebied", "frontgebied", "functioneringsgebied", "gangenpaard", "gitaargeluid", "gitaargeweld", "golfgebied", "golflengtegebied", "graangebied", "grachtengebied", "grensgebied", "groeigebied", "groengebied", "groepsgeluid", "groepsgeweld", "grondgebied", "grondwaterbeschermingsgebied", "haflingerpaard", "handelsgebied", "havengebied", "heidegebied", "helikoptergeld", "herkomstgebied", "herwaarderingsgebied", "hogedrukgebied", "hogeronderwijsbeleid", "hongersnood", "hoogveengebied", "ICT-gebied", "immigratiegebied", "inburgeringsbeleid", "indicatiegebied", "industriegebied", "ingeland", "inkomgeld", "interessegebied", "jachtgebied", "jagershond", "jongerenbeleid", "jongerenblad", "kantorengebied", "kassengebied", "keelgeluid", "kennisgebied", "kerngebied", "kernwinkelgebied", "kijkgeld", "kindergeld", "kleigebied", "kloostergewaad", "knipooggeweld", "kogelwond", "koorgebed", "krapgeldbeleid", "krijgsgeweld", "krimpgebied", "kruisgebed", "kunstgebied", "kustgebied", "kwelgebied", "lagedrukgebied", "landbouwgebied", "langeafstandspaard", "langebaanwedstrijd", "langetermijnbeleid", "leefgebied", "leergebied", "leerstofgebied", "legerpaard", "legervoorraad", "levensgebied", "lidgeld", "logeerbed", "luchtvaartgebied", "luistergeld", "machtsgebied", "managementbeleid", "mandaatgebied", "manegepaard", "marktgebied", "mededelingenblad", "mededelingenbord", "mediageweld", "merengebied", "middaggebed", "middengebied", "mijngebied", "milieubeschermingsgebied", "milieugebied", "misgewaad", "missiegebied", "modegebied", "moerasgebied", "morgengebed", "Morgenland", "morgenstond", "moslimgebied", "motorgeluid", "muilkorfgebod", "nachtgewaad", "nagelbed", "natuurbeschermingsgebied", "natuurgebied", "natuurgeweld", "natuurontwikkelingsgebied", "NAVO-gebied", "NAVO-grondgebied", "nederzettingenbeleid", "neerslaggebied", "negerkind", "no-gogebied", "noodgebied", "noordpoolgebied", "Noordzeegebied", "oceaangebied", "octrooigebied", "oefengebied", "oerwoudgeluid", "oliegebied", "omgevingsbeleid", "omgevingsgeluid", "onderwijsgebied", "onderzoeksgebied", "onrustgebied", "ontwikkelingsgebied", "oorlogsgebied", "oorlogsgeweld", "oorsprongsgebied", "operatiegebied", "opleidingenaanbod", "opmarsgebied", "overgangsgebied", "overlastgebied", "overstromingsgebied", "overwinteringsgebied", "paaigebied", "partnergeweld", "ploegenwedstrijd", "poldergebied", "politiegeweld", "potpoldergebied", "presentiegeld", "priestergewaad", "regeerakkoord", "regelafstand", "regenboogkind", "regenboogzebrapad", "regenwoud", "regeringsaanbod", "regeringsbeleid", "regeringsraad", "regeringsstad", "reizigersaanbod", "richtingenstrijd", "roggebrood", "rouwgewaad", "rugzakgeld", "rustgebied", "rustgeld", "sabotagedaad", "samenwerkingsgebied", "schandegeld", "Schengenakkoord", "schietgebed", "schoolgeld", "servicegeweld", "slangenhuid", "sleutelgeld", "slotgebed", "smeekgebed", "smeergeldstad", "spaargeld", "spanningsgebied", "spiegelbeeld", "spiegelwand", "sportgebied", "spraakgeluid", "stemgeluid", "stiltegebied", "stoelgeld", "stormgeweld", "straatgeluid", "straatgeweld", "strafschopgebied", "supportersgeweld", "taalgebied", "tegelpad", "tegelwand", "tegenbod", "tegengeluid", "tegengeweld", "tegenspoed", "tegenwind", "televisiegeweld", "tussengebied", "uitgaansgeweld", "uitgeefbeleid", "uitgeversverbond", "uitgeverswereld", "ultrageluid", "vaargebied", "vagebond", "vakantiegeld", "veertigurengebed", "vegetariërsbond", "vingerhoed", "vliegtuiggeluid", "vluchtelingenbeleid", "voetbalgeweld", "vogelgeluid", "vogelwereld", "volksgezondheidsbeleid", "voorzieningenaanbod", "vormgevingsbeleid", "vredesgeluid", "vreemdelingenbeleid", "vrijdaggebed", "vrijgezellenavond", "vrijwilligersbeleid", "vuurwapengeweld", "wapengeweld", "waterbergingsgebied", "watergebied", "watergeweld", "werkgelegenheidsbeleid", "werkgeversaanbod", "werkgeversbond", "werkgeversverbond", "wetgevingsbeleid", "wiegenkind", "wijngebied", "wintersportgebied", "wisselgeld", "woestijngebied", "zakgeld", "zangersbond", "zeegebied", "zeehavengebied", "ziektegeld", "zigeunerkind", "zigeunerpaard", "zondegeld", "zorgenkind", "zwangerschapsmaand", "zwijggeld", "agent", "afgezant", "dirigent", "echtgenoot", "morgendienst", "apologeet", "budgetsupermarkt", "burgerdienst", "changement", "dorpsgenoot", "huisgenoot", "krankzinnigengesticht", "muggenbeet", "nagerecht", "omgevingsportret", "politieagent", "tijgerkat", "tussengerecht", "vogelmijt", "voorgerecht", "wegenwacht", "wegenzout", "wijkagent", "wisselagent", "zeegezicht", "zorgbudget", "aankoopbudget", "aardappelgerecht", "accountmanagement", "achterhoedegevecht", "adoptieagent", "advertentiebudget", "afspiegelingskabinet", "agendahedonist", "algemenebijstandswet", "amandelgeest", "ambtenarengerecht", "apengezicht", "arbeidsgerecht", "aspergerobot", "aspergeteelt", "assetmanagement", "baggerboot", "baggermarkt", "baggeropdracht", "baggerproject", "baggerschuit", "baggervloot", "balkanvergeet-mij-niet", "barricadegevecht", "bijgerecht", "boemerangeffect", "bouwmanagement", "bovengebit", "branchegenoot", "bridgejournalist", "bridgesport", "budget", "budgetrecht", "budgettekort", "bugnugget", "burgemeestersambt", "burgemeesterspost", "burgerdocent", "burgerplicht", "burgerpot", "burgerpresident", "burgerrecht", "burgerschapsrecht", "buurtagent", "buurtgenoot", "capaciteitsmanagement", "casemanagement", "celgenoot", "chef-dirigent", "CIA-agent", "clubgenoot", "coalitiegenoot", "collectiemanagement", "collegebesluit", "collegekaart", "collegestudent", "competentiemanagement", "crisismanagement", "defensiebudget", "depannagedienst", "deskundigenrapport", "disgenoot", "dopingexpert", "draagvleugelboot", "dreigement", "driekoningenfeest", "dubbelagent", "dwerggeit", "eerstgeboorterecht", "eigendomsrecht", "elftalgenoot", "enkelgewricht", "etalageruit", "ex-agent", "ex-echtgenoot", "exploitatiebudget", "FBI-agent", "fractiegenoot", "gadget", "garagepoort", "glogetuigschrift", "groentegerecht", "groentenugget", "grondgevecht", "halfgeleiderfabrikant", "halsgerecht", "halsgewricht", "hamburgerrestaurant", "hamburgertent", "handelsagent", "handgewricht", "hanengevecht", "hengelsport", "hersengadget", "heupgewricht", "hogeschooldocent", "hogeschoolstudent", "hokjesgeest", "hondengevecht", "hoofdagent", "hoofdgerecht", "horlogekast", "hotelmanagement", "huishoudbudget", "hulpagent", "huwelijksvermogensrecht", "inburgeringsplicht", "inburgeringstraject", "informatiemanagement", "ingenieursdienst", "ingenieursstudent", "inlichtingenrapport", "interim-management", "internetevangelist", "investeringsbudget", "inzagerecht", "jaarbudget", "jongerenkrant", "jongerenpaspoort", "kaakgewricht", "kaasgerecht", "kaasnugget", "kalfsgehakt", "kamergenoot", "kant-en-klaargerecht", "kantongerecht", "kennismanagement", "kipnugget", "klasgenoot", "kniegewricht", "kogelgewricht", "kooigevecht", "kredietmanagement", "kroegentocht", "kruidnagelsigaret", "kunstbudget", "kunstgeschiedenisdocent", "kunstgeschiedenisstudent", "kunstmanagement", "kussengevecht", "kwaliteitsmanagement", "kwelgeest", "lamsgehakt", "langetermijneffect", "leeftijdgenoot", "leeftijdsgenoot", "legercommandant", "legerdienst", "legerkrant", "legerpredikant", "legertent", "lievelingsgerecht", "logeergast", "lotgenotencontact", "loungerestaurant", "low budget", "lozingenbesluit", "luchtagent", "luchtgevecht", "lunchgerecht", "macrobudget", "management", "managementfout", "melkgeit", "mens-erger-je-niet", "mergelgrot", "milieumanagement", "miljoenenbudget", "mobiliteitsbudget", "moddergevecht", "monumentenbudget", "morgenlicht", "morgenpost", "motoragent", "muggenbult", "narcotica-agent", "NAVO-bondgenoot", "negerhut", "nepagent", "nugget", "ondergebit", "onderwijsbudget", "onderwijsmanagement", "onderzoeksbudget", "onderzoeksgerecht", "on-en-minvermogenkaart", "ongevallenwet", "onteigeningswet", "orgelconcert", "orgeldocent", "orgelkast", "overheidsbudget", "overheidsmanagement", "overnamegevecht", "overnemingsgevecht", "paardengebit", "passagebiljet", "pastagerecht", "persagent", "personeelsbudget", "personeelsmanagement", "plaggenhut", "ploegentijdrit", "pluimgewicht", "politiebudget", "polsgewricht", "postzegelformaat", "prestigeproject", "prins-regent", "procesmanagement", "productiebudget", "projectmanagement", "pseudovogelpest", "publiciteitsagent", "raffinageproduct", "reclamebudget", "reegeit", "regeerambt", "regelzucht", "regenboogtricot", "regenput", "regent", "regentaat", "regenwaterput", "regeringsapparaat", "regeringsbesluit", "regeringsbudget", "regeringskrant", "regeringsrapport", "regeringssoldaat", "reisagent", "reisbudget", "restauratiebudget", "rijksbudget", "rijstgerecht", "risicomanagement", "röntgenapparaat", "ruggenmergsvocht", "rundergehakt", "scharniergewricht", "scheidsgerecht", "schijngevecht", "schimmengevecht", "schoolagent", "schoolbegeleidingsdienst", "schoolgenoot", "schoolwijkagent", "schoudergewricht", "sergeant", "slangenbeet", "slangenhout", "slingerplant", "slowfoodgerecht", "soortgenoot", "spiegelgevecht", "spiegelkast", "spiegelruit", "spiegelschrift", "spiegeltent", "spinazienugget", "sportmanagement", "spronggewricht", "stagedocent", "stageopdracht", "stagerapport", "stierengevecht", "straatgevecht", "streekgerecht", "stressmanagement", "studentenbudget", "subsidiebudget", "taalgenoot", "tafelgenoot", "tafelgenot", "teamgeest", "tegenargument", "tegeneffect", "tegenkracht", "tentoonstellingsbudget", "tijdgeest", "tijdgenoot", "tijdmanagement", "tijdsgewricht", "tijgerpunt", "timemanagement", "titanengevecht", "titelgevecht", "topdirigent", "topmanagement", "totaalbudget", "totaalgewicht", "tweegevecht", "tweevingertest", "twintigeurobiljet", "undercoveragent", "urgentierecht", "veiligheidsagent", "veiligheidsarrangement", "veiligheidsmanagement", "vijftigeurobiljet", "vingerplant", "visgerecht", "visnugget", "vleesgerecht", "vleugelboot", "vliegenkast", "vliegerfeest", "vluchtelingenrecht", "vluchtelingentransport", "VN-gezant", "vogelmarkt", "vogeltjesmarkt", "vogelvangst", "vogelvlucht", "volksgericht", "voorlichtingsbudget", "vrachtwagenfabrikant", "vrachtwagenmarkt", "vragersmarkt", "vredegerecht", "vreemdelingenangst", "vreemdelingenbesluit", "vreemdelingendebat", "vreemdelingenrecht", "vreemdelingenstemrecht", "vuistgevecht", "vuurgevecht", "watergeest", "watergevecht", "watermanagement", "wegenbouwproject", "wereldtitelgevecht", "werkgelegenheidseffect", "werkgelegenheidsproject", "werkingsbudget", "wervelgewricht", "wetenschapsbudget", "wetgevingsproject", "wintergerst", "wintergezicht", "wrevelagent", "zadelgewricht", "zagevent", "zanger-componist", "zanger-gitarist", "zangerscast", "zangvogelsport", "zeegevecht", "zegelrecht", "zegetocht", "zelfmanagement", "ziekenhuisbudget", "zwangerschapstest", "goedgevuld", "aangebrand", "welgevuld", "afgeborsteld", "donkergekleurd", "goedgevormd", "welgevormd", "allesverzengend", "bontgekleurd", "doorgewinterd", "goedgehumeurd", "goedgeluimd", "goedgezind", "haatdragend", "kegeldragend", "lichtgekleurd", "nagelbijtend", "ongekleurd", "ongemanierd", "ongeverfd", "rentedragend", "risicodragend", "roodgekleurd", "slechtgehumeurd", "slechtgezind", "vruchtdragend", "welgemanierd", "welgezind", "welopgevoed", "woldragend", "zaaddragend", "zorgdragend", "aanbodgestuurd", "aangehuwd", "aangetekend", "aangetrouwd", "aanliggend", "aanmatigend", "aanvoegend", "achtereenvolgend", "achterliggend", "afgewend", "allesdoordringend", "allesvernietigend", "alleszeggend", "almogend", "alvermogend", "angstaanjagend", "bijstandsgerechtigd", "bloeddrukverhogend", "bloeddrukverlagend", "bloemdragend", "braakliggend", "brandvertragend", "breedgerand", "brildragend", "cholesterolverlagend", "christelijk-gereformeerd", "computergestuurd", "diepliggend", "doodgemoedereerd", "doordringend", "doorslaggevend", "dreigend", "drempelverlagend", "dringend", "dwingend", "eerstvolgend", "eierleggend", "Engelssprekend", "ergerniswekkend", "felgekleurd", "godtergend", "goedgekleed", "goedgemanierd", "goudgerand", "grensverleggend", "handenwringend", "hemeltergend", "hiernavolgend", "hogergenoemd", "hoogdringend", "hoopgevend", "indringend", "ingebeeld", "ingekankerd", "ingekeerd", "ingenaaid", "ingewikkeld", "ingeworteld", "intrigerend", "knoldragend", "kogelwerend", "laaggeletterd", "leidinggevend", "levensbedreigend", "levensbeëindigend", "levensverlengend", "lichtgevend", "lichtgewond", "liggend", "losliggend", "maatgevend", "meedogend", "minvermogend", "moedgevend", "naastliggend", "navolgend", "neerbuigend", "niet-geleidend", "nietszeggend", "normgevend", "oergezond", "omliggend", "onaangediend", "onbevredigend", "ondergewaardeerd", "onderliggend", "ondeugend", "ongeaccepteerd", "ongeanimeerd", "ongearticuleerd", "ongeautoriseerd", "ongecensureerd", "ongeciviliseerd", "ongeclausuleerd", "ongecompliceerd", "ongeconcentreerd", "ongeconditioneerd", "ongecontroleerd", "ongecoördineerd", "ongecorrigeerd", "ongecultiveerd", "ongedateerd", "ongedefinieerd", "ongedifferentieerd", "ongediplomeerd", "ongedisciplineerd", "ongedoubleerd", "ongeëmancipeerd", "ongeëmotioneerd", "ongeforceerd", "ongefrankeerd", "ongefundeerd", "ongegeneerd", "ongehavend", "ongehonoreerd", "ongeïdentificeerd", "ongeïnformeerd", "ongeïnspireerd", "ongeïnteresseerd", "ongekend", "ongekwalificeerd", "ongeleerd", "ongelimiteerd", "ongelinieerd", "ongematteerd", "ongemeend", "ongemeubileerd", "ongemonteerd", "ongemotiveerd", "ongemotoriseerd", "ongenuanceerd", "ongeoefend", "ongeopend", "ongeordend", "ongeorganiseerd", "ongepaneerd", "ongepermitteerd", "ongeprepareerd", "ongepubliceerd", "ongeraffineerd", "ongerealiseerd", "ongeregistreerd", "ongereglementeerd", "ongereguleerd", "ongesigneerd", "ongespecificeerd", "ongestoffeerd", "ongestructureerd", "ongestudeerd", "ongesubsidieerd", "ongevaccineerd", "ongewapend", "onsamenhangend", "onuitgenodigd", "onuitgevoerd", "onvermogend", "onwelgezind", "opeenvolgend", "opvliegend", "opvolgend", "orthodox-gereformeerd", "overtuigend", "overwegend", "overweldigend", "plaatsvervangend", "prangend", "raadgevend", "redengevend", "rentegevend", "rolbevestigend", "roodgeverfd", "rustgevend", "samenhangend", "schermdragend", "schrikaanjagend", "slechtgekleed", "sneldrogend", "statusverhogend", "stilzwijgend", "supergezond", "tegemoetkomend", "tergend", "toegevend", "toonaangevend", "tussenliggend", "uitdagend", "uitgekiend", "uitgeregend", "uitgerekend", "uitnodigend", "vakoverstijgend", "veelzeggend", "vigerend", "vleesvervangend", "vliegend", "volgend", "voorbijgestreefd", "vraaggestuurd", "vreesaanjagend", "Wajonggerechtigd", "waterbergend", "watergekoeld", "welgekend", "welgemeend", "werkgelegenheidsbevorderend", "wetgevend", "winstgevend", "witgehandschoend", "witgepleisterd", "witgeschilderd", "witgeverfd", "zelfcorrigerend", "zelfdragend", "zelfreinigend", "zelfvernietigend", "zelfverzorgend", "zieltogend", "zingevend", "zoetgeurend", "zogenaamd", "zogenoemd", "zwaargehavend", "zwaargewapend", "zwaargewond", "zwaarwegend", "zwartgeverfd", "zwijgend", "doelgericht", "ontwikkelingsgericht", "zwartgerokt", "arbeidsmarktgericht", "functiegericht", "goedgemutst", "kindgericht", "aanbodgericht", "aangedampt", "actiegericht", "arbeidsongeschikt", "brongericht", "buurtgericht", "cliëntgericht", "competentiegericht", "consumentgericht", "divergent", "doelgroepgericht", "doodongerust", "effectgericht", "ervaringsgericht", "exportgericht", "groepsgericht", "ingemaakt", "ingeroest", "innovatiegericht", "intelligent", "klantgericht", "kortgerokt", "maatschappijgericht", "marktgericht", "mensgericht", "nagelvast", "natuurgericht", "niet-gericht", "ongekuist", "ongericht", "onuitgebracht", "onuitgepakt", "onuitgewerkt", "oplossingsgericht", "persoonsgericht", "praktijkgericht", "prestatiegericht", "probleemgericht", "procesgericht", "productgericht", "publieksgericht", "resultaatgericht", "roodgelakt", "taakgericht", "themagericht", "toekomstgericht", "toepassingsgericht", "vakgericht", "voortgezet", "vraaggericht", "wijkgericht", "witgekalkt", "witgelakt", "zelfgemaakt", "zwartgelakt", "morgennacht", "negenduizend", "negenentwintigduizend", "negenhonderd", "negenhonderdduizend", "negentienduizend", "negentienhonderd", "negentigduizend", "morgenochtend", "desgevallend", "morgenavond", "zogezegd", "nergensland", "ontbijtbord", "onthaalbeleid", "onthaalkind", "ontmoedigingsbeleid", "ontmoetingsavond", "ontwapeningsakkoord", "ontwerpakkoord", "ontwerplandbouwakkoord", "ontwerpwedstrijd", "ontwikkelingsbeleid", "ontwikkelingshulpbeleid", "ontwikkelingsland", "ontbeend", "ontbrekend", "onthullend", "onthutsend", "ontkennend", "ontluisterend", "ontoereikend", "ontslagnemend", "ontsmettend", "ontspannend", "ontstekingsremmend", "ontstellend", "ontwapenend", "ontwijkend", "ontwikkeld", "ontzagwekkend", "ontzettend", "ontbijt", "onthardingszout", "ontzet", "ontbijtbuffet", "ontbindingsrecht", "ontdekkingstocht", "onterecht", "ontkoppelingsbesluit", "ontmijningsdienst", "ontslagbesluit", "ontslagdecreet", "ontslagrecht", "ontvangst", "ontwerpbesluit", "ontwerpfout", "ontwerpgrondwet", "ontwerpopdracht", "ontwerprapport", "ontwerpwet", "ontwikkelingspot", "ontwikkelingsproject", "herdershond", "herenakkoord", "herenblad", "herfstavond", "herfstblad", "herfstdraad", "herfstmaand", "herfstochtend", "herfstwind", "herkeuringsraad", "heroïnehond", "herseninhoud", "herstelbeleid", "hervormingsbeleid", "herfst", "hermafrodiet", "hert", "heraut", "herfstlucht", "heraanplant", "herdenkingsbijeenkomst", "herdenkingsconcert", "herdenkingsfeest", "heremietkreeft", "herfstnacht", "herfsttint", "herinneringskunst", "herkomst", "heroïnespuit", "heroïnetransport", "heroïnevangst", "herroepingsrecht", "hersenkracht", "hersenvlucht", "hersenvocht", "hersteldienst", "herstelrecht", "hervormingsproject", "erwt", "ernst", "erbovenuit", "ereambt", "eregast", "erepunt", "erfenisrecht", "erfrecht", "ergotherapeut", "ernaast", "eronderuit", "eropuit", "ertussenuit", "eruit", "ervanuit", "erytrocyt", "eredivisiewedstrijd", "erelid", "erfgoedbeleid", "erkenningsbeleid", "errond", "ervaringswereld", "gebaart", "gebeurt", "gebiedt", "gebood", "gedenkt", "gedraagt", "geeuwt", "gehoorzamt", "geilt", "geldt", "geelt", "gelooft", "geneest", "geniet", "genoot", "gerust", "geurt", "geeft", "besnuffelt", "bedeelt", "bedelt", "bekeert", "beugelt", "beamt", "beantwoordt", "beargumenteert", "beatblogt", "becijfert", "becommentariërt", "beconcurreert", "bedaart", "bedelft", "bedenkt", "bederft", "bedient", "bediscussiërt", "bedoelt", "bedraagt", "bedreigt", "bedriegt", "bedrijft", "bedroeft", "bedwingt", "beëindigt", "beeldbelt", "beetneemt", "beft", "begaat", "begeleidt", "begeert", "begeeft", "begint", "begraaft", "begrijpt", "begroeit", "behaalt", "behandelt", "behangt", "beheert", "behoedt", "behoeft", "behoort", "behoudt", "beïnvloedt", "bekent", "bekeurt", "bekijkt", "beklaagt", "bekleedt", "beklemt", "beklimt", "bekomt", "bekritiseert", "bekroont", "belandt", "beledigt", "belegt", "belemmert", "beleeft", "belt", "beloont", "belooft", "belparkeert", "beluistert", "bemeesteert", "bemeubelt", "bemoedigt", "bemoeit", "benadert", "benauwt", "beneemt", "bengelt", "benieuwt", "benoemt", "beogt", "beoordeelt", "bepaalt", "bepoteelt", "bereidt", "berekent", "berooft", "beschaamt", "beschaaft", "beschermt", "beschildert", "beschouwt", "beschrijft", "beschuldigt", "beslaat", "besloot", "besnijdt", "bespaart", "bespeurt", "bespioneert", "bespreekt", "bespringt", "bestaat", "bestempelt", "bestrijdt", "bestreed", "bestudeert", "bestuurt", "beswaffeelt", "betekent", "betert", "betont", "betonneert", "betovert", "betreedt", "betreft", "betrekt", "betreurt", "betwijfelt", "beult", "bevalt", "beeft", "bevindt", "bevoordeliigt", "bevordert", "bevraagt", "bevriest", "bewapent", "beweert", "bewijst", "bewondert", "bewoont", "bewonersparkeert", "bezaait", "bezeert", "beziet", "bezat", "bezoekt", "bezorgt", "bezuinigt", "bezweert", "verlaat", "verliet", "verschaalt", "verspringt", "vertelt", "veraangenaamt", "verabsoluteert", "verachtvoudiigt", "veradeemt", "verafgoodt", "verafschuwt", "veralgemeent", "verandert", "verankert", "verantwoordt", "verarmt", "verbabbelt", "verbaliseert", "verbant", "verbaast", "verbeeldt", "verbeidt", "verbergt", "verbetert", "verbeuzelt", "verbiedt", "verbood", "verbijstert", "verbindt", "verblijft", "verblindt", "verbouwt", "verbrandt", "verbreekt", "verdappert", "verdedigt", "verdeelt", "verdenkt", "verdient", "verdort", "verdooft", "verdraait", "verdraagt", "verdrijft", "verdringt", "verdrinkt", "verdroogt", "verdubbelt", "verdwaalt", "verdwijnt", "vereenvoudigt", "vet", "verenigt", "vereert", "vergaat", "vergadeert", "vergelijkt", "vergt", "vergeet", "vergat", "vergeeft", "vergiftigt", "vergoedt", "vergrendelt", "verhaalt", "verhangt", "verheldert", "verheugt", "verhindert", "verhoogt", "verhongert", "verhoudt", "verhuist", "verhuurt", "verifiërt", "verjaagt", "verkent", "verkeert", "verkiest", "verklaart", "verkleedt", "verkleint", "verkleurt", "verknoeit", "verkoopt", "verkreukelt", "verkrijgt", "verlaagt", "verlamt", "verlangt", "verleidt", "verleent", "verlengt", "verliest", "verloocheent", "verloopt", "verlooft", "verluiert", "verlummelt", "vermagert", "vermaalt", "vermangelt", "vermeldt", "vermengt", "vermenigvuldigt", "vermijdt", "vermindert", "vermoedt", "vermoeit", "vermolmt", "vermomt", "vermoordt", "vernauwt", "verneemt", "vernevelt", "vernielt", "vernietigt", "vernieuwt", "vernikkelt", "vernoemt", "vernummert", "veronaangenaamt", "veronachtzaamt", "veronderstelt", "verontheiliigt", "verontreinigt", "verontschuldigt", "veroordeelt", "veroorlooft", "verootmoediigt", "veropenbaart", "verordonneert", "verovert", "verpandt", "verpaupert", "verpietert", "verplegt", "verplettert", "verpulvert", "verraadt", "verried", "verrechtvaardiigt", "verregeent", "verreist", "verrekeent", "verrijdt", "verrijst", "verroert", "verrolt", "verronselt", "verruigt", "verruilt", "verruuwt", "verscheurt", "verschijnt", "verschilt", "verschimmelt", "verschoont", "verschraalt", "verschrijft", "verschroeit", "verschrompelt", "verschuilt", "versiert", "versimpelt", "versjachert", "versjouwt", "verslaat", "verslechtert", "versleutelt", "verslijt", "versleet", "verslindt", "verslond", "versluiert", "versluist", "versmaadt", "versmalt", "versmoort", "versnelt", "versnijdt", "versnippert", "versobert", "versoepelt", "versombert", "verspeelt", "verspeent", "verspert", "verspiedt", "verspilt", "verspint", "versplintert", "verspreidt", "verstaat", "verstond", "verstaalt", "verstart", "verstelt", "versteent", "versterft", "versteviigt", "verstijft", "verstilt", "verstomt", "verstoort", "verstoot", "verstiet", "verstouwt", "verstramt", "verstrengt", "verstrijkt", "verstrooit", "verstuift", "verstuurt", "verstuuwt", "versuikert", "versukkelt", "vertaalt", "vertedert", "vertegenwoordigt", "vertekeent", "verteert", "vertienvoudiigt", "vertilt", "vertimmert", "vertint", "vertoeft", "vertoont", "vertoornt", "vertraagt", "vertreedt", "vertroebelt", "vertroetelt", "vertrouwt", "vertwijfelt", "vervaagt", "vervaalt", "vervalt", "vervangt", "vervelt", "verft", "verveent", "verviervoudiigt", "vervijfvoudiigt", "vervliegt", "vervloeit", "vervluchtiigt", "vervoedeert", "vervoegt", "vervoert", "vervolgt", "vervollediigt", "vervordert", "vervormt", "vervreemdt", "vervroegt", "vervuilt", "vervult", "verwaait", "verwaardiigt", "verwaarloost", "verwarmt", "verwart", "verwaseemt", "verwatert", "verwedt", "verwelkoomt", "verweert", "verwerpt", "verwerft", "verweeft", "verwijdt", "verwijdert", "verwijlt", "verwijft", "verwikkelt", "verwildert", "verwint", "verwintert", "verwisselt", "verwittiigt", "verwondt", "verwondert", "verwoont", "verwoordt", "verwringt", "verwurgt", "verzaagt", "verzandt", "verzegelt", "verzegt", "verzeilt", "verzekert", "verzelfstandiigt", "verzendt", "verzengt", "verzesvoudiigt", "verzilvert", "verzinnebeeldt", "verzint", "verzoekt", "verzoent", "verzoolt", "verzuilt", "verzuurt", "verzusteert", "verzwagert", "verzwaart", "verzwelgt", "verzwendelt", "verzweert", "verzwijgt", "ontbiedt", "ontbood", "ontbeet", "ontbindt", "ontbolstert", "ontbraamt", "ontbreekt", "ontcijfert", "ontdoet", "ontdeed", "ontdooit", "ontdubbelt", "onteert", "onterft", "ontgaat", "ontgeldt", "ontglijdt", "ontgloeit", "ontgraaft", "ontgrendelt", "ontgroeit", "ontgroent", "onthaalt", "onthalst", "onthardt", "onthaart", "ontheft", "ontheiligt", "onthoofdt", "onthoudt", "onthield", "onthult", "ontkent", "ontketeent", "ontkiemt", "ontkleurt", "ontkoomt", "ontkoppelt", "ontlaadt", "ontleent", "ontleert", "ontloopt", "ontluist", "ontmengt", "ontmijnt", "ontmoedigt", "ontmythologiseert", "ontneemt", "ontradicaliseert", "ontroert", "ontrommeelt", "ontruimt", "ontslaat", "ontspant", "ontspult", "ontstaat", "ontstond", "ontsteekt", "ontvangt", "ontvoert", "ontvolgt", "ontvoogdt", "ontvriendt", "ontvriest", "ontwerpt", "ontwijkt", "ontwikkelt", "ontzwavelt", "herdenkt", "herdacht", "ergert", "ekent", "eruitzit", "ervaart", "erft"];
};
Object.defineProperty(gu, "__esModule", {
  value: !0
});
gu.detectAndStemRegularParticiple = Zra;
var Fra = zu, Dra = Ura(Fra), Bra = wn, Nra = or;
function Ura(a) {
  return a && a.__esModule ? a : { default: a };
}
const gh = function(e, t) {
  return e.includes(t) ? t.slice(0, -1) : null;
}, iW = function(e, t) {
  if (e.endsWith("t"))
    return t.ambiguousTAndDEndings.wordsTShouldBeStemmed.includes(e) ? !0 : (0, Bra.doesWordMatchRegex)(e, t.ambiguousTAndDEndings.tOrDArePartOfStem.tEnding) ? !1 : !t.stemExceptions.wordsNotToBeStemmedExceptions.verbs.includes(e);
  if (e.endsWith("d"))
    return !t.pastParticipleStemmer.doNotStemD.includes(e);
}, Hra = function(e, t) {
  if (new RegExp("^" + e.pastParticipleStemmer.participleStemmingClasses[0].regex).test(t)) {
    const n = gh(e.pastParticipleStemmer.doNotStemGe, t);
    if (n)
      return n;
    let r = t.slice(2);
    return r.startsWith("ë") && (r = "e" + r.slice(1)), iW(r, e) ? r.slice(0, -1) : r;
  }
  return null;
}, Vra = function(e, t, i, n, r) {
  for (const s of n)
    if (new RegExp("^" + s + r).test(t)) {
      let d = t.slice(s.length - t.length);
      if (i) {
        const c = gh(e.pastParticipleStemmer.doNotStemGe, d);
        if (c)
          return s + c;
        d = d.slice(2);
      }
      return d.startsWith("ë") && (d = "e" + d.slice(1)), iW(d, e) ? s + d.slice(0, -1) : s + d;
    }
  return null;
}, Kra = function(e, t) {
  for (const i of e.pastParticipleStemmer.participleStemmingClasses) {
    const n = i.regex, r = i.separable, s = r ? e.pastParticipleStemmer.compoundVerbsPrefixes.separable : e.pastParticipleStemmer.compoundVerbsPrefixes.inseparable, o = Vra(e, t, r, s, n);
    if (o)
      return o;
  }
  return null;
}, Gra = function(e, t) {
  return e.includes(t);
}, Yra = function(e, t, i, n) {
  return e.map((s) => n.startsWith(s)).some((s) => s === !0) && n.endsWith("end") && !t.includes(n) ? (0, Nra.modifyStem)(n.slice(0, -3), i) : null;
};
function Zra(a, e) {
  if (e.endsWith("heid") || e.endsWith("teit") || e.endsWith("tijd") || (0, Dra.default)().includes(e))
    return "";
  if (Gra(a.pastParticipleStemmer.inseparableCompoundVerbsNotToBeStemmed, e))
    return e;
  let t = Hra(a, e);
  return t || (t = gh(a.pastParticipleStemmer.inseparableCompoundVerbs, e), t) || (t = Yra(a.pastParticipleStemmer.compoundVerbsPrefixes.inseparable, a.pastParticipleStemmer.pastParticiplesEndingOnEnd, a.regularStemmer.stemModifications.finalChanges, e), t) || (t = Kra(a, e), t) ? t : null;
}
Object.defineProperty(uh, "__esModule", {
  value: !0
});
uh.default = rsa;
var _S = ri, $S = uu, Xra = ph, Jra = nW(Xra), Qra = pu, asa = mu, esa = nW(asa), tsa = gu, Jd = or;
function nW(a) {
  return a && a.__esModule ? a : { default: a };
}
const isa = function(e, t) {
  for (const i of e.stemExceptions.removeSuffixesFromFullForms) {
    const n = (0, $S.removeSuffixesFromFullForm)(i.forms, i.suffixes, t);
    if (n)
      return n;
  }
  for (const i of e.stemExceptions.removeSuffixFromFullForms) {
    const n = (0, $S.removeSuffixFromFullForm)(i.forms, i.suffix, t);
    if (n)
      return n;
  }
}, nsa = function(e, t) {
  let i = isa(t, e);
  return i ? ((0, Jd.isVowelDoublingAllowed)(i, t.regularStemmer.stemModifications.exceptionsStemModifications, t.pastParticipleStemmer.compoundVerbsPrefixes) && (i = (0, Jd.modifyStem)(i, t.regularStemmer.stemModifications.doubleVowel)), (0, Jd.modifyStem)(i, t.regularStemmer.stemModifications.finalChanges)) : null;
};
function rsa(a, e) {
  let t = (0, esa.default)(e, a);
  if (t || (t = (0, tsa.detectAndStemRegularParticiple)(e, a), t))
    return t;
  const i = e.stemExceptions.wordsNotToBeStemmedExceptions;
  if ((0, _S.checkIfWordIsOnVerbExceptionList)(a, i.verbs, e.pastParticipleStemmer.compoundVerbsPrefixes) || (0, _S.checkIfWordEndingIsOnExceptionList)(a, i.endingMatch) || i.exactMatch.includes(a))
    return a;
  const n = e.ambiguousTAndDEndings.otherTAndDEndings;
  for (const r of n)
    if (a.endsWith(r) && (t = (0, Qra.generateCorrectStemWithTAndDEnding)(e, a), t))
      return t;
  return t = nsa(a, e), t || (0, Jra.default)(a, e);
}
var zh = {};
Object.defineProperty(zh, "__esModule", {
  value: !0
});
zh.stemTOrDFromEndOfWord = psa;
var oz = ri, ssa = gu, osa = pu, dsa = mu, lsa = csa(dsa);
function csa(a) {
  return a && a.__esModule ? a : { default: a };
}
const usa = function(e, t, i) {
  const n = e.stemExceptions.wordsNotToBeStemmedExceptions, r = e.stemExceptions.removeSuffixesFromFullForms[1].forms, s = e.ambiguousTAndDEndings.tOrDArePartOfStem.doNotStemTOrD;
  if ((0, ssa.detectAndStemRegularParticiple)(e, i) || (0, osa.generateCorrectStemWithTAndDEnding)(e, i) || (0, oz.checkIfWordIsOnVerbExceptionList)(i, n.verbs, e.pastParticipleStemmer.compoundVerbsPrefixes) || (0, oz.checkIfWordEndingIsOnExceptionList)(i, n.endingMatch) || n.exactMatch.includes(i) || r.includes(t) || (0, lsa.default)(e, i) || t.endsWith("heid") || (0, oz.checkIfWordEndingIsOnExceptionList)(t, s))
    return !0;
};
function psa(a, e, t) {
  return usa(a, e, t) ? null : e.slice(0, -1);
}
Object.defineProperty(ch, "__esModule", {
  value: !0
});
ch.determineStem = vsa;
var msa = sr, gsa = I, zsa = uh, fsa = hsa(zsa), ysa = zh, wsa = ri;
function hsa(a) {
  return a && a.__esModule ? a : { default: a };
}
const dz = function(e, t) {
  for (const i of Object.keys(e))
    for (const n of e[i]) {
      const r = (0, gsa.flatten)(Object.values(n));
      if (r.includes(t))
        return r[0];
    }
}, bsa = function(e, t) {
  let n = (0, msa.flattenSortLength)(e.pastParticipleStemmer.compoundVerbsPrefixes).find((p) => t.startsWith(p));
  const s = e.stemExceptions.stemmingExceptionsWithMultipleStems.strongAndIrregularVerbs.doNotStemPrefix.find((p) => t.endsWith(p));
  let o = "";
  s ? n = null : n && (o = t.slice(n.length, t.length), o.length > 2 ? t = o : n = null);
  const d = e.stemExceptions.stemmingExceptionsWithMultipleStems.strongAndIrregularVerbs.strongVerbStems, c = [d.irregularStrongVerbs, d.regularStrongVerbs, d.bothRegularAndIrregularStrongVerbs];
  for (let p = 0; p < c.length; p++)
    if (dz(c[p], t))
      return n ? n + dz(c[p], t) : dz(c[p], t);
};
function vsa(a, e) {
  const t = (0, fsa.default)(a, e);
  let i = (0, wsa.checkExceptionListWithTwoStems)(e.stemExceptions.stemmingExceptionsWithMultipleStems.stemmingExceptionsWithTwoStems, t);
  if (i || (i = bsa(e, t), i))
    return i;
  const n = e.ambiguousTAndDEndings.tAndDEndings;
  for (const r of n)
    if (t.endsWith(r)) {
      const s = (0, ysa.stemTOrDFromEndOfWord)(e, t, a);
      if (s)
        return s;
    }
  return t;
}
var fh = {}, fu = {};
Object.defineProperty(fu, "__esModule", {
  value: !0
});
fu.findMatchingEndingInArray = ksa;
function ksa(a, e) {
  const t = [];
  for (const n in e)
    a.endsWith(e[n]) && t.push(e[n]);
  const i = t.sort(function(n, r) {
    return r.length - n.length;
  })[0];
  return i || "";
}
Object.defineProperty(fh, "__esModule", {
  value: !0
});
fh.default = Rsa;
var yh = yn, _sa = Ct, wh = $sa(_sa), $e = fu;
function $sa(a) {
  return a && a.__esModule ? a : { default: a };
}
const gi = function(e) {
  return /[aeiouáéíóú]/gi.test(e);
}, jsa = function(e, t = 0) {
  const i = e.length;
  for (let n = t; n < i; n++)
    if (gi(e[n]))
      return n;
  return i;
}, xsa = function(e, t = 0) {
  const i = e.length;
  for (let n = t; n < i; n++)
    if (!gi(e[n]))
      return n;
  return i;
}, Tn = function(e) {
  const t = ["á", "é", "í", "ó", "ú"], i = ["a", "e", "i", "o", "u"];
  for (let n = 0; n < t.length; n++)
    e = e.replace(t[n], i[n]);
  return e;
}, no = function(e, t) {
  return e.length < t.length ? !1 : e.slice(-t.length) === t;
}, Asa = function(e, t) {
  for (const i of t)
    if (i[1].includes(e))
      return i[0];
  return null;
}, Esa = function(e, t, i) {
  return no(t, "mente") === "" || i.notMenteAdverbs.includes(e) ? e : (0, yh.buildOneFormFromRegex)(e, (0, wh.default)(i.menteToStem)) || e;
}, Ssa = function(e, t, i) {
  return (0, $e.findMatchingEndingInArray)(t, i.superlativeSuffixes) === "" || i.notSuperlatives.includes(e) ? e : (0, yh.buildOneFormFromRegex)(e, (0, wh.default)(i.superlativeToStem)) || e;
}, qsa = function(e, t) {
  if ((0, $e.findMatchingEndingInArray)(e, ["ito", "ita", "itos", "itas", "íto", "íta", "ítos", "ítas"]) === "" || t.notDiminutives.includes(e))
    return e;
  const n = e.endsWith("s") ? e.slice(0, e.length - 2) : e.slice(0, e.length - 1);
  for (const r of t.irregularDiminutives)
    if (r[1].includes(n))
      return r[0];
  return (0, yh.buildOneFormFromRegex)(e, (0, wh.default)(t.diminutiveToStem)) || e;
}, Psa = function(e, t) {
  for (const i of t.nouns)
    if (i.includes(e))
      return i[0];
  for (const i of t.adjectives)
    if (i.includes(e))
      return i[0];
  for (const i of t.verbs)
    if (i.includes(e))
      return i[0];
  return null;
}, Tsa = function(e, t, i, n) {
  const r = (0, $e.findMatchingEndingInArray)(i, ["ya", "ye", "yan", "yen", "yeron", "yendo", "yo", "yó", "yas", "yes", "yais", "yamos"]);
  if (r !== "" && e.slice(-r.length - 1, -r.length) === "u" && (e = e.slice(0, -r.length)), e !== t && (i = e.slice(n)), e === t) {
    const s = (0, $e.findMatchingEndingInArray)(i, ["arían", "arías", "arán", "arás", "aríais", "aría", "aréis", "aríamos", "aremos", "ará", "aré", "erían", "erías", "erán", "erás", "eríais", "ería", "eréis", "eríamos", "eremos", "erá", "eré", "irían", "irías", "irán", "irás", "iríais", "iría", "iréis", "iríamos", "iremos", "irá", "iré", "aba", "ada", "ida", "ía", "ara", "iera", "ad", "ed", "id", "ase", "iese", "aste", "iste", "an", "aban", "ían", "aran", "ieran", "asen", "iesen", "aron", "ieron", "ado", "ido", "ando", "iendo", "ió", "ar", "er", "ir", "as", "abas", "adas", "idas", "ías", "aras", "ieras", "ases", "ieses", "ís", "áis", "abais", "íais", "arais", "ierais", "  aseis", "ieseis", "asteis", "isteis", "ados", "idos", "amos", "ábamos", "íamos", "imos", "áramos", "iéramos", "iésemos", "ásemos"]), o = (0, $e.findMatchingEndingInArray)(i, ["en", "es", "éis", "emos"]);
    s !== "" ? e = e.slice(0, -s.length) : o !== "" && (e = e.slice(0, -o.length), no(e, "gu") && (e = e.slice(0, -1)));
  }
  return e;
};
function Rsa(a, e) {
  a.toLowerCase();
  const t = Asa(a, e.exceptionStemsWithFullForms);
  if (t)
    return t;
  if (e.wordsThatLookLikeButAreNot.nonPluralsOnS.includes(a))
    return Tn(a);
  const n = a.length;
  if (n < 2)
    return Tn(a);
  let r = n, s = n, o = n;
  for (let J = 0; J < n - 1 && r === n; J++)
    gi(a[J]) && !gi(a[J + 1]) && (r = J + 2);
  for (let J = r; J < n - 1 && s === n; J++)
    gi(a[J]) && !gi(a[J + 1]) && (s = J + 2);
  n > 3 && (gi(a[1]) ? gi(a[0]) && gi(a[1]) ? o = xsa(a, 2) + 1 : o = 3 : o = jsa(a, 2) + 1);
  let d = a.slice(r), c = a.slice(s), p = a.slice(o);
  const m = a, w = ["me", "se", "sela", "selo", "selas", "selos", "la", "le", "lo", "las", "les", "los", "nos"], v = ["iéndo", "ándo", "ár", "ér", "ír"], $ = ["iendo", "ando", "ar", "er", "ir"], P = (0, $e.findMatchingEndingInArray)(a, w);
  if (P !== "" && !e.wordsThatLookLikeButAreNot.notVerbsEndingInPersonalPronouns.includes(a)) {
    let J = (0, $e.findMatchingEndingInArray)(p.slice(0, -P.length), v);
    J === "" ? (J = (0, $e.findMatchingEndingInArray)(p.slice(0, -P.length), $), (J !== "" || no(a.slice(0, -P.length), "uyendo")) && (a = a.slice(0, -P.length))) : a = Tn(a.slice(0, -P.length));
  }
  a !== m && (d = a.slice(r), c = a.slice(s), p = a.slice(o));
  const h = a, z = (0, $e.findMatchingEndingInArray)(c, ["anza", "anzas", "ico", "ica", "icos", "icas", "ismo", "ismos", "able", "ables", "ible", "ibles", "ista", "istas", "oso", "osa", "osos", "osas", "amiento", "amientos", "imiento", "imientos"]), b = (0, $e.findMatchingEndingInArray)(c, ["icadora", "icador", "icación", "icadoras", "icadores", "icaciones", "icante", "icantes", "icancia", "icancias", "adora", "ador", "ación", "adoras", "adores", "aciones", "ante", "antes", "ancia", "ancias"]), _ = (0, $e.findMatchingEndingInArray)(c, ["logía", "logías"]), S = (0, $e.findMatchingEndingInArray)(c, ["ución", "uciones"]), A = (0, $e.findMatchingEndingInArray)(c, ["encia", "encias"]), L = (0, $e.findMatchingEndingInArray)(c, ["abilidad", "abilidades", "icidad", "icidades", "ividad", "ividades", "idad", "idades"]), R = (0, $e.findMatchingEndingInArray)(c, ["ativa", "ativo", "ativas", "ativos", "iva", "ivo", "ivas", "ivos"]);
  z !== "" ? a = a.slice(0, -z.length) : b !== "" ? a = a.slice(0, -b.length) : _ !== "" ? a = a.slice(0, -_.length) + "log" : S !== "" ? a = a.slice(0, -S.length) + "u" : A !== "" ? a = a.slice(0, -A.length) + "ente" : L !== "" ? a = a.slice(0, -L.length) : R !== "" && (a = a.slice(0, -R.length));
  const E = Esa(a, d, e.menteStemming);
  if (E !== a)
    return Tn(E);
  const N = Ssa(a, d, e.superlativesStemming);
  if (N !== a)
    return Tn(N);
  const D = qsa(a, e.diminutivesStemming);
  if (D !== a)
    return Tn(D);
  a !== h && (p = a.slice(o));
  const H = a, j = e.wordsThatLookLikeButAreNot.notVerbForms;
  if (h === H) {
    let J = a;
    a.endsWith("s") && (J = a.slice(0, -1)), j.includes(J) ? a = J : a = Tsa(a, H, p, o);
  }
  p = a.slice(o);
  const ea = (0, $e.findMatchingEndingInArray)(p, ["os", "a", "o", "á", "í", "ó"]);
  ea !== "" ? a = a.slice(0, -ea.length) : (0, $e.findMatchingEndingInArray)(p, ["e", "é"]) !== "" && (a = a.slice(0, -1), p = a.slice(o), no(p, "u") && no(a, "gu") && (a = a.slice(0, -1)));
  const ra = Psa(a, e.stemsThatBelongToOneWord);
  return ra || Tn(a);
}
var hh = {};
Object.defineProperty(hh, "__esModule", {
  value: !0
});
var Osa = /* @__PURE__ */ function() {
  function a(e, t) {
    var i = [], n = !0, r = !1, s = void 0;
    try {
      for (var o = e[Symbol.iterator](), d; !(n = (d = o.next()).done) && (i.push(d.value), !(t && i.length === t)); n = !0)
        ;
    } catch (c) {
      r = !0, s = c;
    } finally {
      try {
        !n && o.return && o.return();
      } finally {
        if (r) throw s;
      }
    }
    return i;
  }
  return function(e, t) {
    if (Array.isArray(e))
      return e;
    if (Symbol.iterator in Object(e))
      return a(e, t);
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  };
}();
hh.default = Usa;
var Msa = ri, jS = wn;
const Csa = function(e, t) {
  let i = -1;
  e.search(new RegExp(t.rvRegex1)) !== -1 || e.search(new RegExp(t.rvRegex2)) !== -1 ? i = 3 : (i = e.substring(1).search(new RegExp(t.rvRegex3)), i === -1 ? i = e.length : i += 2);
  const n = new RegExp(t.r1Regex);
  let r = e.search(n), s = "";
  r === -1 ? r = e.length : (r += 2, s = e.substring(r));
  let o = -1;
  return r !== -1 && (o = s.search(n), o === -1 ? o = e.length : (o += 2, o += r)), r !== -1 && r < 3 && (r = 3), [r, o, i];
}, Lsa = function(e, t, i, n, r) {
  const s = e.search(new RegExp(t.standardSuffixes1)), o = e.search(new RegExp(t.standardSuffixes2)), d = e.search(new RegExp(t.standardSuffixes3[0])), c = e.search(new RegExp(t.standardSuffixes4[0])), p = e.search(new RegExp(t.standardSuffixes5[0])), m = e.search(new RegExp(t.standardSuffixes6)), w = e.search(new RegExp(t.standardSuffixes7)), v = e.search(new RegExp(t.standardSuffixes8)), $ = e.search(new RegExp(t.standardSuffixes9[0])), P = e.search(new RegExp(t.standardSuffixes10[0])), h = e.search(new RegExp(t.standardSuffixes11[0])), z = e.search(new RegExp(t.standardSuffixes12)), b = e.search(new RegExp(t.standardSuffixes13[0])), _ = e.search(new RegExp(t.standardSuffixes14[0])), S = e.search(new RegExp(t.standardSuffixes15));
  if (s !== -1 && s >= n)
    e = e.substring(0, s);
  else if (o !== -1 && o >= n) {
    e = e.substring(0, o);
    const A = e.search(new RegExp(t.suffixesPrecedingChar1[0]));
    A !== -1 && A >= n ? e = e.substring(0, A) : e = e.replace(new RegExp(t.suffixesPrecedingChar1[0]), t.suffixesPrecedingChar1[1]);
  } else if (d !== -1 && d >= n)
    e = e.slice(0, d) + t.standardSuffixes3[1];
  else if (c !== -1 && c >= n)
    e = e.slice(0, c) + t.standardSuffixes4[1];
  else if (p !== -1 && p >= n)
    e = e.slice(0, p) + t.standardSuffixes5[1];
  else if (z !== -1 && z >= i)
    e = e.substring(0, z + 1);
  else if (m !== -1 && m >= r) {
    e = e.substring(0, m);
    const A = e.search(new RegExp(t.suffixesPrecedingChar2[0])), L = e.search(new RegExp(t.suffixesPrecedingChar4[0])), R = e.search(new RegExp(t.suffixesPrecedingChar5[0])), E = e.search(new RegExp(t.suffixesPrecedingChar6[0]));
    if (A >= n) {
      e = e.slice(0, A) + t.suffixesPrecedingChar2[1];
      const N = e.search(new RegExp(t.suffixesPrecedingChar3[0]));
      N >= n && (e = e.slice(0, N) + t.suffixesPrecedingChar3[1]);
    } else e.search(new RegExp(t.suffixesPrecedingChar4[0])) !== -1 ? L >= n ? e = e.substring(0, L) : L >= i && (e = e.substring(0, L) + t.suffixesPrecedingChar4[1]) : R >= n ? e = e.slice(0, R) + t.suffixesPrecedingChar5[1] : E >= r && (e = e.slice(0, E) + t.suffixesPrecedingChar6[1]);
  } else if (w !== -1 && w >= n) {
    e = e.substring(0, w);
    const A = e.search(new RegExp(t.suffixesPrecedingChar7[0])), L = e.search(new RegExp(t.suffixesPrecedingChar1[0]));
    A !== -1 ? A >= n ? e = e.substring(0, A) : e = e.substring(0, A) + t.suffixesPrecedingChar7[1] : L !== -1 ? L !== -1 && L >= n ? e = e.substring(0, L) : e = e.substring(0, L) + t.suffixesPrecedingChar1[1] : e.search(new RegExp(t.suffixesPrecedingChar2[0])) !== n && (e = e.replace(new RegExp(t.suffixesPrecedingChar2[0]), t.suffixesPrecedingChar2[1]));
  } else if (v !== -1 && v >= n)
    e = e.substring(0, v), e.search(new RegExp(t.suffixesPrecedingChar3[0])) >= n && (e = e.replace(new RegExp(t.suffixesPrecedingChar3[0]), t.suffixesPrecedingChar3[1]), e.search(new RegExp(t.suffixesPrecedingChar1[0])) >= n ? e = e.replace(new RegExp(t.suffixesPrecedingChar1[0]), "") : e = e.replace(new RegExp(t.suffixesPrecedingChar1[0]), t.suffixesPrecedingChar1[1]));
  else if ($ !== -1)
    e = e.replace(new RegExp(t.standardSuffixes9[0]), t.standardSuffixes9[1]);
  else if (P >= i)
    e = e.replace(new RegExp(t.standardSuffixes10[0]), t.standardSuffixes10[1]);
  else if (h !== -1) {
    const A = e.search(new RegExp(t.standardSuffixes11[0]));
    A >= n ? e = e.substring(0, A) : A >= i && (e = e.substring(0, A) + t.standardSuffixes11[1]);
  } else b !== -1 && b >= r ? e = e.replace(new RegExp(t.standardSuffixes13[0]), t.standardSuffixes13[1]) : _ !== -1 && _ >= r ? e = e.replace(new RegExp(t.standardSuffixes14[0]), t.standardSuffixes14[1]) : S !== -1 && S >= r && (e = e.substring(0, S + 1));
  return e;
}, Isa = function(e, t, i, n) {
  let r = !1;
  if (t === e.toLowerCase() || (0, Msa.checkIfWordEndingIsOnExceptionList)(t, n.exceptions)) {
    r = !0;
    const s = new RegExp(n.suffixes[0]);
    e.search(s) >= i && (e = e.replace(s, n.suffixes[1]));
  }
  return { word: e, step2aDone: r };
}, Wsa = function(e, t, i, n, r, s) {
  const o = s.regularStemmer.otherVerbSuffixes;
  if (t && i === e) {
    const d = new RegExp(o[0]);
    if (e.search(d) >= n)
      return e.replace(d, "");
    for (let p = 1; p < o.length; p++) {
      const m = new RegExp(o[p]);
      if (e.search(m) >= r)
        return e.replace(m, "");
    }
    if (e.endsWith("ions"))
      return e;
    const c = new RegExp(s.regularStemmer.verbSuffixOns);
    e.search(c) >= r && (e = e.replace(c, ""));
  }
  return e;
}, Fsa = function(e, t, i, n) {
  const r = n.residualSuffixes;
  e.search(new RegExp(r.residualSuffixes1[0])) >= t && (e = e.replace(new RegExp(r.residualSuffixes1[0]), r.residualSuffixes1[1]));
  const s = e.search(new RegExp(r.residualSuffix2));
  if (s >= i && e.search(new RegExp(r.residualSuffix3)) >= t)
    e = e.substring(0, s);
  else {
    let o = e.search(new RegExp(r.residualSuffixes4[0]));
    o >= t ? e = e.substring(0, o) + r.residualSuffixes4[1] : (o = e.search(new RegExp(r.residualSuffix5)), o >= t ? e = e.substring(0, o) : (o = e.search(new RegExp(r.residualSuffix6[0])), o >= t && (e = e.substring(0, o) + r.residualSuffix6[1])));
  }
  return e;
}, Dsa = function(e, t) {
  for (const i of t)
    if (i[1].includes(e))
      return i[0];
  return null;
}, Bsa = function(e, t) {
  for (const i of t.adjectives)
    if (i.includes(e))
      return i[0];
  for (const i of t.verbs)
    if (i.includes(e))
      return i[0];
}, Nsa = function(e, t) {
  for (const i of t.cannotTakeExtraSuffixS)
    if (i[0] === e)
      return i[1];
  e.endsWith("s") && (e = e.slice(0, -1));
  for (const i of t.canTakeExtraSuffixS)
    if (i[0] === e)
      return i[1];
};
function Usa(a, e) {
  a = a.toLowerCase();
  const t = a, i = Nsa(a, e.shortWordsAndStems);
  if (i)
    return i;
  const n = Dsa(a, e.exceptionStemsWithFullForms);
  if (n)
    return n;
  if (a.endsWith("x") && e.pluralsWithXSuffix.includes(a))
    return a.slice(0, -1);
  if (a.endsWith("s") && e.sShouldNotBeStemmed.includes(a))
    return a;
  const r = e.nonVerbsOnEnt;
  if (a.endsWith("ent") && r.includes(a))
    return a;
  if (a.endsWith("ents") && r.includes(a.slice(0, -1)))
    return a.slice(0, -1);
  const s = e.nonVerbsOnOns;
  if (a.endsWith("ons") && s.includes(a))
    return a.slice(0, -1);
  a = (0, jS.applyAllReplacements)(a, e.regularStemmer.preProcessingStepsRegexes);
  var o = Csa(a, e.regularStemmer.rIntervals), d = Osa(o, 3);
  const c = d[0], p = d[1], m = d[2];
  a = Lsa(a, e.regularStemmer.standardSuffixes, c, p, m);
  const w = a, v = Isa(a, t, m, e.regularStemmer.verbSuffixesWithIBeginning);
  a = v.word;
  const $ = v.step2aDone;
  if (r.includes(a) || (a = Wsa(a, $, w, p, m, e)), t === a.toLowerCase())
    a = Fsa(a, m, p, e.regularStemmer);
  else {
    const z = e.regularStemmer.yAndSoftCEndingAndReplacement.yEndingAndReplacement, b = e.regularStemmer.yAndSoftCEndingAndReplacement.softCEndingAndReplacement;
    a.endsWith(z[0]) ? a = a.slice(0, -1) + z[1] : a.endsWith(b[0]) && (a = a.slice(0, -1) + b[1]);
  }
  a = (0, jS.applyAllReplacements)(a, e.regularStemmer.finalConsonantUndoubling);
  const P = e.regularStemmer.unaccentERegex;
  a = a.replace(new RegExp(P[0]), P[1]), a = a.toLowerCase();
  const h = Bsa(a, e.stemsThatBelongToOneWord);
  return h || a;
}
var bh = {};
Object.defineProperty(bh, "__esModule", {
  value: !0
});
bh.default = Ysa;
const Ks = function(e, t) {
  return t.externalStemmer.vowels.includes(e);
}, Hsa = function(e, t) {
  let i = 0, n = 0;
  const r = e.length;
  for (let s = 1; s < r; s++) {
    const o = e.substring(s - 1, s), d = e.substring(s, s + 1);
    switch (n) {
      case 0:
        Ks(d, t) && (i = s + 1, n = 1);
        break;
      case 1:
        Ks(o, t) && Ks(d, t) && (n = 2);
        break;
      case 2:
        if (Ks(o, t) && Ks(d, t))
          return i;
        break;
    }
  }
  return i;
}, Ut = function(e, t, i) {
  const n = e.substr(0, i), r = e.substr(n.length);
  let s;
  if (Array.isArray(t)) {
    if (s = new RegExp(t[0], "i"), s.test(r))
      return e = n + r.replace(s, ""), e;
    s = new RegExp(t[1], "i");
  } else
    s = new RegExp(t, "i");
  return s.test(r) ? (e = n + r.replace(s, ""), e) : null;
}, Vsa = function(e, t, i) {
  const n = Ut(e, t.externalStemmer.regexDerivationalNounSuffix, i);
  if (n)
    return n;
  const r = Ut(e, [t.externalStemmer.regexPerfectiveGerunds1, t.externalStemmer.regexPerfectiveGerunds2], i);
  if (r)
    e = r;
  else {
    const s = Ut(e, t.externalStemmer.regexReflexives, i);
    s && (e = s);
    const o = t.externalStemmer.regexAdjective, d = Ut(e, t.externalStemmer.regexParticiple + o, i), c = Ut(e, o, i);
    if (d)
      e = d;
    else if (c)
      e = c;
    else {
      const p = Ut(e, [t.externalStemmer.regexVerb1, t.externalStemmer.regexVerb2], i);
      if (p)
        e = p;
      else {
        const m = Ut(e, t.externalStemmer.regexNoun, i);
        m && (e = m);
      }
    }
  }
  return e;
}, Ksa = function(e, t) {
  for (const i of t)
    if (i[1].includes(e))
      return i[0];
  return null;
}, Gsa = function(e, t) {
  const i = t.find((n) => n.includes(e));
  return i ? i[0] : e;
};
function Ysa(a, e) {
  if (e.doNotStemSuffix.includes(a))
    return a;
  const t = Ksa(a, e.exceptionStemsWithFullForms);
  if (t)
    return t;
  const i = Hsa(a, e);
  a = Vsa(a, e, i);
  const n = Ut(a, e.externalStemmer.regexI, i);
  n && (a = n), a.endsWith(e.externalStemmer.doubleN) && (a = a.substr(0, a.length - 1));
  const r = Ut(a, e.externalStemmer.regexSuperlative, i);
  r && (a = r);
  const s = Ut(a, e.externalStemmer.regexSoftSign, i);
  s && (a = s);
  const o = Gsa(a, e.stemsThatBelongToOneWord);
  return o || a;
}
var vh = {};
Object.defineProperty(vh, "__esModule", {
  value: !0
});
vh.default = doa;
var rW = Ct;
function zi(a, e) {
  return e.externalStemmer.vowels.includes(a);
}
function Zsa(a, e, t) {
  t = t + 1;
  const i = a.length;
  for (let n = t; n < i; n++)
    if (zi(a[n], e))
      return n;
  return i;
}
function Xsa(a, e, t) {
  const i = a.length;
  for (let n = t; n < i; n++)
    if (!zi(a[n], e))
      return n;
  return i;
}
function Br(a, e) {
  for (let t = 0; t < e.length; t++)
    if (a.endsWith(e[t]))
      return e[t];
  return "";
}
function Jsa(a, e) {
  const t = (0, rW.createRulesFromMorphologyData)(e.externalStemmer.preProcessing.acuteReplacements, "gi");
  for (const i of t)
    a = a.replace(i.reg, i.repl);
  return a;
}
function Qsa(a, e) {
  return a.replace(new RegExp(e.externalStemmer.preProcessing.vowelMarking, "g"), (t, i, n, r) => i + n.toUpperCase() + r);
}
function aoa(a, e) {
  a = a.toLowerCase(), a = Jsa(a, e);
  const t = (0, rW.createSingleRuleFromMorphologyData)(e.externalStemmer.preProcessing.quReplacement, "g");
  return a = a.replace(t.reg, t.repl), a = Qsa(a, e), a;
}
const eoa = function(e, t) {
  let i = e.length, n = e.length, r = e.length;
  for (let s = 0; s < e.length - 1 && i === e.length; s++)
    zi(e[s], t) && !zi(e[s + 1], t) && (i = s + 2);
  for (let s = i; s < e.length - 1 && n === e.length; s++)
    zi(e[s], t) && !zi(e[s + 1], t) && (n = s + 2);
  return e.length > 3 && (zi(e[1], t) ? zi(e[0], t) && zi(e[1], t) ? r = Xsa(e, t, 2) + 1 : r = 3 : r = Zsa(e, t, 1) + 1), { r1: i, r2: n, rv: r };
}, toa = function(e, t, i) {
  const n = Br(e, t.externalStemmer.pronounSuffixes.suffixes);
  if (n !== "") {
    const r = Br(i.slice(0, -n.length), t.externalStemmer.pronounSuffixes.preSuffixesGerund), s = Br(i.slice(0, -n.length), t.externalStemmer.pronounSuffixes.preSuffixesInfinitive);
    r !== "" && (e = e.slice(0, -n.length)), s !== "" && (e = e.slice(0, -n.length) + t.externalStemmer.pronounSuffixes.infinitiveCompletion);
  }
  return e;
}, ioa = function(e, t, i, n, r) {
  const s = {
    r1: n,
    r2: i,
    rv: r
  };
  for (const o of t.externalStemmer.standardSuffixes) {
    const d = Br(s[o.region], o.suffixes);
    if (d)
      return e.slice(0, -d.length) + o.replacement;
  }
  return e;
}, noa = function(e, t, i) {
  const n = Br(i, t.externalStemmer.verbSuffixes);
  return n && (e = e.slice(0, -n.length)), e;
}, roa = function(e, t, i) {
  const n = t.externalStemmer.digraphNormalization.digraphCh, r = t.externalStemmer.digraphNormalization.digraphGh;
  return i.endsWith(n[0]) ? e = e.slice(0, -r[0].length) + n[1] : i.endsWith(r[0]) && (e = e.slice(0, -r[0].length) + r[1]), e;
}, soa = function(e, t) {
  for (const i of t.verbsWithMultipleStems)
    if (i.includes(e))
      return i[0];
  for (const i of t.irregularDiminutives)
    if (i.includes(e))
      return i[0];
}, ooa = function(e, t) {
  for (const i of t)
    if (i[1].includes(e))
      return i[0];
  return null;
};
function doa(a, e) {
  const t = ooa(a, e.irregularPluralNounsAndAdjectives);
  if (t)
    return t;
  if (a = aoa(a, e), a.length < 3)
    return a;
  var i = eoa(a, e);
  const n = i.r1, r = i.r2, s = i.rv;
  let o = a.substring(n), d = a.substring(r), c = a.substring(s);
  const p = a;
  a = toa(a, e, c), a !== p && (o = a.substring(n), d = a.substring(r), c = a.substring(s));
  const m = a;
  a = ioa(a, e, d, o, c), a !== m && (c = a.substring(s)), m === a && (a = noa(a, e, c)), c = a.substring(s);
  let v = "";
  (v = Br(c, e.externalStemmer.generalSuffixes)) !== "" && (a = a.slice(0, -v.length)), c = a.substring(s), a = roa(a, e, c);
  const $ = soa(a, e.stemsThatBelongToOneWord);
  return $ || a.toLowerCase();
}
var kh = {};
Object.defineProperty(kh, "__esModule", {
  value: !0
});
kh.default = goa;
var Yt = fu;
const fi = function(e, t) {
  return t.includes(e);
}, loa = function(e, t, i = 0) {
  const n = e.length;
  for (let r = i; r < n; r++)
    if (fi(e[r], t))
      return r;
  return n;
}, coa = function(e, t, i = 0) {
  const n = e.length;
  for (let r = i; r < n; r++)
    if (!fi(e[r], t))
      return r;
  return n;
}, xS = function(e, t, i) {
  for (let n = 0; n < t.length; n++)
    e = e.replace(t[n], i[n]);
  return e;
}, uoa = function(e, t, i, n, r) {
  const s = {
    r1: i,
    r2: n,
    rv: r
  };
  for (const d of t.standardGroups) {
    const c = (0, Yt.findMatchingEndingInArray)(s[d.region], d.suffixes);
    if (c)
      return e.slice(0, -c.length) + d.replacement;
  }
  const o = (0, Yt.findMatchingEndingInArray)(s[t.specialClass.region], t.specialClass.suffixes);
  return (0, Yt.findMatchingEndingInArray)(e, t.specialClass.wordEndingsToCheck) && o && (e = e.slice(0, -o.length) + t.specialClass.replacement), e;
}, poa = function(e, t, i) {
  const n = (0, Yt.findMatchingEndingInArray)(i, t);
  return n !== "" && (e = e.slice(0, -n.length)), e;
}, moa = function(e, t, i) {
  const n = (0, Yt.findMatchingEndingInArray)(i, t.groupUe.suffixes), r = (0, Yt.findMatchingEndingInArray)(i, t.groupIe.suffixes), s = (0, Yt.findMatchingEndingInArray)(i, t.groupESuffixes);
  return n && (0, Yt.findMatchingEndingInArray)(e, t.groupUe.wordEndingsToCheck) ? e = e.slice(0, -n.length) : r && (0, Yt.findMatchingEndingInArray)(e, t.groupIe.wordEndingsToCheck) ? e = e.slice(0, -r.length) : s ? e = e.slice(0, -s.length) : e.endsWith(t.cCedilla[0]) && (e = e.slice(0, -1) + t.cCedilla[1]), e;
};
function goa(a, e) {
  a.toLowerCase();
  const t = e.externalStemmer.vowels, i = e.externalStemmer.nasalVowels.originals, n = e.externalStemmer.nasalVowels.replacements;
  a = xS(a, i, n);
  const r = a.length;
  if (r < 2)
    return a;
  let s = r, o = r, d = r;
  for (let $ = 0; $ < r - 1 && s === r; $++)
    fi(a[$], t) && !fi(a[$ + 1], t) && (s = $ + 2);
  for (let $ = s; $ < r - 1 && o === r; $++)
    fi(a[$], t) && !fi(a[$ + 1], t) && (o = $ + 2);
  r > 3 && (fi(a[1], t) ? fi(a[0], t) && fi(a[1], t) ? d = coa(a, t, 2) + 1 : d = 3 : d = loa(a, t, 2) + 1);
  const c = a.slice(s), p = a.slice(o);
  let m = a.slice(d);
  const w = uoa(a, e.externalStemmer.standardSuffixes, c, p, m);
  let v = "";
  if (a === w && (v = poa(a, e.externalStemmer.verbSuffixes, m)), a !== w ? (a = w, m = a.slice(d)) : a !== v && (a = v, m = a.slice(d)), w !== a || v !== a)
    a.endsWith(e.externalStemmer.ciToC[0]) && m.endsWith(e.externalStemmer.ciToC[1]) && (a = a.slice(0, -1), m = a.slice(d));
  else {
    const $ = (0, Yt.findMatchingEndingInArray)(m, e.externalStemmer.generalSuffixes);
    $ !== "" && (a = a.slice(0, -$.length), m = a.slice(d));
  }
  return a = moa(a, e.externalStemmer.residualSuffixes, m), a = xS(a, n, i), a;
}
var _h = {}, id = {};
Object.defineProperty(id, "__esModule", {
  value: !0
});
id.calculateTotalNumberOfSyllables = voa;
id.removeEnding = koa;
id.checkBeginningsList = _oa;
var zoa = yn, foa = Ct, yoa = woa(foa);
function woa(a) {
  return a && a.__esModule ? a : { default: a };
}
const hoa = ["a", "e", "i", "o", "u"];
function boa(a) {
  return hoa.includes(a);
}
function voa(a) {
  let e = 0;
  for (let t = 0; t < a.length; t++)
    boa(a[t]) && e++;
  return e;
}
function koa(a, e, t, i) {
  if (t.includes(a))
    return a;
  const n = i.stemming.doNotStemWords.doNotStemK;
  if (a.endsWith("kan")) {
    const o = a.substring(0, a.length - 2);
    n.includes(o) && (a = o);
  }
  const r = (0, yoa.default)(e);
  return (0, zoa.buildOneFormFromRegex)(a, r) || a;
}
function _oa(a, e, t) {
  const i = a.slice(e);
  return t.some((n) => i.startsWith(n));
}
Object.defineProperty(_h, "__esModule", {
  value: !0
});
_h.default = Roa;
var sW = yn, $oa = Ct, oW = joa($oa), AS = sr, Va = id;
function joa(a) {
  return a && a.__esModule ? a : { default: a };
}
const xoa = function(e, t) {
  for (const i of t)
    if (e.match(i))
      return !0;
}, Aoa = function(e, t) {
  return e.startsWith("di") && (0, Va.checkBeginningsList)(e, 2, t.stemming.singleSyllableWords) ? e.substring(2, e.length) : /^[mp]enge/i.test(e) && (0, Va.checkBeginningsList)(e, 5, t.stemming.singleSyllableWords) ? e.substring(5, e.length) : e;
}, Eoa = function(e, t) {
  const i = t.stemming.singleSyllableWords, n = t.stemming.singleSyllableWordsSuffixes, r = e;
  if (e = Aoa(e, t), i.some((s) => e.startsWith(s)) && (0, Va.calculateTotalNumberOfSyllables)(e) <= 3 && xoa(e, n)) {
    e = (0, Va.removeEnding)(e, t.stemming.regexRules.removeParticle, t.stemming.doNotStemWords.doNotStemParticle, t), e = (0, Va.removeEnding)(e, t.stemming.regexRules.removePronoun, t.stemming.doNotStemWords.doNotStemPronounSuffix, t);
    const s = (0, Va.removeEnding)(e, t.stemming.regexRules.removeSuffixes, t.stemming.doNotStemWords.doNotStemSuffix, t);
    i.includes(s) && (e = s);
  }
  return ((0, Va.calculateTotalNumberOfSyllables)(e) > 1 || e.length === 1) && (e = r), e;
}, Soa = function(e, t) {
  const i = e.stemming.doNotStemWords.doNotStemPrefix.doNotStemFirstOrderPrefix.doNotStemTer;
  if (t.startsWith("keter") && (t = t.substring(2, t.length)), t.startsWith("ter"))
    return i.some((n) => t.startsWith(n)) ? t : (0, Va.checkBeginningsList)(t, 3, e.stemming.beginningModification.rBeginning) ? t.replace(/^ter/i, "r") : t.substring(3, t.length);
}, qoa = function(e, t) {
  const i = t.stemming.beginningModification;
  if (/^[mp]en/i.test(e) && (0, Va.checkBeginningsList)(e, 3, i.nBeginning))
    return e.replace(/^[mp]en/i, "n");
  if (/^[mp]eng/i.test(e) && (0, Va.checkBeginningsList)(e, 4, i.kBeginning))
    return e.replace(/^[mp]eng/i, "k");
  if (/^[mp]em/i.test(e)) {
    if ((0, Va.checkBeginningsList)(e, 3, i.pBeginning))
      return e.replace(/^(mem|pem)/i, "p");
    if ((0, Va.checkBeginningsList)(e, 3, i.mBeginning))
      return e.replace(/^(mem|pem)/i, "m");
  }
  const n = Soa(t, e);
  if (n)
    return n;
}, Poa = function(e, t) {
  const i = qoa(e, t);
  if (i)
    return i;
  const n = (0, oW.default)(t.stemming.regexRules.removeFirstOrderPrefixes);
  return (0, sW.buildOneFormFromRegex)(e, n) || e;
}, ES = function(e, t) {
  if ((e.startsWith("ber") || e.startsWith("per")) && (0, Va.checkBeginningsList)(e, 3, t.stemming.beginningModification.rBeginning))
    return e.replace(/^(ber|per)/i, "r");
  if (/^peng/i.test(e) && (0, Va.checkBeginningsList)(e, 4, t.stemming.beginningModification.kBeginning))
    return e.replace(/^peng/i, "k");
  const i = (0, oW.default)(t.stemming.regexRules.removeSecondOrderPrefixes);
  return (0, sW.buildOneFormFromRegex)(e, i) || e;
}, SS = function(e, t) {
  let i = e.length;
  const n = t.stemming.regexRules.removeSuffixes, r = t.stemming.doNotStemWords.doNotStemSuffix, s = (0, AS.flattenSortLength)(t.stemming.doNotStemWords.doNotStemPrefix.doNotStemFirstOrderPrefix), o = (0, AS.flattenSortLength)(t.stemming.doNotStemWords.doNotStemPrefix.doNotStemSecondOrderPrefix);
  return s.some((d) => e.startsWith(d)) || (e = Poa(e, t)), i === e.length ? (o.some((d) => e.startsWith(d)) || (e = ES(e, t)), (0, Va.calculateTotalNumberOfSyllables)(e) > 2 && (e = (0, Va.removeEnding)(e, n, r, t))) : (i = e.length, (0, Va.calculateTotalNumberOfSyllables)(e) > 2 && (e = (0, Va.removeEnding)(e, n, r, t)), i !== e.length && !o.includes(e) && (0, Va.calculateTotalNumberOfSyllables)(e) > 2 && (e = ES(e, t))), e;
}, Mf = function(e, t) {
  e = Eoa(e, t);
  const n = t.stemming.doNotStemWords.doNotStemParticle, r = t.stemming.doNotStemWords.doNotStemPronounSuffix;
  if ((0, Va.calculateTotalNumberOfSyllables)(e) <= 2)
    return e;
  const s = SS(e, t);
  return n.includes(s) || r.includes(s) ? s : (e = (0, Va.removeEnding)(e, t.stemming.regexRules.removeParticle, n, t), (0, Va.calculateTotalNumberOfSyllables)(e) > 2 && (e = (0, Va.removeEnding)(e, t.stemming.regexRules.removePronoun, r, t)), (0, Va.calculateTotalNumberOfSyllables)(e) > 2 && (e = SS(e, t)), e);
}, Toa = function(e, t) {
  if (e.indexOf("-") === -1)
    return null;
  const n = e.split("-");
  if (n.length === 2) {
    let r = n[0], s = n[1];
    r = Mf(r, t), s = Mf(s, t);
    const o = r.substr(1), d = s.startsWith("ng") || s.startsWith("ny") ? s.substr(2) : s.substr(1);
    if (o === d) {
      const c = t.stemming.nonPluralReduplications;
      return c.includes(r) && c.includes(s) ? r + "-" + r : r;
    }
  }
  return null;
};
function Roa(a, e) {
  if (e.stemming.shouldNotBeStemmed.includes(a))
    return a;
  const t = Toa(a, e);
  return t || (a = Mf(a, e), a);
}
var $h = {};
Object.defineProperty($h, "__esModule", {
  value: !0
});
$h.default = Loa;
const Ooa = function(e, t) {
  const i = [];
  for (const r in t)
    e.endsWith(t[r]) && i.push(t[r]);
  const n = i.sort(function(r, s) {
    return s.length - r.length;
  })[0];
  return n || "";
}, Moa = function(e, t, i, n) {
  if (e.length > t && Ooa(e, i) !== "")
    return e.slice(0, -n);
}, ao = function(e, t) {
  for (const i in t)
    if (t.hasOwnProperty(i)) {
      const n = t[i].wordShouldBeLongerThan, r = t[i].wordEndings, s = t[i].suffixLength, o = Moa(e, n, r, s);
      if (o)
        return o;
    }
}, Coa = function(e, t) {
  const i = ao(e, t.adjectiveAndAdverbSuffixes);
  if (i)
    return e.startsWith(t.superlativePrefix) ? i.slice(3) : i;
};
function Loa(a, e) {
  const t = e.externalStemmer;
  let n = e.dictionary.stems[a];
  return n && (a = n), a.toLowerCase(), a.length < 4 ? a : (n = ao(a, t.diminutiveSuffixes), n || (n = ao(a, t.nounSuffixes)), n || (n = ao(a, t.verbSuffixes)), n || (n = Coa(a, t)), n && (a = n), n = ao(a, t.generalSuffixes), n || a);
}
var jh = {};
Object.defineProperty(jh, "__esModule", {
  value: !0
});
jh.default = Koa;
const Ioa = function(e, t) {
  return e.replace(new RegExp(t[0]), t[1]);
}, dW = function(e, t) {
  const i = t.externalStemmer, n = i.characters;
  if (i.wordsWithLastAlefRemoved.includes(e))
    return e + n.alef;
  if (i.wordsWithLastHamzaRemoved.includes(e))
    return e + n.alef_hamza_above;
  if (i.wordsWithLastMaksoraRemoved.includes(e))
    return e + n.yeh_maksorah;
  if (i.wordsWithLastYehRemoved.includes(e))
    return e + n.yeh;
}, Woa = function(e, t) {
  const i = t.externalStemmer, n = i.characters;
  if (i.wordsWithFirstWawRemoved.includes(e))
    return n.waw + e;
  if (i.wordsWithFirstYehRemoved.includes(e))
    return n.yeh + e;
}, lW = function(e, t) {
  const i = t.externalStemmer, n = i.characters;
  if (i.wordsWithMiddleWawRemoved.includes(e))
    return e[0] + n.waw + e[1];
  if (i.wordsWithMiddleYehRemoved.includes(e))
    return e[0] + n.yeh + e[1];
}, Foa = function(e, t) {
  if (t.externalStemmer.wordsWithRemovedDuplicateLetter.includes(e))
    return e + e.substring(1);
  const i = dW(e, t);
  if (i)
    return i;
  const n = Woa(e, t);
  if (n)
    return n;
  const r = lW(e, t);
  return r || e;
}, qS = function(e, t, i, n) {
  const r = e.replace(new RegExp(i[0]), i[1]);
  if (r !== e)
    return n(r, t);
}, xh = function(e, t) {
  const i = t.externalStemmer.characters;
  if (t.externalStemmer.threeLetterRoots.includes(e))
    return e;
  (e[0] === i.alef || e[0] === i.waw_hamza || e[0] === i.yeh_hamza) && (e = i.alef_hamza_above + e.slice(1));
  const n = qS(e, t, t.externalStemmer.regexRemoveLastWeakLetterOrHamza, dW);
  if (n)
    return n;
  const r = qS(e, t, t.externalStemmer.regexRemoveMiddleWeakLetterOrHamza, lW);
  if (r)
    return r;
  const s = t.externalStemmer.regexReplaceMiddleLetterWithAlef, o = t.externalStemmer.regexReplaceMiddleLetterWithAlefWithHamza, d = e.replace(new RegExp(s[0]), s[1]);
  d === e ? e = e.replace(new RegExp(o[0]), o[1]) : e = d;
  const c = t.externalStemmer.regexRemoveShaddaAndDuplicateLastLetter;
  return e = e.replace(new RegExp(c[0]), c[1]), e;
}, Doa = function(e, t, i) {
  return e.length === 6 && e[3] === e[5] && t === 2 ? xh(e.substring(1, 4), i) : e;
}, Boa = function(e, t, i, n) {
  const r = n.externalStemmer.characters;
  if (e.length - 3 <= i) {
    let s = "";
    for (let o = 0; o < e.length; o++)
      (t[o] === r.feh || t[o] === r.aen || t[o] === r.lam) && (s = s.concat(e[o]));
    if (s.length === 3)
      return xh(s, n);
  }
  return e;
}, Noa = function(e, t, i) {
  const n = i.externalStemmer.characters;
  let r = 0;
  for (let s = 0; s < e.length; s++)
    t[s] === e[s] && t[s] !== n.feh && t[s] !== n.aen && t[s] !== n.lam && r++;
  return r;
}, yu = function(e, t) {
  const i = Ioa(e, t.externalStemmer.regexReplaceFirstHamzaWithAlef);
  for (const n of t.externalStemmer.patterns)
    if (n.length === i.length) {
      const r = Noa(i, n, t), s = Doa(i, r, t);
      if (s !== i)
        return { word: s, rootFound: !0 };
      const o = Boa(i, n, r, t);
      if (o !== i)
        return { word: o, rootFound: !0 };
    }
  if (i !== e)
    return { word: i, rootFound: !1 };
}, wu = function(e, t) {
  if (e.length === 2)
    return Foa(e, t);
  if (e.length === 3) {
    if (t.externalStemmer.threeLetterRoots.includes(e))
      return e;
    const i = xh(e, t);
    if (i)
      return i;
  }
  if (e.length === 4 && t.externalStemmer.fourLetterRoots.includes(e))
    return e;
}, Uoa = function(e, t) {
  for (const i of t)
    if (e.endsWith(i))
      return e.slice(0, -i.length);
  return e;
}, cW = function(e, t) {
  for (const i of t)
    if (e.startsWith(i))
      return e.substring(i.length, e.length);
  return e;
}, Ah = function(e, t) {
  if (e.length <= 3)
    return null;
  const i = Uoa(e, t.externalStemmer.suffixes);
  if (i !== e) {
    const n = wu(i, t);
    if (n)
      return { word: n, rootFound: !0 };
    if (e.length > 2) {
      const r = yu(i, t);
      if (r)
        return r;
    }
  }
}, uW = function(e, t) {
  if (e.length <= 3)
    return null;
  let i = cW(e, t.externalStemmer.prefixes);
  if (i !== e) {
    const n = wu(i, t);
    if (n)
      return { word: n, rootFound: !0 };
    if (i.length > 2) {
      const s = yu(i, t);
      if (s) {
        if (s.rootFound === !0)
          return s;
        i = s.word;
      }
    }
    const r = Ah(i, t);
    if (r)
      return r;
  }
}, pW = function(e, t) {
  const i = wu(e, t);
  if (i)
    return { word: i, rootFound: !0 };
  if (e.length > 2) {
    const s = yu(e, t);
    if (s) {
      if (s.rootFound === !0)
        return s;
      e = s.word;
    }
  }
  const n = Ah(e, t);
  if (n) {
    if (n.rootFound === !0)
      return n;
    e = n.word;
  }
  const r = uW(e, t);
  if (r)
    return r;
}, Hoa = function(e, t) {
  let i = cW(e, t.externalStemmer.definiteArticles);
  if (i !== e) {
    const n = pW(i, t);
    if (n) {
      if (n.rootFound === !0)
        return n;
      i = n.word;
    }
    if (i > 3)
      return { word: i, rootFound: !1 };
  }
}, Voa = function(e, t) {
  let i = "";
  if (e.length > 3 && e.startsWith(t.externalStemmer.characters.waw)) {
    i = e.substring(1);
    const n = pW(i, t);
    if (n)
      return n;
  }
};
function Koa(a, e) {
  const t = e.externalStemmer.regexRemovingDiacritics;
  a.replace(new RegExp(t), "");
  const i = wu(a, e);
  if (i)
    return i;
  const n = yu(a, e);
  if (n) {
    if (n.rootFound === !0)
      return n.word;
    a = n.word;
  }
  const r = Hoa(a, e);
  if (r) {
    if (r.rootFound === !0)
      return r.word;
    a = r.word;
  }
  const s = Voa(a, e);
  if (s) {
    if (s.rootFound === !0)
      return s.word;
    a = s.word;
  }
  const o = Ah(a, e);
  if (o) {
    if (o.rootFound === !0)
      return o.word;
    a = o.word;
  }
  const d = uW(a, e);
  return d ? d.word : a;
}
var Eh = {};
Object.defineProperty(Eh, "__esModule", {
  value: !0
});
Eh.default = Joa;
const lz = function(e, t) {
  const i = e.match(new RegExp(t.externalStemmer.regexR1region));
  let n = "";
  return i && i[1] && (n = i[1], i.index + 2 < 3 && (n = e.slice(3))), {
    r1: n,
    rest: e.slice(0, e.length - n.length)
  };
}, Goa = function(e, t, i) {
  const n = t.r1;
  if (!n)
    return e;
  const r = new RegExp(i.externalStemmer.regexSuffixes1a), s = n.match(r);
  return s ? t.rest + n.slice(0, s.index) : e;
}, Yoa = function(e, t, i) {
  return t.r1 && e.match(new RegExp(i.externalStemmer.regexSuffixes1b)) ? e.slice(0, -1) : e;
}, Zoa = function(e, t, i) {
  const n = t.r1;
  return n && n.match(new RegExp(i.externalStemmer.regexSuffixes2)) ? e.slice(0, -1) : e;
}, Xoa = function(e, t, i) {
  const n = t.r1;
  if (n) {
    if (n.match(new RegExp(i.externalStemmer.regexSuffixes3a)))
      return e.slice(0, -1);
    const r = n.match(new RegExp(i.externalStemmer.regexSuffixes3b));
    return r ? t.rest + n.slice(0, r.index) : e;
  }
  return e;
};
function Joa(a, e) {
  let t = lz(a, e);
  const i = Goa(a, t, e), n = Yoa(a, t, e);
  return a = i.length < n.length ? i : n, t = lz(a, e), a = Zoa(a, t, e), t = lz(a, e), a = Xoa(a, t, e), a;
}
var Sh = {};
Object.defineProperty(Sh, "__esModule", {
  value: !0
});
Sh.default = zda;
const Qoa = function(e, t) {
  const i = e.externalStemmer.vowels, n = new RegExp(i);
  return t.search(n);
}, ada = function(e, t) {
  const i = new RegExp(e.externalStemmer.digraphs), n = new RegExp(e.externalStemmer.consonants), r = t.search(i), s = t.search(n);
  return r === s ? r + 1 : s;
}, at = function(e, t) {
  const i = Qoa(e, t);
  return i === 0 ? ada(e, t) + 1 : i + 1;
}, eda = function(e, t) {
  if (e.length < 3)
    return e;
  const i = at(t, e);
  if (e.search(new RegExp(t.externalStemmer.suffixes1)) >= i) {
    let r = e.slice(0, -2);
    const s = new RegExp(t.externalStemmer.doubleConsonants);
    r.search(s) !== -1 && (r = r.slice(0, -1));
    const d = new RegExp(t.externalStemmer.tripleDoubleConsonants);
    if (r.search(d) !== -1 && (r = r.slice(0, -2) + r.charAt(r.length - 1)), r.length !== e.slice(0, -2).length)
      return r;
  }
  return e;
}, tda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t));
  if (r >= n) {
    let s = e.substring(0, r);
    return (s.endsWith("á") || s.endsWith("é")) && (s = s.replace(/á$/i, "a", "e")), s;
  }
  return e;
}, ida = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t.suffixes3a));
  if (r >= n)
    return e.substring(0, r) + "a";
  const s = e.search(new RegExp(t.suffixes3b));
  return s >= n ? e.substring(0, s) + "e" : e;
}, nda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t));
  return r >= n ? e.substring(0, r) : e;
}, rda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t.suffixes5a));
  if (r >= n)
    return e.substring(0, r) + "a";
  const s = e.search(new RegExp(t.suffixes5b));
  return s >= n ? e.substring(0, s) + "e" : e;
}, sda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e);
  if (e.search(new RegExp(t)) >= n) {
    let s = e.slice(0, -1);
    const o = new RegExp(i.externalStemmer.doubleConsonants);
    return s.search(o) !== -1 && (s = s.slice(0, -1)), s;
  }
  return e;
}, oda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t));
  return r >= n ? e.substring(0, r) : e;
}, dda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t.suffixes8a));
  if (r >= n)
    return e.substring(0, r) + "a";
  const s = e.search(new RegExp(t.suffixes8b));
  return s >= n ? e.substring(0, s) + "e" : e;
}, lda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t));
  return r >= n ? e.substring(0, r) : e;
}, cda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t));
  return r >= n ? e.substring(0, r) : e;
}, uda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t.suffixes11a));
  if (r >= n)
    return e.substring(0, r) + "a";
  const s = e.search(new RegExp(t.suffixes11b));
  return s >= n ? e.substring(0, s) + "e" : e;
}, pda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t.suffixes12a));
  if (r >= n)
    return e.substring(0, r) + "a";
  const s = e.search(new RegExp(t.suffixes12b));
  return s >= n ? e.substring(0, s) + "e" : e;
}, mda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e);
  return e.search(new RegExp(t.suffixes13a)) >= n ? e.slice(0, -2) + "a" : e.search(new RegExp(t.suffixes13b)) >= n ? e.slice(0, -2) + "e" : e;
}, gda = function(e, t, i) {
  if (e.length < 3)
    return e;
  const n = at(i, e), r = e.search(new RegExp(t));
  return r >= n ? e.substring(0, r) : e;
};
function zda(a, e) {
  const t = eda(a, e), i = tda(t, e.externalStemmer.suffixes2, e), n = ida(i, e.externalStemmer.suffixes3, e), r = nda(n, e.externalStemmer.suffixes4, e), s = rda(r, e.externalStemmer.suffixes5, e), o = sda(s, e.externalStemmer.suffixes6, e), d = oda(o, e.externalStemmer.suffixes7, e), c = dda(d, e.externalStemmer.suffixes8, e), p = lda(c, e.externalStemmer.suffixes9, e), m = cda(p, e.externalStemmer.suffixes10, e), w = uda(m, e.externalStemmer.suffixes11, e), v = pda(w, e.externalStemmer.suffixes12, e), $ = mda(v, e.externalStemmer.suffixes13, e);
  return gda($, e.externalStemmer.suffixes14, e);
}
var qh = {};
Object.defineProperty(qh, "__esModule", {
  value: !0
});
qh.default = fda;
const PS = function(e, t) {
  return t.some((i) => e.startsWith(i)) ? e.slice(1) : e;
};
function fda(a, e) {
  const t = e.dictionary;
  let i = t[a];
  if (i)
    return i;
  const n = PS(a, e.prefixes);
  if (n !== a) {
    if (i = t[n], i)
      return i;
    const r = PS(n, e.prefixes);
    if (r !== n && (i = t[r], i))
      return i;
  }
  return a;
}
var Ph = {};
Object.defineProperty(Ph, "__esModule", {
  value: !0
});
Ph.default = vda;
const yda = function(e) {
  let t = e.search(/[aeiouyøåæ][^aeiouyøåæ]/);
  return t !== -1 && (t += 2), t !== -1 && t < 3 && (t = 3), t;
}, wda = function(e, t, i) {
  const n = e.search(new RegExp(i.externalStemmer.regexSuffixes1a));
  if (n >= t && t !== -1) {
    let o = e.substring(0, n);
    return /ert$/i.test(o) && (o = o.slice(0, -1)), o;
  }
  const r = e.search(/s$/), s = e.search(new RegExp(i.externalStemmer.regexSuffixes1b));
  return r >= t && s !== -1 && t !== -1 ? e.slice(0, -1) : e;
}, hda = function(e, t, i) {
  return e.search(new RegExp(i.externalStemmer.regexSuffixes2)) >= t && t !== -1 && (e = e.slice(0, -1)), e;
}, bda = function(e, t, i) {
  const n = e.search(new RegExp(i.externalStemmer.regexSuffixes3));
  return n >= t && t !== -1 && (e = e.substring(0, n)), e;
};
function vda(a, e) {
  let t = -1;
  for (const i of [wda, hda, bda])
    t = yda(a), a = i(a, t, e);
  return a;
}
var Th = {}, Rh = {};
Object.defineProperty(Rh, "__esModule", {
  value: !0
});
class TS {
  get b() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$b") ? this._$esjava$b : this._$esjava$b = "";
  }
  set b(e) {
    this._$esjava$b = e;
  }
  length$esjava$0() {
    return this.b.length;
  }
  replace$esjava$3(e, t, i) {
    if (e === 0 && t === this.b.length)
      this.b = i;
    else {
      const n = this.b.substring(0, e), r = this.b.substring(t);
      this.b = n + i + r;
    }
  }
  substring$esjava$2(e, t) {
    return this.b.substring(e, t);
  }
  charAt$esjava$1(e) {
    return this.b.charCodeAt(e);
  }
  subSequence$esjava$2(e, t) {
    throw new Error("NotImpl: CharSequence::subSequence");
  }
  toString$esjava$0() {
    return this.b;
  }
  length(...e) {
    switch (e.length) {
      case 0:
        return this.length$esjava$0(...e);
    }
    return super.length(...e);
  }
  replace(...e) {
    switch (e.length) {
      case 3:
        return this.replace$esjava$3(...e);
    }
    return super.replace(...e);
  }
  substring(...e) {
    switch (e.length) {
      case 2:
        return this.substring$esjava$2(...e);
    }
    return super.substring(...e);
  }
  charAt(...e) {
    switch (e.length) {
      case 1:
        return this.charAt$esjava$1(...e);
    }
    return super.charAt(...e);
  }
  subSequence(...e) {
    switch (e.length) {
      case 2:
        return this.subSequence$esjava$2(...e);
    }
    return super.subSequence(...e);
  }
  toString(...e) {
    switch (e.length) {
      case 0:
        return this.toString$esjava$0(...e);
    }
    return super.toString(...e);
  }
}
class W {
  static toCharArray$esjava$1(e) {
    const t = e.length, i = new Array(t);
    for (let n = 0; n < t; n++)
      i[n] = e.charCodeAt(n);
    return i;
  }
  constructor(e, t, i, n, r) {
    this.s_size = e.length, this.s = W.toCharArray$esjava$1(e), this.substring_i = t, this.result = i, this.methodobject = r, this.method = n ? r[n] : null;
  }
  get s_size() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$s_size") ? this._$esjava$s_size : this._$esjava$s_size = 0;
  }
  set s_size(e) {
    this._$esjava$s_size = e;
  }
  get s() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$s") ? this._$esjava$s : this._$esjava$s = null;
  }
  set s(e) {
    this._$esjava$s = e;
  }
  get substring_i() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$substring_i") ? this._$esjava$substring_i : this._$esjava$substring_i = 0;
  }
  set substring_i(e) {
    this._$esjava$substring_i = e;
  }
  get result() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$result") ? this._$esjava$result : this._$esjava$result = 0;
  }
  set result(e) {
    this._$esjava$result = e;
  }
  get method() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$method") ? this._$esjava$method : this._$esjava$method = null;
  }
  set method(e) {
    this._$esjava$method = e;
  }
  get methodobject() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$methodobject") ? this._$esjava$methodobject : this._$esjava$methodobject = null;
  }
  set methodobject(e) {
    this._$esjava$methodobject = e;
  }
}
class kda {
  constructor() {
    this.current = new TS(), this.setCurrent$esjava$1("");
  }
  setCurrent$esjava$1(e) {
    this.current.replace(0, this.current.length(), e), this.cursor = 0, this.limit = this.current.length(), this.limit_backward = 0, this.bra = this.cursor, this.ket = this.limit;
  }
  getCurrent$esjava$0() {
    const e = this.current.toString();
    return this.current = new TS(), e;
  }
  get current() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$current") ? this._$esjava$current : this._$esjava$current = null;
  }
  set current(e) {
    this._$esjava$current = e;
  }
  get cursor() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$cursor") ? this._$esjava$cursor : this._$esjava$cursor = 0;
  }
  set cursor(e) {
    this._$esjava$cursor = e;
  }
  get limit() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$limit") ? this._$esjava$limit : this._$esjava$limit = 0;
  }
  set limit(e) {
    this._$esjava$limit = e;
  }
  get limit_backward() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$limit_backward") ? this._$esjava$limit_backward : this._$esjava$limit_backward = 0;
  }
  set limit_backward(e) {
    this._$esjava$limit_backward = e;
  }
  get bra() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$bra") ? this._$esjava$bra : this._$esjava$bra = 0;
  }
  set bra(e) {
    this._$esjava$bra = e;
  }
  get ket() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$ket") ? this._$esjava$ket : this._$esjava$ket = 0;
  }
  set ket(e) {
    this._$esjava$ket = e;
  }
  copy_from$esjava$1(e) {
    this.current = e.current, this.cursor = e.cursor, this.limit = e.limit, this.limit_backward = e.limit_backward, this.bra = e.bra, this.ket = e.ket;
  }
  in_grouping$esjava$3(e, t, i) {
    if (this.cursor >= this.limit)
      return !1;
    let n = this.current.charAt(this.cursor);
    return n > i || n < t || (n -= t, !(e[n >> 3] & 1 << (n & 7))) ? !1 : (this.cursor++, !0);
  }
  in_grouping_b$esjava$3(e, t, i) {
    if (this.cursor <= this.limit_backward)
      return !1;
    let n = this.current.charAt(this.cursor - 1);
    return n > i || n < t || (n -= t, !(e[n >> 3] & 1 << (n & 7))) ? !1 : (this.cursor--, !0);
  }
  out_grouping$esjava$3(e, t, i) {
    if (this.cursor >= this.limit)
      return !1;
    let n = this.current.charAt(this.cursor);
    return n > i || n < t ? (this.cursor++, !0) : (n -= t, e[n >> 3] & 1 << (n & 7) ? !1 : (this.cursor++, !0));
  }
  out_grouping_b$esjava$3(e, t, i) {
    if (this.cursor <= this.limit_backward)
      return !1;
    let n = this.current.charAt(this.cursor - 1);
    return n > i || n < t ? (this.cursor--, !0) : (n -= t, e[n >> 3] & 1 << (n & 7) ? !1 : (this.cursor--, !0));
  }
  in_range$esjava$2(e, t) {
    if (this.cursor >= this.limit)
      return !1;
    const i = this.current.charAt(this.cursor);
    return i > t || i < e ? !1 : (this.cursor++, !0);
  }
  in_range_b$esjava$2(e, t) {
    if (this.cursor <= this.limit_backward)
      return !1;
    const i = this.current.charAt(this.cursor - 1);
    return i > t || i < e ? !1 : (this.cursor--, !0);
  }
  out_range$esjava$2(e, t) {
    if (this.cursor >= this.limit)
      return !1;
    const i = this.current.charAt(this.cursor);
    return i > t || i < e ? (this.cursor++, !0) : !1;
  }
  out_range_b$esjava$2(e, t) {
    if (this.cursor <= this.limit_backward)
      return !1;
    const i = this.current.charAt(this.cursor - 1);
    return i > t || i < e ? (this.cursor--, !0) : !1;
  }
  eq_s$esjava$2(e, t) {
    if (this.limit - this.cursor < e)
      return !1;
    let i;
    for (i = 0; i !== e; i++)
      if (this.current.charAt(this.cursor + i) !== t.charCodeAt(i))
        return !1;
    return this.cursor += e, !0;
  }
  eq_s_b$esjava$2(e, t) {
    if (this.cursor - this.limit_backward < e)
      return !1;
    let i;
    for (i = 0; i !== e; i++)
      if (this.current.charAt(this.cursor - e + i) !== t.charCodeAt(i))
        return !1;
    return this.cursor -= e, !0;
  }
  eq_v$esjava$1(e) {
    return this.eq_s$esjava$2(e.length(), e.toString());
  }
  eq_v_b$esjava$1(e) {
    return this.eq_s_b$esjava$2(e.length(), e.toString());
  }
  find_among$esjava$2(e, t) {
    let i = 0, n = t;
    const r = this.cursor, s = this.limit;
    let o = 0, d = 0, c = !1;
    for (; ; ) {
      const p = i + (n - i >> 1);
      let m = 0, w = o < d ? o : d;
      const v = e[p];
      let $;
      for ($ = w; $ < v.s_size; $++) {
        if (r + w === s) {
          m = -1;
          break;
        }
        if (m = this.current.charAt(r + w) - v.s[$], m !== 0)
          break;
        w++;
      }
      if (m < 0 ? (n = p, d = w) : (i = p, o = w), n - i <= 1) {
        if (i > 0 || n === i || c)
          break;
        c = !0;
      }
    }
    for (; ; ) {
      const p = e[i];
      if (o >= p.s_size) {
        if (this.cursor = r + p.s_size, p.method === null)
          return p.result;
        let m;
        if (m = p.method.call(p.methodobject), this.cursor = r + p.s_size, m)
          return p.result;
      }
      if (i = p.substring_i, i < 0)
        return 0;
    }
  }
  find_among_b$esjava$2(e, t) {
    let i = 0, n = t;
    const r = this.cursor, s = this.limit_backward;
    let o = 0, d = 0, c = !1;
    for (; ; ) {
      const p = i + (n - i >> 1);
      let m = 0, w = o < d ? o : d;
      const v = e[p];
      let $;
      for ($ = v.s_size - 1 - w; $ >= 0; $--) {
        if (r - w === s) {
          m = -1;
          break;
        }
        if (m = this.current.charAt(r - 1 - w) - v.s[$], m !== 0)
          break;
        w++;
      }
      if (m < 0 ? (n = p, d = w) : (i = p, o = w), n - i <= 1) {
        if (i > 0 || n === i || c)
          break;
        c = !0;
      }
    }
    for (; ; ) {
      const p = e[i];
      if (o >= p.s_size) {
        if (this.cursor = r - p.s_size, p.method === null)
          return p.result;
        let m;
        if (m = p.method.call(p.methodobject), this.cursor = r - p.s_size, m)
          return p.result;
      }
      if (i = p.substring_i, i < 0)
        return 0;
    }
  }
  replace_s$esjava$3(e, t, i) {
    const n = i.length - (t - e);
    return this.current.replace(e, t, i), this.limit += n, this.cursor >= t ? this.cursor += n : this.cursor > e && (this.cursor = e), n;
  }
  slice_check$esjava$0() {
    if (this.bra < 0 || this.bra > this.ket || this.ket > this.limit || this.limit > this.current.length())
      throw new Error("Snowball: faulty slice operation");
  }
  slice_from$esjava$1(e) {
    this.slice_check$esjava$0(), this.replace_s$esjava$3(this.bra, this.ket, e);
  }
  slice_del$esjava$0() {
    this.slice_from$esjava$1("");
  }
  insert$esjava$3(e, t, i) {
    const n = this.replace_s$esjava$3(e, t, i);
    e <= this.bra && (this.bra += n), e <= this.ket && (this.ket += n);
  }
  slice_to$esjava$1(e) {
    return this.slice_check$esjava$0(), e.replace(0, e.length(), this.current.substring(this.bra, this.ket)), e;
  }
  setCurrent(...e) {
    switch (e.length) {
      case 1:
        return this.setCurrent$esjava$1(...e);
    }
    return super.setCurrent(...e);
  }
  getCurrent(...e) {
    switch (e.length) {
      case 0:
        return this.getCurrent$esjava$0(...e);
    }
    return super.getCurrent(...e);
  }
  copy_from(...e) {
    switch (e.length) {
      case 1:
        return this.copy_from$esjava$1(...e);
    }
    return super.copy_from(...e);
  }
  in_grouping(...e) {
    switch (e.length) {
      case 3:
        return this.in_grouping$esjava$3(...e);
    }
    return super.in_grouping(...e);
  }
  in_grouping_b(...e) {
    switch (e.length) {
      case 3:
        return this.in_grouping_b$esjava$3(...e);
    }
    return super.in_grouping_b(...e);
  }
  out_grouping(...e) {
    switch (e.length) {
      case 3:
        return this.out_grouping$esjava$3(...e);
    }
    return super.out_grouping(...e);
  }
  out_grouping_b(...e) {
    switch (e.length) {
      case 3:
        return this.out_grouping_b$esjava$3(...e);
    }
    return super.out_grouping_b(...e);
  }
  in_range(...e) {
    switch (e.length) {
      case 2:
        return this.in_range$esjava$2(...e);
    }
    return super.in_range(...e);
  }
  in_range_b(...e) {
    switch (e.length) {
      case 2:
        return this.in_range_b$esjava$2(...e);
    }
    return super.in_range_b(...e);
  }
  out_range(...e) {
    switch (e.length) {
      case 2:
        return this.out_range$esjava$2(...e);
    }
    return super.out_range(...e);
  }
  out_range_b(...e) {
    switch (e.length) {
      case 2:
        return this.out_range_b$esjava$2(...e);
    }
    return super.out_range_b(...e);
  }
  eq_s(...e) {
    switch (e.length) {
      case 2:
        return this.eq_s$esjava$2(...e);
    }
    return super.eq_s(...e);
  }
  eq_s_b(...e) {
    switch (e.length) {
      case 2:
        return this.eq_s_b$esjava$2(...e);
    }
    return super.eq_s_b(...e);
  }
  eq_v(...e) {
    switch (e.length) {
      case 1:
        return this.eq_v$esjava$1(...e);
    }
    return super.eq_v(...e);
  }
  eq_v_b(...e) {
    switch (e.length) {
      case 1:
        return this.eq_v_b$esjava$1(...e);
    }
    return super.eq_v_b(...e);
  }
  find_among(...e) {
    switch (e.length) {
      case 2:
        return this.find_among$esjava$2(...e);
    }
    return super.find_among(...e);
  }
  find_among_b(...e) {
    switch (e.length) {
      case 2:
        return this.find_among_b$esjava$2(...e);
    }
    return super.find_among_b(...e);
  }
  replace_s(...e) {
    switch (e.length) {
      case 3:
        return this.replace_s$esjava$3(...e);
    }
    return super.replace_s(...e);
  }
  slice_check(...e) {
    switch (e.length) {
      case 0:
        return this.slice_check$esjava$0(...e);
    }
    return super.slice_check(...e);
  }
  slice_from(...e) {
    switch (e.length) {
      case 1:
        return this.slice_from$esjava$1(...e);
    }
    return super.slice_from(...e);
  }
  slice_del(...e) {
    switch (e.length) {
      case 0:
        return this.slice_del$esjava$0(...e);
    }
    return super.slice_del(...e);
  }
  insert(...e) {
    switch (e.length) {
      case 3:
        return this.insert$esjava$3(...e);
    }
    return super.insert(...e);
  }
  slice_to(...e) {
    switch (e.length) {
      case 1:
        return this.slice_to$esjava$1(...e);
    }
    return super.slice_to(...e);
  }
}
class _da extends kda {
  stem$esjava$0() {
    throw "NotImpl < stem$esjava$0 >";
  }
  stem(...e) {
    switch (e.length) {
      case 0:
        return this.stem$esjava$0(...e);
    }
    return super.stem(...e);
  }
}
class g extends _da {
  constructor(e) {
    super(), g.morphologyData = e.externalStemmer;
  }
  static get methodObject() {
    return delete g.methodObject, g.methodObject = null;
  }
  static get a_0() {
    return delete g.a_0, g.a_0 = [new W(g.morphologyData.a_0.SuffixM, -1, -1, "", g.methodObject), new W(g.morphologyData.a_0.SuffixN, -1, -1, "", g.methodObject), new W(g.morphologyData.a_0.SuffixMiz, -1, -1, "", g.methodObject), new W(g.morphologyData.a_0.SuffixNiz, -1, -1, "", g.methodObject), new W(g.morphologyData.a_0.SuffixMuz, -1, -1, "", g.methodObject), new W(g.morphologyData.a_0.SuffixNuz, -1, -1, "", g.methodObject), new W(g.morphologyData.a_0.SuffixMuzDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_0.SuffixNuzDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_0.SuffixMizUndotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_0.SuffixNizUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_1() {
    return delete g.a_1, g.a_1 = [new W(g.morphologyData.a_1.SuffixLeri, -1, -1, "", g.methodObject), new W(g.morphologyData.a_1.SuffixLariUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_2() {
    return delete g.a_2, g.a_2 = [new W(g.morphologyData.a_2.SuffixNi, -1, -1, "", g.methodObject), new W(g.morphologyData.a_2.SuffixNu, -1, -1, "", g.methodObject), new W(g.morphologyData.a_2.SuffixNuDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_2.SuffixNiUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_3() {
    return delete g.a_3, g.a_3 = [new W(g.morphologyData.a_3.SuffixInDotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_3.SuffixUn, -1, -1, "", g.methodObject), new W(g.morphologyData.a_3.SuffixUnDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_3.SuffixInUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_4() {
    return delete g.a_4, g.a_4 = [new W(g.morphologyData.a_4.SuffixA, -1, -1, "", g.methodObject), new W(g.morphologyData.a_4.SuffixE, -1, -1, "", g.methodObject)];
  }
  static get a_5() {
    return delete g.a_5, g.a_5 = [new W(g.morphologyData.a_5.SuffixNa, -1, -1, "", g.methodObject), new W(g.morphologyData.a_5.SuffixNe, -1, -1, "", g.methodObject)];
  }
  static get a_6() {
    return delete g.a_6, g.a_6 = [new W(g.morphologyData.a_6.SuffixDa, -1, -1, "", g.methodObject), new W(g.morphologyData.a_6.SuffixTa, -1, -1, "", g.methodObject), new W(g.morphologyData.a_6.SuffixDe, -1, -1, "", g.methodObject), new W(g.morphologyData.a_6.SuffixTe, -1, -1, "", g.methodObject)];
  }
  static get a_7() {
    return delete g.a_7, g.a_7 = [new W(g.morphologyData.a_7.SuffixNda, -1, -1, "", g.methodObject), new W(g.morphologyData.a_7.SuffixNde, -1, -1, "", g.methodObject)];
  }
  static get a_8() {
    return delete g.a_8, g.a_8 = [new W(g.morphologyData.a_8.SuffixDan, -1, -1, "", g.methodObject), new W(g.morphologyData.a_8.SuffixTan, -1, -1, "", g.methodObject), new W(g.morphologyData.a_8.SuffixDen, -1, -1, "", g.methodObject), new W(g.morphologyData.a_8.SuffixTen, -1, -1, "", g.methodObject)];
  }
  static get a_9() {
    return delete g.a_9, g.a_9 = [new W(g.morphologyData.a_9.SuffixNdan, -1, -1, "", g.methodObject), new W(g.morphologyData.a_9.SuffixNden, -1, -1, "", g.methodObject)];
  }
  static get a_10() {
    return delete g.a_10, g.a_10 = [new W(g.morphologyData.a_10.SuffixLa, -1, -1, "", g.methodObject), new W(g.morphologyData.a_10.SuffixLe, -1, -1, "", g.methodObject)];
  }
  static get a_11() {
    return delete g.a_11, g.a_11 = [new W(g.morphologyData.a_11.SuffixCa, -1, -1, "", g.methodObject), new W(g.morphologyData.a_11.SuffixCe, -1, -1, "", g.methodObject)];
  }
  static get a_12() {
    return delete g.a_12, g.a_12 = [new W(g.morphologyData.a_12.SuffixImDotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_12.SuffixUm, -1, -1, "", g.methodObject), new W(g.morphologyData.a_12.SuffixUmDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_12.SuffixImUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_13() {
    return delete g.a_13, g.a_13 = [new W(g.morphologyData.a_13.SuffixSin, -1, -1, "", g.methodObject), new W(g.morphologyData.a_13.SuffixSun, -1, -1, "", g.methodObject), new W(g.morphologyData.a_13.SuffixSunDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_13.SuffixSinUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_14() {
    return delete g.a_14, g.a_14 = [new W(g.morphologyData.a_14.SuffixIzDotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_14.SuffixUz, -1, -1, "", g.methodObject), new W(g.morphologyData.a_14.SuffixUzDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_14.SuffixIzUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_15() {
    return delete g.a_15, g.a_15 = [new W(g.morphologyData.a_15.SuffixSiniz, -1, -1, "", g.methodObject), new W(g.morphologyData.a_15.SuffixSunuz, -1, -1, "", g.methodObject), new W(g.morphologyData.a_15.SuffixSunuzDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_15.SuffixSinizUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_16() {
    return delete g.a_16, g.a_16 = [new W(g.morphologyData.a_16.SuffixLar, -1, -1, "", g.methodObject), new W(g.morphologyData.a_16.SuffixLer, -1, -1, "", g.methodObject)];
  }
  static get a_17() {
    return delete g.a_17, g.a_17 = [new W(g.morphologyData.a_17.SuffixNiz, -1, -1, "", g.methodObject), new W(g.morphologyData.a_17.SuffixNuz, -1, -1, "", g.methodObject), new W(g.morphologyData.a_17.SuffixNuzDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_17.SuffixNizUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_18() {
    return delete g.a_18, g.a_18 = [new W(g.morphologyData.a_18.SuffixDir, -1, -1, "", g.methodObject), new W(g.morphologyData.a_18.SuffixTir, -1, -1, "", g.methodObject), new W(g.morphologyData.a_18.SuffixDur, -1, -1, "", g.methodObject), new W(g.morphologyData.a_18.SuffixTur, -1, -1, "", g.methodObject), new W(g.morphologyData.a_18.SuffixDurDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_18.SuffixTurDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_18.SuffixDirUndotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_18.SuffixTirUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_19() {
    return delete g.a_19, g.a_19 = [new W(g.morphologyData.a_19.SuffixCasinaUndotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_19.SuffixCesine, -1, -1, "", g.methodObject)];
  }
  static get a_20() {
    return delete g.a_20, g.a_20 = [new W(g.morphologyData.a_20.SuffixDi, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTi, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDik, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTik, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDuk, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTuk, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDukDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTukDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDikUndotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTikUndotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDim, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTim, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDum, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTum, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDumDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTumDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDimUndotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTimUndotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDin, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTin, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDun, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTun, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDunDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTunDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDinUndotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTinUndotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDu, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTu, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDuDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTuDieresis, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixDiUndotted, -1, -1, "", g.methodObject), new W(g.morphologyData.a_20.SuffixTiUndotted, -1, -1, "", g.methodObject)];
  }
  static get a_21() {
    return delete g.a_21, g.a_21 = [new W(g.morphologyData.a_21.SuffixSa, -1, -1, "", g.methodObject), new W(g.morphologyData.a_21.SuffixSe, -1, -1, "", g.methodObject), new W(g.morphologyData.a_21.SuffixSak, -1, -1, "", g.methodObject), new W(g.morphologyData.a_21.SuffixSek, -1, -1, "", g.methodObject), new W(g.morphologyData.a_21.SuffixSam, -1, -1, "", g.methodObject), new W(g.morphologyData.a_21.SuffixSem, -1, -1, "", g.methodObject), new W(g.morphologyData.a_21.SuffixSan, -1, -1, "", g.methodObject), new W(g.morphologyData.a_21.SuffixSen, -1, -1, "", g.methodObject)];
  }
  static get a_22() {
    return delete g.a_22, g.a_22 = [new W(g.morphologyData.a_22.SuffixMisCedilla, -1, -1, "", g.methodObject), new W(g.morphologyData.a_22.SuffixMusCedilla, -1, -1, "", g.methodObject), new W(g.morphologyData.a_22.SuffixMusDieresisCedilla, -1, -1, "", g.methodObject), new W(g.morphologyData.a_22.SuffixMisUndottedCedilla, -1, -1, "", g.methodObject)];
  }
  static get a_23() {
    return delete g.a_23, g.a_23 = [new W(g.morphologyData.a_23.SuffixB, -1, 1, "", g.methodObject), new W(g.morphologyData.a_23.SuffixC, -1, 2, "", g.methodObject), new W(g.morphologyData.a_23.SuffixD, -1, 3, "", g.methodObject), new W(g.morphologyData.a_23.SuffixGSoft, -1, 4, "", g.methodObject)];
  }
  static get g_vowel() {
    return delete g.g_vowel, g.g_vowel = [17, 65, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 8, 0, 0, 0, 0, 0, 0, 1];
  }
  static get g_U() {
    return delete g.g_U, g.g_U = [1, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 1];
  }
  static get g_vowel1() {
    return delete g.g_vowel1, g.g_vowel1 = [1, 64, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];
  }
  static get g_vowel2() {
    return delete g.g_vowel2, g.g_vowel2 = [17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130];
  }
  static get g_vowel3() {
    return delete g.g_vowel3, g.g_vowel3 = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1];
  }
  static get g_vowel4() {
    return delete g.g_vowel4, g.g_vowel4 = [17];
  }
  static get g_vowel5() {
    return delete g.g_vowel5, g.g_vowel5 = [65];
  }
  static get g_vowel6() {
    return delete g.g_vowel6, g.g_vowel6 = [65];
  }
  get B_continue_stemming_noun_suffixes() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$B_continue_stemming_noun_suffixes") ? this._$esjava$B_continue_stemming_noun_suffixes : this._$esjava$B_continue_stemming_noun_suffixes = !1;
  }
  set B_continue_stemming_noun_suffixes(e) {
    this._$esjava$B_continue_stemming_noun_suffixes = e;
  }
  get I_strlen() {
    return Object.prototype.hasOwnProperty.call(this, "_$esjava$I_strlen") ? this._$esjava$I_strlen : this._$esjava$I_strlen = 0;
  }
  set I_strlen(e) {
    this._$esjava$I_strlen = e;
  }
  r_check_vowel_harmony$esjava$0() {
    let e, t, i, n, r, s, o, d, c, p, m;
    e = this.limit - this.cursor;
    i: for (; ; ) {
      t = this.limit - this.cursor;
      a: do {
        if (!this.in_grouping_b$esjava$3(g.g_vowel, 97, 305))
          break a;
        this.cursor = this.limit - t;
        break i;
      } while (!1);
      if (this.cursor = this.limit - t, this.cursor <= this.limit_backward)
        return !1;
      this.cursor--;
    }
    i: do {
      i = this.limit - this.cursor;
      a: do {
        if (!this.eq_s_b$esjava$2(1, "a"))
          break a;
        e: for (; ; ) {
          n = this.limit - this.cursor;
          t: do {
            if (!this.in_grouping_b$esjava$3(g.g_vowel1, 97, 305))
              break t;
            this.cursor = this.limit - n;
            break e;
          } while (!1);
          if (this.cursor = this.limit - n, this.cursor <= this.limit_backward)
            break a;
          this.cursor--;
        }
        break i;
      } while (!1);
      this.cursor = this.limit - i;
      a: do {
        if (!this.eq_s_b$esjava$2(1, "e"))
          break a;
        e: for (; ; ) {
          r = this.limit - this.cursor;
          t: do {
            if (!this.in_grouping_b$esjava$3(g.g_vowel2, 101, 252))
              break t;
            this.cursor = this.limit - r;
            break e;
          } while (!1);
          if (this.cursor = this.limit - r, this.cursor <= this.limit_backward)
            break a;
          this.cursor--;
        }
        break i;
      } while (!1);
      this.cursor = this.limit - i;
      a: do {
        if (!this.eq_s_b$esjava$2(1, "ı"))
          break a;
        e: for (; ; ) {
          s = this.limit - this.cursor;
          t: do {
            if (!this.in_grouping_b$esjava$3(g.g_vowel3, 97, 305))
              break t;
            this.cursor = this.limit - s;
            break e;
          } while (!1);
          if (this.cursor = this.limit - s, this.cursor <= this.limit_backward)
            break a;
          this.cursor--;
        }
        break i;
      } while (!1);
      this.cursor = this.limit - i;
      a: do {
        if (!this.eq_s_b$esjava$2(1, "i"))
          break a;
        e: for (; ; ) {
          o = this.limit - this.cursor;
          t: do {
            if (!this.in_grouping_b$esjava$3(g.g_vowel4, 101, 105))
              break t;
            this.cursor = this.limit - o;
            break e;
          } while (!1);
          if (this.cursor = this.limit - o, this.cursor <= this.limit_backward)
            break a;
          this.cursor--;
        }
        break i;
      } while (!1);
      this.cursor = this.limit - i;
      a: do {
        if (!this.eq_s_b$esjava$2(1, "o"))
          break a;
        e: for (; ; ) {
          d = this.limit - this.cursor;
          t: do {
            if (!this.in_grouping_b$esjava$3(g.g_vowel5, 111, 117))
              break t;
            this.cursor = this.limit - d;
            break e;
          } while (!1);
          if (this.cursor = this.limit - d, this.cursor <= this.limit_backward)
            break a;
          this.cursor--;
        }
        break i;
      } while (!1);
      this.cursor = this.limit - i;
      a: do {
        if (!this.eq_s_b$esjava$2(1, "ö"))
          break a;
        e: for (; ; ) {
          c = this.limit - this.cursor;
          t: do {
            if (!this.in_grouping_b$esjava$3(g.g_vowel6, 246, 252))
              break t;
            this.cursor = this.limit - c;
            break e;
          } while (!1);
          if (this.cursor = this.limit - c, this.cursor <= this.limit_backward)
            break a;
          this.cursor--;
        }
        break i;
      } while (!1);
      this.cursor = this.limit - i;
      a: do {
        if (!this.eq_s_b$esjava$2(1, "u"))
          break a;
        e: for (; ; ) {
          p = this.limit - this.cursor;
          t: do {
            if (!this.in_grouping_b$esjava$3(g.g_vowel5, 111, 117))
              break t;
            this.cursor = this.limit - p;
            break e;
          } while (!1);
          if (this.cursor = this.limit - p, this.cursor <= this.limit_backward)
            break a;
          this.cursor--;
        }
        break i;
      } while (!1);
      if (this.cursor = this.limit - i, !this.eq_s_b$esjava$2(1, "ü"))
        return !1;
      a: for (; ; ) {
        m = this.limit - this.cursor;
        e: do {
          if (!this.in_grouping_b$esjava$3(g.g_vowel6, 246, 252))
            break e;
          this.cursor = this.limit - m;
          break a;
        } while (!1);
        if (this.cursor = this.limit - m, this.cursor <= this.limit_backward)
          return !1;
        this.cursor--;
      }
    } while (!1);
    return this.cursor = this.limit - e, !0;
  }
  r_mark_suffix_with_optional_n_consonant$esjava$0() {
    let e, t, i, n, r, s, o;
    i: do {
      e = this.limit - this.cursor;
      a: do {
        if (t = this.limit - this.cursor, !this.eq_s_b$esjava$2(1, "n") || (this.cursor = this.limit - t, this.cursor <= this.limit_backward) || (this.cursor--, i = this.limit - this.cursor, !this.in_grouping_b$esjava$3(g.g_vowel, 97, 305)))
          break a;
        this.cursor = this.limit - i;
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      {
        n = this.limit - this.cursor;
        a: do {
          if (r = this.limit - this.cursor, !this.eq_s_b$esjava$2(1, "n"))
            break a;
          return this.cursor = this.limit - r, !1;
        } while (!1);
        this.cursor = this.limit - n;
      }
      if (s = this.limit - this.cursor, this.cursor <= this.limit_backward || (this.cursor--, o = this.limit - this.cursor, !this.in_grouping_b$esjava$3(g.g_vowel, 97, 305)))
        return !1;
      this.cursor = this.limit - o, this.cursor = this.limit - s;
    } while (!1);
    return !0;
  }
  r_mark_suffix_with_optional_s_consonant$esjava$0() {
    let e, t, i, n, r, s, o;
    i: do {
      e = this.limit - this.cursor;
      a: do {
        if (t = this.limit - this.cursor, !this.eq_s_b$esjava$2(1, "s") || (this.cursor = this.limit - t, this.cursor <= this.limit_backward) || (this.cursor--, i = this.limit - this.cursor, !this.in_grouping_b$esjava$3(g.g_vowel, 97, 305)))
          break a;
        this.cursor = this.limit - i;
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      {
        n = this.limit - this.cursor;
        a: do {
          if (r = this.limit - this.cursor, !this.eq_s_b$esjava$2(1, "s"))
            break a;
          return this.cursor = this.limit - r, !1;
        } while (!1);
        this.cursor = this.limit - n;
      }
      if (s = this.limit - this.cursor, this.cursor <= this.limit_backward || (this.cursor--, o = this.limit - this.cursor, !this.in_grouping_b$esjava$3(g.g_vowel, 97, 305)))
        return !1;
      this.cursor = this.limit - o, this.cursor = this.limit - s;
    } while (!1);
    return !0;
  }
  r_mark_suffix_with_optional_y_consonant$esjava$0() {
    let e, t, i, n, r, s, o;
    i: do {
      e = this.limit - this.cursor;
      a: do {
        if (t = this.limit - this.cursor, !this.eq_s_b$esjava$2(1, "y") || (this.cursor = this.limit - t, this.cursor <= this.limit_backward) || (this.cursor--, i = this.limit - this.cursor, !this.in_grouping_b$esjava$3(g.g_vowel, 97, 305)))
          break a;
        this.cursor = this.limit - i;
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      {
        n = this.limit - this.cursor;
        a: do {
          if (r = this.limit - this.cursor, !this.eq_s_b$esjava$2(1, "y"))
            break a;
          return this.cursor = this.limit - r, !1;
        } while (!1);
        this.cursor = this.limit - n;
      }
      if (s = this.limit - this.cursor, this.cursor <= this.limit_backward || (this.cursor--, o = this.limit - this.cursor, !this.in_grouping_b$esjava$3(g.g_vowel, 97, 305)))
        return !1;
      this.cursor = this.limit - o, this.cursor = this.limit - s;
    } while (!1);
    return !0;
  }
  r_mark_suffix_with_optional_U_vowel$esjava$0() {
    let e, t, i, n, r, s, o;
    i: do {
      e = this.limit - this.cursor;
      a: do {
        if (t = this.limit - this.cursor, !this.in_grouping_b$esjava$3(g.g_U, 105, 305) || (this.cursor = this.limit - t, this.cursor <= this.limit_backward) || (this.cursor--, i = this.limit - this.cursor, !this.out_grouping_b$esjava$3(g.g_vowel, 97, 305)))
          break a;
        this.cursor = this.limit - i;
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      {
        n = this.limit - this.cursor;
        a: do {
          if (r = this.limit - this.cursor, !this.in_grouping_b$esjava$3(g.g_U, 105, 305))
            break a;
          return this.cursor = this.limit - r, !1;
        } while (!1);
        this.cursor = this.limit - n;
      }
      if (s = this.limit - this.cursor, this.cursor <= this.limit_backward || (this.cursor--, o = this.limit - this.cursor, !this.out_grouping_b$esjava$3(g.g_vowel, 97, 305)))
        return !1;
      this.cursor = this.limit - o, this.cursor = this.limit - s;
    } while (!1);
    return !0;
  }
  r_mark_possessives$esjava$0() {
    return !(this.find_among_b$esjava$2(g.a_0, 10) === 0 || !this.r_mark_suffix_with_optional_U_vowel$esjava$0());
  }
  r_mark_sU$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || !this.in_grouping_b$esjava$3(g.g_U, 105, 305) || !this.r_mark_suffix_with_optional_s_consonant$esjava$0());
  }
  r_mark_lArI$esjava$0() {
    return this.find_among_b$esjava$2(g.a_1, 2) !== 0;
  }
  r_mark_yU$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || !this.in_grouping_b$esjava$3(g.g_U, 105, 305) || !this.r_mark_suffix_with_optional_y_consonant$esjava$0());
  }
  r_mark_nU$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_2, 4) === 0);
  }
  r_mark_nUn$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_3, 4) === 0 || !this.r_mark_suffix_with_optional_n_consonant$esjava$0());
  }
  r_mark_yA$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_4, 2) === 0 || !this.r_mark_suffix_with_optional_y_consonant$esjava$0());
  }
  r_mark_nA$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_5, 2) === 0);
  }
  r_mark_DA$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_6, 4) === 0);
  }
  r_mark_ndA$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_7, 2) === 0);
  }
  r_mark_DAn$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_8, 4) === 0);
  }
  r_mark_ndAn$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_9, 2) === 0);
  }
  r_mark_ylA$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_10, 2) === 0 || !this.r_mark_suffix_with_optional_y_consonant$esjava$0());
  }
  r_mark_ki$esjava$0() {
    return !!this.eq_s_b$esjava$2(2, "ki");
  }
  r_mark_ncA$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_11, 2) === 0 || !this.r_mark_suffix_with_optional_n_consonant$esjava$0());
  }
  r_mark_yUm$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_12, 4) === 0 || !this.r_mark_suffix_with_optional_y_consonant$esjava$0());
  }
  r_mark_sUn$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_13, 4) === 0);
  }
  r_mark_yUz$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_14, 4) === 0 || !this.r_mark_suffix_with_optional_y_consonant$esjava$0());
  }
  r_mark_sUnUz$esjava$0() {
    return this.find_among_b$esjava$2(g.a_15, 4) !== 0;
  }
  r_mark_lAr$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_16, 2) === 0);
  }
  r_mark_nUz$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_17, 4) === 0);
  }
  r_mark_DUr$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_18, 8) === 0);
  }
  r_mark_cAsInA$esjava$0() {
    return this.find_among_b$esjava$2(g.a_19, 2) !== 0;
  }
  r_mark_yDU$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_20, 32) === 0 || !this.r_mark_suffix_with_optional_y_consonant$esjava$0());
  }
  r_mark_ysA$esjava$0() {
    return !(this.find_among_b$esjava$2(g.a_21, 8) === 0 || !this.r_mark_suffix_with_optional_y_consonant$esjava$0());
  }
  r_mark_ymUs_$esjava$0() {
    return !(!this.r_check_vowel_harmony$esjava$0() || this.find_among_b$esjava$2(g.a_22, 4) === 0 || !this.r_mark_suffix_with_optional_y_consonant$esjava$0());
  }
  r_mark_yken$esjava$0() {
    return !(!this.eq_s_b$esjava$2(3, "ken") || !this.r_mark_suffix_with_optional_y_consonant$esjava$0());
  }
  r_stem_nominal_verb_suffixes$esjava$0() {
    let e, t, i, n, r, s, o, d, c, p;
    this.ket = this.cursor, this.B_continue_stemming_noun_suffixes = !0;
    i: do {
      e = this.limit - this.cursor;
      a: do {
        e: do {
          t = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_ymUs_$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - t;
          t: do {
            if (!this.r_mark_yDU$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - t;
          t: do {
            if (!this.r_mark_ysA$esjava$0())
              break t;
            break e;
          } while (!1);
          if (this.cursor = this.limit - t, !this.r_mark_yken$esjava$0())
            break a;
        } while (!1);
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        if (!this.r_mark_cAsInA$esjava$0())
          break a;
        e: do {
          i = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_sUnUz$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - i;
          t: do {
            if (!this.r_mark_lAr$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - i;
          t: do {
            if (!this.r_mark_yUm$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - i;
          t: do {
            if (!this.r_mark_sUn$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - i;
          t: do {
            if (!this.r_mark_yUz$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - i;
        } while (!1);
        if (!this.r_mark_ymUs_$esjava$0())
          break a;
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        if (!this.r_mark_lAr$esjava$0())
          break a;
        this.bra = this.cursor, this.slice_del$esjava$0(), n = this.limit - this.cursor;
        e: do {
          this.ket = this.cursor;
          t: do {
            r = this.limit - this.cursor;
            n: do {
              if (!this.r_mark_DUr$esjava$0())
                break n;
              break t;
            } while (!1);
            this.cursor = this.limit - r;
            n: do {
              if (!this.r_mark_yDU$esjava$0())
                break n;
              break t;
            } while (!1);
            this.cursor = this.limit - r;
            n: do {
              if (!this.r_mark_ysA$esjava$0())
                break n;
              break t;
            } while (!1);
            if (this.cursor = this.limit - r, !this.r_mark_ymUs_$esjava$0()) {
              this.cursor = this.limit - n;
              break e;
            }
          } while (!1);
        } while (!1);
        this.B_continue_stemming_noun_suffixes = !1;
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        if (!this.r_mark_nUz$esjava$0())
          break a;
        e: do {
          s = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_yDU$esjava$0())
              break t;
            break e;
          } while (!1);
          if (this.cursor = this.limit - s, !this.r_mark_ysA$esjava$0())
            break a;
        } while (!1);
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        e: do {
          o = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_sUnUz$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - o;
          t: do {
            if (!this.r_mark_yUz$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - o;
          t: do {
            if (!this.r_mark_sUn$esjava$0())
              break t;
            break e;
          } while (!1);
          if (this.cursor = this.limit - o, !this.r_mark_yUm$esjava$0())
            break a;
        } while (!1);
        this.bra = this.cursor, this.slice_del$esjava$0(), d = this.limit - this.cursor;
        e: do
          if (this.ket = this.cursor, !this.r_mark_ymUs_$esjava$0()) {
            this.cursor = this.limit - d;
            break e;
          }
        while (!1);
        break i;
      } while (!1);
      if (this.cursor = this.limit - e, !this.r_mark_DUr$esjava$0())
        return !1;
      this.bra = this.cursor, this.slice_del$esjava$0(), c = this.limit - this.cursor;
      a: do {
        this.ket = this.cursor;
        e: do {
          p = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_sUnUz$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - p;
          t: do {
            if (!this.r_mark_lAr$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - p;
          t: do {
            if (!this.r_mark_yUm$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - p;
          t: do {
            if (!this.r_mark_sUn$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - p;
          t: do {
            if (!this.r_mark_yUz$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - p;
        } while (!1);
        if (!this.r_mark_ymUs_$esjava$0()) {
          this.cursor = this.limit - c;
          break a;
        }
      } while (!1);
    } while (!1);
    return this.bra = this.cursor, this.slice_del$esjava$0(), !0;
  }
  r_stem_suffix_chain_before_ki$esjava$0() {
    let e, t, i, n, r, s, o, d, c, p, m;
    if (this.ket = this.cursor, !this.r_mark_ki$esjava$0())
      return !1;
    i: do {
      e = this.limit - this.cursor;
      a: do {
        if (!this.r_mark_DA$esjava$0())
          break a;
        this.bra = this.cursor, this.slice_del$esjava$0(), t = this.limit - this.cursor;
        e: do {
          this.ket = this.cursor;
          t: do {
            i = this.limit - this.cursor;
            n: do {
              if (!this.r_mark_lAr$esjava$0())
                break n;
              this.bra = this.cursor, this.slice_del$esjava$0(), n = this.limit - this.cursor;
              r: do
                if (!this.r_stem_suffix_chain_before_ki$esjava$0()) {
                  this.cursor = this.limit - n;
                  break r;
                }
              while (!1);
              break t;
            } while (!1);
            if (this.cursor = this.limit - i, !this.r_mark_possessives$esjava$0()) {
              this.cursor = this.limit - t;
              break e;
            }
            this.bra = this.cursor, this.slice_del$esjava$0(), r = this.limit - this.cursor;
            n: do {
              if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
                this.cursor = this.limit - r;
                break n;
              }
              if (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()) {
                this.cursor = this.limit - r;
                break n;
              }
            } while (!1);
          } while (!1);
        } while (!1);
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        if (!this.r_mark_nUn$esjava$0())
          break a;
        this.bra = this.cursor, this.slice_del$esjava$0(), s = this.limit - this.cursor;
        e: do {
          this.ket = this.cursor;
          t: do {
            o = this.limit - this.cursor;
            n: do {
              if (!this.r_mark_lArI$esjava$0())
                break n;
              this.bra = this.cursor, this.slice_del$esjava$0();
              break t;
            } while (!1);
            this.cursor = this.limit - o;
            n: do {
              this.ket = this.cursor;
              r: do {
                d = this.limit - this.cursor;
                s: do {
                  if (!this.r_mark_possessives$esjava$0())
                    break s;
                  break r;
                } while (!1);
                if (this.cursor = this.limit - d, !this.r_mark_sU$esjava$0())
                  break n;
              } while (!1);
              this.bra = this.cursor, this.slice_del$esjava$0(), c = this.limit - this.cursor;
              r: do {
                if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
                  this.cursor = this.limit - c;
                  break r;
                }
                if (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()) {
                  this.cursor = this.limit - c;
                  break r;
                }
              } while (!1);
              break t;
            } while (!1);
            if (this.cursor = this.limit - o, !this.r_stem_suffix_chain_before_ki$esjava$0()) {
              this.cursor = this.limit - s;
              break e;
            }
          } while (!1);
        } while (!1);
        break i;
      } while (!1);
      if (this.cursor = this.limit - e, !this.r_mark_ndA$esjava$0())
        return !1;
      a: do {
        p = this.limit - this.cursor;
        e: do {
          if (!this.r_mark_lArI$esjava$0())
            break e;
          this.bra = this.cursor, this.slice_del$esjava$0();
          break a;
        } while (!1);
        this.cursor = this.limit - p;
        e: do {
          if (!this.r_mark_sU$esjava$0())
            break e;
          this.bra = this.cursor, this.slice_del$esjava$0(), m = this.limit - this.cursor;
          t: do {
            if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
              this.cursor = this.limit - m;
              break t;
            }
            if (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()) {
              this.cursor = this.limit - m;
              break t;
            }
          } while (!1);
          break a;
        } while (!1);
        if (this.cursor = this.limit - p, !this.r_stem_suffix_chain_before_ki$esjava$0())
          return !1;
      } while (!1);
    } while (!1);
    return !0;
  }
  r_stem_noun_suffixes$esjava$0() {
    let e, t, i, n, r, s, o, d, c, p, m, w, v, $, P, h, z, b, _, S, A, L, R, E, N, D, H;
    i: do {
      e = this.limit - this.cursor;
      a: do {
        if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0())
          break a;
        this.bra = this.cursor, this.slice_del$esjava$0(), t = this.limit - this.cursor;
        e: do
          if (!this.r_stem_suffix_chain_before_ki$esjava$0()) {
            this.cursor = this.limit - t;
            break e;
          }
        while (!1);
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        if (this.ket = this.cursor, !this.r_mark_ncA$esjava$0())
          break a;
        this.bra = this.cursor, this.slice_del$esjava$0(), i = this.limit - this.cursor;
        e: do
          t: do {
            n = this.limit - this.cursor;
            n: do {
              if (this.ket = this.cursor, !this.r_mark_lArI$esjava$0())
                break n;
              this.bra = this.cursor, this.slice_del$esjava$0();
              break t;
            } while (!1);
            this.cursor = this.limit - n;
            n: do {
              this.ket = this.cursor;
              r: do {
                r = this.limit - this.cursor;
                s: do {
                  if (!this.r_mark_possessives$esjava$0())
                    break s;
                  break r;
                } while (!1);
                if (this.cursor = this.limit - r, !this.r_mark_sU$esjava$0())
                  break n;
              } while (!1);
              this.bra = this.cursor, this.slice_del$esjava$0(), s = this.limit - this.cursor;
              r: do {
                if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
                  this.cursor = this.limit - s;
                  break r;
                }
                if (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()) {
                  this.cursor = this.limit - s;
                  break r;
                }
              } while (!1);
              break t;
            } while (!1);
            if (this.cursor = this.limit - n, this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
              this.cursor = this.limit - i;
              break e;
            }
            if (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()) {
              this.cursor = this.limit - i;
              break e;
            }
          } while (!1);
        while (!1);
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        this.ket = this.cursor;
        e: do {
          o = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_ndA$esjava$0())
              break t;
            break e;
          } while (!1);
          if (this.cursor = this.limit - o, !this.r_mark_nA$esjava$0())
            break a;
        } while (!1);
        e: do {
          d = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_lArI$esjava$0())
              break t;
            this.bra = this.cursor, this.slice_del$esjava$0();
            break e;
          } while (!1);
          this.cursor = this.limit - d;
          t: do {
            if (!this.r_mark_sU$esjava$0())
              break t;
            this.bra = this.cursor, this.slice_del$esjava$0(), c = this.limit - this.cursor;
            n: do {
              if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
                this.cursor = this.limit - c;
                break n;
              }
              if (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()) {
                this.cursor = this.limit - c;
                break n;
              }
            } while (!1);
            break e;
          } while (!1);
          if (this.cursor = this.limit - d, !this.r_stem_suffix_chain_before_ki$esjava$0())
            break a;
        } while (!1);
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        this.ket = this.cursor;
        e: do {
          p = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_ndAn$esjava$0())
              break t;
            break e;
          } while (!1);
          if (this.cursor = this.limit - p, !this.r_mark_nU$esjava$0())
            break a;
        } while (!1);
        e: do {
          m = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_sU$esjava$0())
              break t;
            this.bra = this.cursor, this.slice_del$esjava$0(), w = this.limit - this.cursor;
            n: do {
              if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
                this.cursor = this.limit - w;
                break n;
              }
              if (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()) {
                this.cursor = this.limit - w;
                break n;
              }
            } while (!1);
            break e;
          } while (!1);
          if (this.cursor = this.limit - m, !this.r_mark_lArI$esjava$0())
            break a;
        } while (!1);
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        if (this.ket = this.cursor, !this.r_mark_DAn$esjava$0())
          break a;
        this.bra = this.cursor, this.slice_del$esjava$0(), v = this.limit - this.cursor;
        e: do {
          this.ket = this.cursor;
          t: do {
            $ = this.limit - this.cursor;
            n: do {
              if (!this.r_mark_possessives$esjava$0())
                break n;
              this.bra = this.cursor, this.slice_del$esjava$0(), P = this.limit - this.cursor;
              r: do {
                if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
                  this.cursor = this.limit - P;
                  break r;
                }
                if (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()) {
                  this.cursor = this.limit - P;
                  break r;
                }
              } while (!1);
              break t;
            } while (!1);
            this.cursor = this.limit - $;
            n: do {
              if (!this.r_mark_lAr$esjava$0())
                break n;
              this.bra = this.cursor, this.slice_del$esjava$0(), h = this.limit - this.cursor;
              r: do
                if (!this.r_stem_suffix_chain_before_ki$esjava$0()) {
                  this.cursor = this.limit - h;
                  break r;
                }
              while (!1);
              break t;
            } while (!1);
            if (this.cursor = this.limit - $, !this.r_stem_suffix_chain_before_ki$esjava$0()) {
              this.cursor = this.limit - v;
              break e;
            }
          } while (!1);
        } while (!1);
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        this.ket = this.cursor;
        e: do {
          z = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_nUn$esjava$0())
              break t;
            break e;
          } while (!1);
          if (this.cursor = this.limit - z, !this.r_mark_ylA$esjava$0())
            break a;
        } while (!1);
        this.bra = this.cursor, this.slice_del$esjava$0(), b = this.limit - this.cursor;
        e: do
          t: do {
            _ = this.limit - this.cursor;
            n: do {
              if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0() || (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()))
                break n;
              break t;
            } while (!1);
            this.cursor = this.limit - _;
            n: do {
              this.ket = this.cursor;
              r: do {
                S = this.limit - this.cursor;
                s: do {
                  if (!this.r_mark_possessives$esjava$0())
                    break s;
                  break r;
                } while (!1);
                if (this.cursor = this.limit - S, !this.r_mark_sU$esjava$0())
                  break n;
              } while (!1);
              this.bra = this.cursor, this.slice_del$esjava$0(), A = this.limit - this.cursor;
              r: do {
                if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
                  this.cursor = this.limit - A;
                  break r;
                }
                if (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()) {
                  this.cursor = this.limit - A;
                  break r;
                }
              } while (!1);
              break t;
            } while (!1);
            if (this.cursor = this.limit - _, !this.r_stem_suffix_chain_before_ki$esjava$0()) {
              this.cursor = this.limit - b;
              break e;
            }
          } while (!1);
        while (!1);
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        if (this.ket = this.cursor, !this.r_mark_lArI$esjava$0())
          break a;
        this.bra = this.cursor, this.slice_del$esjava$0();
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        if (!this.r_stem_suffix_chain_before_ki$esjava$0())
          break a;
        break i;
      } while (!1);
      this.cursor = this.limit - e;
      a: do {
        this.ket = this.cursor;
        e: do {
          L = this.limit - this.cursor;
          t: do {
            if (!this.r_mark_DA$esjava$0())
              break t;
            break e;
          } while (!1);
          this.cursor = this.limit - L;
          t: do {
            if (!this.r_mark_yU$esjava$0())
              break t;
            break e;
          } while (!1);
          if (this.cursor = this.limit - L, !this.r_mark_yA$esjava$0())
            break a;
        } while (!1);
        this.bra = this.cursor, this.slice_del$esjava$0(), R = this.limit - this.cursor;
        e: do {
          this.ket = this.cursor;
          t: do {
            E = this.limit - this.cursor;
            n: do {
              if (!this.r_mark_possessives$esjava$0())
                break n;
              this.bra = this.cursor, this.slice_del$esjava$0(), N = this.limit - this.cursor;
              r: do
                if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
                  this.cursor = this.limit - N;
                  break r;
                }
              while (!1);
              break t;
            } while (!1);
            if (this.cursor = this.limit - E, !this.r_mark_lAr$esjava$0()) {
              this.cursor = this.limit - R;
              break e;
            }
          } while (!1);
          if (this.bra = this.cursor, this.slice_del$esjava$0(), this.ket = this.cursor, !this.r_stem_suffix_chain_before_ki$esjava$0()) {
            this.cursor = this.limit - R;
            break e;
          }
        } while (!1);
        break i;
      } while (!1);
      this.cursor = this.limit - e, this.ket = this.cursor;
      a: do {
        D = this.limit - this.cursor;
        e: do {
          if (!this.r_mark_possessives$esjava$0())
            break e;
          break a;
        } while (!1);
        if (this.cursor = this.limit - D, !this.r_mark_sU$esjava$0())
          return !1;
      } while (!1);
      this.bra = this.cursor, this.slice_del$esjava$0(), H = this.limit - this.cursor;
      a: do {
        if (this.ket = this.cursor, !this.r_mark_lAr$esjava$0()) {
          this.cursor = this.limit - H;
          break a;
        }
        if (this.bra = this.cursor, this.slice_del$esjava$0(), !this.r_stem_suffix_chain_before_ki$esjava$0()) {
          this.cursor = this.limit - H;
          break a;
        }
      } while (!1);
    } while (!1);
    return !0;
  }
  r_post_process_last_consonants$esjava$0() {
    let e;
    if (this.ket = this.cursor, e = this.find_among_b$esjava$2(g.a_23, 4), e === 0)
      return !1;
    switch (this.bra = this.cursor, e) {
      case 0:
        return !1;
      case 1:
        this.slice_from$esjava$1("p");
        break;
      case 2:
        this.slice_from$esjava$1("ç");
        break;
      case 3:
        this.slice_from$esjava$1("t");
        break;
      case 4:
        this.slice_from$esjava$1("k");
        break;
    }
    return !0;
  }
  r_append_U_to_stems_ending_with_d_or_g$esjava$0() {
    let e, t, i, n, r, s, o, d, c, p, m, w, v, $, P;
    e = this.limit - this.cursor;
    i: do {
      t = this.limit - this.cursor;
      a: do {
        if (!this.eq_s_b$esjava$2(1, "d"))
          break a;
        break i;
      } while (!1);
      if (this.cursor = this.limit - t, !this.eq_s_b$esjava$2(1, "g"))
        return !1;
    } while (!1);
    this.cursor = this.limit - e;
    i: do {
      i = this.limit - this.cursor;
      a: do {
        n = this.limit - this.cursor;
        e: for (; ; ) {
          r = this.limit - this.cursor;
          t: do {
            if (!this.in_grouping_b$esjava$3(g.g_vowel, 97, 305))
              break t;
            this.cursor = this.limit - r;
            break e;
          } while (!1);
          if (this.cursor = this.limit - r, this.cursor <= this.limit_backward)
            break a;
          this.cursor--;
        }
        e: do {
          s = this.limit - this.cursor;
          t: do {
            if (!this.eq_s_b$esjava$2(1, "a"))
              break t;
            break e;
          } while (!1);
          if (this.cursor = this.limit - s, !this.eq_s_b$esjava$2(1, "ı"))
            break a;
        } while (!1);
        this.cursor = this.limit - n;
        {
          const h = this.cursor;
          this.insert$esjava$3(this.cursor, this.cursor, "ı"), this.cursor = h;
        }
        break i;
      } while (!1);
      this.cursor = this.limit - i;
      a: do {
        o = this.limit - this.cursor;
        e: for (; ; ) {
          d = this.limit - this.cursor;
          t: do {
            if (!this.in_grouping_b$esjava$3(g.g_vowel, 97, 305))
              break t;
            this.cursor = this.limit - d;
            break e;
          } while (!1);
          if (this.cursor = this.limit - d, this.cursor <= this.limit_backward)
            break a;
          this.cursor--;
        }
        e: do {
          c = this.limit - this.cursor;
          t: do {
            if (!this.eq_s_b$esjava$2(1, "e"))
              break t;
            break e;
          } while (!1);
          if (this.cursor = this.limit - c, !this.eq_s_b$esjava$2(1, "i"))
            break a;
        } while (!1);
        this.cursor = this.limit - o;
        {
          const h = this.cursor;
          this.insert$esjava$3(this.cursor, this.cursor, "i"), this.cursor = h;
        }
        break i;
      } while (!1);
      this.cursor = this.limit - i;
      a: do {
        p = this.limit - this.cursor;
        e: for (; ; ) {
          m = this.limit - this.cursor;
          t: do {
            if (!this.in_grouping_b$esjava$3(g.g_vowel, 97, 305))
              break t;
            this.cursor = this.limit - m;
            break e;
          } while (!1);
          if (this.cursor = this.limit - m, this.cursor <= this.limit_backward)
            break a;
          this.cursor--;
        }
        e: do {
          w = this.limit - this.cursor;
          t: do {
            if (!this.eq_s_b$esjava$2(1, "o"))
              break t;
            break e;
          } while (!1);
          if (this.cursor = this.limit - w, !this.eq_s_b$esjava$2(1, "u"))
            break a;
        } while (!1);
        this.cursor = this.limit - p;
        {
          const h = this.cursor;
          this.insert$esjava$3(this.cursor, this.cursor, "u"), this.cursor = h;
        }
        break i;
      } while (!1);
      this.cursor = this.limit - i, v = this.limit - this.cursor;
      a: for (; ; ) {
        $ = this.limit - this.cursor;
        e: do {
          if (!this.in_grouping_b$esjava$3(g.g_vowel, 97, 305))
            break e;
          this.cursor = this.limit - $;
          break a;
        } while (!1);
        if (this.cursor = this.limit - $, this.cursor <= this.limit_backward)
          return !1;
        this.cursor--;
      }
      a: do {
        P = this.limit - this.cursor;
        e: do {
          if (!this.eq_s_b$esjava$2(1, "ö"))
            break e;
          break a;
        } while (!1);
        if (this.cursor = this.limit - P, !this.eq_s_b$esjava$2(1, "ü"))
          return !1;
      } while (!1);
      this.cursor = this.limit - v;
      {
        const h = this.cursor;
        this.insert$esjava$3(this.cursor, this.cursor, "ü"), this.cursor = h;
      }
    } while (!1);
    return !0;
  }
  r_more_than_one_syllable_word$esjava$0() {
    let e, t;
    e = this.cursor;
    {
      let i = 2;
      i: for (; ; ) {
        t = this.cursor;
        a: do {
          e: for (; ; ) {
            t: do {
              if (!this.in_grouping$esjava$3(g.g_vowel, 97, 305))
                break t;
              break e;
            } while (!1);
            if (this.cursor >= this.limit)
              break a;
            this.cursor++;
          }
          i--;
          continue i;
        } while (!1);
        this.cursor = t;
        break i;
      }
      if (i > 0)
        return !1;
    }
    return this.cursor = e, !0;
  }
  r_is_reserved_word$esjava$0() {
    let e, t, i;
    i: do {
      e = this.cursor;
      a: do {
        t = this.cursor;
        e: for (; ; ) {
          t: do {
            if (!this.eq_s$esjava$2(2, "ad"))
              break t;
            break e;
          } while (!1);
          if (this.cursor >= this.limit)
            break a;
          this.cursor++;
        }
        if (this.I_strlen = 2, this.I_strlen !== this.limit)
          break a;
        this.cursor = t;
        break i;
      } while (!1);
      this.cursor = e, i = this.cursor;
      a: for (; ; ) {
        e: do {
          if (!this.eq_s$esjava$2(5, "soyad"))
            break e;
          break a;
        } while (!1);
        if (this.cursor >= this.limit)
          return !1;
        this.cursor++;
      }
      if (this.I_strlen = 5, this.I_strlen !== this.limit)
        return !1;
      this.cursor = i;
    } while (!1);
    return !0;
  }
  r_postlude$esjava$0() {
    let e, t, i;
    {
      e = this.cursor;
      i: do {
        if (!this.r_is_reserved_word$esjava$0())
          break i;
        return !1;
      } while (!1);
      this.cursor = e;
    }
    this.limit_backward = this.cursor, this.cursor = this.limit, t = this.limit - this.cursor;
    i: do
      if (!this.r_append_U_to_stems_ending_with_d_or_g$esjava$0())
        break i;
    while (!1);
    this.cursor = this.limit - t, i = this.limit - this.cursor;
    i: do
      if (!this.r_post_process_last_consonants$esjava$0())
        break i;
    while (!1);
    return this.cursor = this.limit - i, this.cursor = this.limit_backward, !0;
  }
  stem$esjava$0() {
    let e, t;
    if (!this.r_more_than_one_syllable_word$esjava$0())
      return !1;
    this.limit_backward = this.cursor, this.cursor = this.limit, e = this.limit - this.cursor;
    i: do
      if (!this.r_stem_nominal_verb_suffixes$esjava$0())
        break i;
    while (!1);
    if (this.cursor = this.limit - e, !this.B_continue_stemming_noun_suffixes)
      return !1;
    t = this.limit - this.cursor;
    i: do
      if (!this.r_stem_noun_suffixes$esjava$0())
        break i;
    while (!1);
    return this.cursor = this.limit - t, this.cursor = this.limit_backward, !!this.r_postlude$esjava$0();
  }
  stem(...e) {
    switch (e.length) {
      case 0:
        return this.stem$esjava$0(...e);
    }
    return super.stem(...e);
  }
}
Rh.default = g;
Object.defineProperty(Th, "__esModule", {
  value: !0
});
Th.default = Ada;
var $da = Rh, jda = xda($da);
function xda(a) {
  return a && a.__esModule ? a : { default: a };
}
function Ada(a, e) {
  a = a.toLowerCase();
  const t = new jda.default(e);
  return t.setCurrent(a), t.stem(), t.getCurrent();
}
Object.defineProperty(lu, "__esModule", {
  value: !0
});
lu.default = function() {
  return {
    en: Eda.determineStem,
    de: Sda.determineStem,
    nl: qda.determineStem,
    es: Tda.default,
    fr: Oda.default,
    ru: Cda.default,
    it: Ida.default,
    pt: Fda.default,
    id: Bda.default,
    pl: Uda.default,
    ar: Vda.default,
    sv: Gda.default,
    hu: Zda.default,
    he: Jda.default,
    nb: ala.default,
    tr: tla.default
  };
};
var Eda = rr, Sda = oh, qda = ch, Pda = fh, Tda = pt(Pda), Rda = hh, Oda = pt(Rda), Mda = bh, Cda = pt(Mda), Lda = vh, Ida = pt(Lda), Wda = kh, Fda = pt(Wda), Dda = _h, Bda = pt(Dda), Nda = $h, Uda = pt(Nda), Hda = jh, Vda = pt(Hda), Kda = Eh, Gda = pt(Kda), Yda = Sh, Zda = pt(Yda), Xda = qh, Jda = pt(Xda), Qda = Ph, ala = pt(Qda), ela = Th, tla = pt(ela);
function pt(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(du, "__esModule", {
  value: !0
});
du.default = function() {
  return Object.keys((0, nla.default)());
};
var ila = lu, nla = rla(ila);
function rla(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(Mi, "__esModule", {
  value: !0
});
var sla = I, ola = rh, RS = dr(ola), dla = Ga, lla = dr(dla), cla = Ya, ula = dr(cla), pla = du, mla = dr(pla), gla = za, zla = dr(gla), cz = Ae, OS = va, fla = ou, yla = dr(fla), wla = ut, hla = dr(wla);
function dr(a) {
  return a && a.__esModule ? a : { default: a };
}
class bla extends lla.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   *
   * If word forms are not available:
   * @param {number} [config.parameters.noWordForms.overMaximum] The percentage of keyphrase instances in the text that
   * is way over the maximum.
   * @param {number} [config.parameters.noWordForms.maximum] The maximum percentage of keyphrase instances in the text.
   * @param {number} [config.parameters.noWordForms.minimum] The minimum percentage of keyphrase instances in the text.
   *
   * If word forms are available:
   * @param {number} [config.parameters.multipleWordForms.overMaximum] The percentage of keyphrase instances in the text that
   * is way over the maximum.
   * @param {number} [config.parameters.multipleWordForms.maximum] The maximum percentage of keyphrase instances in the text.
   * @param {number} [config.parameters.multipleWordForms.minimum] The minimum percentage of keyphrase instances in the text.
   *
   * @param {number} [config.scores.wayOverMaximum] The score to return if there are way too many instances of keyphrase in the text.
   * @param {number} [config.scores.overMaximum] The score to return if there are too many instances of keyphrase in the text.
   * @param {number} [config.scores.correctDensity] The score to return if there is a good number of keyphrase instances in the text.
   * @param {number} [config.scores.underMinimum] The score to return if there is not enough keyphrase instances in the text.
   *
   * @param {string} [config.url] The URL to the relevant KB article.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      parameters: {
        noWordForms: {
          overMaximum: 4,
          maximum: 3,
          minimum: 0.5
        },
        multipleWordForms: {
          overMaximum: 4,
          maximum: 3.5,
          minimum: 0.5
        }
      },
      scores: {
        wayOverMaximum: -50,
        overMaximum: -10,
        correctDensity: 9,
        underMinimum: 4
      },
      urlTitle: (0, OS.createAnchorOpeningTag)("https://yoa.st/33v"),
      urlCallToAction: (0, OS.createAnchorOpeningTag)("https://yoa.st/33w")
    };
    this.identifier = "keywordDensity", this._config = (0, sla.merge)(t, e);
  }
  /**
   * Determines correct boundaries depending on the availability
   * of morphological forms.
   *
   * @param {string} text The paper text.
   * @param {number} keyphraseLength The length of the keyphrase in words.
   *
   * @returns {void}
   */
  setBoundaries(e, t) {
    this._hasMorphologicalForms ? this._boundaries = this._config.parameters.multipleWordForms : this._boundaries = this._config.parameters.noWordForms, this._minRecommendedKeywordCount = (0, RS.default)(e, t, this._boundaries.minimum, "min"), this._maxRecommendedKeywordCount = (0, RS.default)(e, t, this._boundaries.maximum, "max");
  }
  /**
   * Runs the keyphrase density module, based on this returns an assessment
   * result with score.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling the
   *                                research.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {AssessmentResult} The result of the assessment.
   */
  getResult(e, t, i) {
    this._hasMorphologicalForms = t.getData("morphology") !== !1 && (0, mla.default)().includes((0, ula.default)(e.getLocale())), this._keywordCount = t.getResearch("keywordCount");
    const n = this._keywordCount.length;
    this.setBoundaries(e.getText(), n);
    const r = new zla.default();
    this._keywordDensity = t.getResearch("getKeywordDensity"), this._keywordDensity = this._keywordDensity * (0, yla.default)(n);
    const s = this.calculateResult(i);
    return r.setScore(s.score), r.setText(s.resultText), r.setHasMarks(this._keywordCount.count > 0), r;
  }
  /**
   * Checks whether there are no keyphrase matches in the text.
   *
   * @returns {boolean} Returns true if the keyphrase count is 0.
   */
  hasNoMatches() {
    return this._keywordCount.count === 0;
  }
  /**
   * Checks whether there are too few keyphrase matches in the text.
   *
   * @returns {boolean} Returns true if the rounded keyword density is between 0 and the recommended minimum
   * or if there there is only 1 keyword match (regardless of the density).
   */
  hasTooFewMatches() {
    return (0, cz.inRangeStartInclusive)(this._keywordDensity, 0, this._boundaries.minimum) || this._keywordCount.count === 1;
  }
  /**
   * Checks whether there is a good number of keyphrase matches in the text.
   *
   * @returns {boolean} Returns true if the rounded keyword density is between the recommended minimum
   * and the recommended maximum or if the keyword count is 2 and the recommended minimum is lower than 2.
   */
  hasGoodNumberOfMatches() {
    return (0, cz.inRangeStartEndInclusive)(this._keywordDensity, this._boundaries.minimum, this._boundaries.maximum) || this._keywordCount.count === 2 && this._minRecommendedKeywordCount <= 2;
  }
  /**
   * Checks whether the number of keyphrase matches in the text is between the
   * recommended maximum and the specified overMaximum value.
   *
   * @returns {boolean} Returns true if the rounded keyphrase density is between
   *                    the recommended maximum and the specified overMaximum
   *                    value.
   */
  hasTooManyMatches() {
    return (0, cz.inRangeEndInclusive)(this._keywordDensity, this._boundaries.maximum, this._boundaries.overMaximum);
  }
  /**
   * Returns the score for the keyphrase density.
   *
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {Object} The object with calculated score and resultText.
   */
  calculateResult(e) {
    return this.hasNoMatches() ? {
      score: this._config.scores.underMinimum,
      resultText: e.sprintf(
        /* Translators:
        %1$s and %4$s expand to links to Yoast.com,
        %2$s expands to the anchor end tag,
        %3$d expands to the recommended minimal number of times the keyphrase should occur in the text. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase density%2$s: The focus keyphrase was found 0 times. That's less than the recommended minimum of %3$d times for a text of this length. %4$sFocus on your keyphrase%2$s!"),
        this._config.urlTitle,
        "</a>",
        this._minRecommendedKeywordCount,
        this._config.urlCallToAction
      )
    } : this.hasTooFewMatches() ? {
      score: this._config.scores.underMinimum,
      resultText: e.sprintf(
        /* Translators:
        %1$s and %4$s expand to links to Yoast.com,
        %2$s expands to the anchor end tag,
        %3$d expands to the recommended minimal number of times the keyphrase should occur in the text,
        %5$d expands to the number of times the keyphrase occurred in the text. */
        e.dngettext("js-text-analysis", "%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d time. That's less than the recommended minimum of %3$d times for a text of this length. %4$sFocus on your keyphrase%2$s!", "%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d times. That's less than the recommended minimum of %3$d times for a text of this length. %4$sFocus on your keyphrase%2$s!", this._keywordCount.count),
        this._config.urlTitle,
        "</a>",
        this._minRecommendedKeywordCount,
        this._config.urlCallToAction,
        this._keywordCount.count
      )
    } : this.hasGoodNumberOfMatches() ? {
      score: this._config.scores.correctDensity,
      resultText: e.sprintf(
        /* Translators:
        %1$s expands to a link to Yoast.com,
        %2$s expands to the anchor end tag,
        %3$d expands to the number of times the keyphrase occurred in the text. */
        e.dngettext("js-text-analysis", "%1$sKeyphrase density%2$s: The focus keyphrase was found %3$d time. This is great!", "%1$sKeyphrase density%2$s: The focus keyphrase was found %3$d times. This is great!", this._keywordCount.count),
        this._config.urlTitle,
        "</a>",
        this._keywordCount.count
      )
    } : this.hasTooManyMatches() ? {
      score: this._config.scores.overMaximum,
      resultText: e.sprintf(
        /* Translators:
        %1$s and %4$s expand to links to Yoast.com,
        %2$s expands to the anchor end tag,
        %3$d expands to the recommended maximal number of times the keyphrase should occur in the text,
        %5$d expands to the number of times the keyphrase occurred in the text. */
        e.dngettext("js-text-analysis", "%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d time. That's more than the recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!", "%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d times. That's more than the recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!", this._keywordCount.count),
        this._config.urlTitle,
        "</a>",
        this._maxRecommendedKeywordCount,
        this._config.urlCallToAction,
        this._keywordCount.count
      )
    } : {
      score: this._config.scores.wayOverMaximum,
      resultText: e.sprintf(
        /* Translators:
        %1$s and %4$s expand to links to Yoast.com,
        %2$s expands to the anchor end tag,
        %3$d expands to the recommended maximal number of times the keyphrase should occur in the text,
        %5$d expands to the number of times the keyphrase occurred in the text. */
        e.dngettext("js-text-analysis", "%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d time. That's way more than the recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!", "%1$sKeyphrase density%2$s: The focus keyphrase was found %5$d times. That's way more than the recommended maximum of %3$d times for a text of this length. %4$sDon't overoptimize%2$s!", this._keywordCount.count),
        this._config.urlTitle,
        "</a>",
        this._maxRecommendedKeywordCount,
        this._config.urlCallToAction,
        this._keywordCount.count
      )
    };
  }
  /**
   * Marks keywords in the text for the keyword density assessment.
   *
   * @returns {Array<Mark>} Marks that should be applied.
   */
  getMarks() {
    return this._keywordCount.markings;
  }
  /**
   * Checks whether the paper has a text with at least 100 words and a keyword
   * is set.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True if applicable.
   */
  isApplicable(e) {
    return e.hasText() && e.hasKeyword() && (0, hla.default)(e.getText()) >= 100;
  }
}
Mi.default = bla;
var Oh = {};
Object.defineProperty(Oh, "__esModule", {
  value: !0
});
var vla = gn, kla = mW(vla), MS = va, _la = za, $la = mW(_la);
function mW(a) {
  return a && a.__esModule ? a : { default: a };
}
const jla = ["en"];
var xla = function(e, t) {
  return e > 0 ? {
    score: 0,
    text: t.dngettext(
      "js-text-analysis",
      /* Translators: %1$s and %2$s open links to Yoast articles, %3$s is the anchor end tag */
      "%1$sStopwords%3$s: The keyphrase contains stop words. This may or may not be wise depending on the circumstances. %2$sLearn more about stop words%3$s."
    )
  } : {};
};
const Ala = function(e, t, i) {
  var n = t.getResearch("stopWordsInKeyword"), r = xla(n.length, i), s = new $la.default();
  return s.setScore(r.score), s.setText(i.sprintf(r.text, (0, MS.createAnchorOpeningTag)("https://yoa.st/34b"), (0, MS.createAnchorOpeningTag)("https://yoa.st/34c"), "</a>", n.length)), s;
}, Ela = function(e) {
  const t = (0, kla.default)(e.getLocale(), jla);
  return e.hasKeyword() && t;
};
Oh.default = {
  identifier: "keywordStopWords",
  getResult: Ala,
  isApplicable: Ela
};
var Ci = {};
Object.defineProperty(Ci, "__esModule", {
  value: !0
});
var Sla = I, qla = Ga, Pla = gW(qla), CS = va, Tla = za, Rla = gW(Tla);
function gW(a) {
  return a && a.__esModule ? a : { default: a };
}
class Ola extends Pla.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   * @param {number} [config.parameters.recommendedMinimum] The recommended minimum of keyword occurrences in the meta description.
   * @param {number} [config.scores.good] The score to return if there are enough keyword occurrences in the meta description.
   * @param {number} [config.scores.bad] The score to return if there aren't enough keyword occurrences in the meta description.
   * @param {string} [config.url] The URL to the relevant article on Yoast.com.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      parameters: {
        recommendedMinimum: 1
      },
      scores: {
        good: 9,
        ok: 6,
        bad: 3
      },
      urlTitle: (0, CS.createAnchorOpeningTag)("https://yoa.st/33k"),
      urlCallToAction: (0, CS.createAnchorOpeningTag)("https://yoa.st/33l")
    };
    this.identifier = "metaDescriptionKeyword", this._config = (0, Sla.merge)(t, e);
  }
  /**
   * Runs the metaDescriptionKeyword researcher and based on this, returns an assessment result with score.
   *
   * @param {Paper}      paper      The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Jed}        i18n       The object used for translations.
   *
   * @returns {AssessmentResult} The assessment result.
   */
  getResult(e, t, i) {
    this._keyphraseCounts = t.getResearch("metaDescriptionKeyword");
    const n = new Rla.default(), r = this.calculateResult(i);
    return n.setScore(r.score), n.setText(r.resultText), n;
  }
  /**
   * Returns the result object based on the number of keyword matches in the meta description.
   *
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {Object} Result object with score and text.
   */
  calculateResult(e) {
    return this._keyphraseCounts === 1 || this._keyphraseCounts === 2 ? {
      score: this._config.scores.good,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in meta description%2$s: Keyphrase or synonym appear in the meta description. Well done!"),
        this._config.urlTitle,
        "</a>"
      )
    } : this._keyphraseCounts >= 3 ? {
      score: this._config.scores.bad,
      resultText: e.sprintf(
        /**
         * Translators:
         * %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag,
         * %3$s expands to the number of sentences containing the keyphrase,
         * %4$s expands to a link on yoast.com, %5$s expands to the anchor end tag.
         */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in meta description%2$s: The meta description contains the keyphrase %3$s times, which is over the advised maximum of 2 times. %4$sLimit that%5$s!"),
        this._config.urlTitle,
        "</a>",
        this._keyphraseCounts,
        this._config.urlCallToAction,
        "</a>"
      )
    } : {
      score: this._config.scores.bad,
      resultText: e.sprintf(
        /**
         * Translators:
         * %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag.
         * %3$s expands to a link on yoast.com, %4$s expands to the anchor end tag.
         */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in meta description%2$s: The meta description has been specified, but it does not contain the keyphrase. %3$sFix that%4$s!"),
        this._config.urlTitle,
        "</a>",
        this._config.urlCallToAction,
        "</a>"
      )
    };
  }
  /**
   * Checks whether the paper has a keyword and a meta description.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True if the paper has a keyword and a meta description.
   */
  isApplicable(e) {
    return e.hasKeyword() && e.hasDescription();
  }
}
Ci.default = Ola;
var zs = {}, hu = {};
Object.defineProperty(hu, "__esModule", {
  value: !0
});
const Mla = {
  queue: ["wordCount", "keywordDensity", "subHeadings", "stopwords", "fleschReading", "linkCount", "imageCount", "urlKeyword", "urlLength", "metaDescriptionLength", "metaDescriptionKeyword", "pageTitleKeyword", "pageTitleLength", "firstParagraph", "urlStopwords", "keywordDoubles", "keyphraseSizeCheck"],
  stopWords: ["a", "about", "above", "after", "again", "against", "all", "am", "an", "and", "any", "are", "as", "at", "be", "because", "been", "before", "being", "below", "between", "both", "but", "by", "could", "did", "do", "does", "doing", "down", "during", "each", "few", "for", "from", "further", "had", "has", "have", "having", "he", "he'd", "he'll", "he's", "her", "here", "here's", "hers", "herself", "him", "himself", "his", "how", "how's", "i", "i'd", "i'll", "i'm", "i've", "if", "in", "into", "is", "it", "it's", "its", "itself", "let's", "me", "more", "most", "my", "myself", "nor", "of", "on", "once", "only", "or", "other", "ought", "our", "ours", "ourselves", "out", "over", "own", "same", "she", "she'd", "she'll", "she's", "should", "so", "some", "such", "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's", "these", "they", "they'd", "they'll", "they're", "they've", "this", "those", "through", "to", "too", "under", "until", "up", "very", "was", "we", "we'd", "we'll", "we're", "we've", "were", "what", "what's", "when", "when's", "where", "where's", "which", "while", "who", "who's", "whom", "why", "why's", "with", "would", "you", "you'd", "you'll", "you're", "you've", "your", "yours", "yourself", "yourselves"],
  wordsToRemove: [" a", " in", " an", " on", " for", " the", " and"],
  maxSlugLength: 20,
  maxUrlLength: 40,
  maxMeta: 156
};
hu.default = Mla;
Object.defineProperty(zs, "__esModule", {
  value: !0
});
var Cla = I, Lla = Ga, Ila = Mh(Lla), Wla = hu, Fla = Mh(Wla), LS = va, Dla = za, Bla = Mh(Dla);
function Mh(a) {
  return a && a.__esModule ? a : { default: a };
}
const Nla = Fla.default.maxMeta;
class Ula extends Ila.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      recommendedMaximumLength: 120,
      maximumLength: Nla,
      scores: {
        noMetaDescription: 1,
        tooLong: 6,
        tooShort: 6,
        correctLength: 9
      },
      urlTitle: (0, LS.createAnchorOpeningTag)("https://yoa.st/34d"),
      urlCallToAction: (0, LS.createAnchorOpeningTag)("https://yoa.st/34e")
    };
    this.identifier = "metaDescriptionLength", this._config = (0, Cla.merge)(t, e);
  }
  /**
   * Returns the maximum length.
   *
   * @returns {number} The maximum length.
   */
  getMaximumLength() {
    return this._config.maximumLength;
  }
  /**
   * Runs the metaDescriptionLength module, based on this returns an assessment result with score.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Jed} i18n The object used for translations
   *
   * @returns {AssessmentResult} The assessment result.
   */
  getResult(e, t, i) {
    const n = t.getResearch("metaDescriptionLength"), r = new Bla.default();
    return r.setScore(this.calculateScore(n)), r.setText(this.translateScore(n, i)), r.max = this._config.maximumLength, r.actual = n, r;
  }
  /**
   * Returns the score for the descriptionLength.
   *
   * @param {number} descriptionLength The length of the metadescription.
   *
   * @returns {number} The calculated score.
   */
  calculateScore(e) {
    return e === 0 ? this._config.scores.noMetaDescription : e <= this._config.recommendedMaximumLength ? this._config.scores.tooShort : e > this._config.maximumLength ? this._config.scores.tooLong : e >= this._config.recommendedMaximumLength && e <= this._config.maximumLength ? this._config.scores.correctLength : 0;
  }
  /**
   * Translates the descriptionLength to a message the user can understand.
   *
   * @param {number} descriptionLength The length of the metadescription.
   * @param {object} i18n The object used for translations.
   *
   * @returns {string} The translated string.
   */
  translateScore(e, t) {
    if (e === 0)
      return t.sprintf(
        /* Translators:  %1$s and %2$s expand to a links on yoast.com, %3$s expands to the anchor end tag */
        t.dgettext("js-text-analysis", "%1$sMeta description length%3$s:  No meta description has been specified. Search engines will display copy from the page instead. %2$sMake sure to write one%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      );
    if (e <= this._config.recommendedMaximumLength)
      return t.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag,
        %4$d expands to the number of characters in the meta description, %5$d expands to
        the total available number of characters in the meta description */
        t.dgettext("js-text-analysis", "%1$sMeta description length%3$s: The meta description is too short (under %4$d characters). Up to %5$d characters are available. %2$sUse the space%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>",
        this._config.recommendedMaximumLength,
        this._config.maximumLength
      );
    if (e > this._config.maximumLength)
      return t.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag,
        %4$d expands to	the total available number of characters in the meta description */
        t.dgettext("js-text-analysis", "%1$sMeta description length%3$s: The meta description is over %4$d characters. To ensure the entire description will be visible, %2$syou should reduce the length%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>",
        this._config.maximumLength
      );
    if (e >= this._config.recommendedMaximumLength && e <= this._config.maximumLength)
      return t.sprintf(
        /* Translators:  %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
        t.dgettext("js-text-analysis", "%1$sMeta description length%2$s: Well done!"),
        this._config.urlTitle,
        "</a>"
      );
  }
}
zs.default = Ula;
var nd = {};
Object.defineProperty(nd, "__esModule", {
  value: !0
});
var IS = I, Hla = Ga, Vla = zW(Hla), WS = va, Kla = za, Gla = zW(Kla);
function zW(a) {
  return a && a.__esModule ? a : { default: a };
}
class Yla extends Vla.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      scores: {
        noLinks: 3,
        allNofollowed: 7,
        someNoFollowed: 8,
        allFollowed: 9
      },
      urlTitle: (0, WS.createAnchorOpeningTag)("https://yoa.st/34f"),
      urlCallToAction: (0, WS.createAnchorOpeningTag)("https://yoa.st/34g")
    };
    this.identifier = "externalLinks", this._config = (0, IS.merge)(t, e);
  }
  /**
   * Runs the getLinkStatistics module, based on this returns an assessment result with score.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Jed} i18n The object used for translations
   *
   * @returns {AssessmentResult} The assessment result.
   */
  getResult(e, t, i) {
    const n = t.getResearch("getLinkStatistics"), r = new Gla.default();
    return (0, IS.isEmpty)(n) || (r.setScore(this.calculateScore(n)), r.setText(this.translateScore(n, i))), r;
  }
  /**
   * Checks whether paper has text.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True when there is text.
   */
  isApplicable(e) {
    return e.hasText();
  }
  /**
   * Returns a score based on the linkStatistics object.
   *
   * @param {object} linkStatistics The object with all link statistics.
   *
   * @returns {number|null} The calculated score.
   */
  calculateScore(e) {
    return e.externalTotal === 0 ? this._config.scores.noLinks : e.externalNofollow === e.externalTotal ? this._config.scores.allNofollowed : e.externalDofollow < e.externalTotal ? this._config.scores.someNoFollowed : e.externalDofollow === e.externalTotal ? this._config.scores.allFollowed : null;
  }
  /**
   * Translates the score to a message the user can understand.
   *
   * @param {Object} linkStatistics The object with all link statistics.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {string} The translated string.
   */
  translateScore(e, t) {
    return e.externalTotal === 0 ? t.sprintf(
      /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sOutbound links%3$s: No outbound links appear in this page. %2$sAdd some%3$s!"),
      this._config.urlTitle,
      this._config.urlCallToAction,
      "</a>"
    ) : e.externalNofollow === e.externalTotal ? t.sprintf(
      /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sOutbound links%3$s: All outbound links on this page are nofollowed. %2$sAdd some normal links%3$s."),
      this._config.urlTitle,
      this._config.urlCallToAction,
      "</a>"
    ) : e.externalDofollow === e.externalTotal ? t.sprintf(
      /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sOutbound links%2$s: Good job!"),
      this._config.urlTitle,
      "</a>"
    ) : e.externalDofollow < e.externalTotal ? t.sprintf(
      /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sOutbound links%2$s: There are both nofollowed and normal outbound links on this page. Good job!"),
      this._config.urlTitle,
      "</a>"
    ) : "";
  }
}
nd.default = Yla;
var fs = {};
Object.defineProperty(fs, "__esModule", {
  value: !0
});
var Zla = I, Xla = Ga, Jla = fW(Xla), Qd = Ae, FS = va, Qla = za, aca = fW(Qla);
function fW(a) {
  return a && a.__esModule ? a : { default: a };
}
const DS = 600;
class eca extends Jla.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      minLength: 400,
      maxLength: DS,
      scores: {
        noTitle: 1,
        widthTooShort: 6,
        widthTooLong: 3,
        widthCorrect: 9
      },
      urlTitle: (0, FS.createAnchorOpeningTag)("https://yoa.st/34h"),
      urlCallToAction: (0, FS.createAnchorOpeningTag)("https://yoa.st/34i")
    };
    this.identifier = "titleWidth", this._config = (0, Zla.merge)(t, e);
  }
  /**
   * Returns the maximum length.
   *
   * @returns {number} The maximum length.
   */
  getMaximumLength() {
    return DS;
  }
  /**
   * Runs the pageTitleWidth module, based on this returns an assessment result with score.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Jed} i18n The object used for translations
   *
   * @returns {AssessmentResult} The assessment result.
   */
  getResult(e, t, i) {
    const n = t.getResearch("pageTitleWidth"), r = new aca.default();
    return r.setScore(this.calculateScore(n)), r.setText(this.translateScore(n, i)), r.max = this._config.maxLength, r.actual = n, r;
  }
  /**
   * Returns the score for the pageTitleWidth
   *
   * @param {number} pageTitleWidth The width of the pageTitle.
   *
   * @returns {number} The calculated score.
   */
  calculateScore(e) {
    return (0, Qd.inRangeEndInclusive)(e, 1, 400) ? this._config.scores.widthTooShort : (0, Qd.inRangeEndInclusive)(e, this._config.minLength, this._config.maxLength) ? this._config.scores.widthCorrect : e > this._config.maxLength ? this._config.scores.widthTooLong : this._config.scores.noTitle;
  }
  /**
   * Translates the pageTitleWidth score to a message the user can understand.
   *
   * @param {number} pageTitleWidth The width of the pageTitle.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {string} The translated string.
   */
  translateScore(e, t) {
    return (0, Qd.inRangeEndInclusive)(e, 1, 400) ? t.sprintf(
      /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sSEO title width%3$s: The SEO title is too short. %2$sUse the space to add keyphrase variations or create compelling call-to-action copy%3$s."),
      this._config.urlTitle,
      this._config.urlCallToAction,
      "</a>"
    ) : (0, Qd.inRangeEndInclusive)(e, this._config.minLength, this._config.maxLength) ? t.sprintf(
      /* Translators:  %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sSEO title width%2$s: Good job!"),
      this._config.urlTitle,
      "</a>"
    ) : e > this._config.maxLength ? t.sprintf(
      /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sSEO title width%3$s: The SEO title is wider than the viewable limit. %2$sTry to make it shorter%3$s."),
      this._config.urlTitle,
      this._config.urlCallToAction,
      "</a>"
    ) : t.sprintf(
      /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sSEO title width%3$s: %2$sPlease create an SEO title%3$s."),
      this._config.urlTitle,
      this._config.urlCallToAction,
      "</a>"
    );
  }
}
fs.default = eca;
var ys = {};
Object.defineProperty(ys, "__esModule", {
  value: !0
});
var uz = I, tca = Ga, ica = bu(tca), BS = va, nca = Pi, rca = bu(nca), sca = za, oca = bu(sca), dca = ct, lca = bu(dca);
function bu(a) {
  return a && a.__esModule ? a : { default: a };
}
class cca extends ica.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} config The configuration to use.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      scores: {
        textContainsSuperfluousH1: 1
      },
      urlTitle: (0, BS.createAnchorOpeningTag)("https://yoa.st/3a6"),
      urlCallToAction: (0, BS.createAnchorOpeningTag)("https://yoa.st/3a7")
    };
    this.identifier = "singleH1", this._config = (0, uz.merge)(t, e);
  }
  /**
   * Runs the h1 research and based on this returns an assessment result with a score.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling the research.
   * @param {Jed} i18n The object used for translations
   *
   * @returns {AssessmentResult} The assessment result.
   */
  getResult(e, t, i) {
    this._h1s = t.getResearch("h1s");
    const n = new oca.default(), r = this.calculateResult(i);
    return (0, uz.isUndefined)(r) || (n.setScore(r.score), n.setText(r.resultText), n.setHasMarks(!0)), n;
  }
  /**
   * Checks whether an H1 is in the first position of the body.
   *
   * @returns {boolean} Returns true if there is an H1 in the first position of the body.
   */
  firstH1AtBeginning() {
    return this._h1s[0].position === 0;
  }
  /**
   * Returns the score and the feedback string for the single H1 assessment.
   *
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {Object|null} The calculated score and the feedback string.
   */
  calculateResult(e) {
    if (this._h1s.length !== 0 && !(this._h1s.length === 1 && this.firstH1AtBeginning()))
      return {
        score: this._config.scores.textContainsSuperfluousH1,
        resultText: e.sprintf(
          /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
          e.dgettext("js-text-analysis", "%1$sSingle title%3$s: H1s should only be used as your main title. Find all H1s in your text that aren't your main title and %2$schange them to a lower heading level%3$s!"),
          this._config.urlTitle,
          this._config.urlCallToAction,
          "</a>"
        )
      };
  }
  /**
   * Marks all H1s in the body of the text (except at the very beginning,
   * where they are acceptable and don't need to be changed).
   *
   * @returns {Array} Array with all the marked H1s.
   */
  getMarks() {
    const e = this._h1s;
    return this.firstH1AtBeginning() && e.shift(), (0, uz.map)(e, function(t) {
      return new lca.default({
        original: "<h1>" + t.content + "</h1>",
        marked: "<h1>" + (0, rca.default)(t.content) + "</h1>"
      });
    });
  }
  /**
   * Checks whether the paper has a text.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True when there is text.
   */
  isApplicable(e) {
    return e.hasText();
  }
}
ys.default = cca;
var rd = {};
Object.defineProperty(rd, "__esModule", {
  value: !0
});
var uca = I, pca = Ga, mca = yW(pca), NS = va, gca = Ae, zca = Mt, fca = za, yca = yW(fca);
function yW(a) {
  return a && a.__esModule ? a : { default: a };
}
class wca extends mca.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {object} config The configuration to use.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      parameters: {
        lowerBoundary: 0.3,
        upperBoundary: 0.75
      },
      scores: {
        noMatches: 3,
        tooFewMatches: 3,
        goodNumberOfMatches: 9,
        tooManyMatches: 3
      },
      urlTitle: (0, NS.createAnchorOpeningTag)("https://yoa.st/33m"),
      urlCallToAction: (0, NS.createAnchorOpeningTag)("https://yoa.st/33n")
    };
    this.identifier = "subheadingsKeyword", this._config = (0, uca.merge)(t, e);
  }
  /**
   * Runs the matchKeywordInSubheadings research and based on this returns an assessment result.
   *
   * @param {Paper} paper             The paper to use for the assessment.
   * @param {Researcher} researcher   The researcher used for calling research.
   * @param {Object} i18n             The object used for translations.
   *
   * @returns {AssessmentResult} The assessment result.
   */
  getResult(e, t, i) {
    this._subHeadings = t.getResearch("matchKeywordInSubheadings");
    const n = new yca.default();
    this._minNumberOfSubheadings = Math.ceil(this._subHeadings.count * this._config.parameters.lowerBoundary), this._maxNumberOfSubheadings = Math.floor(this._subHeadings.count * this._config.parameters.upperBoundary);
    const r = this.calculateResult(i);
    return n.setScore(r.score), n.setText(r.resultText), n;
  }
  /**
   * Checks whether the paper has a subheadings.
   *
   * @param {Paper} paper The paper to use for the check.
   *
   * @returns {boolean} True when there is at least one subheading.
   */
  hasSubheadings(e) {
    return (0, zca.getSubheadingsTopLevel)(e.getText()).length > 0;
  }
  /**
   * Checks whether the paper has a text and a keyword.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True when there is text and a keyword.
   */
  isApplicable(e) {
    return e.hasText() && e.hasKeyword() && this.hasSubheadings(e);
  }
  /**
   * Checks whether there are too few subheadings with the keyphrase.
   *
   * This is the case if the number of subheadings with the keyphrase is more than 0 but less than the specified
   * recommended minimum.
   *
   * @returns {boolean} Returns true if the keyphrase is included in too few subheadings.
   */
  hasTooFewMatches() {
    return this._subHeadings.matches > 0 && this._subHeadings.matches < this._minNumberOfSubheadings;
  }
  /**
   * Checks whether there are too many subheadings with the keyphrase.
   *
   * The upper limit is only applicable if there is more than one subheading. If there is only one subheading with
   * the keyphrase this would otherwise always lead to a 100% match rate.
   *
   * @returns {boolean} Returns true if there is more than one subheading and if the keyphrase is included in less
   *                    subheadings than the recommended maximum.
   */
  hasTooManyMatches() {
    return this._subHeadings.count > 1 && this._subHeadings.matches > this._maxNumberOfSubheadings;
  }
  /**
   * Checks whether there is only one higher-level subheading and this subheading includes the keyphrase.
   *
   * @returns {boolean} Returns true if there is exactly one higher-level subheading and this
   * subheading has a keyphrase match.
   */
  isOneOfOne() {
    return this._subHeadings.count === 1 && this._subHeadings.matches === 1;
  }
  /**
   * Checks whether there is a good number of subheadings with the keyphrase.
   *
   * This is the case if there is only one subheading and that subheading includes the keyphrase or if the number of
   * subheadings with the keyphrase is within the specified recommended range.
   *
   * @returns {boolean} Returns true if the keyphrase is included in a sufficient number of subheadings.
   */
  hasGoodNumberOfMatches() {
    return (0, gca.inRangeStartEndInclusive)(this._subHeadings.matches, this._minNumberOfSubheadings, this._maxNumberOfSubheadings);
  }
  /**
   * Determines the score and the Result text for the subheadings.
   *
   * @param {Object} i18n The object used for translations.
   *
   * @returns {Object} The object with the calculated score and the result text.
   */
  calculateResult(e) {
    return this.hasTooFewMatches() ? {
      score: this._config.scores.tooFewMatches,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to a link on yoast.com, %3$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in subheading%3$s: %2$sUse more keyphrases or synonyms in your H2 and H3 subheadings%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : this.hasTooManyMatches() ? {
      score: this._config.scores.tooManyMatches,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to a link on yoast.com, %3$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in subheading%3$s: More than 75%% of your H2 and H3 subheadings reflect the topic of your copy. That's too much. %2$sDon't over-optimize%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : this.isOneOfOne() ? {
      score: this._config.scores.goodNumberOfMatches,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag,
        %3$d expands to the number of subheadings containing the keyphrase. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in subheading%2$s: Your H2 or H3 subheading reflects the topic of your copy. Good job!", this._subHeadings.matches),
        this._config.urlTitle,
        "</a>"
      )
    } : this.hasGoodNumberOfMatches() ? {
      score: this._config.scores.goodNumberOfMatches,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag,
        %3$d expands to the number of subheadings containing the keyphrase. */
        e.dngettext("js-text-analysis", "%1$sKeyphrase in subheading%2$s: %3$s of your H2 and H3 subheadings reflects the topic of your copy. Good job!", "%1$sKeyphrase in subheading%2$s: %3$s of your H2 and H3 subheadings reflect the topic of your copy. Good job!", this._subHeadings.matches),
        this._config.urlTitle,
        "</a>",
        this._subHeadings.matches
      )
    } : {
      score: this._config.scores.noMatches,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to a link on yoast.com, %3$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in subheading%3$s: %2$sUse more keyphrases or synonyms in your H2 and H3 subheadings%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    };
  }
}
rd.default = wca;
var Ch = {};
Object.defineProperty(Ch, "__esModule", {
  value: !0
});
var hca = za, bca = vca(hca), al = I, US = va;
function vca(a) {
  return a && a.__esModule ? a : { default: a };
}
const mi = 150, kca = function(e, t) {
  const i = (0, US.createAnchorOpeningTag)("https://yoa.st/34j"), n = (0, US.createAnchorOpeningTag)("https://yoa.st/34k");
  if (e >= 150)
    return {
      score: 9,
      text: t.sprintf(t.dngettext(
        "js-text-analysis",
        /* Translators: %1$d expands to the number of words in the text,
        %2$s expands to a link on yoast.com, %3$s expands to the anchor end tag */
        "%2$sText length%3$s: The text contains %1$d word. Good job!",
        "%2$sText length%3$s: The text contains %1$d words. Good job!",
        e
      ), e, i, "</a>")
    };
  if ((0, al.inRange)(e, 125, 150))
    return {
      score: 7,
      text: t.sprintf(t.dngettext(
        "js-text-analysis",
        /* Translators: %1$d expands to the number of words in the text,
        %2$s expands to a link on yoast.com, %4$d expands to the anchor end tag. */
        "%2$sText length%4$s: The text contains %1$d word.",
        "%2$sText length%4$s: The text contains %1$d words.",
        e
      ) + " " + t.dngettext(
        "js-text-analysis",
        /* Translators: The preceding sentence is "Text length: The text contains x words.",
        %3$s expands to a link on yoast.com,
        %4$s expands to the anchor end tag,
        %5$d expands to the recommended minimum of words. */
        "This is slightly below the recommended minimum of %5$d word. %3$sAdd a bit more copy%4$s.",
        "This is slightly below the recommended minimum of %5$d words. %3$sAdd a bit more copy%4$s.",
        mi
      ), e, i, n, "</a>", mi)
    };
  if ((0, al.inRange)(e, 100, 125))
    return {
      score: 5,
      text: t.sprintf(t.dngettext(
        "js-text-analysis",
        /* Translators: %1$d expands to the number of words in the text,
        %2$s expands to a link on yoast.com, %4$s expands to the anchor end tag. */
        "%2$sText length%4$s: The text contains %1$d word.",
        "%2$sText length%4$s: The text contains %1$d words.",
        e
      ) + " " + t.dngettext(
        "js-text-analysis",
        /* Translators: The preceding sentence is "Text length: The text contains x words.",
        %3$s expands to a link on yoast.com,
        %4$s expands to the anchor end tag,
        %5$d expands to the recommended minimum of words. */
        "This is below the recommended minimum of %5$d word. %3$sAdd more content%4$s.",
        "This is below the recommended minimum of %5$d words. %3$sAdd more content%4$s.",
        mi
      ), e, i, n, "</a>", mi)
    };
  if ((0, al.inRange)(e, 50, 100))
    return {
      score: -10,
      text: t.sprintf(t.dngettext(
        "js-text-analysis",
        /* Translators: %1$d expands to the number of words in the text,
        %2$s expands to a link on yoast.com, %4$s expands to the anchor end tag. */
        "%2$sText length%4$s: The text contains %1$d word.",
        "%2$sText length%4$s: The text contains %1$d words.",
        e
      ) + " " + t.dngettext(
        "js-text-analysis",
        /* Translators: The preceding sentence is "Text length: The text contains x words.",
        %3$s expands to a link on yoast.com,
        %4$s expands to the anchor end tag,
        %5$d expands to the recommended minimum of words. */
        "This is below the recommended minimum of %5$d word. %3$sAdd more content%4$s.",
        "This is below the recommended minimum of %5$d words. %3$sAdd more content%4$s.",
        mi
      ), e, i, n, "</a>", mi)
    };
  if ((0, al.inRange)(e, 0, 50))
    return {
      score: -20,
      text: t.sprintf(t.dngettext(
        "js-text-analysis",
        /* Translators: %1$d expands to the number of words in the text,
        %2$s expands to a link on yoast.com, %4$s expands to the anchor end tag. */
        "%2$sText length%4$s: The text contains %1$d word.",
        "%2$sText length%4$s: The text contains %1$d words.",
        e
      ) + " " + t.dngettext(
        "js-text-analysis",
        /* Translators: The preceding sentence is "Text length: The text contains x words.",
        %3$s expands to a link on yoast.com,
        %4$s expands to the anchor end tag,
        %5$d expands to the recommended minimum of words. */
        "This is far below the recommended minimum of %5$d word. %3$sAdd more content%4$s.",
        "This is far below the recommended minimum of %5$d words. %3$sAdd more content%4$s.",
        mi
      ), e, i, n, "</a>", mi)
    };
}, _ca = function(e, t, i) {
  console.warn("Deprecation Warning: This assessment has been deprecated since version 1.48. Please use the TextLengthAssessment with different configuration parameters instead.");
  const n = t.getResearch("wordCountInText"), r = kca(n, i), s = new bca.default();
  return s.setScore(r.score), s.setText(i.sprintf(r.text, n, mi)), s;
};
Ch.default = {
  identifier: "taxonomyTextLength",
  getResult: _ca
};
var lr = {};
Object.defineProperty(lr, "__esModule", {
  value: !0
});
var HS = I, $ca = Ga, jca = wW($ca), VS = va, xca = za, Aca = wW(xca);
function wW(a) {
  return a && a.__esModule ? a : { default: a };
}
class Eca extends jca.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   * @param {number} [config.parameters.recommendedMaximum] The recommended maximum number of links using the same keyword as this paper.
   * @param {string} [config.scores.bad] The score to return if there are more links with the same keyword than the recommended maximum.
   * @param {string} [config.url] The URL to the relevant article on Yoast.com.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      parameters: {
        recommendedMaximum: 0
      },
      scores: {
        bad: 2
      },
      urlTitle: (0, VS.createAnchorOpeningTag)("https://yoa.st/34l"),
      urlCallToAction: (0, VS.createAnchorOpeningTag)("https://yoa.st/34m")
    };
    this.identifier = "textCompetingLinks", this._config = (0, HS.merge)(t, e);
  }
  /**
   * Runs the linkCount module, based on this returns an assessment result with score.
   *
   * @param {Paper} paper The paper to use for the assessment.
   * @param {Researcher} researcher The researcher used for calling research.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {Object} The AssessmentResult.
   */
  getResult(e, t, i) {
    const n = new Aca.default();
    this.linkCount = t.getResearch("getLinkStatistics");
    const r = this.calculateResult(i);
    return (0, HS.isUndefined)(r) || (n.setScore(r.score), n.setText(r.resultText), n.setHasMarks(!1)), n;
  }
  /**
   * Determines if the assessment is applicable to the paper.
   *
   * @param {Paper} paper The paper to check
   *
   * @returns {boolean} Whether the paper has text and a keyword
   */
  isApplicable(e) {
    return e.hasText() && e.hasKeyword();
  }
  /**
   * Returns a result based on the number of links.
   *
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {Object} ResultObject with score and text.
   */
  calculateResult(e) {
    if (this.linkCount.keyword.totalKeyword > this._config.parameters.recommendedMaximum)
      return {
        score: this._config.scores.bad,
        resultText: e.sprintf(
          /* Translators:  %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
          e.dgettext("js-text-analysis", "%1$sLink keyphrase%3$s: You're linking to another page with the words you want this page to rank for. %2$sDon't do that%3$s!"),
          this._config.urlTitle,
          this._config.urlCallToAction,
          "</a>"
        )
      };
  }
}
lr.default = Eca;
var cr = {};
Object.defineProperty(cr, "__esModule", {
  value: !0
});
var Sca = I, qca = Ga, Pca = hW(qca), KS = Ae, GS = va, Tca = za, Rca = hW(Tca);
function hW(a) {
  return a && a.__esModule ? a : { default: a };
}
class Oca extends Pca.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {object} config The configuration to use.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      parameters: {
        lowerBoundary: 0.3,
        upperBoundary: 0.75
      },
      scores: {
        noImages: 3,
        withAltGoodNumberOfKeywordMatches: 9,
        withAltTooFewKeywordMatches: 6,
        withAltTooManyKeywordMatches: 6,
        withAltNonKeyword: 6,
        withAlt: 6,
        noAlt: 6
      },
      urlTitle: (0, GS.createAnchorOpeningTag)("https://yoa.st/33c"),
      urlCallToAction: (0, GS.createAnchorOpeningTag)("https://yoa.st/33d")
    };
    this.identifier = "textImages", this._config = (0, Sca.merge)(t, e);
  }
  /**
   * Execute the Assessment and return a result.
   *
   * @param {Paper} paper The Paper object to assess.
   * @param {Researcher} researcher The Researcher object containing all available researches.
   * @param {Jed} i18n The locale object.
   *
   * @returns {AssessmentResult} The result of the assessment, containing both a score and a descriptive text.
   */
  getResult(e, t, i) {
    this.imageCount = t.getResearch("imageCount"), this.altProperties = t.getResearch("altTagCount"), this._minNumberOfKeywordMatches = Math.ceil(this.imageCount * this._config.parameters.lowerBoundary), this._maxNumberOfKeywordMatches = Math.floor(this.imageCount * this._config.parameters.upperBoundary);
    const n = this.calculateResult(i), r = new Rca.default();
    return r.setScore(n.score), r.setText(n.resultText), r;
  }
  /**
   * Checks whether the paper has text.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True when there is text.
   */
  isApplicable(e) {
    return e.hasText();
  }
  /**
   * Checks whether there are too few alt tags with keywords. This check is applicable when there are
   * 5 or more images.
   *
   * @returns {boolean} Returns true if there are at least 5 images and the number of alt tags
   * with keywords is under the specified recommended minimum.
   */
  hasTooFewMatches() {
    return this.imageCount > 4 && this.altProperties.withAltKeyword > 0 && this.altProperties.withAltKeyword < this._minNumberOfKeywordMatches;
  }
  /**
   * Checks whether there is a sufficient number of alt tags with keywords. There are different recommended
   * ranges for less than 5 keywords, exactly 5 keywords, and more than 5 keywords.
   *
   * @returns {boolean} Returns true if the number of alt tags with keywords is within the recommended range.
   */
  hasGoodNumberOfMatches() {
    return this.imageCount < 5 && this.altProperties.withAltKeyword > 0 || this.imageCount === 5 && (0, KS.inRangeStartEndInclusive)(this.altProperties.withAltKeyword, 2, 4) || this.imageCount > 4 && (0, KS.inRangeStartEndInclusive)(this.altProperties.withAltKeyword, this._minNumberOfKeywordMatches, this._maxNumberOfKeywordMatches);
  }
  /**
   * Checks whether there is a sufficient number of alt tags with keywords. This check is applicable when there are
   * 5 or more images.
   *
   * @returns {boolean} Returns true if there are at least 5 images and the number of alt tags with keywords
   * is within the recommended range.
   */
  hasTooManyMatches() {
    return this.imageCount > 4 && this.altProperties.withAltKeyword > this._maxNumberOfKeywordMatches;
  }
  /**
   * Calculate the result based on the current image count and current image alt-tag count.
   *
   * @param {Object} i18n The object used for translations.
   *
   * @returns {Object} The calculated result.
   */
  calculateResult(e) {
    return this.imageCount === 0 ? {
      score: this._config.scores.noImages,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sImage alt attributes%3$s: No images appear on this page. %2$sAdd some%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : this.altProperties.withAlt > 0 ? {
      score: this._config.scores.withAlt,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sImage alt attributes%3$s: Images on this page have alt attributes, but you have not set your keyphrase. %2$sFix that%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : this.altProperties.withAltNonKeyword > 0 && this.altProperties.withAltKeyword === 0 ? {
      score: this._config.scores.withAltNonKeyword,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sImage alt attributes%3$s: Images on this page do not have alt attributes that reflect the topic of your text. %2$sAdd your keyphrase or synonyms to the alt tags of relevant images%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : this.hasTooFewMatches() ? {
      score: this._config.scores.withAltTooFewKeywordMatches,
      resultText: e.sprintf(
        /* Translators: %1$d expands to the number of images containing an alt attribute with the keyword,
         * %2$d expands to the total number of images, %3$s and %4$s expand to links on yoast.com,
         * %5$s expands to the anchor end tag. */
        e.dngettext("js-text-analysis", "%3$sImage alt attributes%5$s: Out of %2$d images on this page, only %1$d has an alt attribute that reflects the topic of your text. %4$sAdd your keyphrase or synonyms to the alt tags of more relevant images%5$s!", "%3$sImage alt attributes%5$s: Out of %2$d images on this page, only %1$d have alt attributes that reflect the topic of your text. %4$sAdd your keyphrase or synonyms to the alt tags of more relevant images%5$s!", this.altProperties.withAltKeyword),
        this.altProperties.withAltKeyword,
        this.imageCount,
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : this.hasGoodNumberOfMatches() ? {
      score: this._config.scores.withAltGoodNumberOfKeywordMatches,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link on yoast.com,
         * %2$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sImage alt attributes%2$s: Good job!"),
        this._config.urlTitle,
        "</a>"
      )
    } : this.hasTooManyMatches() ? {
      score: this._config.scores.withAltTooManyKeywordMatches,
      resultText: e.sprintf(
        /* Translators: %1$d expands to the number of images containing an alt attribute with the keyword,
                        * %2$d expands to the total number of images, %3$s and %4$s expand to a link on yoast.com,
         * %5$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%3$sImage alt attributes%5$s: Out of %2$d images on this page, %1$d have alt attributes with words from your keyphrase or synonyms. That's a bit much. %4$sOnly include the keyphrase or its synonyms when it really fits the image%5$s."),
        this.altProperties.withAltKeyword,
        this.imageCount,
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : {
      score: this._config.scores.noAlt,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sImage alt attributes%3$s: Images on this page do not have alt attributes that reflect the topic of your text. %2$sAdd your keyphrase or synonyms to the alt tags of relevant images%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    };
  }
}
cr.default = Oca;
var ws = {};
Object.defineProperty(ws, "__esModule", {
  value: !0
});
var el = I, Mca = Ga, Cca = bW(Mca), YS = va, Lca = za, Ica = bW(Lca);
function bW(a) {
  return a && a.__esModule ? a : { default: a };
}
class Wca extends Cca.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      recommendedMinimum: 300,
      slightlyBelowMinimum: 250,
      belowMinimum: 200,
      veryFarBelowMinimum: 100,
      scores: {
        recommendedMinimum: 9,
        slightlyBelowMinimum: 6,
        belowMinimum: 3,
        farBelowMinimum: -10,
        veryFarBelowMinimum: -20
      },
      urlTitle: (0, YS.createAnchorOpeningTag)("https://yoa.st/34n"),
      urlCallToAction: (0, YS.createAnchorOpeningTag)("https://yoa.st/34o"),
      cornerstoneContent: !1
    };
    this.identifier = "textLength", this._config = (0, el.merge)(t, e);
  }
  /**
   * Execute the Assessment and return a result.
   *
   * @param {Paper} paper The Paper object to assess.
   * @param {Researcher} researcher The Researcher object containing all available researches.
   * @param {Jed} i18n The locale object.
   *
   * @returns {AssessmentResult} The result of the assessment, containing both a score and a descriptive text.
   */
  getResult(e, t, i) {
    const n = t.getResearch("wordCountInText"), r = new Ica.default(), s = this.calculateResult(n, i);
    return r.setScore(s.score), r.setText(s.resultText), r;
  }
  /**
   * Returns the score and the appropriate feedback string based on the current word count.
   *
   * @param {number} wordCount The amount of words to be checked against.
   * @param {Jed} i18n The locale object.
   *
   * @returns {Object} The score and the feedback string.
   */
  calculateResult(e, t) {
    if (e >= this._config.recommendedMinimum)
      return {
        score: this._config.scores.recommendedMinimum,
        resultText: t.sprintf(t.dngettext(
          "js-text-analysis",
          /* Translators: %1$d expands to the number of words in the text,
          %2$s expands to a link on yoast.com, %3$s expands to the anchor end tag */
          "%2$sText length%3$s: The text contains %1$d word. Good job!",
          "%2$sText length%3$s: The text contains %1$d words. Good job!",
          e
        ), e, this._config.urlTitle, "</a>")
      };
    if ((0, el.inRange)(e, 0, this._config.belowMinimum)) {
      let i = this._config.scores.farBelowMinimum;
      return (0, el.inRange)(e, 0, this._config.veryFarBelowMinimum) && (i = this._config.scores.veryFarBelowMinimum), {
        score: i,
        resultText: t.sprintf(t.dngettext(
          "js-text-analysis",
          /* Translators: %1$d expands to the number of words in the text,
          %2$s expands to a link on yoast.com, %4$s expands to the anchor end tag. */
          "%2$sText length%4$s: The text contains %1$d word.",
          "%2$sText length%4$s: The text contains %1$d words.",
          e
        ) + " " + t.dngettext(
          "js-text-analysis",
          /* Translators: The preceding sentence is "Text length: The text contains x words.",
          %3$s expands to a link on yoast.com,
          %4$s expands to the anchor end tag,
          %5$d expands to the recommended minimum of words. */
          "This is far below the recommended minimum of %5$d word. %3$sAdd more content%4$s.",
          "This is far below the recommended minimum of %5$d words. %3$sAdd more content%4$s.",
          this._config.recommendedMinimum
        ), e, this._config.urlTitle, this._config.urlCallToAction, "</a>", this._config.recommendedMinimum)
      };
    }
    return (0, el.inRange)(e, this._config.slightlyBelowMinimum, this._config.recommendedMinimum) ? this._config.cornerstoneContent === !1 ? {
      score: this._config.scores.slightlyBelowMinimum,
      resultText: t.sprintf(t.dngettext(
        "js-text-analysis",
        /* Translators: %1$d expands to the number of words in the text,
        %2$s expands to a link on yoast.com, %4$s expands to the anchor end tag. */
        "%2$sText length%4$s: The text contains %1$d word.",
        "%2$sText length%4$s: The text contains %1$d words.",
        e
      ) + " " + t.dngettext(
        "js-text-analysis",
        /* Translators: The preceding sentence is "Text length: The text contains x words.",
        %3$s expands to a link on yoast.com,
        %4$s expands to the anchor end tag,
        %5$d expands to the recommended minimum of words. */
        "This is slightly below the recommended minimum of %5$d word. %3$sAdd a bit more copy%4$s.",
        "This is slightly below the recommended minimum of %5$d words. %3$sAdd a bit more copy%4$s.",
        this._config.recommendedMinimum
      ), e, this._config.urlTitle, this._config.urlCallToAction, "</a>", this._config.recommendedMinimum)
    } : {
      score: this._config.scores.slightlyBelowMinimum,
      resultText: t.sprintf(t.dngettext(
        "js-text-analysis",
        /* Translators: %1$d expands to the number of words in the text,
        %2$s expands to a link on yoast.com, %4$s expands to the anchor end tag. */
        "%2$sText length%4$s: The text contains %1$d word.",
        "%2$sText length%4$s: The text contains %1$d words.",
        e
      ) + " " + t.dngettext(
        "js-text-analysis",
        /* Translators: The preceding sentence is "Text length: The text contains x words.",
        %3$s expands to a link on yoast.com,
        %4$s expands to the anchor end tag,
        %5$d expands to the recommended minimum of words. */
        "This is below the recommended minimum of %5$d word. %3$sAdd more content%4$s.",
        "This is below the recommended minimum of %5$d words. %3$sAdd more content%4$s.",
        this._config.recommendedMinimum
      ), e, this._config.urlTitle, this._config.urlCallToAction, "</a>", this._config.recommendedMinimum)
    } : {
      score: this._config.scores.belowMinimum,
      resultText: t.sprintf(t.dngettext(
        "js-text-analysis",
        /* Translators: %1$d expands to the number of words in the text,
        %2$s expands to a link on yoast.com, %4$s expands to the anchor end tag. */
        "%2$sText length%4$s: The text contains %1$d word.",
        "%2$sText length%4$s: The text contains %1$d words.",
        e
      ) + " " + t.dngettext(
        "js-text-analysis",
        /* Translators: The preceding sentence is "Text length: The text contains x words.",
        %3$s expands to a link on yoast.com,
        %4$s expands to the anchor end tag,
        %5$d expands to the recommended minimum of words. */
        "This is below the recommended minimum of %5$d word. %3$sAdd more content%4$s.",
        "This is below the recommended minimum of %5$d words. %3$sAdd more content%4$s.",
        this._config.recommendedMinimum
      ), e, this._config.urlTitle, this._config.urlCallToAction, "</a>", this._config.recommendedMinimum)
    };
  }
}
ws.default = Wca;
var hs = {};
Object.defineProperty(hs, "__esModule", {
  value: !0
});
var ZS = I, Fca = Ga, Dca = vW(Fca), XS = va, Bca = za, Nca = vW(Bca);
function vW(a) {
  return a && a.__esModule ? a : { default: a };
}
class Uca extends Dca.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   * @param {number} [config.parameters.recommendedPosition] The recommended position of the keyword within the title.
   * @param {number} [config.scores.good] The score to return if the keyword is found at the recommended position.
   * @param {number} [config.scores.okay] The score to return if the keyword is found, but not at the recommended position.
   * @param {number} [config.scores.bad] The score to return if there are fewer keyword occurrences than the recommended minimum.
   * @param {string} [config.url] The URL to the relevant article on Yoast.com.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      parameters: {
        recommendedPosition: 0
      },
      scores: {
        good: 9,
        okay: 6,
        bad: 2
      },
      urlTitle: (0, XS.createAnchorOpeningTag)("https://yoa.st/33g"),
      urlCallToAction: (0, XS.createAnchorOpeningTag)("https://yoa.st/33h")
    };
    this.identifier = "titleKeyword", this._config = (0, ZS.merge)(t, e);
  }
  /**
   * Executes the pagetitle keyword assessment and returns an assessment result.
   *
   * @param {Paper} paper The Paper object to assess.
   * @param {Researcher} researcher The Researcher object containing all available researches.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {AssessmentResult} The result of the assessment with text and score.
   */
  getResult(e, t, i) {
    this._keywordMatches = t.getResearch("findKeywordInPageTitle"), this._keyword = (0, ZS.escape)(e.getKeyword());
    const n = new Nca.default(), r = this.calculateResult(i, this._keyword);
    return n.setScore(r.score), n.setText(r.resultText), n;
  }
  /**
   * Checks whether the assessment is applicable to the paper
   *
   * @param {Paper} paper The Paper object to assess.
   *
   * @returns {boolean} Whether the paper has a keyword and a title.
   */
  isApplicable(e) {
    return e.hasKeyword() && e.hasTitle();
  }
  /**
   * Calculates the result based on whether and how the keyphrase was matched in the title. Returns GOOD result if
   * an exact match of the keyword is found in the beginning of the title. Returns OK results if all content words
   * from the keyphrase are in the title (in any form). Returns BAD otherwise.
   *
   * @param {Jed} i18n The object used for translations.
   * @param {string} keyword The keyword of the paper (to be returned in the feedback strings).
   *
   * @returns {Object} Object with score and text.
   */
  calculateResult(e, t) {
    const i = this._keywordMatches.exactMatchFound, n = this._keywordMatches.position, r = this._keywordMatches.allWordsFound, s = this._keywordMatches.exactMatchKeyphrase;
    return i === !0 ? n === 0 ? {
      score: this._config.scores.good,
      resultText: e.sprintf(
        /* Translators: %1$s expands to a link on yoast.com,
        %2$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in title%2$s: The exact match of the focus keyphrase appears at the beginning of the SEO title. Good job!"),
        this._config.urlTitle,
        "</a>"
      )
    } : {
      score: this._config.scores.okay,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to a link on yoast.com,
        %3$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in title%3$s: The exact match of the focus keyphrase appears in the SEO title, but not at the beginning. %2$sMove it to the beginning for the best results%3$s."),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : r ? {
      score: this._config.scores.okay,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to a link on yoast.com,
        %3$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in title%3$s: Does not contain the exact match. %2$sTry to write the exact match of your keyphrase in the SEO title and put it at the beginning of the title%3$s."),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : s ? {
      score: this._config.scores.bad,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to a link on yoast.com,
        %3$s expands to the anchor end tag. */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in title%3$s: Does not contain the exact match. %2$sTry to write the exact match of your keyphrase in the SEO title and put it at the beginning of the title%3$s."),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>",
        t
      )
    } : {
      score: this._config.scores.bad,
      resultText: e.sprintf(
        /* Translators: %1$s and %2$s expand to a link on yoast.com,
        %3$s expands to the anchor end tag, %4$s expands to the keyword of the article. */
        e.dgettext("js-text-analysis", '%1$sKeyphrase in title%3$s: Not all the words from your keyphrase "%4$s" appear in the SEO title. %2$sFor the best SEO results write the exact match of your keyphrase in the SEO title, and put the keyphrase at the beginning of the title%3$s.'),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>",
        t
      )
    };
  }
}
hs.default = Uca;
var bs = {};
Object.defineProperty(bs, "__esModule", {
  value: !0
});
var Hca = I, Vca = Ga, Kca = kW(Vca), JS = va, Gca = za, Yca = kW(Gca);
function kW(a) {
  return a && a.__esModule ? a : { default: a };
}
class Zca extends Kca.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} config The configuration to use.
   * @param {number} [config.scores.noKeywordInUrl] The score to return if the keyword is not in the URL.
   * @param {number} [config.scores.good] The score to return if the keyword is in the URL.
   * @param {string} [config.url] The URL to the relevant KB article.
   *
   * @returns {void}
   */
  constructor(e = {}) {
    super();
    const t = {
      scores: {
        okay: 6,
        good: 9
      },
      urlTitle: (0, JS.createAnchorOpeningTag)("https://yoa.st/33o"),
      urlCallToAction: (0, JS.createAnchorOpeningTag)("https://yoa.st/33p")
    };
    this.identifier = "urlKeyword", this._config = (0, Hca.merge)(t, e);
  }
  /**
   * Executes the Assessment and returns a result.
   *
   * @param {Paper} paper The Paper object to assess.
   * @param {Researcher} researcher The Researcher object containing all available researches.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {AssessmentResult} The result of the assessment, containing both a score and a descriptive text.
   */
  getResult(e, t, i) {
    this._keywordInURL = t.getResearch("keywordCountInUrl");
    const n = new Yca.default(), r = this.calculateResult(i);
    return n.setScore(r.score), n.setText(r.resultText), n;
  }
  /**
   * Checks whether the paper has a keyword and a url.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True when there is a keyword and an url.
   */
  isApplicable(e) {
    return e.hasKeyword() && e.hasUrl();
  }
  /**
   * Determines the score and the result text based on whether or not there's a keyword in the url.
   *
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {Object} The object with calculated score and resultText.
   */
  calculateResult(e) {
    return this._keywordInURL.keyphraseLength < 3 ? this._keywordInURL.percentWordMatches === 100 ? {
      score: this._config.scores.good,
      resultText: e.sprintf(
        /* Translators:  %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in slug%2$s: Great work!"),
        this._config.urlTitle,
        "</a>"
      )
    } : {
      score: this._config.scores.okay,
      resultText: e.sprintf(
        /* Translators:  %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in slug%3$s: (Part of) your keyphrase does not appear in the slug. %2$sChange that%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    } : this._keywordInURL.percentWordMatches > 50 ? {
      score: this._config.scores.good,
      resultText: e.sprintf(
        /* Translators:  %1$s expands to a link on yoast.com, %2$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in slug%2$s: More than half of your keyphrase appears in the slug. That's great!"),
        this._config.urlTitle,
        "</a>"
      )
    } : {
      score: this._config.scores.okay,
      resultText: e.sprintf(
        /* Translators:  %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
        e.dgettext("js-text-analysis", "%1$sKeyphrase in slug%3$s: (Part of) your keyphrase does not appear in the slug. %2$sChange that%3$s!"),
        this._config.urlTitle,
        this._config.urlCallToAction,
        "</a>"
      )
    };
  }
}
bs.default = Zca;
var Lh = {};
Object.defineProperty(Lh, "__esModule", {
  value: !0
});
var Xca = I, Jca = Ga, Qca = _W(Jca), QS = va, aua = za, eua = _W(aua);
function _W(a) {
  return a && a.__esModule ? a : { default: a };
}
class tua extends Qca.default {
  /**
   * Sets the identifier and the config.
   *
   * @param {Object} [config] The configuration to use.
   *
   * @returns {void}
   *
   * @deprecated since 1.48. We have removed it from the assessments since we do not consider it an important SEO factor anymore.
   */
  constructor(e = {}) {
    super(), console.warn("Deprecation Warning: The UrlLengthAssessment has been deprecated since version 1.48. We have removed it from the assessments since we do not consider it an important SEO factor anymore.");
    const t = {
      scores: {
        tooLong: 6
      },
      urlTitle: (0, QS.createAnchorOpeningTag)("https://yoa.st/35b"),
      urlCallToAction: (0, QS.createAnchorOpeningTag)("https://yoa.st/35c")
    };
    this.identifier = "urlLength", this._config = (0, Xca.merge)(t, e);
  }
  /**
   * Checks the length of the url.
   *
   * @param {Paper} paper The paper to run this assessment on.
   * @param {Researcher} researcher The researcher used for the assessment.
   * @param {Jed} i18n The i18n-object used for parsing translations.
   *
   * @returns {AssessmentResult} an AssessmentResult with the score and the formatted text.
   */
  getResult(e, t, i) {
    const n = t.getResearch("urlLength"), r = new eua.default();
    return r.setScore(this.calculateScore(n)), r.setText(this.translateScore(n, i)), r;
  }
  /**
   * Checks whether the paper has a url.
   *
   * @param {Paper} paper The paper to use for the assessment.
   *
   * @returns {boolean} True when there is text.
   */
  isApplicable(e) {
    return e.hasUrl();
  }
  /**
   * Calculates the score based on the url length.
   *
   * @param {boolean} urlIsTooLong True when the URL is too long.
   *
   * @returns {number|null} The calculated score.
   */
  calculateScore(e) {
    return e ? this._config.scores.tooLong : null;
  }
  /**
   * Translates the score to a message the user can understand.
   *
   * @param {boolean} urlIsTooLong True when the URL is too long.
   * @param {Jed} i18n The object used for translations.
   *
   * @returns {string} The translated string.
   */
  translateScore(e, t) {
    return e ? t.sprintf(
      /* Translators:  %1$s and %2$s expand to links on yoast.com, %3$s expands to the anchor end tag */
      t.dgettext("js-text-analysis", "%1$sSlug too long%3$s: the slug for this page is a bit long. %2$sShorten it%3$s!"),
      this._config.urlTitle,
      this._config.urlCallToAction,
      "</a>"
    ) : "";
  }
}
Lh.default = tua;
var Ih = {};
Object.defineProperty(Ih, "__esModule", {
  value: !0
});
var iua = za, nua = $W(iua), rua = gn, sua = $W(rua), aq = va;
function $W(a) {
  return a && a.__esModule ? a : { default: a };
}
const oua = ["en"], dua = function(e, t) {
  const i = (0, aq.createAnchorOpeningTag)("https://yoa.st/34p"), n = (0, aq.createAnchorOpeningTag)("https://yoa.st/34q");
  return e > 0 ? {
    score: 5,
    text: t.sprintf(
      /* Translators: %1$s and %2$s open links to an articles about stopwords, %3$s closes the links */
      t.dngettext("js-text-analysis", "%1$sSlug stopwords%3$s: The slug for this page contains a stop word. %2$sRemove it%3$s!", "%1$sSlug stopwords%3$s: The slug for this page contains stop words. %2$sRemove them%3$s!", e),
      i,
      n,
      "</a>"
    )
  } : {};
}, lua = function(e, t, i) {
  console.warn("Deprecation Warning: The UrlLengthAssessment has been deprecated since version 1.48. We have removed it from the assessments since we do not consider it an important SEO factor anymore.");
  const n = t.getResearch("stopWordsInUrl"), r = new nua.default(), s = dua(n.length, i);
  return r.setScore(s.score), r.setText(s.text), r;
}, cua = function(e) {
  return (0, sua.default)(e.getLocale(), oua);
};
Ih.default = {
  identifier: "urlStopWords",
  isApplicable: cua,
  getResult: lua
};
Object.defineProperty(nn, "__esModule", {
  value: !0
});
var jW = nn.seo = xW = nn.readability = void 0, uua = Oo, pua = Aa(uua), mua = Co, gua = Aa(mua), zua = Fo, fua = Aa(zua), yua = Bo, wua = Aa(yua), hua = Mw, bua = Aa(hua), vua = No, kua = Aa(vua), _ua = Uo, $ua = Aa(_ua), jua = Vo, xua = Aa(jua), Aua = Ko, Eua = Aa(Aua), Sua = Ww, qua = Aa(Sua), Pua = Ti, Tua = Aa(Pua), Rua = Zo, Oua = Aa(Rua), Mua = Ri, Cua = Aa(Mua), Lua = Vc, Iua = Aa(Lua), Wua = Oi, Fua = Aa(Wua), Dua = Mi, Bua = Aa(Dua), Nua = Oh, Uua = Aa(Nua), Hua = Ci, Vua = Aa(Hua), Kua = zs, Gua = Aa(Kua), Yua = nd, Zua = Aa(Yua), Xua = fs, Jua = Aa(Xua), Qua = ys, apa = Aa(Qua), epa = rd, tpa = Aa(epa), ipa = Ch, npa = Aa(ipa), rpa = lr, spa = Aa(rpa), opa = cr, dpa = Aa(opa), lpa = ws, cpa = Aa(lpa), upa = hs, ppa = Aa(upa), mpa = bs, gpa = Aa(mpa), zpa = Lh, fpa = Aa(zpa), ypa = Ih, wpa = Aa(ypa);
function Aa(a) {
  return a && a.__esModule ? a : { default: a };
}
const hpa = {
  FleschReadingEaseAssessment: pua.default,
  ParagraphTooLongAssessment: gua.default,
  PassiveVoiceAssessment: fua.default,
  SentenceBeginningsAssessment: wua.default,
  SentenceLengthInDescriptionAssessment: bua.default,
  SentenceLengthInTextAssessment: kua.default,
  SubheadingDistributionTooLongAssessment: $ua.default,
  TextPresenceAssessment: xua.default,
  TransitionWordsAssessment: Eua.default,
  WordComplexityAssessment: qua.default
}, bpa = {
  FunctionWordsInKeyphraseAssessment: Tua.default,
  InternalLinksAssessment: Oua.default,
  IntroductionKeywordAssessment: Cua.default,
  KeyphraseLengthAssessment: Fua.default,
  KeywordDensityAssessment: Bua.default,
  KeywordStopWordsAssessment: Uua.default,
  KeyphraseDistributionAssessment: Iua.default,
  MetaDescriptionKeywordAssessment: Vua.default,
  MetaDescriptionLengthAssessment: Gua.default,
  OutboundLinksAssessment: Zua.default,
  PageTitleWidthAssessment: Jua.default,
  SingleH1Assessment: apa.default,
  SubheadingsKeywordAssessment: tpa.default,
  TaxonomyTextLengthAssessment: npa.default,
  TextCompetingLinksAssessment: spa.default,
  TextImagesAssessment: dpa.default,
  TextLengthAssessment: cpa.default,
  TitleKeywordAssessment: ppa.default,
  UrlKeywordAssessment: gpa.default,
  UrlLengthAssessment: fpa.default,
  UrlStopWordsAssessment: wpa.default
};
var xW = nn.readability = hpa;
jW = nn.seo = bpa;
const vpa = /* @__PURE__ */ Xn({
  __proto__: null,
  default: nn,
  get readability() {
    return xW;
  },
  get seo() {
    return jW;
  }
}, [nn]);
var Yr = {}, Wh = {}, vs = {};
function kpa(a) {
  return a && a.__esModule && Object.prototype.hasOwnProperty.call(a, "default") ? a.default : a;
}
var AW = { exports: {} }, oe = AW.exports = {}, Ht, Vt;
function Cf() {
  throw new Error("setTimeout has not been defined");
}
function Lf() {
  throw new Error("clearTimeout has not been defined");
}
(function() {
  try {
    typeof setTimeout == "function" ? Ht = setTimeout : Ht = Cf;
  } catch {
    Ht = Cf;
  }
  try {
    typeof clearTimeout == "function" ? Vt = clearTimeout : Vt = Lf;
  } catch {
    Vt = Lf;
  }
})();
function EW(a) {
  if (Ht === setTimeout)
    return setTimeout(a, 0);
  if ((Ht === Cf || !Ht) && setTimeout)
    return Ht = setTimeout, setTimeout(a, 0);
  try {
    return Ht(a, 0);
  } catch {
    try {
      return Ht.call(null, a, 0);
    } catch {
      return Ht.call(this, a, 0);
    }
  }
}
function _pa(a) {
  if (Vt === clearTimeout)
    return clearTimeout(a);
  if ((Vt === Lf || !Vt) && clearTimeout)
    return Vt = clearTimeout, clearTimeout(a);
  try {
    return Vt(a);
  } catch {
    try {
      return Vt.call(null, a);
    } catch {
      return Vt.call(this, a);
    }
  }
}
var wi = [], Nr = !1, Nn, hl = -1;
function $pa() {
  !Nr || !Nn || (Nr = !1, Nn.length ? wi = Nn.concat(wi) : hl = -1, wi.length && SW());
}
function SW() {
  if (!Nr) {
    var a = EW($pa);
    Nr = !0;
    for (var e = wi.length; e; ) {
      for (Nn = wi, wi = []; ++hl < e; )
        Nn && Nn[hl].run();
      hl = -1, e = wi.length;
    }
    Nn = null, Nr = !1, _pa(a);
  }
}
oe.nextTick = function(a) {
  var e = new Array(arguments.length - 1);
  if (arguments.length > 1)
    for (var t = 1; t < arguments.length; t++)
      e[t - 1] = arguments[t];
  wi.push(new qW(a, e)), wi.length === 1 && !Nr && EW(SW);
};
function qW(a, e) {
  this.fun = a, this.array = e;
}
qW.prototype.run = function() {
  this.fun.apply(null, this.array);
};
oe.title = "browser";
oe.browser = !0;
oe.env = {};
oe.argv = [];
oe.version = "";
oe.versions = {};
function Li() {
}
oe.on = Li;
oe.addListener = Li;
oe.once = Li;
oe.off = Li;
oe.removeListener = Li;
oe.removeAllListeners = Li;
oe.emit = Li;
oe.prependListener = Li;
oe.prependOnceListener = Li;
oe.listeners = function(a) {
  return [];
};
oe.binding = function(a) {
  throw new Error("process.binding is not supported");
};
oe.cwd = function() {
  return "/";
};
oe.chdir = function(a) {
  throw new Error("process.chdir is not supported");
};
oe.umask = function() {
  return 0;
};
var jpa = AW.exports;
const Dt = /* @__PURE__ */ kpa(jpa);
var Pa = {}, PW = {}, TW = function() {
  if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
    return !1;
  if (typeof Symbol.iterator == "symbol")
    return !0;
  var e = {}, t = Symbol("test"), i = Object(t);
  if (typeof t == "string" || Object.prototype.toString.call(t) !== "[object Symbol]" || Object.prototype.toString.call(i) !== "[object Symbol]")
    return !1;
  var n = 42;
  e[t] = n;
  for (var r in e)
    return !1;
  if (typeof Object.keys == "function" && Object.keys(e).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(e).length !== 0)
    return !1;
  var s = Object.getOwnPropertySymbols(e);
  if (s.length !== 1 || s[0] !== t || !Object.prototype.propertyIsEnumerable.call(e, t))
    return !1;
  if (typeof Object.getOwnPropertyDescriptor == "function") {
    var o = (
      /** @type {PropertyDescriptor} */
      Object.getOwnPropertyDescriptor(e, t)
    );
    if (o.value !== n || o.enumerable !== !0)
      return !1;
  }
  return !0;
}, xpa = TW, Fh = function() {
  return xpa() && !!Symbol.toStringTag;
}, Apa = Object, Epa = Error, Spa = EvalError, qpa = RangeError, Ppa = ReferenceError, RW = SyntaxError, hn = TypeError, Tpa = URIError, Rpa = Math.abs, Opa = Math.floor, Mpa = Math.max, Cpa = Math.min, Lpa = Math.pow, Ipa = Object.getOwnPropertyDescriptor, bl = Ipa;
if (bl)
  try {
    bl([], "length");
  } catch {
    bl = null;
  }
var sd = bl, vl = Object.defineProperty || !1;
if (vl)
  try {
    vl({}, "a", { value: 1 });
  } catch {
    vl = !1;
  }
var vu = vl, pz, eq;
function Wpa() {
  if (eq) return pz;
  eq = 1;
  var a = typeof Symbol < "u" && Symbol, e = TW;
  return pz = function() {
    return typeof a != "function" || typeof Symbol != "function" || typeof a("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : e();
  }, pz;
}
var Fpa = "Function.prototype.bind called on incompatible ", Dpa = Object.prototype.toString, Bpa = Math.max, Npa = "[object Function]", tq = function(e, t) {
  for (var i = [], n = 0; n < e.length; n += 1)
    i[n] = e[n];
  for (var r = 0; r < t.length; r += 1)
    i[r + e.length] = t[r];
  return i;
}, Upa = function(e, t) {
  for (var i = [], n = t, r = 0; n < e.length; n += 1, r += 1)
    i[r] = e[n];
  return i;
}, Hpa = function(a, e) {
  for (var t = "", i = 0; i < a.length; i += 1)
    t += a[i], i + 1 < a.length && (t += e);
  return t;
}, Vpa = function(e) {
  var t = this;
  if (typeof t != "function" || Dpa.apply(t) !== Npa)
    throw new TypeError(Fpa + t);
  for (var i = Upa(arguments, 1), n, r = function() {
    if (this instanceof n) {
      var p = t.apply(
        this,
        tq(i, arguments)
      );
      return Object(p) === p ? p : this;
    }
    return t.apply(
      e,
      tq(i, arguments)
    );
  }, s = Bpa(0, t.length - i.length), o = [], d = 0; d < s; d++)
    o[d] = "$" + d;
  if (n = Function("binder", "return function (" + Hpa(o, ",") + "){ return binder.apply(this,arguments); }")(r), t.prototype) {
    var c = function() {
    };
    c.prototype = t.prototype, n.prototype = new c(), c.prototype = null;
  }
  return n;
}, Kpa = Vpa, od = Function.prototype.bind || Kpa, Dh = Function.prototype.call, Bh = Function.prototype.apply, Gpa = typeof Reflect < "u" && Reflect && Reflect.apply, Ypa = od, Zpa = Bh, Xpa = Dh, Jpa = Gpa, OW = Jpa || Ypa.call(Xpa, Zpa), Qpa = od, ama = hn, ema = Dh, tma = OW, MW = function(e) {
  if (e.length < 1 || typeof e[0] != "function")
    throw new ama("a function is required");
  return tma(Qpa, ema, e);
}, mz, iq;
function ima() {
  if (iq) return mz;
  iq = 1;
  var a = MW, e = sd, t = (
    /** @type {{ __proto__?: typeof Array.prototype }} */
    [].__proto__ === Array.prototype
  ), i = t && e && e(
    Object.prototype,
    /** @type {keyof typeof Object.prototype} */
    "__proto__"
  ), n = Object, r = n.getPrototypeOf;
  return mz = i && typeof i.get == "function" ? a([i.get]) : typeof r == "function" ? (
    /** @type {import('./get')} */
    function(o) {
      return r(o == null ? o : n(o));
    }
  ) : !1, mz;
}
var gz, nq;
function nma() {
  if (nq) return gz;
  nq = 1;
  var a = Function.prototype.call, e = Object.prototype.hasOwnProperty, t = od;
  return gz = t.call(a, e), gz;
}
var ya, CW = Apa, rma = Epa, sma = Spa, oma = qpa, dma = Ppa, Zr = RW, Ur = hn, lma = Tpa, cma = Rpa, uma = Opa, pma = Mpa, mma = Cpa, gma = Lpa, LW = Function, zz = function(a) {
  try {
    return LW('"use strict"; return (' + a + ").constructor;")();
  } catch {
  }
}, wo = sd, zma = vu, fz = function() {
  throw new Ur();
}, fma = wo ? function() {
  try {
    return arguments.callee, fz;
  } catch {
    try {
      return wo(arguments, "callee").get;
    } catch {
      return fz;
    }
  }
}() : fz, $r = Wpa()(), yma = ima(), we = typeof Reflect == "function" && Reflect.getPrototypeOf || CW.getPrototypeOf || yma, IW = Bh, dd = Dh, Mr = {}, wma = typeof Uint8Array > "u" || !we ? ya : we(Uint8Array), Hn = {
  __proto__: null,
  "%AggregateError%": typeof AggregateError > "u" ? ya : AggregateError,
  "%Array%": Array,
  "%ArrayBuffer%": typeof ArrayBuffer > "u" ? ya : ArrayBuffer,
  "%ArrayIteratorPrototype%": $r && we ? we([][Symbol.iterator]()) : ya,
  "%AsyncFromSyncIteratorPrototype%": ya,
  "%AsyncFunction%": Mr,
  "%AsyncGenerator%": Mr,
  "%AsyncGeneratorFunction%": Mr,
  "%AsyncIteratorPrototype%": Mr,
  "%Atomics%": typeof Atomics > "u" ? ya : Atomics,
  "%BigInt%": typeof BigInt > "u" ? ya : BigInt,
  "%BigInt64Array%": typeof BigInt64Array > "u" ? ya : BigInt64Array,
  "%BigUint64Array%": typeof BigUint64Array > "u" ? ya : BigUint64Array,
  "%Boolean%": Boolean,
  "%DataView%": typeof DataView > "u" ? ya : DataView,
  "%Date%": Date,
  "%decodeURI%": decodeURI,
  "%decodeURIComponent%": decodeURIComponent,
  "%encodeURI%": encodeURI,
  "%encodeURIComponent%": encodeURIComponent,
  "%Error%": rma,
  "%eval%": eval,
  // eslint-disable-line no-eval
  "%EvalError%": sma,
  "%Float32Array%": typeof Float32Array > "u" ? ya : Float32Array,
  "%Float64Array%": typeof Float64Array > "u" ? ya : Float64Array,
  "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? ya : FinalizationRegistry,
  "%Function%": LW,
  "%GeneratorFunction%": Mr,
  "%Int8Array%": typeof Int8Array > "u" ? ya : Int8Array,
  "%Int16Array%": typeof Int16Array > "u" ? ya : Int16Array,
  "%Int32Array%": typeof Int32Array > "u" ? ya : Int32Array,
  "%isFinite%": isFinite,
  "%isNaN%": isNaN,
  "%IteratorPrototype%": $r && we ? we(we([][Symbol.iterator]())) : ya,
  "%JSON%": typeof JSON == "object" ? JSON : ya,
  "%Map%": typeof Map > "u" ? ya : Map,
  "%MapIteratorPrototype%": typeof Map > "u" || !$r || !we ? ya : we((/* @__PURE__ */ new Map())[Symbol.iterator]()),
  "%Math%": Math,
  "%Number%": Number,
  "%Object%": CW,
  "%Object.getOwnPropertyDescriptor%": wo,
  "%parseFloat%": parseFloat,
  "%parseInt%": parseInt,
  "%Promise%": typeof Promise > "u" ? ya : Promise,
  "%Proxy%": typeof Proxy > "u" ? ya : Proxy,
  "%RangeError%": oma,
  "%ReferenceError%": dma,
  "%Reflect%": typeof Reflect > "u" ? ya : Reflect,
  "%RegExp%": RegExp,
  "%Set%": typeof Set > "u" ? ya : Set,
  "%SetIteratorPrototype%": typeof Set > "u" || !$r || !we ? ya : we((/* @__PURE__ */ new Set())[Symbol.iterator]()),
  "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? ya : SharedArrayBuffer,
  "%String%": String,
  "%StringIteratorPrototype%": $r && we ? we(""[Symbol.iterator]()) : ya,
  "%Symbol%": $r ? Symbol : ya,
  "%SyntaxError%": Zr,
  "%ThrowTypeError%": fma,
  "%TypedArray%": wma,
  "%TypeError%": Ur,
  "%Uint8Array%": typeof Uint8Array > "u" ? ya : Uint8Array,
  "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? ya : Uint8ClampedArray,
  "%Uint16Array%": typeof Uint16Array > "u" ? ya : Uint16Array,
  "%Uint32Array%": typeof Uint32Array > "u" ? ya : Uint32Array,
  "%URIError%": lma,
  "%WeakMap%": typeof WeakMap > "u" ? ya : WeakMap,
  "%WeakRef%": typeof WeakRef > "u" ? ya : WeakRef,
  "%WeakSet%": typeof WeakSet > "u" ? ya : WeakSet,
  "%Function.prototype.call%": dd,
  "%Function.prototype.apply%": IW,
  "%Object.defineProperty%": zma,
  "%Math.abs%": cma,
  "%Math.floor%": uma,
  "%Math.max%": pma,
  "%Math.min%": mma,
  "%Math.pow%": gma
};
if (we)
  try {
    null.error;
  } catch (a) {
    var hma = we(we(a));
    Hn["%Error.prototype%"] = hma;
  }
var bma = function a(e) {
  var t;
  if (e === "%AsyncFunction%")
    t = zz("async function () {}");
  else if (e === "%GeneratorFunction%")
    t = zz("function* () {}");
  else if (e === "%AsyncGeneratorFunction%")
    t = zz("async function* () {}");
  else if (e === "%AsyncGenerator%") {
    var i = a("%AsyncGeneratorFunction%");
    i && (t = i.prototype);
  } else if (e === "%AsyncIteratorPrototype%") {
    var n = a("%AsyncGenerator%");
    n && we && (t = we(n.prototype));
  }
  return Hn[e] = t, t;
}, rq = {
  __proto__: null,
  "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
  "%ArrayPrototype%": ["Array", "prototype"],
  "%ArrayProto_entries%": ["Array", "prototype", "entries"],
  "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
  "%ArrayProto_keys%": ["Array", "prototype", "keys"],
  "%ArrayProto_values%": ["Array", "prototype", "values"],
  "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
  "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
  "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
  "%BooleanPrototype%": ["Boolean", "prototype"],
  "%DataViewPrototype%": ["DataView", "prototype"],
  "%DatePrototype%": ["Date", "prototype"],
  "%ErrorPrototype%": ["Error", "prototype"],
  "%EvalErrorPrototype%": ["EvalError", "prototype"],
  "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
  "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
  "%FunctionPrototype%": ["Function", "prototype"],
  "%Generator%": ["GeneratorFunction", "prototype"],
  "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
  "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
  "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
  "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
  "%JSONParse%": ["JSON", "parse"],
  "%JSONStringify%": ["JSON", "stringify"],
  "%MapPrototype%": ["Map", "prototype"],
  "%NumberPrototype%": ["Number", "prototype"],
  "%ObjectPrototype%": ["Object", "prototype"],
  "%ObjProto_toString%": ["Object", "prototype", "toString"],
  "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
  "%PromisePrototype%": ["Promise", "prototype"],
  "%PromiseProto_then%": ["Promise", "prototype", "then"],
  "%Promise_all%": ["Promise", "all"],
  "%Promise_reject%": ["Promise", "reject"],
  "%Promise_resolve%": ["Promise", "resolve"],
  "%RangeErrorPrototype%": ["RangeError", "prototype"],
  "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
  "%RegExpPrototype%": ["RegExp", "prototype"],
  "%SetPrototype%": ["Set", "prototype"],
  "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
  "%StringPrototype%": ["String", "prototype"],
  "%SymbolPrototype%": ["Symbol", "prototype"],
  "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
  "%TypedArrayPrototype%": ["TypedArray", "prototype"],
  "%TypeErrorPrototype%": ["TypeError", "prototype"],
  "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
  "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
  "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
  "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
  "%URIErrorPrototype%": ["URIError", "prototype"],
  "%WeakMapPrototype%": ["WeakMap", "prototype"],
  "%WeakSetPrototype%": ["WeakSet", "prototype"]
}, ld = od, Vl = nma(), vma = ld.call(dd, Array.prototype.concat), kma = ld.call(IW, Array.prototype.splice), sq = ld.call(dd, String.prototype.replace), Kl = ld.call(dd, String.prototype.slice), _ma = ld.call(dd, RegExp.prototype.exec), $ma = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, jma = /\\(\\)?/g, xma = function(e) {
  var t = Kl(e, 0, 1), i = Kl(e, -1);
  if (t === "%" && i !== "%")
    throw new Zr("invalid intrinsic syntax, expected closing `%`");
  if (i === "%" && t !== "%")
    throw new Zr("invalid intrinsic syntax, expected opening `%`");
  var n = [];
  return sq(e, $ma, function(r, s, o, d) {
    n[n.length] = o ? sq(d, jma, "$1") : s || r;
  }), n;
}, Ama = function(e, t) {
  var i = e, n;
  if (Vl(rq, i) && (n = rq[i], i = "%" + n[0] + "%"), Vl(Hn, i)) {
    var r = Hn[i];
    if (r === Mr && (r = bma(i)), typeof r > "u" && !t)
      throw new Ur("intrinsic " + e + " exists, but is not available. Please file an issue!");
    return {
      alias: n,
      name: i,
      value: r
    };
  }
  throw new Zr("intrinsic " + e + " does not exist!");
}, cd = function(e, t) {
  if (typeof e != "string" || e.length === 0)
    throw new Ur("intrinsic name must be a non-empty string");
  if (arguments.length > 1 && typeof t != "boolean")
    throw new Ur('"allowMissing" argument must be a boolean');
  if (_ma(/^%?[^%]*%?$/, e) === null)
    throw new Zr("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
  var i = xma(e), n = i.length > 0 ? i[0] : "", r = Ama("%" + n + "%", t), s = r.name, o = r.value, d = !1, c = r.alias;
  c && (n = c[0], kma(i, vma([0, 1], c)));
  for (var p = 1, m = !0; p < i.length; p += 1) {
    var w = i[p], v = Kl(w, 0, 1), $ = Kl(w, -1);
    if ((v === '"' || v === "'" || v === "`" || $ === '"' || $ === "'" || $ === "`") && v !== $)
      throw new Zr("property names with quotes must have matching quotes");
    if ((w === "constructor" || !m) && (d = !0), n += "." + w, s = "%" + n + "%", Vl(Hn, s))
      o = Hn[s];
    else if (o != null) {
      if (!(w in o)) {
        if (!t)
          throw new Ur("base intrinsic for " + e + " exists, but the property is not available.");
        return;
      }
      if (wo && p + 1 >= i.length) {
        var P = wo(o, w);
        m = !!P, m && "get" in P && !("originalValue" in P.get) ? o = P.get : o = o[w];
      } else
        m = Vl(o, w), o = o[w];
      m && !d && (Hn[s] = o);
    }
  }
  return o;
}, WW = { exports: {} }, oq = vu, Ema = RW, jr = hn, dq = sd, Sma = function(e, t, i) {
  if (!e || typeof e != "object" && typeof e != "function")
    throw new jr("`obj` must be an object or a function`");
  if (typeof t != "string" && typeof t != "symbol")
    throw new jr("`property` must be a string or a symbol`");
  if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null)
    throw new jr("`nonEnumerable`, if provided, must be a boolean or null");
  if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null)
    throw new jr("`nonWritable`, if provided, must be a boolean or null");
  if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null)
    throw new jr("`nonConfigurable`, if provided, must be a boolean or null");
  if (arguments.length > 6 && typeof arguments[6] != "boolean")
    throw new jr("`loose`, if provided, must be a boolean");
  var n = arguments.length > 3 ? arguments[3] : null, r = arguments.length > 4 ? arguments[4] : null, s = arguments.length > 5 ? arguments[5] : null, o = arguments.length > 6 ? arguments[6] : !1, d = !!dq && dq(e, t);
  if (oq)
    oq(e, t, {
      configurable: s === null && d ? d.configurable : !s,
      enumerable: n === null && d ? d.enumerable : !n,
      value: i,
      writable: r === null && d ? d.writable : !r
    });
  else if (o || !n && !r && !s)
    e[t] = i;
  else
    throw new Ema("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
}, If = vu, FW = function() {
  return !!If;
};
FW.hasArrayLengthDefineBug = function() {
  if (!If)
    return null;
  try {
    return If([], "length", { value: 1 }).length !== 1;
  } catch {
    return !0;
  }
};
var qma = FW, Pma = cd, lq = Sma, Tma = qma(), cq = sd, uq = hn, Rma = Pma("%Math.floor%"), Oma = function(e, t) {
  if (typeof e != "function")
    throw new uq("`fn` is not a function");
  if (typeof t != "number" || t < 0 || t > 4294967295 || Rma(t) !== t)
    throw new uq("`length` must be a positive 32-bit integer");
  var i = arguments.length > 2 && !!arguments[2], n = !0, r = !0;
  if ("length" in e && cq) {
    var s = cq(e, "length");
    s && !s.configurable && (n = !1), s && !s.writable && (r = !1);
  }
  return (n || r || !i) && (Tma ? lq(
    /** @type {Parameters<define>[0]} */
    e,
    "length",
    t,
    !0,
    !0
  ) : lq(
    /** @type {Parameters<define>[0]} */
    e,
    "length",
    t
  )), e;
}, Mma = od, Cma = Bh, Lma = OW, Ima = function() {
  return Lma(Mma, Cma, arguments);
};
(function(a) {
  var e = Oma, t = vu, i = MW, n = Ima;
  a.exports = function(s) {
    var o = i(arguments), d = s.length - (arguments.length - 1);
    return e(
      o,
      1 + (d > 0 ? d : 0),
      !0
    );
  }, t ? t(a.exports, "apply", { value: n }) : a.exports.apply = n;
})(WW);
var Nh = WW.exports, DW = cd, BW = Nh, Wma = BW(DW("String.prototype.indexOf")), NW = function(e, t) {
  var i = DW(e, !!t);
  return typeof i == "function" && Wma(e, ".prototype.") > -1 ? BW(i) : i;
}, Fma = Fh(), Dma = NW, Wf = Dma("Object.prototype.toString"), ku = function(e) {
  return Fma && e && typeof e == "object" && Symbol.toStringTag in e ? !1 : Wf(e) === "[object Arguments]";
}, UW = function(e) {
  return ku(e) ? !0 : e !== null && typeof e == "object" && typeof e.length == "number" && e.length >= 0 && Wf(e) !== "[object Array]" && Wf(e.callee) === "[object Function]";
}, Bma = function() {
  return ku(arguments);
}();
ku.isLegacyArguments = UW;
var Nma = Bma ? ku : UW, Uma = Object.prototype.toString, Hma = Function.prototype.toString, Vma = /^\s*(?:function)?\*/, HW = Fh(), yz = Object.getPrototypeOf, Kma = function() {
  if (!HW)
    return !1;
  try {
    return Function("return function*() {}")();
  } catch {
  }
}, wz, Gma = function(e) {
  if (typeof e != "function")
    return !1;
  if (Vma.test(Hma.call(e)))
    return !0;
  if (!HW) {
    var t = Uma.call(e);
    return t === "[object GeneratorFunction]";
  }
  if (!yz)
    return !1;
  if (typeof wz > "u") {
    var i = Kma();
    wz = i ? yz(i) : !1;
  }
  return yz(e) === wz;
}, VW = Function.prototype.toString, Lr = typeof Reflect == "object" && Reflect !== null && Reflect.apply, Ff, kl;
if (typeof Lr == "function" && typeof Object.defineProperty == "function")
  try {
    Ff = Object.defineProperty({}, "length", {
      get: function() {
        throw kl;
      }
    }), kl = {}, Lr(function() {
      throw 42;
    }, null, Ff);
  } catch (a) {
    a !== kl && (Lr = null);
  }
else
  Lr = null;
var Yma = /^\s*class\b/, Df = function(e) {
  try {
    var t = VW.call(e);
    return Yma.test(t);
  } catch {
    return !1;
  }
}, hz = function(e) {
  try {
    return Df(e) ? !1 : (VW.call(e), !0);
  } catch {
    return !1;
  }
}, _l = Object.prototype.toString, Zma = "[object Object]", Xma = "[object Function]", Jma = "[object GeneratorFunction]", Qma = "[object HTMLAllCollection]", aga = "[object HTML document.all class]", ega = "[object HTMLCollection]", tga = typeof Symbol == "function" && !!Symbol.toStringTag, iga = !(0 in [,]), Bf = function() {
  return !1;
};
if (typeof document == "object") {
  var nga = document.all;
  _l.call(nga) === _l.call(document.all) && (Bf = function(e) {
    if ((iga || !e) && (typeof e > "u" || typeof e == "object"))
      try {
        var t = _l.call(e);
        return (t === Qma || t === aga || t === ega || t === Zma) && e("") == null;
      } catch {
      }
    return !1;
  });
}
var rga = Lr ? function(e) {
  if (Bf(e))
    return !0;
  if (!e || typeof e != "function" && typeof e != "object")
    return !1;
  try {
    Lr(e, null, Ff);
  } catch (t) {
    if (t !== kl)
      return !1;
  }
  return !Df(e) && hz(e);
} : function(e) {
  if (Bf(e))
    return !0;
  if (!e || typeof e != "function" && typeof e != "object")
    return !1;
  if (tga)
    return hz(e);
  if (Df(e))
    return !1;
  var t = _l.call(e);
  return t !== Xma && t !== Jma && !/^\[object HTML/.test(t) ? !1 : hz(e);
}, sga = rga, oga = Object.prototype.toString, KW = Object.prototype.hasOwnProperty, dga = function(e, t, i) {
  for (var n = 0, r = e.length; n < r; n++)
    KW.call(e, n) && (i == null ? t(e[n], n, e) : t.call(i, e[n], n, e));
}, lga = function(e, t, i) {
  for (var n = 0, r = e.length; n < r; n++)
    i == null ? t(e.charAt(n), n, e) : t.call(i, e.charAt(n), n, e);
}, cga = function(e, t, i) {
  for (var n in e)
    KW.call(e, n) && (i == null ? t(e[n], n, e) : t.call(i, e[n], n, e));
}, uga = function(e, t, i) {
  if (!sga(t))
    throw new TypeError("iterator must be a function");
  var n;
  arguments.length >= 3 && (n = i), oga.call(e) === "[object Array]" ? dga(e, t, n) : typeof e == "string" ? lga(e, t, n) : cga(e, t, n);
}, pga = uga, mga = [
  "Float32Array",
  "Float64Array",
  "Int8Array",
  "Int16Array",
  "Int32Array",
  "Uint8Array",
  "Uint8ClampedArray",
  "Uint16Array",
  "Uint32Array",
  "BigInt64Array",
  "BigUint64Array"
], bz = mga, gga = typeof globalThis > "u" ? Ca : globalThis, zga = function() {
  for (var e = [], t = 0; t < bz.length; t++)
    typeof gga[bz[t]] == "function" && (e[e.length] = bz[t]);
  return e;
}, Gl = pga, fga = zga, pq = Nh, Uh = NW, $l = sd, yga = Uh("Object.prototype.toString"), GW = Fh(), mq = typeof globalThis > "u" ? Ca : globalThis, Nf = fga(), Hh = Uh("String.prototype.slice"), vz = Object.getPrototypeOf, wga = Uh("Array.prototype.indexOf", !0) || function(e, t) {
  for (var i = 0; i < e.length; i += 1)
    if (e[i] === t)
      return i;
  return -1;
}, Yl = { __proto__: null };
GW && $l && vz ? Gl(Nf, function(a) {
  var e = new mq[a]();
  if (Symbol.toStringTag in e) {
    var t = vz(e), i = $l(t, Symbol.toStringTag);
    if (!i) {
      var n = vz(t);
      i = $l(n, Symbol.toStringTag);
    }
    Yl["$" + a] = pq(i.get);
  }
}) : Gl(Nf, function(a) {
  var e = new mq[a](), t = e.slice || e.set;
  t && (Yl["$" + a] = pq(t));
});
var hga = function(e) {
  var t = !1;
  return Gl(
    // eslint-disable-next-line no-extra-parens
    /** @type {Record<`\$${TypedArrayName}`, Getter>} */
    /** @type {any} */
    Yl,
    /** @type {(getter: Getter, name: `\$${import('.').TypedArrayName}`) => void} */
    function(i, n) {
      if (!t)
        try {
          "$" + i(e) === n && (t = Hh(n, 1));
        } catch {
        }
    }
  ), t;
}, bga = function(e) {
  var t = !1;
  return Gl(
    // eslint-disable-next-line no-extra-parens
    /** @type {Record<`\$${TypedArrayName}`, Getter>} */
    /** @type {any} */
    Yl,
    /** @type {(getter: typeof cache, name: `\$${import('.').TypedArrayName}`) => void} */
    function(i, n) {
      if (!t)
        try {
          i(e), t = Hh(n, 1);
        } catch {
        }
    }
  ), t;
}, YW = function(e) {
  if (!e || typeof e != "object")
    return !1;
  if (!GW) {
    var t = Hh(yga(e), 8, -1);
    return wga(Nf, t) > -1 ? t : t !== "Object" ? !1 : bga(e);
  }
  return $l ? hga(e) : null;
}, vga = YW, kga = function(e) {
  return !!vga(e);
};
(function(a) {
  var e = Nma, t = Gma, i = YW, n = kga;
  function r(B) {
    return B.call.bind(B);
  }
  var s = typeof BigInt < "u", o = typeof Symbol < "u", d = r(Object.prototype.toString), c = r(Number.prototype.valueOf), p = r(String.prototype.valueOf), m = r(Boolean.prototype.valueOf);
  if (s)
    var w = r(BigInt.prototype.valueOf);
  if (o)
    var v = r(Symbol.prototype.valueOf);
  function $(B, Kp) {
    if (typeof B != "object")
      return !1;
    try {
      return Kp(B), !0;
    } catch {
      return !1;
    }
  }
  a.isArgumentsObject = e, a.isGeneratorFunction = t, a.isTypedArray = n;
  function P(B) {
    return typeof Promise < "u" && B instanceof Promise || B !== null && typeof B == "object" && typeof B.then == "function" && typeof B.catch == "function";
  }
  a.isPromise = P;
  function h(B) {
    return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(B) : n(B) || T(B);
  }
  a.isArrayBufferView = h;
  function z(B) {
    return i(B) === "Uint8Array";
  }
  a.isUint8Array = z;
  function b(B) {
    return i(B) === "Uint8ClampedArray";
  }
  a.isUint8ClampedArray = b;
  function _(B) {
    return i(B) === "Uint16Array";
  }
  a.isUint16Array = _;
  function S(B) {
    return i(B) === "Uint32Array";
  }
  a.isUint32Array = S;
  function A(B) {
    return i(B) === "Int8Array";
  }
  a.isInt8Array = A;
  function L(B) {
    return i(B) === "Int16Array";
  }
  a.isInt16Array = L;
  function R(B) {
    return i(B) === "Int32Array";
  }
  a.isInt32Array = R;
  function E(B) {
    return i(B) === "Float32Array";
  }
  a.isFloat32Array = E;
  function N(B) {
    return i(B) === "Float64Array";
  }
  a.isFloat64Array = N;
  function D(B) {
    return i(B) === "BigInt64Array";
  }
  a.isBigInt64Array = D;
  function H(B) {
    return i(B) === "BigUint64Array";
  }
  a.isBigUint64Array = H;
  function j(B) {
    return d(B) === "[object Map]";
  }
  j.working = typeof Map < "u" && j(/* @__PURE__ */ new Map());
  function ea(B) {
    return typeof Map > "u" ? !1 : j.working ? j(B) : B instanceof Map;
  }
  a.isMap = ea;
  function ra(B) {
    return d(B) === "[object Set]";
  }
  ra.working = typeof Set < "u" && ra(/* @__PURE__ */ new Set());
  function J(B) {
    return typeof Set > "u" ? !1 : ra.working ? ra(B) : B instanceof Set;
  }
  a.isSet = J;
  function $a(B) {
    return d(B) === "[object WeakMap]";
  }
  $a.working = typeof WeakMap < "u" && $a(/* @__PURE__ */ new WeakMap());
  function ne(B) {
    return typeof WeakMap > "u" ? !1 : $a.working ? $a(B) : B instanceof WeakMap;
  }
  a.isWeakMap = ne;
  function fa(B) {
    return d(B) === "[object WeakSet]";
  }
  fa.working = typeof WeakSet < "u" && fa(/* @__PURE__ */ new WeakSet());
  function Ea(B) {
    return fa(B);
  }
  a.isWeakSet = Ea;
  function O(B) {
    return d(B) === "[object ArrayBuffer]";
  }
  O.working = typeof ArrayBuffer < "u" && O(new ArrayBuffer());
  function V(B) {
    return typeof ArrayBuffer > "u" ? !1 : O.working ? O(B) : B instanceof ArrayBuffer;
  }
  a.isArrayBuffer = V;
  function x(B) {
    return d(B) === "[object DataView]";
  }
  x.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && x(new DataView(new ArrayBuffer(1), 0, 1));
  function T(B) {
    return typeof DataView > "u" ? !1 : x.working ? x(B) : B instanceof DataView;
  }
  a.isDataView = T;
  var M = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
  function U(B) {
    return d(B) === "[object SharedArrayBuffer]";
  }
  function G(B) {
    return typeof M > "u" ? !1 : (typeof U.working > "u" && (U.working = U(new M())), U.working ? U(B) : B instanceof M);
  }
  a.isSharedArrayBuffer = G;
  function Y(B) {
    return d(B) === "[object AsyncFunction]";
  }
  a.isAsyncFunction = Y;
  function K(B) {
    return d(B) === "[object Map Iterator]";
  }
  a.isMapIterator = K;
  function Q(B) {
    return d(B) === "[object Set Iterator]";
  }
  a.isSetIterator = Q;
  function pa(B) {
    return d(B) === "[object Generator]";
  }
  a.isGeneratorObject = pa;
  function ka(B) {
    return d(B) === "[object WebAssembly.Module]";
  }
  a.isWebAssemblyCompiledModule = ka;
  function Ja(B) {
    return $(B, c);
  }
  a.isNumberObject = Ja;
  function fe(B) {
    return $(B, p);
  }
  a.isStringObject = fe;
  function _e(B) {
    return $(B, m);
  }
  a.isBooleanObject = _e;
  function Fe(B) {
    return s && $(B, w);
  }
  a.isBigIntObject = Fe;
  function ui(B) {
    return o && $(B, v);
  }
  a.isSymbolObject = ui;
  function Hp(B) {
    return Ja(B) || fe(B) || _e(B) || Fe(B) || ui(B);
  }
  a.isBoxedPrimitive = Hp;
  function Vp(B) {
    return typeof Uint8Array < "u" && (V(B) || G(B));
  }
  a.isAnyArrayBuffer = Vp, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(B) {
    Object.defineProperty(a, B, {
      enumerable: !1,
      value: function() {
        throw new Error(B + " is not supported in userland");
      }
    });
  });
})(PW);
var _ga = function(e) {
  return e && typeof e == "object" && typeof e.copy == "function" && typeof e.fill == "function" && typeof e.readUInt8 == "function";
}, Uf = { exports: {} };
typeof Object.create == "function" ? Uf.exports = function(e, t) {
  t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
    constructor: {
      value: e,
      enumerable: !1,
      writable: !0,
      configurable: !0
    }
  }));
} : Uf.exports = function(e, t) {
  if (t) {
    e.super_ = t;
    var i = function() {
    };
    i.prototype = t.prototype, e.prototype = new i(), e.prototype.constructor = e;
  }
};
var ud = Uf.exports;
(function(a) {
  var e = Object.getOwnPropertyDescriptors || function(T) {
    for (var M = Object.keys(T), U = {}, G = 0; G < M.length; G++)
      U[M[G]] = Object.getOwnPropertyDescriptor(T, M[G]);
    return U;
  }, t = /%[sdj%]/g;
  a.format = function(x) {
    if (!A(x)) {
      for (var T = [], M = 0; M < arguments.length; M++)
        T.push(s(arguments[M]));
      return T.join(" ");
    }
    for (var M = 1, U = arguments, G = U.length, Y = String(x).replace(t, function(Q) {
      if (Q === "%%") return "%";
      if (M >= G) return Q;
      switch (Q) {
        case "%s":
          return String(U[M++]);
        case "%d":
          return Number(U[M++]);
        case "%j":
          try {
            return JSON.stringify(U[M++]);
          } catch {
            return "[Circular]";
          }
        default:
          return Q;
      }
    }), K = U[M]; M < G; K = U[++M])
      b(K) || !N(K) ? Y += " " + K : Y += " " + s(K);
    return Y;
  }, a.deprecate = function(x, T) {
    if (typeof Dt < "u" && Dt.noDeprecation === !0)
      return x;
    if (typeof Dt > "u")
      return function() {
        return a.deprecate(x, T).apply(this, arguments);
      };
    var M = !1;
    function U() {
      if (!M) {
        if (Dt.throwDeprecation)
          throw new Error(T);
        Dt.traceDeprecation ? console.trace(T) : console.error(T), M = !0;
      }
      return x.apply(this, arguments);
    }
    return U;
  };
  var i = {}, n = /^$/;
  if (Dt.env.NODE_DEBUG) {
    var r = Dt.env.NODE_DEBUG;
    r = r.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), n = new RegExp("^" + r + "$", "i");
  }
  a.debuglog = function(x) {
    if (x = x.toUpperCase(), !i[x])
      if (n.test(x)) {
        var T = Dt.pid;
        i[x] = function() {
          var M = a.format.apply(a, arguments);
          console.error("%s %d: %s", x, T, M);
        };
      } else
        i[x] = function() {
        };
    return i[x];
  };
  function s(x, T) {
    var M = {
      seen: [],
      stylize: d
    };
    return arguments.length >= 3 && (M.depth = arguments[2]), arguments.length >= 4 && (M.colors = arguments[3]), z(T) ? M.showHidden = T : T && a._extend(M, T), R(M.showHidden) && (M.showHidden = !1), R(M.depth) && (M.depth = 2), R(M.colors) && (M.colors = !1), R(M.customInspect) && (M.customInspect = !0), M.colors && (M.stylize = o), p(M, x, M.depth);
  }
  a.inspect = s, s.colors = {
    bold: [1, 22],
    italic: [3, 23],
    underline: [4, 24],
    inverse: [7, 27],
    white: [37, 39],
    grey: [90, 39],
    black: [30, 39],
    blue: [34, 39],
    cyan: [36, 39],
    green: [32, 39],
    magenta: [35, 39],
    red: [31, 39],
    yellow: [33, 39]
  }, s.styles = {
    special: "cyan",
    number: "yellow",
    boolean: "yellow",
    undefined: "grey",
    null: "bold",
    string: "green",
    date: "magenta",
    // "name": intentionally not styling
    regexp: "red"
  };
  function o(x, T) {
    var M = s.styles[T];
    return M ? "\x1B[" + s.colors[M][0] + "m" + x + "\x1B[" + s.colors[M][1] + "m" : x;
  }
  function d(x, T) {
    return x;
  }
  function c(x) {
    var T = {};
    return x.forEach(function(M, U) {
      T[M] = !0;
    }), T;
  }
  function p(x, T, M) {
    if (x.customInspect && T && j(T.inspect) && // Filter out the util module, it's inspect function is special
    T.inspect !== a.inspect && // Also filter out any prototype objects using the circular check.
    !(T.constructor && T.constructor.prototype === T)) {
      var U = T.inspect(M, x);
      return A(U) || (U = p(x, U, M)), U;
    }
    var G = m(x, T);
    if (G)
      return G;
    var Y = Object.keys(T), K = c(Y);
    if (x.showHidden && (Y = Object.getOwnPropertyNames(T)), H(T) && (Y.indexOf("message") >= 0 || Y.indexOf("description") >= 0))
      return w(T);
    if (Y.length === 0) {
      if (j(T)) {
        var Q = T.name ? ": " + T.name : "";
        return x.stylize("[Function" + Q + "]", "special");
      }
      if (E(T))
        return x.stylize(RegExp.prototype.toString.call(T), "regexp");
      if (D(T))
        return x.stylize(Date.prototype.toString.call(T), "date");
      if (H(T))
        return w(T);
    }
    var pa = "", ka = !1, Ja = ["{", "}"];
    if (h(T) && (ka = !0, Ja = ["[", "]"]), j(T)) {
      var fe = T.name ? ": " + T.name : "";
      pa = " [Function" + fe + "]";
    }
    if (E(T) && (pa = " " + RegExp.prototype.toString.call(T)), D(T) && (pa = " " + Date.prototype.toUTCString.call(T)), H(T) && (pa = " " + w(T)), Y.length === 0 && (!ka || T.length == 0))
      return Ja[0] + pa + Ja[1];
    if (M < 0)
      return E(T) ? x.stylize(RegExp.prototype.toString.call(T), "regexp") : x.stylize("[Object]", "special");
    x.seen.push(T);
    var _e;
    return ka ? _e = v(x, T, M, K, Y) : _e = Y.map(function(Fe) {
      return $(x, T, M, K, Fe, ka);
    }), x.seen.pop(), P(_e, pa, Ja);
  }
  function m(x, T) {
    if (R(T))
      return x.stylize("undefined", "undefined");
    if (A(T)) {
      var M = "'" + JSON.stringify(T).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
      return x.stylize(M, "string");
    }
    if (S(T))
      return x.stylize("" + T, "number");
    if (z(T))
      return x.stylize("" + T, "boolean");
    if (b(T))
      return x.stylize("null", "null");
  }
  function w(x) {
    return "[" + Error.prototype.toString.call(x) + "]";
  }
  function v(x, T, M, U, G) {
    for (var Y = [], K = 0, Q = T.length; K < Q; ++K)
      fa(T, String(K)) ? Y.push($(
        x,
        T,
        M,
        U,
        String(K),
        !0
      )) : Y.push("");
    return G.forEach(function(pa) {
      pa.match(/^\d+$/) || Y.push($(
        x,
        T,
        M,
        U,
        pa,
        !0
      ));
    }), Y;
  }
  function $(x, T, M, U, G, Y) {
    var K, Q, pa;
    if (pa = Object.getOwnPropertyDescriptor(T, G) || { value: T[G] }, pa.get ? pa.set ? Q = x.stylize("[Getter/Setter]", "special") : Q = x.stylize("[Getter]", "special") : pa.set && (Q = x.stylize("[Setter]", "special")), fa(U, G) || (K = "[" + G + "]"), Q || (x.seen.indexOf(pa.value) < 0 ? (b(M) ? Q = p(x, pa.value, null) : Q = p(x, pa.value, M - 1), Q.indexOf(`
`) > -1 && (Y ? Q = Q.split(`
`).map(function(ka) {
      return "  " + ka;
    }).join(`
`).slice(2) : Q = `
` + Q.split(`
`).map(function(ka) {
      return "   " + ka;
    }).join(`
`))) : Q = x.stylize("[Circular]", "special")), R(K)) {
      if (Y && G.match(/^\d+$/))
        return Q;
      K = JSON.stringify("" + G), K.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (K = K.slice(1, -1), K = x.stylize(K, "name")) : (K = K.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), K = x.stylize(K, "string"));
    }
    return K + ": " + Q;
  }
  function P(x, T, M) {
    var U = x.reduce(function(G, Y) {
      return Y.indexOf(`
`) >= 0, G + Y.replace(/\u001b\[\d\d?m/g, "").length + 1;
    }, 0);
    return U > 60 ? M[0] + (T === "" ? "" : T + `
 `) + " " + x.join(`,
  `) + " " + M[1] : M[0] + T + " " + x.join(", ") + " " + M[1];
  }
  a.types = PW;
  function h(x) {
    return Array.isArray(x);
  }
  a.isArray = h;
  function z(x) {
    return typeof x == "boolean";
  }
  a.isBoolean = z;
  function b(x) {
    return x === null;
  }
  a.isNull = b;
  function _(x) {
    return x == null;
  }
  a.isNullOrUndefined = _;
  function S(x) {
    return typeof x == "number";
  }
  a.isNumber = S;
  function A(x) {
    return typeof x == "string";
  }
  a.isString = A;
  function L(x) {
    return typeof x == "symbol";
  }
  a.isSymbol = L;
  function R(x) {
    return x === void 0;
  }
  a.isUndefined = R;
  function E(x) {
    return N(x) && ra(x) === "[object RegExp]";
  }
  a.isRegExp = E, a.types.isRegExp = E;
  function N(x) {
    return typeof x == "object" && x !== null;
  }
  a.isObject = N;
  function D(x) {
    return N(x) && ra(x) === "[object Date]";
  }
  a.isDate = D, a.types.isDate = D;
  function H(x) {
    return N(x) && (ra(x) === "[object Error]" || x instanceof Error);
  }
  a.isError = H, a.types.isNativeError = H;
  function j(x) {
    return typeof x == "function";
  }
  a.isFunction = j;
  function ea(x) {
    return x === null || typeof x == "boolean" || typeof x == "number" || typeof x == "string" || typeof x == "symbol" || // ES6 symbol
    typeof x > "u";
  }
  a.isPrimitive = ea, a.isBuffer = _ga;
  function ra(x) {
    return Object.prototype.toString.call(x);
  }
  function J(x) {
    return x < 10 ? "0" + x.toString(10) : x.toString(10);
  }
  var $a = [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  ];
  function ne() {
    var x = /* @__PURE__ */ new Date(), T = [
      J(x.getHours()),
      J(x.getMinutes()),
      J(x.getSeconds())
    ].join(":");
    return [x.getDate(), $a[x.getMonth()], T].join(" ");
  }
  a.log = function() {
    console.log("%s - %s", ne(), a.format.apply(a, arguments));
  }, a.inherits = ud, a._extend = function(x, T) {
    if (!T || !N(T)) return x;
    for (var M = Object.keys(T), U = M.length; U--; )
      x[M[U]] = T[M[U]];
    return x;
  };
  function fa(x, T) {
    return Object.prototype.hasOwnProperty.call(x, T);
  }
  var Ea = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
  a.promisify = function(T) {
    if (typeof T != "function")
      throw new TypeError('The "original" argument must be of type Function');
    if (Ea && T[Ea]) {
      var M = T[Ea];
      if (typeof M != "function")
        throw new TypeError('The "util.promisify.custom" argument must be of type Function');
      return Object.defineProperty(M, Ea, {
        value: M,
        enumerable: !1,
        writable: !1,
        configurable: !0
      }), M;
    }
    function M() {
      for (var U, G, Y = new Promise(function(pa, ka) {
        U = pa, G = ka;
      }), K = [], Q = 0; Q < arguments.length; Q++)
        K.push(arguments[Q]);
      K.push(function(pa, ka) {
        pa ? G(pa) : U(ka);
      });
      try {
        T.apply(this, K);
      } catch (pa) {
        G(pa);
      }
      return Y;
    }
    return Object.setPrototypeOf(M, Object.getPrototypeOf(T)), Ea && Object.defineProperty(M, Ea, {
      value: M,
      enumerable: !1,
      writable: !1,
      configurable: !0
    }), Object.defineProperties(
      M,
      e(T)
    );
  }, a.promisify.custom = Ea;
  function O(x, T) {
    if (!x) {
      var M = new Error("Promise was rejected with a falsy value");
      M.reason = x, x = M;
    }
    return T(x);
  }
  function V(x) {
    if (typeof x != "function")
      throw new TypeError('The "original" argument must be of type Function');
    function T() {
      for (var M = [], U = 0; U < arguments.length; U++)
        M.push(arguments[U]);
      var G = M.pop();
      if (typeof G != "function")
        throw new TypeError("The last argument must be of type Function");
      var Y = this, K = function() {
        return G.apply(Y, arguments);
      };
      x.apply(this, M).then(
        function(Q) {
          Dt.nextTick(K.bind(null, null, Q));
        },
        function(Q) {
          Dt.nextTick(O.bind(null, Q, K));
        }
      );
    }
    return Object.setPrototypeOf(T, Object.getPrototypeOf(x)), Object.defineProperties(
      T,
      e(x)
    ), T;
  }
  a.callbackify = V;
})(Pa);
Object.defineProperty(vs, "__esModule", {
  value: !0
});
var $ga = Pa, jga = xga($ga);
function xga(a) {
  return a && a.__esModule ? a : { default: a };
}
function ZW(a) {
  Error.captureStackTrace(this, this.constructor), this.name = this.constructor.name, this.message = a;
}
jga.default.inherits(ZW, Error);
vs.default = ZW;
Object.defineProperty(Wh, "__esModule", {
  value: !0
});
var Hf = I, Aga = vs, Ega = XW(Aga), gq = va, Sga = za, qga = XW(Sga);
function XW(a) {
  return a && a.__esModule ? a : { default: a };
}
var ks = function(e, t) {
  if ((0, Hf.isUndefined)(e))
    throw new Ega.default("The previously keyword plugin requires the YoastSEO app");
  (0, Hf.isUndefined)(t) && (t = {
    usedKeywords: {},
    searchUrl: "",
    postUrl: ""
  }), this.app = e, this.usedKeywords = t.usedKeywords, this.searchUrl = t.searchUrl, this.postUrl = t.postUrl, this.urlTitle = (0, gq.createAnchorOpeningTag)("https://yoa.st/33x"), this.urlCallToAction = (0, gq.createAnchorOpeningTag)("https://yoa.st/33y");
};
ks.prototype.registerPlugin = function() {
  this.app.registerAssessment("usedKeywords", {
    getResult: this.assess.bind(this),
    /**
     * Checks if the paper has a keyphrase, which is a prerequisite for the assessment to run.
     *
     * @param {Paper} paper The paper.
     *
     * @returns {boolean} Whether the paper has a keyphrase.
     */
    isApplicable: function(e) {
      return e.hasKeyword();
    }
  }, "previouslyUsedKeywords");
};
ks.prototype.updateKeywordUsage = function(a) {
  this.usedKeywords = a;
};
ks.prototype.scoreAssessment = function(a, e, t) {
  var i = a.count, n = a.id;
  if (i === 0)
    return {
      text: t.sprintf(
        /* Translators:
        %1$s expands to a link to an article on yoast.com,
        %2$s expands to an anchor tag. */
        t.dgettext("js-text-analysis", "%1$sPreviously used keyphrase%2$s: You've not used this keyphrase before, very good."),
        this.urlTitle,
        "</a>"
      ),
      score: 9
    };
  if (i === 1) {
    var r = "<a href='" + this.postUrl.replace("{id}", n) + "' target='_blank'>";
    return {
      /* Translators: %1$s and %2$s expand to an admin link where the keyword is already used. %3$s and %4$s
      expand to links on yoast.com, %4$s expands to the anchor end tag. */
      text: t.sprintf(t.dgettext("js-text-analysis", "%3$sPreviously used keyphrase%5$s: You've used this keyphrase %1$sonce before%2$s. %4$sDo not use your keyphrase more than once%5$s."), r, "</a>", this.urlTitle, this.urlCallToAction, "</a>"),
      score: 6
    };
  }
  if (i > 1)
    return r = "<a href='" + this.searchUrl.replace("{keyword}", encodeURIComponent(e.getKeyword())) + "' target='_blank'>", {
      /* Translators: %1$s and $3$s expand to the admin search page for the keyword, %2$d expands to the number
      of times this keyword has been used before, %4$s and %5$s expand to links to yoast.com, %6$s expands to
      the anchor end tag */
      text: t.sprintf(t.dgettext("js-text-analysis", "%4$sPreviously used keyphrase%6$s: You've used this keyphrase %1$s%2$d times before%3$s. %5$sDo not use your keyphrase more than once%6$s."), r, i, "</a>", this.urlTitle, this.urlCallToAction, "</a>"),
      score: 1
    };
};
ks.prototype.researchPreviouslyUsedKeywords = function(a) {
  var e = a.getKeyword(), t = 0, i = 0;
  return (0, Hf.isUndefined)(this.usedKeywords[e]) || (t = this.usedKeywords[e].length, i = this.usedKeywords[e][0]), {
    id: i,
    count: t
  };
};
ks.prototype.assess = function(a, e, t) {
  var i = this.researchPreviouslyUsedKeywords(a), n = this.scoreAssessment(i, a, t), r = new qga.default();
  return r.setScore(n.score), r.setText(n.text), r;
};
Wh.default = ks;
Object.defineProperty(Yr, "__esModule", {
  value: !0
});
var JW = Yr.usedKeywords = void 0, Pga = Wh, Tga = Rga(Pga);
function Rga(a) {
  return a && a.__esModule ? a : { default: a };
}
JW = Yr.usedKeywords = Tga.default;
const Oga = /* @__PURE__ */ Xn({
  __proto__: null,
  default: Yr,
  get usedKeywords() {
    return JW;
  }
}, [Yr]);
var _u = {}, _s = {};
Object.defineProperty(_s, "__esModule", {
  value: !0
});
const Mga = function(e) {
  return e === -1 ? "error" : e === 0 ? "feedback" : e <= 4 ? "bad" : e > 4 && e <= 7 ? "ok" : e > 7 ? "good" : "";
};
_s.default = Mga;
var $u = {};
Object.defineProperty($u, "__esModule", {
  value: !0
});
const QW = "yoast-measurement-element", Cga = function() {
  const e = document.createElement("div");
  return e.id = QW, e.style.position = "absolute", e.style.left = "-9999em", e.style.top = 0, e.style.height = 0, e.style.overflow = "hidden", e.style.fontFamily = "Arial", e.style.fontSize = "18px", e.style.fontWeight = "400", document.body.appendChild(e), e;
};
$u.measureTextWidth = function(e) {
  let t = document.getElementById(QW);
  return t || (t = Cga()), t.innerText = e, t.offsetWidth;
};
(function(a) {
  Object.defineProperty(a, "__esModule", {
    value: !0
  }), a.getLanguagesWithWordFormSupport = a.scoreToRating = a.measureTextWidth = void 0;
  var e = Ae;
  Object.keys(e).forEach(function(d) {
    d === "default" || d === "__esModule" || Object.defineProperty(a, d, {
      enumerable: !0,
      get: function() {
        return e[d];
      }
    });
  });
  var t = _s, i = o(t), n = $u, r = du, s = o(r);
  function o(d) {
    return d && d.__esModule ? d : { default: d };
  }
  a.measureTextWidth = n.measureTextWidth, a.scoreToRating = i.default, a.getLanguagesWithWordFormSupport = s.default;
})(_u);
const Lga = /* @__PURE__ */ _y(_u), Iga = /* @__PURE__ */ Xn({
  __proto__: null,
  default: Lga
}, [_u]);
var Xr = {}, Vh = {};
Object.defineProperty(Vh, "__esModule", {
  value: !0
});
Vh.default = function(a) {
  return a.replace(new RegExp("<yoastmark[^>]*>", "g"), "").replace(new RegExp("</yoastmark>", "g"), "");
};
Object.defineProperty(Xr, "__esModule", {
  value: !0
});
var aF = Xr.removeMarks = void 0, Wga = Vh, Fga = Dga(Wga);
function Dga(a) {
  return a && a.__esModule ? a : { default: a };
}
aF = Xr.removeMarks = Fga.default;
const Bga = /* @__PURE__ */ Xn({
  __proto__: null,
  default: Xr,
  get removeMarks() {
    return aF;
  }
}, [Xr]);
var Ha = {}, pd = {}, Kh = {};
Object.defineProperty(Kh, "__esModule", {
  value: !0
});
Kh.default = function(a) {
  if ((0, Hga.isUndefined)(a))
    return [];
  switch ((0, Uga.default)(a)) {
    case "es":
      return Z.es;
    case "pl":
      return Z.pl;
    case "de":
      return Z.de;
    case "nb":
    case "nn":
      return Z.nbnn;
    case "sv":
      return Z.sv;
    case "fi":
      return Z.fi;
    case "da":
      return Z.da;
    case "tr":
      return Z.tr;
    case "lv":
      return Z.lv;
    case "is":
      return Z.is;
    case "fa":
      return Z.fa;
    case "cs":
      return Z.cs;
    case "ru":
      return Z.ru;
    case "eo":
      return Z.eo;
    case "af":
      return Z.af;
    case "bal":
    case "ca":
      return Z.ca;
    case "ast":
      return Z.ast;
    case "an":
      return Z.an;
    case "ay":
      return Z.ay;
    case "en":
      return Z.en;
    case "fr":
      return Z.fr;
    case "it":
      return Z.it;
    case "nl":
      return Z.nl;
    case "bm":
      return Z.bm;
    case "uk":
      return Z.uk;
    case "br":
      return Z.br;
    case "ch":
      return Z.ch;
    case "csb":
      return Z.csb;
    case "cy":
      return Z.cy;
    case "ee":
      return Z.ee;
    case "et":
      return Z.et;
    case "eu":
      return Z.eu;
    case "fuc":
      return Z.fuc;
    case "fj":
      return Z.fj;
    case "frp":
      return Z.frp;
    case "fur":
      return Z.fur;
    case "fy":
      return Z.fy;
    case "ga":
      return Z.ga;
    case "gd":
      return Z.gd;
    case "gl":
      return Z.gl;
    case "gn":
      return Z.gn;
    case "gsw":
      return Z.gsw;
    case "hat":
      return Z.hat;
    case "haw":
      return Z.haw;
    case "hr":
      return Z.hr;
    case "ka":
      return Z.ka;
    case "kal":
      return Z.kal;
    case "kin":
      return Z.kin;
    case "lb":
      return Z.lb;
    case "li":
      return Z.li;
    case "lin":
      return Z.lin;
    case "lt":
      return Z.lt;
    case "mg":
      return Z.mg;
    case "mk":
      return Z.mk;
    case "mri":
      return Z.mri;
    case "mwl":
      return Z.mwl;
    case "oci":
      return Z.oci;
    case "orm":
      return Z.orm;
    case "pt":
      return Z.pt;
    case "roh":
      return Z.roh;
    case "rup":
      return Z.rup;
    case "ro":
      return Z.ro;
    case "tlh":
      return Z.tlh;
    case "sk":
      return Z.sk;
    case "sl":
      return Z.sl;
    case "sq":
      return Z.sq;
    case "hu":
      return Z.hu;
    case "srd":
      return Z.srd;
    case "szl":
      return Z.szl;
    case "tah":
      return Z.tah;
    case "vec":
      return Z.vec;
    case "wa":
      return Z.wa;
    case "yor":
      return Z.yor;
    default:
      return [];
  }
};
var Nga = Ya, Uga = Vga(Nga), Hga = I;
function Vga(a) {
  return a && a.__esModule ? a : { default: a };
}
var Z = {
  // Language: Spanish.
  // Source: https://en.wikipedia.org/wiki/Spanish_orthography
  es: [{ letter: /[\u00F1]/g, alternative: "n" }, { letter: /[\u00D1]/g, alternative: "N" }, { letter: /[\u00E1]/g, alternative: "a" }, { letter: /[\u00C1]/g, alternative: "A" }, { letter: /[\u00E9]/g, alternative: "e" }, { letter: /[\u00C9]/g, alternative: "E" }, { letter: /[\u00ED]/g, alternative: "i" }, { letter: /[\u00CD]/g, alternative: "I" }, { letter: /[\u00F3]/g, alternative: "o" }, { letter: /[\u00D3]/g, alternative: "O" }, { letter: /[\u00FA\u00FC]/g, alternative: "u" }, { letter: /[\u00DA\u00DC]/g, alternative: "U" }],
  // Language: Polish.
  // Source: https://en.wikipedia.org/wiki/Polish_orthography
  pl: [{ letter: /[\u0105]/g, alternative: "a" }, { letter: /[\u0104]/g, alternative: "A" }, { letter: /[\u0107]/g, alternative: "c" }, { letter: /[\u0106]/g, alternative: "C" }, { letter: /[\u0119]/g, alternative: "e" }, { letter: /[\u0118]/g, alternative: "E" }, { letter: /[\u0142]/g, alternative: "l" }, { letter: /[\u0141]/g, alternative: "L" }, { letter: /[\u0144]/g, alternative: "n" }, { letter: /[\u0143]/g, alternative: "N" }, { letter: /[\u00F3]/g, alternative: "o" }, { letter: /[\u00D3]/g, alternative: "O" }, { letter: /[\u015B]/g, alternative: "s" }, { letter: /[\u015A]/g, alternative: "S" }, { letter: /[\u017A\u017C]/g, alternative: "z" }, { letter: /[\u0179\u017B]/g, alternative: "Z" }],
  // Language: German.
  // Source: https://en.wikipedia.org/wiki/German_orthography#Special_characters
  de: [{ letter: /[\u00E4]/g, alternative: "ae" }, { letter: /[\u00C4]/g, alternative: "Ae" }, { letter: /[\u00FC]/g, alternative: "ue" }, { letter: /[\u00DC]/g, alternative: "Ue" }, { letter: /[\u00F6]/g, alternative: "oe" }, { letter: /[\u00D6]/g, alternative: "Oe" }, { letter: /[\u00DF]/g, alternative: "ss" }, { letter: /[\u1E9E]/g, alternative: "SS" }],
  // Language Bokmål
  // Source: http://www.dagbladet.no/2011/12/30/tema/reise/reiseeksperter/forbrukerrettigheter/19494227/
  // Language Nynorks
  // Source: http://www.dagbladet.no/2011/12/30/tema/reise/reiseeksperter/forbrukerrettigheter/19494227/
  // Bokmål and Nynorks use the same transliterations
  nbnn: [{ letter: /[\u00E6\u04D5]/g, alternative: "ae" }, { letter: /[\u00C6\u04D4]/g, alternative: "Ae" }, { letter: /[\u00E5]/g, alternative: "aa" }, { letter: /[\u00C5]/g, alternative: "Aa" }, { letter: /[\u00F8]/g, alternative: "oe" }, { letter: /[\u00D8]/g, alternative: "Oe" }, { letter: /[\u00E9\u00E8\u00EA]/g, alternative: "e" }, { letter: /[\u00C9\u00C8\u00CA]/g, alternative: "E" }, { letter: /[\u00F3\u00F2\u00F4]/g, alternative: "o" }, { letter: /[\u00D3\u00D2\u00D4]/g, alternative: "O" }],
  // Language: Swedish.
  // Sources: https://sv.wikipedia.org/wiki/%C3%85#Historia
  // http://forum.wordreference.com/threads/swedish-%C3%A4-ae-%C3%B6-oe-acceptable.1451839/
  sv: [{ letter: /[\u00E5]/g, alternative: "aa" }, { letter: /[\u00C5]/g, alternative: "Aa" }, { letter: /[\u00E4]/g, alternative: "ae" }, { letter: /[\u00C4]/g, alternative: "Ae" }, { letter: /[\u00F6]/g, alternative: "oe" }, { letter: /[\u00D6]/g, alternative: "Oe" }, { letter: /[\u00E9]/g, alternative: "e" }, { letter: /[\u00C9]/g, alternative: "E" }, { letter: /[\u00E0]/g, alternative: "a" }, { letter: /[\u00C0]/g, alternative: "A" }],
  // Language: Finnish.
  // Sources: https://www.cs.tut.fi/~jkorpela/lang/finnish-letters.html
  // https://en.wikipedia.org/wiki/Finnish_orthography
  fi: [{ letter: /[\u00E5]/g, alternative: "aa" }, { letter: /[\u00C5]/g, alternative: "Aa" }, { letter: /[\u00E4]/g, alternative: "a" }, { letter: /[\u00C4]/g, alternative: "A" }, { letter: /[\u00F6]/g, alternative: "o" }, { letter: /[\u00D6]/g, alternative: "O" }, { letter: /[\u017E]/g, alternative: "zh" }, { letter: /[\u017D]/g, alternative: "Zh" }, { letter: /[\u0161]/g, alternative: "sh" }, { letter: /[\u0160]/g, alternative: "Sh" }],
  // Language: Danish.
  // Sources: https://sv.wikipedia.org/wiki/%C3%85#Historia
  // https://en.wikipedia.org/wiki/Danish_orthography
  da: [{ letter: /[\u00E5]/g, alternative: "aa" }, { letter: /[\u00C5]/g, alternative: "Aa" }, { letter: /[\u00E6\u04D5]/g, alternative: "ae" }, { letter: /[\u00C6\u04D4]/g, alternative: "Ae" }, { letter: /[\u00C4]/g, alternative: "Ae" }, { letter: /[\u00F8]/g, alternative: "oe" }, { letter: /[\u00D8]/g, alternative: "Oe" }, { letter: /[\u00E9]/g, alternative: "e" }, { letter: /[\u00C9]/g, alternative: "E" }],
  // Language: Turkish.
  // Source: https://en.wikipedia.org/wiki/Turkish_alphabet
  // ‘İ’ is the capital dotted ‘i’. Its lowercase counterpart is the ‘regular’ ‘i’.
  tr: [{ letter: /[\u00E7]/g, alternative: "c" }, { letter: /[\u00C7]/g, alternative: "C" }, { letter: /[\u011F]/g, alternative: "g" }, { letter: /[\u011E]/g, alternative: "G" }, { letter: /[\u00F6]/g, alternative: "o" }, { letter: /[\u00D6]/g, alternative: "O" }, { letter: /[\u015F]/g, alternative: "s" }, { letter: /[\u015E]/g, alternative: "S" }, { letter: /[\u00E2]/g, alternative: "a" }, { letter: /[\u00C2]/g, alternative: "A" }, { letter: /[\u0131\u00EE]/g, alternative: "i" }, { letter: /[\u0130\u00CE]/g, alternative: "I" }, { letter: /[\u00FC\u00FB]/g, alternative: "u" }, { letter: /[\u00DC\u00DB]/g, alternative: "U" }],
  // Language: Latvian.
  // Source: https://en.wikipedia.org/wiki/Latvian_orthography
  lv: [{ letter: /[\u0101]/g, alternative: "a" }, { letter: /[\u0100]/g, alternative: "A" }, { letter: /[\u010D]/g, alternative: "c" }, { letter: /[\u010C]/g, alternative: "C" }, { letter: /[\u0113]/g, alternative: "e" }, { letter: /[\u0112]/g, alternative: "E" }, { letter: /[\u0123]/g, alternative: "g" }, { letter: /[\u0122]/g, alternative: "G" }, { letter: /[\u012B]/g, alternative: "i" }, { letter: /[\u012A]/g, alternative: "I" }, { letter: /[\u0137]/g, alternative: "k" }, { letter: /[\u0136]/g, alternative: "K" }, { letter: /[\u013C]/g, alternative: "l" }, { letter: /[\u013B]/g, alternative: "L" }, { letter: /[\u0146]/g, alternative: "n" }, { letter: /[\u0145]/g, alternative: "N" }, { letter: /[\u0161]/g, alternative: "s" }, { letter: /[\u0160]/g, alternative: "S" }, { letter: /[\u016B]/g, alternative: "u" }, { letter: /[\u016A]/g, alternative: "U" }, { letter: /[\u017E]/g, alternative: "z" }, { letter: /[\u017D]/g, alternative: "Z" }],
  // Language: Icelandic.
  // Sources: https://en.wikipedia.org/wiki/Thorn_(letter),
  // https://en.wikipedia.org/wiki/Eth,  https://en.wikipedia.org/wiki/Icelandic_orthography
  is: [{ letter: /[\u00E1]/g, alternative: "a" }, { letter: /[\u00C1]/g, alternative: "A" }, { letter: /[\u00F0]/g, alternative: "d" }, { letter: /[\u00D0]/g, alternative: "D" }, { letter: /[\u00E9]/g, alternative: "e" }, { letter: /[\u00C9]/g, alternative: "E" }, { letter: /[\u00ED]/g, alternative: "i" }, { letter: /[\u00CD]/g, alternative: "I" }, { letter: /[\u00F3\u00F6]/g, alternative: "o" }, { letter: /[\u00D3\u00D6]/g, alternative: "O" }, { letter: /[\u00FA]/g, alternative: "u" }, { letter: /[\u00DA]/g, alternative: "U" }, { letter: /[\u00FD]/g, alternative: "y" }, { letter: /[\u00DD]/g, alternative: "Y" }, { letter: /[\u00FE]/g, alternative: "th" }, { letter: /[\u00DE]/g, alternative: "Th" }, { letter: /[\u00E6\u04D5]/g, alternative: "ae" }, { letter: /[\u00C6\u04D4]/g, alternative: "Ae" }],
  // Language: Faroese.
  // Source: https://www.facebook.com/groups/1557965757758234/permalink/1749847165236758/ (conversation in private Facebook Group ‘Faroese Language Learning Enthusiasts’)
  // depending on the word, ð can be d, g, j, v, ng or nothing. However, ‘d’ is most frequent.
  // when writing text messages or using a foreign keyboard, í is sometimes written as ij, ý as yj, ú as uv, ó as ov, ø as oe, and á as aa or oa.
  // However, in website URLs the alternatives mentioned below are by far the most common.
  fa: [{ letter: /[\u00E1]/g, alternative: "a" }, { letter: /[\u00C1]/g, alternative: "A" }, { letter: /[\u00F0]/g, alternative: "d" }, { letter: /[\u00D0]/g, alternative: "D" }, { letter: /[\u00ED]/g, alternative: "i" }, { letter: /[\u00CD]/g, alternative: "I" }, { letter: /[\u00FD]/g, alternative: "y" }, { letter: /[\u00DD]/g, alternative: "Y" }, { letter: /[\u00FA]/g, alternative: "u" }, { letter: /[\u00DA]/g, alternative: "U" }, { letter: /[\u00F3\u00F8]/g, alternative: "o" }, { letter: /[\u00D3\u00D8]/g, alternative: "O" }, { letter: /[\u00E6\u04D5]/g, alternative: "ae" }, { letter: /[\u00C6\u04D4]/g, alternative: "Ae" }],
  // Language: Czech.
  // Source: https://en.wikipedia.org/wiki/Czech_orthography
  cs: [{ letter: /[\u00E1]/g, alternative: "a" }, { letter: /[\u00C1]/g, alternative: "A" }, { letter: /[\u010D]/g, alternative: "c" }, { letter: /[\u010C]/g, alternative: "C" }, { letter: /[\u010F]/g, alternative: "d" }, { letter: /[\u010E]/g, alternative: "D" }, { letter: /[\u00ED]/g, alternative: "i" }, { letter: /[\u00CD]/g, alternative: "I" }, { letter: /[\u0148]/g, alternative: "n" }, { letter: /[\u0147]/g, alternative: "N" }, { letter: /[\u00F3]/g, alternative: "o" }, { letter: /[\u00D3]/g, alternative: "O" }, { letter: /[\u0159]/g, alternative: "r" }, { letter: /[\u0158]/g, alternative: "R" }, { letter: /[\u0161]/g, alternative: "s" }, { letter: /[\u0160]/g, alternative: "S" }, { letter: /[\u0165]/g, alternative: "t" }, { letter: /[\u0164]/g, alternative: "T" }, { letter: /[\u00FD]/g, alternative: "y" }, { letter: /[\u00DD]/g, alternative: "Y" }, { letter: /[\u017E]/g, alternative: "z" }, { letter: /[\u017D]/g, alternative: "Z" }, { letter: /[\u00E9\u011B]/g, alternative: "e" }, { letter: /[\u00C9\u011A]/g, alternative: "E" }, { letter: /[\u00FA\u016F]/g, alternative: "u" }, { letter: /[\u00DA\u016E]/g, alternative: "U" }],
  // Language: Russian.
  // Source:  Machine Readable Travel Documents, Doc 9303, Part 1, Volume 1 (PDF) (Sixth ed.).
  // ICAO. 2006. p. IV-50—IV-52. http://www.icao.int/publications/Documents/9303_p3_cons_en.pdf
  // ‘ь’ is the so-called soft sign, indicating a sound change (palatalization) of the preceding consonant.
  // In text it is transliterated to a character similar to an apostroph: ′.
  // I recommend omittance in slugs. (https://en.wikipedia.org/wiki/Romanization_of_Russian)
  ru: [{ letter: /[\u0430]/g, alternative: "a" }, { letter: /[\u0410]/g, alternative: "A" }, { letter: /[\u0431]/g, alternative: "b" }, { letter: /[\u0411]/g, alternative: "B" }, { letter: /[\u0432]/g, alternative: "v" }, { letter: /[\u0412]/g, alternative: "V" }, { letter: /[\u0433]/g, alternative: "g" }, { letter: /[\u0413]/g, alternative: "G" }, { letter: /[\u0434]/g, alternative: "d" }, { letter: /[\u0414]/g, alternative: "D" }, { letter: /[\u0435]/g, alternative: "e" }, { letter: /[\u0415]/g, alternative: "E" }, { letter: /[\u0436]/g, alternative: "zh" }, { letter: /[\u0416]/g, alternative: "Zh" }, { letter: /[\u0437]/g, alternative: "z" }, { letter: /[\u0417]/g, alternative: "Z" }, { letter: /[\u0456\u0438\u0439]/g, alternative: "i" }, { letter: /[\u0406\u0418\u0419]/g, alternative: "I" }, { letter: /[\u043A]/g, alternative: "k" }, { letter: /[\u041A]/g, alternative: "K" }, { letter: /[\u043B]/g, alternative: "l" }, { letter: /[\u041B]/g, alternative: "L" }, { letter: /[\u043C]/g, alternative: "m" }, { letter: /[\u041C]/g, alternative: "M" }, { letter: /[\u043D]/g, alternative: "n" }, { letter: /[\u041D]/g, alternative: "N" }, { letter: /[\u0440]/g, alternative: "r" }, { letter: /[\u0420]/g, alternative: "R" }, { letter: /[\u043E]/g, alternative: "o" }, { letter: /[\u041E]/g, alternative: "O" }, { letter: /[\u043F]/g, alternative: "p" }, { letter: /[\u041F]/g, alternative: "P" }, { letter: /[\u0441]/g, alternative: "s" }, { letter: /[\u0421]/g, alternative: "S" }, { letter: /[\u0442]/g, alternative: "t" }, { letter: /[\u0422]/g, alternative: "T" }, { letter: /[\u0443]/g, alternative: "u" }, { letter: /[\u0423]/g, alternative: "U" }, { letter: /[\u0444]/g, alternative: "f" }, { letter: /[\u0424]/g, alternative: "F" }, { letter: /[\u0445]/g, alternative: "kh" }, { letter: /[\u0425]/g, alternative: "Kh" }, { letter: /[\u0446]/g, alternative: "ts" }, { letter: /[\u0426]/g, alternative: "Ts" }, { letter: /[\u0447]/g, alternative: "ch" }, { letter: /[\u0427]/g, alternative: "Ch" }, { letter: /[\u0448]/g, alternative: "sh" }, { letter: /[\u0428]/g, alternative: "Sh" }, { letter: /[\u0449]/g, alternative: "shch" }, { letter: /[\u0429]/g, alternative: "Shch" }, { letter: /[\u044A]/g, alternative: "ie" }, { letter: /[\u042A]/g, alternative: "Ie" }, { letter: /[\u044B]/g, alternative: "y" }, { letter: /[\u042B]/g, alternative: "Y" }, { letter: /[\u044C]/g, alternative: "" }, { letter: /[\u042C]/g, alternative: "" }, { letter: /[\u0451\u044D]/g, alternative: "e" }, { letter: /[\u0401\u042D]/g, alternative: "E" }, { letter: /[\u044E]/g, alternative: "iu" }, { letter: /[\u042E]/g, alternative: "Iu" }, { letter: /[\u044F]/g, alternative: "ia" }, { letter: /[\u042F]/g, alternative: "Ia" }],
  // Language: Esperanto.
  // Source: https://en.wikipedia.org/wiki/Esperanto#Writing_diacritics
  eo: [{ letter: /[\u0109]/g, alternative: "ch" }, { letter: /[\u0108]/g, alternative: "Ch" }, { letter: /[\u011d]/g, alternative: "gh" }, { letter: /[\u011c]/g, alternative: "Gh" }, { letter: /[\u0125]/g, alternative: "hx" }, { letter: /[\u0124]/g, alternative: "Hx" }, { letter: /[\u0135]/g, alternative: "jx" }, { letter: /[\u0134]/g, alternative: "Jx" }, { letter: /[\u015d]/g, alternative: "sx" }, { letter: /[\u015c]/g, alternative: "Sx" }, { letter: /[\u016d]/g, alternative: "ux" }, { letter: /[\u016c]/g, alternative: "Ux" }],
  // Language: Afrikaans.
  // Source: https://en.wikipedia.org/wiki/Afrikaans#Orthography
  af: [{ letter: /[\u00E8\u00EA\u00EB]/g, alternative: "e" }, { letter: /[\u00CB\u00C8\u00CA]/g, alternative: "E" }, { letter: /[\u00EE\u00EF]/g, alternative: "i" }, { letter: /[\u00CE\u00CF]/g, alternative: "I" }, { letter: /[\u00F4\u00F6]/g, alternative: "o" }, { letter: /[\u00D4\u00D6]/g, alternative: "O" }, { letter: /[\u00FB\u00FC]/g, alternative: "u" }, { letter: /[\u00DB\u00DC]/g, alternative: "U" }],
  // Language: Catalan.
  // Source: https://en.wikipedia.org/wiki/Catalan_orthography
  ca: [{ letter: /[\u00E0]/g, alternative: "a" }, { letter: /[\u00C0]/g, alternative: "A" }, { letter: /[\u00E9|\u00E8]/g, alternative: "e" }, { letter: /[\u00C9|\u00C8]/g, alternative: "E" }, { letter: /[\u00ED|\u00EF]/g, alternative: "i" }, { letter: /[\u00CD|\u00CF]/g, alternative: "I" }, { letter: /[\u00F3|\u00F2]/g, alternative: "o" }, { letter: /[\u00D3|\u00D2]/g, alternative: "O" }, { letter: /[\u00FA|\u00FC]/g, alternative: "u" }, { letter: /[\u00DA|\u00DC]/g, alternative: "U" }, { letter: /[\u00E7]/g, alternative: "c" }, { letter: /[\u00C7]/g, alternative: "C" }],
  // Language: Asturian.
  // Source: http://www.orbilat.com/Languages/Asturian/Grammar/Asturian-Alphabet.html
  ast: [{ letter: /[\u00F1]/g, alternative: "n" }, { letter: /[\u00D1]/g, alternative: "N" }],
  // Language: Aragonese.
  // Source: https://en.wikipedia.org/wiki/Aragonese_language#Orthography
  an: [{ letter: /[\u00FC]/g, alternative: "u" }, { letter: /[\u00F1]/g, alternative: "ny" }, { letter: /[\u00E7]/g, alternative: "c" }, { letter: /[\u00ED]/g, alternative: "i" }, { letter: /[\u00F3]/g, alternative: "o" }, { letter: /[\u00E1]/g, alternative: "a" }, { letter: /[\u00DC]/g, alternative: "U" }, { letter: /[\u00D1]/g, alternative: "Ny" }, { letter: /[\u00C7]/g, alternative: "C" }, { letter: /[\u00CD]/g, alternative: "I" }, { letter: /[\u00D3]/g, alternative: "O" }, { letter: /[\u00C1]/g, alternative: "A" }],
  // Language: Aymara.
  // Source: http://www.omniglot.com/writing/aymara.htm
  ay: [{ letter: /(([\u00EF])|([\u00ED]))/g, alternative: "i" }, { letter: /(([\u00CF])|([\u00CD]))/g, alternative: "I" }, { letter: /[\u00E4]/g, alternative: "a" }, { letter: /[\u00C4]/g, alternative: "A" }, { letter: /[\u00FC]/g, alternative: "u" }, { letter: /[\u00DC]/g, alternative: "U" }, { letter: /[\u0027]/g, alternative: "" }, { letter: /[\u00F1]/g, alternative: "n" }, { letter: /[\u00D1]/g, alternative: "N" }],
  // Language: English.
  // Sources: https://en.wikipedia.org/wiki/English_terms_with_diacritical_marks https://en.wikipedia.org/wiki/English_orthography
  en: [{ letter: /[\u00E6\u04D5]/g, alternative: "ae" }, { letter: /[\u00C6\u04D4]/g, alternative: "Ae" }, { letter: /[\u0153]/g, alternative: "oe" }, { letter: /[\u0152]/g, alternative: "Oe" }, { letter: /[\u00EB\u00E9]/g, alternative: "e" }, { letter: /[\u00C9\u00CB]/g, alternative: "E" }, { letter: /[\u00F4\u00F6]/g, alternative: "o" }, { letter: /[\u00D4\u00D6]/g, alternative: "O" }, { letter: /[\u00EF]/g, alternative: "i" }, { letter: /[\u00CF]/g, alternative: "I" }, { letter: /[\u00E7]/g, alternative: "c" }, { letter: /[\u00C7]/g, alternative: "C" }, { letter: /[\u00F1]/g, alternative: "n" }, { letter: /[\u00D1]/g, alternative: "N" }, { letter: /[\u00FC]/g, alternative: "u" }, { letter: /[\u00DC]/g, alternative: "U" }, { letter: /[\u00E4]/g, alternative: "a" }, { letter: /[\u00C4]/g, alternative: "A" }],
  // Language: French.
  // Sources: https://en.wikipedia.org/wiki/French_orthography#Ligatures https://en.wikipedia.org/wiki/French_orthography#Diacritics
  fr: [{ letter: /[\u00E6\u04D5]/g, alternative: "ae" }, { letter: /[\u00C6\u04D4]/g, alternative: "Ae" }, { letter: /[\u0153]/g, alternative: "oe" }, { letter: /[\u0152]/g, alternative: "Oe" }, { letter: /[\u00E9\u00E8\u00EB\u00EA]/g, alternative: "e" }, { letter: /[\u00C9\u00C8\u00CB\u00CA]/g, alternative: "E" }, { letter: /[\u00E0\u00E2]/g, alternative: "a" }, { letter: /[\u00C0\u00C2]/g, alternative: "A" }, { letter: /[\u00EF\u00EE]/g, alternative: "i" }, { letter: /[\u00CF\u00CE]/g, alternative: "I" }, { letter: /[\u00F9\u00FB\u00FC]/g, alternative: "u" }, { letter: /[\u00D9\u00DB\u00DC]/g, alternative: "U" }, { letter: /[\u00F4]/g, alternative: "o" }, { letter: /[\u00D4]/g, alternative: "O" }, { letter: /[\u00FF]/g, alternative: "y" }, { letter: /[\u0178]/g, alternative: "Y" }, { letter: /[\u00E7]/g, alternative: "c" }, { letter: /[\u00C7]/g, alternative: "C" }, { letter: /[\u00F1]/g, alternative: "n" }, { letter: /[\u00D1]/g, alternative: "N" }],
  // Language: Italian.
  // Source: https://en.wikipedia.org/wiki/Italian_orthography
  it: [{ letter: /[\u00E0]/g, alternative: "a" }, { letter: /[\u00C0]/g, alternative: "A" }, { letter: /[\u00E9\u00E8]/g, alternative: "e" }, { letter: /[\u00C9\u00C8]/g, alternative: "E" }, { letter: /[\u00EC\u00ED\u00EE]/g, alternative: "i" }, { letter: /[\u00CC\u00CD\u00CE]/g, alternative: "I" }, { letter: /[\u00F3\u00F2]/g, alternative: "o" }, { letter: /[\u00D3\u00D2]/g, alternative: "O" }, { letter: /[\u00F9\u00FA]/g, alternative: "u" }, { letter: /[\u00D9\u00DA]/g, alternative: "U" }],
  // Language: Dutch.
  // Sources: https://en.wikipedia.org/wiki/Dutch_orthography https://nl.wikipedia.org/wiki/Trema_in_de_Nederlandse_spelling
  nl: [{ letter: /[\u00E7]/g, alternative: "c" }, { letter: /[\u00C7]/g, alternative: "C" }, { letter: /[\u00F1]/g, alternative: "n" }, { letter: /[\u00D1]/g, alternative: "N" }, { letter: /[\u00E9\u00E8\u00EA\u00EB]/g, alternative: "e" }, { letter: /[\u00C9\u00C8\u00CA\u00CB]/g, alternative: "E" }, { letter: /[\u00F4\u00F6]/g, alternative: "o" }, { letter: /[\u00D4\u00D6]/g, alternative: "O" }, { letter: /[\u00EF]/g, alternative: "i" }, { letter: /[\u00CF]/g, alternative: "I" }, { letter: /[\u00FC]/g, alternative: "u" }, { letter: /[\u00DC]/g, alternative: "U" }, { letter: /[\u00E4]/g, alternative: "a" }, { letter: /[\u00C4]/g, alternative: "A" }],
  // Language: Bambara.
  // Sources: http://www.omniglot.com/writing/bambara.htm https://en.wikipedia.org/wiki/Bambara_language
  bm: [{ letter: /[\u025B]/g, alternative: "e" }, { letter: /[\u0190]/g, alternative: "E" }, { letter: /[\u0272]/g, alternative: "ny" }, { letter: /[\u019D]/g, alternative: "Ny" }, { letter: /[\u014B]/g, alternative: "ng" }, { letter: /[\u014A]/g, alternative: "Ng" }, { letter: /[\u0254]/g, alternative: "o" }, { letter: /[\u0186]/g, alternative: "O" }],
  // Language: Ukrainian.
  // Source: Resolution no. 55 of the Cabinet of Ministers of Ukraine, January 27, 2010 http://zakon2.rada.gov.ua/laws/show/55-2010-%D0%BF
  // ‘ь’ is the so-called soft sign, indicating a sound change (palatalization) of the preceding consonant. In text it is sometimes transliterated
  // to a character similar to an apostroph: ′. Omittance is recommended in slugs (https://en.wikipedia.org/wiki/Romanization_of_Ukrainian).
  uk: [{ letter: /[\u0431]/g, alternative: "b" }, { letter: /[\u0411]/g, alternative: "B" }, { letter: /[\u0432]/g, alternative: "v" }, { letter: /[\u0412]/g, alternative: "V" }, { letter: /[\u0433]/g, alternative: "h" }, { letter: /[\u0413]/g, alternative: "H" }, { letter: /[\u0491]/g, alternative: "g" }, { letter: /[\u0490]/g, alternative: "G" }, { letter: /[\u0434]/g, alternative: "d" }, { letter: /[\u0414]/g, alternative: "D" }, { letter: /[\u043A]/g, alternative: "k" }, { letter: /[\u041A]/g, alternative: "K" }, { letter: /[\u043B]/g, alternative: "l" }, { letter: /[\u041B]/g, alternative: "L" }, { letter: /[\u043C]/g, alternative: "m" }, { letter: /[\u041C]/g, alternative: "M" }, { letter: /[\u0070]/g, alternative: "r" }, { letter: /[\u0050]/g, alternative: "R" }, { letter: /[\u043F]/g, alternative: "p" }, { letter: /[\u041F]/g, alternative: "P" }, { letter: /[\u0441]/g, alternative: "s" }, { letter: /[\u0421]/g, alternative: "S" }, { letter: /[\u0442]/g, alternative: "t" }, { letter: /[\u0422]/g, alternative: "T" }, { letter: /[\u0443]/g, alternative: "u" }, { letter: /[\u0423]/g, alternative: "U" }, { letter: /[\u0444]/g, alternative: "f" }, { letter: /[\u0424]/g, alternative: "F" }, { letter: /[\u0445]/g, alternative: "kh" }, { letter: /[\u0425]/g, alternative: "Kh" }, { letter: /[\u0446]/g, alternative: "ts" }, { letter: /[\u0426]/g, alternative: "Ts" }, { letter: /[\u0447]/g, alternative: "ch" }, { letter: /[\u0427]/g, alternative: "Ch" }, { letter: /[\u0448]/g, alternative: "sh" }, { letter: /[\u0428]/g, alternative: "Sh" }, { letter: /[\u0449]/g, alternative: "shch" }, { letter: /[\u0429]/g, alternative: "Shch" }, { letter: /[\u044C\u042C]/g, alternative: "" }, { letter: /[\u0436]/g, alternative: "zh" }, { letter: /[\u0416]/g, alternative: "Zh" }, { letter: /[\u0437]/g, alternative: "z" }, { letter: /[\u0417]/g, alternative: "Z" }, { letter: /[\u0438]/g, alternative: "y" }, { letter: /[\u0418]/g, alternative: "Y" }, { letter: /^[\u0454]/g, alternative: "ye" }, { letter: /[\s][\u0454]/g, alternative: " ye" }, { letter: /[\u0454]/g, alternative: "ie" }, { letter: /^[\u0404]/g, alternative: "Ye" }, { letter: /[\s][\u0404]/g, alternative: " Ye" }, { letter: /[\u0404]/g, alternative: "IE" }, { letter: /^[\u0457]/g, alternative: "yi" }, { letter: /[\s][\u0457]/g, alternative: " yi" }, { letter: /[\u0457]/g, alternative: "i" }, { letter: /^[\u0407]/g, alternative: "Yi" }, { letter: /[\s][\u0407]/g, alternative: " Yi" }, { letter: /[\u0407]/g, alternative: "I" }, { letter: /^[\u0439]/g, alternative: "y" }, { letter: /[\s][\u0439]/g, alternative: " y" }, { letter: /[\u0439]/g, alternative: "i" }, { letter: /^[\u0419]/g, alternative: "Y" }, { letter: /[\s][\u0419]/g, alternative: " Y" }, { letter: /[\u0419]/g, alternative: "I" }, { letter: /^[\u044E]/g, alternative: "yu" }, { letter: /[\s][\u044E]/g, alternative: " yu" }, { letter: /[\u044E]/g, alternative: "iu" }, { letter: /^[\u042E]/g, alternative: "Yu" }, { letter: /[\s][\u042E]/g, alternative: " Yu" }, { letter: /[\u042E]/g, alternative: "IU" }, { letter: /^[\u044F]/g, alternative: "ya" }, { letter: /[\s][\u044F]/g, alternative: " ya" }, { letter: /[\u044F]/g, alternative: "ia" }, { letter: /^[\u042F]/g, alternative: "Ya" }, { letter: /[\s][\u042F]/g, alternative: " Ya" }, { letter: /[\u042F]/g, alternative: "IA" }],
  // Language: Breton
  // Source: http://www.omniglot.com/writing/breton.htm
  br: [{ letter: /\u0063\u0027\u0068/g, alternative: "ch" }, { letter: /\u0043\u0027\u0048/g, alternative: "CH" }, { letter: /[\u00e2]/g, alternative: "a" }, { letter: /[\u00c2]/g, alternative: "A" }, { letter: /[\u00ea]/g, alternative: "e" }, { letter: /[\u00ca]/g, alternative: "E" }, { letter: /[\u00ee]/g, alternative: "i" }, { letter: /[\u00ce]/g, alternative: "I" }, { letter: /[\u00f4]/g, alternative: "o" }, { letter: /[\u00d4]/g, alternative: "O" }, { letter: /[\u00fb\u00f9\u00fc]/g, alternative: "u" }, { letter: /[\u00db\u00d9\u00dc]/g, alternative: "U" }, { letter: /[\u00f1]/g, alternative: "n" }, { letter: /[\u00d1]/g, alternative: "N" }],
  // Language: Chamorro
  // Source: http://www.omniglot.com/writing/chamorro.htm
  ch: [{ letter: /[\u0027]/g, alternative: "" }, { letter: /[\u00e5]/g, alternative: "a" }, { letter: /[\u00c5]/g, alternative: "A" }, { letter: /[\u00f1]/g, alternative: "n" }, { letter: /[\u00d1]/g, alternative: "N" }],
  // Language: Corsican
  // Sources: http://www.omniglot.com/writing/corsican.htm https://en.wikipedia.org/wiki/Corsican_alphabet
  co: [{ letter: /[\u00e2\u00e0]/g, alternative: "a" }, { letter: /[\u00c2\u00c0]/g, alternative: "A" }, { letter: /[\u00e6\u04d5]/g, alternative: "ae" }, { letter: /[\u00c6\u04d4]/g, alternative: "Ae" }, { letter: /[\u00e7]/g, alternative: "c" }, { letter: /[\u00c7]/g, alternative: "C" }, { letter: /[\u00e9\u00ea\u00e8\u00eb]/g, alternative: "e" }, { letter: /[\u00c9\u00ca\u00c8\u00cb]/g, alternative: "E" }, { letter: /[\u00ec\u00ee\u00ef]/g, alternative: "i" }, { letter: /[\u00cc\u00ce\u00cf]/g, alternative: "I" }, { letter: /[\u00f1]/g, alternative: "n" }, { letter: /[\u00d1]/g, alternative: "N" }, { letter: /[\u00f4\u00f2]/g, alternative: "o" }, { letter: /[\u00d4\u00d2]/g, alternative: "O" }, { letter: /[\u0153]/g, alternative: "oe" }, { letter: /[\u0152]]/g, alternative: "Oe" }, { letter: /[\u00f9\u00fc]/g, alternative: "u" }, { letter: /[\u00d9\u00dc]/g, alternative: "U" }, { letter: /[\u00ff]/g, alternative: "y" }, { letter: /[\u0178]/g, alternative: "Y" }],
  // Language: Kashubian
  // Sources: http://www.omniglot.com/writing/kashubian.htm https://en.wikipedia.org/wiki/Kashubian_language
  csb: [{ letter: /[\u0105\u00e3]/g, alternative: "a" }, { letter: /[\u0104\u00c3]/g, alternative: "A" }, { letter: /[\u00e9\u00eb]/g, alternative: "e" }, { letter: /[\u00c9\u00cb]/g, alternative: "E" }, { letter: /[\u0142]/g, alternative: "l" }, { letter: /[\u0141]/g, alternative: "L" }, { letter: /[\u0144]/g, alternative: "n" }, { letter: /[\u0143]/g, alternative: "N" }, { letter: /[\u00f2\u00f3\u00f4]/g, alternative: "o" }, { letter: /[\u00d2\u00d3\u00d4]/g, alternative: "O" }, { letter: /[\u00f9]/g, alternative: "u" }, { letter: /[\u00d9]/g, alternative: "U" }, { letter: /[\u017c]/g, alternative: "z" }, { letter: /[\u017b]/g, alternative: "Z" }],
  // Language: Welsh
  // Sources: http://www.omniglot.com/writing/welsh.htm https://en.wikipedia.org/wiki/Welsh_orthography#Diacritics
  cy: [{ letter: /[\u00e2]/g, alternative: "a" }, { letter: /[\u00c2]/g, alternative: "A" }, { letter: /[\u00ea]/g, alternative: "e" }, { letter: /[\u00ca]/g, alternative: "E" }, { letter: /[\u00ee]/g, alternative: "i" }, { letter: /[\u00ce]/g, alternative: "I" }, { letter: /[\u00f4]/g, alternative: "o" }, { letter: /[\u00d4]/g, alternative: "O" }, { letter: /[\u00fb]/g, alternative: "u" }, { letter: /[\u00db]/g, alternative: "U" }, { letter: /[\u0175]/g, alternative: "w" }, { letter: /[\u0174]/g, alternative: "W" }, { letter: /[\u0177]/g, alternative: "y" }, { letter: /[\u0176]/g, alternative: "Y" }],
  // Language: Ewe
  // Sources: http://www.omniglot.com/writing/ewe.htm https://en.wikipedia.org/wiki/Ewe_language#Writing_system
  ee: [{ letter: /[\u0256]/g, alternative: "d" }, { letter: /[\u0189]/g, alternative: "D" }, { letter: /[\u025b]/g, alternative: "e" }, { letter: /[\u0190]/g, alternative: "E" }, { letter: /[\u0192]/g, alternative: "f" }, { letter: /[\u0191]/g, alternative: "F" }, { letter: /[\u0263]/g, alternative: "g" }, { letter: /[\u0194]/g, alternative: "G" }, { letter: /[\u014b]/g, alternative: "ng" }, { letter: /[\u014a]/g, alternative: "Ng" }, { letter: /[\u0254]/g, alternative: "o" }, { letter: /[\u0186]/g, alternative: "O" }, { letter: /[\u028b]/g, alternative: "w" }, { letter: /[\u01b2]/g, alternative: "W" }, { letter: /\u0061\u0303/g, alternative: "a" }, { letter: /[\u00e1\u00e0\u01ce\u00e2\u00e3]/g, alternative: "a" }, { letter: /\u0041\u0303/g, alternative: "A" }, { letter: /[\u00c1\u00c0\u01cd\u00c2\u00c3]/g, alternative: "A" }, { letter: /[\u00e9\u00e8\u011b\u00ea]/g, alternative: "e" }, { letter: /[\u00c9\u00c8\u011a\u00ca]/g, alternative: "E" }, { letter: /[\u00f3\u00f2\u01d2\u00f4]/g, alternative: "o" }, { letter: /[\u00d3\u00d2\u01d1\u00d4]/g, alternative: "O" }, { letter: /[\u00fa\u00f9\u01d4\u00fb]/g, alternative: "u" }, { letter: /[\u00da\u00d9\u01d3\u00db]/g, alternative: "U" }, { letter: /[\u00ed\u00ec\u01d0\u00ee]/g, alternative: "i" }, { letter: /[\u00cd\u00cc\u01cf\u00ce]/g, alternative: "I" }],
  // Language: Estonian
  // Sources: http://www.omniglot.com/writing/estonian.htm https://en.wikipedia.org/wiki/Estonian_orthography https://en.wikipedia.org/wiki/%C5%BD https://en.wikipedia.org/wiki/%C5%A0
  et: [{ letter: /[\u0161]/g, alternative: "sh" }, { letter: /[\u0160]/g, alternative: "Sh" }, { letter: /[\u017e]/g, alternative: "zh" }, { letter: /[\u017d]/g, alternative: "Zh" }, { letter: /[\u00f5\u00f6]/g, alternative: "o" }, { letter: /[\u00d6\u00d5]/g, alternative: "O" }, { letter: /[\u00e4]/g, alternative: "a" }, { letter: /[\u00c4]/g, alternative: "A" }, { letter: /[\u00fc]/g, alternative: "u" }, { letter: /[\u00dc]/g, alternative: "U" }],
  // Language: Basque
  // Sources: http://www.omniglot.com/writing/basque.htm https://en.wikipedia.org/wiki/Basque_language#Writing_system https://en	.wikipedia.org/wiki/Basque_alphabet
  eu: [{ letter: /[\u00f1]/g, alternative: "n" }, { letter: /[\u00d1]/g, alternative: "N" }, { letter: /[\u00e7]/g, alternative: "c" }, { letter: /[\u00c7]/g, alternative: "C" }, { letter: /[\u00fc]/g, alternative: "u" }, { letter: /[\u00dc]/g, alternative: "U" }],
  // Language: Fulah
  // Sources: http://www.omniglot.com/writing/fula.htm https://en.wikipedia.org/wiki/Fula_language#Writing_systems
  fuc: [{ letter: /[\u0253]/g, alternative: "b" }, { letter: /[\u0181]/g, alternative: "B" }, { letter: /[\u0257]/g, alternative: "d" }, { letter: /[\u018a]/g, alternative: "D" }, { letter: /[\u014b]/g, alternative: "ng" }, { letter: /[\u014a]/g, alternative: "Ng" }, { letter: /[\u0272\u00f1]/g, alternative: "ny" }, { letter: /[\u019d\u00d1]/g, alternative: "Ny" }, { letter: /[\u01b4]/g, alternative: "y" }, { letter: /[\u01b3]/g, alternative: "Y" }, { letter: /[\u0260]/g, alternative: "g" }, { letter: /[\u0193]/g, alternative: "G" }],
  // Language: Fijian
  // Source: http://www.omniglot.com/writing/fijian.htm
  fj: [{ letter: /[\u0101]/g, alternative: "a" }, { letter: /[\u0100]/g, alternative: "A" }, { letter: /[\u0113]/g, alternative: "e" }, { letter: /[\u0112]/g, alternative: "E" }, { letter: /[\u012b]/g, alternative: "i" }, { letter: /[\u012a]/g, alternative: "I" }, { letter: /[\u016b]/g, alternative: "u" }, { letter: /[\u016a]/g, alternative: "U" }, { letter: /[\u014d]/g, alternative: "o" }, { letter: /[\u014c]/g, alternative: "O" }],
  // Language: Arpitan (Franco-Provençal language)
  // Source: http://www.omniglot.com/writing/francoprovencal.htm
  frp: [{ letter: /[\u00e2]/g, alternative: "a" }, { letter: /[\u00c2]/g, alternative: "A" }, { letter: /[\u00ea\u00e8\u00e9]/g, alternative: "e" }, { letter: /[\u00ca\u00c8\u00c9]/g, alternative: "E" }, { letter: /[\u00ee]/g, alternative: "i" }, { letter: /[\u00ce]/g, alternative: "I" }, { letter: /[\u00fb\u00fc]/g, alternative: "u" }, { letter: /[\u00db\u00dc]/g, alternative: "U" }, { letter: /[\u00f4]/g, alternative: "o" }, { letter: /[\u00d4]/g, alternative: "O" }],
  // Language: Friulian
  // Sources: https://en.wikipedia.org/wiki/Friulian_language https://en.wikipedia.org/wiki/Faggin-Nazzi_alphabet
  // http://www.omniglot.com/writing/friulian.htm
  fur: [{ letter: /[\u00E7]/g, alternative: "c" }, { letter: /[\u00C7]/g, alternative: "C" }, { letter: /[\u00e0\u00e2]/g, alternative: "a" }, { letter: /[\u00c0\u00c2]/g, alternative: "A" }, { letter: /[\u00e8\u00ea]/g, alternative: "e" }, { letter: /[\u00c8\u00ca]/g, alternative: "E" }, { letter: /[\u00ec\u00ee]/g, alternative: "i" }, { letter: /[\u00cc\u00ce]/g, alternative: "I" }, { letter: /[\u00f2\u00f4]/g, alternative: "o" }, { letter: /[\u00d2\u00d4]/g, alternative: "O" }, { letter: /[\u00f9\u00fb]/g, alternative: "u" }, { letter: /[\u00d9\u00db]/g, alternative: "U" }, { letter: /[\u010d]/g, alternative: "c" }, { letter: /[\u010c]/g, alternative: "C" }, { letter: /[\u011f]/g, alternative: "g" }, { letter: /[\u011e]/g, alternative: "G" }, { letter: /[\u0161]/g, alternative: "s" }, { letter: /[\u0160]/g, alternative: "S" }],
  // Language: Frisian
  // Sources: https://en.wikipedia.org/wiki/West_Frisian_alphabet http://www.omniglot.com/writing/frisian.htm
  fy: [{ letter: /[\u00e2\u0101\u00e4\u00e5]/g, alternative: "a" }, { letter: /[\u00c2\u0100\u00c4\u00c5]/g, alternative: "A" }, { letter: /[\u00ea\u00e9\u0113]/g, alternative: "e" }, { letter: /[\u00ca\u00c9\u0112]/g, alternative: "E" }, { letter: /[\u00f4\u00f6]/g, alternative: "o" }, { letter: /[\u00d4\u00d6]/g, alternative: "O" }, { letter: /[\u00fa\u00fb\u00fc]/g, alternative: "u" }, { letter: /[\u00da\u00db\u00dc]/g, alternative: "U" }, { letter: /[\u00ed]/g, alternative: "i" }, { letter: /[\u00cd]/g, alternative: "I" }, { letter: /[\u0111\u00f0]/g, alternative: "d" }, { letter: /[\u0110\u00d0]/g, alternative: "D" }],
  // Language: Irish
  // Source: https://en.wikipedia.org/wiki/Irish_orthography
  ga: [{ letter: /[\u00e1]/g, alternative: "a" }, { letter: /[\u00c1]/g, alternative: "A" }, { letter: /[\u00e9]/g, alternative: "e" }, { letter: /[\u00c9]/g, alternative: "E" }, { letter: /[\u00f3]/g, alternative: "o" }, { letter: /[\u00d3]/g, alternative: "O" }, { letter: /[\u00fa]/g, alternative: "u" }, { letter: /[\u00da]/g, alternative: "U" }, { letter: /[\u00ed]/g, alternative: "i" }, { letter: /[\u00cd]/g, alternative: "I" }],
  // Language: Scottish Gaelic
  // Sources: https://en.wikipedia.org/wiki/Scottish_Gaelic_orthography http://www.omniglot.com/writing/gaelic.htm
  gd: [{ letter: /[\u00e0]/g, alternative: "a" }, { letter: /[\u00c0]/g, alternative: "A" }, { letter: /[\u00e8]/g, alternative: "e" }, { letter: /[\u00c8]/g, alternative: "E" }, { letter: /[\u00f2]/g, alternative: "o" }, { letter: /[\u00d2]/g, alternative: "O" }, { letter: /[\u00f9]/g, alternative: "u" }, { letter: /[\u00d9]/g, alternative: "U" }, { letter: /[\u00ec]/g, alternative: "i" }, { letter: /[\u00cc]/g, alternative: "I" }],
  // Language: Galician
  // Sources: https://en.wikipedia.org/wiki/Diacritic https://en.wikipedia.org/wiki/Galician_Alphabet
  gl: [{ letter: /[\u00e1\u00e0]/g, alternative: "a" }, { letter: /[\u00c1\u00c0]/g, alternative: "A" }, { letter: /[\u00e9\u00ea]/g, alternative: "e" }, { letter: /[\u00c9\u00ca]/g, alternative: "E" }, { letter: /[\u00ed\u00ef]/g, alternative: "i" }, { letter: /[\u00cd\u00cf]/g, alternative: "I" }, { letter: /[\u00f3]/g, alternative: "o" }, { letter: /[\u00d3]/g, alternative: "O" }, { letter: /[\u00fa\u00fc]/g, alternative: "u" }, { letter: /[\u00da\u00dc]/g, alternative: "U" }, { letter: /[\u00e7]/g, alternative: "c" }, { letter: /[\u00c7]/g, alternative: "C" }, { letter: /[\u00f1]/g, alternative: "n" }, { letter: /[\u00d1]/g, alternative: "N" }],
  // Language: Guarani
  // Sources: https://en.wikipedia.org/wiki/Guarani_alphabet http://www.omniglot.com/writing/guarani.htm
  gn: [{ letter: /[\u2019]/g, alternative: "" }, { letter: /\u0067\u0303/g, alternative: "g" }, { letter: /\u0047\u0303/g, alternative: "G" }, { letter: /[\u00e3]/g, alternative: "a" }, { letter: /[\u00c3]/g, alternative: "A" }, { letter: /[\u1ebd]/g, alternative: "e" }, { letter: /[\u1ebc]/g, alternative: "E" }, { letter: /[\u0129]/g, alternative: "i" }, { letter: /[\u0128]/g, alternative: "I" }, { letter: /[\u00f5]/g, alternative: "o" }, { letter: /[\u00d5]/g, alternative: "O" }, { letter: /[\u00f1]/g, alternative: "n" }, { letter: /[\u00d1]/g, alternative: "N" }, { letter: /[\u0169]/g, alternative: "u" }, { letter: /[\u0168]/g, alternative: "U" }, { letter: /[\u1ef9]/g, alternative: "y" }, { letter: /[\u1ef8]/g, alternative: "Y" }],
  // Language: Swiss German
  // Source: http://www.omniglot.com/writing/swissgerman.htm
  gsw: [{ letter: /[\u00e4]/g, alternative: "a" }, { letter: /[\u00c4]/g, alternative: "A" }, { letter: /[\u00f6]/g, alternative: "o" }, { letter: /[\u00d6]/g, alternative: "O" }, { letter: /[\u00fc]/g, alternative: "u" }, { letter: /[\u00dc]/g, alternative: "U" }],
  // Language: Haitian Creole
  // Sources: https://en.wikipedia.org/wiki/Haitian_Creole http://www.omniglot.com/writing/haitiancreole.htm
  hat: [{ letter: /[\u00e8]/g, alternative: "e" }, { letter: /[\u00c8]/g, alternative: "E" }, { letter: /[\u00f2]/g, alternative: "o" }, { letter: /[\u00d2]/g, alternative: "O" }],
  // Language: Hawaiian
  // Sources: https://en.wikipedia.org/wiki/Hawaiian_language#Macron http://www.omniglot.com/writing/hawaiian.htm
  haw: [{ letter: /[\u02bb\u0027\u2019]/g, alternative: "" }, { letter: /[\u0101]/g, alternative: "a" }, { letter: /[\u0113]/g, alternative: "e" }, { letter: /[\u012b]/g, alternative: "i" }, { letter: /[\u014d]/g, alternative: "o" }, { letter: /[\u016b]/g, alternative: "u" }, { letter: /[\u0100]/g, alternative: "A" }, { letter: /[\u0112]/g, alternative: "E" }, { letter: /[\u012a]/g, alternative: "I" }, { letter: /[\u014c]/g, alternative: "O" }, { letter: /[\u016a]/g, alternative: "U" }],
  // Language: Croatian
  // Sources: https://en.wikipedia.org/wiki/Gaj%27s_Latin_alphabet https://en.wikipedia.org/wiki/D_with_stroke
  // http://www.omniglot.com/writing/croatian.htm
  hr: [{ letter: /[\u010d\u0107]/g, alternative: "c" }, { letter: /[\u010c\u0106]/g, alternative: "C" }, { letter: /[\u0111]/g, alternative: "dj" }, { letter: /[\u0110]/g, alternative: "Dj" }, { letter: /[\u0161]/g, alternative: "s" }, { letter: /[\u0160]/g, alternative: "S" }, { letter: /[\u017e]/g, alternative: "z" }, { letter: /[\u017d]/g, alternative: "Z" }, { letter: /[\u01c4]/g, alternative: "DZ" }, { letter: /[\u01c5]/g, alternative: "Dz" }, { letter: /[\u01c6]/g, alternative: "dz" }],
  // Language: Georgian
  // The Georgian language does not use capital letters.
  // Sources: https://en.wikipedia.org/wiki/Romanization_of_Georgian (national system)
  ka: [{ letter: /[\u10d0]/g, alternative: "a" }, { letter: /[\u10d1]/g, alternative: "b" }, { letter: /[\u10d2]/g, alternative: "g" }, { letter: /[\u10d3]/g, alternative: "d" }, { letter: /[\u10d4]/g, alternative: "e" }, { letter: /[\u10d5]/g, alternative: "v" }, { letter: /[\u10d6]/g, alternative: "z" }, { letter: /[\u10d7]/g, alternative: "t" }, { letter: /[\u10d8]/g, alternative: "i" }, { letter: /[\u10d9]/g, alternative: "k" }, { letter: /[\u10da]/g, alternative: "l" }, { letter: /[\u10db]/g, alternative: "m" }, { letter: /[\u10dc]/g, alternative: "n" }, { letter: /[\u10dd]/g, alternative: "o" }, { letter: /[\u10de]/g, alternative: "p" }, { letter: /[\u10df]/g, alternative: "zh" }, { letter: /[\u10e0]/g, alternative: "r" }, { letter: /[\u10e1]/g, alternative: "s" }, { letter: /[\u10e2]/g, alternative: "t" }, { letter: /[\u10e3]/g, alternative: "u" }, { letter: /[\u10e4]/g, alternative: "p" }, { letter: /[\u10e5]/g, alternative: "k" }, { letter: /[\u10e6]/g, alternative: "gh" }, { letter: /[\u10e7]/g, alternative: "q" }, { letter: /[\u10e8]/g, alternative: "sh" }, { letter: /[\u10e9]/g, alternative: "ch" }, { letter: /[\u10ea]/g, alternative: "ts" }, { letter: /[\u10eb]/g, alternative: "dz" }, { letter: /[\u10ec]/g, alternative: "ts" }, { letter: /[\u10ed]/g, alternative: "ch" }, { letter: /[\u10ee]/g, alternative: "kh" }, { letter: /[\u10ef]/g, alternative: "j" }, { letter: /[\u10f0]/g, alternative: "h" }],
  // Language: Greenlandic.
  // Source: https://en.wikipedia.org/wiki/Greenlandic_language#Orthography
  kal: [{ letter: /[\u00E5]/g, alternative: "aa" }, { letter: /[\u00C5]/g, alternative: "Aa" }, { letter: /[\u00E6\u04D5]/g, alternative: "ae" }, { letter: /[\u00C6\u04D4]/g, alternative: "Ae" }, { letter: /[\u00C4]/g, alternative: "Ae" }, { letter: /[\u00F8]/g, alternative: "oe" }, { letter: /[\u00D8]/g, alternative: "Oe" }],
  // Language: Kinyarwanda.
  // Source: https://en.wikipedia.org/wiki/Kinyarwanda
  kin: [{ letter: /[\u2019\u0027]/g, alternative: "" }],
  // Language: Luxembourgish.
  // Source: http://www.omniglot.com/writing/luxembourgish.htm
  lb: [{ letter: /[\u00e4]/g, alternative: "a" }, { letter: /[\u00c4]/g, alternative: "A" }, { letter: /[\u00eb\u00e9]/g, alternative: "e" }, { letter: /[\u00cb\u00c9]/g, alternative: "E" }],
  // Language: Limburgish.
  // Source: http://www.omniglot.com/writing/limburgish.htm
  li: [{ letter: /[\u00e1\u00e2\u00e0\u00e4]/g, alternative: "a" }, { letter: /[\u00c1\u00c2\u00c0\u00c4]/g, alternative: "A" }, { letter: /[\u00eb\u00e8\u00ea]/g, alternative: "e" }, { letter: /[\u00cb\u00c8\u00ca]/g, alternative: "E" }, { letter: /[\u00f6\u00f3]/g, alternative: "o" }, { letter: /[\u00d6\u00d3]/g, alternative: "O" }],
  // Language: Lingala.
  // Sources: https://en.wikipedia.org/wiki/Lingala#Writing_system http://www.omniglot.com/writing/lingala.htm
  lin: [{ letter: /[\u00e1\u00e2\u01ce]/g, alternative: "a" }, { letter: /[\u00c1\u00c2\u01cd]/g, alternative: "A" }, { letter: /\u025b\u0301/g, alternative: "e" }, { letter: /\u025b\u0302/g, alternative: "e" }, { letter: /\u025b\u030c/g, alternative: "e" }, { letter: /[\u00e9\u00ea\u011b\u025b]/g, alternative: "e" }, { letter: /\u0190\u0301/g, alternative: "E" }, { letter: /\u0190\u0302/g, alternative: "E" }, { letter: /\u0190\u030c/g, alternative: "E" }, { letter: /[\u00c9\u00ca\u011a\u0190]/g, alternative: "E" }, { letter: /[\u00ed\u00ee\u01d0]/g, alternative: "i" }, { letter: /[\u00cd\u00ce\u01cf]/g, alternative: "I" }, { letter: /\u0254\u0301/g, alternative: "o" }, { letter: /\u0254\u0302/g, alternative: "o" }, { letter: /\u0254\u030c/g, alternative: "o" }, { letter: /[\u00f3\u00f4\u01d2\u0254]/g, alternative: "o" }, { letter: /\u0186\u0301/g, alternative: "O" }, { letter: /\u0186\u0302/g, alternative: "O" }, { letter: /\u0186\u030c/g, alternative: "O" }, { letter: /[\u00d3\u00d4\u01d1\u0186]/g, alternative: "O" }, { letter: /[\u00fa]/g, alternative: "u" }, { letter: /[\u00da]/g, alternative: "U" }],
  // Language: Lithuanian.
  // Sources: https://en.wikipedia.org/wiki/Lithuanian_orthography http://www.omniglot.com/writing/lithuanian.htm
  lt: [{ letter: /[\u0105]/g, alternative: "a" }, { letter: /[\u0104]/g, alternative: "A" }, { letter: /[\u010d]/g, alternative: "c" }, { letter: /[\u010c]/g, alternative: "C" }, { letter: /[\u0119\u0117]/g, alternative: "e" }, { letter: /[\u0118\u0116]/g, alternative: "E" }, { letter: /[\u012f]/g, alternative: "i" }, { letter: /[\u012e]/g, alternative: "I" }, { letter: /[\u0161]/g, alternative: "s" }, { letter: /[\u0160]/g, alternative: "S" }, { letter: /[\u0173\u016b]/g, alternative: "u" }, { letter: /[\u0172\u016a]/g, alternative: "U" }, { letter: /[\u017e]/g, alternative: "z" }, { letter: /[\u017d]/g, alternative: "Z" }],
  // Language: Malagasy.
  // Source: http://www.omniglot.com/writing/malagasy.htm
  mg: [{ letter: /[\u00f4]/g, alternative: "ao" }, { letter: /[\u00d4]/g, alternative: "Ao" }],
  // Language: Macedonian.
  // Source: http://www.omniglot.com/writing/macedonian.htm
  mk: [{ letter: /[\u0430]/g, alternative: "a" }, { letter: /[\u0410]/g, alternative: "A" }, { letter: /[\u0431]/g, alternative: "b" }, { letter: /[\u0411]/g, alternative: "B" }, { letter: /[\u0432]/g, alternative: "v" }, { letter: /[\u0412]/g, alternative: "V" }, { letter: /[\u0433]/g, alternative: "g" }, { letter: /[\u0413]/g, alternative: "G" }, { letter: /[\u0434]/g, alternative: "d" }, { letter: /[\u0414]/g, alternative: "D" }, { letter: /[\u0453]/g, alternative: "gj" }, { letter: /[\u0403]/g, alternative: "Gj" }, { letter: /[\u0435]/g, alternative: "e" }, { letter: /[\u0415]/g, alternative: "E" }, { letter: /[\u0436]/g, alternative: "zh" }, { letter: /[\u0416]/g, alternative: "Zh" }, { letter: /[\u0437]/g, alternative: "z" }, { letter: /[\u0417]/g, alternative: "Z" }, { letter: /[\u0455]/g, alternative: "dz" }, { letter: /[\u0405]/g, alternative: "Dz" }, { letter: /[\u0438]/g, alternative: "i" }, { letter: /[\u0418]/g, alternative: "I" }, { letter: /[\u0458]/g, alternative: "j" }, { letter: /[\u0408]/g, alternative: "J" }, { letter: /[\u043A]/g, alternative: "k" }, { letter: /[\u041A]/g, alternative: "K" }, { letter: /[\u043B]/g, alternative: "l" }, { letter: /[\u041B]/g, alternative: "L" }, { letter: /[\u0459]/g, alternative: "lj" }, { letter: /[\u0409]/g, alternative: "Lj" }, { letter: /[\u043C]/g, alternative: "m" }, { letter: /[\u041C]/g, alternative: "M" }, { letter: /[\u043D]/g, alternative: "n" }, { letter: /[\u041D]/g, alternative: "N" }, { letter: /[\u045A]/g, alternative: "nj" }, { letter: /[\u040A]/g, alternative: "Nj" }, { letter: /[\u043E]/g, alternative: "o" }, { letter: /[\u041E]/g, alternative: "O" }, { letter: /[\u0440]/g, alternative: "r" }, { letter: /[\u0420]/g, alternative: "R" }, { letter: /[\u043F]/g, alternative: "p" }, { letter: /[\u041F]/g, alternative: "P" }, { letter: /[\u0441]/g, alternative: "s" }, { letter: /[\u0421]/g, alternative: "S" }, { letter: /[\u0442]/g, alternative: "t" }, { letter: /[\u0422]/g, alternative: "T" }, { letter: /[\u045C]/g, alternative: "kj" }, { letter: /[\u040C]/g, alternative: "Kj" }, { letter: /[\u0443]/g, alternative: "u" }, { letter: /[\u0423]/g, alternative: "U" }, { letter: /[\u0444]/g, alternative: "f" }, { letter: /[\u0424]/g, alternative: "F" }, { letter: /[\u0445]/g, alternative: "h" }, { letter: /[\u0425]/g, alternative: "H" }, { letter: /[\u0446]/g, alternative: "c" }, { letter: /[\u0426]/g, alternative: "C" }, { letter: /[\u0447]/g, alternative: "ch" }, { letter: /[\u0427]/g, alternative: "Ch" }, { letter: /[\u045F]/g, alternative: "dj" }, { letter: /[\u040F]/g, alternative: "Dj" }, { letter: /[\u0448]/g, alternative: "sh" }, { letter: /[\u0428]/g, alternative: "Sh" }],
  // Language: Maori.
  // Source: http://www.omniglot.com/writing/maori.htm
  mri: [{ letter: /[\u0101]/g, alternative: "aa" }, { letter: /[\u0100]/g, alternative: "Aa" }, { letter: /[\u0113]/g, alternative: "ee" }, { letter: /[\u0112]/g, alternative: "Ee" }, { letter: /[\u012b]/g, alternative: "ii" }, { letter: /[\u012a]/g, alternative: "Ii" }, { letter: /[\u014d]/g, alternative: "oo" }, { letter: /[\u014c]/g, alternative: "Oo" }, { letter: /[\u016b]/g, alternative: "uu" }, { letter: /[\u016a]/g, alternative: "Uu" }],
  // Language: Mirandese.
  // Source: http://www.omniglot.com/writing/mirandese.htm
  mwl: [{ letter: /[\u00e7]/g, alternative: "c" }, { letter: /[\u00c7]/g, alternative: "C" }, { letter: /[\u00e1]/g, alternative: "a" }, { letter: /[\u00c1]/g, alternative: "A" }, { letter: /[\u00e9\u00ea]/g, alternative: "e" }, { letter: /[\u00c9\u00ca]/g, alternative: "E" }, { letter: /[\u00ed]/g, alternative: "i" }, { letter: /[\u00cd]/g, alternative: "I" }, { letter: /[\u00f3\u00f4]/g, alternative: "o" }, { letter: /[\u00d3\u00d4]/g, alternative: "O" }, { letter: /[\u00fa\u0169]/g, alternative: "u" }, { letter: /[\u00da\u0168]/g, alternative: "U" }],
  // Language: Occitan.
  // Sources: http://www.omniglot.com/writing/oromo.htm https://en.wikipedia.org/wiki/Occitan_alphabet
  oci: [{ letter: /[\u00e7]/g, alternative: "c" }, { letter: /[\u00c7]/g, alternative: "C" }, { letter: /[\u00e0\u00e1]/g, alternative: "a" }, { letter: /[\u00c0\u00c1]/g, alternative: "A" }, { letter: /[\u00e8\u00e9]/g, alternative: "e" }, { letter: /[\u00c8\u00c9]/g, alternative: "E" }, { letter: /[\u00ed\u00ef]/g, alternative: "i" }, { letter: /[\u00cd\u00cf]/g, alternative: "I" }, { letter: /[\u00f2\u00f3]/g, alternative: "o" }, { letter: /[\u00d2\u00d3]/g, alternative: "O" }, { letter: /[\u00fa\u00fc]/g, alternative: "u" }, { letter: /[\u00da\u00dc]/g, alternative: "U" }, { letter: /[\u00b7]/g, alternative: "" }],
  // Language: Oromo.
  // Source: http://www.omniglot.com/writing/occitan.htm
  orm: [{ letter: /[\u0027]/g, alternative: "" }],
  // Language: Portuguese.
  // Source: https://en.wikipedia.org/wiki/Portuguese_orthography http://www.omniglot.com/writing/portuguese.htm
  pt: [{ letter: /[\u00e7]/g, alternative: "c" }, { letter: /[\u00c7]/g, alternative: "C" }, { letter: /[\u00e1\u00e2\u00e3\u00e0]/g, alternative: "a" }, { letter: /[\u00c1\u00c2\u00c3\u00c0]/g, alternative: "A" }, { letter: /[\u00e9\u00ea]/g, alternative: "e" }, { letter: /[\u00c9\u00ca]/g, alternative: "E" }, { letter: /[\u00ed]/g, alternative: "i" }, { letter: /[\u00cd]/g, alternative: "I" }, { letter: /[\u00f3\u00f4\u00f5]/g, alternative: "o" }, { letter: /[\u00d3\u00d4\u00d5]/g, alternative: "O" }, { letter: /[\u00fa]/g, alternative: "u" }, { letter: /[\u00da]/g, alternative: "U" }],
  // Language: Romansh Vallader.
  // Source: https://en.wikipedia.org/wiki/Romansh_language#Orthography http://www.omniglot.com/writing/romansh.htm
  roh: [{ letter: /[\u00e9\u00e8\u00ea]/g, alternative: "e" }, { letter: /[\u00c9\u00c8\u00ca]/g, alternative: "E" }, { letter: /[\u00ef]/g, alternative: "i" }, { letter: /[\u00cf]/g, alternative: "I" }, { letter: /[\u00f6]/g, alternative: "oe" }, { letter: /[\u00d6]/g, alternative: "Oe" }, { letter: /[\u00fc]/g, alternative: "ue" }, { letter: /[\u00dc]/g, alternative: "Ue" }, { letter: /[\u00e4]/g, alternative: "ae" }, { letter: /[\u00c4]/g, alternative: "Ae" }],
  // Language: Aromanian.
  // Sources: https://en.wikipedia.org/wiki/Aromanian_alphabet http://www.omniglot.com/writing/aromanian.htm
  rup: [{ letter: /[\u00e3]/g, alternative: "a" }, { letter: /[\u00c3]/g, alternative: "A" }],
  // Language: Romanian.
  // Sources: http://forum.wordreference.com/threads/romanian-transliteration.3193544/#post-16161251
  // https://en.wikipedia.org/wiki/Romanian_alphabet http://www.omniglot.com/writing/romanian.htm
  ro: [{ letter: /[\u0103\u00e2]/g, alternative: "a" }, { letter: /[\u0102\u00c2]/g, alternative: "A" }, { letter: /[\u00ee]/g, alternative: "i" }, { letter: /[\u00ce]/g, alternative: "I" }, { letter: /[\u0219\u015f]/g, alternative: "s" }, { letter: /[\u0218\u015e]/g, alternative: "S" }, { letter: /[\u021b\u0163]/g, alternative: "t" }, { letter: /[\u021a\u0162]/g, alternative: "T" }],
  // Language: Klingon.
  // Sources: http://www.omniglot.com/conscripts/klingon.htm https://en.wikipedia.org/wiki/Klingon_language#Writing_systems
  // This translation module only works for Klingon written in Latin characters. KLI PlqaD script is not supported yet.
  tlh: [{ letter: /[\u2019\u0027]/g, alternative: "" }],
  // Language: Slovak.
  // Sources: https://en.wikipedia.org/wiki/Dz_(digraph) https://en.wikipedia.org/wiki/Slovak_orthography
  // http://www.omniglot.com/writing/slovak.htm
  sk: [{ letter: /[\u01c4]/g, alternative: "DZ" }, { letter: /[\u01c5]/g, alternative: "Dz" }, { letter: /[\u01c6]/g, alternative: "dz" }, { letter: /[\u00e1\u00e4]/g, alternative: "a" }, { letter: /[\u00c1\u00c4]/g, alternative: "A" }, { letter: /[\u010d]/g, alternative: "c" }, { letter: /[\u010c]/g, alternative: "C" }, { letter: /[\u010f]/g, alternative: "d" }, { letter: /[\u010e]/g, alternative: "D" }, { letter: /[\u00e9]/g, alternative: "e" }, { letter: /[\u00c9]/g, alternative: "E" }, { letter: /[\u00ed]/g, alternative: "i" }, { letter: /[\u00cd]/g, alternative: "I" }, { letter: /[\u013e\u013a]/g, alternative: "l" }, { letter: /[\u013d\u0139]/g, alternative: "L" }, { letter: /[\u0148]/g, alternative: "n" }, { letter: /[\u0147]/g, alternative: "N" }, { letter: /[\u00f3\u00f4]/g, alternative: "o" }, { letter: /[\u00d3\u00d4]/g, alternative: "O" }, { letter: /[\u0155]/g, alternative: "r" }, { letter: /[\u0154]/g, alternative: "R" }, { letter: /[\u0161]/g, alternative: "s" }, { letter: /[\u0160]/g, alternative: "S" }, { letter: /[\u0165]/g, alternative: "t" }, { letter: /[\u0164]/g, alternative: "T" }, { letter: /[\u00fa]/g, alternative: "u" }, { letter: /[\u00da]/g, alternative: "U" }, { letter: /[\u00fd]/g, alternative: "y" }, { letter: /[\u00dd]/g, alternative: "Y" }, { letter: /[\u017e]/g, alternative: "z" }, { letter: /[\u017d]/g, alternative: "Z" }],
  // Language: Slovenian.
  // Sources: https://en.wikipedia.org/wiki/Slovene_alphabet http://www.omniglot.com/writing/slovene.htm
  sl: [{ letter: /[\u010d\u0107]/g, alternative: "c" }, { letter: /[\u010c\u0106]/g, alternative: "C" }, { letter: /[\u0111]/g, alternative: "d" }, { letter: /[\u0110]/g, alternative: "D" }, { letter: /[\u0161]/g, alternative: "s" }, { letter: /[\u0160]/g, alternative: "S" }, { letter: /[\u017e]/g, alternative: "z" }, { letter: /[\u017d]/g, alternative: "Z" }, { letter: /[\u00e0\u00e1\u0203\u0201]/g, alternative: "a" }, { letter: /[\u00c0\u00c1\u0202\u0200]/g, alternative: "A" }, { letter: /[\u00e8\u00e9\u0207\u0205]/g, alternative: "e" }, { letter: /\u01dd\u0300/g, alternative: "e" }, { letter: /\u01dd\u030f/g, alternative: "e" }, { letter: /\u1eb9\u0301/g, alternative: "e" }, { letter: /\u1eb9\u0311/g, alternative: "e" }, { letter: /[\u00c8\u00c9\u0206\u0204]/g, alternative: "E" }, { letter: /\u018e\u030f/g, alternative: "E" }, { letter: /\u018e\u0300/g, alternative: "E" }, { letter: /\u1eb8\u0311/g, alternative: "E" }, { letter: /\u1eb8\u0301/g, alternative: "E" }, { letter: /[\u00ec\u00ed\u020b\u0209]/g, alternative: "i" }, { letter: /[\u00cc\u00cd\u020a\u0208]/g, alternative: "I" }, { letter: /[\u00f2\u00f3\u020f\u020d]/g, alternative: "o" }, { letter: /\u1ecd\u0311/g, alternative: "o" }, { letter: /\u1ecd\u0301/g, alternative: "o" }, { letter: /\u1ecc\u0311/g, alternative: "O" }, { letter: /\u1ecc\u0301/g, alternative: "O" }, { letter: /[\u00d2\u00d3\u020e\u020c]/g, alternative: "O" }, { letter: /[\u00f9\u00fa\u0217\u0215]/g, alternative: "u" }, { letter: /[\u00d9\u00da\u0216\u0214]/g, alternative: "U" }, { letter: /[\u0155\u0213]/g, alternative: "r" }, { letter: /[\u0154\u0212]/g, alternative: "R" }],
  // Language: Albanian.
  // Sources: https://en.wikipedia.org/wiki/Albanian_alphabet http://www.omniglot.com/writing/albanian.htm
  sq: [{ letter: /[\u00e7]/g, alternative: "c" }, { letter: /[\u00c7]/g, alternative: "C" }, { letter: /[\u00eb]/g, alternative: "e" }, { letter: /[\u00cb]/g, alternative: "E" }],
  // Language: Hungarian.
  // Sources: http://forum.wordreference.com/threads/hungarian-transliteration.3193022/#post-16166901
  // http://www.omniglot.com/writing/hungarian.htm
  hu: [{ letter: /[\u00e1]/g, alternative: "a" }, { letter: /[\u00c1]/g, alternative: "A" }, { letter: /[\u00e9]/g, alternative: "e" }, { letter: /[\u00c9]/g, alternative: "E" }, { letter: /[\u00ed]/g, alternative: "i" }, { letter: /[\u00cd]/g, alternative: "I" }, { letter: /[\u00f3\u00f6\u0151]/g, alternative: "o" }, { letter: /[\u00d3\u00d6\u0150]/g, alternative: "O" }, { letter: /[\u00fa\u00fc\u0171]/g, alternative: "u" }, { letter: /[\u00da\u00dc\u0170]/g, alternative: "U" }],
  // Language: Sardinian.
  // Sources: http://www.omniglot.com/writing/sardinian.htm https://en.wikipedia.org/wiki/Sardinian_language
  srd: [{ letter: /[\u00e7]/g, alternative: "c" }, { letter: /[\u00c7]/g, alternative: "C" }, { letter: /[\u00e0\u00e1]/g, alternative: "a" }, { letter: /[\u00c0\u00c1]/g, alternative: "A" }, { letter: /[\u00e8\u00e9]/g, alternative: "e" }, { letter: /[\u00c8\u00c9]/g, alternative: "E" }, { letter: /[\u00ed\u00ef]/g, alternative: "i" }, { letter: /[\u00cd\u00cf]/g, alternative: "I" }, { letter: /[\u00f2\u00f3]/g, alternative: "o" }, { letter: /[\u00d2\u00d3]/g, alternative: "O" }, { letter: /[\u00fa\u00f9]/g, alternative: "u" }, { letter: /[\u00da\u00d9]/g, alternative: "U" }],
  // Language: Silesian.
  // Source: https://en.wikipedia.org/wiki/Silesian_language#Writing_system
  szl: [{ letter: /[\u0107]/g, alternative: "c" }, { letter: /[\u0106]/g, alternative: "C" }, { letter: /[\u00e3]/g, alternative: "a" }, { letter: /[\u00c3]/g, alternative: "A" }, { letter: /[\u0142]/g, alternative: "u" }, { letter: /[\u0141]/g, alternative: "U" }, { letter: /[\u006e]/g, alternative: "n" }, { letter: /[\u004e]/g, alternative: "N" }, { letter: /[\u014f\u014d\u00f4\u00f5]/g, alternative: "o" }, { letter: /[\u014e\u014c\u00d4\u00d5]/g, alternative: "O" }, { letter: /[\u015b]/g, alternative: "s" }, { letter: /[\u015a]/g, alternative: "S" }, { letter: /[\u017a\u017c\u017e]/g, alternative: "z" }, { letter: /[\u0179\u017b\u017d]/g, alternative: "Z" }, { letter: /[\u016f]/g, alternative: "u" }, { letter: /[\u016e]/g, alternative: "U" }, { letter: /[\u010d]/g, alternative: "cz" }, { letter: /[\u010c]/g, alternative: "Cz" }, { letter: /[\u0159]/g, alternative: "rz" }, { letter: /[\u0158]/g, alternative: "Rz" }, { letter: /[\u0161]/g, alternative: "sz" }, { letter: /[\u0160]/g, alternative: "Sz" }],
  // Language: Tahitian.
  // Sources: https://en.wikipedia.org/wiki/Tahitian_language#Phonology http://www.omniglot.com/writing/tahitian.htm
  tah: [{ letter: /[\u0101\u00e2\u00e0]/g, alternative: "a" }, { letter: /[\u0100\u00c2\u00c0]/g, alternative: "A" }, { letter: /[\u00ef\u00ee\u00ec]/g, alternative: "i" }, { letter: /[\u00cf\u00ce\u00cc]/g, alternative: "I" }, { letter: /[\u0113\u00ea\u00e9]/g, alternative: "e" }, { letter: /[\u0112\u00ca\u00c9]/g, alternative: "E" }, { letter: /[\u016b\u00fb\u00fa]/g, alternative: "u" }, { letter: /[\u016a\u00db\u00da]/g, alternative: "U" }, { letter: /[\u00e7]/g, alternative: "c" }, { letter: /[\u00c7]/g, alternative: "C" }, { letter: /[\u00f2\u00f4\u014d]/g, alternative: "o" }, { letter: /[\u00d2\u00d4\u014c]/g, alternative: "O" }, { letter: /[\u2019\u0027\u2018]/g, alternative: "" }],
  // Language: Venetian.
  // Sources: http://www.omniglot.com/writing/venetian.htm https://en.wikipedia.org/wiki/Venetian_language#Spelling_systems
  // http://www.venipedia.org/wiki/index.php?title=Venetian_Language
  vec: [{ letter: /\u0073\u002d\u0063/g, alternative: "sc" }, { letter: /\u0053\u002d\u0043/g, alternative: "SC" }, { letter: /\u0073\u0027\u0063/g, alternative: "sc" }, { letter: /\u0053\u0027\u0043/g, alternative: "SC" }, { letter: /\u0073\u2019\u0063/g, alternative: "sc" }, { letter: /\u0053\u2019\u0043/g, alternative: "SC" }, { letter: /\u0073\u2018\u0063/g, alternative: "sc" }, { letter: /\u0053\u2018\u0043/g, alternative: "SC" }, { letter: /\u0053\u002d\u0063/g, alternative: "Sc" }, { letter: /\u0053\u0027\u0063/g, alternative: "Sc" }, { letter: /\u0053\u2019\u0063/g, alternative: "Sc" }, { letter: /\u0053\u2018\u0063/g, alternative: "Sc" }, { letter: /\u0063\u2019/g, alternative: "c" }, { letter: /\u0043\u2019/g, alternative: "C" }, { letter: /\u0063\u2018/g, alternative: "c" }, { letter: /\u0043\u2018/g, alternative: "C" }, { letter: /\u0063\u0027/g, alternative: "c" }, { letter: /\u0043\u0027/g, alternative: "C" }, { letter: /[\u00e0\u00e1\u00e2]/g, alternative: "a" }, { letter: /[\u00c0\u00c1\u00c2]/g, alternative: "A" }, { letter: /[\u00e8\u00e9]/g, alternative: "e" }, { letter: /[\u00c8\u00c9]/g, alternative: "E" }, { letter: /[\u00f2\u00f3]/g, alternative: "o" }, { letter: /[\u00d2\u00d3]/g, alternative: "O" }, { letter: /[\u00f9\u00fa]/g, alternative: "u" }, { letter: /[\u00d9\u00da]/g, alternative: "U" }, { letter: /[\u00e7\u010d\u010b]/g, alternative: "c" }, { letter: /[\u00c7\u010c\u010a]/g, alternative: "C" }, { letter: /[\u0142]/g, alternative: "l" }, { letter: /[\u00a3\u0141]/g, alternative: "L" }, { letter: /\ud835\udeff/g, alternative: "dh" }, { letter: /[\u0111\u03b4]/g, alternative: "dh" }, { letter: /[\u0110\u0394]/g, alternative: "Dh" }],
  // Language: Walloon.
  // Sources: http://www.omniglot.com/writing/walloon.htm https://en.wikipedia.org/wiki/Walloon_alphabet
  wa: [{ letter: /[\u00e2\u00e5]/g, alternative: "a" }, { letter: /[\u00c2\u00c5]/g, alternative: "A" }, { letter: /[\u00e7]/g, alternative: "c" }, { letter: /[\u00c7]/g, alternative: "C" }, { letter: /\u0065\u030a/g, alternative: "e" }, { letter: /\u0045\u030a/g, alternative: "E" }, { letter: /[\u00eb\u00ea\u00e8\u00e9]/g, alternative: "e" }, { letter: /[\u00c9\u00c8\u00ca\u00cb]/g, alternative: "E" }, { letter: /[\u00ee]/g, alternative: "i" }, { letter: /[\u00ce]/g, alternative: "I" }, { letter: /[\u00f4\u00f6]/g, alternative: "o" }, { letter: /[\u00d6\u00d4]/g, alternative: "O" }, { letter: /[\u00fb]/g, alternative: "u" }, { letter: /[\u00db]/g, alternative: "U" }],
  // Language: Yoruba.
  // Sources: http://www.omniglot.com/writing/yoruba.htm https://en.wikipedia.org/wiki/Yoruba_language
  yor: [{ letter: /[\u00e1\u00e0]/g, alternative: "a" }, { letter: /[\u00c1\u00c0]/g, alternative: "A" }, { letter: /[\u00ec\u00ed]/g, alternative: "i" }, { letter: /[\u00cc\u00cd]/g, alternative: "I" }, { letter: /\u1ecd\u0301/g, alternative: "o" }, { letter: /\u1ecc\u0301/g, alternative: "O" }, { letter: /\u1ecd\u0300/g, alternative: "o" }, { letter: /\u1ecc\u0300/g, alternative: "O" }, { letter: /[\u00f3\u00f2\u1ecd]/g, alternative: "o" }, { letter: /[\u00d3\u00d2\u1ecc]/g, alternative: "O" }, { letter: /[\u00fa\u00f9]/g, alternative: "u" }, { letter: /[\u00da\u00d9]/g, alternative: "U" }, { letter: /\u1eb9\u0301/g, alternative: "e" }, { letter: /\u1eb8\u0301/g, alternative: "E" }, { letter: /\u1eb9\u0300/g, alternative: "e" }, { letter: /\u1eb8\u0300/g, alternative: "E" }, { letter: /[\u00e9\u00e8\u1eb9]/g, alternative: "e" }, { letter: /[\u00c9\u00c8\u1eb8]/g, alternative: "E" }, { letter: /[\u1e63]/g, alternative: "s" }, { letter: /[\u1e62]/g, alternative: "S" }]
};
Object.defineProperty(pd, "__esModule", {
  value: !0
});
pd.default = function(a, e) {
  for (var t = (0, Gga.default)(e), i = 0; i < t.length; i++)
    a = a.replace(t[i].letter, t[i].alternative);
  return a;
};
var Kga = Kh, Gga = Yga(Kga);
function Yga(a) {
  return a && a.__esModule ? a : { default: a };
}
var $s = {}, Gh = {};
Object.defineProperty(Gh, "__esModule", {
  value: !0
});
Gh.default = function() {
  return [{
    base: "a",
    letters: /[\u0061\u24D0\uFF41\u1E9A\u00E0\u00E1\u00E2\u1EA7\u1EA5\u1EAB\u1EA9\u00E3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\u00E4\u01DF\u1EA3\u00E5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250]/g
  }, { base: "aa", letters: /[\uA733]/g }, { base: "ae", letters: /[\u00E6\u01FD\u01E3]/g }, { base: "ao", letters: /[\uA735]/g }, { base: "au", letters: /[\uA737]/g }, { base: "av", letters: /[\uA739\uA73B]/g }, { base: "ay", letters: /[\uA73D]/g }, { base: "b", letters: /[\u0062\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253]/g }, {
    base: "c",
    letters: /[\u0063\u24D2\uFF43\u0107\u0109\u010B\u010D\u00E7\u1E09\u0188\u023C\uA73F\u2184]/g
  }, {
    base: "d",
    letters: /[\u0064\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A]/g
  }, { base: "dz", letters: /[\u01F3\u01C6]/g }, {
    base: "e",
    letters: /[\u0065\u24D4\uFF45\u00E8\u00E9\u00EA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\u00EB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD]/g
  }, { base: "f", letters: /[\u0066\u24D5\uFF46\u1E1F\u0192\uA77C]/g }, {
    base: "g",
    letters: /[\u0067\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F]/g
  }, {
    base: "h",
    letters: /[\u0068\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265]/g
  }, { base: "hv", letters: /[\u0195]/g }, {
    base: "i",
    letters: /[\u0069\u24D8\uFF49\u00EC\u00ED\u00EE\u0129\u012B\u012D\u00EF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131]/g
  }, { base: "j", letters: /[\u006A\u24D9\uFF4A\u0135\u01F0\u0249]/g }, {
    base: "k",
    letters: /[\u006B\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3]/g
  }, {
    base: "l",
    letters: /[\u006C\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747]/g
  }, { base: "lj", letters: /[\u01C9]/g }, { base: "m", letters: /[\u006D\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F]/g }, {
    base: "n",
    letters: /[\u006E\u24DD\uFF4E\u01F9\u0144\u00F1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5]/g
  }, { base: "nj", letters: /[\u01CC]/g }, {
    base: "o",
    letters: /[\u006F\u24DE\uFF4F\u00F2\u00F3\u00F4\u1ED3\u1ED1\u1ED7\u1ED5\u00F5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\u00F6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\u00F8\u01FF\u0254\uA74B\uA74D\u0275]/g
  }, { base: "oi", letters: /[\u01A3]/g }, { base: "ou", letters: /[\u0223]/g }, { base: "oo", letters: /[\uA74F]/g }, { base: "p", letters: /[\u0070\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755]/g }, { base: "q", letters: /[\u0071\u24E0\uFF51\u024B\uA757\uA759]/g }, {
    base: "r",
    letters: /[\u0072\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783]/g
  }, {
    base: "s",
    letters: /[\u0073\u24E2\uFF53\u00DF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B]/g
  }, {
    base: "t",
    letters: /[\u0074\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787]/g
  }, { base: "tz", letters: /[\uA729]/g }, {
    base: "u",
    letters: /[\u0075\u24E4\uFF55\u00F9\u00FA\u00FB\u0169\u1E79\u016B\u1E7B\u016D\u00FC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289]/g
  }, { base: "v", letters: /[\u0076\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C]/g }, { base: "vy", letters: /[\uA761]/g }, {
    base: "w",
    letters: /[\u0077\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73]/g
  }, { base: "x", letters: /[\u0078\u24E7\uFF58\u1E8B\u1E8D]/g }, {
    base: "y",
    letters: /[\u0079\u24E8\uFF59\u1EF3\u00FD\u0177\u1EF9\u0233\u1E8F\u00FF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF]/g
  }, {
    base: "z",
    letters: /[\u007A\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763]/g
  }];
};
Object.defineProperty($s, "__esModule", {
  value: !0
});
$s.default = function(a) {
  for (var e = (0, Xga.default)(), t = 0; t < e.length; t++)
    a = a.replace(e[t].letters, e[t].base);
  return a;
};
var Zga = Gh, Xga = Jga(Zga);
function Jga(a) {
  return a && a.__esModule ? a : { default: a };
}
var ur = {}, md = {};
Object.defineProperty(md, "__esModule", {
  value: !0
});
md.default = function(a, e) {
  var t = new RegExp(e, "ig"), i = a.match(t);
  return i === null && (i = []), i;
};
Object.defineProperty(ur, "__esModule", {
  value: !0
});
ur.default = function(a) {
  return (0, aza.default)(a, "<img(?:[^>]+)?>");
};
var Qga = md, aza = eza(Qga);
function eza(a) {
  return a && a.__esModule ? a : { default: a };
}
var Ta = {}, ju = {};
Object.defineProperty(ju, "__esModule", {
  value: !0
});
var Yh = I;
function tza(a, e) {
  return e.indexOf(a.toLocaleLowerCase()) !== -1;
}
function me(a, e, t) {
  this._words = a, this._length = a.length, this._occurrences = e || 0, this._functionWords = t;
}
me.lengthBonus = {
  2: 3,
  3: 7,
  4: 12,
  5: 18
};
me.prototype.getLengthBonus = function() {
  return (0, Yh.has)(me.lengthBonus, this._length) ? me.lengthBonus[this._length] : 0;
};
me.prototype.getWords = function() {
  return this._words;
};
me.prototype.getLength = function() {
  return this._length;
};
me.prototype.getCombination = function() {
  return this._words.join(" ");
};
me.prototype.getOccurrences = function() {
  return this._occurrences;
};
me.prototype.incrementOccurrences = function() {
  this._occurrences += 1;
};
me.prototype.getMultiplier = function(a) {
  var e = this.getLengthBonus();
  return 1 + a * e;
};
me.prototype.isRelevantWord = function(a) {
  return (0, Yh.has)(this._relevantWords, a);
};
me.prototype.getRelevantWordPercentage = function() {
  var a = 0, e = 1;
  return this._length > 1 && ((0, Yh.forEach)(this._words, (function(t) {
    this.isRelevantWord(t) && (a += 1);
  }).bind(this)), e = a / this._length), e;
};
me.prototype.getRelevance = function() {
  if (this._words.length === 1 && tza(this._words[0], this._functionWords))
    return 0;
  var a = this.getRelevantWordPercentage();
  return a === 0 ? 0 : this.getMultiplier(a) * this._occurrences;
};
me.prototype.setRelevantWords = function(a) {
  this._relevantWords = a;
};
me.prototype.getDensity = function(a) {
  return this._occurrences / a;
};
me.prototype.serialize = function() {
  return {
    _parseClass: "WordCombination",
    words: this._words,
    occurrences: this._occurrences,
    functionWords: this._functionWords,
    relevantWords: this._relevantWords
  };
};
me.parse = function(a) {
  const e = new me(a.words, a.occurrences, a.functionWords);
  return e.setRelevantWords(a.relevantWords), e;
};
ju.default = me;
Object.defineProperty(Ta, "__esModule", {
  value: !0
});
Ta.filterEndingWith = Ta.filterOneCharacterWordCombinations = Ta.filterOnDensity = Ta.filterFunctionWordsAnywhere = Ta.filterFunctionWords = Ta.filterFunctionWordsAtBeginning = Ta.filterFunctionWordsAtEnding = Ta.sortCombinations = Ta.getRelevantCombinations = Ta.calculateOccurrences = Ta.getRelevantWords = Ta.getWordCombinations = void 0;
var iza = se, nza = gd(iza), rza = Le, sza = gd(rza), oza = ju, dza = gd(oza), lza = Ke, cza = fn, uza = gd(cza), pza = Ya, mza = gd(pza), Ye = I;
function gd(a) {
  return a && a.__esModule ? a : { default: a };
}
const zq = (0, uza.default)(), gza = 0, zza = 0.03, fza = 100, yza = 200, wza = ["–", "—", "-", "©", "#", "%", "/", "\\", "$", "€", "£", "*", "•", "|", "→", "←", "}", "{", "//", "||", "​"];
function Ln(a, e, t) {
  const i = (0, sza.default)(a);
  let n, r;
  return (0, Ye.flatMap)(i, function(s) {
    return s = s.toLocaleLowerCase(), s = (0, lza.normalize)(s), n = (0, nza.default)(s), (0, Ye.filter)((0, Ye.map)(n, function(o, d) {
      return d + e - 1 < n.length ? (r = n.slice(d, d + e), new dza.default(r, 0, t)) : !1;
    }));
  });
}
function In(a) {
  const e = {};
  return (0, Ye.forEach)(a, function(t) {
    const i = t.getCombination();
    (0, Ye.has)(e, i) || (e[i] = t), e[i].incrementOccurrences();
  }), (0, Ye.values)(e);
}
function Zl(a) {
  return a = a.filter(function(e) {
    return e.getOccurrences() !== 1 && e.getRelevance() !== 0;
  }), a;
}
function Xl(a) {
  a.sort(function(e, t) {
    const i = t.getRelevance() - e.getRelevance();
    return i !== 0 ? i : t.getLength() - e.getLength();
  });
}
function Zh(a) {
  return a.filter(function(e) {
    return !(e.getLength() === 1 && e.getWords()[0].length <= 1);
  });
}
function xu(a, e) {
  return a.filter(function(t) {
    return (0, Ye.isEmpty)((0, Ye.intersection)(e, t.getWords()));
  });
}
function Au(a, e) {
  return a.filter(function(t) {
    return !(0, Ye.includes)(e, t.getWords()[0]);
  });
}
function Eu(a, e) {
  return a.filter(function(t) {
    const i = t.getWords(), n = i.length - 1;
    return !(0, Ye.includes)(e, i[n]);
  });
}
function eF(a, e) {
  return a = Au(a, e), a = Eu(a, e), a;
}
function Xh(a, e, t, i) {
  return a.filter(function(n) {
    return n.getDensity(e) >= t && n.getDensity(e) < i;
  });
}
function Jh(a, e, t) {
  return a = a.filter(function(i) {
    const n = i.getCombination();
    for (let r = 0; r < t.length; r++)
      if (n.endsWith(t[r]))
        return !0;
    return !n.endsWith(e);
  }), a;
}
function tF(a, e) {
  return a = xu(a, e.filteredAnywhere), a = eF(a, e.filteredAtBeginningAndEnding), a = Eu(a, e.filteredAtEnding), a = Au(a, e.filteredAtBeginning), a;
}
function hza(a, e, t) {
  return a = xu(a, wza), a = Zh(a), a = tF(a, e), t === "en" && (a = Jh(a, "'s", [])), a;
}
function iF(a, e) {
  let t = (0, mza.default)(e);
  zq.hasOwnProperty(t) || (t = "en");
  const i = zq[t], n = Ln(a, 1, i.all), r = n.length;
  let s = Zl(In(n));
  Xl(s), s = (0, Ye.take)(s, 100);
  const o = {};
  (0, Ye.forEach)(s, function(v) {
    o[v.getCombination()] = v.getRelevance();
  });
  const d = In(Ln(a, 2, i.all)), c = In(Ln(a, 3, i.all)), p = In(Ln(a, 4, i.all)), m = In(Ln(a, 5, i.all));
  let w = s.concat(d, c, p, m);
  return w = hza(w, i, t), (0, Ye.forEach)(w, function(v) {
    v.setRelevantWords(o);
  }), w = Zl(w), Xl(w), r >= yza && (w = Xh(w, r, gza, zza)), (0, Ye.take)(w, fza);
}
Ta.getWordCombinations = Ln;
Ta.getRelevantWords = iF;
Ta.calculateOccurrences = In;
Ta.getRelevantCombinations = Zl;
Ta.sortCombinations = Xl;
Ta.filterFunctionWordsAtEnding = Eu;
Ta.filterFunctionWordsAtBeginning = Au;
Ta.filterFunctionWords = tF;
Ta.filterFunctionWordsAnywhere = xu;
Ta.filterOnDensity = Xh;
Ta.filterOneCharacterWordCombinations = Zh;
Ta.filterEndingWith = Jh;
Ta.default = {
  getWordCombinations: Ln,
  getRelevantWords: iF,
  calculateOccurrences: In,
  getRelevantCombinations: Zl,
  sortCombinations: Xl,
  filterFunctionWordsAtEnding: Eu,
  filterFunctionWordsAtBeginning: Au,
  filterFunctionWords: eF,
  filterFunctionWordsAnywhere: xu,
  filterOnDensity: Xh,
  filterOneCharacterWordCombinations: Zh,
  filterEndingWith: Jh
};
var Su = {}, kz = { exports: {} };
const bza = {
  0: 65533,
  128: 8364,
  130: 8218,
  131: 402,
  132: 8222,
  133: 8230,
  134: 8224,
  135: 8225,
  136: 710,
  137: 8240,
  138: 352,
  139: 8249,
  140: 338,
  142: 381,
  145: 8216,
  146: 8217,
  147: 8220,
  148: 8221,
  149: 8226,
  150: 8211,
  151: 8212,
  152: 732,
  153: 8482,
  154: 353,
  155: 8250,
  156: 339,
  158: 382,
  159: 376
};
var fq = bza, vza = kza;
function kza(a) {
  if (a >= 55296 && a <= 57343 || a > 1114111)
    return "�";
  a in fq && (a = fq[a]);
  var e = "";
  return a > 65535 && (a -= 65536, e += String.fromCharCode(a >>> 10 & 1023 | 55296), a = 56320 | a & 1023), e += String.fromCharCode(a), e;
}
const _za = "Á", $za = "á", jza = "Ă", xza = "ă", Aza = "∾", Eza = "∿", Sza = "∾̳", qza = "Â", Pza = "â", Tza = "´", Rza = "А", Oza = "а", Mza = "Æ", Cza = "æ", Lza = "⁡", Iza = "𝔄", Wza = "𝔞", Fza = "À", Dza = "à", Bza = "ℵ", Nza = "ℵ", Uza = "Α", Hza = "α", Vza = "Ā", Kza = "ā", Gza = "⨿", Yza = "&", Zza = "&", Xza = "⩕", Jza = "⩓", Qza = "∧", afa = "⩜", efa = "⩘", tfa = "⩚", ifa = "∠", nfa = "⦤", rfa = "∠", sfa = "⦨", ofa = "⦩", dfa = "⦪", lfa = "⦫", cfa = "⦬", ufa = "⦭", pfa = "⦮", mfa = "⦯", gfa = "∡", zfa = "∟", ffa = "⊾", yfa = "⦝", wfa = "∢", hfa = "Å", bfa = "⍼", vfa = "Ą", kfa = "ą", _fa = "𝔸", $fa = "𝕒", jfa = "⩯", xfa = "≈", Afa = "⩰", Efa = "≊", Sfa = "≋", qfa = "'", Pfa = "⁡", Tfa = "≈", Rfa = "≊", Ofa = "Å", Mfa = "å", Cfa = "𝒜", Lfa = "𝒶", Ifa = "≔", Wfa = "*", Ffa = "≈", Dfa = "≍", Bfa = "Ã", Nfa = "ã", Ufa = "Ä", Hfa = "ä", Vfa = "∳", Kfa = "⨑", Gfa = "≌", Yfa = "϶", Zfa = "‵", Xfa = "∽", Jfa = "⋍", Qfa = "∖", aya = "⫧", eya = "⊽", tya = "⌅", iya = "⌆", nya = "⌅", rya = "⎵", sya = "⎶", oya = "≌", dya = "Б", lya = "б", cya = "„", uya = "∵", pya = "∵", mya = "∵", gya = "⦰", zya = "϶", fya = "ℬ", yya = "ℬ", wya = "Β", hya = "β", bya = "ℶ", vya = "≬", kya = "𝔅", _ya = "𝔟", $ya = "⋂", jya = "◯", xya = "⋃", Aya = "⨀", Eya = "⨁", Sya = "⨂", qya = "⨆", Pya = "★", Tya = "▽", Rya = "△", Oya = "⨄", Mya = "⋁", Cya = "⋀", Lya = "⤍", Iya = "⧫", Wya = "▪", Fya = "▴", Dya = "▾", Bya = "◂", Nya = "▸", Uya = "␣", Hya = "▒", Vya = "░", Kya = "▓", Gya = "█", Yya = "=⃥", Zya = "≡⃥", Xya = "⫭", Jya = "⌐", Qya = "𝔹", awa = "𝕓", ewa = "⊥", twa = "⊥", iwa = "⋈", nwa = "⧉", rwa = "┐", swa = "╕", owa = "╖", dwa = "╗", lwa = "┌", cwa = "╒", uwa = "╓", pwa = "╔", mwa = "─", gwa = "═", zwa = "┬", fwa = "╤", ywa = "╥", wwa = "╦", hwa = "┴", bwa = "╧", vwa = "╨", kwa = "╩", _wa = "⊟", $wa = "⊞", jwa = "⊠", xwa = "┘", Awa = "╛", Ewa = "╜", Swa = "╝", qwa = "└", Pwa = "╘", Twa = "╙", Rwa = "╚", Owa = "│", Mwa = "║", Cwa = "┼", Lwa = "╪", Iwa = "╫", Wwa = "╬", Fwa = "┤", Dwa = "╡", Bwa = "╢", Nwa = "╣", Uwa = "├", Hwa = "╞", Vwa = "╟", Kwa = "╠", Gwa = "‵", Ywa = "˘", Zwa = "˘", Xwa = "¦", Jwa = "𝒷", Qwa = "ℬ", aha = "⁏", eha = "∽", tha = "⋍", iha = "⧅", nha = "\\", rha = "⟈", sha = "•", oha = "•", dha = "≎", lha = "⪮", cha = "≏", uha = "≎", pha = "≏", mha = "Ć", gha = "ć", zha = "⩄", fha = "⩉", yha = "⩋", wha = "∩", hha = "⋒", bha = "⩇", vha = "⩀", kha = "ⅅ", _ha = "∩︀", $ha = "⁁", jha = "ˇ", xha = "ℭ", Aha = "⩍", Eha = "Č", Sha = "č", qha = "Ç", Pha = "ç", Tha = "Ĉ", Rha = "ĉ", Oha = "∰", Mha = "⩌", Cha = "⩐", Lha = "Ċ", Iha = "ċ", Wha = "¸", Fha = "¸", Dha = "⦲", Bha = "¢", Nha = "·", Uha = "·", Hha = "𝔠", Vha = "ℭ", Kha = "Ч", Gha = "ч", Yha = "✓", Zha = "✓", Xha = "Χ", Jha = "χ", Qha = "ˆ", aba = "≗", eba = "↺", tba = "↻", iba = "⊛", nba = "⊚", rba = "⊝", sba = "⊙", oba = "®", dba = "Ⓢ", lba = "⊖", cba = "⊕", uba = "⊗", pba = "○", mba = "⧃", gba = "≗", zba = "⨐", fba = "⫯", yba = "⧂", wba = "∲", hba = "”", bba = "’", vba = "♣", kba = "♣", _ba = ":", $ba = "∷", jba = "⩴", xba = "≔", Aba = "≔", Eba = ",", Sba = "@", qba = "∁", Pba = "∘", Tba = "∁", Rba = "ℂ", Oba = "≅", Mba = "⩭", Cba = "≡", Lba = "∮", Iba = "∯", Wba = "∮", Fba = "𝕔", Dba = "ℂ", Bba = "∐", Nba = "∐", Uba = "©", Hba = "©", Vba = "℗", Kba = "∳", Gba = "↵", Yba = "✗", Zba = "⨯", Xba = "𝒞", Jba = "𝒸", Qba = "⫏", ava = "⫑", eva = "⫐", tva = "⫒", iva = "⋯", nva = "⤸", rva = "⤵", sva = "⋞", ova = "⋟", dva = "↶", lva = "⤽", cva = "⩈", uva = "⩆", pva = "≍", mva = "∪", gva = "⋓", zva = "⩊", fva = "⊍", yva = "⩅", wva = "∪︀", hva = "↷", bva = "⤼", vva = "⋞", kva = "⋟", _va = "⋎", $va = "⋏", jva = "¤", xva = "↶", Ava = "↷", Eva = "⋎", Sva = "⋏", qva = "∲", Pva = "∱", Tva = "⌭", Rva = "†", Ova = "‡", Mva = "ℸ", Cva = "↓", Lva = "↡", Iva = "⇓", Wva = "‐", Fva = "⫤", Dva = "⊣", Bva = "⤏", Nva = "˝", Uva = "Ď", Hva = "ď", Vva = "Д", Kva = "д", Gva = "‡", Yva = "⇊", Zva = "ⅅ", Xva = "ⅆ", Jva = "⤑", Qva = "⩷", aka = "°", eka = "∇", tka = "Δ", ika = "δ", nka = "⦱", rka = "⥿", ska = "𝔇", oka = "𝔡", dka = "⥥", lka = "⇃", cka = "⇂", uka = "´", pka = "˙", mka = "˝", gka = "`", zka = "˜", fka = "⋄", yka = "⋄", wka = "⋄", hka = "♦", bka = "♦", vka = "¨", kka = "ⅆ", _ka = "ϝ", $ka = "⋲", jka = "÷", xka = "÷", Aka = "⋇", Eka = "⋇", Ska = "Ђ", qka = "ђ", Pka = "⌞", Tka = "⌍", Rka = "$", Oka = "𝔻", Mka = "𝕕", Cka = "¨", Lka = "˙", Ika = "⃜", Wka = "≐", Fka = "≑", Dka = "≐", Bka = "∸", Nka = "∔", Uka = "⊡", Hka = "⌆", Vka = "∯", Kka = "¨", Gka = "⇓", Yka = "⇐", Zka = "⇔", Xka = "⫤", Jka = "⟸", Qka = "⟺", a0a = "⟹", e0a = "⇒", t0a = "⊨", i0a = "⇑", n0a = "⇕", r0a = "∥", s0a = "⤓", o0a = "↓", d0a = "↓", l0a = "⇓", c0a = "⇵", u0a = "̑", p0a = "⇊", m0a = "⇃", g0a = "⇂", z0a = "⥐", f0a = "⥞", y0a = "⥖", w0a = "↽", h0a = "⥟", b0a = "⥗", v0a = "⇁", k0a = "↧", _0a = "⊤", $0a = "⤐", j0a = "⌟", x0a = "⌌", A0a = "𝒟", E0a = "𝒹", S0a = "Ѕ", q0a = "ѕ", P0a = "⧶", T0a = "Đ", R0a = "đ", O0a = "⋱", M0a = "▿", C0a = "▾", L0a = "⇵", I0a = "⥯", W0a = "⦦", F0a = "Џ", D0a = "џ", B0a = "⟿", N0a = "É", U0a = "é", H0a = "⩮", V0a = "Ě", K0a = "ě", G0a = "Ê", Y0a = "ê", Z0a = "≖", X0a = "≕", J0a = "Э", Q0a = "э", a_a = "⩷", e_a = "Ė", t_a = "ė", i_a = "≑", n_a = "ⅇ", r_a = "≒", s_a = "𝔈", o_a = "𝔢", d_a = "⪚", l_a = "È", c_a = "è", u_a = "⪖", p_a = "⪘", m_a = "⪙", g_a = "∈", z_a = "⏧", f_a = "ℓ", y_a = "⪕", w_a = "⪗", h_a = "Ē", b_a = "ē", v_a = "∅", k_a = "∅", __a = "◻", $_a = "∅", j_a = "▫", x_a = " ", A_a = " ", E_a = " ", S_a = "Ŋ", q_a = "ŋ", P_a = " ", T_a = "Ę", R_a = "ę", O_a = "𝔼", M_a = "𝕖", C_a = "⋕", L_a = "⧣", I_a = "⩱", W_a = "ε", F_a = "Ε", D_a = "ε", B_a = "ϵ", N_a = "≖", U_a = "≕", H_a = "≂", V_a = "⪖", K_a = "⪕", G_a = "⩵", Y_a = "=", Z_a = "≂", X_a = "≟", J_a = "⇌", Q_a = "≡", a1a = "⩸", e1a = "⧥", t1a = "⥱", i1a = "≓", n1a = "ℯ", r1a = "ℰ", s1a = "≐", o1a = "⩳", d1a = "≂", l1a = "Η", c1a = "η", u1a = "Ð", p1a = "ð", m1a = "Ë", g1a = "ë", z1a = "€", f1a = "!", y1a = "∃", w1a = "∃", h1a = "ℰ", b1a = "ⅇ", v1a = "ⅇ", k1a = "≒", _1a = "Ф", $1a = "ф", j1a = "♀", x1a = "ﬃ", A1a = "ﬀ", E1a = "ﬄ", S1a = "𝔉", q1a = "𝔣", P1a = "ﬁ", T1a = "◼", R1a = "▪", O1a = "fj", M1a = "♭", C1a = "ﬂ", L1a = "▱", I1a = "ƒ", W1a = "𝔽", F1a = "𝕗", D1a = "∀", B1a = "∀", N1a = "⋔", U1a = "⫙", H1a = "ℱ", V1a = "⨍", K1a = "½", G1a = "⅓", Y1a = "¼", Z1a = "⅕", X1a = "⅙", J1a = "⅛", Q1a = "⅔", a$a = "⅖", e$a = "¾", t$a = "⅗", i$a = "⅜", n$a = "⅘", r$a = "⅚", s$a = "⅝", o$a = "⅞", d$a = "⁄", l$a = "⌢", c$a = "𝒻", u$a = "ℱ", p$a = "ǵ", m$a = "Γ", g$a = "γ", z$a = "Ϝ", f$a = "ϝ", y$a = "⪆", w$a = "Ğ", h$a = "ğ", b$a = "Ģ", v$a = "Ĝ", k$a = "ĝ", _$a = "Г", $$a = "г", j$a = "Ġ", x$a = "ġ", A$a = "≥", E$a = "≧", S$a = "⪌", q$a = "⋛", P$a = "≥", T$a = "≧", R$a = "⩾", O$a = "⪩", M$a = "⩾", C$a = "⪀", L$a = "⪂", I$a = "⪄", W$a = "⋛︀", F$a = "⪔", D$a = "𝔊", B$a = "𝔤", N$a = "≫", U$a = "⋙", H$a = "⋙", V$a = "ℷ", K$a = "Ѓ", G$a = "ѓ", Y$a = "⪥", Z$a = "≷", X$a = "⪒", J$a = "⪤", Q$a = "⪊", aja = "⪊", eja = "⪈", tja = "≩", ija = "⪈", nja = "≩", rja = "⋧", sja = "𝔾", oja = "𝕘", dja = "`", lja = "≥", cja = "⋛", uja = "≧", pja = "⪢", mja = "≷", gja = "⩾", zja = "≳", fja = "𝒢", yja = "ℊ", wja = "≳", hja = "⪎", bja = "⪐", vja = "⪧", kja = "⩺", _ja = ">", $ja = ">", jja = "≫", xja = "⋗", Aja = "⦕", Eja = "⩼", Sja = "⪆", qja = "⥸", Pja = "⋗", Tja = "⋛", Rja = "⪌", Oja = "≷", Mja = "≳", Cja = "≩︀", Lja = "≩︀", Ija = "ˇ", Wja = " ", Fja = "½", Dja = "ℋ", Bja = "Ъ", Nja = "ъ", Uja = "⥈", Hja = "↔", Vja = "⇔", Kja = "↭", Gja = "^", Yja = "ℏ", Zja = "Ĥ", Xja = "ĥ", Jja = "♥", Qja = "♥", axa = "…", exa = "⊹", txa = "𝔥", ixa = "ℌ", nxa = "ℋ", rxa = "⤥", sxa = "⤦", oxa = "⇿", dxa = "∻", lxa = "↩", cxa = "↪", uxa = "𝕙", pxa = "ℍ", mxa = "―", gxa = "─", zxa = "𝒽", fxa = "ℋ", yxa = "ℏ", wxa = "Ħ", hxa = "ħ", bxa = "≎", vxa = "≏", kxa = "⁃", _xa = "‐", $xa = "Í", jxa = "í", xxa = "⁣", Axa = "Î", Exa = "î", Sxa = "И", qxa = "и", Pxa = "İ", Txa = "Е", Rxa = "е", Oxa = "¡", Mxa = "⇔", Cxa = "𝔦", Lxa = "ℑ", Ixa = "Ì", Wxa = "ì", Fxa = "ⅈ", Dxa = "⨌", Bxa = "∭", Nxa = "⧜", Uxa = "℩", Hxa = "Ĳ", Vxa = "ĳ", Kxa = "Ī", Gxa = "ī", Yxa = "ℑ", Zxa = "ⅈ", Xxa = "ℐ", Jxa = "ℑ", Qxa = "ı", a2a = "ℑ", e2a = "⊷", t2a = "Ƶ", i2a = "⇒", n2a = "℅", r2a = "∞", s2a = "⧝", o2a = "ı", d2a = "⊺", l2a = "∫", c2a = "∬", u2a = "ℤ", p2a = "∫", m2a = "⊺", g2a = "⋂", z2a = "⨗", f2a = "⨼", y2a = "⁣", w2a = "⁢", h2a = "Ё", b2a = "ё", v2a = "Į", k2a = "į", _2a = "𝕀", $2a = "𝕚", j2a = "Ι", x2a = "ι", A2a = "⨼", E2a = "¿", S2a = "𝒾", q2a = "ℐ", P2a = "∈", T2a = "⋵", R2a = "⋹", O2a = "⋴", M2a = "⋳", C2a = "∈", L2a = "⁢", I2a = "Ĩ", W2a = "ĩ", F2a = "І", D2a = "і", B2a = "Ï", N2a = "ï", U2a = "Ĵ", H2a = "ĵ", V2a = "Й", K2a = "й", G2a = "𝔍", Y2a = "𝔧", Z2a = "ȷ", X2a = "𝕁", J2a = "𝕛", Q2a = "𝒥", aAa = "𝒿", eAa = "Ј", tAa = "ј", iAa = "Є", nAa = "є", rAa = "Κ", sAa = "κ", oAa = "ϰ", dAa = "Ķ", lAa = "ķ", cAa = "К", uAa = "к", pAa = "𝔎", mAa = "𝔨", gAa = "ĸ", zAa = "Х", fAa = "х", yAa = "Ќ", wAa = "ќ", hAa = "𝕂", bAa = "𝕜", vAa = "𝒦", kAa = "𝓀", _Aa = "⇚", $Aa = "Ĺ", jAa = "ĺ", xAa = "⦴", AAa = "ℒ", EAa = "Λ", SAa = "λ", qAa = "⟨", PAa = "⟪", TAa = "⦑", RAa = "⟨", OAa = "⪅", MAa = "ℒ", CAa = "«", LAa = "⇤", IAa = "⤟", WAa = "←", FAa = "↞", DAa = "⇐", BAa = "⤝", NAa = "↩", UAa = "↫", HAa = "⤹", VAa = "⥳", KAa = "↢", GAa = "⤙", YAa = "⤛", ZAa = "⪫", XAa = "⪭", JAa = "⪭︀", QAa = "⤌", aEa = "⤎", eEa = "❲", tEa = "{", iEa = "[", nEa = "⦋", rEa = "⦏", sEa = "⦍", oEa = "Ľ", dEa = "ľ", lEa = "Ļ", cEa = "ļ", uEa = "⌈", pEa = "{", mEa = "Л", gEa = "л", zEa = "⤶", fEa = "“", yEa = "„", wEa = "⥧", hEa = "⥋", bEa = "↲", vEa = "≤", kEa = "≦", _Ea = "⟨", $Ea = "⇤", jEa = "←", xEa = "←", AEa = "⇐", EEa = "⇆", SEa = "↢", qEa = "⌈", PEa = "⟦", TEa = "⥡", REa = "⥙", OEa = "⇃", MEa = "⌊", CEa = "↽", LEa = "↼", IEa = "⇇", WEa = "↔", FEa = "↔", DEa = "⇔", BEa = "⇆", NEa = "⇋", UEa = "↭", HEa = "⥎", VEa = "↤", KEa = "⊣", GEa = "⥚", YEa = "⋋", ZEa = "⧏", XEa = "⊲", JEa = "⊴", QEa = "⥑", aSa = "⥠", eSa = "⥘", tSa = "↿", iSa = "⥒", nSa = "↼", rSa = "⪋", sSa = "⋚", oSa = "≤", dSa = "≦", lSa = "⩽", cSa = "⪨", uSa = "⩽", pSa = "⩿", mSa = "⪁", gSa = "⪃", zSa = "⋚︀", fSa = "⪓", ySa = "⪅", wSa = "⋖", hSa = "⋚", bSa = "⪋", vSa = "⋚", kSa = "≦", _Sa = "≶", $Sa = "≶", jSa = "⪡", xSa = "≲", ASa = "⩽", ESa = "≲", SSa = "⥼", qSa = "⌊", PSa = "𝔏", TSa = "𝔩", RSa = "≶", OSa = "⪑", MSa = "⥢", CSa = "↽", LSa = "↼", ISa = "⥪", WSa = "▄", FSa = "Љ", DSa = "љ", BSa = "⇇", NSa = "≪", USa = "⋘", HSa = "⌞", VSa = "⇚", KSa = "⥫", GSa = "◺", YSa = "Ŀ", ZSa = "ŀ", XSa = "⎰", JSa = "⎰", QSa = "⪉", aqa = "⪉", eqa = "⪇", tqa = "≨", iqa = "⪇", nqa = "≨", rqa = "⋦", sqa = "⟬", oqa = "⇽", dqa = "⟦", lqa = "⟵", cqa = "⟵", uqa = "⟸", pqa = "⟷", mqa = "⟷", gqa = "⟺", zqa = "⟼", fqa = "⟶", yqa = "⟶", wqa = "⟹", hqa = "↫", bqa = "↬", vqa = "⦅", kqa = "𝕃", _qa = "𝕝", $qa = "⨭", jqa = "⨴", xqa = "∗", Aqa = "_", Eqa = "↙", Sqa = "↘", qqa = "◊", Pqa = "◊", Tqa = "⧫", Rqa = "(", Oqa = "⦓", Mqa = "⇆", Cqa = "⌟", Lqa = "⇋", Iqa = "⥭", Wqa = "‎", Fqa = "⊿", Dqa = "‹", Bqa = "𝓁", Nqa = "ℒ", Uqa = "↰", Hqa = "↰", Vqa = "≲", Kqa = "⪍", Gqa = "⪏", Yqa = "[", Zqa = "‘", Xqa = "‚", Jqa = "Ł", Qqa = "ł", aPa = "⪦", ePa = "⩹", tPa = "<", iPa = "<", nPa = "≪", rPa = "⋖", sPa = "⋋", oPa = "⋉", dPa = "⥶", lPa = "⩻", cPa = "◃", uPa = "⊴", pPa = "◂", mPa = "⦖", gPa = "⥊", zPa = "⥦", fPa = "≨︀", yPa = "≨︀", wPa = "¯", hPa = "♂", bPa = "✠", vPa = "✠", kPa = "↦", _Pa = "↦", $Pa = "↧", jPa = "↤", xPa = "↥", APa = "▮", EPa = "⨩", SPa = "М", qPa = "м", PPa = "—", TPa = "∺", RPa = "∡", OPa = " ", MPa = "ℳ", CPa = "𝔐", LPa = "𝔪", IPa = "℧", WPa = "µ", FPa = "*", DPa = "⫰", BPa = "∣", NPa = "·", UPa = "⊟", HPa = "−", VPa = "∸", KPa = "⨪", GPa = "∓", YPa = "⫛", ZPa = "…", XPa = "∓", JPa = "⊧", QPa = "𝕄", aTa = "𝕞", eTa = "∓", tTa = "𝓂", iTa = "ℳ", nTa = "∾", rTa = "Μ", sTa = "μ", oTa = "⊸", dTa = "⊸", lTa = "∇", cTa = "Ń", uTa = "ń", pTa = "∠⃒", mTa = "≉", gTa = "⩰̸", zTa = "≋̸", fTa = "ŉ", yTa = "≉", wTa = "♮", hTa = "ℕ", bTa = "♮", vTa = " ", kTa = "≎̸", _Ta = "≏̸", $Ta = "⩃", jTa = "Ň", xTa = "ň", ATa = "Ņ", ETa = "ņ", STa = "≇", qTa = "⩭̸", PTa = "⩂", TTa = "Н", RTa = "н", OTa = "–", MTa = "⤤", CTa = "↗", LTa = "⇗", ITa = "↗", WTa = "≠", FTa = "≐̸", DTa = "​", BTa = "​", NTa = "​", UTa = "​", HTa = "≢", VTa = "⤨", KTa = "≂̸", GTa = "≫", YTa = "≪", ZTa = `
`, XTa = "∄", JTa = "∄", QTa = "𝔑", aRa = "𝔫", eRa = "≧̸", tRa = "≱", iRa = "≱", nRa = "≧̸", rRa = "⩾̸", sRa = "⩾̸", oRa = "⋙̸", dRa = "≵", lRa = "≫⃒", cRa = "≯", uRa = "≯", pRa = "≫̸", mRa = "↮", gRa = "⇎", zRa = "⫲", fRa = "∋", yRa = "⋼", wRa = "⋺", hRa = "∋", bRa = "Њ", vRa = "њ", kRa = "↚", _Ra = "⇍", $Ra = "‥", jRa = "≦̸", xRa = "≰", ARa = "↚", ERa = "⇍", SRa = "↮", qRa = "⇎", PRa = "≰", TRa = "≦̸", RRa = "⩽̸", ORa = "⩽̸", MRa = "≮", CRa = "⋘̸", LRa = "≴", IRa = "≪⃒", WRa = "≮", FRa = "⋪", DRa = "⋬", BRa = "≪̸", NRa = "∤", URa = "⁠", HRa = " ", VRa = "𝕟", KRa = "ℕ", GRa = "⫬", YRa = "¬", ZRa = "≢", XRa = "≭", JRa = "∦", QRa = "∉", aOa = "≠", eOa = "≂̸", tOa = "∄", iOa = "≯", nOa = "≱", rOa = "≧̸", sOa = "≫̸", oOa = "≹", dOa = "⩾̸", lOa = "≵", cOa = "≎̸", uOa = "≏̸", pOa = "∉", mOa = "⋵̸", gOa = "⋹̸", zOa = "∉", fOa = "⋷", yOa = "⋶", wOa = "⧏̸", hOa = "⋪", bOa = "⋬", vOa = "≮", kOa = "≰", _Oa = "≸", $Oa = "≪̸", jOa = "⩽̸", xOa = "≴", AOa = "⪢̸", EOa = "⪡̸", SOa = "∌", qOa = "∌", POa = "⋾", TOa = "⋽", ROa = "⊀", OOa = "⪯̸", MOa = "⋠", COa = "∌", LOa = "⧐̸", IOa = "⋫", WOa = "⋭", FOa = "⊏̸", DOa = "⋢", BOa = "⊐̸", NOa = "⋣", UOa = "⊂⃒", HOa = "⊈", VOa = "⊁", KOa = "⪰̸", GOa = "⋡", YOa = "≿̸", ZOa = "⊃⃒", XOa = "⊉", JOa = "≁", QOa = "≄", a3a = "≇", e3a = "≉", t3a = "∤", i3a = "∦", n3a = "∦", r3a = "⫽⃥", s3a = "∂̸", o3a = "⨔", d3a = "⊀", l3a = "⋠", c3a = "⊀", u3a = "⪯̸", p3a = "⪯̸", m3a = "⤳̸", g3a = "↛", z3a = "⇏", f3a = "↝̸", y3a = "↛", w3a = "⇏", h3a = "⋫", b3a = "⋭", v3a = "⊁", k3a = "⋡", _3a = "⪰̸", $3a = "𝒩", j3a = "𝓃", x3a = "∤", A3a = "∦", E3a = "≁", S3a = "≄", q3a = "≄", P3a = "∤", T3a = "∦", R3a = "⋢", O3a = "⋣", M3a = "⊄", C3a = "⫅̸", L3a = "⊈", I3a = "⊂⃒", W3a = "⊈", F3a = "⫅̸", D3a = "⊁", B3a = "⪰̸", N3a = "⊅", U3a = "⫆̸", H3a = "⊉", V3a = "⊃⃒", K3a = "⊉", G3a = "⫆̸", Y3a = "≹", Z3a = "Ñ", X3a = "ñ", J3a = "≸", Q3a = "⋪", aMa = "⋬", eMa = "⋫", tMa = "⋭", iMa = "Ν", nMa = "ν", rMa = "#", sMa = "№", oMa = " ", dMa = "≍⃒", lMa = "⊬", cMa = "⊭", uMa = "⊮", pMa = "⊯", mMa = "≥⃒", gMa = ">⃒", zMa = "⤄", fMa = "⧞", yMa = "⤂", wMa = "≤⃒", hMa = "<⃒", bMa = "⊴⃒", vMa = "⤃", kMa = "⊵⃒", _Ma = "∼⃒", $Ma = "⤣", jMa = "↖", xMa = "⇖", AMa = "↖", EMa = "⤧", SMa = "Ó", qMa = "ó", PMa = "⊛", TMa = "Ô", RMa = "ô", OMa = "⊚", MMa = "О", CMa = "о", LMa = "⊝", IMa = "Ő", WMa = "ő", FMa = "⨸", DMa = "⊙", BMa = "⦼", NMa = "Œ", UMa = "œ", HMa = "⦿", VMa = "𝔒", KMa = "𝔬", GMa = "˛", YMa = "Ò", ZMa = "ò", XMa = "⧁", JMa = "⦵", QMa = "Ω", aCa = "∮", eCa = "↺", tCa = "⦾", iCa = "⦻", nCa = "‾", rCa = "⧀", sCa = "Ō", oCa = "ō", dCa = "Ω", lCa = "ω", cCa = "Ο", uCa = "ο", pCa = "⦶", mCa = "⊖", gCa = "𝕆", zCa = "𝕠", fCa = "⦷", yCa = "“", wCa = "‘", hCa = "⦹", bCa = "⊕", vCa = "↻", kCa = "⩔", _Ca = "∨", $Ca = "⩝", jCa = "ℴ", xCa = "ℴ", ACa = "ª", ECa = "º", SCa = "⊶", qCa = "⩖", PCa = "⩗", TCa = "⩛", RCa = "Ⓢ", OCa = "𝒪", MCa = "ℴ", CCa = "Ø", LCa = "ø", ICa = "⊘", WCa = "Õ", FCa = "õ", DCa = "⨶", BCa = "⨷", NCa = "⊗", UCa = "Ö", HCa = "ö", VCa = "⌽", KCa = "‾", GCa = "⏞", YCa = "⎴", ZCa = "⏜", XCa = "¶", JCa = "∥", QCa = "∥", aLa = "⫳", eLa = "⫽", tLa = "∂", iLa = "∂", nLa = "П", rLa = "п", sLa = "%", oLa = ".", dLa = "‰", lLa = "⊥", cLa = "‱", uLa = "𝔓", pLa = "𝔭", mLa = "Φ", gLa = "φ", zLa = "ϕ", fLa = "ℳ", yLa = "☎", wLa = "Π", hLa = "π", bLa = "⋔", vLa = "ϖ", kLa = "ℏ", _La = "ℎ", $La = "ℏ", jLa = "⨣", xLa = "⊞", ALa = "⨢", ELa = "+", SLa = "∔", qLa = "⨥", PLa = "⩲", TLa = "±", RLa = "±", OLa = "⨦", MLa = "⨧", CLa = "±", LLa = "ℌ", ILa = "⨕", WLa = "𝕡", FLa = "ℙ", DLa = "£", BLa = "⪷", NLa = "⪻", ULa = "≺", HLa = "≼", VLa = "⪷", KLa = "≺", GLa = "≼", YLa = "≺", ZLa = "⪯", XLa = "≼", JLa = "≾", QLa = "⪯", aIa = "⪹", eIa = "⪵", tIa = "⋨", iIa = "⪯", nIa = "⪳", rIa = "≾", sIa = "′", oIa = "″", dIa = "ℙ", lIa = "⪹", cIa = "⪵", uIa = "⋨", pIa = "∏", mIa = "∏", gIa = "⌮", zIa = "⌒", fIa = "⌓", yIa = "∝", wIa = "∝", hIa = "∷", bIa = "∝", vIa = "≾", kIa = "⊰", _Ia = "𝒫", $Ia = "𝓅", jIa = "Ψ", xIa = "ψ", AIa = " ", EIa = "𝔔", SIa = "𝔮", qIa = "⨌", PIa = "𝕢", TIa = "ℚ", RIa = "⁗", OIa = "𝒬", MIa = "𝓆", CIa = "ℍ", LIa = "⨖", IIa = "?", WIa = "≟", FIa = '"', DIa = '"', BIa = "⇛", NIa = "∽̱", UIa = "Ŕ", HIa = "ŕ", VIa = "√", KIa = "⦳", GIa = "⟩", YIa = "⟫", ZIa = "⦒", XIa = "⦥", JIa = "⟩", QIa = "»", aWa = "⥵", eWa = "⇥", tWa = "⤠", iWa = "⤳", nWa = "→", rWa = "↠", sWa = "⇒", oWa = "⤞", dWa = "↪", lWa = "↬", cWa = "⥅", uWa = "⥴", pWa = "⤖", mWa = "↣", gWa = "↝", zWa = "⤚", fWa = "⤜", yWa = "∶", wWa = "ℚ", hWa = "⤍", bWa = "⤏", vWa = "⤐", kWa = "❳", _Wa = "}", $Wa = "]", jWa = "⦌", xWa = "⦎", AWa = "⦐", EWa = "Ř", SWa = "ř", qWa = "Ŗ", PWa = "ŗ", TWa = "⌉", RWa = "}", OWa = "Р", MWa = "р", CWa = "⤷", LWa = "⥩", IWa = "”", WWa = "”", FWa = "↳", DWa = "ℜ", BWa = "ℛ", NWa = "ℜ", UWa = "ℝ", HWa = "ℜ", VWa = "▭", KWa = "®", GWa = "®", YWa = "∋", ZWa = "⇋", XWa = "⥯", JWa = "⥽", QWa = "⌋", aFa = "𝔯", eFa = "ℜ", tFa = "⥤", iFa = "⇁", nFa = "⇀", rFa = "⥬", sFa = "Ρ", oFa = "ρ", dFa = "ϱ", lFa = "⟩", cFa = "⇥", uFa = "→", pFa = "→", mFa = "⇒", gFa = "⇄", zFa = "↣", fFa = "⌉", yFa = "⟧", wFa = "⥝", hFa = "⥕", bFa = "⇂", vFa = "⌋", kFa = "⇁", _Fa = "⇀", $Fa = "⇄", jFa = "⇌", xFa = "⇉", AFa = "↝", EFa = "↦", SFa = "⊢", qFa = "⥛", PFa = "⋌", TFa = "⧐", RFa = "⊳", OFa = "⊵", MFa = "⥏", CFa = "⥜", LFa = "⥔", IFa = "↾", WFa = "⥓", FFa = "⇀", DFa = "˚", BFa = "≓", NFa = "⇄", UFa = "⇌", HFa = "‏", VFa = "⎱", KFa = "⎱", GFa = "⫮", YFa = "⟭", ZFa = "⇾", XFa = "⟧", JFa = "⦆", QFa = "𝕣", aDa = "ℝ", eDa = "⨮", tDa = "⨵", iDa = "⥰", nDa = ")", rDa = "⦔", sDa = "⨒", oDa = "⇉", dDa = "⇛", lDa = "›", cDa = "𝓇", uDa = "ℛ", pDa = "↱", mDa = "↱", gDa = "]", zDa = "’", fDa = "’", yDa = "⋌", wDa = "⋊", hDa = "▹", bDa = "⊵", vDa = "▸", kDa = "⧎", _Da = "⧴", $Da = "⥨", jDa = "℞", xDa = "Ś", ADa = "ś", EDa = "‚", SDa = "⪸", qDa = "Š", PDa = "š", TDa = "⪼", RDa = "≻", ODa = "≽", MDa = "⪰", CDa = "⪴", LDa = "Ş", IDa = "ş", WDa = "Ŝ", FDa = "ŝ", DDa = "⪺", BDa = "⪶", NDa = "⋩", UDa = "⨓", HDa = "≿", VDa = "С", KDa = "с", GDa = "⊡", YDa = "⋅", ZDa = "⩦", XDa = "⤥", JDa = "↘", QDa = "⇘", a4a = "↘", e4a = "§", t4a = ";", i4a = "⤩", n4a = "∖", r4a = "∖", s4a = "✶", o4a = "𝔖", d4a = "𝔰", l4a = "⌢", c4a = "♯", u4a = "Щ", p4a = "щ", m4a = "Ш", g4a = "ш", z4a = "↓", f4a = "←", y4a = "∣", w4a = "∥", h4a = "→", b4a = "↑", v4a = "­", k4a = "Σ", _4a = "σ", $4a = "ς", j4a = "ς", x4a = "∼", A4a = "⩪", E4a = "≃", S4a = "≃", q4a = "⪞", P4a = "⪠", T4a = "⪝", R4a = "⪟", O4a = "≆", M4a = "⨤", C4a = "⥲", L4a = "←", I4a = "∘", W4a = "∖", F4a = "⨳", D4a = "⧤", B4a = "∣", N4a = "⌣", U4a = "⪪", H4a = "⪬", V4a = "⪬︀", K4a = "Ь", G4a = "ь", Y4a = "⌿", Z4a = "⧄", X4a = "/", J4a = "𝕊", Q4a = "𝕤", aBa = "♠", eBa = "♠", tBa = "∥", iBa = "⊓", nBa = "⊓︀", rBa = "⊔", sBa = "⊔︀", oBa = "√", dBa = "⊏", lBa = "⊑", cBa = "⊏", uBa = "⊑", pBa = "⊐", mBa = "⊒", gBa = "⊐", zBa = "⊒", fBa = "□", yBa = "□", wBa = "⊓", hBa = "⊏", bBa = "⊑", vBa = "⊐", kBa = "⊒", _Ba = "⊔", $Ba = "▪", jBa = "□", xBa = "▪", ABa = "→", EBa = "𝒮", SBa = "𝓈", qBa = "∖", PBa = "⌣", TBa = "⋆", RBa = "⋆", OBa = "☆", MBa = "★", CBa = "ϵ", LBa = "ϕ", IBa = "¯", WBa = "⊂", FBa = "⋐", DBa = "⪽", BBa = "⫅", NBa = "⊆", UBa = "⫃", HBa = "⫁", VBa = "⫋", KBa = "⊊", GBa = "⪿", YBa = "⥹", ZBa = "⊂", XBa = "⋐", JBa = "⊆", QBa = "⫅", aNa = "⊆", eNa = "⊊", tNa = "⫋", iNa = "⫇", nNa = "⫕", rNa = "⫓", sNa = "⪸", oNa = "≻", dNa = "≽", lNa = "≻", cNa = "⪰", uNa = "≽", pNa = "≿", mNa = "⪰", gNa = "⪺", zNa = "⪶", fNa = "⋩", yNa = "≿", wNa = "∋", hNa = "∑", bNa = "∑", vNa = "♪", kNa = "¹", _Na = "²", $Na = "³", jNa = "⊃", xNa = "⋑", ANa = "⪾", ENa = "⫘", SNa = "⫆", qNa = "⊇", PNa = "⫄", TNa = "⊃", RNa = "⊇", ONa = "⟉", MNa = "⫗", CNa = "⥻", LNa = "⫂", INa = "⫌", WNa = "⊋", FNa = "⫀", DNa = "⊃", BNa = "⋑", NNa = "⊇", UNa = "⫆", HNa = "⊋", VNa = "⫌", KNa = "⫈", GNa = "⫔", YNa = "⫖", ZNa = "⤦", XNa = "↙", JNa = "⇙", QNa = "↙", aUa = "⤪", eUa = "ß", tUa = "	", iUa = "⌖", nUa = "Τ", rUa = "τ", sUa = "⎴", oUa = "Ť", dUa = "ť", lUa = "Ţ", cUa = "ţ", uUa = "Т", pUa = "т", mUa = "⃛", gUa = "⌕", zUa = "𝔗", fUa = "𝔱", yUa = "∴", wUa = "∴", hUa = "∴", bUa = "Θ", vUa = "θ", kUa = "ϑ", _Ua = "ϑ", $Ua = "≈", jUa = "∼", xUa = "  ", AUa = " ", EUa = " ", SUa = "≈", qUa = "∼", PUa = "Þ", TUa = "þ", RUa = "˜", OUa = "∼", MUa = "≃", CUa = "≅", LUa = "≈", IUa = "⨱", WUa = "⊠", FUa = "×", DUa = "⨰", BUa = "∭", NUa = "⤨", UUa = "⌶", HUa = "⫱", VUa = "⊤", KUa = "𝕋", GUa = "𝕥", YUa = "⫚", ZUa = "⤩", XUa = "‴", JUa = "™", QUa = "™", a6a = "▵", e6a = "▿", t6a = "◃", i6a = "⊴", n6a = "≜", r6a = "▹", s6a = "⊵", o6a = "◬", d6a = "≜", l6a = "⨺", c6a = "⃛", u6a = "⨹", p6a = "⧍", m6a = "⨻", g6a = "⏢", z6a = "𝒯", f6a = "𝓉", y6a = "Ц", w6a = "ц", h6a = "Ћ", b6a = "ћ", v6a = "Ŧ", k6a = "ŧ", _6a = "≬", $6a = "↞", j6a = "↠", x6a = "Ú", A6a = "ú", E6a = "↑", S6a = "↟", q6a = "⇑", P6a = "⥉", T6a = "Ў", R6a = "ў", O6a = "Ŭ", M6a = "ŭ", C6a = "Û", L6a = "û", I6a = "У", W6a = "у", F6a = "⇅", D6a = "Ű", B6a = "ű", N6a = "⥮", U6a = "⥾", H6a = "𝔘", V6a = "𝔲", K6a = "Ù", G6a = "ù", Y6a = "⥣", Z6a = "↿", X6a = "↾", J6a = "▀", Q6a = "⌜", a5a = "⌜", e5a = "⌏", t5a = "◸", i5a = "Ū", n5a = "ū", r5a = "¨", s5a = "_", o5a = "⏟", d5a = "⎵", l5a = "⏝", c5a = "⋃", u5a = "⊎", p5a = "Ų", m5a = "ų", g5a = "𝕌", z5a = "𝕦", f5a = "⤒", y5a = "↑", w5a = "↑", h5a = "⇑", b5a = "⇅", v5a = "↕", k5a = "↕", _5a = "⇕", $5a = "⥮", j5a = "↿", x5a = "↾", A5a = "⊎", E5a = "↖", S5a = "↗", q5a = "υ", P5a = "ϒ", T5a = "ϒ", R5a = "Υ", O5a = "υ", M5a = "↥", C5a = "⊥", L5a = "⇈", I5a = "⌝", W5a = "⌝", F5a = "⌎", D5a = "Ů", B5a = "ů", N5a = "◹", U5a = "𝒰", H5a = "𝓊", V5a = "⋰", K5a = "Ũ", G5a = "ũ", Y5a = "▵", Z5a = "▴", X5a = "⇈", J5a = "Ü", Q5a = "ü", a8a = "⦧", e8a = "⦜", t8a = "ϵ", i8a = "ϰ", n8a = "∅", r8a = "ϕ", s8a = "ϖ", o8a = "∝", d8a = "↕", l8a = "⇕", c8a = "ϱ", u8a = "ς", p8a = "⊊︀", m8a = "⫋︀", g8a = "⊋︀", z8a = "⫌︀", f8a = "ϑ", y8a = "⊲", w8a = "⊳", h8a = "⫨", b8a = "⫫", v8a = "⫩", k8a = "В", _8a = "в", $8a = "⊢", j8a = "⊨", x8a = "⊩", A8a = "⊫", E8a = "⫦", S8a = "⊻", q8a = "∨", P8a = "⋁", T8a = "≚", R8a = "⋮", O8a = "|", M8a = "‖", C8a = "|", L8a = "‖", I8a = "∣", W8a = "|", F8a = "❘", D8a = "≀", B8a = " ", N8a = "𝔙", U8a = "𝔳", H8a = "⊲", V8a = "⊂⃒", K8a = "⊃⃒", G8a = "𝕍", Y8a = "𝕧", Z8a = "∝", X8a = "⊳", J8a = "𝒱", Q8a = "𝓋", a7a = "⫋︀", e7a = "⊊︀", t7a = "⫌︀", i7a = "⊋︀", n7a = "⊪", r7a = "⦚", s7a = "Ŵ", o7a = "ŵ", d7a = "⩟", l7a = "∧", c7a = "⋀", u7a = "≙", p7a = "℘", m7a = "𝔚", g7a = "𝔴", z7a = "𝕎", f7a = "𝕨", y7a = "℘", w7a = "≀", h7a = "≀", b7a = "𝒲", v7a = "𝓌", k7a = "⋂", _7a = "◯", $7a = "⋃", j7a = "▽", x7a = "𝔛", A7a = "𝔵", E7a = "⟷", S7a = "⟺", q7a = "Ξ", P7a = "ξ", T7a = "⟵", R7a = "⟸", O7a = "⟼", M7a = "⋻", C7a = "⨀", L7a = "𝕏", I7a = "𝕩", W7a = "⨁", F7a = "⨂", D7a = "⟶", B7a = "⟹", N7a = "𝒳", U7a = "𝓍", H7a = "⨆", V7a = "⨄", K7a = "△", G7a = "⋁", Y7a = "⋀", Z7a = "Ý", X7a = "ý", J7a = "Я", Q7a = "я", a9a = "Ŷ", e9a = "ŷ", t9a = "Ы", i9a = "ы", n9a = "¥", r9a = "𝔜", s9a = "𝔶", o9a = "Ї", d9a = "ї", l9a = "𝕐", c9a = "𝕪", u9a = "𝒴", p9a = "𝓎", m9a = "Ю", g9a = "ю", z9a = "ÿ", f9a = "Ÿ", y9a = "Ź", w9a = "ź", h9a = "Ž", b9a = "ž", v9a = "З", k9a = "з", _9a = "Ż", $9a = "ż", j9a = "ℨ", x9a = "​", A9a = "Ζ", E9a = "ζ", S9a = "𝔷", q9a = "ℨ", P9a = "Ж", T9a = "ж", R9a = "⇝", O9a = "𝕫", M9a = "ℤ", C9a = "𝒵", L9a = "𝓏", I9a = "‍", W9a = "‌", F9a = {
  Aacute: _za,
  aacute: $za,
  Abreve: jza,
  abreve: xza,
  ac: Aza,
  acd: Eza,
  acE: Sza,
  Acirc: qza,
  acirc: Pza,
  acute: Tza,
  Acy: Rza,
  acy: Oza,
  AElig: Mza,
  aelig: Cza,
  af: Lza,
  Afr: Iza,
  afr: Wza,
  Agrave: Fza,
  agrave: Dza,
  alefsym: Bza,
  aleph: Nza,
  Alpha: Uza,
  alpha: Hza,
  Amacr: Vza,
  amacr: Kza,
  amalg: Gza,
  amp: Yza,
  AMP: Zza,
  andand: Xza,
  And: Jza,
  and: Qza,
  andd: afa,
  andslope: efa,
  andv: tfa,
  ang: ifa,
  ange: nfa,
  angle: rfa,
  angmsdaa: sfa,
  angmsdab: ofa,
  angmsdac: dfa,
  angmsdad: lfa,
  angmsdae: cfa,
  angmsdaf: ufa,
  angmsdag: pfa,
  angmsdah: mfa,
  angmsd: gfa,
  angrt: zfa,
  angrtvb: ffa,
  angrtvbd: yfa,
  angsph: wfa,
  angst: hfa,
  angzarr: bfa,
  Aogon: vfa,
  aogon: kfa,
  Aopf: _fa,
  aopf: $fa,
  apacir: jfa,
  ap: xfa,
  apE: Afa,
  ape: Efa,
  apid: Sfa,
  apos: qfa,
  ApplyFunction: Pfa,
  approx: Tfa,
  approxeq: Rfa,
  Aring: Ofa,
  aring: Mfa,
  Ascr: Cfa,
  ascr: Lfa,
  Assign: Ifa,
  ast: Wfa,
  asymp: Ffa,
  asympeq: Dfa,
  Atilde: Bfa,
  atilde: Nfa,
  Auml: Ufa,
  auml: Hfa,
  awconint: Vfa,
  awint: Kfa,
  backcong: Gfa,
  backepsilon: Yfa,
  backprime: Zfa,
  backsim: Xfa,
  backsimeq: Jfa,
  Backslash: Qfa,
  Barv: aya,
  barvee: eya,
  barwed: tya,
  Barwed: iya,
  barwedge: nya,
  bbrk: rya,
  bbrktbrk: sya,
  bcong: oya,
  Bcy: dya,
  bcy: lya,
  bdquo: cya,
  becaus: uya,
  because: pya,
  Because: mya,
  bemptyv: gya,
  bepsi: zya,
  bernou: fya,
  Bernoullis: yya,
  Beta: wya,
  beta: hya,
  beth: bya,
  between: vya,
  Bfr: kya,
  bfr: _ya,
  bigcap: $ya,
  bigcirc: jya,
  bigcup: xya,
  bigodot: Aya,
  bigoplus: Eya,
  bigotimes: Sya,
  bigsqcup: qya,
  bigstar: Pya,
  bigtriangledown: Tya,
  bigtriangleup: Rya,
  biguplus: Oya,
  bigvee: Mya,
  bigwedge: Cya,
  bkarow: Lya,
  blacklozenge: Iya,
  blacksquare: Wya,
  blacktriangle: Fya,
  blacktriangledown: Dya,
  blacktriangleleft: Bya,
  blacktriangleright: Nya,
  blank: Uya,
  blk12: Hya,
  blk14: Vya,
  blk34: Kya,
  block: Gya,
  bne: Yya,
  bnequiv: Zya,
  bNot: Xya,
  bnot: Jya,
  Bopf: Qya,
  bopf: awa,
  bot: ewa,
  bottom: twa,
  bowtie: iwa,
  boxbox: nwa,
  boxdl: rwa,
  boxdL: swa,
  boxDl: owa,
  boxDL: dwa,
  boxdr: lwa,
  boxdR: cwa,
  boxDr: uwa,
  boxDR: pwa,
  boxh: mwa,
  boxH: gwa,
  boxhd: zwa,
  boxHd: fwa,
  boxhD: ywa,
  boxHD: wwa,
  boxhu: hwa,
  boxHu: bwa,
  boxhU: vwa,
  boxHU: kwa,
  boxminus: _wa,
  boxplus: $wa,
  boxtimes: jwa,
  boxul: xwa,
  boxuL: Awa,
  boxUl: Ewa,
  boxUL: Swa,
  boxur: qwa,
  boxuR: Pwa,
  boxUr: Twa,
  boxUR: Rwa,
  boxv: Owa,
  boxV: Mwa,
  boxvh: Cwa,
  boxvH: Lwa,
  boxVh: Iwa,
  boxVH: Wwa,
  boxvl: Fwa,
  boxvL: Dwa,
  boxVl: Bwa,
  boxVL: Nwa,
  boxvr: Uwa,
  boxvR: Hwa,
  boxVr: Vwa,
  boxVR: Kwa,
  bprime: Gwa,
  breve: Ywa,
  Breve: Zwa,
  brvbar: Xwa,
  bscr: Jwa,
  Bscr: Qwa,
  bsemi: aha,
  bsim: eha,
  bsime: tha,
  bsolb: iha,
  bsol: nha,
  bsolhsub: rha,
  bull: sha,
  bullet: oha,
  bump: dha,
  bumpE: lha,
  bumpe: cha,
  Bumpeq: uha,
  bumpeq: pha,
  Cacute: mha,
  cacute: gha,
  capand: zha,
  capbrcup: fha,
  capcap: yha,
  cap: wha,
  Cap: hha,
  capcup: bha,
  capdot: vha,
  CapitalDifferentialD: kha,
  caps: _ha,
  caret: $ha,
  caron: jha,
  Cayleys: xha,
  ccaps: Aha,
  Ccaron: Eha,
  ccaron: Sha,
  Ccedil: qha,
  ccedil: Pha,
  Ccirc: Tha,
  ccirc: Rha,
  Cconint: Oha,
  ccups: Mha,
  ccupssm: Cha,
  Cdot: Lha,
  cdot: Iha,
  cedil: Wha,
  Cedilla: Fha,
  cemptyv: Dha,
  cent: Bha,
  centerdot: Nha,
  CenterDot: Uha,
  cfr: Hha,
  Cfr: Vha,
  CHcy: Kha,
  chcy: Gha,
  check: Yha,
  checkmark: Zha,
  Chi: Xha,
  chi: Jha,
  circ: Qha,
  circeq: aba,
  circlearrowleft: eba,
  circlearrowright: tba,
  circledast: iba,
  circledcirc: nba,
  circleddash: rba,
  CircleDot: sba,
  circledR: oba,
  circledS: dba,
  CircleMinus: lba,
  CirclePlus: cba,
  CircleTimes: uba,
  cir: pba,
  cirE: mba,
  cire: gba,
  cirfnint: zba,
  cirmid: fba,
  cirscir: yba,
  ClockwiseContourIntegral: wba,
  CloseCurlyDoubleQuote: hba,
  CloseCurlyQuote: bba,
  clubs: vba,
  clubsuit: kba,
  colon: _ba,
  Colon: $ba,
  Colone: jba,
  colone: xba,
  coloneq: Aba,
  comma: Eba,
  commat: Sba,
  comp: qba,
  compfn: Pba,
  complement: Tba,
  complexes: Rba,
  cong: Oba,
  congdot: Mba,
  Congruent: Cba,
  conint: Lba,
  Conint: Iba,
  ContourIntegral: Wba,
  copf: Fba,
  Copf: Dba,
  coprod: Bba,
  Coproduct: Nba,
  copy: Uba,
  COPY: Hba,
  copysr: Vba,
  CounterClockwiseContourIntegral: Kba,
  crarr: Gba,
  cross: Yba,
  Cross: Zba,
  Cscr: Xba,
  cscr: Jba,
  csub: Qba,
  csube: ava,
  csup: eva,
  csupe: tva,
  ctdot: iva,
  cudarrl: nva,
  cudarrr: rva,
  cuepr: sva,
  cuesc: ova,
  cularr: dva,
  cularrp: lva,
  cupbrcap: cva,
  cupcap: uva,
  CupCap: pva,
  cup: mva,
  Cup: gva,
  cupcup: zva,
  cupdot: fva,
  cupor: yva,
  cups: wva,
  curarr: hva,
  curarrm: bva,
  curlyeqprec: vva,
  curlyeqsucc: kva,
  curlyvee: _va,
  curlywedge: $va,
  curren: jva,
  curvearrowleft: xva,
  curvearrowright: Ava,
  cuvee: Eva,
  cuwed: Sva,
  cwconint: qva,
  cwint: Pva,
  cylcty: Tva,
  dagger: Rva,
  Dagger: Ova,
  daleth: Mva,
  darr: Cva,
  Darr: Lva,
  dArr: Iva,
  dash: Wva,
  Dashv: Fva,
  dashv: Dva,
  dbkarow: Bva,
  dblac: Nva,
  Dcaron: Uva,
  dcaron: Hva,
  Dcy: Vva,
  dcy: Kva,
  ddagger: Gva,
  ddarr: Yva,
  DD: Zva,
  dd: Xva,
  DDotrahd: Jva,
  ddotseq: Qva,
  deg: aka,
  Del: eka,
  Delta: tka,
  delta: ika,
  demptyv: nka,
  dfisht: rka,
  Dfr: ska,
  dfr: oka,
  dHar: dka,
  dharl: lka,
  dharr: cka,
  DiacriticalAcute: uka,
  DiacriticalDot: pka,
  DiacriticalDoubleAcute: mka,
  DiacriticalGrave: gka,
  DiacriticalTilde: zka,
  diam: fka,
  diamond: yka,
  Diamond: wka,
  diamondsuit: hka,
  diams: bka,
  die: vka,
  DifferentialD: kka,
  digamma: _ka,
  disin: $ka,
  div: jka,
  divide: xka,
  divideontimes: Aka,
  divonx: Eka,
  DJcy: Ska,
  djcy: qka,
  dlcorn: Pka,
  dlcrop: Tka,
  dollar: Rka,
  Dopf: Oka,
  dopf: Mka,
  Dot: Cka,
  dot: Lka,
  DotDot: Ika,
  doteq: Wka,
  doteqdot: Fka,
  DotEqual: Dka,
  dotminus: Bka,
  dotplus: Nka,
  dotsquare: Uka,
  doublebarwedge: Hka,
  DoubleContourIntegral: Vka,
  DoubleDot: Kka,
  DoubleDownArrow: Gka,
  DoubleLeftArrow: Yka,
  DoubleLeftRightArrow: Zka,
  DoubleLeftTee: Xka,
  DoubleLongLeftArrow: Jka,
  DoubleLongLeftRightArrow: Qka,
  DoubleLongRightArrow: a0a,
  DoubleRightArrow: e0a,
  DoubleRightTee: t0a,
  DoubleUpArrow: i0a,
  DoubleUpDownArrow: n0a,
  DoubleVerticalBar: r0a,
  DownArrowBar: s0a,
  downarrow: o0a,
  DownArrow: d0a,
  Downarrow: l0a,
  DownArrowUpArrow: c0a,
  DownBreve: u0a,
  downdownarrows: p0a,
  downharpoonleft: m0a,
  downharpoonright: g0a,
  DownLeftRightVector: z0a,
  DownLeftTeeVector: f0a,
  DownLeftVectorBar: y0a,
  DownLeftVector: w0a,
  DownRightTeeVector: h0a,
  DownRightVectorBar: b0a,
  DownRightVector: v0a,
  DownTeeArrow: k0a,
  DownTee: _0a,
  drbkarow: $0a,
  drcorn: j0a,
  drcrop: x0a,
  Dscr: A0a,
  dscr: E0a,
  DScy: S0a,
  dscy: q0a,
  dsol: P0a,
  Dstrok: T0a,
  dstrok: R0a,
  dtdot: O0a,
  dtri: M0a,
  dtrif: C0a,
  duarr: L0a,
  duhar: I0a,
  dwangle: W0a,
  DZcy: F0a,
  dzcy: D0a,
  dzigrarr: B0a,
  Eacute: N0a,
  eacute: U0a,
  easter: H0a,
  Ecaron: V0a,
  ecaron: K0a,
  Ecirc: G0a,
  ecirc: Y0a,
  ecir: Z0a,
  ecolon: X0a,
  Ecy: J0a,
  ecy: Q0a,
  eDDot: a_a,
  Edot: e_a,
  edot: t_a,
  eDot: i_a,
  ee: n_a,
  efDot: r_a,
  Efr: s_a,
  efr: o_a,
  eg: d_a,
  Egrave: l_a,
  egrave: c_a,
  egs: u_a,
  egsdot: p_a,
  el: m_a,
  Element: g_a,
  elinters: z_a,
  ell: f_a,
  els: y_a,
  elsdot: w_a,
  Emacr: h_a,
  emacr: b_a,
  empty: v_a,
  emptyset: k_a,
  EmptySmallSquare: __a,
  emptyv: $_a,
  EmptyVerySmallSquare: j_a,
  emsp13: x_a,
  emsp14: A_a,
  emsp: E_a,
  ENG: S_a,
  eng: q_a,
  ensp: P_a,
  Eogon: T_a,
  eogon: R_a,
  Eopf: O_a,
  eopf: M_a,
  epar: C_a,
  eparsl: L_a,
  eplus: I_a,
  epsi: W_a,
  Epsilon: F_a,
  epsilon: D_a,
  epsiv: B_a,
  eqcirc: N_a,
  eqcolon: U_a,
  eqsim: H_a,
  eqslantgtr: V_a,
  eqslantless: K_a,
  Equal: G_a,
  equals: Y_a,
  EqualTilde: Z_a,
  equest: X_a,
  Equilibrium: J_a,
  equiv: Q_a,
  equivDD: a1a,
  eqvparsl: e1a,
  erarr: t1a,
  erDot: i1a,
  escr: n1a,
  Escr: r1a,
  esdot: s1a,
  Esim: o1a,
  esim: d1a,
  Eta: l1a,
  eta: c1a,
  ETH: u1a,
  eth: p1a,
  Euml: m1a,
  euml: g1a,
  euro: z1a,
  excl: f1a,
  exist: y1a,
  Exists: w1a,
  expectation: h1a,
  exponentiale: b1a,
  ExponentialE: v1a,
  fallingdotseq: k1a,
  Fcy: _1a,
  fcy: $1a,
  female: j1a,
  ffilig: x1a,
  fflig: A1a,
  ffllig: E1a,
  Ffr: S1a,
  ffr: q1a,
  filig: P1a,
  FilledSmallSquare: T1a,
  FilledVerySmallSquare: R1a,
  fjlig: O1a,
  flat: M1a,
  fllig: C1a,
  fltns: L1a,
  fnof: I1a,
  Fopf: W1a,
  fopf: F1a,
  forall: D1a,
  ForAll: B1a,
  fork: N1a,
  forkv: U1a,
  Fouriertrf: H1a,
  fpartint: V1a,
  frac12: K1a,
  frac13: G1a,
  frac14: Y1a,
  frac15: Z1a,
  frac16: X1a,
  frac18: J1a,
  frac23: Q1a,
  frac25: a$a,
  frac34: e$a,
  frac35: t$a,
  frac38: i$a,
  frac45: n$a,
  frac56: r$a,
  frac58: s$a,
  frac78: o$a,
  frasl: d$a,
  frown: l$a,
  fscr: c$a,
  Fscr: u$a,
  gacute: p$a,
  Gamma: m$a,
  gamma: g$a,
  Gammad: z$a,
  gammad: f$a,
  gap: y$a,
  Gbreve: w$a,
  gbreve: h$a,
  Gcedil: b$a,
  Gcirc: v$a,
  gcirc: k$a,
  Gcy: _$a,
  gcy: $$a,
  Gdot: j$a,
  gdot: x$a,
  ge: A$a,
  gE: E$a,
  gEl: S$a,
  gel: q$a,
  geq: P$a,
  geqq: T$a,
  geqslant: R$a,
  gescc: O$a,
  ges: M$a,
  gesdot: C$a,
  gesdoto: L$a,
  gesdotol: I$a,
  gesl: W$a,
  gesles: F$a,
  Gfr: D$a,
  gfr: B$a,
  gg: N$a,
  Gg: U$a,
  ggg: H$a,
  gimel: V$a,
  GJcy: K$a,
  gjcy: G$a,
  gla: Y$a,
  gl: Z$a,
  glE: X$a,
  glj: J$a,
  gnap: Q$a,
  gnapprox: aja,
  gne: eja,
  gnE: tja,
  gneq: ija,
  gneqq: nja,
  gnsim: rja,
  Gopf: sja,
  gopf: oja,
  grave: dja,
  GreaterEqual: lja,
  GreaterEqualLess: cja,
  GreaterFullEqual: uja,
  GreaterGreater: pja,
  GreaterLess: mja,
  GreaterSlantEqual: gja,
  GreaterTilde: zja,
  Gscr: fja,
  gscr: yja,
  gsim: wja,
  gsime: hja,
  gsiml: bja,
  gtcc: vja,
  gtcir: kja,
  gt: _ja,
  GT: $ja,
  Gt: jja,
  gtdot: xja,
  gtlPar: Aja,
  gtquest: Eja,
  gtrapprox: Sja,
  gtrarr: qja,
  gtrdot: Pja,
  gtreqless: Tja,
  gtreqqless: Rja,
  gtrless: Oja,
  gtrsim: Mja,
  gvertneqq: Cja,
  gvnE: Lja,
  Hacek: Ija,
  hairsp: Wja,
  half: Fja,
  hamilt: Dja,
  HARDcy: Bja,
  hardcy: Nja,
  harrcir: Uja,
  harr: Hja,
  hArr: Vja,
  harrw: Kja,
  Hat: Gja,
  hbar: Yja,
  Hcirc: Zja,
  hcirc: Xja,
  hearts: Jja,
  heartsuit: Qja,
  hellip: axa,
  hercon: exa,
  hfr: txa,
  Hfr: ixa,
  HilbertSpace: nxa,
  hksearow: rxa,
  hkswarow: sxa,
  hoarr: oxa,
  homtht: dxa,
  hookleftarrow: lxa,
  hookrightarrow: cxa,
  hopf: uxa,
  Hopf: pxa,
  horbar: mxa,
  HorizontalLine: gxa,
  hscr: zxa,
  Hscr: fxa,
  hslash: yxa,
  Hstrok: wxa,
  hstrok: hxa,
  HumpDownHump: bxa,
  HumpEqual: vxa,
  hybull: kxa,
  hyphen: _xa,
  Iacute: $xa,
  iacute: jxa,
  ic: xxa,
  Icirc: Axa,
  icirc: Exa,
  Icy: Sxa,
  icy: qxa,
  Idot: Pxa,
  IEcy: Txa,
  iecy: Rxa,
  iexcl: Oxa,
  iff: Mxa,
  ifr: Cxa,
  Ifr: Lxa,
  Igrave: Ixa,
  igrave: Wxa,
  ii: Fxa,
  iiiint: Dxa,
  iiint: Bxa,
  iinfin: Nxa,
  iiota: Uxa,
  IJlig: Hxa,
  ijlig: Vxa,
  Imacr: Kxa,
  imacr: Gxa,
  image: Yxa,
  ImaginaryI: Zxa,
  imagline: Xxa,
  imagpart: Jxa,
  imath: Qxa,
  Im: a2a,
  imof: e2a,
  imped: t2a,
  Implies: i2a,
  incare: n2a,
  in: "∈",
  infin: r2a,
  infintie: s2a,
  inodot: o2a,
  intcal: d2a,
  int: l2a,
  Int: c2a,
  integers: u2a,
  Integral: p2a,
  intercal: m2a,
  Intersection: g2a,
  intlarhk: z2a,
  intprod: f2a,
  InvisibleComma: y2a,
  InvisibleTimes: w2a,
  IOcy: h2a,
  iocy: b2a,
  Iogon: v2a,
  iogon: k2a,
  Iopf: _2a,
  iopf: $2a,
  Iota: j2a,
  iota: x2a,
  iprod: A2a,
  iquest: E2a,
  iscr: S2a,
  Iscr: q2a,
  isin: P2a,
  isindot: T2a,
  isinE: R2a,
  isins: O2a,
  isinsv: M2a,
  isinv: C2a,
  it: L2a,
  Itilde: I2a,
  itilde: W2a,
  Iukcy: F2a,
  iukcy: D2a,
  Iuml: B2a,
  iuml: N2a,
  Jcirc: U2a,
  jcirc: H2a,
  Jcy: V2a,
  jcy: K2a,
  Jfr: G2a,
  jfr: Y2a,
  jmath: Z2a,
  Jopf: X2a,
  jopf: J2a,
  Jscr: Q2a,
  jscr: aAa,
  Jsercy: eAa,
  jsercy: tAa,
  Jukcy: iAa,
  jukcy: nAa,
  Kappa: rAa,
  kappa: sAa,
  kappav: oAa,
  Kcedil: dAa,
  kcedil: lAa,
  Kcy: cAa,
  kcy: uAa,
  Kfr: pAa,
  kfr: mAa,
  kgreen: gAa,
  KHcy: zAa,
  khcy: fAa,
  KJcy: yAa,
  kjcy: wAa,
  Kopf: hAa,
  kopf: bAa,
  Kscr: vAa,
  kscr: kAa,
  lAarr: _Aa,
  Lacute: $Aa,
  lacute: jAa,
  laemptyv: xAa,
  lagran: AAa,
  Lambda: EAa,
  lambda: SAa,
  lang: qAa,
  Lang: PAa,
  langd: TAa,
  langle: RAa,
  lap: OAa,
  Laplacetrf: MAa,
  laquo: CAa,
  larrb: LAa,
  larrbfs: IAa,
  larr: WAa,
  Larr: FAa,
  lArr: DAa,
  larrfs: BAa,
  larrhk: NAa,
  larrlp: UAa,
  larrpl: HAa,
  larrsim: VAa,
  larrtl: KAa,
  latail: GAa,
  lAtail: YAa,
  lat: ZAa,
  late: XAa,
  lates: JAa,
  lbarr: QAa,
  lBarr: aEa,
  lbbrk: eEa,
  lbrace: tEa,
  lbrack: iEa,
  lbrke: nEa,
  lbrksld: rEa,
  lbrkslu: sEa,
  Lcaron: oEa,
  lcaron: dEa,
  Lcedil: lEa,
  lcedil: cEa,
  lceil: uEa,
  lcub: pEa,
  Lcy: mEa,
  lcy: gEa,
  ldca: zEa,
  ldquo: fEa,
  ldquor: yEa,
  ldrdhar: wEa,
  ldrushar: hEa,
  ldsh: bEa,
  le: vEa,
  lE: kEa,
  LeftAngleBracket: _Ea,
  LeftArrowBar: $Ea,
  leftarrow: jEa,
  LeftArrow: xEa,
  Leftarrow: AEa,
  LeftArrowRightArrow: EEa,
  leftarrowtail: SEa,
  LeftCeiling: qEa,
  LeftDoubleBracket: PEa,
  LeftDownTeeVector: TEa,
  LeftDownVectorBar: REa,
  LeftDownVector: OEa,
  LeftFloor: MEa,
  leftharpoondown: CEa,
  leftharpoonup: LEa,
  leftleftarrows: IEa,
  leftrightarrow: WEa,
  LeftRightArrow: FEa,
  Leftrightarrow: DEa,
  leftrightarrows: BEa,
  leftrightharpoons: NEa,
  leftrightsquigarrow: UEa,
  LeftRightVector: HEa,
  LeftTeeArrow: VEa,
  LeftTee: KEa,
  LeftTeeVector: GEa,
  leftthreetimes: YEa,
  LeftTriangleBar: ZEa,
  LeftTriangle: XEa,
  LeftTriangleEqual: JEa,
  LeftUpDownVector: QEa,
  LeftUpTeeVector: aSa,
  LeftUpVectorBar: eSa,
  LeftUpVector: tSa,
  LeftVectorBar: iSa,
  LeftVector: nSa,
  lEg: rSa,
  leg: sSa,
  leq: oSa,
  leqq: dSa,
  leqslant: lSa,
  lescc: cSa,
  les: uSa,
  lesdot: pSa,
  lesdoto: mSa,
  lesdotor: gSa,
  lesg: zSa,
  lesges: fSa,
  lessapprox: ySa,
  lessdot: wSa,
  lesseqgtr: hSa,
  lesseqqgtr: bSa,
  LessEqualGreater: vSa,
  LessFullEqual: kSa,
  LessGreater: _Sa,
  lessgtr: $Sa,
  LessLess: jSa,
  lesssim: xSa,
  LessSlantEqual: ASa,
  LessTilde: ESa,
  lfisht: SSa,
  lfloor: qSa,
  Lfr: PSa,
  lfr: TSa,
  lg: RSa,
  lgE: OSa,
  lHar: MSa,
  lhard: CSa,
  lharu: LSa,
  lharul: ISa,
  lhblk: WSa,
  LJcy: FSa,
  ljcy: DSa,
  llarr: BSa,
  ll: NSa,
  Ll: USa,
  llcorner: HSa,
  Lleftarrow: VSa,
  llhard: KSa,
  lltri: GSa,
  Lmidot: YSa,
  lmidot: ZSa,
  lmoustache: XSa,
  lmoust: JSa,
  lnap: QSa,
  lnapprox: aqa,
  lne: eqa,
  lnE: tqa,
  lneq: iqa,
  lneqq: nqa,
  lnsim: rqa,
  loang: sqa,
  loarr: oqa,
  lobrk: dqa,
  longleftarrow: lqa,
  LongLeftArrow: cqa,
  Longleftarrow: uqa,
  longleftrightarrow: pqa,
  LongLeftRightArrow: mqa,
  Longleftrightarrow: gqa,
  longmapsto: zqa,
  longrightarrow: fqa,
  LongRightArrow: yqa,
  Longrightarrow: wqa,
  looparrowleft: hqa,
  looparrowright: bqa,
  lopar: vqa,
  Lopf: kqa,
  lopf: _qa,
  loplus: $qa,
  lotimes: jqa,
  lowast: xqa,
  lowbar: Aqa,
  LowerLeftArrow: Eqa,
  LowerRightArrow: Sqa,
  loz: qqa,
  lozenge: Pqa,
  lozf: Tqa,
  lpar: Rqa,
  lparlt: Oqa,
  lrarr: Mqa,
  lrcorner: Cqa,
  lrhar: Lqa,
  lrhard: Iqa,
  lrm: Wqa,
  lrtri: Fqa,
  lsaquo: Dqa,
  lscr: Bqa,
  Lscr: Nqa,
  lsh: Uqa,
  Lsh: Hqa,
  lsim: Vqa,
  lsime: Kqa,
  lsimg: Gqa,
  lsqb: Yqa,
  lsquo: Zqa,
  lsquor: Xqa,
  Lstrok: Jqa,
  lstrok: Qqa,
  ltcc: aPa,
  ltcir: ePa,
  lt: tPa,
  LT: iPa,
  Lt: nPa,
  ltdot: rPa,
  lthree: sPa,
  ltimes: oPa,
  ltlarr: dPa,
  ltquest: lPa,
  ltri: cPa,
  ltrie: uPa,
  ltrif: pPa,
  ltrPar: mPa,
  lurdshar: gPa,
  luruhar: zPa,
  lvertneqq: fPa,
  lvnE: yPa,
  macr: wPa,
  male: hPa,
  malt: bPa,
  maltese: vPa,
  Map: "⤅",
  map: kPa,
  mapsto: _Pa,
  mapstodown: $Pa,
  mapstoleft: jPa,
  mapstoup: xPa,
  marker: APa,
  mcomma: EPa,
  Mcy: SPa,
  mcy: qPa,
  mdash: PPa,
  mDDot: TPa,
  measuredangle: RPa,
  MediumSpace: OPa,
  Mellintrf: MPa,
  Mfr: CPa,
  mfr: LPa,
  mho: IPa,
  micro: WPa,
  midast: FPa,
  midcir: DPa,
  mid: BPa,
  middot: NPa,
  minusb: UPa,
  minus: HPa,
  minusd: VPa,
  minusdu: KPa,
  MinusPlus: GPa,
  mlcp: YPa,
  mldr: ZPa,
  mnplus: XPa,
  models: JPa,
  Mopf: QPa,
  mopf: aTa,
  mp: eTa,
  mscr: tTa,
  Mscr: iTa,
  mstpos: nTa,
  Mu: rTa,
  mu: sTa,
  multimap: oTa,
  mumap: dTa,
  nabla: lTa,
  Nacute: cTa,
  nacute: uTa,
  nang: pTa,
  nap: mTa,
  napE: gTa,
  napid: zTa,
  napos: fTa,
  napprox: yTa,
  natural: wTa,
  naturals: hTa,
  natur: bTa,
  nbsp: vTa,
  nbump: kTa,
  nbumpe: _Ta,
  ncap: $Ta,
  Ncaron: jTa,
  ncaron: xTa,
  Ncedil: ATa,
  ncedil: ETa,
  ncong: STa,
  ncongdot: qTa,
  ncup: PTa,
  Ncy: TTa,
  ncy: RTa,
  ndash: OTa,
  nearhk: MTa,
  nearr: CTa,
  neArr: LTa,
  nearrow: ITa,
  ne: WTa,
  nedot: FTa,
  NegativeMediumSpace: DTa,
  NegativeThickSpace: BTa,
  NegativeThinSpace: NTa,
  NegativeVeryThinSpace: UTa,
  nequiv: HTa,
  nesear: VTa,
  nesim: KTa,
  NestedGreaterGreater: GTa,
  NestedLessLess: YTa,
  NewLine: ZTa,
  nexist: XTa,
  nexists: JTa,
  Nfr: QTa,
  nfr: aRa,
  ngE: eRa,
  nge: tRa,
  ngeq: iRa,
  ngeqq: nRa,
  ngeqslant: rRa,
  nges: sRa,
  nGg: oRa,
  ngsim: dRa,
  nGt: lRa,
  ngt: cRa,
  ngtr: uRa,
  nGtv: pRa,
  nharr: mRa,
  nhArr: gRa,
  nhpar: zRa,
  ni: fRa,
  nis: yRa,
  nisd: wRa,
  niv: hRa,
  NJcy: bRa,
  njcy: vRa,
  nlarr: kRa,
  nlArr: _Ra,
  nldr: $Ra,
  nlE: jRa,
  nle: xRa,
  nleftarrow: ARa,
  nLeftarrow: ERa,
  nleftrightarrow: SRa,
  nLeftrightarrow: qRa,
  nleq: PRa,
  nleqq: TRa,
  nleqslant: RRa,
  nles: ORa,
  nless: MRa,
  nLl: CRa,
  nlsim: LRa,
  nLt: IRa,
  nlt: WRa,
  nltri: FRa,
  nltrie: DRa,
  nLtv: BRa,
  nmid: NRa,
  NoBreak: URa,
  NonBreakingSpace: HRa,
  nopf: VRa,
  Nopf: KRa,
  Not: GRa,
  not: YRa,
  NotCongruent: ZRa,
  NotCupCap: XRa,
  NotDoubleVerticalBar: JRa,
  NotElement: QRa,
  NotEqual: aOa,
  NotEqualTilde: eOa,
  NotExists: tOa,
  NotGreater: iOa,
  NotGreaterEqual: nOa,
  NotGreaterFullEqual: rOa,
  NotGreaterGreater: sOa,
  NotGreaterLess: oOa,
  NotGreaterSlantEqual: dOa,
  NotGreaterTilde: lOa,
  NotHumpDownHump: cOa,
  NotHumpEqual: uOa,
  notin: pOa,
  notindot: mOa,
  notinE: gOa,
  notinva: zOa,
  notinvb: fOa,
  notinvc: yOa,
  NotLeftTriangleBar: wOa,
  NotLeftTriangle: hOa,
  NotLeftTriangleEqual: bOa,
  NotLess: vOa,
  NotLessEqual: kOa,
  NotLessGreater: _Oa,
  NotLessLess: $Oa,
  NotLessSlantEqual: jOa,
  NotLessTilde: xOa,
  NotNestedGreaterGreater: AOa,
  NotNestedLessLess: EOa,
  notni: SOa,
  notniva: qOa,
  notnivb: POa,
  notnivc: TOa,
  NotPrecedes: ROa,
  NotPrecedesEqual: OOa,
  NotPrecedesSlantEqual: MOa,
  NotReverseElement: COa,
  NotRightTriangleBar: LOa,
  NotRightTriangle: IOa,
  NotRightTriangleEqual: WOa,
  NotSquareSubset: FOa,
  NotSquareSubsetEqual: DOa,
  NotSquareSuperset: BOa,
  NotSquareSupersetEqual: NOa,
  NotSubset: UOa,
  NotSubsetEqual: HOa,
  NotSucceeds: VOa,
  NotSucceedsEqual: KOa,
  NotSucceedsSlantEqual: GOa,
  NotSucceedsTilde: YOa,
  NotSuperset: ZOa,
  NotSupersetEqual: XOa,
  NotTilde: JOa,
  NotTildeEqual: QOa,
  NotTildeFullEqual: a3a,
  NotTildeTilde: e3a,
  NotVerticalBar: t3a,
  nparallel: i3a,
  npar: n3a,
  nparsl: r3a,
  npart: s3a,
  npolint: o3a,
  npr: d3a,
  nprcue: l3a,
  nprec: c3a,
  npreceq: u3a,
  npre: p3a,
  nrarrc: m3a,
  nrarr: g3a,
  nrArr: z3a,
  nrarrw: f3a,
  nrightarrow: y3a,
  nRightarrow: w3a,
  nrtri: h3a,
  nrtrie: b3a,
  nsc: v3a,
  nsccue: k3a,
  nsce: _3a,
  Nscr: $3a,
  nscr: j3a,
  nshortmid: x3a,
  nshortparallel: A3a,
  nsim: E3a,
  nsime: S3a,
  nsimeq: q3a,
  nsmid: P3a,
  nspar: T3a,
  nsqsube: R3a,
  nsqsupe: O3a,
  nsub: M3a,
  nsubE: C3a,
  nsube: L3a,
  nsubset: I3a,
  nsubseteq: W3a,
  nsubseteqq: F3a,
  nsucc: D3a,
  nsucceq: B3a,
  nsup: N3a,
  nsupE: U3a,
  nsupe: H3a,
  nsupset: V3a,
  nsupseteq: K3a,
  nsupseteqq: G3a,
  ntgl: Y3a,
  Ntilde: Z3a,
  ntilde: X3a,
  ntlg: J3a,
  ntriangleleft: Q3a,
  ntrianglelefteq: aMa,
  ntriangleright: eMa,
  ntrianglerighteq: tMa,
  Nu: iMa,
  nu: nMa,
  num: rMa,
  numero: sMa,
  numsp: oMa,
  nvap: dMa,
  nvdash: lMa,
  nvDash: cMa,
  nVdash: uMa,
  nVDash: pMa,
  nvge: mMa,
  nvgt: gMa,
  nvHarr: zMa,
  nvinfin: fMa,
  nvlArr: yMa,
  nvle: wMa,
  nvlt: hMa,
  nvltrie: bMa,
  nvrArr: vMa,
  nvrtrie: kMa,
  nvsim: _Ma,
  nwarhk: $Ma,
  nwarr: jMa,
  nwArr: xMa,
  nwarrow: AMa,
  nwnear: EMa,
  Oacute: SMa,
  oacute: qMa,
  oast: PMa,
  Ocirc: TMa,
  ocirc: RMa,
  ocir: OMa,
  Ocy: MMa,
  ocy: CMa,
  odash: LMa,
  Odblac: IMa,
  odblac: WMa,
  odiv: FMa,
  odot: DMa,
  odsold: BMa,
  OElig: NMa,
  oelig: UMa,
  ofcir: HMa,
  Ofr: VMa,
  ofr: KMa,
  ogon: GMa,
  Ograve: YMa,
  ograve: ZMa,
  ogt: XMa,
  ohbar: JMa,
  ohm: QMa,
  oint: aCa,
  olarr: eCa,
  olcir: tCa,
  olcross: iCa,
  oline: nCa,
  olt: rCa,
  Omacr: sCa,
  omacr: oCa,
  Omega: dCa,
  omega: lCa,
  Omicron: cCa,
  omicron: uCa,
  omid: pCa,
  ominus: mCa,
  Oopf: gCa,
  oopf: zCa,
  opar: fCa,
  OpenCurlyDoubleQuote: yCa,
  OpenCurlyQuote: wCa,
  operp: hCa,
  oplus: bCa,
  orarr: vCa,
  Or: kCa,
  or: _Ca,
  ord: $Ca,
  order: jCa,
  orderof: xCa,
  ordf: ACa,
  ordm: ECa,
  origof: SCa,
  oror: qCa,
  orslope: PCa,
  orv: TCa,
  oS: RCa,
  Oscr: OCa,
  oscr: MCa,
  Oslash: CCa,
  oslash: LCa,
  osol: ICa,
  Otilde: WCa,
  otilde: FCa,
  otimesas: DCa,
  Otimes: BCa,
  otimes: NCa,
  Ouml: UCa,
  ouml: HCa,
  ovbar: VCa,
  OverBar: KCa,
  OverBrace: GCa,
  OverBracket: YCa,
  OverParenthesis: ZCa,
  para: XCa,
  parallel: JCa,
  par: QCa,
  parsim: aLa,
  parsl: eLa,
  part: tLa,
  PartialD: iLa,
  Pcy: nLa,
  pcy: rLa,
  percnt: sLa,
  period: oLa,
  permil: dLa,
  perp: lLa,
  pertenk: cLa,
  Pfr: uLa,
  pfr: pLa,
  Phi: mLa,
  phi: gLa,
  phiv: zLa,
  phmmat: fLa,
  phone: yLa,
  Pi: wLa,
  pi: hLa,
  pitchfork: bLa,
  piv: vLa,
  planck: kLa,
  planckh: _La,
  plankv: $La,
  plusacir: jLa,
  plusb: xLa,
  pluscir: ALa,
  plus: ELa,
  plusdo: SLa,
  plusdu: qLa,
  pluse: PLa,
  PlusMinus: TLa,
  plusmn: RLa,
  plussim: OLa,
  plustwo: MLa,
  pm: CLa,
  Poincareplane: LLa,
  pointint: ILa,
  popf: WLa,
  Popf: FLa,
  pound: DLa,
  prap: BLa,
  Pr: NLa,
  pr: ULa,
  prcue: HLa,
  precapprox: VLa,
  prec: KLa,
  preccurlyeq: GLa,
  Precedes: YLa,
  PrecedesEqual: ZLa,
  PrecedesSlantEqual: XLa,
  PrecedesTilde: JLa,
  preceq: QLa,
  precnapprox: aIa,
  precneqq: eIa,
  precnsim: tIa,
  pre: iIa,
  prE: nIa,
  precsim: rIa,
  prime: sIa,
  Prime: oIa,
  primes: dIa,
  prnap: lIa,
  prnE: cIa,
  prnsim: uIa,
  prod: pIa,
  Product: mIa,
  profalar: gIa,
  profline: zIa,
  profsurf: fIa,
  prop: yIa,
  Proportional: wIa,
  Proportion: hIa,
  propto: bIa,
  prsim: vIa,
  prurel: kIa,
  Pscr: _Ia,
  pscr: $Ia,
  Psi: jIa,
  psi: xIa,
  puncsp: AIa,
  Qfr: EIa,
  qfr: SIa,
  qint: qIa,
  qopf: PIa,
  Qopf: TIa,
  qprime: RIa,
  Qscr: OIa,
  qscr: MIa,
  quaternions: CIa,
  quatint: LIa,
  quest: IIa,
  questeq: WIa,
  quot: FIa,
  QUOT: DIa,
  rAarr: BIa,
  race: NIa,
  Racute: UIa,
  racute: HIa,
  radic: VIa,
  raemptyv: KIa,
  rang: GIa,
  Rang: YIa,
  rangd: ZIa,
  range: XIa,
  rangle: JIa,
  raquo: QIa,
  rarrap: aWa,
  rarrb: eWa,
  rarrbfs: tWa,
  rarrc: iWa,
  rarr: nWa,
  Rarr: rWa,
  rArr: sWa,
  rarrfs: oWa,
  rarrhk: dWa,
  rarrlp: lWa,
  rarrpl: cWa,
  rarrsim: uWa,
  Rarrtl: pWa,
  rarrtl: mWa,
  rarrw: gWa,
  ratail: zWa,
  rAtail: fWa,
  ratio: yWa,
  rationals: wWa,
  rbarr: hWa,
  rBarr: bWa,
  RBarr: vWa,
  rbbrk: kWa,
  rbrace: _Wa,
  rbrack: $Wa,
  rbrke: jWa,
  rbrksld: xWa,
  rbrkslu: AWa,
  Rcaron: EWa,
  rcaron: SWa,
  Rcedil: qWa,
  rcedil: PWa,
  rceil: TWa,
  rcub: RWa,
  Rcy: OWa,
  rcy: MWa,
  rdca: CWa,
  rdldhar: LWa,
  rdquo: IWa,
  rdquor: WWa,
  rdsh: FWa,
  real: DWa,
  realine: BWa,
  realpart: NWa,
  reals: UWa,
  Re: HWa,
  rect: VWa,
  reg: KWa,
  REG: GWa,
  ReverseElement: YWa,
  ReverseEquilibrium: ZWa,
  ReverseUpEquilibrium: XWa,
  rfisht: JWa,
  rfloor: QWa,
  rfr: aFa,
  Rfr: eFa,
  rHar: tFa,
  rhard: iFa,
  rharu: nFa,
  rharul: rFa,
  Rho: sFa,
  rho: oFa,
  rhov: dFa,
  RightAngleBracket: lFa,
  RightArrowBar: cFa,
  rightarrow: uFa,
  RightArrow: pFa,
  Rightarrow: mFa,
  RightArrowLeftArrow: gFa,
  rightarrowtail: zFa,
  RightCeiling: fFa,
  RightDoubleBracket: yFa,
  RightDownTeeVector: wFa,
  RightDownVectorBar: hFa,
  RightDownVector: bFa,
  RightFloor: vFa,
  rightharpoondown: kFa,
  rightharpoonup: _Fa,
  rightleftarrows: $Fa,
  rightleftharpoons: jFa,
  rightrightarrows: xFa,
  rightsquigarrow: AFa,
  RightTeeArrow: EFa,
  RightTee: SFa,
  RightTeeVector: qFa,
  rightthreetimes: PFa,
  RightTriangleBar: TFa,
  RightTriangle: RFa,
  RightTriangleEqual: OFa,
  RightUpDownVector: MFa,
  RightUpTeeVector: CFa,
  RightUpVectorBar: LFa,
  RightUpVector: IFa,
  RightVectorBar: WFa,
  RightVector: FFa,
  ring: DFa,
  risingdotseq: BFa,
  rlarr: NFa,
  rlhar: UFa,
  rlm: HFa,
  rmoustache: VFa,
  rmoust: KFa,
  rnmid: GFa,
  roang: YFa,
  roarr: ZFa,
  robrk: XFa,
  ropar: JFa,
  ropf: QFa,
  Ropf: aDa,
  roplus: eDa,
  rotimes: tDa,
  RoundImplies: iDa,
  rpar: nDa,
  rpargt: rDa,
  rppolint: sDa,
  rrarr: oDa,
  Rrightarrow: dDa,
  rsaquo: lDa,
  rscr: cDa,
  Rscr: uDa,
  rsh: pDa,
  Rsh: mDa,
  rsqb: gDa,
  rsquo: zDa,
  rsquor: fDa,
  rthree: yDa,
  rtimes: wDa,
  rtri: hDa,
  rtrie: bDa,
  rtrif: vDa,
  rtriltri: kDa,
  RuleDelayed: _Da,
  ruluhar: $Da,
  rx: jDa,
  Sacute: xDa,
  sacute: ADa,
  sbquo: EDa,
  scap: SDa,
  Scaron: qDa,
  scaron: PDa,
  Sc: TDa,
  sc: RDa,
  sccue: ODa,
  sce: MDa,
  scE: CDa,
  Scedil: LDa,
  scedil: IDa,
  Scirc: WDa,
  scirc: FDa,
  scnap: DDa,
  scnE: BDa,
  scnsim: NDa,
  scpolint: UDa,
  scsim: HDa,
  Scy: VDa,
  scy: KDa,
  sdotb: GDa,
  sdot: YDa,
  sdote: ZDa,
  searhk: XDa,
  searr: JDa,
  seArr: QDa,
  searrow: a4a,
  sect: e4a,
  semi: t4a,
  seswar: i4a,
  setminus: n4a,
  setmn: r4a,
  sext: s4a,
  Sfr: o4a,
  sfr: d4a,
  sfrown: l4a,
  sharp: c4a,
  SHCHcy: u4a,
  shchcy: p4a,
  SHcy: m4a,
  shcy: g4a,
  ShortDownArrow: z4a,
  ShortLeftArrow: f4a,
  shortmid: y4a,
  shortparallel: w4a,
  ShortRightArrow: h4a,
  ShortUpArrow: b4a,
  shy: v4a,
  Sigma: k4a,
  sigma: _4a,
  sigmaf: $4a,
  sigmav: j4a,
  sim: x4a,
  simdot: A4a,
  sime: E4a,
  simeq: S4a,
  simg: q4a,
  simgE: P4a,
  siml: T4a,
  simlE: R4a,
  simne: O4a,
  simplus: M4a,
  simrarr: C4a,
  slarr: L4a,
  SmallCircle: I4a,
  smallsetminus: W4a,
  smashp: F4a,
  smeparsl: D4a,
  smid: B4a,
  smile: N4a,
  smt: U4a,
  smte: H4a,
  smtes: V4a,
  SOFTcy: K4a,
  softcy: G4a,
  solbar: Y4a,
  solb: Z4a,
  sol: X4a,
  Sopf: J4a,
  sopf: Q4a,
  spades: aBa,
  spadesuit: eBa,
  spar: tBa,
  sqcap: iBa,
  sqcaps: nBa,
  sqcup: rBa,
  sqcups: sBa,
  Sqrt: oBa,
  sqsub: dBa,
  sqsube: lBa,
  sqsubset: cBa,
  sqsubseteq: uBa,
  sqsup: pBa,
  sqsupe: mBa,
  sqsupset: gBa,
  sqsupseteq: zBa,
  square: fBa,
  Square: yBa,
  SquareIntersection: wBa,
  SquareSubset: hBa,
  SquareSubsetEqual: bBa,
  SquareSuperset: vBa,
  SquareSupersetEqual: kBa,
  SquareUnion: _Ba,
  squarf: $Ba,
  squ: jBa,
  squf: xBa,
  srarr: ABa,
  Sscr: EBa,
  sscr: SBa,
  ssetmn: qBa,
  ssmile: PBa,
  sstarf: TBa,
  Star: RBa,
  star: OBa,
  starf: MBa,
  straightepsilon: CBa,
  straightphi: LBa,
  strns: IBa,
  sub: WBa,
  Sub: FBa,
  subdot: DBa,
  subE: BBa,
  sube: NBa,
  subedot: UBa,
  submult: HBa,
  subnE: VBa,
  subne: KBa,
  subplus: GBa,
  subrarr: YBa,
  subset: ZBa,
  Subset: XBa,
  subseteq: JBa,
  subseteqq: QBa,
  SubsetEqual: aNa,
  subsetneq: eNa,
  subsetneqq: tNa,
  subsim: iNa,
  subsub: nNa,
  subsup: rNa,
  succapprox: sNa,
  succ: oNa,
  succcurlyeq: dNa,
  Succeeds: lNa,
  SucceedsEqual: cNa,
  SucceedsSlantEqual: uNa,
  SucceedsTilde: pNa,
  succeq: mNa,
  succnapprox: gNa,
  succneqq: zNa,
  succnsim: fNa,
  succsim: yNa,
  SuchThat: wNa,
  sum: hNa,
  Sum: bNa,
  sung: vNa,
  sup1: kNa,
  sup2: _Na,
  sup3: $Na,
  sup: jNa,
  Sup: xNa,
  supdot: ANa,
  supdsub: ENa,
  supE: SNa,
  supe: qNa,
  supedot: PNa,
  Superset: TNa,
  SupersetEqual: RNa,
  suphsol: ONa,
  suphsub: MNa,
  suplarr: CNa,
  supmult: LNa,
  supnE: INa,
  supne: WNa,
  supplus: FNa,
  supset: DNa,
  Supset: BNa,
  supseteq: NNa,
  supseteqq: UNa,
  supsetneq: HNa,
  supsetneqq: VNa,
  supsim: KNa,
  supsub: GNa,
  supsup: YNa,
  swarhk: ZNa,
  swarr: XNa,
  swArr: JNa,
  swarrow: QNa,
  swnwar: aUa,
  szlig: eUa,
  Tab: tUa,
  target: iUa,
  Tau: nUa,
  tau: rUa,
  tbrk: sUa,
  Tcaron: oUa,
  tcaron: dUa,
  Tcedil: lUa,
  tcedil: cUa,
  Tcy: uUa,
  tcy: pUa,
  tdot: mUa,
  telrec: gUa,
  Tfr: zUa,
  tfr: fUa,
  there4: yUa,
  therefore: wUa,
  Therefore: hUa,
  Theta: bUa,
  theta: vUa,
  thetasym: kUa,
  thetav: _Ua,
  thickapprox: $Ua,
  thicksim: jUa,
  ThickSpace: xUa,
  ThinSpace: AUa,
  thinsp: EUa,
  thkap: SUa,
  thksim: qUa,
  THORN: PUa,
  thorn: TUa,
  tilde: RUa,
  Tilde: OUa,
  TildeEqual: MUa,
  TildeFullEqual: CUa,
  TildeTilde: LUa,
  timesbar: IUa,
  timesb: WUa,
  times: FUa,
  timesd: DUa,
  tint: BUa,
  toea: NUa,
  topbot: UUa,
  topcir: HUa,
  top: VUa,
  Topf: KUa,
  topf: GUa,
  topfork: YUa,
  tosa: ZUa,
  tprime: XUa,
  trade: JUa,
  TRADE: QUa,
  triangle: a6a,
  triangledown: e6a,
  triangleleft: t6a,
  trianglelefteq: i6a,
  triangleq: n6a,
  triangleright: r6a,
  trianglerighteq: s6a,
  tridot: o6a,
  trie: d6a,
  triminus: l6a,
  TripleDot: c6a,
  triplus: u6a,
  trisb: p6a,
  tritime: m6a,
  trpezium: g6a,
  Tscr: z6a,
  tscr: f6a,
  TScy: y6a,
  tscy: w6a,
  TSHcy: h6a,
  tshcy: b6a,
  Tstrok: v6a,
  tstrok: k6a,
  twixt: _6a,
  twoheadleftarrow: $6a,
  twoheadrightarrow: j6a,
  Uacute: x6a,
  uacute: A6a,
  uarr: E6a,
  Uarr: S6a,
  uArr: q6a,
  Uarrocir: P6a,
  Ubrcy: T6a,
  ubrcy: R6a,
  Ubreve: O6a,
  ubreve: M6a,
  Ucirc: C6a,
  ucirc: L6a,
  Ucy: I6a,
  ucy: W6a,
  udarr: F6a,
  Udblac: D6a,
  udblac: B6a,
  udhar: N6a,
  ufisht: U6a,
  Ufr: H6a,
  ufr: V6a,
  Ugrave: K6a,
  ugrave: G6a,
  uHar: Y6a,
  uharl: Z6a,
  uharr: X6a,
  uhblk: J6a,
  ulcorn: Q6a,
  ulcorner: a5a,
  ulcrop: e5a,
  ultri: t5a,
  Umacr: i5a,
  umacr: n5a,
  uml: r5a,
  UnderBar: s5a,
  UnderBrace: o5a,
  UnderBracket: d5a,
  UnderParenthesis: l5a,
  Union: c5a,
  UnionPlus: u5a,
  Uogon: p5a,
  uogon: m5a,
  Uopf: g5a,
  uopf: z5a,
  UpArrowBar: f5a,
  uparrow: y5a,
  UpArrow: w5a,
  Uparrow: h5a,
  UpArrowDownArrow: b5a,
  updownarrow: v5a,
  UpDownArrow: k5a,
  Updownarrow: _5a,
  UpEquilibrium: $5a,
  upharpoonleft: j5a,
  upharpoonright: x5a,
  uplus: A5a,
  UpperLeftArrow: E5a,
  UpperRightArrow: S5a,
  upsi: q5a,
  Upsi: P5a,
  upsih: T5a,
  Upsilon: R5a,
  upsilon: O5a,
  UpTeeArrow: M5a,
  UpTee: C5a,
  upuparrows: L5a,
  urcorn: I5a,
  urcorner: W5a,
  urcrop: F5a,
  Uring: D5a,
  uring: B5a,
  urtri: N5a,
  Uscr: U5a,
  uscr: H5a,
  utdot: V5a,
  Utilde: K5a,
  utilde: G5a,
  utri: Y5a,
  utrif: Z5a,
  uuarr: X5a,
  Uuml: J5a,
  uuml: Q5a,
  uwangle: a8a,
  vangrt: e8a,
  varepsilon: t8a,
  varkappa: i8a,
  varnothing: n8a,
  varphi: r8a,
  varpi: s8a,
  varpropto: o8a,
  varr: d8a,
  vArr: l8a,
  varrho: c8a,
  varsigma: u8a,
  varsubsetneq: p8a,
  varsubsetneqq: m8a,
  varsupsetneq: g8a,
  varsupsetneqq: z8a,
  vartheta: f8a,
  vartriangleleft: y8a,
  vartriangleright: w8a,
  vBar: h8a,
  Vbar: b8a,
  vBarv: v8a,
  Vcy: k8a,
  vcy: _8a,
  vdash: $8a,
  vDash: j8a,
  Vdash: x8a,
  VDash: A8a,
  Vdashl: E8a,
  veebar: S8a,
  vee: q8a,
  Vee: P8a,
  veeeq: T8a,
  vellip: R8a,
  verbar: O8a,
  Verbar: M8a,
  vert: C8a,
  Vert: L8a,
  VerticalBar: I8a,
  VerticalLine: W8a,
  VerticalSeparator: F8a,
  VerticalTilde: D8a,
  VeryThinSpace: B8a,
  Vfr: N8a,
  vfr: U8a,
  vltri: H8a,
  vnsub: V8a,
  vnsup: K8a,
  Vopf: G8a,
  vopf: Y8a,
  vprop: Z8a,
  vrtri: X8a,
  Vscr: J8a,
  vscr: Q8a,
  vsubnE: a7a,
  vsubne: e7a,
  vsupnE: t7a,
  vsupne: i7a,
  Vvdash: n7a,
  vzigzag: r7a,
  Wcirc: s7a,
  wcirc: o7a,
  wedbar: d7a,
  wedge: l7a,
  Wedge: c7a,
  wedgeq: u7a,
  weierp: p7a,
  Wfr: m7a,
  wfr: g7a,
  Wopf: z7a,
  wopf: f7a,
  wp: y7a,
  wr: w7a,
  wreath: h7a,
  Wscr: b7a,
  wscr: v7a,
  xcap: k7a,
  xcirc: _7a,
  xcup: $7a,
  xdtri: j7a,
  Xfr: x7a,
  xfr: A7a,
  xharr: E7a,
  xhArr: S7a,
  Xi: q7a,
  xi: P7a,
  xlarr: T7a,
  xlArr: R7a,
  xmap: O7a,
  xnis: M7a,
  xodot: C7a,
  Xopf: L7a,
  xopf: I7a,
  xoplus: W7a,
  xotime: F7a,
  xrarr: D7a,
  xrArr: B7a,
  Xscr: N7a,
  xscr: U7a,
  xsqcup: H7a,
  xuplus: V7a,
  xutri: K7a,
  xvee: G7a,
  xwedge: Y7a,
  Yacute: Z7a,
  yacute: X7a,
  YAcy: J7a,
  yacy: Q7a,
  Ycirc: a9a,
  ycirc: e9a,
  Ycy: t9a,
  ycy: i9a,
  yen: n9a,
  Yfr: r9a,
  yfr: s9a,
  YIcy: o9a,
  yicy: d9a,
  Yopf: l9a,
  yopf: c9a,
  Yscr: u9a,
  yscr: p9a,
  YUcy: m9a,
  yucy: g9a,
  yuml: z9a,
  Yuml: f9a,
  Zacute: y9a,
  zacute: w9a,
  Zcaron: h9a,
  zcaron: b9a,
  Zcy: v9a,
  zcy: k9a,
  Zdot: _9a,
  zdot: $9a,
  zeetrf: j9a,
  ZeroWidthSpace: x9a,
  Zeta: A9a,
  zeta: E9a,
  zfr: S9a,
  Zfr: q9a,
  ZHcy: P9a,
  zhcy: T9a,
  zigrarr: R9a,
  zopf: O9a,
  Zopf: M9a,
  Zscr: C9a,
  zscr: L9a,
  zwj: I9a,
  zwnj: W9a
}, D9a = "Á", B9a = "á", N9a = "Â", U9a = "â", H9a = "´", V9a = "Æ", K9a = "æ", G9a = "À", Y9a = "à", Z9a = "&", X9a = "&", J9a = "Å", Q9a = "å", aHa = "Ã", eHa = "ã", tHa = "Ä", iHa = "ä", nHa = "¦", rHa = "Ç", sHa = "ç", oHa = "¸", dHa = "¢", lHa = "©", cHa = "©", uHa = "¤", pHa = "°", mHa = "÷", gHa = "É", zHa = "é", fHa = "Ê", yHa = "ê", wHa = "È", hHa = "è", bHa = "Ð", vHa = "ð", kHa = "Ë", _Ha = "ë", $Ha = "½", jHa = "¼", xHa = "¾", AHa = ">", EHa = ">", SHa = "Í", qHa = "í", PHa = "Î", THa = "î", RHa = "¡", OHa = "Ì", MHa = "ì", CHa = "¿", LHa = "Ï", IHa = "ï", WHa = "«", FHa = "<", DHa = "<", BHa = "¯", NHa = "µ", UHa = "·", HHa = " ", VHa = "¬", KHa = "Ñ", GHa = "ñ", YHa = "Ó", ZHa = "ó", XHa = "Ô", JHa = "ô", QHa = "Ò", aVa = "ò", eVa = "ª", tVa = "º", iVa = "Ø", nVa = "ø", rVa = "Õ", sVa = "õ", oVa = "Ö", dVa = "ö", lVa = "¶", cVa = "±", uVa = "£", pVa = '"', mVa = '"', gVa = "»", zVa = "®", fVa = "®", yVa = "§", wVa = "­", hVa = "¹", bVa = "²", vVa = "³", kVa = "ß", _Va = "Þ", $Va = "þ", jVa = "×", xVa = "Ú", AVa = "ú", EVa = "Û", SVa = "û", qVa = "Ù", PVa = "ù", TVa = "¨", RVa = "Ü", OVa = "ü", MVa = "Ý", CVa = "ý", LVa = "¥", IVa = "ÿ", WVa = {
  Aacute: D9a,
  aacute: B9a,
  Acirc: N9a,
  acirc: U9a,
  acute: H9a,
  AElig: V9a,
  aelig: K9a,
  Agrave: G9a,
  agrave: Y9a,
  amp: Z9a,
  AMP: X9a,
  Aring: J9a,
  aring: Q9a,
  Atilde: aHa,
  atilde: eHa,
  Auml: tHa,
  auml: iHa,
  brvbar: nHa,
  Ccedil: rHa,
  ccedil: sHa,
  cedil: oHa,
  cent: dHa,
  copy: lHa,
  COPY: cHa,
  curren: uHa,
  deg: pHa,
  divide: mHa,
  Eacute: gHa,
  eacute: zHa,
  Ecirc: fHa,
  ecirc: yHa,
  Egrave: wHa,
  egrave: hHa,
  ETH: bHa,
  eth: vHa,
  Euml: kHa,
  euml: _Ha,
  frac12: $Ha,
  frac14: jHa,
  frac34: xHa,
  gt: AHa,
  GT: EHa,
  Iacute: SHa,
  iacute: qHa,
  Icirc: PHa,
  icirc: THa,
  iexcl: RHa,
  Igrave: OHa,
  igrave: MHa,
  iquest: CHa,
  Iuml: LHa,
  iuml: IHa,
  laquo: WHa,
  lt: FHa,
  LT: DHa,
  macr: BHa,
  micro: NHa,
  middot: UHa,
  nbsp: HHa,
  not: VHa,
  Ntilde: KHa,
  ntilde: GHa,
  Oacute: YHa,
  oacute: ZHa,
  Ocirc: XHa,
  ocirc: JHa,
  Ograve: QHa,
  ograve: aVa,
  ordf: eVa,
  ordm: tVa,
  Oslash: iVa,
  oslash: nVa,
  Otilde: rVa,
  otilde: sVa,
  Ouml: oVa,
  ouml: dVa,
  para: lVa,
  plusmn: cVa,
  pound: uVa,
  quot: pVa,
  QUOT: mVa,
  raquo: gVa,
  reg: zVa,
  REG: fVa,
  sect: yVa,
  shy: wVa,
  sup1: hVa,
  sup2: bVa,
  sup3: vVa,
  szlig: kVa,
  THORN: _Va,
  thorn: $Va,
  times: jVa,
  Uacute: xVa,
  uacute: AVa,
  Ucirc: EVa,
  ucirc: SVa,
  Ugrave: qVa,
  ugrave: PVa,
  uml: TVa,
  Uuml: RVa,
  uuml: OVa,
  Yacute: MVa,
  yacute: CVa,
  yen: LVa,
  yuml: IVa
}, FVa = "&", DVa = "'", BVa = ">", NVa = "<", UVa = '"', HVa = {
  amp: FVa,
  apos: DVa,
  gt: BVa,
  lt: NVa,
  quot: UVa
};
var nF = X, VVa = vza, KVa = F9a, yq = WVa, GVa = HVa, ta = 0, La = ta++, rF = ta++, pr = ta++, sF = ta++, oF = ta++, zd = ta++, dF = ta++, bn = ta++, qu = ta++, Qh = ta++, ab = ta++, eb = ta++, tb = ta++, ib = ta++, lF = ta++, Ii = ta++, cF = ta++, uF = ta++, fd = ta++, nb = ta++, rb = ta++, pF = ta++, mF = ta++, gF = ta++, zF = ta++, fF = ta++, yF = ta++, yd = ta++, sb = ta++, ob = ta++, wF = ta++, hF = ta++, bF = ta++, vF = ta++, kF = ta++, _F = ta++, $F = ta++, jF = ta++, xF = ta++, AF = ta++, EF = ta++, SF = ta++, qF = ta++, PF = ta++, TF = ta++, RF = ta++, OF = ta++, MF = ta++, CF = ta++, LF = ta++, wd = ta++, IF = ta++, db = ta++, lb = ta++, cb = ta++, ub = 0, js = ub++, WF = ub++, FF = ub++;
function et(a) {
  return a === " " || a === `
` || a === "	" || a === "\f" || a === "\r";
}
function tt(a, e, t) {
  var i = a.toLowerCase();
  return a === i ? function(n) {
    n === i ? this._state = e : (this._state = t, this._index--);
  } : function(n) {
    n === i || n === a ? this._state = e : (this._state = t, this._index--);
  };
}
function mr(a, e) {
  var t = a.toLowerCase();
  return function(i) {
    i === t || i === a ? this._state = e : (this._state = pr, this._index--);
  };
}
function X(a, e) {
  this._state = La, this._buffer = "", this._sectionStart = 0, this._index = 0, this._bufferOffset = 0, this._baseState = La, this._special = js, this._cbs = e, this._running = !0, this._ended = !1, this._xmlMode = !!(a && a.xmlMode), this._decodeEntities = !!(a && a.decodeEntities);
}
X.prototype._stateText = function(a) {
  a === "<" ? (this._index > this._sectionStart && this._cbs.ontext(this._getSection()), this._state = rF, this._sectionStart = this._index) : this._decodeEntities && this._special === js && a === "&" && (this._index > this._sectionStart && this._cbs.ontext(this._getSection()), this._baseState = La, this._state = wd, this._sectionStart = this._index);
};
X.prototype._stateBeforeTagName = function(a) {
  a === "/" ? this._state = oF : a === "<" ? (this._cbs.ontext(this._getSection()), this._sectionStart = this._index) : a === ">" || this._special !== js || et(a) ? this._state = La : a === "!" ? (this._state = lF, this._sectionStart = this._index + 1) : a === "?" ? (this._state = cF, this._sectionStart = this._index + 1) : (this._state = !this._xmlMode && (a === "s" || a === "S") ? wF : pr, this._sectionStart = this._index);
};
X.prototype._stateInTagName = function(a) {
  (a === "/" || a === ">" || et(a)) && (this._emitToken("onopentagname"), this._state = bn, this._index--);
};
X.prototype._stateBeforeCloseingTagName = function(a) {
  et(a) || (a === ">" ? this._state = La : this._special !== js ? a === "s" || a === "S" ? this._state = hF : (this._state = La, this._index--) : (this._state = zd, this._sectionStart = this._index));
};
X.prototype._stateInCloseingTagName = function(a) {
  (a === ">" || et(a)) && (this._emitToken("onclosetag"), this._state = dF, this._index--);
};
X.prototype._stateAfterCloseingTagName = function(a) {
  a === ">" && (this._state = La, this._sectionStart = this._index + 1);
};
X.prototype._stateBeforeAttributeName = function(a) {
  a === ">" ? (this._cbs.onopentagend(), this._state = La, this._sectionStart = this._index + 1) : a === "/" ? this._state = sF : et(a) || (this._state = qu, this._sectionStart = this._index);
};
X.prototype._stateInSelfClosingTag = function(a) {
  a === ">" ? (this._cbs.onselfclosingtag(), this._state = La, this._sectionStart = this._index + 1) : et(a) || (this._state = bn, this._index--);
};
X.prototype._stateInAttributeName = function(a) {
  (a === "=" || a === "/" || a === ">" || et(a)) && (this._cbs.onattribname(this._getSection()), this._sectionStart = -1, this._state = Qh, this._index--);
};
X.prototype._stateAfterAttributeName = function(a) {
  a === "=" ? this._state = ab : a === "/" || a === ">" ? (this._cbs.onattribend(), this._state = bn, this._index--) : et(a) || (this._cbs.onattribend(), this._state = qu, this._sectionStart = this._index);
};
X.prototype._stateBeforeAttributeValue = function(a) {
  a === '"' ? (this._state = eb, this._sectionStart = this._index + 1) : a === "'" ? (this._state = tb, this._sectionStart = this._index + 1) : et(a) || (this._state = ib, this._sectionStart = this._index, this._index--);
};
X.prototype._stateInAttributeValueDoubleQuotes = function(a) {
  a === '"' ? (this._emitToken("onattribdata"), this._cbs.onattribend(), this._state = bn) : this._decodeEntities && a === "&" && (this._emitToken("onattribdata"), this._baseState = this._state, this._state = wd, this._sectionStart = this._index);
};
X.prototype._stateInAttributeValueSingleQuotes = function(a) {
  a === "'" ? (this._emitToken("onattribdata"), this._cbs.onattribend(), this._state = bn) : this._decodeEntities && a === "&" && (this._emitToken("onattribdata"), this._baseState = this._state, this._state = wd, this._sectionStart = this._index);
};
X.prototype._stateInAttributeValueNoQuotes = function(a) {
  et(a) || a === ">" ? (this._emitToken("onattribdata"), this._cbs.onattribend(), this._state = bn, this._index--) : this._decodeEntities && a === "&" && (this._emitToken("onattribdata"), this._baseState = this._state, this._state = wd, this._sectionStart = this._index);
};
X.prototype._stateBeforeDeclaration = function(a) {
  this._state = a === "[" ? pF : a === "-" ? uF : Ii;
};
X.prototype._stateInDeclaration = function(a) {
  a === ">" && (this._cbs.ondeclaration(this._getSection()), this._state = La, this._sectionStart = this._index + 1);
};
X.prototype._stateInProcessingInstruction = function(a) {
  a === ">" && (this._cbs.onprocessinginstruction(this._getSection()), this._state = La, this._sectionStart = this._index + 1);
};
X.prototype._stateBeforeComment = function(a) {
  a === "-" ? (this._state = fd, this._sectionStart = this._index + 1) : this._state = Ii;
};
X.prototype._stateInComment = function(a) {
  a === "-" && (this._state = nb);
};
X.prototype._stateAfterComment1 = function(a) {
  a === "-" ? this._state = rb : this._state = fd;
};
X.prototype._stateAfterComment2 = function(a) {
  a === ">" ? (this._cbs.oncomment(
    this._buffer.substring(this._sectionStart, this._index - 2)
  ), this._state = La, this._sectionStart = this._index + 1) : a !== "-" && (this._state = fd);
};
X.prototype._stateBeforeCdata1 = tt(
  "C",
  mF,
  Ii
);
X.prototype._stateBeforeCdata2 = tt(
  "D",
  gF,
  Ii
);
X.prototype._stateBeforeCdata3 = tt(
  "A",
  zF,
  Ii
);
X.prototype._stateBeforeCdata4 = tt(
  "T",
  fF,
  Ii
);
X.prototype._stateBeforeCdata5 = tt(
  "A",
  yF,
  Ii
);
X.prototype._stateBeforeCdata6 = function(a) {
  a === "[" ? (this._state = yd, this._sectionStart = this._index + 1) : (this._state = Ii, this._index--);
};
X.prototype._stateInCdata = function(a) {
  a === "]" && (this._state = sb);
};
X.prototype._stateAfterCdata1 = function(a) {
  a === "]" ? this._state = ob : this._state = yd;
};
X.prototype._stateAfterCdata2 = function(a) {
  a === ">" ? (this._cbs.oncdata(
    this._buffer.substring(this._sectionStart, this._index - 2)
  ), this._state = La, this._sectionStart = this._index + 1) : a !== "]" && (this._state = yd);
};
X.prototype._stateBeforeSpecial = function(a) {
  a === "c" || a === "C" ? this._state = bF : a === "t" || a === "T" ? this._state = qF : (this._state = pr, this._index--);
};
X.prototype._stateBeforeSpecialEnd = function(a) {
  this._special === WF && (a === "c" || a === "C") ? this._state = jF : this._special === FF && (a === "t" || a === "T") ? this._state = OF : this._state = La;
};
X.prototype._stateBeforeScript1 = mr(
  "R",
  vF
);
X.prototype._stateBeforeScript2 = mr(
  "I",
  kF
);
X.prototype._stateBeforeScript3 = mr(
  "P",
  _F
);
X.prototype._stateBeforeScript4 = mr(
  "T",
  $F
);
X.prototype._stateBeforeScript5 = function(a) {
  (a === "/" || a === ">" || et(a)) && (this._special = WF), this._state = pr, this._index--;
};
X.prototype._stateAfterScript1 = tt("R", xF, La);
X.prototype._stateAfterScript2 = tt("I", AF, La);
X.prototype._stateAfterScript3 = tt("P", EF, La);
X.prototype._stateAfterScript4 = tt("T", SF, La);
X.prototype._stateAfterScript5 = function(a) {
  a === ">" || et(a) ? (this._special = js, this._state = zd, this._sectionStart = this._index - 6, this._index--) : this._state = La;
};
X.prototype._stateBeforeStyle1 = mr(
  "Y",
  PF
);
X.prototype._stateBeforeStyle2 = mr(
  "L",
  TF
);
X.prototype._stateBeforeStyle3 = mr(
  "E",
  RF
);
X.prototype._stateBeforeStyle4 = function(a) {
  (a === "/" || a === ">" || et(a)) && (this._special = FF), this._state = pr, this._index--;
};
X.prototype._stateAfterStyle1 = tt("Y", MF, La);
X.prototype._stateAfterStyle2 = tt("L", CF, La);
X.prototype._stateAfterStyle3 = tt("E", LF, La);
X.prototype._stateAfterStyle4 = function(a) {
  a === ">" || et(a) ? (this._special = js, this._state = zd, this._sectionStart = this._index - 5, this._index--) : this._state = La;
};
X.prototype._stateBeforeEntity = tt(
  "#",
  IF,
  db
);
X.prototype._stateBeforeNumericEntity = tt(
  "X",
  cb,
  lb
);
X.prototype._parseNamedEntityStrict = function() {
  if (this._sectionStart + 1 < this._index) {
    var a = this._buffer.substring(
      this._sectionStart + 1,
      this._index
    ), e = this._xmlMode ? GVa : KVa;
    e.hasOwnProperty(a) && (this._emitPartial(e[a]), this._sectionStart = this._index + 1);
  }
};
X.prototype._parseLegacyEntity = function() {
  var a = this._sectionStart + 1, e = this._index - a;
  for (e > 6 && (e = 6); e >= 2; ) {
    var t = this._buffer.substr(a, e);
    if (yq.hasOwnProperty(t)) {
      this._emitPartial(yq[t]), this._sectionStart += e + 1;
      return;
    } else
      e--;
  }
};
X.prototype._stateInNamedEntity = function(a) {
  a === ";" ? (this._parseNamedEntityStrict(), this._sectionStart + 1 < this._index && !this._xmlMode && this._parseLegacyEntity(), this._state = this._baseState) : (a < "a" || a > "z") && (a < "A" || a > "Z") && (a < "0" || a > "9") && (this._xmlMode || this._sectionStart + 1 === this._index || (this._baseState !== La ? a !== "=" && this._parseNamedEntityStrict() : this._parseLegacyEntity()), this._state = this._baseState, this._index--);
};
X.prototype._decodeNumericEntity = function(a, e) {
  var t = this._sectionStart + a;
  if (t !== this._index) {
    var i = this._buffer.substring(t, this._index), n = parseInt(i, e);
    this._emitPartial(VVa(n)), this._sectionStart = this._index;
  } else
    this._sectionStart--;
  this._state = this._baseState;
};
X.prototype._stateInNumericEntity = function(a) {
  a === ";" ? (this._decodeNumericEntity(2, 10), this._sectionStart++) : (a < "0" || a > "9") && (this._xmlMode ? this._state = this._baseState : this._decodeNumericEntity(2, 10), this._index--);
};
X.prototype._stateInHexEntity = function(a) {
  a === ";" ? (this._decodeNumericEntity(3, 16), this._sectionStart++) : (a < "a" || a > "f") && (a < "A" || a > "F") && (a < "0" || a > "9") && (this._xmlMode ? this._state = this._baseState : this._decodeNumericEntity(3, 16), this._index--);
};
X.prototype._cleanup = function() {
  this._sectionStart < 0 ? (this._buffer = "", this._bufferOffset += this._index, this._index = 0) : this._running && (this._state === La ? (this._sectionStart !== this._index && this._cbs.ontext(this._buffer.substr(this._sectionStart)), this._buffer = "", this._bufferOffset += this._index, this._index = 0) : this._sectionStart === this._index ? (this._buffer = "", this._bufferOffset += this._index, this._index = 0) : (this._buffer = this._buffer.substr(this._sectionStart), this._index -= this._sectionStart, this._bufferOffset += this._sectionStart), this._sectionStart = 0);
};
X.prototype.write = function(a) {
  this._ended && this._cbs.onerror(Error(".write() after done!")), this._buffer += a, this._parse();
};
X.prototype._parse = function() {
  for (; this._index < this._buffer.length && this._running; ) {
    var a = this._buffer.charAt(this._index);
    this._state === La ? this._stateText(a) : this._state === rF ? this._stateBeforeTagName(a) : this._state === pr ? this._stateInTagName(a) : this._state === oF ? this._stateBeforeCloseingTagName(a) : this._state === zd ? this._stateInCloseingTagName(a) : this._state === dF ? this._stateAfterCloseingTagName(a) : this._state === sF ? this._stateInSelfClosingTag(a) : this._state === bn ? this._stateBeforeAttributeName(a) : this._state === qu ? this._stateInAttributeName(a) : this._state === Qh ? this._stateAfterAttributeName(a) : this._state === ab ? this._stateBeforeAttributeValue(a) : this._state === eb ? this._stateInAttributeValueDoubleQuotes(a) : this._state === tb ? this._stateInAttributeValueSingleQuotes(a) : this._state === ib ? this._stateInAttributeValueNoQuotes(a) : this._state === lF ? this._stateBeforeDeclaration(a) : this._state === Ii ? this._stateInDeclaration(a) : this._state === cF ? this._stateInProcessingInstruction(a) : this._state === uF ? this._stateBeforeComment(a) : this._state === fd ? this._stateInComment(a) : this._state === nb ? this._stateAfterComment1(a) : this._state === rb ? this._stateAfterComment2(a) : this._state === pF ? this._stateBeforeCdata1(a) : this._state === mF ? this._stateBeforeCdata2(a) : this._state === gF ? this._stateBeforeCdata3(a) : this._state === zF ? this._stateBeforeCdata4(a) : this._state === fF ? this._stateBeforeCdata5(a) : this._state === yF ? this._stateBeforeCdata6(a) : this._state === yd ? this._stateInCdata(a) : this._state === sb ? this._stateAfterCdata1(a) : this._state === ob ? this._stateAfterCdata2(a) : this._state === wF ? this._stateBeforeSpecial(a) : this._state === hF ? this._stateBeforeSpecialEnd(a) : this._state === bF ? this._stateBeforeScript1(a) : this._state === vF ? this._stateBeforeScript2(a) : this._state === kF ? this._stateBeforeScript3(a) : this._state === _F ? this._stateBeforeScript4(a) : this._state === $F ? this._stateBeforeScript5(a) : this._state === jF ? this._stateAfterScript1(a) : this._state === xF ? this._stateAfterScript2(a) : this._state === AF ? this._stateAfterScript3(a) : this._state === EF ? this._stateAfterScript4(a) : this._state === SF ? this._stateAfterScript5(a) : this._state === qF ? this._stateBeforeStyle1(a) : this._state === PF ? this._stateBeforeStyle2(a) : this._state === TF ? this._stateBeforeStyle3(a) : this._state === RF ? this._stateBeforeStyle4(a) : this._state === OF ? this._stateAfterStyle1(a) : this._state === MF ? this._stateAfterStyle2(a) : this._state === CF ? this._stateAfterStyle3(a) : this._state === LF ? this._stateAfterStyle4(a) : this._state === wd ? this._stateBeforeEntity(a) : this._state === IF ? this._stateBeforeNumericEntity(a) : this._state === db ? this._stateInNamedEntity(a) : this._state === lb ? this._stateInNumericEntity(a) : this._state === cb ? this._stateInHexEntity(a) : this._cbs.onerror(Error("unknown _state"), this._state), this._index++;
  }
  this._cleanup();
};
X.prototype.pause = function() {
  this._running = !1;
};
X.prototype.resume = function() {
  this._running = !0, this._index < this._buffer.length && this._parse(), this._ended && this._finish();
};
X.prototype.end = function(a) {
  this._ended && this._cbs.onerror(Error(".end() after done!")), a && this.write(a), this._ended = !0, this._running && this._finish();
};
X.prototype._finish = function() {
  this._sectionStart < this._index && this._handleTrailingData(), this._cbs.onend();
};
X.prototype._handleTrailingData = function() {
  var a = this._buffer.substr(this._sectionStart);
  this._state === yd || this._state === sb || this._state === ob ? this._cbs.oncdata(a) : this._state === fd || this._state === nb || this._state === rb ? this._cbs.oncomment(a) : this._state === db && !this._xmlMode ? (this._parseLegacyEntity(), this._sectionStart < this._index && (this._state = this._baseState, this._handleTrailingData())) : this._state === lb && !this._xmlMode ? (this._decodeNumericEntity(2, 10), this._sectionStart < this._index && (this._state = this._baseState, this._handleTrailingData())) : this._state === cb && !this._xmlMode ? (this._decodeNumericEntity(3, 16), this._sectionStart < this._index && (this._state = this._baseState, this._handleTrailingData())) : this._state !== pr && this._state !== bn && this._state !== ab && this._state !== Qh && this._state !== qu && this._state !== tb && this._state !== eb && this._state !== ib && this._state !== zd && this._cbs.ontext(a);
};
X.prototype.reset = function() {
  X.call(
    this,
    { xmlMode: this._xmlMode, decodeEntities: this._decodeEntities },
    this._cbs
  );
};
X.prototype.getAbsoluteIndex = function() {
  return this._bufferOffset + this._index;
};
X.prototype._getSection = function() {
  return this._buffer.substring(this._sectionStart, this._index);
};
X.prototype._emitToken = function(a) {
  this._cbs[a](this._getSection()), this._sectionStart = -1;
};
X.prototype._emitPartial = function(a) {
  this._baseState !== La ? this._cbs.onattribdata(a) : this._cbs.ontext(a);
};
var pb = { exports: {} }, Hr = typeof Reflect == "object" ? Reflect : null, wq = Hr && typeof Hr.apply == "function" ? Hr.apply : function(e, t, i) {
  return Function.prototype.apply.call(e, t, i);
}, jl;
Hr && typeof Hr.ownKeys == "function" ? jl = Hr.ownKeys : Object.getOwnPropertySymbols ? jl = function(e) {
  return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e));
} : jl = function(e) {
  return Object.getOwnPropertyNames(e);
};
function YVa(a) {
  console && console.warn && console.warn(a);
}
var DF = Number.isNaN || function(e) {
  return e !== e;
};
function Ra() {
  Ra.init.call(this);
}
pb.exports = Ra;
pb.exports.once = QVa;
Ra.EventEmitter = Ra;
Ra.prototype._events = void 0;
Ra.prototype._eventsCount = 0;
Ra.prototype._maxListeners = void 0;
var hq = 10;
function Pu(a) {
  if (typeof a != "function")
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof a);
}
Object.defineProperty(Ra, "defaultMaxListeners", {
  enumerable: !0,
  get: function() {
    return hq;
  },
  set: function(a) {
    if (typeof a != "number" || a < 0 || DF(a))
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + a + ".");
    hq = a;
  }
});
Ra.init = function() {
  (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
};
Ra.prototype.setMaxListeners = function(e) {
  if (typeof e != "number" || e < 0 || DF(e))
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e + ".");
  return this._maxListeners = e, this;
};
function BF(a) {
  return a._maxListeners === void 0 ? Ra.defaultMaxListeners : a._maxListeners;
}
Ra.prototype.getMaxListeners = function() {
  return BF(this);
};
Ra.prototype.emit = function(e) {
  for (var t = [], i = 1; i < arguments.length; i++) t.push(arguments[i]);
  var n = e === "error", r = this._events;
  if (r !== void 0)
    n = n && r.error === void 0;
  else if (!n)
    return !1;
  if (n) {
    var s;
    if (t.length > 0 && (s = t[0]), s instanceof Error)
      throw s;
    var o = new Error("Unhandled error." + (s ? " (" + s.message + ")" : ""));
    throw o.context = s, o;
  }
  var d = r[e];
  if (d === void 0)
    return !1;
  if (typeof d == "function")
    wq(d, this, t);
  else
    for (var c = d.length, p = KF(d, c), i = 0; i < c; ++i)
      wq(p[i], this, t);
  return !0;
};
function NF(a, e, t, i) {
  var n, r, s;
  if (Pu(t), r = a._events, r === void 0 ? (r = a._events = /* @__PURE__ */ Object.create(null), a._eventsCount = 0) : (r.newListener !== void 0 && (a.emit(
    "newListener",
    e,
    t.listener ? t.listener : t
  ), r = a._events), s = r[e]), s === void 0)
    s = r[e] = t, ++a._eventsCount;
  else if (typeof s == "function" ? s = r[e] = i ? [t, s] : [s, t] : i ? s.unshift(t) : s.push(t), n = BF(a), n > 0 && s.length > n && !s.warned) {
    s.warned = !0;
    var o = new Error("Possible EventEmitter memory leak detected. " + s.length + " " + String(e) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    o.name = "MaxListenersExceededWarning", o.emitter = a, o.type = e, o.count = s.length, YVa(o);
  }
  return a;
}
Ra.prototype.addListener = function(e, t) {
  return NF(this, e, t, !1);
};
Ra.prototype.on = Ra.prototype.addListener;
Ra.prototype.prependListener = function(e, t) {
  return NF(this, e, t, !0);
};
function ZVa() {
  if (!this.fired)
    return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function UF(a, e, t) {
  var i = { fired: !1, wrapFn: void 0, target: a, type: e, listener: t }, n = ZVa.bind(i);
  return n.listener = t, i.wrapFn = n, n;
}
Ra.prototype.once = function(e, t) {
  return Pu(t), this.on(e, UF(this, e, t)), this;
};
Ra.prototype.prependOnceListener = function(e, t) {
  return Pu(t), this.prependListener(e, UF(this, e, t)), this;
};
Ra.prototype.removeListener = function(e, t) {
  var i, n, r, s, o;
  if (Pu(t), n = this._events, n === void 0)
    return this;
  if (i = n[e], i === void 0)
    return this;
  if (i === t || i.listener === t)
    --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete n[e], n.removeListener && this.emit("removeListener", e, i.listener || t));
  else if (typeof i != "function") {
    for (r = -1, s = i.length - 1; s >= 0; s--)
      if (i[s] === t || i[s].listener === t) {
        o = i[s].listener, r = s;
        break;
      }
    if (r < 0)
      return this;
    r === 0 ? i.shift() : XVa(i, r), i.length === 1 && (n[e] = i[0]), n.removeListener !== void 0 && this.emit("removeListener", e, o || t);
  }
  return this;
};
Ra.prototype.off = Ra.prototype.removeListener;
Ra.prototype.removeAllListeners = function(e) {
  var t, i, n;
  if (i = this._events, i === void 0)
    return this;
  if (i.removeListener === void 0)
    return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : i[e] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete i[e]), this;
  if (arguments.length === 0) {
    var r = Object.keys(i), s;
    for (n = 0; n < r.length; ++n)
      s = r[n], s !== "removeListener" && this.removeAllListeners(s);
    return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
  }
  if (t = i[e], typeof t == "function")
    this.removeListener(e, t);
  else if (t !== void 0)
    for (n = t.length - 1; n >= 0; n--)
      this.removeListener(e, t[n]);
  return this;
};
function HF(a, e, t) {
  var i = a._events;
  if (i === void 0)
    return [];
  var n = i[e];
  return n === void 0 ? [] : typeof n == "function" ? t ? [n.listener || n] : [n] : t ? JVa(n) : KF(n, n.length);
}
Ra.prototype.listeners = function(e) {
  return HF(this, e, !0);
};
Ra.prototype.rawListeners = function(e) {
  return HF(this, e, !1);
};
Ra.listenerCount = function(a, e) {
  return typeof a.listenerCount == "function" ? a.listenerCount(e) : VF.call(a, e);
};
Ra.prototype.listenerCount = VF;
function VF(a) {
  var e = this._events;
  if (e !== void 0) {
    var t = e[a];
    if (typeof t == "function")
      return 1;
    if (t !== void 0)
      return t.length;
  }
  return 0;
}
Ra.prototype.eventNames = function() {
  return this._eventsCount > 0 ? jl(this._events) : [];
};
function KF(a, e) {
  for (var t = new Array(e), i = 0; i < e; ++i)
    t[i] = a[i];
  return t;
}
function XVa(a, e) {
  for (; e + 1 < a.length; e++)
    a[e] = a[e + 1];
  a.pop();
}
function JVa(a) {
  for (var e = new Array(a.length), t = 0; t < e.length; ++t)
    e[t] = a[t].listener || a[t];
  return e;
}
function QVa(a, e) {
  return new Promise(function(t, i) {
    function n(s) {
      a.removeListener(e, r), i(s);
    }
    function r() {
      typeof a.removeListener == "function" && a.removeListener("error", n), t([].slice.call(arguments));
    }
    GF(a, e, r, { once: !0 }), e !== "error" && aKa(a, n, { once: !0 });
  });
}
function aKa(a, e, t) {
  typeof a.on == "function" && GF(a, "error", e, t);
}
function GF(a, e, t, i) {
  if (typeof a.on == "function")
    i.once ? a.once(e, t) : a.on(e, t);
  else if (typeof a.addEventListener == "function")
    a.addEventListener(e, function n(r) {
      i.once && a.removeEventListener(e, n), t(r);
    });
  else
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof a);
}
var eKa = pb.exports, bq = nF, xr = {
  input: !0,
  option: !0,
  optgroup: !0,
  select: !0,
  button: !0,
  datalist: !0,
  textarea: !0
}, vq = {
  tr: { tr: !0, th: !0, td: !0 },
  th: { th: !0 },
  td: { thead: !0, th: !0, td: !0 },
  body: { head: !0, link: !0, script: !0 },
  li: { li: !0 },
  p: { p: !0 },
  h1: { p: !0 },
  h2: { p: !0 },
  h3: { p: !0 },
  h4: { p: !0 },
  h5: { p: !0 },
  h6: { p: !0 },
  select: xr,
  input: xr,
  output: xr,
  button: xr,
  datalist: xr,
  textarea: xr,
  option: { option: !0 },
  optgroup: { optgroup: !0 }
}, mb = {
  __proto__: null,
  area: !0,
  base: !0,
  basefont: !0,
  br: !0,
  col: !0,
  command: !0,
  embed: !0,
  frame: !0,
  hr: !0,
  img: !0,
  input: !0,
  isindex: !0,
  keygen: !0,
  link: !0,
  meta: !0,
  param: !0,
  source: !0,
  track: !0,
  wbr: !0
}, YF = {
  __proto__: null,
  math: !0,
  svg: !0
}, ZF = {
  __proto__: null,
  mi: !0,
  mo: !0,
  mn: !0,
  ms: !0,
  mtext: !0,
  "annotation-xml": !0,
  foreignObject: !0,
  desc: !0,
  title: !0
}, tKa = /\s|\//;
function qa(a, e) {
  this._options = e || {}, this._cbs = a || {}, this._tagname = "", this._attribname = "", this._attribvalue = "", this._attribs = null, this._stack = [], this._foreignContext = [], this.startIndex = 0, this.endIndex = null, this._lowerCaseTagNames = "lowerCaseTags" in this._options ? !!this._options.lowerCaseTags : !this._options.xmlMode, this._lowerCaseAttributeNames = "lowerCaseAttributeNames" in this._options ? !!this._options.lowerCaseAttributeNames : !this._options.xmlMode, this._options.Tokenizer && (bq = this._options.Tokenizer), this._tokenizer = new bq(this._options, this), this._cbs.onparserinit && this._cbs.onparserinit(this);
}
ud(qa, eKa.EventEmitter);
qa.prototype._updatePosition = function(a) {
  this.endIndex === null ? this._tokenizer._sectionStart <= a ? this.startIndex = 0 : this.startIndex = this._tokenizer._sectionStart - a : this.startIndex = this.endIndex + 1, this.endIndex = this._tokenizer.getAbsoluteIndex();
};
qa.prototype.ontext = function(a) {
  this._updatePosition(1), this.endIndex--, this._cbs.ontext && this._cbs.ontext(a);
};
qa.prototype.onopentagname = function(a) {
  if (this._lowerCaseTagNames && (a = a.toLowerCase()), this._tagname = a, !this._options.xmlMode && a in vq)
    for (var e; (e = this._stack[this._stack.length - 1]) in vq[a]; this.onclosetag(e)) ;
  (this._options.xmlMode || !(a in mb)) && (this._stack.push(a), a in YF ? this._foreignContext.push(!0) : a in ZF && this._foreignContext.push(!1)), this._cbs.onopentagname && this._cbs.onopentagname(a), this._cbs.onopentag && (this._attribs = {});
};
qa.prototype.onopentagend = function() {
  this._updatePosition(1), this._attribs && (this._cbs.onopentag && this._cbs.onopentag(this._tagname, this._attribs), this._attribs = null), !this._options.xmlMode && this._cbs.onclosetag && this._tagname in mb && this._cbs.onclosetag(this._tagname), this._tagname = "";
};
qa.prototype.onclosetag = function(a) {
  if (this._updatePosition(1), this._lowerCaseTagNames && (a = a.toLowerCase()), (a in YF || a in ZF) && this._foreignContext.pop(), this._stack.length && (!(a in mb) || this._options.xmlMode)) {
    var e = this._stack.lastIndexOf(a);
    if (e !== -1)
      if (this._cbs.onclosetag)
        for (e = this._stack.length - e; e--; ) this._cbs.onclosetag(this._stack.pop());
      else this._stack.length = e;
    else a === "p" && !this._options.xmlMode && (this.onopentagname(a), this._closeCurrentTag());
  } else !this._options.xmlMode && (a === "br" || a === "p") && (this.onopentagname(a), this._closeCurrentTag());
};
qa.prototype.onselfclosingtag = function() {
  this._options.xmlMode || this._options.recognizeSelfClosing || this._foreignContext[this._foreignContext.length - 1] ? this._closeCurrentTag() : this.onopentagend();
};
qa.prototype._closeCurrentTag = function() {
  var a = this._tagname;
  this.onopentagend(), this._stack[this._stack.length - 1] === a && (this._cbs.onclosetag && this._cbs.onclosetag(a), this._stack.pop());
};
qa.prototype.onattribname = function(a) {
  this._lowerCaseAttributeNames && (a = a.toLowerCase()), this._attribname = a;
};
qa.prototype.onattribdata = function(a) {
  this._attribvalue += a;
};
qa.prototype.onattribend = function() {
  this._cbs.onattribute && this._cbs.onattribute(this._attribname, this._attribvalue), this._attribs && !Object.prototype.hasOwnProperty.call(this._attribs, this._attribname) && (this._attribs[this._attribname] = this._attribvalue), this._attribname = "", this._attribvalue = "";
};
qa.prototype._getInstructionName = function(a) {
  var e = a.search(tKa), t = e < 0 ? a : a.substr(0, e);
  return this._lowerCaseTagNames && (t = t.toLowerCase()), t;
};
qa.prototype.ondeclaration = function(a) {
  if (this._cbs.onprocessinginstruction) {
    var e = this._getInstructionName(a);
    this._cbs.onprocessinginstruction("!" + e, "!" + a);
  }
};
qa.prototype.onprocessinginstruction = function(a) {
  if (this._cbs.onprocessinginstruction) {
    var e = this._getInstructionName(a);
    this._cbs.onprocessinginstruction("?" + e, "?" + a);
  }
};
qa.prototype.oncomment = function(a) {
  this._updatePosition(4), this._cbs.oncomment && this._cbs.oncomment(a), this._cbs.oncommentend && this._cbs.oncommentend();
};
qa.prototype.oncdata = function(a) {
  this._updatePosition(1), this._options.xmlMode || this._options.recognizeCDATA ? (this._cbs.oncdatastart && this._cbs.oncdatastart(), this._cbs.ontext && this._cbs.ontext(a), this._cbs.oncdataend && this._cbs.oncdataend()) : this.oncomment("[CDATA[" + a + "]]");
};
qa.prototype.onerror = function(a) {
  this._cbs.onerror && this._cbs.onerror(a);
};
qa.prototype.onend = function() {
  if (this._cbs.onclosetag)
    for (var a = this._stack.length; a > 0; this._cbs.onclosetag(this._stack[--a])) ;
  this._cbs.onend && this._cbs.onend();
};
qa.prototype.reset = function() {
  this._cbs.onreset && this._cbs.onreset(), this._tokenizer.reset(), this._tagname = "", this._attribname = "", this._attribs = null, this._stack = [], this._cbs.onparserinit && this._cbs.onparserinit(this);
};
qa.prototype.parseComplete = function(a) {
  this.reset(), this.end(a);
};
qa.prototype.write = function(a) {
  this._tokenizer.write(a);
};
qa.prototype.end = function(a) {
  this._tokenizer.end(a);
};
qa.prototype.pause = function() {
  this._tokenizer.pause();
};
qa.prototype.resume = function() {
  this._tokenizer.resume();
};
qa.prototype.parseChunk = qa.prototype.write;
qa.prototype.done = qa.prototype.end;
var XF = qa, hd = {
  Text: "text",
  //Text
  Directive: "directive",
  //<? ... ?>
  Comment: "comment",
  //<!-- ... -->
  Script: "script",
  //<script> tags
  Style: "style",
  //<style> tags
  Tag: "tag",
  //Any tag
  CDATA: "cdata",
  //<![CDATA[ ... ]]>
  Doctype: "doctype",
  isTag: function(a) {
    return a.type === "tag" || a.type === "script" || a.type === "style";
  }
}, JF = { exports: {} };
JF.exports = {
  get firstChild() {
    var a = this.children;
    return a && a[0] || null;
  },
  get lastChild() {
    var a = this.children;
    return a && a[a.length - 1] || null;
  },
  get nodeType() {
    return kq[this.type] || kq.element;
  }
};
var iKa = {
  tagName: "name",
  childNodes: "children",
  parentNode: "parent",
  previousSibling: "prev",
  nextSibling: "next",
  nodeValue: "data"
}, kq = {
  element: 1,
  text: 3,
  cdata: 4,
  comment: 8
};
Object.keys(iKa).forEach(function(a) {
});
var QF = JF.exports, aD = { exports: {} }, nKa = QF, rKa = aD.exports = Object.create(nKa), _q = {
  tagName: "name"
};
Object.keys(_q).forEach(function(a) {
  var e = _q[a];
  Object.defineProperty(rKa, a, {
    get: function() {
      return this[e] || null;
    },
    set: function(t) {
      return this[e] = t, t;
    }
  });
});
var sKa = aD.exports, Pt = hd, _z = /\s+/g, oKa = QF, dKa = sKa;
function je(a, e, t) {
  typeof a == "object" ? (t = e, e = a, a = null) : typeof e == "function" && (t = e, e = $q), this._callback = a, this._options = e || $q, this._elementCB = t, this.dom = [], this._done = !1, this._tagStack = [], this._parser = this._parser || null;
}
var $q = {
  normalizeWhitespace: !1,
  //Replace all whitespace with single spaces
  withStartIndices: !1,
  //Add startIndex properties to nodes
  withEndIndices: !1
  //Add endIndex properties to nodes
};
je.prototype.onparserinit = function(a) {
  this._parser = a;
};
je.prototype.onreset = function() {
  je.call(this, this._callback, this._options, this._elementCB);
};
je.prototype.onend = function() {
  this._done || (this._done = !0, this._parser = null, this._handleCallback(null));
};
je.prototype._handleCallback = je.prototype.onerror = function(a) {
  if (typeof this._callback == "function")
    this._callback(a, this.dom);
  else if (a) throw a;
};
je.prototype.onclosetag = function() {
  var a = this._tagStack.pop();
  this._options.withEndIndices && a && (a.endIndex = this._parser.endIndex), this._elementCB && this._elementCB(a);
};
je.prototype._createDomElement = function(a) {
  if (!this._options.withDomLvl1) return a;
  var e;
  a.type === "tag" ? e = Object.create(dKa) : e = Object.create(oKa);
  for (var t in a)
    a.hasOwnProperty(t) && (e[t] = a[t]);
  return e;
};
je.prototype._addDomElement = function(a) {
  var e = this._tagStack[this._tagStack.length - 1], t = e ? e.children : this.dom, i = t[t.length - 1];
  a.next = null, this._options.withStartIndices && (a.startIndex = this._parser.startIndex), this._options.withEndIndices && (a.endIndex = this._parser.endIndex), i ? (a.prev = i, i.next = a) : a.prev = null, t.push(a), a.parent = e || null;
};
je.prototype.onopentag = function(a, e) {
  var t = {
    type: a === "script" ? Pt.Script : a === "style" ? Pt.Style : Pt.Tag,
    name: a,
    attribs: e,
    children: []
  }, i = this._createDomElement(t);
  this._addDomElement(i), this._tagStack.push(i);
};
je.prototype.ontext = function(a) {
  var e = this._options.normalizeWhitespace || this._options.ignoreWhitespace, t;
  if (!this._tagStack.length && this.dom.length && (t = this.dom[this.dom.length - 1]).type === Pt.Text)
    e ? t.data = (t.data + a).replace(_z, " ") : t.data += a;
  else if (this._tagStack.length && (t = this._tagStack[this._tagStack.length - 1]) && (t = t.children[t.children.length - 1]) && t.type === Pt.Text)
    e ? t.data = (t.data + a).replace(_z, " ") : t.data += a;
  else {
    e && (a = a.replace(_z, " "));
    var i = this._createDomElement({
      data: a,
      type: Pt.Text
    });
    this._addDomElement(i);
  }
};
je.prototype.oncomment = function(a) {
  var e = this._tagStack[this._tagStack.length - 1];
  if (e && e.type === Pt.Comment) {
    e.data += a;
    return;
  }
  var t = {
    data: a,
    type: Pt.Comment
  }, i = this._createDomElement(t);
  this._addDomElement(i), this._tagStack.push(i);
};
je.prototype.oncdatastart = function() {
  var a = {
    children: [{
      data: "",
      type: Pt.Text
    }],
    type: Pt.CDATA
  }, e = this._createDomElement(a);
  this._addDomElement(e), this._tagStack.push(e);
};
je.prototype.oncommentend = je.prototype.oncdataend = function() {
  this._tagStack.pop();
};
je.prototype.onprocessinginstruction = function(a, e) {
  var t = this._createDomElement({
    name: a,
    data: e,
    type: Pt.Directive
  });
  this._addDomElement(t);
};
var eD = je, $z = { exports: {} }, jz = { exports: {} }, xz = {}, jq;
function lKa() {
  return jq || (jq = 1, function(a) {
    Object.defineProperty(a, "__esModule", { value: !0 }), a.Doctype = a.CDATA = a.Tag = a.Style = a.Script = a.Comment = a.Directive = a.Text = a.Root = a.isTag = a.ElementType = void 0;
    var e;
    (function(i) {
      i.Root = "root", i.Text = "text", i.Directive = "directive", i.Comment = "comment", i.Script = "script", i.Style = "style", i.Tag = "tag", i.CDATA = "cdata", i.Doctype = "doctype";
    })(e = a.ElementType || (a.ElementType = {}));
    function t(i) {
      return i.type === e.Tag || i.type === e.Script || i.type === e.Style;
    }
    a.isTag = t, a.Root = e.Root, a.Text = e.Text, a.Directive = e.Directive, a.Comment = e.Comment, a.Script = e.Script, a.Style = e.Style, a.Tag = e.Tag, a.CDATA = e.CDATA, a.Doctype = e.Doctype;
  }(xz)), xz;
}
var Az = {}, pi = {};
const cKa = "Á", uKa = "á", pKa = "Ă", mKa = "ă", gKa = "∾", zKa = "∿", fKa = "∾̳", yKa = "Â", wKa = "â", hKa = "´", bKa = "А", vKa = "а", kKa = "Æ", _Ka = "æ", $Ka = "⁡", jKa = "𝔄", xKa = "𝔞", AKa = "À", EKa = "à", SKa = "ℵ", qKa = "ℵ", PKa = "Α", TKa = "α", RKa = "Ā", OKa = "ā", MKa = "⨿", CKa = "&", LKa = "&", IKa = "⩕", WKa = "⩓", FKa = "∧", DKa = "⩜", BKa = "⩘", NKa = "⩚", UKa = "∠", HKa = "⦤", VKa = "∠", KKa = "⦨", GKa = "⦩", YKa = "⦪", ZKa = "⦫", XKa = "⦬", JKa = "⦭", QKa = "⦮", aGa = "⦯", eGa = "∡", tGa = "∟", iGa = "⊾", nGa = "⦝", rGa = "∢", sGa = "Å", oGa = "⍼", dGa = "Ą", lGa = "ą", cGa = "𝔸", uGa = "𝕒", pGa = "⩯", mGa = "≈", gGa = "⩰", zGa = "≊", fGa = "≋", yGa = "'", wGa = "⁡", hGa = "≈", bGa = "≊", vGa = "Å", kGa = "å", _Ga = "𝒜", $Ga = "𝒶", jGa = "≔", xGa = "*", AGa = "≈", EGa = "≍", SGa = "Ã", qGa = "ã", PGa = "Ä", TGa = "ä", RGa = "∳", OGa = "⨑", MGa = "≌", CGa = "϶", LGa = "‵", IGa = "∽", WGa = "⋍", FGa = "∖", DGa = "⫧", BGa = "⊽", NGa = "⌅", UGa = "⌆", HGa = "⌅", VGa = "⎵", KGa = "⎶", GGa = "≌", YGa = "Б", ZGa = "б", XGa = "„", JGa = "∵", QGa = "∵", aYa = "∵", eYa = "⦰", tYa = "϶", iYa = "ℬ", nYa = "ℬ", rYa = "Β", sYa = "β", oYa = "ℶ", dYa = "≬", lYa = "𝔅", cYa = "𝔟", uYa = "⋂", pYa = "◯", mYa = "⋃", gYa = "⨀", zYa = "⨁", fYa = "⨂", yYa = "⨆", wYa = "★", hYa = "▽", bYa = "△", vYa = "⨄", kYa = "⋁", _Ya = "⋀", $Ya = "⤍", jYa = "⧫", xYa = "▪", AYa = "▴", EYa = "▾", SYa = "◂", qYa = "▸", PYa = "␣", TYa = "▒", RYa = "░", OYa = "▓", MYa = "█", CYa = "=⃥", LYa = "≡⃥", IYa = "⫭", WYa = "⌐", FYa = "𝔹", DYa = "𝕓", BYa = "⊥", NYa = "⊥", UYa = "⋈", HYa = "⧉", VYa = "┐", KYa = "╕", GYa = "╖", YYa = "╗", ZYa = "┌", XYa = "╒", JYa = "╓", QYa = "╔", aZa = "─", eZa = "═", tZa = "┬", iZa = "╤", nZa = "╥", rZa = "╦", sZa = "┴", oZa = "╧", dZa = "╨", lZa = "╩", cZa = "⊟", uZa = "⊞", pZa = "⊠", mZa = "┘", gZa = "╛", zZa = "╜", fZa = "╝", yZa = "└", wZa = "╘", hZa = "╙", bZa = "╚", vZa = "│", kZa = "║", _Za = "┼", $Za = "╪", jZa = "╫", xZa = "╬", AZa = "┤", EZa = "╡", SZa = "╢", qZa = "╣", PZa = "├", TZa = "╞", RZa = "╟", OZa = "╠", MZa = "‵", CZa = "˘", LZa = "˘", IZa = "¦", WZa = "𝒷", FZa = "ℬ", DZa = "⁏", BZa = "∽", NZa = "⋍", UZa = "⧅", HZa = "\\", VZa = "⟈", KZa = "•", GZa = "•", YZa = "≎", ZZa = "⪮", XZa = "≏", JZa = "≎", QZa = "≏", aXa = "Ć", eXa = "ć", tXa = "⩄", iXa = "⩉", nXa = "⩋", rXa = "∩", sXa = "⋒", oXa = "⩇", dXa = "⩀", lXa = "ⅅ", cXa = "∩︀", uXa = "⁁", pXa = "ˇ", mXa = "ℭ", gXa = "⩍", zXa = "Č", fXa = "č", yXa = "Ç", wXa = "ç", hXa = "Ĉ", bXa = "ĉ", vXa = "∰", kXa = "⩌", _Xa = "⩐", $Xa = "Ċ", jXa = "ċ", xXa = "¸", AXa = "¸", EXa = "⦲", SXa = "¢", qXa = "·", PXa = "·", TXa = "𝔠", RXa = "ℭ", OXa = "Ч", MXa = "ч", CXa = "✓", LXa = "✓", IXa = "Χ", WXa = "χ", FXa = "ˆ", DXa = "≗", BXa = "↺", NXa = "↻", UXa = "⊛", HXa = "⊚", VXa = "⊝", KXa = "⊙", GXa = "®", YXa = "Ⓢ", ZXa = "⊖", XXa = "⊕", JXa = "⊗", QXa = "○", aJa = "⧃", eJa = "≗", tJa = "⨐", iJa = "⫯", nJa = "⧂", rJa = "∲", sJa = "”", oJa = "’", dJa = "♣", lJa = "♣", cJa = ":", uJa = "∷", pJa = "⩴", mJa = "≔", gJa = "≔", zJa = ",", fJa = "@", yJa = "∁", wJa = "∘", hJa = "∁", bJa = "ℂ", vJa = "≅", kJa = "⩭", _Ja = "≡", $Ja = "∮", jJa = "∯", xJa = "∮", AJa = "𝕔", EJa = "ℂ", SJa = "∐", qJa = "∐", PJa = "©", TJa = "©", RJa = "℗", OJa = "∳", MJa = "↵", CJa = "✗", LJa = "⨯", IJa = "𝒞", WJa = "𝒸", FJa = "⫏", DJa = "⫑", BJa = "⫐", NJa = "⫒", UJa = "⋯", HJa = "⤸", VJa = "⤵", KJa = "⋞", GJa = "⋟", YJa = "↶", ZJa = "⤽", XJa = "⩈", JJa = "⩆", QJa = "≍", aQa = "∪", eQa = "⋓", tQa = "⩊", iQa = "⊍", nQa = "⩅", rQa = "∪︀", sQa = "↷", oQa = "⤼", dQa = "⋞", lQa = "⋟", cQa = "⋎", uQa = "⋏", pQa = "¤", mQa = "↶", gQa = "↷", zQa = "⋎", fQa = "⋏", yQa = "∲", wQa = "∱", hQa = "⌭", bQa = "†", vQa = "‡", kQa = "ℸ", _Qa = "↓", $Qa = "↡", jQa = "⇓", xQa = "‐", AQa = "⫤", EQa = "⊣", SQa = "⤏", qQa = "˝", PQa = "Ď", TQa = "ď", RQa = "Д", OQa = "д", MQa = "‡", CQa = "⇊", LQa = "ⅅ", IQa = "ⅆ", WQa = "⤑", FQa = "⩷", DQa = "°", BQa = "∇", NQa = "Δ", UQa = "δ", HQa = "⦱", VQa = "⥿", KQa = "𝔇", GQa = "𝔡", YQa = "⥥", ZQa = "⇃", XQa = "⇂", JQa = "´", QQa = "˙", aae = "˝", eae = "`", tae = "˜", iae = "⋄", nae = "⋄", rae = "⋄", sae = "♦", oae = "♦", dae = "¨", lae = "ⅆ", cae = "ϝ", uae = "⋲", pae = "÷", mae = "÷", gae = "⋇", zae = "⋇", fae = "Ђ", yae = "ђ", wae = "⌞", hae = "⌍", bae = "$", vae = "𝔻", kae = "𝕕", _ae = "¨", $ae = "˙", jae = "⃜", xae = "≐", Aae = "≑", Eae = "≐", Sae = "∸", qae = "∔", Pae = "⊡", Tae = "⌆", Rae = "∯", Oae = "¨", Mae = "⇓", Cae = "⇐", Lae = "⇔", Iae = "⫤", Wae = "⟸", Fae = "⟺", Dae = "⟹", Bae = "⇒", Nae = "⊨", Uae = "⇑", Hae = "⇕", Vae = "∥", Kae = "⤓", Gae = "↓", Yae = "↓", Zae = "⇓", Xae = "⇵", Jae = "̑", Qae = "⇊", aee = "⇃", eee = "⇂", tee = "⥐", iee = "⥞", nee = "⥖", ree = "↽", see = "⥟", oee = "⥗", dee = "⇁", lee = "↧", cee = "⊤", uee = "⤐", pee = "⌟", mee = "⌌", gee = "𝒟", zee = "𝒹", fee = "Ѕ", yee = "ѕ", wee = "⧶", hee = "Đ", bee = "đ", vee = "⋱", kee = "▿", _ee = "▾", $ee = "⇵", jee = "⥯", xee = "⦦", Aee = "Џ", Eee = "џ", See = "⟿", qee = "É", Pee = "é", Tee = "⩮", Ree = "Ě", Oee = "ě", Mee = "Ê", Cee = "ê", Lee = "≖", Iee = "≕", Wee = "Э", Fee = "э", Dee = "⩷", Bee = "Ė", Nee = "ė", Uee = "≑", Hee = "ⅇ", Vee = "≒", Kee = "𝔈", Gee = "𝔢", Yee = "⪚", Zee = "È", Xee = "è", Jee = "⪖", Qee = "⪘", ate = "⪙", ete = "∈", tte = "⏧", ite = "ℓ", nte = "⪕", rte = "⪗", ste = "Ē", ote = "ē", dte = "∅", lte = "∅", cte = "◻", ute = "∅", pte = "▫", mte = " ", gte = " ", zte = " ", fte = "Ŋ", yte = "ŋ", wte = " ", hte = "Ę", bte = "ę", vte = "𝔼", kte = "𝕖", _te = "⋕", $te = "⧣", jte = "⩱", xte = "ε", Ate = "Ε", Ete = "ε", Ste = "ϵ", qte = "≖", Pte = "≕", Tte = "≂", Rte = "⪖", Ote = "⪕", Mte = "⩵", Cte = "=", Lte = "≂", Ite = "≟", Wte = "⇌", Fte = "≡", Dte = "⩸", Bte = "⧥", Nte = "⥱", Ute = "≓", Hte = "ℯ", Vte = "ℰ", Kte = "≐", Gte = "⩳", Yte = "≂", Zte = "Η", Xte = "η", Jte = "Ð", Qte = "ð", aie = "Ë", eie = "ë", tie = "€", iie = "!", nie = "∃", rie = "∃", sie = "ℰ", oie = "ⅇ", die = "ⅇ", lie = "≒", cie = "Ф", uie = "ф", pie = "♀", mie = "ﬃ", gie = "ﬀ", zie = "ﬄ", fie = "𝔉", yie = "𝔣", wie = "ﬁ", hie = "◼", bie = "▪", vie = "fj", kie = "♭", _ie = "ﬂ", $ie = "▱", jie = "ƒ", xie = "𝔽", Aie = "𝕗", Eie = "∀", Sie = "∀", qie = "⋔", Pie = "⫙", Tie = "ℱ", Rie = "⨍", Oie = "½", Mie = "⅓", Cie = "¼", Lie = "⅕", Iie = "⅙", Wie = "⅛", Fie = "⅔", Die = "⅖", Bie = "¾", Nie = "⅗", Uie = "⅜", Hie = "⅘", Vie = "⅚", Kie = "⅝", Gie = "⅞", Yie = "⁄", Zie = "⌢", Xie = "𝒻", Jie = "ℱ", Qie = "ǵ", ane = "Γ", ene = "γ", tne = "Ϝ", ine = "ϝ", nne = "⪆", rne = "Ğ", sne = "ğ", one = "Ģ", dne = "Ĝ", lne = "ĝ", cne = "Г", une = "г", pne = "Ġ", mne = "ġ", gne = "≥", zne = "≧", fne = "⪌", yne = "⋛", wne = "≥", hne = "≧", bne = "⩾", vne = "⪩", kne = "⩾", _ne = "⪀", $ne = "⪂", jne = "⪄", xne = "⋛︀", Ane = "⪔", Ene = "𝔊", Sne = "𝔤", qne = "≫", Pne = "⋙", Tne = "⋙", Rne = "ℷ", One = "Ѓ", Mne = "ѓ", Cne = "⪥", Lne = "≷", Ine = "⪒", Wne = "⪤", Fne = "⪊", Dne = "⪊", Bne = "⪈", Nne = "≩", Une = "⪈", Hne = "≩", Vne = "⋧", Kne = "𝔾", Gne = "𝕘", Yne = "`", Zne = "≥", Xne = "⋛", Jne = "≧", Qne = "⪢", are = "≷", ere = "⩾", tre = "≳", ire = "𝒢", nre = "ℊ", rre = "≳", sre = "⪎", ore = "⪐", dre = "⪧", lre = "⩺", cre = ">", ure = ">", pre = "≫", mre = "⋗", gre = "⦕", zre = "⩼", fre = "⪆", yre = "⥸", wre = "⋗", hre = "⋛", bre = "⪌", vre = "≷", kre = "≳", _re = "≩︀", $re = "≩︀", jre = "ˇ", xre = " ", Are = "½", Ere = "ℋ", Sre = "Ъ", qre = "ъ", Pre = "⥈", Tre = "↔", Rre = "⇔", Ore = "↭", Mre = "^", Cre = "ℏ", Lre = "Ĥ", Ire = "ĥ", Wre = "♥", Fre = "♥", Dre = "…", Bre = "⊹", Nre = "𝔥", Ure = "ℌ", Hre = "ℋ", Vre = "⤥", Kre = "⤦", Gre = "⇿", Yre = "∻", Zre = "↩", Xre = "↪", Jre = "𝕙", Qre = "ℍ", ase = "―", ese = "─", tse = "𝒽", ise = "ℋ", nse = "ℏ", rse = "Ħ", sse = "ħ", ose = "≎", dse = "≏", lse = "⁃", cse = "‐", use = "Í", pse = "í", mse = "⁣", gse = "Î", zse = "î", fse = "И", yse = "и", wse = "İ", hse = "Е", bse = "е", vse = "¡", kse = "⇔", _se = "𝔦", $se = "ℑ", jse = "Ì", xse = "ì", Ase = "ⅈ", Ese = "⨌", Sse = "∭", qse = "⧜", Pse = "℩", Tse = "Ĳ", Rse = "ĳ", Ose = "Ī", Mse = "ī", Cse = "ℑ", Lse = "ⅈ", Ise = "ℐ", Wse = "ℑ", Fse = "ı", Dse = "ℑ", Bse = "⊷", Nse = "Ƶ", Use = "⇒", Hse = "℅", Vse = "∞", Kse = "⧝", Gse = "ı", Yse = "⊺", Zse = "∫", Xse = "∬", Jse = "ℤ", Qse = "∫", aoe = "⊺", eoe = "⋂", toe = "⨗", ioe = "⨼", noe = "⁣", roe = "⁢", soe = "Ё", ooe = "ё", doe = "Į", loe = "į", coe = "𝕀", uoe = "𝕚", poe = "Ι", moe = "ι", goe = "⨼", zoe = "¿", foe = "𝒾", yoe = "ℐ", woe = "∈", hoe = "⋵", boe = "⋹", voe = "⋴", koe = "⋳", _oe = "∈", $oe = "⁢", joe = "Ĩ", xoe = "ĩ", Aoe = "І", Eoe = "і", Soe = "Ï", qoe = "ï", Poe = "Ĵ", Toe = "ĵ", Roe = "Й", Ooe = "й", Moe = "𝔍", Coe = "𝔧", Loe = "ȷ", Ioe = "𝕁", Woe = "𝕛", Foe = "𝒥", Doe = "𝒿", Boe = "Ј", Noe = "ј", Uoe = "Є", Hoe = "є", Voe = "Κ", Koe = "κ", Goe = "ϰ", Yoe = "Ķ", Zoe = "ķ", Xoe = "К", Joe = "к", Qoe = "𝔎", ade = "𝔨", ede = "ĸ", tde = "Х", ide = "х", nde = "Ќ", rde = "ќ", sde = "𝕂", ode = "𝕜", dde = "𝒦", lde = "𝓀", cde = "⇚", ude = "Ĺ", pde = "ĺ", mde = "⦴", gde = "ℒ", zde = "Λ", fde = "λ", yde = "⟨", wde = "⟪", hde = "⦑", bde = "⟨", vde = "⪅", kde = "ℒ", _de = "«", $de = "⇤", jde = "⤟", xde = "←", Ade = "↞", Ede = "⇐", Sde = "⤝", qde = "↩", Pde = "↫", Tde = "⤹", Rde = "⥳", Ode = "↢", Mde = "⤙", Cde = "⤛", Lde = "⪫", Ide = "⪭", Wde = "⪭︀", Fde = "⤌", Dde = "⤎", Bde = "❲", Nde = "{", Ude = "[", Hde = "⦋", Vde = "⦏", Kde = "⦍", Gde = "Ľ", Yde = "ľ", Zde = "Ļ", Xde = "ļ", Jde = "⌈", Qde = "{", ale = "Л", ele = "л", tle = "⤶", ile = "“", nle = "„", rle = "⥧", sle = "⥋", ole = "↲", dle = "≤", lle = "≦", cle = "⟨", ule = "⇤", ple = "←", mle = "←", gle = "⇐", zle = "⇆", fle = "↢", yle = "⌈", wle = "⟦", hle = "⥡", ble = "⥙", vle = "⇃", kle = "⌊", _le = "↽", $le = "↼", jle = "⇇", xle = "↔", Ale = "↔", Ele = "⇔", Sle = "⇆", qle = "⇋", Ple = "↭", Tle = "⥎", Rle = "↤", Ole = "⊣", Mle = "⥚", Cle = "⋋", Lle = "⧏", Ile = "⊲", Wle = "⊴", Fle = "⥑", Dle = "⥠", Ble = "⥘", Nle = "↿", Ule = "⥒", Hle = "↼", Vle = "⪋", Kle = "⋚", Gle = "≤", Yle = "≦", Zle = "⩽", Xle = "⪨", Jle = "⩽", Qle = "⩿", ace = "⪁", ece = "⪃", tce = "⋚︀", ice = "⪓", nce = "⪅", rce = "⋖", sce = "⋚", oce = "⪋", dce = "⋚", lce = "≦", cce = "≶", uce = "≶", pce = "⪡", mce = "≲", gce = "⩽", zce = "≲", fce = "⥼", yce = "⌊", wce = "𝔏", hce = "𝔩", bce = "≶", vce = "⪑", kce = "⥢", _ce = "↽", $ce = "↼", jce = "⥪", xce = "▄", Ace = "Љ", Ece = "љ", Sce = "⇇", qce = "≪", Pce = "⋘", Tce = "⌞", Rce = "⇚", Oce = "⥫", Mce = "◺", Cce = "Ŀ", Lce = "ŀ", Ice = "⎰", Wce = "⎰", Fce = "⪉", Dce = "⪉", Bce = "⪇", Nce = "≨", Uce = "⪇", Hce = "≨", Vce = "⋦", Kce = "⟬", Gce = "⇽", Yce = "⟦", Zce = "⟵", Xce = "⟵", Jce = "⟸", Qce = "⟷", aue = "⟷", eue = "⟺", tue = "⟼", iue = "⟶", nue = "⟶", rue = "⟹", sue = "↫", oue = "↬", due = "⦅", lue = "𝕃", cue = "𝕝", uue = "⨭", pue = "⨴", mue = "∗", gue = "_", zue = "↙", fue = "↘", yue = "◊", wue = "◊", hue = "⧫", bue = "(", vue = "⦓", kue = "⇆", _ue = "⌟", $ue = "⇋", jue = "⥭", xue = "‎", Aue = "⊿", Eue = "‹", Sue = "𝓁", que = "ℒ", Pue = "↰", Tue = "↰", Rue = "≲", Oue = "⪍", Mue = "⪏", Cue = "[", Lue = "‘", Iue = "‚", Wue = "Ł", Fue = "ł", Due = "⪦", Bue = "⩹", Nue = "<", Uue = "<", Hue = "≪", Vue = "⋖", Kue = "⋋", Gue = "⋉", Yue = "⥶", Zue = "⩻", Xue = "◃", Jue = "⊴", Que = "◂", ape = "⦖", epe = "⥊", tpe = "⥦", ipe = "≨︀", npe = "≨︀", rpe = "¯", spe = "♂", ope = "✠", dpe = "✠", lpe = "↦", cpe = "↦", upe = "↧", ppe = "↤", mpe = "↥", gpe = "▮", zpe = "⨩", fpe = "М", ype = "м", wpe = "—", hpe = "∺", bpe = "∡", vpe = " ", kpe = "ℳ", _pe = "𝔐", $pe = "𝔪", jpe = "℧", xpe = "µ", Ape = "*", Epe = "⫰", Spe = "∣", qpe = "·", Ppe = "⊟", Tpe = "−", Rpe = "∸", Ope = "⨪", Mpe = "∓", Cpe = "⫛", Lpe = "…", Ipe = "∓", Wpe = "⊧", Fpe = "𝕄", Dpe = "𝕞", Bpe = "∓", Npe = "𝓂", Upe = "ℳ", Hpe = "∾", Vpe = "Μ", Kpe = "μ", Gpe = "⊸", Ype = "⊸", Zpe = "∇", Xpe = "Ń", Jpe = "ń", Qpe = "∠⃒", ame = "≉", eme = "⩰̸", tme = "≋̸", ime = "ŉ", nme = "≉", rme = "♮", sme = "ℕ", ome = "♮", dme = " ", lme = "≎̸", cme = "≏̸", ume = "⩃", pme = "Ň", mme = "ň", gme = "Ņ", zme = "ņ", fme = "≇", yme = "⩭̸", wme = "⩂", hme = "Н", bme = "н", vme = "–", kme = "⤤", _me = "↗", $me = "⇗", jme = "↗", xme = "≠", Ame = "≐̸", Eme = "​", Sme = "​", qme = "​", Pme = "​", Tme = "≢", Rme = "⤨", Ome = "≂̸", Mme = "≫", Cme = "≪", Lme = `
`, Ime = "∄", Wme = "∄", Fme = "𝔑", Dme = "𝔫", Bme = "≧̸", Nme = "≱", Ume = "≱", Hme = "≧̸", Vme = "⩾̸", Kme = "⩾̸", Gme = "⋙̸", Yme = "≵", Zme = "≫⃒", Xme = "≯", Jme = "≯", Qme = "≫̸", age = "↮", ege = "⇎", tge = "⫲", ige = "∋", nge = "⋼", rge = "⋺", sge = "∋", oge = "Њ", dge = "њ", lge = "↚", cge = "⇍", uge = "‥", pge = "≦̸", mge = "≰", gge = "↚", zge = "⇍", fge = "↮", yge = "⇎", wge = "≰", hge = "≦̸", bge = "⩽̸", vge = "⩽̸", kge = "≮", _ge = "⋘̸", $ge = "≴", jge = "≪⃒", xge = "≮", Age = "⋪", Ege = "⋬", Sge = "≪̸", qge = "∤", Pge = "⁠", Tge = " ", Rge = "𝕟", Oge = "ℕ", Mge = "⫬", Cge = "¬", Lge = "≢", Ige = "≭", Wge = "∦", Fge = "∉", Dge = "≠", Bge = "≂̸", Nge = "∄", Uge = "≯", Hge = "≱", Vge = "≧̸", Kge = "≫̸", Gge = "≹", Yge = "⩾̸", Zge = "≵", Xge = "≎̸", Jge = "≏̸", Qge = "∉", aze = "⋵̸", eze = "⋹̸", tze = "∉", ize = "⋷", nze = "⋶", rze = "⧏̸", sze = "⋪", oze = "⋬", dze = "≮", lze = "≰", cze = "≸", uze = "≪̸", pze = "⩽̸", mze = "≴", gze = "⪢̸", zze = "⪡̸", fze = "∌", yze = "∌", wze = "⋾", hze = "⋽", bze = "⊀", vze = "⪯̸", kze = "⋠", _ze = "∌", $ze = "⧐̸", jze = "⋫", xze = "⋭", Aze = "⊏̸", Eze = "⋢", Sze = "⊐̸", qze = "⋣", Pze = "⊂⃒", Tze = "⊈", Rze = "⊁", Oze = "⪰̸", Mze = "⋡", Cze = "≿̸", Lze = "⊃⃒", Ize = "⊉", Wze = "≁", Fze = "≄", Dze = "≇", Bze = "≉", Nze = "∤", Uze = "∦", Hze = "∦", Vze = "⫽⃥", Kze = "∂̸", Gze = "⨔", Yze = "⊀", Zze = "⋠", Xze = "⊀", Jze = "⪯̸", Qze = "⪯̸", afe = "⤳̸", efe = "↛", tfe = "⇏", ife = "↝̸", nfe = "↛", rfe = "⇏", sfe = "⋫", ofe = "⋭", dfe = "⊁", lfe = "⋡", cfe = "⪰̸", ufe = "𝒩", pfe = "𝓃", mfe = "∤", gfe = "∦", zfe = "≁", ffe = "≄", yfe = "≄", wfe = "∤", hfe = "∦", bfe = "⋢", vfe = "⋣", kfe = "⊄", _fe = "⫅̸", $fe = "⊈", jfe = "⊂⃒", xfe = "⊈", Afe = "⫅̸", Efe = "⊁", Sfe = "⪰̸", qfe = "⊅", Pfe = "⫆̸", Tfe = "⊉", Rfe = "⊃⃒", Ofe = "⊉", Mfe = "⫆̸", Cfe = "≹", Lfe = "Ñ", Ife = "ñ", Wfe = "≸", Ffe = "⋪", Dfe = "⋬", Bfe = "⋫", Nfe = "⋭", Ufe = "Ν", Hfe = "ν", Vfe = "#", Kfe = "№", Gfe = " ", Yfe = "≍⃒", Zfe = "⊬", Xfe = "⊭", Jfe = "⊮", Qfe = "⊯", aye = "≥⃒", eye = ">⃒", tye = "⤄", iye = "⧞", nye = "⤂", rye = "≤⃒", sye = "<⃒", oye = "⊴⃒", dye = "⤃", lye = "⊵⃒", cye = "∼⃒", uye = "⤣", pye = "↖", mye = "⇖", gye = "↖", zye = "⤧", fye = "Ó", yye = "ó", wye = "⊛", hye = "Ô", bye = "ô", vye = "⊚", kye = "О", _ye = "о", $ye = "⊝", jye = "Ő", xye = "ő", Aye = "⨸", Eye = "⊙", Sye = "⦼", qye = "Œ", Pye = "œ", Tye = "⦿", Rye = "𝔒", Oye = "𝔬", Mye = "˛", Cye = "Ò", Lye = "ò", Iye = "⧁", Wye = "⦵", Fye = "Ω", Dye = "∮", Bye = "↺", Nye = "⦾", Uye = "⦻", Hye = "‾", Vye = "⧀", Kye = "Ō", Gye = "ō", Yye = "Ω", Zye = "ω", Xye = "Ο", Jye = "ο", Qye = "⦶", awe = "⊖", ewe = "𝕆", twe = "𝕠", iwe = "⦷", nwe = "“", rwe = "‘", swe = "⦹", owe = "⊕", dwe = "↻", lwe = "⩔", cwe = "∨", uwe = "⩝", pwe = "ℴ", mwe = "ℴ", gwe = "ª", zwe = "º", fwe = "⊶", ywe = "⩖", wwe = "⩗", hwe = "⩛", bwe = "Ⓢ", vwe = "𝒪", kwe = "ℴ", _we = "Ø", $we = "ø", jwe = "⊘", xwe = "Õ", Awe = "õ", Ewe = "⨶", Swe = "⨷", qwe = "⊗", Pwe = "Ö", Twe = "ö", Rwe = "⌽", Owe = "‾", Mwe = "⏞", Cwe = "⎴", Lwe = "⏜", Iwe = "¶", Wwe = "∥", Fwe = "∥", Dwe = "⫳", Bwe = "⫽", Nwe = "∂", Uwe = "∂", Hwe = "П", Vwe = "п", Kwe = "%", Gwe = ".", Ywe = "‰", Zwe = "⊥", Xwe = "‱", Jwe = "𝔓", Qwe = "𝔭", ahe = "Φ", ehe = "φ", the = "ϕ", ihe = "ℳ", nhe = "☎", rhe = "Π", she = "π", ohe = "⋔", dhe = "ϖ", lhe = "ℏ", che = "ℎ", uhe = "ℏ", phe = "⨣", mhe = "⊞", ghe = "⨢", zhe = "+", fhe = "∔", yhe = "⨥", whe = "⩲", hhe = "±", bhe = "±", vhe = "⨦", khe = "⨧", _he = "±", $he = "ℌ", jhe = "⨕", xhe = "𝕡", Ahe = "ℙ", Ehe = "£", She = "⪷", qhe = "⪻", Phe = "≺", The = "≼", Rhe = "⪷", Ohe = "≺", Mhe = "≼", Che = "≺", Lhe = "⪯", Ihe = "≼", Whe = "≾", Fhe = "⪯", Dhe = "⪹", Bhe = "⪵", Nhe = "⋨", Uhe = "⪯", Hhe = "⪳", Vhe = "≾", Khe = "′", Ghe = "″", Yhe = "ℙ", Zhe = "⪹", Xhe = "⪵", Jhe = "⋨", Qhe = "∏", abe = "∏", ebe = "⌮", tbe = "⌒", ibe = "⌓", nbe = "∝", rbe = "∝", sbe = "∷", obe = "∝", dbe = "≾", lbe = "⊰", cbe = "𝒫", ube = "𝓅", pbe = "Ψ", mbe = "ψ", gbe = " ", zbe = "𝔔", fbe = "𝔮", ybe = "⨌", wbe = "𝕢", hbe = "ℚ", bbe = "⁗", vbe = "𝒬", kbe = "𝓆", _be = "ℍ", $be = "⨖", jbe = "?", xbe = "≟", Abe = '"', Ebe = '"', Sbe = "⇛", qbe = "∽̱", Pbe = "Ŕ", Tbe = "ŕ", Rbe = "√", Obe = "⦳", Mbe = "⟩", Cbe = "⟫", Lbe = "⦒", Ibe = "⦥", Wbe = "⟩", Fbe = "»", Dbe = "⥵", Bbe = "⇥", Nbe = "⤠", Ube = "⤳", Hbe = "→", Vbe = "↠", Kbe = "⇒", Gbe = "⤞", Ybe = "↪", Zbe = "↬", Xbe = "⥅", Jbe = "⥴", Qbe = "⤖", ave = "↣", eve = "↝", tve = "⤚", ive = "⤜", nve = "∶", rve = "ℚ", sve = "⤍", ove = "⤏", dve = "⤐", lve = "❳", cve = "}", uve = "]", pve = "⦌", mve = "⦎", gve = "⦐", zve = "Ř", fve = "ř", yve = "Ŗ", wve = "ŗ", hve = "⌉", bve = "}", vve = "Р", kve = "р", _ve = "⤷", $ve = "⥩", jve = "”", xve = "”", Ave = "↳", Eve = "ℜ", Sve = "ℛ", qve = "ℜ", Pve = "ℝ", Tve = "ℜ", Rve = "▭", Ove = "®", Mve = "®", Cve = "∋", Lve = "⇋", Ive = "⥯", Wve = "⥽", Fve = "⌋", Dve = "𝔯", Bve = "ℜ", Nve = "⥤", Uve = "⇁", Hve = "⇀", Vve = "⥬", Kve = "Ρ", Gve = "ρ", Yve = "ϱ", Zve = "⟩", Xve = "⇥", Jve = "→", Qve = "→", ake = "⇒", eke = "⇄", tke = "↣", ike = "⌉", nke = "⟧", rke = "⥝", ske = "⥕", oke = "⇂", dke = "⌋", lke = "⇁", cke = "⇀", uke = "⇄", pke = "⇌", mke = "⇉", gke = "↝", zke = "↦", fke = "⊢", yke = "⥛", wke = "⋌", hke = "⧐", bke = "⊳", vke = "⊵", kke = "⥏", _ke = "⥜", $ke = "⥔", jke = "↾", xke = "⥓", Ake = "⇀", Eke = "˚", Ske = "≓", qke = "⇄", Pke = "⇌", Tke = "‏", Rke = "⎱", Oke = "⎱", Mke = "⫮", Cke = "⟭", Lke = "⇾", Ike = "⟧", Wke = "⦆", Fke = "𝕣", Dke = "ℝ", Bke = "⨮", Nke = "⨵", Uke = "⥰", Hke = ")", Vke = "⦔", Kke = "⨒", Gke = "⇉", Yke = "⇛", Zke = "›", Xke = "𝓇", Jke = "ℛ", Qke = "↱", a0e = "↱", e0e = "]", t0e = "’", i0e = "’", n0e = "⋌", r0e = "⋊", s0e = "▹", o0e = "⊵", d0e = "▸", l0e = "⧎", c0e = "⧴", u0e = "⥨", p0e = "℞", m0e = "Ś", g0e = "ś", z0e = "‚", f0e = "⪸", y0e = "Š", w0e = "š", h0e = "⪼", b0e = "≻", v0e = "≽", k0e = "⪰", _0e = "⪴", $0e = "Ş", j0e = "ş", x0e = "Ŝ", A0e = "ŝ", E0e = "⪺", S0e = "⪶", q0e = "⋩", P0e = "⨓", T0e = "≿", R0e = "С", O0e = "с", M0e = "⊡", C0e = "⋅", L0e = "⩦", I0e = "⤥", W0e = "↘", F0e = "⇘", D0e = "↘", B0e = "§", N0e = ";", U0e = "⤩", H0e = "∖", V0e = "∖", K0e = "✶", G0e = "𝔖", Y0e = "𝔰", Z0e = "⌢", X0e = "♯", J0e = "Щ", Q0e = "щ", a_e = "Ш", e_e = "ш", t_e = "↓", i_e = "←", n_e = "∣", r_e = "∥", s_e = "→", o_e = "↑", d_e = "­", l_e = "Σ", c_e = "σ", u_e = "ς", p_e = "ς", m_e = "∼", g_e = "⩪", z_e = "≃", f_e = "≃", y_e = "⪞", w_e = "⪠", h_e = "⪝", b_e = "⪟", v_e = "≆", k_e = "⨤", __e = "⥲", $_e = "←", j_e = "∘", x_e = "∖", A_e = "⨳", E_e = "⧤", S_e = "∣", q_e = "⌣", P_e = "⪪", T_e = "⪬", R_e = "⪬︀", O_e = "Ь", M_e = "ь", C_e = "⌿", L_e = "⧄", I_e = "/", W_e = "𝕊", F_e = "𝕤", D_e = "♠", B_e = "♠", N_e = "∥", U_e = "⊓", H_e = "⊓︀", V_e = "⊔", K_e = "⊔︀", G_e = "√", Y_e = "⊏", Z_e = "⊑", X_e = "⊏", J_e = "⊑", Q_e = "⊐", a1e = "⊒", e1e = "⊐", t1e = "⊒", i1e = "□", n1e = "□", r1e = "⊓", s1e = "⊏", o1e = "⊑", d1e = "⊐", l1e = "⊒", c1e = "⊔", u1e = "▪", p1e = "□", m1e = "▪", g1e = "→", z1e = "𝒮", f1e = "𝓈", y1e = "∖", w1e = "⌣", h1e = "⋆", b1e = "⋆", v1e = "☆", k1e = "★", _1e = "ϵ", $1e = "ϕ", j1e = "¯", x1e = "⊂", A1e = "⋐", E1e = "⪽", S1e = "⫅", q1e = "⊆", P1e = "⫃", T1e = "⫁", R1e = "⫋", O1e = "⊊", M1e = "⪿", C1e = "⥹", L1e = "⊂", I1e = "⋐", W1e = "⊆", F1e = "⫅", D1e = "⊆", B1e = "⊊", N1e = "⫋", U1e = "⫇", H1e = "⫕", V1e = "⫓", K1e = "⪸", G1e = "≻", Y1e = "≽", Z1e = "≻", X1e = "⪰", J1e = "≽", Q1e = "≿", a$e = "⪰", e$e = "⪺", t$e = "⪶", i$e = "⋩", n$e = "≿", r$e = "∋", s$e = "∑", o$e = "∑", d$e = "♪", l$e = "¹", c$e = "²", u$e = "³", p$e = "⊃", m$e = "⋑", g$e = "⪾", z$e = "⫘", f$e = "⫆", y$e = "⊇", w$e = "⫄", h$e = "⊃", b$e = "⊇", v$e = "⟉", k$e = "⫗", _$e = "⥻", $$e = "⫂", j$e = "⫌", x$e = "⊋", A$e = "⫀", E$e = "⊃", S$e = "⋑", q$e = "⊇", P$e = "⫆", T$e = "⊋", R$e = "⫌", O$e = "⫈", M$e = "⫔", C$e = "⫖", L$e = "⤦", I$e = "↙", W$e = "⇙", F$e = "↙", D$e = "⤪", B$e = "ß", N$e = "	", U$e = "⌖", H$e = "Τ", V$e = "τ", K$e = "⎴", G$e = "Ť", Y$e = "ť", Z$e = "Ţ", X$e = "ţ", J$e = "Т", Q$e = "т", aje = "⃛", eje = "⌕", tje = "𝔗", ije = "𝔱", nje = "∴", rje = "∴", sje = "∴", oje = "Θ", dje = "θ", lje = "ϑ", cje = "ϑ", uje = "≈", pje = "∼", mje = "  ", gje = " ", zje = " ", fje = "≈", yje = "∼", wje = "Þ", hje = "þ", bje = "˜", vje = "∼", kje = "≃", _je = "≅", $je = "≈", jje = "⨱", xje = "⊠", Aje = "×", Eje = "⨰", Sje = "∭", qje = "⤨", Pje = "⌶", Tje = "⫱", Rje = "⊤", Oje = "𝕋", Mje = "𝕥", Cje = "⫚", Lje = "⤩", Ije = "‴", Wje = "™", Fje = "™", Dje = "▵", Bje = "▿", Nje = "◃", Uje = "⊴", Hje = "≜", Vje = "▹", Kje = "⊵", Gje = "◬", Yje = "≜", Zje = "⨺", Xje = "⃛", Jje = "⨹", Qje = "⧍", axe = "⨻", exe = "⏢", txe = "𝒯", ixe = "𝓉", nxe = "Ц", rxe = "ц", sxe = "Ћ", oxe = "ћ", dxe = "Ŧ", lxe = "ŧ", cxe = "≬", uxe = "↞", pxe = "↠", mxe = "Ú", gxe = "ú", zxe = "↑", fxe = "↟", yxe = "⇑", wxe = "⥉", hxe = "Ў", bxe = "ў", vxe = "Ŭ", kxe = "ŭ", _xe = "Û", $xe = "û", jxe = "У", xxe = "у", Axe = "⇅", Exe = "Ű", Sxe = "ű", qxe = "⥮", Pxe = "⥾", Txe = "𝔘", Rxe = "𝔲", Oxe = "Ù", Mxe = "ù", Cxe = "⥣", Lxe = "↿", Ixe = "↾", Wxe = "▀", Fxe = "⌜", Dxe = "⌜", Bxe = "⌏", Nxe = "◸", Uxe = "Ū", Hxe = "ū", Vxe = "¨", Kxe = "_", Gxe = "⏟", Yxe = "⎵", Zxe = "⏝", Xxe = "⋃", Jxe = "⊎", Qxe = "Ų", a2e = "ų", e2e = "𝕌", t2e = "𝕦", i2e = "⤒", n2e = "↑", r2e = "↑", s2e = "⇑", o2e = "⇅", d2e = "↕", l2e = "↕", c2e = "⇕", u2e = "⥮", p2e = "↿", m2e = "↾", g2e = "⊎", z2e = "↖", f2e = "↗", y2e = "υ", w2e = "ϒ", h2e = "ϒ", b2e = "Υ", v2e = "υ", k2e = "↥", _2e = "⊥", $2e = "⇈", j2e = "⌝", x2e = "⌝", A2e = "⌎", E2e = "Ů", S2e = "ů", q2e = "◹", P2e = "𝒰", T2e = "𝓊", R2e = "⋰", O2e = "Ũ", M2e = "ũ", C2e = "▵", L2e = "▴", I2e = "⇈", W2e = "Ü", F2e = "ü", D2e = "⦧", B2e = "⦜", N2e = "ϵ", U2e = "ϰ", H2e = "∅", V2e = "ϕ", K2e = "ϖ", G2e = "∝", Y2e = "↕", Z2e = "⇕", X2e = "ϱ", J2e = "ς", Q2e = "⊊︀", aAe = "⫋︀", eAe = "⊋︀", tAe = "⫌︀", iAe = "ϑ", nAe = "⊲", rAe = "⊳", sAe = "⫨", oAe = "⫫", dAe = "⫩", lAe = "В", cAe = "в", uAe = "⊢", pAe = "⊨", mAe = "⊩", gAe = "⊫", zAe = "⫦", fAe = "⊻", yAe = "∨", wAe = "⋁", hAe = "≚", bAe = "⋮", vAe = "|", kAe = "‖", _Ae = "|", $Ae = "‖", jAe = "∣", xAe = "|", AAe = "❘", EAe = "≀", SAe = " ", qAe = "𝔙", PAe = "𝔳", TAe = "⊲", RAe = "⊂⃒", OAe = "⊃⃒", MAe = "𝕍", CAe = "𝕧", LAe = "∝", IAe = "⊳", WAe = "𝒱", FAe = "𝓋", DAe = "⫋︀", BAe = "⊊︀", NAe = "⫌︀", UAe = "⊋︀", HAe = "⊪", VAe = "⦚", KAe = "Ŵ", GAe = "ŵ", YAe = "⩟", ZAe = "∧", XAe = "⋀", JAe = "≙", QAe = "℘", aEe = "𝔚", eEe = "𝔴", tEe = "𝕎", iEe = "𝕨", nEe = "℘", rEe = "≀", sEe = "≀", oEe = "𝒲", dEe = "𝓌", lEe = "⋂", cEe = "◯", uEe = "⋃", pEe = "▽", mEe = "𝔛", gEe = "𝔵", zEe = "⟷", fEe = "⟺", yEe = "Ξ", wEe = "ξ", hEe = "⟵", bEe = "⟸", vEe = "⟼", kEe = "⋻", _Ee = "⨀", $Ee = "𝕏", jEe = "𝕩", xEe = "⨁", AEe = "⨂", EEe = "⟶", SEe = "⟹", qEe = "𝒳", PEe = "𝓍", TEe = "⨆", REe = "⨄", OEe = "△", MEe = "⋁", CEe = "⋀", LEe = "Ý", IEe = "ý", WEe = "Я", FEe = "я", DEe = "Ŷ", BEe = "ŷ", NEe = "Ы", UEe = "ы", HEe = "¥", VEe = "𝔜", KEe = "𝔶", GEe = "Ї", YEe = "ї", ZEe = "𝕐", XEe = "𝕪", JEe = "𝒴", QEe = "𝓎", aSe = "Ю", eSe = "ю", tSe = "ÿ", iSe = "Ÿ", nSe = "Ź", rSe = "ź", sSe = "Ž", oSe = "ž", dSe = "З", lSe = "з", cSe = "Ż", uSe = "ż", pSe = "ℨ", mSe = "​", gSe = "Ζ", zSe = "ζ", fSe = "𝔷", ySe = "ℨ", wSe = "Ж", hSe = "ж", bSe = "⇝", vSe = "𝕫", kSe = "ℤ", _Se = "𝒵", $Se = "𝓏", jSe = "‍", xSe = "‌", tD = {
  Aacute: cKa,
  aacute: uKa,
  Abreve: pKa,
  abreve: mKa,
  ac: gKa,
  acd: zKa,
  acE: fKa,
  Acirc: yKa,
  acirc: wKa,
  acute: hKa,
  Acy: bKa,
  acy: vKa,
  AElig: kKa,
  aelig: _Ka,
  af: $Ka,
  Afr: jKa,
  afr: xKa,
  Agrave: AKa,
  agrave: EKa,
  alefsym: SKa,
  aleph: qKa,
  Alpha: PKa,
  alpha: TKa,
  Amacr: RKa,
  amacr: OKa,
  amalg: MKa,
  amp: CKa,
  AMP: LKa,
  andand: IKa,
  And: WKa,
  and: FKa,
  andd: DKa,
  andslope: BKa,
  andv: NKa,
  ang: UKa,
  ange: HKa,
  angle: VKa,
  angmsdaa: KKa,
  angmsdab: GKa,
  angmsdac: YKa,
  angmsdad: ZKa,
  angmsdae: XKa,
  angmsdaf: JKa,
  angmsdag: QKa,
  angmsdah: aGa,
  angmsd: eGa,
  angrt: tGa,
  angrtvb: iGa,
  angrtvbd: nGa,
  angsph: rGa,
  angst: sGa,
  angzarr: oGa,
  Aogon: dGa,
  aogon: lGa,
  Aopf: cGa,
  aopf: uGa,
  apacir: pGa,
  ap: mGa,
  apE: gGa,
  ape: zGa,
  apid: fGa,
  apos: yGa,
  ApplyFunction: wGa,
  approx: hGa,
  approxeq: bGa,
  Aring: vGa,
  aring: kGa,
  Ascr: _Ga,
  ascr: $Ga,
  Assign: jGa,
  ast: xGa,
  asymp: AGa,
  asympeq: EGa,
  Atilde: SGa,
  atilde: qGa,
  Auml: PGa,
  auml: TGa,
  awconint: RGa,
  awint: OGa,
  backcong: MGa,
  backepsilon: CGa,
  backprime: LGa,
  backsim: IGa,
  backsimeq: WGa,
  Backslash: FGa,
  Barv: DGa,
  barvee: BGa,
  barwed: NGa,
  Barwed: UGa,
  barwedge: HGa,
  bbrk: VGa,
  bbrktbrk: KGa,
  bcong: GGa,
  Bcy: YGa,
  bcy: ZGa,
  bdquo: XGa,
  becaus: JGa,
  because: QGa,
  Because: aYa,
  bemptyv: eYa,
  bepsi: tYa,
  bernou: iYa,
  Bernoullis: nYa,
  Beta: rYa,
  beta: sYa,
  beth: oYa,
  between: dYa,
  Bfr: lYa,
  bfr: cYa,
  bigcap: uYa,
  bigcirc: pYa,
  bigcup: mYa,
  bigodot: gYa,
  bigoplus: zYa,
  bigotimes: fYa,
  bigsqcup: yYa,
  bigstar: wYa,
  bigtriangledown: hYa,
  bigtriangleup: bYa,
  biguplus: vYa,
  bigvee: kYa,
  bigwedge: _Ya,
  bkarow: $Ya,
  blacklozenge: jYa,
  blacksquare: xYa,
  blacktriangle: AYa,
  blacktriangledown: EYa,
  blacktriangleleft: SYa,
  blacktriangleright: qYa,
  blank: PYa,
  blk12: TYa,
  blk14: RYa,
  blk34: OYa,
  block: MYa,
  bne: CYa,
  bnequiv: LYa,
  bNot: IYa,
  bnot: WYa,
  Bopf: FYa,
  bopf: DYa,
  bot: BYa,
  bottom: NYa,
  bowtie: UYa,
  boxbox: HYa,
  boxdl: VYa,
  boxdL: KYa,
  boxDl: GYa,
  boxDL: YYa,
  boxdr: ZYa,
  boxdR: XYa,
  boxDr: JYa,
  boxDR: QYa,
  boxh: aZa,
  boxH: eZa,
  boxhd: tZa,
  boxHd: iZa,
  boxhD: nZa,
  boxHD: rZa,
  boxhu: sZa,
  boxHu: oZa,
  boxhU: dZa,
  boxHU: lZa,
  boxminus: cZa,
  boxplus: uZa,
  boxtimes: pZa,
  boxul: mZa,
  boxuL: gZa,
  boxUl: zZa,
  boxUL: fZa,
  boxur: yZa,
  boxuR: wZa,
  boxUr: hZa,
  boxUR: bZa,
  boxv: vZa,
  boxV: kZa,
  boxvh: _Za,
  boxvH: $Za,
  boxVh: jZa,
  boxVH: xZa,
  boxvl: AZa,
  boxvL: EZa,
  boxVl: SZa,
  boxVL: qZa,
  boxvr: PZa,
  boxvR: TZa,
  boxVr: RZa,
  boxVR: OZa,
  bprime: MZa,
  breve: CZa,
  Breve: LZa,
  brvbar: IZa,
  bscr: WZa,
  Bscr: FZa,
  bsemi: DZa,
  bsim: BZa,
  bsime: NZa,
  bsolb: UZa,
  bsol: HZa,
  bsolhsub: VZa,
  bull: KZa,
  bullet: GZa,
  bump: YZa,
  bumpE: ZZa,
  bumpe: XZa,
  Bumpeq: JZa,
  bumpeq: QZa,
  Cacute: aXa,
  cacute: eXa,
  capand: tXa,
  capbrcup: iXa,
  capcap: nXa,
  cap: rXa,
  Cap: sXa,
  capcup: oXa,
  capdot: dXa,
  CapitalDifferentialD: lXa,
  caps: cXa,
  caret: uXa,
  caron: pXa,
  Cayleys: mXa,
  ccaps: gXa,
  Ccaron: zXa,
  ccaron: fXa,
  Ccedil: yXa,
  ccedil: wXa,
  Ccirc: hXa,
  ccirc: bXa,
  Cconint: vXa,
  ccups: kXa,
  ccupssm: _Xa,
  Cdot: $Xa,
  cdot: jXa,
  cedil: xXa,
  Cedilla: AXa,
  cemptyv: EXa,
  cent: SXa,
  centerdot: qXa,
  CenterDot: PXa,
  cfr: TXa,
  Cfr: RXa,
  CHcy: OXa,
  chcy: MXa,
  check: CXa,
  checkmark: LXa,
  Chi: IXa,
  chi: WXa,
  circ: FXa,
  circeq: DXa,
  circlearrowleft: BXa,
  circlearrowright: NXa,
  circledast: UXa,
  circledcirc: HXa,
  circleddash: VXa,
  CircleDot: KXa,
  circledR: GXa,
  circledS: YXa,
  CircleMinus: ZXa,
  CirclePlus: XXa,
  CircleTimes: JXa,
  cir: QXa,
  cirE: aJa,
  cire: eJa,
  cirfnint: tJa,
  cirmid: iJa,
  cirscir: nJa,
  ClockwiseContourIntegral: rJa,
  CloseCurlyDoubleQuote: sJa,
  CloseCurlyQuote: oJa,
  clubs: dJa,
  clubsuit: lJa,
  colon: cJa,
  Colon: uJa,
  Colone: pJa,
  colone: mJa,
  coloneq: gJa,
  comma: zJa,
  commat: fJa,
  comp: yJa,
  compfn: wJa,
  complement: hJa,
  complexes: bJa,
  cong: vJa,
  congdot: kJa,
  Congruent: _Ja,
  conint: $Ja,
  Conint: jJa,
  ContourIntegral: xJa,
  copf: AJa,
  Copf: EJa,
  coprod: SJa,
  Coproduct: qJa,
  copy: PJa,
  COPY: TJa,
  copysr: RJa,
  CounterClockwiseContourIntegral: OJa,
  crarr: MJa,
  cross: CJa,
  Cross: LJa,
  Cscr: IJa,
  cscr: WJa,
  csub: FJa,
  csube: DJa,
  csup: BJa,
  csupe: NJa,
  ctdot: UJa,
  cudarrl: HJa,
  cudarrr: VJa,
  cuepr: KJa,
  cuesc: GJa,
  cularr: YJa,
  cularrp: ZJa,
  cupbrcap: XJa,
  cupcap: JJa,
  CupCap: QJa,
  cup: aQa,
  Cup: eQa,
  cupcup: tQa,
  cupdot: iQa,
  cupor: nQa,
  cups: rQa,
  curarr: sQa,
  curarrm: oQa,
  curlyeqprec: dQa,
  curlyeqsucc: lQa,
  curlyvee: cQa,
  curlywedge: uQa,
  curren: pQa,
  curvearrowleft: mQa,
  curvearrowright: gQa,
  cuvee: zQa,
  cuwed: fQa,
  cwconint: yQa,
  cwint: wQa,
  cylcty: hQa,
  dagger: bQa,
  Dagger: vQa,
  daleth: kQa,
  darr: _Qa,
  Darr: $Qa,
  dArr: jQa,
  dash: xQa,
  Dashv: AQa,
  dashv: EQa,
  dbkarow: SQa,
  dblac: qQa,
  Dcaron: PQa,
  dcaron: TQa,
  Dcy: RQa,
  dcy: OQa,
  ddagger: MQa,
  ddarr: CQa,
  DD: LQa,
  dd: IQa,
  DDotrahd: WQa,
  ddotseq: FQa,
  deg: DQa,
  Del: BQa,
  Delta: NQa,
  delta: UQa,
  demptyv: HQa,
  dfisht: VQa,
  Dfr: KQa,
  dfr: GQa,
  dHar: YQa,
  dharl: ZQa,
  dharr: XQa,
  DiacriticalAcute: JQa,
  DiacriticalDot: QQa,
  DiacriticalDoubleAcute: aae,
  DiacriticalGrave: eae,
  DiacriticalTilde: tae,
  diam: iae,
  diamond: nae,
  Diamond: rae,
  diamondsuit: sae,
  diams: oae,
  die: dae,
  DifferentialD: lae,
  digamma: cae,
  disin: uae,
  div: pae,
  divide: mae,
  divideontimes: gae,
  divonx: zae,
  DJcy: fae,
  djcy: yae,
  dlcorn: wae,
  dlcrop: hae,
  dollar: bae,
  Dopf: vae,
  dopf: kae,
  Dot: _ae,
  dot: $ae,
  DotDot: jae,
  doteq: xae,
  doteqdot: Aae,
  DotEqual: Eae,
  dotminus: Sae,
  dotplus: qae,
  dotsquare: Pae,
  doublebarwedge: Tae,
  DoubleContourIntegral: Rae,
  DoubleDot: Oae,
  DoubleDownArrow: Mae,
  DoubleLeftArrow: Cae,
  DoubleLeftRightArrow: Lae,
  DoubleLeftTee: Iae,
  DoubleLongLeftArrow: Wae,
  DoubleLongLeftRightArrow: Fae,
  DoubleLongRightArrow: Dae,
  DoubleRightArrow: Bae,
  DoubleRightTee: Nae,
  DoubleUpArrow: Uae,
  DoubleUpDownArrow: Hae,
  DoubleVerticalBar: Vae,
  DownArrowBar: Kae,
  downarrow: Gae,
  DownArrow: Yae,
  Downarrow: Zae,
  DownArrowUpArrow: Xae,
  DownBreve: Jae,
  downdownarrows: Qae,
  downharpoonleft: aee,
  downharpoonright: eee,
  DownLeftRightVector: tee,
  DownLeftTeeVector: iee,
  DownLeftVectorBar: nee,
  DownLeftVector: ree,
  DownRightTeeVector: see,
  DownRightVectorBar: oee,
  DownRightVector: dee,
  DownTeeArrow: lee,
  DownTee: cee,
  drbkarow: uee,
  drcorn: pee,
  drcrop: mee,
  Dscr: gee,
  dscr: zee,
  DScy: fee,
  dscy: yee,
  dsol: wee,
  Dstrok: hee,
  dstrok: bee,
  dtdot: vee,
  dtri: kee,
  dtrif: _ee,
  duarr: $ee,
  duhar: jee,
  dwangle: xee,
  DZcy: Aee,
  dzcy: Eee,
  dzigrarr: See,
  Eacute: qee,
  eacute: Pee,
  easter: Tee,
  Ecaron: Ree,
  ecaron: Oee,
  Ecirc: Mee,
  ecirc: Cee,
  ecir: Lee,
  ecolon: Iee,
  Ecy: Wee,
  ecy: Fee,
  eDDot: Dee,
  Edot: Bee,
  edot: Nee,
  eDot: Uee,
  ee: Hee,
  efDot: Vee,
  Efr: Kee,
  efr: Gee,
  eg: Yee,
  Egrave: Zee,
  egrave: Xee,
  egs: Jee,
  egsdot: Qee,
  el: ate,
  Element: ete,
  elinters: tte,
  ell: ite,
  els: nte,
  elsdot: rte,
  Emacr: ste,
  emacr: ote,
  empty: dte,
  emptyset: lte,
  EmptySmallSquare: cte,
  emptyv: ute,
  EmptyVerySmallSquare: pte,
  emsp13: mte,
  emsp14: gte,
  emsp: zte,
  ENG: fte,
  eng: yte,
  ensp: wte,
  Eogon: hte,
  eogon: bte,
  Eopf: vte,
  eopf: kte,
  epar: _te,
  eparsl: $te,
  eplus: jte,
  epsi: xte,
  Epsilon: Ate,
  epsilon: Ete,
  epsiv: Ste,
  eqcirc: qte,
  eqcolon: Pte,
  eqsim: Tte,
  eqslantgtr: Rte,
  eqslantless: Ote,
  Equal: Mte,
  equals: Cte,
  EqualTilde: Lte,
  equest: Ite,
  Equilibrium: Wte,
  equiv: Fte,
  equivDD: Dte,
  eqvparsl: Bte,
  erarr: Nte,
  erDot: Ute,
  escr: Hte,
  Escr: Vte,
  esdot: Kte,
  Esim: Gte,
  esim: Yte,
  Eta: Zte,
  eta: Xte,
  ETH: Jte,
  eth: Qte,
  Euml: aie,
  euml: eie,
  euro: tie,
  excl: iie,
  exist: nie,
  Exists: rie,
  expectation: sie,
  exponentiale: oie,
  ExponentialE: die,
  fallingdotseq: lie,
  Fcy: cie,
  fcy: uie,
  female: pie,
  ffilig: mie,
  fflig: gie,
  ffllig: zie,
  Ffr: fie,
  ffr: yie,
  filig: wie,
  FilledSmallSquare: hie,
  FilledVerySmallSquare: bie,
  fjlig: vie,
  flat: kie,
  fllig: _ie,
  fltns: $ie,
  fnof: jie,
  Fopf: xie,
  fopf: Aie,
  forall: Eie,
  ForAll: Sie,
  fork: qie,
  forkv: Pie,
  Fouriertrf: Tie,
  fpartint: Rie,
  frac12: Oie,
  frac13: Mie,
  frac14: Cie,
  frac15: Lie,
  frac16: Iie,
  frac18: Wie,
  frac23: Fie,
  frac25: Die,
  frac34: Bie,
  frac35: Nie,
  frac38: Uie,
  frac45: Hie,
  frac56: Vie,
  frac58: Kie,
  frac78: Gie,
  frasl: Yie,
  frown: Zie,
  fscr: Xie,
  Fscr: Jie,
  gacute: Qie,
  Gamma: ane,
  gamma: ene,
  Gammad: tne,
  gammad: ine,
  gap: nne,
  Gbreve: rne,
  gbreve: sne,
  Gcedil: one,
  Gcirc: dne,
  gcirc: lne,
  Gcy: cne,
  gcy: une,
  Gdot: pne,
  gdot: mne,
  ge: gne,
  gE: zne,
  gEl: fne,
  gel: yne,
  geq: wne,
  geqq: hne,
  geqslant: bne,
  gescc: vne,
  ges: kne,
  gesdot: _ne,
  gesdoto: $ne,
  gesdotol: jne,
  gesl: xne,
  gesles: Ane,
  Gfr: Ene,
  gfr: Sne,
  gg: qne,
  Gg: Pne,
  ggg: Tne,
  gimel: Rne,
  GJcy: One,
  gjcy: Mne,
  gla: Cne,
  gl: Lne,
  glE: Ine,
  glj: Wne,
  gnap: Fne,
  gnapprox: Dne,
  gne: Bne,
  gnE: Nne,
  gneq: Une,
  gneqq: Hne,
  gnsim: Vne,
  Gopf: Kne,
  gopf: Gne,
  grave: Yne,
  GreaterEqual: Zne,
  GreaterEqualLess: Xne,
  GreaterFullEqual: Jne,
  GreaterGreater: Qne,
  GreaterLess: are,
  GreaterSlantEqual: ere,
  GreaterTilde: tre,
  Gscr: ire,
  gscr: nre,
  gsim: rre,
  gsime: sre,
  gsiml: ore,
  gtcc: dre,
  gtcir: lre,
  gt: cre,
  GT: ure,
  Gt: pre,
  gtdot: mre,
  gtlPar: gre,
  gtquest: zre,
  gtrapprox: fre,
  gtrarr: yre,
  gtrdot: wre,
  gtreqless: hre,
  gtreqqless: bre,
  gtrless: vre,
  gtrsim: kre,
  gvertneqq: _re,
  gvnE: $re,
  Hacek: jre,
  hairsp: xre,
  half: Are,
  hamilt: Ere,
  HARDcy: Sre,
  hardcy: qre,
  harrcir: Pre,
  harr: Tre,
  hArr: Rre,
  harrw: Ore,
  Hat: Mre,
  hbar: Cre,
  Hcirc: Lre,
  hcirc: Ire,
  hearts: Wre,
  heartsuit: Fre,
  hellip: Dre,
  hercon: Bre,
  hfr: Nre,
  Hfr: Ure,
  HilbertSpace: Hre,
  hksearow: Vre,
  hkswarow: Kre,
  hoarr: Gre,
  homtht: Yre,
  hookleftarrow: Zre,
  hookrightarrow: Xre,
  hopf: Jre,
  Hopf: Qre,
  horbar: ase,
  HorizontalLine: ese,
  hscr: tse,
  Hscr: ise,
  hslash: nse,
  Hstrok: rse,
  hstrok: sse,
  HumpDownHump: ose,
  HumpEqual: dse,
  hybull: lse,
  hyphen: cse,
  Iacute: use,
  iacute: pse,
  ic: mse,
  Icirc: gse,
  icirc: zse,
  Icy: fse,
  icy: yse,
  Idot: wse,
  IEcy: hse,
  iecy: bse,
  iexcl: vse,
  iff: kse,
  ifr: _se,
  Ifr: $se,
  Igrave: jse,
  igrave: xse,
  ii: Ase,
  iiiint: Ese,
  iiint: Sse,
  iinfin: qse,
  iiota: Pse,
  IJlig: Tse,
  ijlig: Rse,
  Imacr: Ose,
  imacr: Mse,
  image: Cse,
  ImaginaryI: Lse,
  imagline: Ise,
  imagpart: Wse,
  imath: Fse,
  Im: Dse,
  imof: Bse,
  imped: Nse,
  Implies: Use,
  incare: Hse,
  in: "∈",
  infin: Vse,
  infintie: Kse,
  inodot: Gse,
  intcal: Yse,
  int: Zse,
  Int: Xse,
  integers: Jse,
  Integral: Qse,
  intercal: aoe,
  Intersection: eoe,
  intlarhk: toe,
  intprod: ioe,
  InvisibleComma: noe,
  InvisibleTimes: roe,
  IOcy: soe,
  iocy: ooe,
  Iogon: doe,
  iogon: loe,
  Iopf: coe,
  iopf: uoe,
  Iota: poe,
  iota: moe,
  iprod: goe,
  iquest: zoe,
  iscr: foe,
  Iscr: yoe,
  isin: woe,
  isindot: hoe,
  isinE: boe,
  isins: voe,
  isinsv: koe,
  isinv: _oe,
  it: $oe,
  Itilde: joe,
  itilde: xoe,
  Iukcy: Aoe,
  iukcy: Eoe,
  Iuml: Soe,
  iuml: qoe,
  Jcirc: Poe,
  jcirc: Toe,
  Jcy: Roe,
  jcy: Ooe,
  Jfr: Moe,
  jfr: Coe,
  jmath: Loe,
  Jopf: Ioe,
  jopf: Woe,
  Jscr: Foe,
  jscr: Doe,
  Jsercy: Boe,
  jsercy: Noe,
  Jukcy: Uoe,
  jukcy: Hoe,
  Kappa: Voe,
  kappa: Koe,
  kappav: Goe,
  Kcedil: Yoe,
  kcedil: Zoe,
  Kcy: Xoe,
  kcy: Joe,
  Kfr: Qoe,
  kfr: ade,
  kgreen: ede,
  KHcy: tde,
  khcy: ide,
  KJcy: nde,
  kjcy: rde,
  Kopf: sde,
  kopf: ode,
  Kscr: dde,
  kscr: lde,
  lAarr: cde,
  Lacute: ude,
  lacute: pde,
  laemptyv: mde,
  lagran: gde,
  Lambda: zde,
  lambda: fde,
  lang: yde,
  Lang: wde,
  langd: hde,
  langle: bde,
  lap: vde,
  Laplacetrf: kde,
  laquo: _de,
  larrb: $de,
  larrbfs: jde,
  larr: xde,
  Larr: Ade,
  lArr: Ede,
  larrfs: Sde,
  larrhk: qde,
  larrlp: Pde,
  larrpl: Tde,
  larrsim: Rde,
  larrtl: Ode,
  latail: Mde,
  lAtail: Cde,
  lat: Lde,
  late: Ide,
  lates: Wde,
  lbarr: Fde,
  lBarr: Dde,
  lbbrk: Bde,
  lbrace: Nde,
  lbrack: Ude,
  lbrke: Hde,
  lbrksld: Vde,
  lbrkslu: Kde,
  Lcaron: Gde,
  lcaron: Yde,
  Lcedil: Zde,
  lcedil: Xde,
  lceil: Jde,
  lcub: Qde,
  Lcy: ale,
  lcy: ele,
  ldca: tle,
  ldquo: ile,
  ldquor: nle,
  ldrdhar: rle,
  ldrushar: sle,
  ldsh: ole,
  le: dle,
  lE: lle,
  LeftAngleBracket: cle,
  LeftArrowBar: ule,
  leftarrow: ple,
  LeftArrow: mle,
  Leftarrow: gle,
  LeftArrowRightArrow: zle,
  leftarrowtail: fle,
  LeftCeiling: yle,
  LeftDoubleBracket: wle,
  LeftDownTeeVector: hle,
  LeftDownVectorBar: ble,
  LeftDownVector: vle,
  LeftFloor: kle,
  leftharpoondown: _le,
  leftharpoonup: $le,
  leftleftarrows: jle,
  leftrightarrow: xle,
  LeftRightArrow: Ale,
  Leftrightarrow: Ele,
  leftrightarrows: Sle,
  leftrightharpoons: qle,
  leftrightsquigarrow: Ple,
  LeftRightVector: Tle,
  LeftTeeArrow: Rle,
  LeftTee: Ole,
  LeftTeeVector: Mle,
  leftthreetimes: Cle,
  LeftTriangleBar: Lle,
  LeftTriangle: Ile,
  LeftTriangleEqual: Wle,
  LeftUpDownVector: Fle,
  LeftUpTeeVector: Dle,
  LeftUpVectorBar: Ble,
  LeftUpVector: Nle,
  LeftVectorBar: Ule,
  LeftVector: Hle,
  lEg: Vle,
  leg: Kle,
  leq: Gle,
  leqq: Yle,
  leqslant: Zle,
  lescc: Xle,
  les: Jle,
  lesdot: Qle,
  lesdoto: ace,
  lesdotor: ece,
  lesg: tce,
  lesges: ice,
  lessapprox: nce,
  lessdot: rce,
  lesseqgtr: sce,
  lesseqqgtr: oce,
  LessEqualGreater: dce,
  LessFullEqual: lce,
  LessGreater: cce,
  lessgtr: uce,
  LessLess: pce,
  lesssim: mce,
  LessSlantEqual: gce,
  LessTilde: zce,
  lfisht: fce,
  lfloor: yce,
  Lfr: wce,
  lfr: hce,
  lg: bce,
  lgE: vce,
  lHar: kce,
  lhard: _ce,
  lharu: $ce,
  lharul: jce,
  lhblk: xce,
  LJcy: Ace,
  ljcy: Ece,
  llarr: Sce,
  ll: qce,
  Ll: Pce,
  llcorner: Tce,
  Lleftarrow: Rce,
  llhard: Oce,
  lltri: Mce,
  Lmidot: Cce,
  lmidot: Lce,
  lmoustache: Ice,
  lmoust: Wce,
  lnap: Fce,
  lnapprox: Dce,
  lne: Bce,
  lnE: Nce,
  lneq: Uce,
  lneqq: Hce,
  lnsim: Vce,
  loang: Kce,
  loarr: Gce,
  lobrk: Yce,
  longleftarrow: Zce,
  LongLeftArrow: Xce,
  Longleftarrow: Jce,
  longleftrightarrow: Qce,
  LongLeftRightArrow: aue,
  Longleftrightarrow: eue,
  longmapsto: tue,
  longrightarrow: iue,
  LongRightArrow: nue,
  Longrightarrow: rue,
  looparrowleft: sue,
  looparrowright: oue,
  lopar: due,
  Lopf: lue,
  lopf: cue,
  loplus: uue,
  lotimes: pue,
  lowast: mue,
  lowbar: gue,
  LowerLeftArrow: zue,
  LowerRightArrow: fue,
  loz: yue,
  lozenge: wue,
  lozf: hue,
  lpar: bue,
  lparlt: vue,
  lrarr: kue,
  lrcorner: _ue,
  lrhar: $ue,
  lrhard: jue,
  lrm: xue,
  lrtri: Aue,
  lsaquo: Eue,
  lscr: Sue,
  Lscr: que,
  lsh: Pue,
  Lsh: Tue,
  lsim: Rue,
  lsime: Oue,
  lsimg: Mue,
  lsqb: Cue,
  lsquo: Lue,
  lsquor: Iue,
  Lstrok: Wue,
  lstrok: Fue,
  ltcc: Due,
  ltcir: Bue,
  lt: Nue,
  LT: Uue,
  Lt: Hue,
  ltdot: Vue,
  lthree: Kue,
  ltimes: Gue,
  ltlarr: Yue,
  ltquest: Zue,
  ltri: Xue,
  ltrie: Jue,
  ltrif: Que,
  ltrPar: ape,
  lurdshar: epe,
  luruhar: tpe,
  lvertneqq: ipe,
  lvnE: npe,
  macr: rpe,
  male: spe,
  malt: ope,
  maltese: dpe,
  Map: "⤅",
  map: lpe,
  mapsto: cpe,
  mapstodown: upe,
  mapstoleft: ppe,
  mapstoup: mpe,
  marker: gpe,
  mcomma: zpe,
  Mcy: fpe,
  mcy: ype,
  mdash: wpe,
  mDDot: hpe,
  measuredangle: bpe,
  MediumSpace: vpe,
  Mellintrf: kpe,
  Mfr: _pe,
  mfr: $pe,
  mho: jpe,
  micro: xpe,
  midast: Ape,
  midcir: Epe,
  mid: Spe,
  middot: qpe,
  minusb: Ppe,
  minus: Tpe,
  minusd: Rpe,
  minusdu: Ope,
  MinusPlus: Mpe,
  mlcp: Cpe,
  mldr: Lpe,
  mnplus: Ipe,
  models: Wpe,
  Mopf: Fpe,
  mopf: Dpe,
  mp: Bpe,
  mscr: Npe,
  Mscr: Upe,
  mstpos: Hpe,
  Mu: Vpe,
  mu: Kpe,
  multimap: Gpe,
  mumap: Ype,
  nabla: Zpe,
  Nacute: Xpe,
  nacute: Jpe,
  nang: Qpe,
  nap: ame,
  napE: eme,
  napid: tme,
  napos: ime,
  napprox: nme,
  natural: rme,
  naturals: sme,
  natur: ome,
  nbsp: dme,
  nbump: lme,
  nbumpe: cme,
  ncap: ume,
  Ncaron: pme,
  ncaron: mme,
  Ncedil: gme,
  ncedil: zme,
  ncong: fme,
  ncongdot: yme,
  ncup: wme,
  Ncy: hme,
  ncy: bme,
  ndash: vme,
  nearhk: kme,
  nearr: _me,
  neArr: $me,
  nearrow: jme,
  ne: xme,
  nedot: Ame,
  NegativeMediumSpace: Eme,
  NegativeThickSpace: Sme,
  NegativeThinSpace: qme,
  NegativeVeryThinSpace: Pme,
  nequiv: Tme,
  nesear: Rme,
  nesim: Ome,
  NestedGreaterGreater: Mme,
  NestedLessLess: Cme,
  NewLine: Lme,
  nexist: Ime,
  nexists: Wme,
  Nfr: Fme,
  nfr: Dme,
  ngE: Bme,
  nge: Nme,
  ngeq: Ume,
  ngeqq: Hme,
  ngeqslant: Vme,
  nges: Kme,
  nGg: Gme,
  ngsim: Yme,
  nGt: Zme,
  ngt: Xme,
  ngtr: Jme,
  nGtv: Qme,
  nharr: age,
  nhArr: ege,
  nhpar: tge,
  ni: ige,
  nis: nge,
  nisd: rge,
  niv: sge,
  NJcy: oge,
  njcy: dge,
  nlarr: lge,
  nlArr: cge,
  nldr: uge,
  nlE: pge,
  nle: mge,
  nleftarrow: gge,
  nLeftarrow: zge,
  nleftrightarrow: fge,
  nLeftrightarrow: yge,
  nleq: wge,
  nleqq: hge,
  nleqslant: bge,
  nles: vge,
  nless: kge,
  nLl: _ge,
  nlsim: $ge,
  nLt: jge,
  nlt: xge,
  nltri: Age,
  nltrie: Ege,
  nLtv: Sge,
  nmid: qge,
  NoBreak: Pge,
  NonBreakingSpace: Tge,
  nopf: Rge,
  Nopf: Oge,
  Not: Mge,
  not: Cge,
  NotCongruent: Lge,
  NotCupCap: Ige,
  NotDoubleVerticalBar: Wge,
  NotElement: Fge,
  NotEqual: Dge,
  NotEqualTilde: Bge,
  NotExists: Nge,
  NotGreater: Uge,
  NotGreaterEqual: Hge,
  NotGreaterFullEqual: Vge,
  NotGreaterGreater: Kge,
  NotGreaterLess: Gge,
  NotGreaterSlantEqual: Yge,
  NotGreaterTilde: Zge,
  NotHumpDownHump: Xge,
  NotHumpEqual: Jge,
  notin: Qge,
  notindot: aze,
  notinE: eze,
  notinva: tze,
  notinvb: ize,
  notinvc: nze,
  NotLeftTriangleBar: rze,
  NotLeftTriangle: sze,
  NotLeftTriangleEqual: oze,
  NotLess: dze,
  NotLessEqual: lze,
  NotLessGreater: cze,
  NotLessLess: uze,
  NotLessSlantEqual: pze,
  NotLessTilde: mze,
  NotNestedGreaterGreater: gze,
  NotNestedLessLess: zze,
  notni: fze,
  notniva: yze,
  notnivb: wze,
  notnivc: hze,
  NotPrecedes: bze,
  NotPrecedesEqual: vze,
  NotPrecedesSlantEqual: kze,
  NotReverseElement: _ze,
  NotRightTriangleBar: $ze,
  NotRightTriangle: jze,
  NotRightTriangleEqual: xze,
  NotSquareSubset: Aze,
  NotSquareSubsetEqual: Eze,
  NotSquareSuperset: Sze,
  NotSquareSupersetEqual: qze,
  NotSubset: Pze,
  NotSubsetEqual: Tze,
  NotSucceeds: Rze,
  NotSucceedsEqual: Oze,
  NotSucceedsSlantEqual: Mze,
  NotSucceedsTilde: Cze,
  NotSuperset: Lze,
  NotSupersetEqual: Ize,
  NotTilde: Wze,
  NotTildeEqual: Fze,
  NotTildeFullEqual: Dze,
  NotTildeTilde: Bze,
  NotVerticalBar: Nze,
  nparallel: Uze,
  npar: Hze,
  nparsl: Vze,
  npart: Kze,
  npolint: Gze,
  npr: Yze,
  nprcue: Zze,
  nprec: Xze,
  npreceq: Jze,
  npre: Qze,
  nrarrc: afe,
  nrarr: efe,
  nrArr: tfe,
  nrarrw: ife,
  nrightarrow: nfe,
  nRightarrow: rfe,
  nrtri: sfe,
  nrtrie: ofe,
  nsc: dfe,
  nsccue: lfe,
  nsce: cfe,
  Nscr: ufe,
  nscr: pfe,
  nshortmid: mfe,
  nshortparallel: gfe,
  nsim: zfe,
  nsime: ffe,
  nsimeq: yfe,
  nsmid: wfe,
  nspar: hfe,
  nsqsube: bfe,
  nsqsupe: vfe,
  nsub: kfe,
  nsubE: _fe,
  nsube: $fe,
  nsubset: jfe,
  nsubseteq: xfe,
  nsubseteqq: Afe,
  nsucc: Efe,
  nsucceq: Sfe,
  nsup: qfe,
  nsupE: Pfe,
  nsupe: Tfe,
  nsupset: Rfe,
  nsupseteq: Ofe,
  nsupseteqq: Mfe,
  ntgl: Cfe,
  Ntilde: Lfe,
  ntilde: Ife,
  ntlg: Wfe,
  ntriangleleft: Ffe,
  ntrianglelefteq: Dfe,
  ntriangleright: Bfe,
  ntrianglerighteq: Nfe,
  Nu: Ufe,
  nu: Hfe,
  num: Vfe,
  numero: Kfe,
  numsp: Gfe,
  nvap: Yfe,
  nvdash: Zfe,
  nvDash: Xfe,
  nVdash: Jfe,
  nVDash: Qfe,
  nvge: aye,
  nvgt: eye,
  nvHarr: tye,
  nvinfin: iye,
  nvlArr: nye,
  nvle: rye,
  nvlt: sye,
  nvltrie: oye,
  nvrArr: dye,
  nvrtrie: lye,
  nvsim: cye,
  nwarhk: uye,
  nwarr: pye,
  nwArr: mye,
  nwarrow: gye,
  nwnear: zye,
  Oacute: fye,
  oacute: yye,
  oast: wye,
  Ocirc: hye,
  ocirc: bye,
  ocir: vye,
  Ocy: kye,
  ocy: _ye,
  odash: $ye,
  Odblac: jye,
  odblac: xye,
  odiv: Aye,
  odot: Eye,
  odsold: Sye,
  OElig: qye,
  oelig: Pye,
  ofcir: Tye,
  Ofr: Rye,
  ofr: Oye,
  ogon: Mye,
  Ograve: Cye,
  ograve: Lye,
  ogt: Iye,
  ohbar: Wye,
  ohm: Fye,
  oint: Dye,
  olarr: Bye,
  olcir: Nye,
  olcross: Uye,
  oline: Hye,
  olt: Vye,
  Omacr: Kye,
  omacr: Gye,
  Omega: Yye,
  omega: Zye,
  Omicron: Xye,
  omicron: Jye,
  omid: Qye,
  ominus: awe,
  Oopf: ewe,
  oopf: twe,
  opar: iwe,
  OpenCurlyDoubleQuote: nwe,
  OpenCurlyQuote: rwe,
  operp: swe,
  oplus: owe,
  orarr: dwe,
  Or: lwe,
  or: cwe,
  ord: uwe,
  order: pwe,
  orderof: mwe,
  ordf: gwe,
  ordm: zwe,
  origof: fwe,
  oror: ywe,
  orslope: wwe,
  orv: hwe,
  oS: bwe,
  Oscr: vwe,
  oscr: kwe,
  Oslash: _we,
  oslash: $we,
  osol: jwe,
  Otilde: xwe,
  otilde: Awe,
  otimesas: Ewe,
  Otimes: Swe,
  otimes: qwe,
  Ouml: Pwe,
  ouml: Twe,
  ovbar: Rwe,
  OverBar: Owe,
  OverBrace: Mwe,
  OverBracket: Cwe,
  OverParenthesis: Lwe,
  para: Iwe,
  parallel: Wwe,
  par: Fwe,
  parsim: Dwe,
  parsl: Bwe,
  part: Nwe,
  PartialD: Uwe,
  Pcy: Hwe,
  pcy: Vwe,
  percnt: Kwe,
  period: Gwe,
  permil: Ywe,
  perp: Zwe,
  pertenk: Xwe,
  Pfr: Jwe,
  pfr: Qwe,
  Phi: ahe,
  phi: ehe,
  phiv: the,
  phmmat: ihe,
  phone: nhe,
  Pi: rhe,
  pi: she,
  pitchfork: ohe,
  piv: dhe,
  planck: lhe,
  planckh: che,
  plankv: uhe,
  plusacir: phe,
  plusb: mhe,
  pluscir: ghe,
  plus: zhe,
  plusdo: fhe,
  plusdu: yhe,
  pluse: whe,
  PlusMinus: hhe,
  plusmn: bhe,
  plussim: vhe,
  plustwo: khe,
  pm: _he,
  Poincareplane: $he,
  pointint: jhe,
  popf: xhe,
  Popf: Ahe,
  pound: Ehe,
  prap: She,
  Pr: qhe,
  pr: Phe,
  prcue: The,
  precapprox: Rhe,
  prec: Ohe,
  preccurlyeq: Mhe,
  Precedes: Che,
  PrecedesEqual: Lhe,
  PrecedesSlantEqual: Ihe,
  PrecedesTilde: Whe,
  preceq: Fhe,
  precnapprox: Dhe,
  precneqq: Bhe,
  precnsim: Nhe,
  pre: Uhe,
  prE: Hhe,
  precsim: Vhe,
  prime: Khe,
  Prime: Ghe,
  primes: Yhe,
  prnap: Zhe,
  prnE: Xhe,
  prnsim: Jhe,
  prod: Qhe,
  Product: abe,
  profalar: ebe,
  profline: tbe,
  profsurf: ibe,
  prop: nbe,
  Proportional: rbe,
  Proportion: sbe,
  propto: obe,
  prsim: dbe,
  prurel: lbe,
  Pscr: cbe,
  pscr: ube,
  Psi: pbe,
  psi: mbe,
  puncsp: gbe,
  Qfr: zbe,
  qfr: fbe,
  qint: ybe,
  qopf: wbe,
  Qopf: hbe,
  qprime: bbe,
  Qscr: vbe,
  qscr: kbe,
  quaternions: _be,
  quatint: $be,
  quest: jbe,
  questeq: xbe,
  quot: Abe,
  QUOT: Ebe,
  rAarr: Sbe,
  race: qbe,
  Racute: Pbe,
  racute: Tbe,
  radic: Rbe,
  raemptyv: Obe,
  rang: Mbe,
  Rang: Cbe,
  rangd: Lbe,
  range: Ibe,
  rangle: Wbe,
  raquo: Fbe,
  rarrap: Dbe,
  rarrb: Bbe,
  rarrbfs: Nbe,
  rarrc: Ube,
  rarr: Hbe,
  Rarr: Vbe,
  rArr: Kbe,
  rarrfs: Gbe,
  rarrhk: Ybe,
  rarrlp: Zbe,
  rarrpl: Xbe,
  rarrsim: Jbe,
  Rarrtl: Qbe,
  rarrtl: ave,
  rarrw: eve,
  ratail: tve,
  rAtail: ive,
  ratio: nve,
  rationals: rve,
  rbarr: sve,
  rBarr: ove,
  RBarr: dve,
  rbbrk: lve,
  rbrace: cve,
  rbrack: uve,
  rbrke: pve,
  rbrksld: mve,
  rbrkslu: gve,
  Rcaron: zve,
  rcaron: fve,
  Rcedil: yve,
  rcedil: wve,
  rceil: hve,
  rcub: bve,
  Rcy: vve,
  rcy: kve,
  rdca: _ve,
  rdldhar: $ve,
  rdquo: jve,
  rdquor: xve,
  rdsh: Ave,
  real: Eve,
  realine: Sve,
  realpart: qve,
  reals: Pve,
  Re: Tve,
  rect: Rve,
  reg: Ove,
  REG: Mve,
  ReverseElement: Cve,
  ReverseEquilibrium: Lve,
  ReverseUpEquilibrium: Ive,
  rfisht: Wve,
  rfloor: Fve,
  rfr: Dve,
  Rfr: Bve,
  rHar: Nve,
  rhard: Uve,
  rharu: Hve,
  rharul: Vve,
  Rho: Kve,
  rho: Gve,
  rhov: Yve,
  RightAngleBracket: Zve,
  RightArrowBar: Xve,
  rightarrow: Jve,
  RightArrow: Qve,
  Rightarrow: ake,
  RightArrowLeftArrow: eke,
  rightarrowtail: tke,
  RightCeiling: ike,
  RightDoubleBracket: nke,
  RightDownTeeVector: rke,
  RightDownVectorBar: ske,
  RightDownVector: oke,
  RightFloor: dke,
  rightharpoondown: lke,
  rightharpoonup: cke,
  rightleftarrows: uke,
  rightleftharpoons: pke,
  rightrightarrows: mke,
  rightsquigarrow: gke,
  RightTeeArrow: zke,
  RightTee: fke,
  RightTeeVector: yke,
  rightthreetimes: wke,
  RightTriangleBar: hke,
  RightTriangle: bke,
  RightTriangleEqual: vke,
  RightUpDownVector: kke,
  RightUpTeeVector: _ke,
  RightUpVectorBar: $ke,
  RightUpVector: jke,
  RightVectorBar: xke,
  RightVector: Ake,
  ring: Eke,
  risingdotseq: Ske,
  rlarr: qke,
  rlhar: Pke,
  rlm: Tke,
  rmoustache: Rke,
  rmoust: Oke,
  rnmid: Mke,
  roang: Cke,
  roarr: Lke,
  robrk: Ike,
  ropar: Wke,
  ropf: Fke,
  Ropf: Dke,
  roplus: Bke,
  rotimes: Nke,
  RoundImplies: Uke,
  rpar: Hke,
  rpargt: Vke,
  rppolint: Kke,
  rrarr: Gke,
  Rrightarrow: Yke,
  rsaquo: Zke,
  rscr: Xke,
  Rscr: Jke,
  rsh: Qke,
  Rsh: a0e,
  rsqb: e0e,
  rsquo: t0e,
  rsquor: i0e,
  rthree: n0e,
  rtimes: r0e,
  rtri: s0e,
  rtrie: o0e,
  rtrif: d0e,
  rtriltri: l0e,
  RuleDelayed: c0e,
  ruluhar: u0e,
  rx: p0e,
  Sacute: m0e,
  sacute: g0e,
  sbquo: z0e,
  scap: f0e,
  Scaron: y0e,
  scaron: w0e,
  Sc: h0e,
  sc: b0e,
  sccue: v0e,
  sce: k0e,
  scE: _0e,
  Scedil: $0e,
  scedil: j0e,
  Scirc: x0e,
  scirc: A0e,
  scnap: E0e,
  scnE: S0e,
  scnsim: q0e,
  scpolint: P0e,
  scsim: T0e,
  Scy: R0e,
  scy: O0e,
  sdotb: M0e,
  sdot: C0e,
  sdote: L0e,
  searhk: I0e,
  searr: W0e,
  seArr: F0e,
  searrow: D0e,
  sect: B0e,
  semi: N0e,
  seswar: U0e,
  setminus: H0e,
  setmn: V0e,
  sext: K0e,
  Sfr: G0e,
  sfr: Y0e,
  sfrown: Z0e,
  sharp: X0e,
  SHCHcy: J0e,
  shchcy: Q0e,
  SHcy: a_e,
  shcy: e_e,
  ShortDownArrow: t_e,
  ShortLeftArrow: i_e,
  shortmid: n_e,
  shortparallel: r_e,
  ShortRightArrow: s_e,
  ShortUpArrow: o_e,
  shy: d_e,
  Sigma: l_e,
  sigma: c_e,
  sigmaf: u_e,
  sigmav: p_e,
  sim: m_e,
  simdot: g_e,
  sime: z_e,
  simeq: f_e,
  simg: y_e,
  simgE: w_e,
  siml: h_e,
  simlE: b_e,
  simne: v_e,
  simplus: k_e,
  simrarr: __e,
  slarr: $_e,
  SmallCircle: j_e,
  smallsetminus: x_e,
  smashp: A_e,
  smeparsl: E_e,
  smid: S_e,
  smile: q_e,
  smt: P_e,
  smte: T_e,
  smtes: R_e,
  SOFTcy: O_e,
  softcy: M_e,
  solbar: C_e,
  solb: L_e,
  sol: I_e,
  Sopf: W_e,
  sopf: F_e,
  spades: D_e,
  spadesuit: B_e,
  spar: N_e,
  sqcap: U_e,
  sqcaps: H_e,
  sqcup: V_e,
  sqcups: K_e,
  Sqrt: G_e,
  sqsub: Y_e,
  sqsube: Z_e,
  sqsubset: X_e,
  sqsubseteq: J_e,
  sqsup: Q_e,
  sqsupe: a1e,
  sqsupset: e1e,
  sqsupseteq: t1e,
  square: i1e,
  Square: n1e,
  SquareIntersection: r1e,
  SquareSubset: s1e,
  SquareSubsetEqual: o1e,
  SquareSuperset: d1e,
  SquareSupersetEqual: l1e,
  SquareUnion: c1e,
  squarf: u1e,
  squ: p1e,
  squf: m1e,
  srarr: g1e,
  Sscr: z1e,
  sscr: f1e,
  ssetmn: y1e,
  ssmile: w1e,
  sstarf: h1e,
  Star: b1e,
  star: v1e,
  starf: k1e,
  straightepsilon: _1e,
  straightphi: $1e,
  strns: j1e,
  sub: x1e,
  Sub: A1e,
  subdot: E1e,
  subE: S1e,
  sube: q1e,
  subedot: P1e,
  submult: T1e,
  subnE: R1e,
  subne: O1e,
  subplus: M1e,
  subrarr: C1e,
  subset: L1e,
  Subset: I1e,
  subseteq: W1e,
  subseteqq: F1e,
  SubsetEqual: D1e,
  subsetneq: B1e,
  subsetneqq: N1e,
  subsim: U1e,
  subsub: H1e,
  subsup: V1e,
  succapprox: K1e,
  succ: G1e,
  succcurlyeq: Y1e,
  Succeeds: Z1e,
  SucceedsEqual: X1e,
  SucceedsSlantEqual: J1e,
  SucceedsTilde: Q1e,
  succeq: a$e,
  succnapprox: e$e,
  succneqq: t$e,
  succnsim: i$e,
  succsim: n$e,
  SuchThat: r$e,
  sum: s$e,
  Sum: o$e,
  sung: d$e,
  sup1: l$e,
  sup2: c$e,
  sup3: u$e,
  sup: p$e,
  Sup: m$e,
  supdot: g$e,
  supdsub: z$e,
  supE: f$e,
  supe: y$e,
  supedot: w$e,
  Superset: h$e,
  SupersetEqual: b$e,
  suphsol: v$e,
  suphsub: k$e,
  suplarr: _$e,
  supmult: $$e,
  supnE: j$e,
  supne: x$e,
  supplus: A$e,
  supset: E$e,
  Supset: S$e,
  supseteq: q$e,
  supseteqq: P$e,
  supsetneq: T$e,
  supsetneqq: R$e,
  supsim: O$e,
  supsub: M$e,
  supsup: C$e,
  swarhk: L$e,
  swarr: I$e,
  swArr: W$e,
  swarrow: F$e,
  swnwar: D$e,
  szlig: B$e,
  Tab: N$e,
  target: U$e,
  Tau: H$e,
  tau: V$e,
  tbrk: K$e,
  Tcaron: G$e,
  tcaron: Y$e,
  Tcedil: Z$e,
  tcedil: X$e,
  Tcy: J$e,
  tcy: Q$e,
  tdot: aje,
  telrec: eje,
  Tfr: tje,
  tfr: ije,
  there4: nje,
  therefore: rje,
  Therefore: sje,
  Theta: oje,
  theta: dje,
  thetasym: lje,
  thetav: cje,
  thickapprox: uje,
  thicksim: pje,
  ThickSpace: mje,
  ThinSpace: gje,
  thinsp: zje,
  thkap: fje,
  thksim: yje,
  THORN: wje,
  thorn: hje,
  tilde: bje,
  Tilde: vje,
  TildeEqual: kje,
  TildeFullEqual: _je,
  TildeTilde: $je,
  timesbar: jje,
  timesb: xje,
  times: Aje,
  timesd: Eje,
  tint: Sje,
  toea: qje,
  topbot: Pje,
  topcir: Tje,
  top: Rje,
  Topf: Oje,
  topf: Mje,
  topfork: Cje,
  tosa: Lje,
  tprime: Ije,
  trade: Wje,
  TRADE: Fje,
  triangle: Dje,
  triangledown: Bje,
  triangleleft: Nje,
  trianglelefteq: Uje,
  triangleq: Hje,
  triangleright: Vje,
  trianglerighteq: Kje,
  tridot: Gje,
  trie: Yje,
  triminus: Zje,
  TripleDot: Xje,
  triplus: Jje,
  trisb: Qje,
  tritime: axe,
  trpezium: exe,
  Tscr: txe,
  tscr: ixe,
  TScy: nxe,
  tscy: rxe,
  TSHcy: sxe,
  tshcy: oxe,
  Tstrok: dxe,
  tstrok: lxe,
  twixt: cxe,
  twoheadleftarrow: uxe,
  twoheadrightarrow: pxe,
  Uacute: mxe,
  uacute: gxe,
  uarr: zxe,
  Uarr: fxe,
  uArr: yxe,
  Uarrocir: wxe,
  Ubrcy: hxe,
  ubrcy: bxe,
  Ubreve: vxe,
  ubreve: kxe,
  Ucirc: _xe,
  ucirc: $xe,
  Ucy: jxe,
  ucy: xxe,
  udarr: Axe,
  Udblac: Exe,
  udblac: Sxe,
  udhar: qxe,
  ufisht: Pxe,
  Ufr: Txe,
  ufr: Rxe,
  Ugrave: Oxe,
  ugrave: Mxe,
  uHar: Cxe,
  uharl: Lxe,
  uharr: Ixe,
  uhblk: Wxe,
  ulcorn: Fxe,
  ulcorner: Dxe,
  ulcrop: Bxe,
  ultri: Nxe,
  Umacr: Uxe,
  umacr: Hxe,
  uml: Vxe,
  UnderBar: Kxe,
  UnderBrace: Gxe,
  UnderBracket: Yxe,
  UnderParenthesis: Zxe,
  Union: Xxe,
  UnionPlus: Jxe,
  Uogon: Qxe,
  uogon: a2e,
  Uopf: e2e,
  uopf: t2e,
  UpArrowBar: i2e,
  uparrow: n2e,
  UpArrow: r2e,
  Uparrow: s2e,
  UpArrowDownArrow: o2e,
  updownarrow: d2e,
  UpDownArrow: l2e,
  Updownarrow: c2e,
  UpEquilibrium: u2e,
  upharpoonleft: p2e,
  upharpoonright: m2e,
  uplus: g2e,
  UpperLeftArrow: z2e,
  UpperRightArrow: f2e,
  upsi: y2e,
  Upsi: w2e,
  upsih: h2e,
  Upsilon: b2e,
  upsilon: v2e,
  UpTeeArrow: k2e,
  UpTee: _2e,
  upuparrows: $2e,
  urcorn: j2e,
  urcorner: x2e,
  urcrop: A2e,
  Uring: E2e,
  uring: S2e,
  urtri: q2e,
  Uscr: P2e,
  uscr: T2e,
  utdot: R2e,
  Utilde: O2e,
  utilde: M2e,
  utri: C2e,
  utrif: L2e,
  uuarr: I2e,
  Uuml: W2e,
  uuml: F2e,
  uwangle: D2e,
  vangrt: B2e,
  varepsilon: N2e,
  varkappa: U2e,
  varnothing: H2e,
  varphi: V2e,
  varpi: K2e,
  varpropto: G2e,
  varr: Y2e,
  vArr: Z2e,
  varrho: X2e,
  varsigma: J2e,
  varsubsetneq: Q2e,
  varsubsetneqq: aAe,
  varsupsetneq: eAe,
  varsupsetneqq: tAe,
  vartheta: iAe,
  vartriangleleft: nAe,
  vartriangleright: rAe,
  vBar: sAe,
  Vbar: oAe,
  vBarv: dAe,
  Vcy: lAe,
  vcy: cAe,
  vdash: uAe,
  vDash: pAe,
  Vdash: mAe,
  VDash: gAe,
  Vdashl: zAe,
  veebar: fAe,
  vee: yAe,
  Vee: wAe,
  veeeq: hAe,
  vellip: bAe,
  verbar: vAe,
  Verbar: kAe,
  vert: _Ae,
  Vert: $Ae,
  VerticalBar: jAe,
  VerticalLine: xAe,
  VerticalSeparator: AAe,
  VerticalTilde: EAe,
  VeryThinSpace: SAe,
  Vfr: qAe,
  vfr: PAe,
  vltri: TAe,
  vnsub: RAe,
  vnsup: OAe,
  Vopf: MAe,
  vopf: CAe,
  vprop: LAe,
  vrtri: IAe,
  Vscr: WAe,
  vscr: FAe,
  vsubnE: DAe,
  vsubne: BAe,
  vsupnE: NAe,
  vsupne: UAe,
  Vvdash: HAe,
  vzigzag: VAe,
  Wcirc: KAe,
  wcirc: GAe,
  wedbar: YAe,
  wedge: ZAe,
  Wedge: XAe,
  wedgeq: JAe,
  weierp: QAe,
  Wfr: aEe,
  wfr: eEe,
  Wopf: tEe,
  wopf: iEe,
  wp: nEe,
  wr: rEe,
  wreath: sEe,
  Wscr: oEe,
  wscr: dEe,
  xcap: lEe,
  xcirc: cEe,
  xcup: uEe,
  xdtri: pEe,
  Xfr: mEe,
  xfr: gEe,
  xharr: zEe,
  xhArr: fEe,
  Xi: yEe,
  xi: wEe,
  xlarr: hEe,
  xlArr: bEe,
  xmap: vEe,
  xnis: kEe,
  xodot: _Ee,
  Xopf: $Ee,
  xopf: jEe,
  xoplus: xEe,
  xotime: AEe,
  xrarr: EEe,
  xrArr: SEe,
  Xscr: qEe,
  xscr: PEe,
  xsqcup: TEe,
  xuplus: REe,
  xutri: OEe,
  xvee: MEe,
  xwedge: CEe,
  Yacute: LEe,
  yacute: IEe,
  YAcy: WEe,
  yacy: FEe,
  Ycirc: DEe,
  ycirc: BEe,
  Ycy: NEe,
  ycy: UEe,
  yen: HEe,
  Yfr: VEe,
  yfr: KEe,
  YIcy: GEe,
  yicy: YEe,
  Yopf: ZEe,
  yopf: XEe,
  Yscr: JEe,
  yscr: QEe,
  YUcy: aSe,
  yucy: eSe,
  yuml: tSe,
  Yuml: iSe,
  Zacute: nSe,
  zacute: rSe,
  Zcaron: sSe,
  zcaron: oSe,
  Zcy: dSe,
  zcy: lSe,
  Zdot: cSe,
  zdot: uSe,
  zeetrf: pSe,
  ZeroWidthSpace: mSe,
  Zeta: gSe,
  zeta: zSe,
  zfr: fSe,
  Zfr: ySe,
  ZHcy: wSe,
  zhcy: hSe,
  zigrarr: bSe,
  zopf: vSe,
  Zopf: kSe,
  Zscr: _Se,
  zscr: $Se,
  zwj: jSe,
  zwnj: xSe
}, ASe = "Á", ESe = "á", SSe = "Â", qSe = "â", PSe = "´", TSe = "Æ", RSe = "æ", OSe = "À", MSe = "à", CSe = "&", LSe = "&", ISe = "Å", WSe = "å", FSe = "Ã", DSe = "ã", BSe = "Ä", NSe = "ä", USe = "¦", HSe = "Ç", VSe = "ç", KSe = "¸", GSe = "¢", YSe = "©", ZSe = "©", XSe = "¤", JSe = "°", QSe = "÷", aqe = "É", eqe = "é", tqe = "Ê", iqe = "ê", nqe = "È", rqe = "è", sqe = "Ð", oqe = "ð", dqe = "Ë", lqe = "ë", cqe = "½", uqe = "¼", pqe = "¾", mqe = ">", gqe = ">", zqe = "Í", fqe = "í", yqe = "Î", wqe = "î", hqe = "¡", bqe = "Ì", vqe = "ì", kqe = "¿", _qe = "Ï", $qe = "ï", jqe = "«", xqe = "<", Aqe = "<", Eqe = "¯", Sqe = "µ", qqe = "·", Pqe = " ", Tqe = "¬", Rqe = "Ñ", Oqe = "ñ", Mqe = "Ó", Cqe = "ó", Lqe = "Ô", Iqe = "ô", Wqe = "Ò", Fqe = "ò", Dqe = "ª", Bqe = "º", Nqe = "Ø", Uqe = "ø", Hqe = "Õ", Vqe = "õ", Kqe = "Ö", Gqe = "ö", Yqe = "¶", Zqe = "±", Xqe = "£", Jqe = '"', Qqe = '"', aPe = "»", ePe = "®", tPe = "®", iPe = "§", nPe = "­", rPe = "¹", sPe = "²", oPe = "³", dPe = "ß", lPe = "Þ", cPe = "þ", uPe = "×", pPe = "Ú", mPe = "ú", gPe = "Û", zPe = "û", fPe = "Ù", yPe = "ù", wPe = "¨", hPe = "Ü", bPe = "ü", vPe = "Ý", kPe = "ý", _Pe = "¥", $Pe = "ÿ", jPe = {
  Aacute: ASe,
  aacute: ESe,
  Acirc: SSe,
  acirc: qSe,
  acute: PSe,
  AElig: TSe,
  aelig: RSe,
  Agrave: OSe,
  agrave: MSe,
  amp: CSe,
  AMP: LSe,
  Aring: ISe,
  aring: WSe,
  Atilde: FSe,
  atilde: DSe,
  Auml: BSe,
  auml: NSe,
  brvbar: USe,
  Ccedil: HSe,
  ccedil: VSe,
  cedil: KSe,
  cent: GSe,
  copy: YSe,
  COPY: ZSe,
  curren: XSe,
  deg: JSe,
  divide: QSe,
  Eacute: aqe,
  eacute: eqe,
  Ecirc: tqe,
  ecirc: iqe,
  Egrave: nqe,
  egrave: rqe,
  ETH: sqe,
  eth: oqe,
  Euml: dqe,
  euml: lqe,
  frac12: cqe,
  frac14: uqe,
  frac34: pqe,
  gt: mqe,
  GT: gqe,
  Iacute: zqe,
  iacute: fqe,
  Icirc: yqe,
  icirc: wqe,
  iexcl: hqe,
  Igrave: bqe,
  igrave: vqe,
  iquest: kqe,
  Iuml: _qe,
  iuml: $qe,
  laquo: jqe,
  lt: xqe,
  LT: Aqe,
  macr: Eqe,
  micro: Sqe,
  middot: qqe,
  nbsp: Pqe,
  not: Tqe,
  Ntilde: Rqe,
  ntilde: Oqe,
  Oacute: Mqe,
  oacute: Cqe,
  Ocirc: Lqe,
  ocirc: Iqe,
  Ograve: Wqe,
  ograve: Fqe,
  ordf: Dqe,
  ordm: Bqe,
  Oslash: Nqe,
  oslash: Uqe,
  Otilde: Hqe,
  otilde: Vqe,
  Ouml: Kqe,
  ouml: Gqe,
  para: Yqe,
  plusmn: Zqe,
  pound: Xqe,
  quot: Jqe,
  QUOT: Qqe,
  raquo: aPe,
  reg: ePe,
  REG: tPe,
  sect: iPe,
  shy: nPe,
  sup1: rPe,
  sup2: sPe,
  sup3: oPe,
  szlig: dPe,
  THORN: lPe,
  thorn: cPe,
  times: uPe,
  Uacute: pPe,
  uacute: mPe,
  Ucirc: gPe,
  ucirc: zPe,
  Ugrave: fPe,
  ugrave: yPe,
  uml: wPe,
  Uuml: hPe,
  uuml: bPe,
  Yacute: vPe,
  yacute: kPe,
  yen: _Pe,
  yuml: $Pe
}, xPe = "&", APe = "'", EPe = ">", SPe = "<", qPe = '"', iD = {
  amp: xPe,
  apos: APe,
  gt: EPe,
  lt: SPe,
  quot: qPe
};
var tl = {};
const PPe = {
  0: 65533,
  128: 8364,
  130: 8218,
  131: 402,
  132: 8222,
  133: 8230,
  134: 8224,
  135: 8225,
  136: 710,
  137: 8240,
  138: 352,
  139: 8249,
  140: 338,
  142: 381,
  145: 8216,
  146: 8217,
  147: 8220,
  148: 8221,
  149: 8226,
  150: 8211,
  151: 8212,
  152: 732,
  153: 8482,
  154: 353,
  155: 8250,
  156: 339,
  158: 382,
  159: 376
};
var xq;
function TPe() {
  if (xq) return tl;
  xq = 1;
  var a = Ca && Ca.__importDefault || function(n) {
    return n && n.__esModule ? n : { default: n };
  };
  Object.defineProperty(tl, "__esModule", { value: !0 });
  var e = a(PPe), t = (
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    String.fromCodePoint || function(n) {
      var r = "";
      return n > 65535 && (n -= 65536, r += String.fromCharCode(n >>> 10 & 1023 | 55296), n = 56320 | n & 1023), r += String.fromCharCode(n), r;
    }
  );
  function i(n) {
    return n >= 55296 && n <= 57343 || n > 1114111 ? "�" : (n in e.default && (n = e.default[n]), t(n));
  }
  return tl.default = i, tl;
}
var Aq;
function Eq() {
  if (Aq) return pi;
  Aq = 1;
  var a = Ca && Ca.__importDefault || function(c) {
    return c && c.__esModule ? c : { default: c };
  };
  Object.defineProperty(pi, "__esModule", { value: !0 }), pi.decodeHTML = pi.decodeHTMLStrict = pi.decodeXML = void 0;
  var e = a(tD), t = a(jPe), i = a(iD), n = a(TPe()), r = /&(?:[a-zA-Z0-9]+|#[xX][\da-fA-F]+|#\d+);/g;
  pi.decodeXML = s(i.default), pi.decodeHTMLStrict = s(e.default);
  function s(c) {
    var p = d(c);
    return function(m) {
      return String(m).replace(r, p);
    };
  }
  var o = function(c, p) {
    return c < p ? 1 : -1;
  };
  pi.decodeHTML = function() {
    for (var c = Object.keys(t.default).sort(o), p = Object.keys(e.default).sort(o), m = 0, w = 0; m < p.length; m++)
      c[w] === p[m] ? (p[m] += ";?", w++) : p[m] += ";";
    var v = new RegExp("&(?:" + p.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g"), $ = d(e.default);
    function P(h) {
      return h.substr(-1) !== ";" && (h += ";"), $(h);
    }
    return function(h) {
      return String(h).replace(v, P);
    };
  }();
  function d(c) {
    return function(m) {
      if (m.charAt(1) === "#") {
        var w = m.charAt(2);
        return w === "X" || w === "x" ? n.default(parseInt(m.substr(3), 16)) : n.default(parseInt(m.substr(2), 10));
      }
      return c[m.slice(1, -1)] || m;
    };
  }
  return pi;
}
var nt = {}, Sq;
function qq() {
  if (Sq) return nt;
  Sq = 1;
  var a = Ca && Ca.__importDefault || function(z) {
    return z && z.__esModule ? z : { default: z };
  };
  Object.defineProperty(nt, "__esModule", { value: !0 }), nt.escapeUTF8 = nt.escape = nt.encodeNonAsciiHTML = nt.encodeHTML = nt.encodeXML = void 0;
  var e = a(iD), t = o(e.default), i = d(t);
  nt.encodeXML = h(t);
  var n = a(tD), r = o(n.default), s = d(r);
  nt.encodeHTML = w(r, s), nt.encodeNonAsciiHTML = h(r);
  function o(z) {
    return Object.keys(z).sort().reduce(function(b, _) {
      return b[z[_]] = "&" + _ + ";", b;
    }, {});
  }
  function d(z) {
    for (var b = [], _ = [], S = 0, A = Object.keys(z); S < A.length; S++) {
      var L = A[S];
      L.length === 1 ? b.push("\\" + L) : _.push(L);
    }
    b.sort();
    for (var R = 0; R < b.length - 1; R++) {
      for (var E = R; E < b.length - 1 && b[E].charCodeAt(1) + 1 === b[E + 1].charCodeAt(1); )
        E += 1;
      var N = 1 + E - R;
      N < 3 || b.splice(R, N, b[R] + "-" + b[E]);
    }
    return _.unshift("[" + b.join("") + "]"), new RegExp(_.join("|"), "g");
  }
  var c = /(?:[\x80-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g, p = (
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition
    String.prototype.codePointAt != null ? (
      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
      function(z) {
        return z.codePointAt(0);
      }
    ) : (
      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
      function(z) {
        return (z.charCodeAt(0) - 55296) * 1024 + z.charCodeAt(1) - 56320 + 65536;
      }
    )
  );
  function m(z) {
    return "&#x" + (z.length > 1 ? p(z) : z.charCodeAt(0)).toString(16).toUpperCase() + ";";
  }
  function w(z, b) {
    return function(_) {
      return _.replace(b, function(S) {
        return z[S];
      }).replace(c, m);
    };
  }
  var v = new RegExp(i.source + "|" + c.source, "g");
  function $(z) {
    return z.replace(v, m);
  }
  nt.escape = $;
  function P(z) {
    return z.replace(i, m);
  }
  nt.escapeUTF8 = P;
  function h(z) {
    return function(b) {
      return b.replace(v, function(_) {
        return z[_] || m(_);
      });
    };
  }
  return nt;
}
var Pq;
function RPe() {
  return Pq || (Pq = 1, function(a) {
    Object.defineProperty(a, "__esModule", { value: !0 }), a.decodeXMLStrict = a.decodeHTML5Strict = a.decodeHTML4Strict = a.decodeHTML5 = a.decodeHTML4 = a.decodeHTMLStrict = a.decodeHTML = a.decodeXML = a.encodeHTML5 = a.encodeHTML4 = a.escapeUTF8 = a.escape = a.encodeNonAsciiHTML = a.encodeHTML = a.encodeXML = a.encode = a.decodeStrict = a.decode = void 0;
    var e = Eq(), t = qq();
    function i(d, c) {
      return (!c || c <= 0 ? e.decodeXML : e.decodeHTML)(d);
    }
    a.decode = i;
    function n(d, c) {
      return (!c || c <= 0 ? e.decodeXML : e.decodeHTMLStrict)(d);
    }
    a.decodeStrict = n;
    function r(d, c) {
      return (!c || c <= 0 ? t.encodeXML : t.encodeHTML)(d);
    }
    a.encode = r;
    var s = qq();
    Object.defineProperty(a, "encodeXML", { enumerable: !0, get: function() {
      return s.encodeXML;
    } }), Object.defineProperty(a, "encodeHTML", { enumerable: !0, get: function() {
      return s.encodeHTML;
    } }), Object.defineProperty(a, "encodeNonAsciiHTML", { enumerable: !0, get: function() {
      return s.encodeNonAsciiHTML;
    } }), Object.defineProperty(a, "escape", { enumerable: !0, get: function() {
      return s.escape;
    } }), Object.defineProperty(a, "escapeUTF8", { enumerable: !0, get: function() {
      return s.escapeUTF8;
    } }), Object.defineProperty(a, "encodeHTML4", { enumerable: !0, get: function() {
      return s.encodeHTML;
    } }), Object.defineProperty(a, "encodeHTML5", { enumerable: !0, get: function() {
      return s.encodeHTML;
    } });
    var o = Eq();
    Object.defineProperty(a, "decodeXML", { enumerable: !0, get: function() {
      return o.decodeXML;
    } }), Object.defineProperty(a, "decodeHTML", { enumerable: !0, get: function() {
      return o.decodeHTML;
    } }), Object.defineProperty(a, "decodeHTMLStrict", { enumerable: !0, get: function() {
      return o.decodeHTMLStrict;
    } }), Object.defineProperty(a, "decodeHTML4", { enumerable: !0, get: function() {
      return o.decodeHTML;
    } }), Object.defineProperty(a, "decodeHTML5", { enumerable: !0, get: function() {
      return o.decodeHTML;
    } }), Object.defineProperty(a, "decodeHTML4Strict", { enumerable: !0, get: function() {
      return o.decodeHTMLStrict;
    } }), Object.defineProperty(a, "decodeHTML5Strict", { enumerable: !0, get: function() {
      return o.decodeHTMLStrict;
    } }), Object.defineProperty(a, "decodeXMLStrict", { enumerable: !0, get: function() {
      return o.decodeXML;
    } });
  }(Az)), Az;
}
const OPe = {
  altglyph: "altGlyph",
  altglyphdef: "altGlyphDef",
  altglyphitem: "altGlyphItem",
  animatecolor: "animateColor",
  animatemotion: "animateMotion",
  animatetransform: "animateTransform",
  clippath: "clipPath",
  feblend: "feBlend",
  fecolormatrix: "feColorMatrix",
  fecomponenttransfer: "feComponentTransfer",
  fecomposite: "feComposite",
  feconvolvematrix: "feConvolveMatrix",
  fediffuselighting: "feDiffuseLighting",
  fedisplacementmap: "feDisplacementMap",
  fedistantlight: "feDistantLight",
  fedropshadow: "feDropShadow",
  feflood: "feFlood",
  fefunca: "feFuncA",
  fefuncb: "feFuncB",
  fefuncg: "feFuncG",
  fefuncr: "feFuncR",
  fegaussianblur: "feGaussianBlur",
  feimage: "feImage",
  femerge: "feMerge",
  femergenode: "feMergeNode",
  femorphology: "feMorphology",
  feoffset: "feOffset",
  fepointlight: "fePointLight",
  fespecularlighting: "feSpecularLighting",
  fespotlight: "feSpotLight",
  fetile: "feTile",
  feturbulence: "feTurbulence",
  foreignobject: "foreignObject",
  glyphref: "glyphRef",
  lineargradient: "linearGradient",
  radialgradient: "radialGradient",
  textpath: "textPath"
}, MPe = {
  definitionurl: "definitionURL",
  attributename: "attributeName",
  attributetype: "attributeType",
  basefrequency: "baseFrequency",
  baseprofile: "baseProfile",
  calcmode: "calcMode",
  clippathunits: "clipPathUnits",
  diffuseconstant: "diffuseConstant",
  edgemode: "edgeMode",
  filterunits: "filterUnits",
  glyphref: "glyphRef",
  gradienttransform: "gradientTransform",
  gradientunits: "gradientUnits",
  kernelmatrix: "kernelMatrix",
  kernelunitlength: "kernelUnitLength",
  keypoints: "keyPoints",
  keysplines: "keySplines",
  keytimes: "keyTimes",
  lengthadjust: "lengthAdjust",
  limitingconeangle: "limitingConeAngle",
  markerheight: "markerHeight",
  markerunits: "markerUnits",
  markerwidth: "markerWidth",
  maskcontentunits: "maskContentUnits",
  maskunits: "maskUnits",
  numoctaves: "numOctaves",
  pathlength: "pathLength",
  patterncontentunits: "patternContentUnits",
  patterntransform: "patternTransform",
  patternunits: "patternUnits",
  pointsatx: "pointsAtX",
  pointsaty: "pointsAtY",
  pointsatz: "pointsAtZ",
  preservealpha: "preserveAlpha",
  preserveaspectratio: "preserveAspectRatio",
  primitiveunits: "primitiveUnits",
  refx: "refX",
  refy: "refY",
  repeatcount: "repeatCount",
  repeatdur: "repeatDur",
  requiredextensions: "requiredExtensions",
  requiredfeatures: "requiredFeatures",
  specularconstant: "specularConstant",
  specularexponent: "specularExponent",
  spreadmethod: "spreadMethod",
  startoffset: "startOffset",
  stddeviation: "stdDeviation",
  stitchtiles: "stitchTiles",
  surfacescale: "surfaceScale",
  systemlanguage: "systemLanguage",
  tablevalues: "tableValues",
  targetx: "targetX",
  targety: "targetY",
  textlength: "textLength",
  viewbox: "viewBox",
  viewtarget: "viewTarget",
  xchannelselector: "xChannelSelector",
  ychannelselector: "yChannelSelector",
  zoomandpan: "zoomAndPan"
}, CPe = {
  elementNames: OPe,
  attributeNames: MPe
};
var Tq;
function LPe() {
  if (Tq) return jz.exports;
  Tq = 1;
  var a = lKa(), e = RPe(), t = CPe;
  t.elementNames.__proto__ = null, t.attributeNames.__proto__ = null;
  var i = {
    __proto__: null,
    style: !0,
    script: !0,
    xmp: !0,
    iframe: !0,
    noembed: !0,
    noframes: !0,
    plaintext: !0,
    noscript: !0
  };
  function n(v, $) {
    if (v) {
      var P = "", h;
      for (var z in v)
        h = v[z], P && (P += " "), $.xmlMode === "foreign" && (z = t.attributeNames[z] || z), P += z, (h !== null && h !== "" || $.xmlMode) && (P += '="' + ($.decodeEntities ? e.encodeXML(h) : h.replace(/\"/g, "&quot;")) + '"');
      return P;
    }
  }
  var r = {
    __proto__: null,
    area: !0,
    base: !0,
    basefont: !0,
    br: !0,
    col: !0,
    command: !0,
    embed: !0,
    frame: !0,
    hr: !0,
    img: !0,
    input: !0,
    isindex: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0
  }, s = jz.exports = function(v, $) {
    !Array.isArray(v) && !v.cheerio && (v = [v]), $ = $ || {};
    for (var P = "", h = 0; h < v.length; h++) {
      var z = v[h];
      z.type === "root" ? P += s(z.children, $) : a.isTag(z) ? P += d(z, $) : z.type === a.Directive ? P += c(z) : z.type === a.Comment ? P += w(z) : z.type === a.CDATA ? P += m(z) : P += p(z, $);
    }
    return P;
  }, o = [
    "mi",
    "mo",
    "mn",
    "ms",
    "mtext",
    "annotation-xml",
    "foreignObject",
    "desc",
    "title"
  ];
  function d(v, $) {
    $.xmlMode === "foreign" && (v.name = t.elementNames[v.name] || v.name, v.parent && o.indexOf(v.parent.name) >= 0 && ($ = Object.assign({}, $, { xmlMode: !1 }))), !$.xmlMode && ["svg", "math"].indexOf(v.name) >= 0 && ($ = Object.assign({}, $, { xmlMode: "foreign" }));
    var P = "<" + v.name, h = n(v.attribs, $);
    return h && (P += " " + h), $.xmlMode && (!v.children || v.children.length === 0) ? P += "/>" : (P += ">", v.children && (P += s(v.children, $)), (!r[v.name] || $.xmlMode) && (P += "</" + v.name + ">")), P;
  }
  function c(v) {
    return "<" + v.data + ">";
  }
  function p(v, $) {
    var P = v.data || "";
    return $.decodeEntities && !(v.parent && v.parent.name in i) && (P = e.encodeXML(P)), P;
  }
  function m(v) {
    return "<![CDATA[" + v.children[0].data + "]]>";
  }
  function w(v) {
    return "<!--" + v.data + "-->";
  }
  return jz.exports;
}
var Ez, Rq;
function IPe() {
  if (Rq) return Ez;
  Rq = 1;
  var a = hd, e = LPe(), t = a.isTag;
  Ez = {
    getInnerHTML: i,
    getOuterHTML: e,
    getText: n
  };
  function i(r, s) {
    return r.children ? r.children.map(function(o) {
      return e(o, s);
    }).join("") : "";
  }
  function n(r) {
    return Array.isArray(r) ? r.map(n).join("") : t(r) ? r.name === "br" ? `
` : n(r.children) : r.type === a.CDATA ? n(r.children) : r.type === a.Text ? r.data : "";
  }
  return Ez;
}
var Yi = {}, Oq;
function WPe() {
  if (Oq) return Yi;
  Oq = 1;
  var a = Yi.getChildren = function(t) {
    return t.children;
  }, e = Yi.getParent = function(t) {
    return t.parent;
  };
  return Yi.getSiblings = function(t) {
    var i = e(t);
    return i ? a(i) : [t];
  }, Yi.getAttributeValue = function(t, i) {
    return t.attribs && t.attribs[i];
  }, Yi.hasAttrib = function(t, i) {
    return !!t.attribs && hasOwnProperty.call(t.attribs, i);
  }, Yi.getName = function(t) {
    return t.name;
  }, Yi;
}
var Rn = {}, Mq;
function FPe() {
  return Mq || (Mq = 1, Rn.removeElement = function(a) {
    if (a.prev && (a.prev.next = a.next), a.next && (a.next.prev = a.prev), a.parent) {
      var e = a.parent.children;
      e.splice(e.lastIndexOf(a), 1);
    }
  }, Rn.replaceElement = function(a, e) {
    var t = e.prev = a.prev;
    t && (t.next = e);
    var i = e.next = a.next;
    i && (i.prev = e);
    var n = e.parent = a.parent;
    if (n) {
      var r = n.children;
      r[r.lastIndexOf(a)] = e;
    }
  }, Rn.appendChild = function(a, e) {
    if (e.parent = a, a.children.push(e) !== 1) {
      var t = a.children[a.children.length - 2];
      t.next = e, e.prev = t, e.next = null;
    }
  }, Rn.append = function(a, e) {
    var t = a.parent, i = a.next;
    if (e.next = i, e.prev = a, a.next = e, e.parent = t, i) {
      if (i.prev = e, t) {
        var n = t.children;
        n.splice(n.lastIndexOf(i), 0, e);
      }
    } else t && t.children.push(e);
  }, Rn.prepend = function(a, e) {
    var t = a.parent;
    if (t) {
      var i = t.children;
      i.splice(i.lastIndexOf(a), 0, e);
    }
    a.prev && (a.prev.next = e), e.parent = t, e.prev = a.prev, e.next = a, a.prev = e;
  }), Rn;
}
var Sz, Cq;
function DPe() {
  if (Cq) return Sz;
  Cq = 1;
  var a = hd.isTag;
  Sz = {
    filter: e,
    find: t,
    findOneChild: i,
    findOne: n,
    existsOne: r,
    findAll: s
  };
  function e(o, d, c, p) {
    return Array.isArray(d) || (d = [d]), (typeof p != "number" || !isFinite(p)) && (p = 1 / 0), t(o, d, c !== !1, p);
  }
  function t(o, d, c, p) {
    for (var m = [], w, v = 0, $ = d.length; v < $ && !(o(d[v]) && (m.push(d[v]), --p <= 0) || (w = d[v].children, c && w && w.length > 0 && (w = t(o, w, c, p), m = m.concat(w), p -= w.length, p <= 0))); v++)
      ;
    return m;
  }
  function i(o, d) {
    for (var c = 0, p = d.length; c < p; c++)
      if (o(d[c])) return d[c];
    return null;
  }
  function n(o, d) {
    for (var c = null, p = 0, m = d.length; p < m && !c; p++)
      if (a(d[p]))
        o(d[p]) ? c = d[p] : d[p].children.length > 0 && (c = n(o, d[p].children));
      else continue;
    return c;
  }
  function r(o, d) {
    for (var c = 0, p = d.length; c < p; c++)
      if (a(d[c]) && (o(d[c]) || d[c].children.length > 0 && r(o, d[c].children)))
        return !0;
    return !1;
  }
  function s(o, d) {
    for (var c = [], p = d.slice(); p.length; ) {
      var m = p.shift();
      a(m) && (m.children && m.children.length > 0 && p.unshift.apply(p, m.children), o(m) && c.push(m));
    }
    return c;
  }
  return Sz;
}
var Zi = {}, Lq;
function BPe() {
  if (Lq) return Zi;
  Lq = 1;
  var a = hd, e = Zi.isTag = a.isTag;
  Zi.testElement = function(r, s) {
    for (var o in r)
      if (r.hasOwnProperty(o)) {
        if (o === "tag_name") {
          if (!e(s) || !r.tag_name(s.name))
            return !1;
        } else if (o === "tag_type") {
          if (!r.tag_type(s.type)) return !1;
        } else if (o === "tag_contains") {
          if (e(s) || !r.tag_contains(s.data))
            return !1;
        } else if (!s.attribs || !r[o](s.attribs[o]))
          return !1;
      }
    return !0;
  };
  var t = {
    tag_name: function(r) {
      return typeof r == "function" ? function(s) {
        return e(s) && r(s.name);
      } : r === "*" ? e : function(s) {
        return e(s) && s.name === r;
      };
    },
    tag_type: function(r) {
      return typeof r == "function" ? function(s) {
        return r(s.type);
      } : function(s) {
        return s.type === r;
      };
    },
    tag_contains: function(r) {
      return typeof r == "function" ? function(s) {
        return !e(s) && r(s.data);
      } : function(s) {
        return !e(s) && s.data === r;
      };
    }
  };
  function i(r, s) {
    return typeof s == "function" ? function(o) {
      return o.attribs && s(o.attribs[r]);
    } : function(o) {
      return o.attribs && o.attribs[r] === s;
    };
  }
  function n(r, s) {
    return function(o) {
      return r(o) || s(o);
    };
  }
  return Zi.getElements = function(r, s, o, d) {
    var c = Object.keys(r).map(function(p) {
      var m = r[p];
      return p in t ? t[p](m) : i(p, m);
    });
    return c.length === 0 ? [] : this.filter(
      c.reduce(n),
      s,
      o,
      d
    );
  }, Zi.getElementById = function(r, s, o) {
    return Array.isArray(s) || (s = [s]), this.findOne(i("id", r), s, o !== !1);
  }, Zi.getElementsByTagName = function(r, s, o, d) {
    return this.filter(t.tag_name(r), s, o, d);
  }, Zi.getElementsByTagType = function(r, s, o, d) {
    return this.filter(t.tag_type(r), s, o, d);
  }, Zi;
}
var Gs = {}, Iq;
function NPe() {
  if (Iq) return Gs;
  Iq = 1, Gs.removeSubsets = function(t) {
    for (var i = t.length, n, r, s; --i > -1; ) {
      for (n = r = t[i], t[i] = null, s = !0; r; ) {
        if (t.indexOf(r) > -1) {
          s = !1, t.splice(i, 1);
          break;
        }
        r = r.parent;
      }
      s && (t[i] = n);
    }
    return t;
  };
  var a = {
    DISCONNECTED: 1,
    PRECEDING: 2,
    FOLLOWING: 4,
    CONTAINS: 8,
    CONTAINED_BY: 16
  }, e = Gs.compareDocumentPosition = function(t, i) {
    var n = [], r = [], s, o, d, c, p, m;
    if (t === i)
      return 0;
    for (s = t; s; )
      n.unshift(s), s = s.parent;
    for (s = i; s; )
      r.unshift(s), s = s.parent;
    for (m = 0; n[m] === r[m]; )
      m++;
    return m === 0 ? a.DISCONNECTED : (o = n[m - 1], d = o.children, c = n[m], p = r[m], d.indexOf(c) > d.indexOf(p) ? o === i ? a.FOLLOWING | a.CONTAINED_BY : a.FOLLOWING : o === t ? a.PRECEDING | a.CONTAINS : a.PRECEDING);
  };
  return Gs.uniqueSort = function(t) {
    var i = t.length, n, r;
    for (t = t.slice(); --i > -1; )
      n = t[i], r = t.indexOf(n), r > -1 && r < i && t.splice(i, 1);
    return t.sort(function(s, o) {
      var d = e(s, o);
      return d & a.PRECEDING ? -1 : d & a.FOLLOWING ? 1 : 0;
    }), t;
  }, Gs;
}
var Wq;
function nD() {
  return Wq || (Wq = 1, function(a) {
    var e = a.exports;
    [
      IPe(),
      WPe(),
      FPe(),
      DPe(),
      BPe(),
      NPe()
    ].forEach(function(t) {
      Object.keys(t).forEach(function(i) {
        e[i] = t[i].bind(e);
      });
    });
  }($z)), $z.exports;
}
var qz, Fq;
function UPe() {
  if (Fq) return qz;
  Fq = 1;
  var a = eD, e = nD();
  function t(d, c) {
    this.init(d, c);
  }
  ud(t, a), t.prototype.init = a;
  function i(d, c) {
    return e.getElementsByTagName(d, c, !0);
  }
  function n(d, c) {
    return e.getElementsByTagName(d, c, !0, 1)[0];
  }
  function r(d, c, p) {
    return e.getText(
      e.getElementsByTagName(d, c, p, 1)
    ).trim();
  }
  function s(d, c, p, m, w) {
    var v = r(p, m, w);
    v && (d[c] = v);
  }
  var o = function(d) {
    return d === "rss" || d === "feed" || d === "rdf:RDF";
  };
  return t.prototype.onend = function() {
    var d = {}, c = n(o, this.dom), p, m;
    c && (c.name === "feed" ? (m = c.children, d.type = "atom", s(d, "id", "id", m), s(d, "title", "title", m), (p = n("link", m)) && (p = p.attribs) && (p = p.href) && (d.link = p), s(d, "description", "subtitle", m), (p = r("updated", m)) && (d.updated = new Date(p)), s(d, "author", "email", m, !0), d.items = i("entry", m).map(function(w) {
      var v = {}, $;
      return w = w.children, s(v, "id", "id", w), s(v, "title", "title", w), ($ = n("link", w)) && ($ = $.attribs) && ($ = $.href) && (v.link = $), ($ = r("summary", w) || r("content", w)) && (v.description = $), ($ = r("updated", w)) && (v.pubDate = new Date($)), v;
    })) : (m = n("channel", c.children).children, d.type = c.name.substr(0, 3), d.id = "", s(d, "title", "title", m), s(d, "link", "link", m), s(d, "description", "description", m), (p = r("lastBuildDate", m)) && (d.updated = new Date(p)), s(d, "author", "managingEditor", m, !0), d.items = i("item", c.children).map(function(w) {
      var v = {}, $;
      return w = w.children, s(v, "id", "guid", w), s(v, "title", "title", w), s(v, "link", "link", w), s(v, "description", "description", w), ($ = r("pubDate", w)) && (v.pubDate = new Date($)), v;
    }))), this.dom = d, a.prototype._handleCallback.call(
      this,
      c ? null : Error("couldn't find root of feed")
    );
  }, qz = t, qz;
}
const HPe = {}, VPe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: HPe
}, Symbol.toStringTag, { value: "Module" })), rD = /* @__PURE__ */ ts(VPe);
var Pz = {}, il = { exports: {} }, Tz = {}, Dq;
function sD() {
  return Dq || (Dq = 1, function(a) {
    Object.defineProperties(a, { __esModule: { value: !0 }, [Symbol.toStringTag]: { value: "Module" } });
    var e = {}, t = {};
    t.byteLength = p, t.toByteArray = w, t.fromByteArray = P;
    for (var i = [], n = [], r = typeof Uint8Array < "u" ? Uint8Array : Array, s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", o = 0, d = s.length; o < d; ++o)
      i[o] = s[o], n[s.charCodeAt(o)] = o;
    n[45] = 62, n[95] = 63;
    function c(b) {
      var _ = b.length;
      if (_ % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var S = b.indexOf("=");
      S === -1 && (S = _);
      var A = S === _ ? 0 : 4 - S % 4;
      return [S, A];
    }
    function p(b) {
      var _ = c(b), S = _[0], A = _[1];
      return (S + A) * 3 / 4 - A;
    }
    function m(b, _, S) {
      return (_ + S) * 3 / 4 - S;
    }
    function w(b) {
      var _, S = c(b), A = S[0], L = S[1], R = new r(m(b, A, L)), E = 0, N = L > 0 ? A - 4 : A, D;
      for (D = 0; D < N; D += 4)
        _ = n[b.charCodeAt(D)] << 18 | n[b.charCodeAt(D + 1)] << 12 | n[b.charCodeAt(D + 2)] << 6 | n[b.charCodeAt(D + 3)], R[E++] = _ >> 16 & 255, R[E++] = _ >> 8 & 255, R[E++] = _ & 255;
      return L === 2 && (_ = n[b.charCodeAt(D)] << 2 | n[b.charCodeAt(D + 1)] >> 4, R[E++] = _ & 255), L === 1 && (_ = n[b.charCodeAt(D)] << 10 | n[b.charCodeAt(D + 1)] << 4 | n[b.charCodeAt(D + 2)] >> 2, R[E++] = _ >> 8 & 255, R[E++] = _ & 255), R;
    }
    function v(b) {
      return i[b >> 18 & 63] + i[b >> 12 & 63] + i[b >> 6 & 63] + i[b & 63];
    }
    function $(b, _, S) {
      for (var A, L = [], R = _; R < S; R += 3)
        A = (b[R] << 16 & 16711680) + (b[R + 1] << 8 & 65280) + (b[R + 2] & 255), L.push(v(A));
      return L.join("");
    }
    function P(b) {
      for (var _, S = b.length, A = S % 3, L = [], R = 16383, E = 0, N = S - A; E < N; E += R)
        L.push($(b, E, E + R > N ? N : E + R));
      return A === 1 ? (_ = b[S - 1], L.push(
        i[_ >> 2] + i[_ << 4 & 63] + "=="
      )) : A === 2 && (_ = (b[S - 2] << 8) + b[S - 1], L.push(
        i[_ >> 10] + i[_ >> 4 & 63] + i[_ << 2 & 63] + "="
      )), L.join("");
    }
    var h = {};
    /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
    h.read = function(b, _, S, A, L) {
      var R, E, N = L * 8 - A - 1, D = (1 << N) - 1, H = D >> 1, j = -7, ea = S ? L - 1 : 0, ra = S ? -1 : 1, J = b[_ + ea];
      for (ea += ra, R = J & (1 << -j) - 1, J >>= -j, j += N; j > 0; R = R * 256 + b[_ + ea], ea += ra, j -= 8)
        ;
      for (E = R & (1 << -j) - 1, R >>= -j, j += A; j > 0; E = E * 256 + b[_ + ea], ea += ra, j -= 8)
        ;
      if (R === 0)
        R = 1 - H;
      else {
        if (R === D)
          return E ? NaN : (J ? -1 : 1) * (1 / 0);
        E = E + Math.pow(2, A), R = R - H;
      }
      return (J ? -1 : 1) * E * Math.pow(2, R - A);
    }, h.write = function(b, _, S, A, L, R) {
      var E, N, D, H = R * 8 - L - 1, j = (1 << H) - 1, ea = j >> 1, ra = L === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, J = A ? 0 : R - 1, $a = A ? 1 : -1, ne = _ < 0 || _ === 0 && 1 / _ < 0 ? 1 : 0;
      for (_ = Math.abs(_), isNaN(_) || _ === 1 / 0 ? (N = isNaN(_) ? 1 : 0, E = j) : (E = Math.floor(Math.log(_) / Math.LN2), _ * (D = Math.pow(2, -E)) < 1 && (E--, D *= 2), E + ea >= 1 ? _ += ra / D : _ += ra * Math.pow(2, 1 - ea), _ * D >= 2 && (E++, D /= 2), E + ea >= j ? (N = 0, E = j) : E + ea >= 1 ? (N = (_ * D - 1) * Math.pow(2, L), E = E + ea) : (N = _ * Math.pow(2, ea - 1) * Math.pow(2, L), E = 0)); L >= 8; b[S + J] = N & 255, J += $a, N /= 256, L -= 8)
        ;
      for (E = E << L | N, H += L; H > 0; b[S + J] = E & 255, J += $a, E /= 256, H -= 8)
        ;
      b[S + J - $a] |= ne * 128;
    };
    /*!
     * The buffer module from node.js, for the browser.
     *
     * @author   Feross Aboukhadijeh <https://feross.org>
     * @license  MIT
     */
    (function(b) {
      const _ = t, S = h, A = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
      b.Buffer = j, b.SlowBuffer = T, b.INSPECT_MAX_BYTES = 50;
      const L = 2147483647;
      b.kMaxLength = L;
      const { Uint8Array: R, ArrayBuffer: E, SharedArrayBuffer: N } = globalThis;
      j.TYPED_ARRAY_SUPPORT = D(), !j.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error(
        "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
      );
      function D() {
        try {
          const f = new R(1), l = { foo: function() {
            return 42;
          } };
          return Object.setPrototypeOf(l, R.prototype), Object.setPrototypeOf(f, l), f.foo() === 42;
        } catch {
          return !1;
        }
      }
      Object.defineProperty(j.prototype, "parent", {
        enumerable: !0,
        get: function() {
          if (j.isBuffer(this))
            return this.buffer;
        }
      }), Object.defineProperty(j.prototype, "offset", {
        enumerable: !0,
        get: function() {
          if (j.isBuffer(this))
            return this.byteOffset;
        }
      });
      function H(f) {
        if (f > L)
          throw new RangeError('The value "' + f + '" is invalid for option "size"');
        const l = new R(f);
        return Object.setPrototypeOf(l, j.prototype), l;
      }
      function j(f, l, u) {
        if (typeof f == "number") {
          if (typeof l == "string")
            throw new TypeError(
              'The "string" argument must be of type string. Received type number'
            );
          return $a(f);
        }
        return ea(f, l, u);
      }
      j.poolSize = 8192;
      function ea(f, l, u) {
        if (typeof f == "string")
          return ne(f, l);
        if (E.isView(f))
          return Ea(f);
        if (f == null)
          throw new TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof f
          );
        if (Ft(f, E) || f && Ft(f.buffer, E) || typeof N < "u" && (Ft(f, N) || f && Ft(f.buffer, N)))
          return O(f, l, u);
        if (typeof f == "number")
          throw new TypeError(
            'The "value" argument must not be of type number. Received type number'
          );
        const k = f.valueOf && f.valueOf();
        if (k != null && k !== f)
          return j.from(k, l, u);
        const q = V(f);
        if (q) return q;
        if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof f[Symbol.toPrimitive] == "function")
          return j.from(f[Symbol.toPrimitive]("string"), l, u);
        throw new TypeError(
          "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof f
        );
      }
      j.from = function(f, l, u) {
        return ea(f, l, u);
      }, Object.setPrototypeOf(j.prototype, R.prototype), Object.setPrototypeOf(j, R);
      function ra(f) {
        if (typeof f != "number")
          throw new TypeError('"size" argument must be of type number');
        if (f < 0)
          throw new RangeError('The value "' + f + '" is invalid for option "size"');
      }
      function J(f, l, u) {
        return ra(f), f <= 0 ? H(f) : l !== void 0 ? typeof u == "string" ? H(f).fill(l, u) : H(f).fill(l) : H(f);
      }
      j.alloc = function(f, l, u) {
        return J(f, l, u);
      };
      function $a(f) {
        return ra(f), H(f < 0 ? 0 : x(f) | 0);
      }
      j.allocUnsafe = function(f) {
        return $a(f);
      }, j.allocUnsafeSlow = function(f) {
        return $a(f);
      };
      function ne(f, l) {
        if ((typeof l != "string" || l === "") && (l = "utf8"), !j.isEncoding(l))
          throw new TypeError("Unknown encoding: " + l);
        const u = M(f, l) | 0;
        let k = H(u);
        const q = k.write(f, l);
        return q !== u && (k = k.slice(0, q)), k;
      }
      function fa(f) {
        const l = f.length < 0 ? 0 : x(f.length) | 0, u = H(l);
        for (let k = 0; k < l; k += 1)
          u[k] = f[k] & 255;
        return u;
      }
      function Ea(f) {
        if (Ft(f, R)) {
          const l = new R(f);
          return O(l.buffer, l.byteOffset, l.byteLength);
        }
        return fa(f);
      }
      function O(f, l, u) {
        if (l < 0 || f.byteLength < l)
          throw new RangeError('"offset" is outside of buffer bounds');
        if (f.byteLength < l + (u || 0))
          throw new RangeError('"length" is outside of buffer bounds');
        let k;
        return l === void 0 && u === void 0 ? k = new R(f) : u === void 0 ? k = new R(f, l) : k = new R(f, l, u), Object.setPrototypeOf(k, j.prototype), k;
      }
      function V(f) {
        if (j.isBuffer(f)) {
          const l = x(f.length) | 0, u = H(l);
          return u.length === 0 || f.copy(u, 0, 0, l), u;
        }
        if (f.length !== void 0)
          return typeof f.length != "number" || Zp(f.length) ? H(0) : fa(f);
        if (f.type === "Buffer" && Array.isArray(f.data))
          return fa(f.data);
      }
      function x(f) {
        if (f >= L)
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + L.toString(16) + " bytes");
        return f | 0;
      }
      function T(f) {
        return +f != f && (f = 0), j.alloc(+f);
      }
      j.isBuffer = function(l) {
        return l != null && l._isBuffer === !0 && l !== j.prototype;
      }, j.compare = function(l, u) {
        if (Ft(l, R) && (l = j.from(l, l.offset, l.byteLength)), Ft(u, R) && (u = j.from(u, u.offset, u.byteLength)), !j.isBuffer(l) || !j.isBuffer(u))
          throw new TypeError(
            'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
          );
        if (l === u) return 0;
        let k = l.length, q = u.length;
        for (let C = 0, F = Math.min(k, q); C < F; ++C)
          if (l[C] !== u[C]) {
            k = l[C], q = u[C];
            break;
          }
        return k < q ? -1 : q < k ? 1 : 0;
      }, j.isEncoding = function(l) {
        switch (String(l).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return !0;
          default:
            return !1;
        }
      }, j.concat = function(l, u) {
        if (!Array.isArray(l))
          throw new TypeError('"list" argument must be an Array of Buffers');
        if (l.length === 0)
          return j.alloc(0);
        let k;
        if (u === void 0)
          for (u = 0, k = 0; k < l.length; ++k)
            u += l[k].length;
        const q = j.allocUnsafe(u);
        let C = 0;
        for (k = 0; k < l.length; ++k) {
          let F = l[k];
          if (Ft(F, R))
            C + F.length > q.length ? (j.isBuffer(F) || (F = j.from(F)), F.copy(q, C)) : R.prototype.set.call(
              q,
              F,
              C
            );
          else if (j.isBuffer(F))
            F.copy(q, C);
          else
            throw new TypeError('"list" argument must be an Array of Buffers');
          C += F.length;
        }
        return q;
      };
      function M(f, l) {
        if (j.isBuffer(f))
          return f.length;
        if (E.isView(f) || Ft(f, E))
          return f.byteLength;
        if (typeof f != "string")
          throw new TypeError(
            'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof f
          );
        const u = f.length, k = arguments.length > 2 && arguments[2] === !0;
        if (!k && u === 0) return 0;
        let q = !1;
        for (; ; )
          switch (l) {
            case "ascii":
            case "latin1":
            case "binary":
              return u;
            case "utf8":
            case "utf-8":
              return Yp(f).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return u * 2;
            case "hex":
              return u >>> 1;
            case "base64":
              return R_(f).length;
            default:
              if (q)
                return k ? -1 : Yp(f).length;
              l = ("" + l).toLowerCase(), q = !0;
          }
      }
      j.byteLength = M;
      function U(f, l, u) {
        let k = !1;
        if ((l === void 0 || l < 0) && (l = 0), l > this.length || ((u === void 0 || u > this.length) && (u = this.length), u <= 0) || (u >>>= 0, l >>>= 0, u <= l))
          return "";
        for (f || (f = "utf8"); ; )
          switch (f) {
            case "hex":
              return Kp(this, l, u);
            case "utf8":
            case "utf-8":
              return Fe(this, l, u);
            case "ascii":
              return Vp(this, l, u);
            case "latin1":
            case "binary":
              return B(this, l, u);
            case "base64":
              return _e(this, l, u);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return j_(this, l, u);
            default:
              if (k) throw new TypeError("Unknown encoding: " + f);
              f = (f + "").toLowerCase(), k = !0;
          }
      }
      j.prototype._isBuffer = !0;
      function G(f, l, u) {
        const k = f[l];
        f[l] = f[u], f[u] = k;
      }
      j.prototype.swap16 = function() {
        const l = this.length;
        if (l % 2 !== 0)
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (let u = 0; u < l; u += 2)
          G(this, u, u + 1);
        return this;
      }, j.prototype.swap32 = function() {
        const l = this.length;
        if (l % 4 !== 0)
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (let u = 0; u < l; u += 4)
          G(this, u, u + 3), G(this, u + 1, u + 2);
        return this;
      }, j.prototype.swap64 = function() {
        const l = this.length;
        if (l % 8 !== 0)
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (let u = 0; u < l; u += 8)
          G(this, u, u + 7), G(this, u + 1, u + 6), G(this, u + 2, u + 5), G(this, u + 3, u + 4);
        return this;
      }, j.prototype.toString = function() {
        const l = this.length;
        return l === 0 ? "" : arguments.length === 0 ? Fe(this, 0, l) : U.apply(this, arguments);
      }, j.prototype.toLocaleString = j.prototype.toString, j.prototype.equals = function(l) {
        if (!j.isBuffer(l)) throw new TypeError("Argument must be a Buffer");
        return this === l ? !0 : j.compare(this, l) === 0;
      }, j.prototype.inspect = function() {
        let l = "";
        const u = b.INSPECT_MAX_BYTES;
        return l = this.toString("hex", 0, u).replace(/(.{2})/g, "$1 ").trim(), this.length > u && (l += " ... "), "<Buffer " + l + ">";
      }, A && (j.prototype[A] = j.prototype.inspect), j.prototype.compare = function(l, u, k, q, C) {
        if (Ft(l, R) && (l = j.from(l, l.offset, l.byteLength)), !j.isBuffer(l))
          throw new TypeError(
            'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof l
          );
        if (u === void 0 && (u = 0), k === void 0 && (k = l ? l.length : 0), q === void 0 && (q = 0), C === void 0 && (C = this.length), u < 0 || k > l.length || q < 0 || C > this.length)
          throw new RangeError("out of range index");
        if (q >= C && u >= k)
          return 0;
        if (q >= C)
          return -1;
        if (u >= k)
          return 1;
        if (u >>>= 0, k >>>= 0, q >>>= 0, C >>>= 0, this === l) return 0;
        let F = C - q, ga = k - u;
        const Qa = Math.min(F, ga), Ua = this.slice(q, C), ae = l.slice(u, k);
        for (let Ma = 0; Ma < Qa; ++Ma)
          if (Ua[Ma] !== ae[Ma]) {
            F = Ua[Ma], ga = ae[Ma];
            break;
          }
        return F < ga ? -1 : ga < F ? 1 : 0;
      };
      function Y(f, l, u, k, q) {
        if (f.length === 0) return -1;
        if (typeof u == "string" ? (k = u, u = 0) : u > 2147483647 ? u = 2147483647 : u < -2147483648 && (u = -2147483648), u = +u, Zp(u) && (u = q ? 0 : f.length - 1), u < 0 && (u = f.length + u), u >= f.length) {
          if (q) return -1;
          u = f.length - 1;
        } else if (u < 0)
          if (q) u = 0;
          else return -1;
        if (typeof l == "string" && (l = j.from(l, k)), j.isBuffer(l))
          return l.length === 0 ? -1 : K(f, l, u, k, q);
        if (typeof l == "number")
          return l = l & 255, typeof R.prototype.indexOf == "function" ? q ? R.prototype.indexOf.call(f, l, u) : R.prototype.lastIndexOf.call(f, l, u) : K(f, [l], u, k, q);
        throw new TypeError("val must be string, number or Buffer");
      }
      function K(f, l, u, k, q) {
        let C = 1, F = f.length, ga = l.length;
        if (k !== void 0 && (k = String(k).toLowerCase(), k === "ucs2" || k === "ucs-2" || k === "utf16le" || k === "utf-16le")) {
          if (f.length < 2 || l.length < 2)
            return -1;
          C = 2, F /= 2, ga /= 2, u /= 2;
        }
        function Qa(ae, Ma) {
          return C === 1 ? ae[Ma] : ae.readUInt16BE(Ma * C);
        }
        let Ua;
        if (q) {
          let ae = -1;
          for (Ua = u; Ua < F; Ua++)
            if (Qa(f, Ua) === Qa(l, ae === -1 ? 0 : Ua - ae)) {
              if (ae === -1 && (ae = Ua), Ua - ae + 1 === ga) return ae * C;
            } else
              ae !== -1 && (Ua -= Ua - ae), ae = -1;
        } else
          for (u + ga > F && (u = F - ga), Ua = u; Ua >= 0; Ua--) {
            let ae = !0;
            for (let Ma = 0; Ma < ga; Ma++)
              if (Qa(f, Ua + Ma) !== Qa(l, Ma)) {
                ae = !1;
                break;
              }
            if (ae) return Ua;
          }
        return -1;
      }
      j.prototype.includes = function(l, u, k) {
        return this.indexOf(l, u, k) !== -1;
      }, j.prototype.indexOf = function(l, u, k) {
        return Y(this, l, u, k, !0);
      }, j.prototype.lastIndexOf = function(l, u, k) {
        return Y(this, l, u, k, !1);
      };
      function Q(f, l, u, k) {
        u = Number(u) || 0;
        const q = f.length - u;
        k ? (k = Number(k), k > q && (k = q)) : k = q;
        const C = l.length;
        k > C / 2 && (k = C / 2);
        let F;
        for (F = 0; F < k; ++F) {
          const ga = parseInt(l.substr(F * 2, 2), 16);
          if (Zp(ga)) return F;
          f[u + F] = ga;
        }
        return F;
      }
      function pa(f, l, u, k) {
        return Gd(Yp(l, f.length - u), f, u, k);
      }
      function ka(f, l, u, k) {
        return Gd(KN(l), f, u, k);
      }
      function Ja(f, l, u, k) {
        return Gd(R_(l), f, u, k);
      }
      function fe(f, l, u, k) {
        return Gd(GN(l, f.length - u), f, u, k);
      }
      j.prototype.write = function(l, u, k, q) {
        if (u === void 0)
          q = "utf8", k = this.length, u = 0;
        else if (k === void 0 && typeof u == "string")
          q = u, k = this.length, u = 0;
        else if (isFinite(u))
          u = u >>> 0, isFinite(k) ? (k = k >>> 0, q === void 0 && (q = "utf8")) : (q = k, k = void 0);
        else
          throw new Error(
            "Buffer.write(string, encoding, offset[, length]) is no longer supported"
          );
        const C = this.length - u;
        if ((k === void 0 || k > C) && (k = C), l.length > 0 && (k < 0 || u < 0) || u > this.length)
          throw new RangeError("Attempt to write outside buffer bounds");
        q || (q = "utf8");
        let F = !1;
        for (; ; )
          switch (q) {
            case "hex":
              return Q(this, l, u, k);
            case "utf8":
            case "utf-8":
              return pa(this, l, u, k);
            case "ascii":
            case "latin1":
            case "binary":
              return ka(this, l, u, k);
            case "base64":
              return Ja(this, l, u, k);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return fe(this, l, u, k);
            default:
              if (F) throw new TypeError("Unknown encoding: " + q);
              q = ("" + q).toLowerCase(), F = !0;
          }
      }, j.prototype.toJSON = function() {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };
      function _e(f, l, u) {
        return l === 0 && u === f.length ? _.fromByteArray(f) : _.fromByteArray(f.slice(l, u));
      }
      function Fe(f, l, u) {
        u = Math.min(f.length, u);
        const k = [];
        let q = l;
        for (; q < u; ) {
          const C = f[q];
          let F = null, ga = C > 239 ? 4 : C > 223 ? 3 : C > 191 ? 2 : 1;
          if (q + ga <= u) {
            let Qa, Ua, ae, Ma;
            switch (ga) {
              case 1:
                C < 128 && (F = C);
                break;
              case 2:
                Qa = f[q + 1], (Qa & 192) === 128 && (Ma = (C & 31) << 6 | Qa & 63, Ma > 127 && (F = Ma));
                break;
              case 3:
                Qa = f[q + 1], Ua = f[q + 2], (Qa & 192) === 128 && (Ua & 192) === 128 && (Ma = (C & 15) << 12 | (Qa & 63) << 6 | Ua & 63, Ma > 2047 && (Ma < 55296 || Ma > 57343) && (F = Ma));
                break;
              case 4:
                Qa = f[q + 1], Ua = f[q + 2], ae = f[q + 3], (Qa & 192) === 128 && (Ua & 192) === 128 && (ae & 192) === 128 && (Ma = (C & 15) << 18 | (Qa & 63) << 12 | (Ua & 63) << 6 | ae & 63, Ma > 65535 && Ma < 1114112 && (F = Ma));
            }
          }
          F === null ? (F = 65533, ga = 1) : F > 65535 && (F -= 65536, k.push(F >>> 10 & 1023 | 55296), F = 56320 | F & 1023), k.push(F), q += ga;
        }
        return Hp(k);
      }
      const ui = 4096;
      function Hp(f) {
        const l = f.length;
        if (l <= ui)
          return String.fromCharCode.apply(String, f);
        let u = "", k = 0;
        for (; k < l; )
          u += String.fromCharCode.apply(
            String,
            f.slice(k, k += ui)
          );
        return u;
      }
      function Vp(f, l, u) {
        let k = "";
        u = Math.min(f.length, u);
        for (let q = l; q < u; ++q)
          k += String.fromCharCode(f[q] & 127);
        return k;
      }
      function B(f, l, u) {
        let k = "";
        u = Math.min(f.length, u);
        for (let q = l; q < u; ++q)
          k += String.fromCharCode(f[q]);
        return k;
      }
      function Kp(f, l, u) {
        const k = f.length;
        (!l || l < 0) && (l = 0), (!u || u < 0 || u > k) && (u = k);
        let q = "";
        for (let C = l; C < u; ++C)
          q += YN[f[C]];
        return q;
      }
      function j_(f, l, u) {
        const k = f.slice(l, u);
        let q = "";
        for (let C = 0; C < k.length - 1; C += 2)
          q += String.fromCharCode(k[C] + k[C + 1] * 256);
        return q;
      }
      j.prototype.slice = function(l, u) {
        const k = this.length;
        l = ~~l, u = u === void 0 ? k : ~~u, l < 0 ? (l += k, l < 0 && (l = 0)) : l > k && (l = k), u < 0 ? (u += k, u < 0 && (u = 0)) : u > k && (u = k), u < l && (u = l);
        const q = this.subarray(l, u);
        return Object.setPrototypeOf(q, j.prototype), q;
      };
      function ye(f, l, u) {
        if (f % 1 !== 0 || f < 0) throw new RangeError("offset is not uint");
        if (f + l > u) throw new RangeError("Trying to access beyond buffer length");
      }
      j.prototype.readUintLE = j.prototype.readUIntLE = function(l, u, k) {
        l = l >>> 0, u = u >>> 0, k || ye(l, u, this.length);
        let q = this[l], C = 1, F = 0;
        for (; ++F < u && (C *= 256); )
          q += this[l + F] * C;
        return q;
      }, j.prototype.readUintBE = j.prototype.readUIntBE = function(l, u, k) {
        l = l >>> 0, u = u >>> 0, k || ye(l, u, this.length);
        let q = this[l + --u], C = 1;
        for (; u > 0 && (C *= 256); )
          q += this[l + --u] * C;
        return q;
      }, j.prototype.readUint8 = j.prototype.readUInt8 = function(l, u) {
        return l = l >>> 0, u || ye(l, 1, this.length), this[l];
      }, j.prototype.readUint16LE = j.prototype.readUInt16LE = function(l, u) {
        return l = l >>> 0, u || ye(l, 2, this.length), this[l] | this[l + 1] << 8;
      }, j.prototype.readUint16BE = j.prototype.readUInt16BE = function(l, u) {
        return l = l >>> 0, u || ye(l, 2, this.length), this[l] << 8 | this[l + 1];
      }, j.prototype.readUint32LE = j.prototype.readUInt32LE = function(l, u) {
        return l = l >>> 0, u || ye(l, 4, this.length), (this[l] | this[l + 1] << 8 | this[l + 2] << 16) + this[l + 3] * 16777216;
      }, j.prototype.readUint32BE = j.prototype.readUInt32BE = function(l, u) {
        return l = l >>> 0, u || ye(l, 4, this.length), this[l] * 16777216 + (this[l + 1] << 16 | this[l + 2] << 8 | this[l + 3]);
      }, j.prototype.readBigUInt64LE = Ki(function(l) {
        l = l >>> 0, kr(l, "offset");
        const u = this[l], k = this[l + 7];
        (u === void 0 || k === void 0) && Ns(l, this.length - 8);
        const q = u + this[++l] * 2 ** 8 + this[++l] * 2 ** 16 + this[++l] * 2 ** 24, C = this[++l] + this[++l] * 2 ** 8 + this[++l] * 2 ** 16 + k * 2 ** 24;
        return BigInt(q) + (BigInt(C) << BigInt(32));
      }), j.prototype.readBigUInt64BE = Ki(function(l) {
        l = l >>> 0, kr(l, "offset");
        const u = this[l], k = this[l + 7];
        (u === void 0 || k === void 0) && Ns(l, this.length - 8);
        const q = u * 2 ** 24 + this[++l] * 2 ** 16 + this[++l] * 2 ** 8 + this[++l], C = this[++l] * 2 ** 24 + this[++l] * 2 ** 16 + this[++l] * 2 ** 8 + k;
        return (BigInt(q) << BigInt(32)) + BigInt(C);
      }), j.prototype.readIntLE = function(l, u, k) {
        l = l >>> 0, u = u >>> 0, k || ye(l, u, this.length);
        let q = this[l], C = 1, F = 0;
        for (; ++F < u && (C *= 256); )
          q += this[l + F] * C;
        return C *= 128, q >= C && (q -= Math.pow(2, 8 * u)), q;
      }, j.prototype.readIntBE = function(l, u, k) {
        l = l >>> 0, u = u >>> 0, k || ye(l, u, this.length);
        let q = u, C = 1, F = this[l + --q];
        for (; q > 0 && (C *= 256); )
          F += this[l + --q] * C;
        return C *= 128, F >= C && (F -= Math.pow(2, 8 * u)), F;
      }, j.prototype.readInt8 = function(l, u) {
        return l = l >>> 0, u || ye(l, 1, this.length), this[l] & 128 ? (255 - this[l] + 1) * -1 : this[l];
      }, j.prototype.readInt16LE = function(l, u) {
        l = l >>> 0, u || ye(l, 2, this.length);
        const k = this[l] | this[l + 1] << 8;
        return k & 32768 ? k | 4294901760 : k;
      }, j.prototype.readInt16BE = function(l, u) {
        l = l >>> 0, u || ye(l, 2, this.length);
        const k = this[l + 1] | this[l] << 8;
        return k & 32768 ? k | 4294901760 : k;
      }, j.prototype.readInt32LE = function(l, u) {
        return l = l >>> 0, u || ye(l, 4, this.length), this[l] | this[l + 1] << 8 | this[l + 2] << 16 | this[l + 3] << 24;
      }, j.prototype.readInt32BE = function(l, u) {
        return l = l >>> 0, u || ye(l, 4, this.length), this[l] << 24 | this[l + 1] << 16 | this[l + 2] << 8 | this[l + 3];
      }, j.prototype.readBigInt64LE = Ki(function(l) {
        l = l >>> 0, kr(l, "offset");
        const u = this[l], k = this[l + 7];
        (u === void 0 || k === void 0) && Ns(l, this.length - 8);
        const q = this[l + 4] + this[l + 5] * 2 ** 8 + this[l + 6] * 2 ** 16 + (k << 24);
        return (BigInt(q) << BigInt(32)) + BigInt(u + this[++l] * 2 ** 8 + this[++l] * 2 ** 16 + this[++l] * 2 ** 24);
      }), j.prototype.readBigInt64BE = Ki(function(l) {
        l = l >>> 0, kr(l, "offset");
        const u = this[l], k = this[l + 7];
        (u === void 0 || k === void 0) && Ns(l, this.length - 8);
        const q = (u << 24) + // Overflow
        this[++l] * 2 ** 16 + this[++l] * 2 ** 8 + this[++l];
        return (BigInt(q) << BigInt(32)) + BigInt(this[++l] * 2 ** 24 + this[++l] * 2 ** 16 + this[++l] * 2 ** 8 + k);
      }), j.prototype.readFloatLE = function(l, u) {
        return l = l >>> 0, u || ye(l, 4, this.length), S.read(this, l, !0, 23, 4);
      }, j.prototype.readFloatBE = function(l, u) {
        return l = l >>> 0, u || ye(l, 4, this.length), S.read(this, l, !1, 23, 4);
      }, j.prototype.readDoubleLE = function(l, u) {
        return l = l >>> 0, u || ye(l, 8, this.length), S.read(this, l, !0, 52, 8);
      }, j.prototype.readDoubleBE = function(l, u) {
        return l = l >>> 0, u || ye(l, 8, this.length), S.read(this, l, !1, 52, 8);
      };
      function Ge(f, l, u, k, q, C) {
        if (!j.isBuffer(f)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (l > q || l < C) throw new RangeError('"value" argument is out of bounds');
        if (u + k > f.length) throw new RangeError("Index out of range");
      }
      j.prototype.writeUintLE = j.prototype.writeUIntLE = function(l, u, k, q) {
        if (l = +l, u = u >>> 0, k = k >>> 0, !q) {
          const ga = Math.pow(2, 8 * k) - 1;
          Ge(this, l, u, k, ga, 0);
        }
        let C = 1, F = 0;
        for (this[u] = l & 255; ++F < k && (C *= 256); )
          this[u + F] = l / C & 255;
        return u + k;
      }, j.prototype.writeUintBE = j.prototype.writeUIntBE = function(l, u, k, q) {
        if (l = +l, u = u >>> 0, k = k >>> 0, !q) {
          const ga = Math.pow(2, 8 * k) - 1;
          Ge(this, l, u, k, ga, 0);
        }
        let C = k - 1, F = 1;
        for (this[u + C] = l & 255; --C >= 0 && (F *= 256); )
          this[u + C] = l / F & 255;
        return u + k;
      }, j.prototype.writeUint8 = j.prototype.writeUInt8 = function(l, u, k) {
        return l = +l, u = u >>> 0, k || Ge(this, l, u, 1, 255, 0), this[u] = l & 255, u + 1;
      }, j.prototype.writeUint16LE = j.prototype.writeUInt16LE = function(l, u, k) {
        return l = +l, u = u >>> 0, k || Ge(this, l, u, 2, 65535, 0), this[u] = l & 255, this[u + 1] = l >>> 8, u + 2;
      }, j.prototype.writeUint16BE = j.prototype.writeUInt16BE = function(l, u, k) {
        return l = +l, u = u >>> 0, k || Ge(this, l, u, 2, 65535, 0), this[u] = l >>> 8, this[u + 1] = l & 255, u + 2;
      }, j.prototype.writeUint32LE = j.prototype.writeUInt32LE = function(l, u, k) {
        return l = +l, u = u >>> 0, k || Ge(this, l, u, 4, 4294967295, 0), this[u + 3] = l >>> 24, this[u + 2] = l >>> 16, this[u + 1] = l >>> 8, this[u] = l & 255, u + 4;
      }, j.prototype.writeUint32BE = j.prototype.writeUInt32BE = function(l, u, k) {
        return l = +l, u = u >>> 0, k || Ge(this, l, u, 4, 4294967295, 0), this[u] = l >>> 24, this[u + 1] = l >>> 16, this[u + 2] = l >>> 8, this[u + 3] = l & 255, u + 4;
      };
      function x_(f, l, u, k, q) {
        T_(l, k, q, f, u, 7);
        let C = Number(l & BigInt(4294967295));
        f[u++] = C, C = C >> 8, f[u++] = C, C = C >> 8, f[u++] = C, C = C >> 8, f[u++] = C;
        let F = Number(l >> BigInt(32) & BigInt(4294967295));
        return f[u++] = F, F = F >> 8, f[u++] = F, F = F >> 8, f[u++] = F, F = F >> 8, f[u++] = F, u;
      }
      function A_(f, l, u, k, q) {
        T_(l, k, q, f, u, 7);
        let C = Number(l & BigInt(4294967295));
        f[u + 7] = C, C = C >> 8, f[u + 6] = C, C = C >> 8, f[u + 5] = C, C = C >> 8, f[u + 4] = C;
        let F = Number(l >> BigInt(32) & BigInt(4294967295));
        return f[u + 3] = F, F = F >> 8, f[u + 2] = F, F = F >> 8, f[u + 1] = F, F = F >> 8, f[u] = F, u + 8;
      }
      j.prototype.writeBigUInt64LE = Ki(function(l, u = 0) {
        return x_(this, l, u, BigInt(0), BigInt("0xffffffffffffffff"));
      }), j.prototype.writeBigUInt64BE = Ki(function(l, u = 0) {
        return A_(this, l, u, BigInt(0), BigInt("0xffffffffffffffff"));
      }), j.prototype.writeIntLE = function(l, u, k, q) {
        if (l = +l, u = u >>> 0, !q) {
          const Qa = Math.pow(2, 8 * k - 1);
          Ge(this, l, u, k, Qa - 1, -Qa);
        }
        let C = 0, F = 1, ga = 0;
        for (this[u] = l & 255; ++C < k && (F *= 256); )
          l < 0 && ga === 0 && this[u + C - 1] !== 0 && (ga = 1), this[u + C] = (l / F >> 0) - ga & 255;
        return u + k;
      }, j.prototype.writeIntBE = function(l, u, k, q) {
        if (l = +l, u = u >>> 0, !q) {
          const Qa = Math.pow(2, 8 * k - 1);
          Ge(this, l, u, k, Qa - 1, -Qa);
        }
        let C = k - 1, F = 1, ga = 0;
        for (this[u + C] = l & 255; --C >= 0 && (F *= 256); )
          l < 0 && ga === 0 && this[u + C + 1] !== 0 && (ga = 1), this[u + C] = (l / F >> 0) - ga & 255;
        return u + k;
      }, j.prototype.writeInt8 = function(l, u, k) {
        return l = +l, u = u >>> 0, k || Ge(this, l, u, 1, 127, -128), l < 0 && (l = 255 + l + 1), this[u] = l & 255, u + 1;
      }, j.prototype.writeInt16LE = function(l, u, k) {
        return l = +l, u = u >>> 0, k || Ge(this, l, u, 2, 32767, -32768), this[u] = l & 255, this[u + 1] = l >>> 8, u + 2;
      }, j.prototype.writeInt16BE = function(l, u, k) {
        return l = +l, u = u >>> 0, k || Ge(this, l, u, 2, 32767, -32768), this[u] = l >>> 8, this[u + 1] = l & 255, u + 2;
      }, j.prototype.writeInt32LE = function(l, u, k) {
        return l = +l, u = u >>> 0, k || Ge(this, l, u, 4, 2147483647, -2147483648), this[u] = l & 255, this[u + 1] = l >>> 8, this[u + 2] = l >>> 16, this[u + 3] = l >>> 24, u + 4;
      }, j.prototype.writeInt32BE = function(l, u, k) {
        return l = +l, u = u >>> 0, k || Ge(this, l, u, 4, 2147483647, -2147483648), l < 0 && (l = 4294967295 + l + 1), this[u] = l >>> 24, this[u + 1] = l >>> 16, this[u + 2] = l >>> 8, this[u + 3] = l & 255, u + 4;
      }, j.prototype.writeBigInt64LE = Ki(function(l, u = 0) {
        return x_(this, l, u, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      }), j.prototype.writeBigInt64BE = Ki(function(l, u = 0) {
        return A_(this, l, u, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      function E_(f, l, u, k, q, C) {
        if (u + k > f.length) throw new RangeError("Index out of range");
        if (u < 0) throw new RangeError("Index out of range");
      }
      function S_(f, l, u, k, q) {
        return l = +l, u = u >>> 0, q || E_(f, l, u, 4), S.write(f, l, u, k, 23, 4), u + 4;
      }
      j.prototype.writeFloatLE = function(l, u, k) {
        return S_(this, l, u, !0, k);
      }, j.prototype.writeFloatBE = function(l, u, k) {
        return S_(this, l, u, !1, k);
      };
      function q_(f, l, u, k, q) {
        return l = +l, u = u >>> 0, q || E_(f, l, u, 8), S.write(f, l, u, k, 52, 8), u + 8;
      }
      j.prototype.writeDoubleLE = function(l, u, k) {
        return q_(this, l, u, !0, k);
      }, j.prototype.writeDoubleBE = function(l, u, k) {
        return q_(this, l, u, !1, k);
      }, j.prototype.copy = function(l, u, k, q) {
        if (!j.isBuffer(l)) throw new TypeError("argument should be a Buffer");
        if (k || (k = 0), !q && q !== 0 && (q = this.length), u >= l.length && (u = l.length), u || (u = 0), q > 0 && q < k && (q = k), q === k || l.length === 0 || this.length === 0) return 0;
        if (u < 0)
          throw new RangeError("targetStart out of bounds");
        if (k < 0 || k >= this.length) throw new RangeError("Index out of range");
        if (q < 0) throw new RangeError("sourceEnd out of bounds");
        q > this.length && (q = this.length), l.length - u < q - k && (q = l.length - u + k);
        const C = q - k;
        return this === l && typeof R.prototype.copyWithin == "function" ? this.copyWithin(u, k, q) : R.prototype.set.call(
          l,
          this.subarray(k, q),
          u
        ), C;
      }, j.prototype.fill = function(l, u, k, q) {
        if (typeof l == "string") {
          if (typeof u == "string" ? (q = u, u = 0, k = this.length) : typeof k == "string" && (q = k, k = this.length), q !== void 0 && typeof q != "string")
            throw new TypeError("encoding must be a string");
          if (typeof q == "string" && !j.isEncoding(q))
            throw new TypeError("Unknown encoding: " + q);
          if (l.length === 1) {
            const F = l.charCodeAt(0);
            (q === "utf8" && F < 128 || q === "latin1") && (l = F);
          }
        } else typeof l == "number" ? l = l & 255 : typeof l == "boolean" && (l = Number(l));
        if (u < 0 || this.length < u || this.length < k)
          throw new RangeError("Out of range index");
        if (k <= u)
          return this;
        u = u >>> 0, k = k === void 0 ? this.length : k >>> 0, l || (l = 0);
        let C;
        if (typeof l == "number")
          for (C = u; C < k; ++C)
            this[C] = l;
        else {
          const F = j.isBuffer(l) ? l : j.from(l, q), ga = F.length;
          if (ga === 0)
            throw new TypeError('The value "' + l + '" is invalid for argument "value"');
          for (C = 0; C < k - u; ++C)
            this[C + u] = F[C % ga];
        }
        return this;
      };
      const vr = {};
      function Gp(f, l, u) {
        vr[f] = class extends u {
          constructor() {
            super(), Object.defineProperty(this, "message", {
              value: l.apply(this, arguments),
              writable: !0,
              configurable: !0
            }), this.name = `${this.name} [${f}]`, this.stack, delete this.name;
          }
          get code() {
            return f;
          }
          set code(q) {
            Object.defineProperty(this, "code", {
              configurable: !0,
              enumerable: !0,
              value: q,
              writable: !0
            });
          }
          toString() {
            return `${this.name} [${f}]: ${this.message}`;
          }
        };
      }
      Gp(
        "ERR_BUFFER_OUT_OF_BOUNDS",
        function(f) {
          return f ? `${f} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
        },
        RangeError
      ), Gp(
        "ERR_INVALID_ARG_TYPE",
        function(f, l) {
          return `The "${f}" argument must be of type number. Received type ${typeof l}`;
        },
        TypeError
      ), Gp(
        "ERR_OUT_OF_RANGE",
        function(f, l, u) {
          let k = `The value of "${f}" is out of range.`, q = u;
          return Number.isInteger(u) && Math.abs(u) > 2 ** 32 ? q = P_(String(u)) : typeof u == "bigint" && (q = String(u), (u > BigInt(2) ** BigInt(32) || u < -(BigInt(2) ** BigInt(32))) && (q = P_(q)), q += "n"), k += ` It must be ${l}. Received ${q}`, k;
        },
        RangeError
      );
      function P_(f) {
        let l = "", u = f.length;
        const k = f[0] === "-" ? 1 : 0;
        for (; u >= k + 4; u -= 3)
          l = `_${f.slice(u - 3, u)}${l}`;
        return `${f.slice(0, u)}${l}`;
      }
      function UN(f, l, u) {
        kr(l, "offset"), (f[l] === void 0 || f[l + u] === void 0) && Ns(l, f.length - (u + 1));
      }
      function T_(f, l, u, k, q, C) {
        if (f > u || f < l) {
          const F = typeof l == "bigint" ? "n" : "";
          let ga;
          throw l === 0 || l === BigInt(0) ? ga = `>= 0${F} and < 2${F} ** ${(C + 1) * 8}${F}` : ga = `>= -(2${F} ** ${(C + 1) * 8 - 1}${F}) and < 2 ** ${(C + 1) * 8 - 1}${F}`, new vr.ERR_OUT_OF_RANGE("value", ga, f);
        }
        UN(k, q, C);
      }
      function kr(f, l) {
        if (typeof f != "number")
          throw new vr.ERR_INVALID_ARG_TYPE(l, "number", f);
      }
      function Ns(f, l, u) {
        throw Math.floor(f) !== f ? (kr(f, u), new vr.ERR_OUT_OF_RANGE("offset", "an integer", f)) : l < 0 ? new vr.ERR_BUFFER_OUT_OF_BOUNDS() : new vr.ERR_OUT_OF_RANGE(
          "offset",
          `>= 0 and <= ${l}`,
          f
        );
      }
      const HN = /[^+/0-9A-Za-z-_]/g;
      function VN(f) {
        if (f = f.split("=")[0], f = f.trim().replace(HN, ""), f.length < 2) return "";
        for (; f.length % 4 !== 0; )
          f = f + "=";
        return f;
      }
      function Yp(f, l) {
        l = l || 1 / 0;
        let u;
        const k = f.length;
        let q = null;
        const C = [];
        for (let F = 0; F < k; ++F) {
          if (u = f.charCodeAt(F), u > 55295 && u < 57344) {
            if (!q) {
              if (u > 56319) {
                (l -= 3) > -1 && C.push(239, 191, 189);
                continue;
              } else if (F + 1 === k) {
                (l -= 3) > -1 && C.push(239, 191, 189);
                continue;
              }
              q = u;
              continue;
            }
            if (u < 56320) {
              (l -= 3) > -1 && C.push(239, 191, 189), q = u;
              continue;
            }
            u = (q - 55296 << 10 | u - 56320) + 65536;
          } else q && (l -= 3) > -1 && C.push(239, 191, 189);
          if (q = null, u < 128) {
            if ((l -= 1) < 0) break;
            C.push(u);
          } else if (u < 2048) {
            if ((l -= 2) < 0) break;
            C.push(
              u >> 6 | 192,
              u & 63 | 128
            );
          } else if (u < 65536) {
            if ((l -= 3) < 0) break;
            C.push(
              u >> 12 | 224,
              u >> 6 & 63 | 128,
              u & 63 | 128
            );
          } else if (u < 1114112) {
            if ((l -= 4) < 0) break;
            C.push(
              u >> 18 | 240,
              u >> 12 & 63 | 128,
              u >> 6 & 63 | 128,
              u & 63 | 128
            );
          } else
            throw new Error("Invalid code point");
        }
        return C;
      }
      function KN(f) {
        const l = [];
        for (let u = 0; u < f.length; ++u)
          l.push(f.charCodeAt(u) & 255);
        return l;
      }
      function GN(f, l) {
        let u, k, q;
        const C = [];
        for (let F = 0; F < f.length && !((l -= 2) < 0); ++F)
          u = f.charCodeAt(F), k = u >> 8, q = u % 256, C.push(q), C.push(k);
        return C;
      }
      function R_(f) {
        return _.toByteArray(VN(f));
      }
      function Gd(f, l, u, k) {
        let q;
        for (q = 0; q < k && !(q + u >= l.length || q >= f.length); ++q)
          l[q + u] = f[q];
        return q;
      }
      function Ft(f, l) {
        return f instanceof l || f != null && f.constructor != null && f.constructor.name != null && f.constructor.name === l.name;
      }
      function Zp(f) {
        return f !== f;
      }
      const YN = function() {
        const f = "0123456789abcdef", l = new Array(256);
        for (let u = 0; u < 16; ++u) {
          const k = u * 16;
          for (let q = 0; q < 16; ++q)
            l[k + q] = f[u] + f[q];
        }
        return l;
      }();
      function Ki(f) {
        return typeof BigInt > "u" ? ZN : f;
      }
      function ZN() {
        throw new Error("BigInt not supported");
      }
    })(e);
    const z = e.Buffer;
    a.Blob = e.Blob, a.BlobOptions = e.BlobOptions, a.Buffer = e.Buffer, a.File = e.File, a.FileOptions = e.FileOptions, a.INSPECT_MAX_BYTES = e.INSPECT_MAX_BYTES, a.SlowBuffer = e.SlowBuffer, a.TranscodeEncoding = e.TranscodeEncoding, a.atob = e.atob, a.btoa = e.btoa, a.constants = e.constants, a.default = z, a.isAscii = e.isAscii, a.isUtf8 = e.isUtf8, a.kMaxLength = e.kMaxLength, a.kStringMaxLength = e.kStringMaxLength, a.resolveObjectURL = e.resolveObjectURL, a.transcode = e.transcode;
  }(Tz)), Tz;
}
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
var Bq;
function KPe() {
  return Bq || (Bq = 1, function(a, e) {
    var t = sD(), i = t.Buffer;
    function n(s, o) {
      for (var d in s)
        o[d] = s[d];
    }
    i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? a.exports = t : (n(t, e), e.Buffer = r);
    function r(s, o, d) {
      return i(s, o, d);
    }
    r.prototype = Object.create(i.prototype), n(i, r), r.from = function(s, o, d) {
      if (typeof s == "number")
        throw new TypeError("Argument must not be a number");
      return i(s, o, d);
    }, r.alloc = function(s, o, d) {
      if (typeof s != "number")
        throw new TypeError("Argument must be a number");
      var c = i(s);
      return o !== void 0 ? typeof d == "string" ? c.fill(o, d) : c.fill(o) : c.fill(0), c;
    }, r.allocUnsafe = function(s) {
      if (typeof s != "number")
        throw new TypeError("Argument must be a number");
      return i(s);
    }, r.allocUnsafeSlow = function(s) {
      if (typeof s != "number")
        throw new TypeError("Argument must be a number");
      return t.SlowBuffer(s);
    };
  }(il, il.exports)), il.exports;
}
var Nq;
function GPe() {
  if (Nq) return Pz;
  Nq = 1;
  var a = KPe().Buffer, e = a.isEncoding || function(z) {
    switch (z = "" + z, z && z.toLowerCase()) {
      case "hex":
      case "utf8":
      case "utf-8":
      case "ascii":
      case "binary":
      case "base64":
      case "ucs2":
      case "ucs-2":
      case "utf16le":
      case "utf-16le":
      case "raw":
        return !0;
      default:
        return !1;
    }
  };
  function t(z) {
    if (!z) return "utf8";
    for (var b; ; )
      switch (z) {
        case "utf8":
        case "utf-8":
          return "utf8";
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return "utf16le";
        case "latin1":
        case "binary":
          return "latin1";
        case "base64":
        case "ascii":
        case "hex":
          return z;
        default:
          if (b) return;
          z = ("" + z).toLowerCase(), b = !0;
      }
  }
  function i(z) {
    var b = t(z);
    if (typeof b != "string" && (a.isEncoding === e || !e(z))) throw new Error("Unknown encoding: " + z);
    return b || z;
  }
  Pz.StringDecoder = n;
  function n(z) {
    this.encoding = i(z);
    var b;
    switch (this.encoding) {
      case "utf16le":
        this.text = m, this.end = w, b = 4;
        break;
      case "utf8":
        this.fillLast = d, b = 4;
        break;
      case "base64":
        this.text = v, this.end = $, b = 3;
        break;
      default:
        this.write = P, this.end = h;
        return;
    }
    this.lastNeed = 0, this.lastTotal = 0, this.lastChar = a.allocUnsafe(b);
  }
  n.prototype.write = function(z) {
    if (z.length === 0) return "";
    var b, _;
    if (this.lastNeed) {
      if (b = this.fillLast(z), b === void 0) return "";
      _ = this.lastNeed, this.lastNeed = 0;
    } else
      _ = 0;
    return _ < z.length ? b ? b + this.text(z, _) : this.text(z, _) : b || "";
  }, n.prototype.end = p, n.prototype.text = c, n.prototype.fillLast = function(z) {
    if (this.lastNeed <= z.length)
      return z.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
    z.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, z.length), this.lastNeed -= z.length;
  };
  function r(z) {
    return z <= 127 ? 0 : z >> 5 === 6 ? 2 : z >> 4 === 14 ? 3 : z >> 3 === 30 ? 4 : z >> 6 === 2 ? -1 : -2;
  }
  function s(z, b, _) {
    var S = b.length - 1;
    if (S < _) return 0;
    var A = r(b[S]);
    return A >= 0 ? (A > 0 && (z.lastNeed = A - 1), A) : --S < _ || A === -2 ? 0 : (A = r(b[S]), A >= 0 ? (A > 0 && (z.lastNeed = A - 2), A) : --S < _ || A === -2 ? 0 : (A = r(b[S]), A >= 0 ? (A > 0 && (A === 2 ? A = 0 : z.lastNeed = A - 3), A) : 0));
  }
  function o(z, b, _) {
    if ((b[0] & 192) !== 128)
      return z.lastNeed = 0, "�";
    if (z.lastNeed > 1 && b.length > 1) {
      if ((b[1] & 192) !== 128)
        return z.lastNeed = 1, "�";
      if (z.lastNeed > 2 && b.length > 2 && (b[2] & 192) !== 128)
        return z.lastNeed = 2, "�";
    }
  }
  function d(z) {
    var b = this.lastTotal - this.lastNeed, _ = o(this, z);
    if (_ !== void 0) return _;
    if (this.lastNeed <= z.length)
      return z.copy(this.lastChar, b, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
    z.copy(this.lastChar, b, 0, z.length), this.lastNeed -= z.length;
  }
  function c(z, b) {
    var _ = s(this, z, b);
    if (!this.lastNeed) return z.toString("utf8", b);
    this.lastTotal = _;
    var S = z.length - (_ - this.lastNeed);
    return z.copy(this.lastChar, 0, S), z.toString("utf8", b, S);
  }
  function p(z) {
    var b = z && z.length ? this.write(z) : "";
    return this.lastNeed ? b + "�" : b;
  }
  function m(z, b) {
    if ((z.length - b) % 2 === 0) {
      var _ = z.toString("utf16le", b);
      if (_) {
        var S = _.charCodeAt(_.length - 1);
        if (S >= 55296 && S <= 56319)
          return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = z[z.length - 2], this.lastChar[1] = z[z.length - 1], _.slice(0, -1);
      }
      return _;
    }
    return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = z[z.length - 1], z.toString("utf16le", b, z.length - 1);
  }
  function w(z) {
    var b = z && z.length ? this.write(z) : "";
    if (this.lastNeed) {
      var _ = this.lastTotal - this.lastNeed;
      return b + this.lastChar.toString("utf16le", 0, _);
    }
    return b;
  }
  function v(z, b) {
    var _ = (z.length - b) % 3;
    return _ === 0 ? z.toString("base64", b) : (this.lastNeed = 3 - _, this.lastTotal = 3, _ === 1 ? this.lastChar[0] = z[z.length - 1] : (this.lastChar[0] = z[z.length - 2], this.lastChar[1] = z[z.length - 1]), z.toString("base64", b, z.length - _));
  }
  function $(z) {
    var b = z && z.length ? this.write(z) : "";
    return this.lastNeed ? b + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : b;
  }
  function P(z) {
    return z.toString(this.encoding);
  }
  function h(z) {
    return z && z.length ? this.write(z) : "";
  }
  return Pz;
}
var Rz, Uq;
function oD() {
  if (Uq) return Rz;
  Uq = 1, Rz = n;
  var a = XF, e = rD.Writable, t = GPe().StringDecoder, i = sD().Buffer;
  function n(r, s) {
    var o = this._parser = new a(r, s), d = this._decoder = new t();
    e.call(this, { decodeStrings: !1 }), this.once("finish", function() {
      o.end(d.end());
    });
  }
  return ud(n, e), n.prototype._write = function(r, s, o) {
    r instanceof i && (r = this._decoder.write(r)), this._parser.write(r), o();
  }, Rz;
}
var Oz, Hq;
function YPe() {
  if (Hq) return Oz;
  Hq = 1, Oz = e;
  var a = oD();
  function e(n) {
    a.call(this, new t(this), n);
  }
  ud(e, a), e.prototype.readable = !0;
  function t(n) {
    this.scope = n;
  }
  var i = bd().EVENTS;
  return Object.keys(i).forEach(function(n) {
    if (i[n] === 0)
      t.prototype["on" + n] = function() {
        this.scope.emit(n);
      };
    else if (i[n] === 1)
      t.prototype["on" + n] = function(r) {
        this.scope.emit(n, r);
      };
    else if (i[n] === 2)
      t.prototype["on" + n] = function(r, s) {
        this.scope.emit(n, r, s);
      };
    else
      throw Error("wrong number of arguments!");
  }), Oz;
}
var Mz, Vq;
function ZPe() {
  if (Vq) return Mz;
  Vq = 1, Mz = a;
  function a(t) {
    this._cbs = t || {};
  }
  var e = bd().EVENTS;
  return Object.keys(e).forEach(function(t) {
    if (e[t] === 0)
      t = "on" + t, a.prototype[t] = function() {
        this._cbs[t] && this._cbs[t]();
      };
    else if (e[t] === 1)
      t = "on" + t, a.prototype[t] = function(i) {
        this._cbs[t] && this._cbs[t](i);
      };
    else if (e[t] === 2)
      t = "on" + t, a.prototype[t] = function(i, n) {
        this._cbs[t] && this._cbs[t](i, n);
      };
    else
      throw Error("wrong number of arguments");
  }), Mz;
}
var Cz, Kq;
function XPe() {
  if (Kq) return Cz;
  Kq = 1, Cz = a;
  function a(t) {
    this._cbs = t || {}, this.events = [];
  }
  var e = bd().EVENTS;
  return Object.keys(e).forEach(function(t) {
    if (e[t] === 0)
      t = "on" + t, a.prototype[t] = function() {
        this.events.push([t]), this._cbs[t] && this._cbs[t]();
      };
    else if (e[t] === 1)
      t = "on" + t, a.prototype[t] = function(i) {
        this.events.push([t, i]), this._cbs[t] && this._cbs[t](i);
      };
    else if (e[t] === 2)
      t = "on" + t, a.prototype[t] = function(i, n) {
        this.events.push([t, i, n]), this._cbs[t] && this._cbs[t](i, n);
      };
    else
      throw Error("wrong number of arguments");
  }), a.prototype.onreset = function() {
    this.events = [], this._cbs.onreset && this._cbs.onreset();
  }, a.prototype.restart = function() {
    this._cbs.onreset && this._cbs.onreset();
    for (var t = 0, i = this.events.length; t < i; t++)
      if (this._cbs[this.events[t][0]]) {
        var n = this.events[t].length;
        n === 1 ? this._cbs[this.events[t][0]]() : n === 2 ? this._cbs[this.events[t][0]](this.events[t][1]) : this._cbs[this.events[t][0]](
          this.events[t][1],
          this.events[t][2]
        );
      }
  }, Cz;
}
var Gq;
function bd() {
  return Gq || (Gq = 1, function(a) {
    var e = XF, t = eD;
    function i(n, r) {
      return delete a.exports[n], a.exports[n] = r, r;
    }
    a.exports = {
      Parser: e,
      Tokenizer: nF,
      ElementType: hd,
      DomHandler: t,
      get FeedHandler() {
        return i("FeedHandler", UPe());
      },
      get Stream() {
        return i("Stream", YPe());
      },
      get WritableStream() {
        return i("WritableStream", oD());
      },
      get ProxyHandler() {
        return i("ProxyHandler", ZPe());
      },
      get DomUtils() {
        return i("DomUtils", nD());
      },
      get CollectingHandler() {
        return i(
          "CollectingHandler",
          XPe()
        );
      },
      // For legacy support
      DefaultHandler: t,
      get RssHandler() {
        return i("RssHandler", this.FeedHandler);
      },
      //helper methods
      parseDOM: function(n, r) {
        var s = new t(r);
        return new e(s, r).end(n), s.dom;
      },
      parseFeed: function(n, r) {
        var s = new a.exports.FeedHandler(r);
        return new e(s, r).end(n), s.dom;
      },
      createDomStream: function(n, r, s) {
        var o = new t(n, r, s);
        return new e(o, r);
      },
      // List of all events that the parser emits
      EVENTS: {
        /* Format: eventname: number of arguments */
        attribute: 2,
        cdatastart: 0,
        cdataend: 0,
        text: 1,
        processinginstruction: 2,
        comment: 1,
        commentend: 0,
        closetag: 1,
        opentag: 2,
        opentagname: 1,
        error: 1,
        end: 0
      }
    };
  }(kz)), kz.exports;
}
Object.defineProperty(Su, "__esModule", {
  value: !0
});
Su.default = function(a) {
  return ro = [], eTe.write(a), ro.join("");
};
var JPe = bd(), QPe = aTe(JPe), Yq = I;
function aTe(a) {
  return a && a.__esModule ? a : { default: a };
}
let ro, Lz = !1;
const Zq = ["script", "style", "code", "pre"], eTe = new QPe.default.Parser({
  /**
   * Handles the opening tag. If the opening tag is included in the inlineTags array, set inScriptBlock to true.
   * If the opening tag is not included in the inlineTags array, push the tag to the textArray.
   *
   * @param {string} tagName The tag name.
   * @param {object} nodeValue The attribute with the keys and values of the tag.
   * @returns {void}
   */
  onopentag: function(e, t) {
    if ((0, Yq.includes)(Zq, e)) {
      Lz = !0;
      return;
    }
    const i = Object.keys(t);
    let n = "";
    i.forEach(function(r) {
      n += " " + r + "='" + t[r] + "'";
    }), ro.push("<" + e + n + ">");
  },
  /**
   * Handles the text that doesn't contain opening or closing tags. If inScriptBlock is false, the text gets pushed to the textArray array.
   *
   * @param {string} text The text that doesn't contain opening or closing tags.
   *
   * @returns {void}
   */
  ontext: function(e) {
    Lz || ro.push(e);
  },
  /**
   * Handles the closing tag. If the closing tag is included in the inlineTags array, set inScriptBlock to false.
   * If the closing tag is not included in the inlineTags array, push the tag to the textArray.
   *
   * @param {string} tagName The tag name.
   *
   * @returns {void}
   */
  onclosetag: function(e) {
    if ((0, Yq.includes)(Zq, e)) {
      Lz = !1;
      return;
    }
    ro.push("</" + e + ">");
  }
}, { decodeEntities: !0 });
var vd = {}, gr = {};
Object.defineProperty(gr, "__esModule", {
  value: !0
});
gr.default = function(a, e = !1, t = "", i = "") {
  var n, r, s;
  return i === "id_ID" ? n = '[ \\u00a0 \\n\\r\\t.,()”“〝〞〟‟„"+;!¡?¿:/»«‹›' + t + "<>" : n = '[ \\u00a0\\u06d4\\u061f\\u060C\\u061B \\n\\r\\t.,()”“〝〞〟‟„"+\\-;!¡?¿:/»«‹›' + t + "<>", r = "(^|" + n + "'‘’‛`])", e ? s = "($|((?=" + n + "]))|((['‘’‛`])(" + n + "])))" : s = "($|(" + n + "])|((['‘’‛`])(" + n + "])))", r + a + s;
};
var Tu = {};
Object.defineProperty(Tu, "__esModule", {
  value: !0
});
Tu.default = function(a) {
  return a = (0, tTe.stripFullTags)(a), a = (0, nTe.default)(a), a;
};
var tTe = re, iTe = be, nTe = rTe(iTe);
function rTe(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(vd, "__esModule", {
  value: !0
});
var nl = I, sTe = $s, oTe = gb(sTe), dTe = gr, lTe = gb(dTe), cTe = Tu, uTe = gb(cTe);
function gb(a) {
  return a && a.__esModule ? a : { default: a };
}
vd.default = (0, nl.memoize)(function(a, e, t) {
  return (0, nl.isUndefined)(e) && (e = ""), ((0, nl.isUndefined)(t) || t === !0) && (a = (0, oTe.default)(a)), a = (0, uTe.default)(a), a = (0, nl.escapeRegExp)(a), a = (0, lTe.default)(a, !1, e), new RegExp(a, "ig");
});
var Ru = {};
Object.defineProperty(Ru, "__esModule", {
  value: !0
});
Ru.default = function() {
  return [
    // Whitespace is always a word boundary.
    " ",
    "\\n",
    "\\r",
    "\\t",
    // NO-BREAK SPACE.
    " ",
    // \u06d4 - Urdu full stop
    "۔",
    // \u061f - Arabic question mark
    "؟",
    // \u060C - Arabic comma
    "،",
    // \u061B - Arabic semicolon
    "؛",
    " ",
    ".",
    ",",
    "'",
    "(",
    ")",
    '"',
    "+",
    "-",
    ";",
    "!",
    "?",
    ":",
    "/",
    "»",
    "«",
    "‹",
    "›",
    "<",
    ">",
    "”",
    "“",
    "〝",
    "〞",
    "〟",
    "‟",
    "„"
  ];
};
var Wi = {};
Object.defineProperty(Wi, "__esModule", {
  value: !0
});
Wi.default = function(a, e = !1, t = "", i = !1) {
  a = (0, pTe.map)(a, function(r) {
    return i && (r = (0, fTe.default)(r)), r = (0, wTe.default)(r), e ? r : (0, gTe.default)(r, !0, t);
  });
  const n = "(" + a.join(")|(") + ")";
  return new RegExp(n, "ig");
};
var pTe = I, mTe = gr, gTe = zb(mTe), zTe = $s, fTe = zb(zTe), yTe = Tu, wTe = zb(yTe);
function zb(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(Ha, "__esModule", {
  value: !0
});
var dD = Ha.__createWordRegex = yD = Ha.createRegexFromArray = fD = Ha.wordBoundaries = zD = Ha.removeHtmlBlocks = gD = Ha.relevantWords = mD = Ha.imageInText = pD = Ha.replaceDiacritics = uD = Ha.transliterate = cD = Ha.stripSpaces = lD = Ha.stripHTMLTags = void 0, hTe = re, bTe = be, vTe = Fi(bTe), kTe = pd, _Te = Fi(kTe), $Te = $s, jTe = Fi($Te), xTe = ur, ATe = Fi(xTe), ETe = Ta, STe = Fi(ETe), qTe = Su, PTe = Fi(qTe), TTe = vd, RTe = Fi(TTe), OTe = Ru, MTe = Fi(OTe), CTe = Wi, LTe = Fi(CTe);
function Fi(a) {
  return a && a.__esModule ? a : { default: a };
}
var lD = Ha.stripHTMLTags = hTe.stripFullTags, cD = Ha.stripSpaces = vTe.default, uD = Ha.transliterate = _Te.default, pD = Ha.replaceDiacritics = jTe.default, mD = Ha.imageInText = ATe.default, gD = Ha.relevantWords = STe.default, zD = Ha.removeHtmlBlocks = PTe.default, fD = Ha.wordBoundaries = MTe.default, yD = Ha.createRegexFromArray = LTe.default;
dD = Ha.__createWordRegex = RTe.default;
const ITe = /* @__PURE__ */ Xn({
  __proto__: null,
  get __createWordRegex() {
    return dD;
  },
  get createRegexFromArray() {
    return yD;
  },
  default: Ha,
  get imageInText() {
    return mD;
  },
  get relevantWords() {
    return gD;
  },
  get removeHtmlBlocks() {
    return zD;
  },
  get replaceDiacritics() {
    return pD;
  },
  get stripHTMLTags() {
    return lD;
  },
  get stripSpaces() {
    return cD;
  },
  get transliterate() {
    return uD;
  },
  get wordBoundaries() {
    return fD;
  }
}, [Ha]);
var Zn = {};
Object.defineProperty(Zn, "__esModule", {
  value: !0
});
var wD = Zn.scoreToRating = void 0, WTe = _s, FTe = DTe(WTe);
function DTe(a) {
  return a && a.__esModule ? a : { default: a };
}
wD = Zn.scoreToRating = FTe.default;
const BTe = /* @__PURE__ */ Xn({
  __proto__: null,
  default: Zn,
  get scoreToRating() {
    return wD;
  }
}, [Zn]);
var Jr = {}, Ou = {};
Object.defineProperty(Ou, "__esModule", {
  value: !0
});
Ou.default = function(a) {
  const e = a.dgettext("js-text-analysis", "Content optimization:");
  return {
    feedback: {
      className: "na",
      screenReaderText: a.dgettext("js-text-analysis", "Feedback"),
      fullText: `${e} ${a.dgettext("js-text-analysis", "Has feedback")}`,
      screenReaderReadabilityText: ""
    },
    bad: {
      className: "bad",
      screenReaderText: a.dgettext("js-text-analysis", "Needs improvement"),
      fullText: `${e} ${a.dgettext("js-text-analysis", "Needs improvement")}`,
      screenReaderReadabilityText: a.dgettext("js-text-analysis", "Needs improvement")
    },
    ok: {
      className: "ok",
      screenReaderText: a.dgettext("js-text-analysis", "OK SEO score"),
      fullText: `${e} ${a.dgettext("js-text-analysis", "OK SEO score")}`,
      screenReaderReadabilityText: a.dgettext("js-text-analysis", "OK")
    },
    good: {
      className: "good",
      screenReaderText: a.dgettext("js-text-analysis", "Good SEO score"),
      fullText: `${e} ${a.dgettext("js-text-analysis", "Good SEO score")}`,
      screenReaderReadabilityText: a.dgettext("js-text-analysis", "Good")
    }
  };
};
Object.defineProperty(Jr, "__esModule", {
  value: !0
});
var hD = Jr.presenter = void 0, NTe = Ou, UTe = HTe(NTe);
function HTe(a) {
  return a && a.__esModule ? a : { default: a };
}
hD = Jr.presenter = UTe.default;
const VTe = /* @__PURE__ */ Xn({
  __proto__: null,
  default: Jr,
  get presenter() {
    return hD;
  }
}, [Jr]);
var Lt = {}, kd = {}, fb = {};
Object.defineProperty(fb, "__esModule", {
  value: !0
});
fb.default = function(a) {
  return (0, GTe.default)(a.getText());
};
var KTe = Le, GTe = YTe(KTe);
function YTe(a) {
  return a && a.__esModule ? a : { default: a };
}
var _d = {};
Object.defineProperty(_d, "__esModule", {
  value: !0
});
var ZTe = Pa, XTe = JTe(ZTe);
function JTe(a) {
  return a && a.__esModule ? a : { default: a };
}
function bD(a) {
  Error.captureStackTrace(this, this.constructor), this.name = this.constructor.name, this.message = a;
}
XTe.default.inherits(bD, Error);
_d.default = bD;
var Mu = {};
Object.defineProperty(Mu, "__esModule", {
  value: !0
});
Mu.default = function(a) {
  return (0, aRe.default)(a.getText());
};
var QTe = ut, aRe = eRe(QTe);
function eRe(a) {
  return a && a.__esModule ? a : { default: a };
}
var yb = {}, $d = {};
Object.defineProperty($d, "__esModule", {
  value: !0
});
$d.default = function(a, e) {
  ((0, rl.isUndefined)(e) || e === "") && (e = "en");
  const t = (0, rl.get)(rRe, [e], []);
  if (a.length > 1) {
    const i = (0, rl.filter)(a, function(n) {
      return !(0, rl.includes)(t.all, n.trim().toLocaleLowerCase());
    });
    if (i.length > 0)
      return i;
  }
  return a;
};
var tRe = fn, iRe = nRe(tRe), rl = I;
function nRe(a) {
  return a && a.__esModule ? a : { default: a };
}
const rRe = (0, iRe.default)();
var wb = {};
Object.defineProperty(wb, "__esModule", {
  value: !0
});
wb.default = function(a) {
  let e = "Dofollow";
  const t = new oRe.default.Parser({
    /**
     * Detects if there is a `nofollow` value in the `rel` attribute of a link.
     *
     * @param {string} tagName The tag name.
     * @param {object} attributes The tag attributes with the names and values of each attribute found.
     * @returns {void}
     */
    onopentag: function(n, r) {
      n !== "a" || !r.rel || r.rel.toLowerCase().split(/\s/).includes("nofollow") && (e = "Nofollow");
    }
  });
  return t.write(a), t.end(), e;
};
var sRe = bd(), oRe = dRe(sRe);
function dRe(a) {
  return a && a.__esModule ? a : { default: a };
}
var hb = {}, vt = {}, vn = {}, Cu = {}, Lu = {};
Object.defineProperty(Lu, "__esModule", {
  value: !0
});
Lu.default = function(a) {
  return a = a.replace(/<(?!li|\/li|p|\/p|h1|\/h1|h2|\/h2|h3|\/h3|h4|\/h4|h5|\/h5|h6|\/h6|dd).*?>/g, ""), a = (0, cRe.default)(a), a;
};
var lRe = be, cRe = uRe(lRe);
function uRe(a) {
  return a && a.__esModule ? a : { default: a };
}
var bb = {}, vb = {}, kb = {};
Object.defineProperty(kb, "__esModule", {
  value: !0
});
kb.default = function(a) {
  if ((0, gRe.isUndefined)(a))
    return [];
  let e = fRe;
  return e = e.concat(yRe((0, mRe.default)(a))), e;
};
var pRe = Ya, mRe = zRe(pRe), gRe = I;
function zRe(a) {
  return a && a.__esModule ? a : { default: a };
}
const fRe = [
  /*
   * These transliteration objects are not language-specific, and will be applied independently on the locale.
   *
   * Currency signs:
   *
   * |   Code   | Glyph | Replacement |     Description     |
   * | -------- | ----- | ----------- | ------------------- |
   * | U+00A3   | £     | (empty)     | British Pound sign  |
   * | U+20AC   | €     | E           | Euro sign           |
   *
   * Decompositions for Latin-1 Supplement:
   *
   * |  Code   | Glyph | Replacement |               Description              |
   * | ------- | ----- | ----------- | -------------------------------------- |
   * | U+00AA  | ª     | a           | Feminine ordinal indicator             |
   * | U+00BA  | º     | o           | Masculine ordinal indicator            |
   * | U+00C0  | À     | A           | Latin capital letter A with grave      |
   * | U+00C1  | Á     | A           | Latin capital letter A with acute      |
   * | U+00C2  | Â     | A           | Latin capital letter A with circumflex |
   * | U+00C3  | Ã     | A           | Latin capital letter A with tilde      |
   * | U+00C4  | Ä     | A           | Latin capital letter A with diaeresis  |
   * | U+00C5  | Å     | A           | Latin capital letter A with ring above |
   * | U+00C6  | Æ     | AE          | Latin capital letter AE                |
   * | U+00C7  | Ç     | C           | Latin capital letter C with cedilla    |
   * | U+00C8  | È     | E           | Latin capital letter E with grave      |
   * | U+00C9  | É     | E           | Latin capital letter E with acute      |
   * | U+00CA  | Ê     | E           | Latin capital letter E with circumflex |
   * | U+00CB  | Ë     | E           | Latin capital letter E with diaeresis  |
   * | U+00CC  | Ì     | I           | Latin capital letter I with grave      |
   * | U+00CD  | Í     | I           | Latin capital letter I with acute      |
   * | U+00CE  | Î     | I           | Latin capital letter I with circumflex |
   * | U+00CF  | Ï     | I           | Latin capital letter I with diaeresis  |
   * | U+00D0  | Ð     | D           | Latin capital letter Eth               |
   * | U+00D1  | Ñ     | N           | Latin capital letter N with tilde      |
   * | U+00D2  | Ò     | O           | Latin capital letter O with grave      |
   * | U+00D3  | Ó     | O           | Latin capital letter O with acute      |
   * | U+00D4  | Ô     | O           | Latin capital letter O with circumflex |
   * | U+00D5  | Õ     | O           | Latin capital letter O with tilde      |
   * | U+00D6  | Ö     | O           | Latin capital letter O with diaeresis  |
   * | U+00D8  | Ø     | O           | Latin capital letter O with stroke     |
   * | U+00D9  | Ù     | U           | Latin capital letter U with grave      |
   * | U+00DA  | Ú     | U           | Latin capital letter U with acute      |
   * | U+00DB  | Û     | U           | Latin capital letter U with circumflex |
   * | U+00DC  | Ü     | U           | Latin capital letter U with diaeresis  |
   * | U+00DD  | Ý     | Y           | Latin capital letter Y with acute      |
   * | U+00DE  | Þ     | TH          | Latin capital letter Thorn             |
   * | U+00DF  | ß     | s           | Latin small letter sharp s             |
   * | U+00E0  | à     | a           | Latin small letter a with grave        |
   * | U+00E1  | á     | a           | Latin small letter a with acute        |
   * | U+00E2  | â     | a           | Latin small letter a with circumflex   |
   * | U+00E3  | ã     | a           | Latin small letter a with tilde        |
   * | U+00E4  | ä     | a           | Latin small letter a with diaeresis    |
   * | U+00E5  | å     | a           | Latin small letter a with ring above   |
   * | U+00E6  | æ     | ae          | Latin small letter ae                  |
   * | U+00E7  | ç     | c           | Latin small letter c with cedilla      |
   * | U+00E8  | è     | e           | Latin small letter e with grave        |
   * | U+00E9  | é     | e           | Latin small letter e with acute        |
   * | U+00EA  | ê     | e           | Latin small letter e with circumflex   |
   * | U+00EB  | ë     | e           | Latin small letter e with diaeresis    |
   * | U+00EC  | ì     | i           | Latin small letter i with grave        |
   * | U+00ED  | í     | i           | Latin small letter i with acute        |
   * | U+00EE  | î     | i           | Latin small letter i with circumflex   |
   * | U+00EF  | ï     | i           | Latin small letter i with diaeresis    |
   * | U+00F0  | ð     | d           | Latin small letter Eth                 |
   * | U+00F1  | ñ     | n           | Latin small letter n with tilde        |
   * | U+00F2  | ò     | o           | Latin small letter o with grave        |
   * | U+00F3  | ó     | o           | Latin small letter o with acute        |
   * | U+00F4  | ô     | o           | Latin small letter o with circumflex   |
   * | U+00F5  | õ     | o           | Latin small letter o with tilde        |
   * | U+00F6  | ö     | o           | Latin small letter o with diaeresis    |
   * | U+00F8  | ø     | o           | Latin small letter o with stroke       |
   * | U+00F9  | ù     | u           | Latin small letter u with grave        |
   * | U+00FA  | ú     | u           | Latin small letter u with acute        |
   * | U+00FB  | û     | u           | Latin small letter u with circumflex   |
   * | U+00FC  | ü     | u           | Latin small letter u with diaeresis    |
   * | U+00FD  | ý     | y           | Latin small letter y with acute        |
   * | U+00FE  | þ     | th          | Latin small letter Thorn               |
   * | U+00FF  | ÿ     | y           | Latin small letter y with diaeresis    |
   *
   * Decompositions for Latin Extended-A:
   *
   * |  Code   | Glyph | Replacement |                    Description                    |
   * | ------- | ----- | ----------- | ------------------------------------------------- |
   * | U+0100  | Ā     | A           | Latin capital letter A with macron                |
   * | U+0101  | ā     | a           | Latin small letter a with macron                  |
   * | U+0102  | Ă     | A           | Latin capital letter A with breve                 |
   * | U+0103  | ă     | a           | Latin small letter a with breve                   |
   * | U+0104  | Ą     | A           | Latin capital letter A with ogonek                |
   * | U+0105  | ą     | a           | Latin small letter a with ogonek                  |
   * | U+0106  | Ć     | C           | Latin capital letter C with acute                 |
   * | U+0107  | ć     | c           | Latin small letter c with acute                   |
   * | U+0108  | Ĉ     | C           | Latin capital letter C with circumflex            |
   * | U+0109  | ĉ     | c           | Latin small letter c with circumflex              |
   * | U+010A  | Ċ     | C           | Latin capital letter C with dot above             |
   * | U+010B  | ċ     | c           | Latin small letter c with dot above               |
   * | U+010C  | Č     | C           | Latin capital letter C with caron                 |
   * | U+010D  | č     | c           | Latin small letter c with caron                   |
   * | U+010E  | Ď     | D           | Latin capital letter D with caron                 |
   * | U+010F  | ď     | d           | Latin small letter d with caron                   |
   * | U+0110  | Đ     | D           | Latin capital letter D with stroke                |
   * | U+0111  | đ     | d           | Latin small letter d with stroke                  |
   * | U+0112  | Ē     | E           | Latin capital letter E with macron                |
   * | U+0113  | ē     | e           | Latin small letter e with macron                  |
   * | U+0114  | Ĕ     | E           | Latin capital letter E with breve                 |
   * | U+0115  | ĕ     | e           | Latin small letter e with breve                   |
   * | U+0116  | Ė     | E           | Latin capital letter E with dot above             |
   * | U+0117  | ė     | e           | Latin small letter e with dot above               |
   * | U+0118  | Ę     | E           | Latin capital letter E with ogonek                |
   * | U+0119  | ę     | e           | Latin small letter e with ogonek                  |
   * | U+011A  | Ě     | E           | Latin capital letter E with caron                 |
   * | U+011B  | ě     | e           | Latin small letter e with caron                   |
   * | U+011C  | Ĝ     | G           | Latin capital letter G with circumflex            |
   * | U+011D  | ĝ     | g           | Latin small letter g with circumflex              |
   * | U+011E  | Ğ     | G           | Latin capital letter G with breve                 |
   * | U+011F  | ğ     | g           | Latin small letter g with breve                   |
   * | U+0120  | Ġ     | G           | Latin capital letter G with dot above             |
   * | U+0121  | ġ     | g           | Latin small letter g with dot above               |
   * | U+0122  | Ģ     | G           | Latin capital letter G with cedilla               |
   * | U+0123  | ģ     | g           | Latin small letter g with cedilla                 |
   * | U+0124  | Ĥ     | H           | Latin capital letter H with circumflex            |
   * | U+0125  | ĥ     | h           | Latin small letter h with circumflex              |
   * | U+0126  | Ħ     | H           | Latin capital letter H with stroke                |
   * | U+0127  | ħ     | h           | Latin small letter h with stroke                  |
   * | U+0128  | Ĩ     | I           | Latin capital letter I with tilde                 |
   * | U+0129  | ĩ     | i           | Latin small letter i with tilde                   |
   * | U+012A  | Ī     | I           | Latin capital letter I with macron                |
   * | U+012B  | ī     | i           | Latin small letter i with macron                  |
   * | U+012C  | Ĭ     | I           | Latin capital letter I with breve                 |
   * | U+012D  | ĭ     | i           | Latin small letter i with breve                   |
   * | U+012E  | Į     | I           | Latin capital letter I with ogonek                |
   * | U+012F  | į     | i           | Latin small letter i with ogonek                  |
   * | U+0130  | İ     | I           | Latin capital letter I with dot above             |
   * | U+0131  | ı     | i           | Latin small letter dotless i                      |
   * | U+0132  | Ĳ     | IJ          | Latin capital ligature IJ                         |
   * | U+0133  | ĳ     | ij          | Latin small ligature ij                           |
   * | U+0134  | Ĵ     | J           | Latin capital letter J with circumflex            |
   * | U+0135  | ĵ     | j           | Latin small letter j with circumflex              |
   * | U+0136  | Ķ     | K           | Latin capital letter K with cedilla               |
   * | U+0137  | ķ     | k           | Latin small letter k with cedilla                 |
   * | U+0138  | ĸ     | k           | Latin small letter Kra                            |
   * | U+0139  | Ĺ     | L           | Latin capital letter L with acute                 |
   * | U+013A  | ĺ     | l           | Latin small letter l with acute                   |
   * | U+013B  | Ļ     | L           | Latin capital letter L with cedilla               |
   * | U+013C  | ļ     | l           | Latin small letter l with cedilla                 |
   * | U+013D  | Ľ     | L           | Latin capital letter L with caron                 |
   * | U+013E  | ľ     | l           | Latin small letter l with caron                   |
   * | U+013F  | Ŀ     | L           | Latin capital letter L with middle dot            |
   * | U+0140  | ŀ     | l           | Latin small letter l with middle dot              |
   * | U+0141  | Ł     | L           | Latin capital letter L with stroke                |
   * | U+0142  | ł     | l           | Latin small letter l with stroke                  |
   * | U+0143  | Ń     | N           | Latin capital letter N with acute                 |
   * | U+0144  | ń     | n           | Latin small letter N with acute                   |
   * | U+0145  | Ņ     | N           | Latin capital letter N with cedilla               |
   * | U+0146  | ņ     | n           | Latin small letter n with cedilla                 |
   * | U+0147  | Ň     | N           | Latin capital letter N with caron                 |
   * | U+0148  | ň     | n           | Latin small letter n with caron                   |
   * | U+0149  | ŉ     | n           | Latin small letter n preceded by apostrophe       |
   * | U+014A  | Ŋ     | N           | Latin capital letter Eng                          |
   * | U+014B  | ŋ     | n           | Latin small letter Eng                            |
   * | U+014C  | Ō     | O           | Latin capital letter O with macron                |
   * | U+014D  | ō     | o           | Latin small letter o with macron                  |
   * | U+014E  | Ŏ     | O           | Latin capital letter O with breve                 |
   * | U+014F  | ŏ     | o           | Latin small letter o with breve                   |
   * | U+0150  | Ő     | O           | Latin capital letter O with double acute          |
   * | U+0151  | ő     | o           | Latin small letter o with double acute            |
   * | U+0152  | Œ     | OE          | Latin capital ligature OE                         |
   * | U+0153  | œ     | oe          | Latin small ligature oe                           |
   * | U+0154  | Ŕ     | R           | Latin capital letter R with acute                 |
   * | U+0155  | ŕ     | r           | Latin small letter r with acute                   |
   * | U+0156  | Ŗ     | R           | Latin capital letter R with cedilla               |
   * | U+0157  | ŗ     | r           | Latin small letter r with cedilla                 |
   * | U+0158  | Ř     | R           | Latin capital letter R with caron                 |
   * | U+0159  | ř     | r           | Latin small letter r with caron                   |
   * | U+015A  | Ś     | S           | Latin capital letter S with acute                 |
   * | U+015B  | ś     | s           | Latin small letter s with acute                   |
   * | U+015C  | Ŝ     | S           | Latin capital letter S with circumflex            |
   * | U+015D  | ŝ     | s           | Latin small letter s with circumflex              |
   * | U+015E  | Ş     | S           | Latin capital letter S with cedilla               |
   * | U+015F  | ş     | s           | Latin small letter s with cedilla                 |
   * | U+0160  | Š     | S           | Latin capital letter S with caron                 |
   * | U+0161  | š     | s           | Latin small letter s with caron                   |
   * | U+0162  | Ţ     | T           | Latin capital letter T with cedilla               |
   * | U+0163  | ţ     | t           | Latin small letter t with cedilla                 |
   * | U+0164  | Ť     | T           | Latin capital letter T with caron                 |
   * | U+0165  | ť     | t           | Latin small letter t with caron                   |
   * | U+0166  | Ŧ     | T           | Latin capital letter T with stroke                |
   * | U+0167  | ŧ     | t           | Latin small letter t with stroke                  |
   * | U+0168  | Ũ     | U           | Latin capital letter U with tilde                 |
   * | U+0169  | ũ     | u           | Latin small letter u with tilde                   |
   * | U+016A  | Ū     | U           | Latin capital letter U with macron                |
   * | U+016B  | ū     | u           | Latin small letter u with macron                  |
   * | U+016C  | Ŭ     | U           | Latin capital letter U with breve                 |
   * | U+016D  | ŭ     | u           | Latin small letter u with breve                   |
   * | U+016E  | Ů     | U           | Latin capital letter U with ring above            |
   * | U+016F  | ů     | u           | Latin small letter u with ring above              |
   * | U+0170  | Ű     | U           | Latin capital letter U with double acute          |
   * | U+0171  | ű     | u           | Latin small letter u with double acute            |
   * | U+0172  | Ų     | U           | Latin capital letter U with ogonek                |
   * | U+0173  | ų     | u           | Latin small letter u with ogonek                  |
   * | U+0174  | Ŵ     | W           | Latin capital letter W with circumflex            |
   * | U+0175  | ŵ     | w           | Latin small letter w with circumflex              |
   * | U+0176  | Ŷ     | Y           | Latin capital letter Y with circumflex            |
   * | U+0177  | ŷ     | y           | Latin small letter y with circumflex              |
   * | U+0178  | Ÿ     | Y           | Latin capital letter Y with diaeresis             |
   * | U+0179  | Ź     | Z           | Latin capital letter Z with acute                 |
   * | U+017A  | ź     | z           | Latin small letter z with acute                   |
   * | U+017B  | Ż     | Z           | Latin capital letter Z with dot above             |
   * | U+017C  | ż     | z           | Latin small letter z with dot above               |
   * | U+017D  | Ž     | Z           | Latin capital letter Z with caron                 |
   * | U+017E  | ž     | z           | Latin small letter z with caron                   |
   * | U+017F  | ſ     | s           | Latin small letter long s                         |
   * | U+01A0  | Ơ     | O           | Latin capital letter O with horn                  |
   * | U+01A1  | ơ     | o           | Latin small letter o with horn                    |
   * | U+01AF  | Ư     | U           | Latin capital letter U with horn                  |
   * | U+01B0  | ư     | u           | Latin small letter u with horn                    |
   * | U+01CD  | Ǎ     | A           | Latin capital letter A with caron                 |
   * | U+01CE  | ǎ     | a           | Latin small letter a with caron                   |
   * | U+01CF  | Ǐ     | I           | Latin capital letter I with caron                 |
   * | U+01D0  | ǐ     | i           | Latin small letter i with caron                   |
   * | U+01D1  | Ǒ     | O           | Latin capital letter O with caron                 |
   * | U+01D2  | ǒ     | o           | Latin small letter o with caron                   |
   * | U+01D3  | Ǔ     | U           | Latin capital letter U with caron                 |
   * | U+01D4  | ǔ     | u           | Latin small letter u with caron                   |
   * | U+01D5  | Ǖ     | U           | Latin capital letter U with diaeresis and macron  |
   * | U+01D6  | ǖ     | u           | Latin small letter u with diaeresis and macron    |
   * | U+01D7  | Ǘ     | U           | Latin capital letter U with diaeresis and acute   |
   * | U+01D8  | ǘ     | u           | Latin small letter u with diaeresis and acute     |
   * | U+01D9  | Ǚ     | U           | Latin capital letter U with diaeresis and caron   |
   * | U+01DA  | ǚ     | u           | Latin small letter u with diaeresis and caron     |
   * | U+01DB  | Ǜ     | U           | Latin capital letter U with diaeresis and grave   |
   * | U+01DC  | ǜ     | u           | Latin small letter u with diaeresis and grave     |
   *
   * Decompositions for Latin Extended-B:
   *
   * |   Code   | Glyph | Replacement |                Description                |
   * | -------- | ----- | ----------- | ----------------------------------------- |
   * | U+0218   | Ș     | S           | Latin capital letter S with comma below   |
   * | U+0219   | ș     | s           | Latin small letter s with comma below     |
   * | U+021A   | Ț     | T           | Latin capital letter T with comma below   |
   * | U+021B   | ț     | t           | Latin small letter t with comma below     |
   *
   * Vowels with diacritic (Chinese, Hanyu Pinyin):
   *
   * |   Code   | Glyph | Replacement |                      Description                      |
   * | -------- | ----- | ----------- | ----------------------------------------------------- |
   * | U+0251   | ɑ     | a           | Latin small letter alpha                              |
   * | U+1EA0   | Ạ     | A           | Latin capital letter A with dot below                 |
   * | U+1EA1   | ạ     | a           | Latin small letter a with dot below                   |
   * | U+1EA2   | Ả     | A           | Latin capital letter A with hook above                |
   * | U+1EA3   | ả     | a           | Latin small letter a with hook above                  |
   * | U+1EA4   | Ấ     | A           | Latin capital letter A with circumflex and acute      |
   * | U+1EA5   | ấ     | a           | Latin small letter a with circumflex and acute        |
   * | U+1EA6   | Ầ     | A           | Latin capital letter A with circumflex and grave      |
   * | U+1EA7   | ầ     | a           | Latin small letter a with circumflex and grave        |
   * | U+1EA8   | Ẩ     | A           | Latin capital letter A with circumflex and hook above |
   * | U+1EA9   | ẩ     | a           | Latin small letter a with circumflex and hook above   |
   * | U+1EAA   | Ẫ     | A           | Latin capital letter A with circumflex and tilde      |
   * | U+1EAB   | ẫ     | a           | Latin small letter a with circumflex and tilde        |
   * | U+1EA6   | Ậ     | A           | Latin capital letter A with circumflex and dot below  |
   * | U+1EAD   | ậ     | a           | Latin small letter a with circumflex and dot below    |
   * | U+1EAE   | Ắ     | A           | Latin capital letter A with breve and acute           |
   * | U+1EAF   | ắ     | a           | Latin small letter a with breve and acute             |
   * | U+1EB0   | Ằ     | A           | Latin capital letter A with breve and grave           |
   * | U+1EB1   | ằ     | a           | Latin small letter a with breve and grave             |
   * | U+1EB2   | Ẳ     | A           | Latin capital letter A with breve and hook above      |
   * | U+1EB3   | ẳ     | a           | Latin small letter a with breve and hook above        |
   * | U+1EB4   | Ẵ     | A           | Latin capital letter A with breve and tilde           |
   * | U+1EB5   | ẵ     | a           | Latin small letter a with breve and tilde             |
   * | U+1EB6   | Ặ     | A           | Latin capital letter A with breve and dot below       |
   * | U+1EB7   | ặ     | a           | Latin small letter a with breve and dot below         |
   * | U+1EB8   | Ẹ     | E           | Latin capital letter E with dot below                 |
   * | U+1EB9   | ẹ     | e           | Latin small letter e with dot below                   |
   * | U+1EBA   | Ẻ     | E           | Latin capital letter E with hook above                |
   * | U+1EBB   | ẻ     | e           | Latin small letter e with hook above                  |
   * | U+1EBC   | Ẽ     | E           | Latin capital letter E with tilde                     |
   * | U+1EBD   | ẽ     | e           | Latin small letter e with tilde                       |
   * | U+1EBE   | Ế     | E           | Latin capital letter E with circumflex and acute      |
   * | U+1EBF   | ế     | e           | Latin small letter e with circumflex and acute        |
   * | U+1EC0   | Ề     | E           | Latin capital letter E with circumflex and grave      |
   * | U+1EC1   | ề     | e           | Latin small letter e with circumflex and grave        |
   * | U+1EC2   | Ể     | E           | Latin capital letter E with circumflex and hook above |
   * | U+1EC3   | ể     | e           | Latin small letter e with circumflex and hook above   |
   * | U+1EC4   | Ễ     | E           | Latin capital letter E with circumflex and tilde      |
   * | U+1EC5   | ễ     | e           | Latin small letter e with circumflex and tilde        |
   * | U+1EC6   | Ệ     | E           | Latin capital letter E with circumflex and dot below  |
   * | U+1EC7   | ệ     | e           | Latin small letter e with circumflex and dot below    |
   * | U+1EC8   | Ỉ     | I           | Latin capital letter I with hook above                |
   * | U+1EC9   | ỉ     | i           | Latin small letter i with hook above                  |
   * | U+1ECA   | Ị     | I           | Latin capital letter I with dot below                 |
   * | U+1ECB   | ị     | i           | Latin small letter i with dot below                   |
   * | U+1ECC   | Ọ     | O           | Latin capital letter O with dot below                 |
   * | U+1ECD   | ọ     | o           | Latin small letter o with dot below                   |
   * | U+1ECE   | Ỏ     | O           | Latin capital letter O with hook above                |
   * | U+1ECF   | ỏ     | o           | Latin small letter o with hook above                  |
   * | U+1ED0   | Ố     | O           | Latin capital letter O with circumflex and acute      |
   * | U+1ED1   | ố     | o           | Latin small letter o with circumflex and acute        |
   * | U+1ED2   | Ồ     | O           | Latin capital letter O with circumflex and grave      |
   * | U+1ED3   | ồ     | o           | Latin small letter o with circumflex and grave        |
   * | U+1ED4   | Ổ     | O           | Latin capital letter O with circumflex and hook above |
   * | U+1ED5   | ổ     | o           | Latin small letter o with circumflex and hook above   |
   * | U+1ED6   | Ỗ     | O           | Latin capital letter O with circumflex and tilde      |
   * | U+1ED7   | ỗ     | o           | Latin small letter o with circumflex and tilde        |
   * | U+1ED8   | Ộ     | O           | Latin capital letter O with circumflex and dot below  |
   * | U+1ED9   | ộ     | o           | Latin small letter o with circumflex and dot below    |
   * | U+1EDA   | Ớ     | O           | Latin capital letter O with horn and acute            |
   * | U+1EDB   | ớ     | o           | Latin small letter o with horn and acute              |
   * | U+1EDC   | Ờ     | O           | Latin capital letter O with horn and grave            |
   * | U+1EDD   | ờ     | o           | Latin small letter o with horn and grave              |
   * | U+1EDE   | Ở     | O           | Latin capital letter O with horn and hook above       |
   * | U+1EDF   | ở     | o           | Latin small letter o with horn and hook above         |
   * | U+1EE0   | Ỡ     | O           | Latin capital letter O with horn and tilde            |
   * | U+1EE1   | ỡ     | o           | Latin small letter o with horn and tilde              |
   * | U+1EE2   | Ợ     | O           | Latin capital letter O with horn and dot below        |
   * | U+1EE3   | ợ     | o           | Latin small letter o with horn and dot below          |
   * | U+1EE4   | Ụ     | U           | Latin capital letter U with dot below                 |
   * | U+1EE5   | ụ     | u           | Latin small letter u with dot below                   |
   * | U+1EE6   | Ủ     | U           | Latin capital letter U with hook above                |
   * | U+1EE7   | ủ     | u           | Latin small letter u with hook above                  |
   * | U+1EE8   | Ứ     | U           | Latin capital letter U with horn and acute            |
   * | U+1EE9   | ứ     | u           | Latin small letter u with horn and acute              |
   * | U+1EEA   | Ừ     | U           | Latin capital letter U with horn and grave            |
   * | U+1EEB   | ừ     | u           | Latin small letter u with horn and grave              |
   * | U+1EEC   | Ử     | U           | Latin capital letter U with horn and hook above       |
   * | U+1EED   | ử     | u           | Latin small letter u with horn and hook above         |
   * | U+1EEE   | Ữ     | U           | Latin capital letter U with horn and tilde            |
   * | U+1EEF   | ữ     | u           | Latin small letter u with horn and tilde              |
   * | U+1EF0   | Ự     | U           | Latin capital letter U with horn and dot below        |
   * | U+1EF1   | ự     | u           | Latin small letter u with horn and dot below          |
   * | U+1EF2   | Ỳ     | Y           | Latin capital letter Y with grave                     |
   * | U+1EF3   | ỳ     | y           | Latin small letter y with grave                       |
   * | U+1EF4   | Ỵ     | Y           | Latin capital letter Y with dot below                 |
   * | U+1EF5   | ỵ     | y           | Latin small letter y with dot below                   |
   * | U+1EF6   | Ỷ     | Y           | Latin capital letter Y with hook above                |
   * | U+1EF7   | ỷ     | y           | Latin small letter y with hook above                  |
   * | U+1EF8   | Ỹ     | Y           | Latin capital letter Y with tilde                     |
   * | U+1EF9   | ỹ     | y           | Latin small letter y with tilde                       |
   */
  // Currency signs:
  { letter: /[\u00A3]/g, alternative: "" },
  { letter: /[\u20AC]/g, alternative: "E" },
  // Decompositions for Latin-1 Supplement:
  { letter: /[\u00AA]/g, alternative: "a" },
  { letter: /[\u00BA]/g, alternative: "o" },
  { letter: /[\u00C0]/g, alternative: "A" },
  { letter: /[\u00C1]/g, alternative: "A" },
  { letter: /[\u00C2]/g, alternative: "A" },
  { letter: /[\u00C3]/g, alternative: "A" },
  { letter: /[\u00C4]/g, alternative: "A" },
  { letter: /[\u00C5]/g, alternative: "A" },
  { letter: /[\u00C6]/g, alternative: "AE" },
  { letter: /[\u00C7]/g, alternative: "C" },
  { letter: /[\u00C8]/g, alternative: "E" },
  { letter: /[\u00C9]/g, alternative: "E" },
  { letter: /[\u00CA]/g, alternative: "E" },
  { letter: /[\u00CB]/g, alternative: "E" },
  { letter: /[\u00CC]/g, alternative: "I" },
  { letter: /[\u00CD]/g, alternative: "I" },
  { letter: /[\u00CE]/g, alternative: "I" },
  { letter: /[\u00CF]/g, alternative: "I" },
  { letter: /[\u00D0]/g, alternative: "D" },
  { letter: /[\u00D1]/g, alternative: "N" },
  { letter: /[\u00D2]/g, alternative: "O" },
  { letter: /[\u00D3]/g, alternative: "O" },
  { letter: /[\u00D4]/g, alternative: "O" },
  { letter: /[\u00D5]/g, alternative: "O" },
  { letter: /[\u00D6]/g, alternative: "O" },
  { letter: /[\u00D8]/g, alternative: "O" },
  { letter: /[\u00D9]/g, alternative: "U" },
  { letter: /[\u00DA]/g, alternative: "U" },
  { letter: /[\u00DB]/g, alternative: "U" },
  { letter: /[\u00DC]/g, alternative: "U" },
  { letter: /[\u00DD]/g, alternative: "Y" },
  { letter: /[\u00DE]/g, alternative: "TH" },
  { letter: /[\u00DF]/g, alternative: "s" },
  { letter: /[\u00E0]/g, alternative: "a" },
  { letter: /[\u00E1]/g, alternative: "a" },
  { letter: /[\u00E2]/g, alternative: "a" },
  { letter: /[\u00E3]/g, alternative: "a" },
  { letter: /[\u00E4]/g, alternative: "a" },
  { letter: /[\u00E5]/g, alternative: "a" },
  { letter: /[\u00E6]/g, alternative: "ae" },
  { letter: /[\u00E7]/g, alternative: "c" },
  { letter: /[\u00E8]/g, alternative: "e" },
  { letter: /[\u00E9]/g, alternative: "e" },
  { letter: /[\u00EA]/g, alternative: "e" },
  { letter: /[\u00EB]/g, alternative: "e" },
  { letter: /[\u00EC]/g, alternative: "i" },
  { letter: /[\u00ED]/g, alternative: "i" },
  { letter: /[\u00EE]/g, alternative: "i" },
  { letter: /[\u00EF]/g, alternative: "i" },
  { letter: /[\u00F0]/g, alternative: "d" },
  { letter: /[\u00F1]/g, alternative: "n" },
  { letter: /[\u00F2]/g, alternative: "o" },
  { letter: /[\u00F3]/g, alternative: "o" },
  { letter: /[\u00F4]/g, alternative: "o" },
  { letter: /[\u00F5]/g, alternative: "o" },
  { letter: /[\u00F6]/g, alternative: "o" },
  { letter: /[\u00F8]/g, alternative: "o" },
  { letter: /[\u00F9]/g, alternative: "u" },
  { letter: /[\u00FA]/g, alternative: "u" },
  { letter: /[\u00FB]/g, alternative: "u" },
  { letter: /[\u00FC]/g, alternative: "u" },
  { letter: /[\u00FD]/g, alternative: "y" },
  { letter: /[\u00FE]/g, alternative: "th" },
  { letter: /[\u00FF]/g, alternative: "y" },
  // Decompositions for Latin Extended-A:
  { letter: /[\u0100]/g, alternative: "A" },
  { letter: /[\u0101]/g, alternative: "a" },
  { letter: /[\u0102]/g, alternative: "A" },
  { letter: /[\u0103]/g, alternative: "a" },
  { letter: /[\u0104]/g, alternative: "A" },
  { letter: /[\u0105]/g, alternative: "a" },
  { letter: /[\u0106]/g, alternative: "C" },
  { letter: /[\u0107]/g, alternative: "c" },
  { letter: /[\u0108]/g, alternative: "C" },
  { letter: /[\u0109]/g, alternative: "c" },
  { letter: /[\u010A]/g, alternative: "C" },
  { letter: /[\u010B]/g, alternative: "c" },
  { letter: /[\u010C]/g, alternative: "C" },
  { letter: /[\u010D]/g, alternative: "c" },
  { letter: /[\u010E]/g, alternative: "D" },
  { letter: /[\u010F]/g, alternative: "d" },
  { letter: /[\u0110]/g, alternative: "D" },
  { letter: /[\u0111]/g, alternative: "d" },
  { letter: /[\u0112]/g, alternative: "E" },
  { letter: /[\u0113]/g, alternative: "e" },
  { letter: /[\u0114]/g, alternative: "E" },
  { letter: /[\u0115]/g, alternative: "e" },
  { letter: /[\u0116]/g, alternative: "E" },
  { letter: /[\u0117]/g, alternative: "e" },
  { letter: /[\u0118]/g, alternative: "E" },
  { letter: /[\u0119]/g, alternative: "e" },
  { letter: /[\u011A]/g, alternative: "E" },
  { letter: /[\u011B]/g, alternative: "e" },
  { letter: /[\u011C]/g, alternative: "G" },
  { letter: /[\u011D]/g, alternative: "g" },
  { letter: /[\u011E]/g, alternative: "G" },
  { letter: /[\u011F]/g, alternative: "g" },
  { letter: /[\u0120]/g, alternative: "G" },
  { letter: /[\u0121]/g, alternative: "g" },
  { letter: /[\u0122]/g, alternative: "G" },
  { letter: /[\u0123]/g, alternative: "g" },
  { letter: /[\u0124]/g, alternative: "H" },
  { letter: /[\u0125]/g, alternative: "h" },
  { letter: /[\u0126]/g, alternative: "H" },
  { letter: /[\u0127]/g, alternative: "h" },
  { letter: /[\u0128]/g, alternative: "I" },
  { letter: /[\u0129]/g, alternative: "i" },
  { letter: /[\u012A]/g, alternative: "I" },
  { letter: /[\u012B]/g, alternative: "i" },
  { letter: /[\u012C]/g, alternative: "I" },
  { letter: /[\u012D]/g, alternative: "i" },
  { letter: /[\u012E]/g, alternative: "I" },
  { letter: /[\u012F]/g, alternative: "i" },
  { letter: /[\u0130]/g, alternative: "I" },
  { letter: /[\u0131]/g, alternative: "i" },
  { letter: /[\u0132]/g, alternative: "IJ" },
  { letter: /[\u0133]/g, alternative: "ij" },
  { letter: /[\u0134]/g, alternative: "J" },
  { letter: /[\u0135]/g, alternative: "j" },
  { letter: /[\u0136]/g, alternative: "K" },
  { letter: /[\u0137]/g, alternative: "k" },
  { letter: /[\u0138]/g, alternative: "k" },
  { letter: /[\u0139]/g, alternative: "L" },
  { letter: /[\u013A]/g, alternative: "l" },
  { letter: /[\u013B]/g, alternative: "L" },
  { letter: /[\u013C]/g, alternative: "l" },
  { letter: /[\u013D]/g, alternative: "L" },
  { letter: /[\u013E]/g, alternative: "l" },
  { letter: /[\u013F]/g, alternative: "L" },
  { letter: /[\u0140]/g, alternative: "l" },
  { letter: /[\u0141]/g, alternative: "L" },
  { letter: /[\u0142]/g, alternative: "l" },
  { letter: /[\u0143]/g, alternative: "N" },
  { letter: /[\u0144]/g, alternative: "n" },
  { letter: /[\u0145]/g, alternative: "N" },
  { letter: /[\u0146]/g, alternative: "n" },
  { letter: /[\u0147]/g, alternative: "N" },
  { letter: /[\u0148]/g, alternative: "n" },
  { letter: /[\u0149]/g, alternative: "n" },
  { letter: /[\u014A]/g, alternative: "N" },
  { letter: /[\u014B]/g, alternative: "n" },
  { letter: /[\u014C]/g, alternative: "O" },
  { letter: /[\u014D]/g, alternative: "o" },
  { letter: /[\u014E]/g, alternative: "O" },
  { letter: /[\u014F]/g, alternative: "o" },
  { letter: /[\u0150]/g, alternative: "O" },
  { letter: /[\u0151]/g, alternative: "o" },
  { letter: /[\u0152]/g, alternative: "OE" },
  { letter: /[\u0153]/g, alternative: "oe" },
  { letter: /[\u0154]/g, alternative: "R" },
  { letter: /[\u0155]/g, alternative: "r" },
  { letter: /[\u0156]/g, alternative: "R" },
  { letter: /[\u0157]/g, alternative: "r" },
  { letter: /[\u0158]/g, alternative: "R" },
  { letter: /[\u0159]/g, alternative: "r" },
  { letter: /[\u015A]/g, alternative: "S" },
  { letter: /[\u015B]/g, alternative: "s" },
  { letter: /[\u015C]/g, alternative: "S" },
  { letter: /[\u015D]/g, alternative: "s" },
  { letter: /[\u015E]/g, alternative: "S" },
  { letter: /[\u015F]/g, alternative: "s" },
  { letter: /[\u0160]/g, alternative: "S" },
  { letter: /[\u0161]/g, alternative: "s" },
  { letter: /[\u0162]/g, alternative: "T" },
  { letter: /[\u0163]/g, alternative: "t" },
  { letter: /[\u0164]/g, alternative: "T" },
  { letter: /[\u0165]/g, alternative: "t" },
  { letter: /[\u0166]/g, alternative: "T" },
  { letter: /[\u0167]/g, alternative: "t" },
  { letter: /[\u0168]/g, alternative: "U" },
  { letter: /[\u0169]/g, alternative: "u" },
  { letter: /[\u016A]/g, alternative: "U" },
  { letter: /[\u016B]/g, alternative: "u" },
  { letter: /[\u016C]/g, alternative: "U" },
  { letter: /[\u016D]/g, alternative: "u" },
  { letter: /[\u016E]/g, alternative: "U" },
  { letter: /[\u016F]/g, alternative: "u" },
  { letter: /[\u0170]/g, alternative: "U" },
  { letter: /[\u0171]/g, alternative: "u" },
  { letter: /[\u0172]/g, alternative: "U" },
  { letter: /[\u0173]/g, alternative: "u" },
  { letter: /[\u0174]/g, alternative: "W" },
  { letter: /[\u0175]/g, alternative: "w" },
  { letter: /[\u0176]/g, alternative: "Y" },
  { letter: /[\u0177]/g, alternative: "y" },
  { letter: /[\u0178]/g, alternative: "Y" },
  { letter: /[\u0179]/g, alternative: "Z" },
  { letter: /[\u017A]/g, alternative: "z" },
  { letter: /[\u017B]/g, alternative: "Z" },
  { letter: /[\u017C]/g, alternative: "z" },
  { letter: /[\u017D]/g, alternative: "Z" },
  { letter: /[\u017E]/g, alternative: "z" },
  { letter: /[\u017F]/g, alternative: "s" },
  { letter: /[\u01A0]/g, alternative: "O" },
  { letter: /[\u01A1]/g, alternative: "o" },
  { letter: /[\u01AF]/g, alternative: "U" },
  { letter: /[\u01B0]/g, alternative: "u" },
  { letter: /[\u01CD]/g, alternative: "A" },
  { letter: /[\u01CE]/g, alternative: "a" },
  { letter: /[\u01CF]/g, alternative: "I" },
  { letter: /[\u01D0]/g, alternative: "i" },
  { letter: /[\u01D1]/g, alternative: "O" },
  { letter: /[\u01D2]/g, alternative: "o" },
  { letter: /[\u01D3]/g, alternative: "U" },
  { letter: /[\u01D4]/g, alternative: "u" },
  { letter: /[\u01D5]/g, alternative: "U" },
  { letter: /[\u01D6]/g, alternative: "u" },
  { letter: /[\u01D7]/g, alternative: "U" },
  { letter: /[\u01D8]/g, alternative: "u" },
  { letter: /[\u01D9]/g, alternative: "U" },
  { letter: /[\u01DA]/g, alternative: "u" },
  { letter: /[\u01DB]/g, alternative: "U" },
  { letter: /[\u01DC]/g, alternative: "u" },
  // Decompositions for Latin Extended-B:
  { letter: /[\u0218]/g, alternative: "S" },
  { letter: /[\u0219]/g, alternative: "s" },
  { letter: /[\u021A]/g, alternative: "T" },
  { letter: /[\u021B]/g, alternative: "t" },
  // Vowels with diacritic (Chinese, Hanyu Pinyin):
  { letter: /[\u0251]/g, alternative: "a" },
  { letter: /[\u1EA0]/g, alternative: "A" },
  { letter: /[\u1EA1]/g, alternative: "a" },
  { letter: /[\u1EA2]/g, alternative: "A" },
  { letter: /[\u1EA3]/g, alternative: "a" },
  { letter: /[\u1EA4]/g, alternative: "A" },
  { letter: /[\u1EA5]/g, alternative: "a" },
  { letter: /[\u1EA6]/g, alternative: "A" },
  { letter: /[\u1EA7]/g, alternative: "a" },
  { letter: /[\u1EA8]/g, alternative: "A" },
  { letter: /[\u1EA9]/g, alternative: "a" },
  { letter: /[\u1EAA]/g, alternative: "A" },
  { letter: /[\u1EAB]/g, alternative: "a" },
  { letter: /[\u1EA6]/g, alternative: "A" },
  { letter: /[\u1EAD]/g, alternative: "a" },
  { letter: /[\u1EAE]/g, alternative: "A" },
  { letter: /[\u1EAF]/g, alternative: "a" },
  { letter: /[\u1EB0]/g, alternative: "A" },
  { letter: /[\u1EB1]/g, alternative: "a" },
  { letter: /[\u1EB2]/g, alternative: "A" },
  { letter: /[\u1EB3]/g, alternative: "a" },
  { letter: /[\u1EB4]/g, alternative: "A" },
  { letter: /[\u1EB5]/g, alternative: "a" },
  { letter: /[\u1EB6]/g, alternative: "A" },
  { letter: /[\u1EB7]/g, alternative: "a" },
  { letter: /[\u1EB8]/g, alternative: "E" },
  { letter: /[\u1EB9]/g, alternative: "e" },
  { letter: /[\u1EBA]/g, alternative: "E" },
  { letter: /[\u1EBB]/g, alternative: "e" },
  { letter: /[\u1EBC]/g, alternative: "E" },
  { letter: /[\u1EBD]/g, alternative: "e" },
  { letter: /[\u1EBE]/g, alternative: "E" },
  { letter: /[\u1EBF]/g, alternative: "e" },
  { letter: /[\u1EC0]/g, alternative: "E" },
  { letter: /[\u1EC1]/g, alternative: "e" },
  { letter: /[\u1EC2]/g, alternative: "E" },
  { letter: /[\u1EC3]/g, alternative: "e" },
  { letter: /[\u1EC4]/g, alternative: "E" },
  { letter: /[\u1EC5]/g, alternative: "e" },
  { letter: /[\u1EC6]/g, alternative: "E" },
  { letter: /[\u1EC7]/g, alternative: "e" },
  { letter: /[\u1EC8]/g, alternative: "I" },
  { letter: /[\u1EC9]/g, alternative: "i" },
  { letter: /[\u1ECA]/g, alternative: "I" },
  { letter: /[\u1ECB]/g, alternative: "i" },
  { letter: /[\u1ECC]/g, alternative: "O" },
  { letter: /[\u1ECD]/g, alternative: "o" },
  { letter: /[\u1ECE]/g, alternative: "O" },
  { letter: /[\u1ECF]/g, alternative: "o" },
  { letter: /[\u1ED0]/g, alternative: "O" },
  { letter: /[\u1ED1]/g, alternative: "o" },
  { letter: /[\u1ED2]/g, alternative: "O" },
  { letter: /[\u1ED3]/g, alternative: "o" },
  { letter: /[\u1ED4]/g, alternative: "O" },
  { letter: /[\u1ED5]/g, alternative: "o" },
  { letter: /[\u1ED6]/g, alternative: "O" },
  { letter: /[\u1ED7]/g, alternative: "o" },
  { letter: /[\u1ED8]/g, alternative: "O" },
  { letter: /[\u1ED9]/g, alternative: "o" },
  { letter: /[\u1EDA]/g, alternative: "O" },
  { letter: /[\u1EDB]/g, alternative: "o" },
  { letter: /[\u1EDC]/g, alternative: "O" },
  { letter: /[\u1EDD]/g, alternative: "o" },
  { letter: /[\u1EDE]/g, alternative: "O" },
  { letter: /[\u1EDF]/g, alternative: "o" },
  { letter: /[\u1EE0]/g, alternative: "O" },
  { letter: /[\u1EE1]/g, alternative: "o" },
  { letter: /[\u1EE2]/g, alternative: "O" },
  { letter: /[\u1EE3]/g, alternative: "o" },
  { letter: /[\u1EE4]/g, alternative: "U" },
  { letter: /[\u1EE5]/g, alternative: "u" },
  { letter: /[\u1EE6]/g, alternative: "U" },
  { letter: /[\u1EE7]/g, alternative: "u" },
  { letter: /[\u1EE8]/g, alternative: "U" },
  { letter: /[\u1EE9]/g, alternative: "u" },
  { letter: /[\u1EEA]/g, alternative: "U" },
  { letter: /[\u1EEB]/g, alternative: "u" },
  { letter: /[\u1EEC]/g, alternative: "U" },
  { letter: /[\u1EED]/g, alternative: "u" },
  { letter: /[\u1EEE]/g, alternative: "U" },
  { letter: /[\u1EEF]/g, alternative: "u" },
  { letter: /[\u1EF0]/g, alternative: "U" },
  { letter: /[\u1EF1]/g, alternative: "u" },
  { letter: /[\u1EF2]/g, alternative: "Y" },
  { letter: /[\u1EF3]/g, alternative: "y" },
  { letter: /[\u1EF4]/g, alternative: "Y" },
  { letter: /[\u1EF5]/g, alternative: "y" },
  { letter: /[\u1EF6]/g, alternative: "Y" },
  { letter: /[\u1EF7]/g, alternative: "y" },
  { letter: /[\u1EF8]/g, alternative: "Y" },
  { letter: /[\u1EF9]/g, alternative: "y" }
], Ys = {
  /*
   * Language: German.
   * |   Code   | Glyph | Replacement |               Description               |
   * | -------- | ----- | ----------- | --------------------------------------- |
   * | U+00C4   | Ä     | Ae          | Latin capital letter A with diaeresis   |
   * | U+00E4   | ä     | ae          | Latin small letter a with diaeresis     |
   * | U+00D6   | Ö     | Oe          | Latin capital letter O with diaeresis   |
   * | U+00F6   | ö     | oe          | Latin small letter o with diaeresis     |
   * | U+00DC   | Ü     | Ue          | Latin capital letter U with diaeresis   |
   * | U+00FC   | ü     | ue          | Latin small letter u with diaeresis     |
   * | U+1E9E   | ẞ     | ss          | Latin big letter sharp s                | This letter is not in the original WP list, was added for consistency.
   * | U+00DF   | ß     | ss          | Latin small letter sharp s              |
   */
  de: [{ letter: /[\u00C4]/g, alternative: "Ae" }, { letter: /[\u00E4]/g, alternative: "ae" }, { letter: /[\u00D6]/g, alternative: "Oe" }, { letter: /[\u00F6]/g, alternative: "oe" }, { letter: /[\u00DC]/g, alternative: "Ue" }, { letter: /[\u00FC]/g, alternative: "ue" }, { letter: /[\u1E9E]/g, alternative: "SS" }, { letter: /[\u00DF]/g, alternative: "ss" }],
  /*
   * Language: Danish.
   * |   Code   | Glyph | Replacement |               Description               |
      * | -------- | ----- | ----------- | --------------------------------------- |
      * | U+00C6   | Æ     | Ae          | Latin capital letter AE                 |
      * | U+00E6   | æ     | ae          | Latin small letter ae                   |
      * | U+00D8   | Ø     | Oe          | Latin capital letter O with stroke      |
      * | U+00F8   | ø     | oe          | Latin small letter o with stroke        |
      * | U+00C5   | Å     | Aa          | Latin capital letter A with ring above  |
      * | U+00E5   | å     | aa          | Latin small letter a with ring above    |
   */
  da: [{ letter: /[\u00C6]/g, alternative: "Ae" }, { letter: /[\u00E6]/g, alternative: "ae" }, { letter: /[\u00D8]/g, alternative: "Oe" }, { letter: /[\u00F8]/g, alternative: "oe" }, { letter: /[\u00C5]/g, alternative: "Aa" }, { letter: /[\u00E5]/g, alternative: "aa" }],
  /*
   * Language: Catalan.
   * |   Code   | Glyph | Replacement |               Description               |
      * | -------- | ----- | ----------- | --------------------------------------- |
      * | U+00B7   | l·l   | ll          | Flown dot (between two Ls)              |
   */
  ca: [{ letter: /[\u00B7]/g, alternative: "ll" }],
  /*
   * Language: Serbian and Bosnian.
   * |   Code   | Glyph | Replacement |               Description               |
      * | -------- | ----- | ----------- | --------------------------------------- |
      * | U+0110   | Đ     | DJ          | Latin capital letter D with stroke      |
      * | U+0111   | đ     | dj          | Latin small letter d with stroke        |
   */
  srAndBs: [{ letter: /[\u0110]/g, alternative: "DJ" }, { letter: /[\u0111]/g, alternative: "dj" }]
}, yRe = function(e) {
  switch (e) {
    case "de":
      return Ys.de;
    case "da":
      return Ys.da;
    case "ca":
      return Ys.ca;
    case "sr":
      return Ys.srAndBs;
    case "bs":
      return Ys.srAndBs;
    default:
      return [];
  }
};
Object.defineProperty(vb, "__esModule", {
  value: !0
});
vb.default = function(a, e) {
  const t = (0, hRe.default)(e);
  for (let i = t.length - 1; i >= 0; i--)
    a = a.replace(t[i].letter, t[i].alternative);
  return a;
};
var wRe = kb, hRe = bRe(wRe);
function bRe(a) {
  return a && a.__esModule ? a : { default: a };
}
var qe = {};
function vRe(a, e) {
  for (var t = -1, i = a == null ? 0 : a.length, n = 0, r = []; ++t < i; ) {
    var s = a[t];
    e(s, t, a) && (r[n++] = s);
  }
  return r;
}
var vD = vRe;
function kRe(a) {
  return function(e, t, i) {
    for (var n = -1, r = Object(e), s = i(e), o = s.length; o--; ) {
      var d = s[a ? o : ++n];
      if (t(r[d], d, r) === !1)
        break;
    }
    return e;
  };
}
var _Re = kRe, $Re = _Re, jRe = $Re(), xRe = jRe;
function ARe(a, e) {
  for (var t = -1, i = Array(a); ++t < a; )
    i[t] = e(t);
  return i;
}
var ERe = ARe, SRe = typeof Ca == "object" && Ca && Ca.Object === Object && Ca, kD = SRe, qRe = kD, PRe = typeof self == "object" && self && self.Object === Object && self, TRe = qRe || PRe || Function("return this")(), Di = TRe, RRe = Di, ORe = RRe.Symbol, Iu = ORe, Xq = Iu, _D = Object.prototype, MRe = _D.hasOwnProperty, CRe = _D.toString, Zs = Xq ? Xq.toStringTag : void 0;
function LRe(a) {
  var e = MRe.call(a, Zs), t = a[Zs];
  try {
    a[Zs] = void 0;
    var i = !0;
  } catch {
  }
  var n = CRe.call(a);
  return i && (e ? a[Zs] = t : delete a[Zs]), n;
}
var IRe = LRe, WRe = Object.prototype, FRe = WRe.toString;
function DRe(a) {
  return FRe.call(a);
}
var BRe = DRe, Jq = Iu, NRe = IRe, URe = BRe, HRe = "[object Null]", VRe = "[object Undefined]", Qq = Jq ? Jq.toStringTag : void 0;
function KRe(a) {
  return a == null ? a === void 0 ? VRe : HRe : Qq && Qq in Object(a) ? NRe(a) : URe(a);
}
var xs = KRe;
function GRe(a) {
  return a != null && typeof a == "object";
}
var As = GRe, YRe = xs, ZRe = As, XRe = "[object Arguments]";
function JRe(a) {
  return ZRe(a) && YRe(a) == XRe;
}
var QRe = JRe, aP = QRe, aOe = As, $D = Object.prototype, eOe = $D.hasOwnProperty, tOe = $D.propertyIsEnumerable, iOe = aP(/* @__PURE__ */ function() {
  return arguments;
}()) ? aP : function(a) {
  return aOe(a) && eOe.call(a, "callee") && !tOe.call(a, "callee");
}, jD = iOe, nOe = Array.isArray, si = nOe, Jl = { exports: {} };
function rOe() {
  return !1;
}
var sOe = rOe;
Jl.exports;
(function(a, e) {
  var t = Di, i = sOe, n = e && !e.nodeType && e, r = n && !0 && a && !a.nodeType && a, s = r && r.exports === n, o = s ? t.Buffer : void 0, d = o ? o.isBuffer : void 0, c = d || i;
  a.exports = c;
})(Jl, Jl.exports);
var xD = Jl.exports, oOe = 9007199254740991, dOe = /^(?:0|[1-9]\d*)$/;
function lOe(a, e) {
  var t = typeof a;
  return e = e ?? oOe, !!e && (t == "number" || t != "symbol" && dOe.test(a)) && a > -1 && a % 1 == 0 && a < e;
}
var AD = lOe, cOe = 9007199254740991;
function uOe(a) {
  return typeof a == "number" && a > -1 && a % 1 == 0 && a <= cOe;
}
var _b = uOe, pOe = xs, mOe = _b, gOe = As, zOe = "[object Arguments]", fOe = "[object Array]", yOe = "[object Boolean]", wOe = "[object Date]", hOe = "[object Error]", bOe = "[object Function]", vOe = "[object Map]", kOe = "[object Number]", _Oe = "[object Object]", $Oe = "[object RegExp]", jOe = "[object Set]", xOe = "[object String]", AOe = "[object WeakMap]", EOe = "[object ArrayBuffer]", SOe = "[object DataView]", qOe = "[object Float32Array]", POe = "[object Float64Array]", TOe = "[object Int8Array]", ROe = "[object Int16Array]", OOe = "[object Int32Array]", MOe = "[object Uint8Array]", COe = "[object Uint8ClampedArray]", LOe = "[object Uint16Array]", IOe = "[object Uint32Array]", Da = {};
Da[qOe] = Da[POe] = Da[TOe] = Da[ROe] = Da[OOe] = Da[MOe] = Da[COe] = Da[LOe] = Da[IOe] = !0;
Da[zOe] = Da[fOe] = Da[EOe] = Da[yOe] = Da[SOe] = Da[wOe] = Da[hOe] = Da[bOe] = Da[vOe] = Da[kOe] = Da[_Oe] = Da[$Oe] = Da[jOe] = Da[xOe] = Da[AOe] = !1;
function WOe(a) {
  return gOe(a) && mOe(a.length) && !!Da[pOe(a)];
}
var FOe = WOe;
function DOe(a) {
  return function(e) {
    return a(e);
  };
}
var BOe = DOe, Ql = { exports: {} };
Ql.exports;
(function(a, e) {
  var t = kD, i = e && !e.nodeType && e, n = i && !0 && a && !a.nodeType && a, r = n && n.exports === i, s = r && t.process, o = function() {
    try {
      var d = n && n.require && n.require("util").types;
      return d || s && s.binding && s.binding("util");
    } catch {
    }
  }();
  a.exports = o;
})(Ql, Ql.exports);
var NOe = Ql.exports, UOe = FOe, HOe = BOe, eP = NOe, tP = eP && eP.isTypedArray, VOe = tP ? HOe(tP) : UOe, ED = VOe, KOe = ERe, GOe = jD, YOe = si, ZOe = xD, XOe = AD, JOe = ED, QOe = Object.prototype, a3e = QOe.hasOwnProperty;
function e3e(a, e) {
  var t = YOe(a), i = !t && GOe(a), n = !t && !i && ZOe(a), r = !t && !i && !n && JOe(a), s = t || i || n || r, o = s ? KOe(a.length, String) : [], d = o.length;
  for (var c in a)
    (e || a3e.call(a, c)) && !(s && // Safari 9 has enumerable `arguments.length` in strict mode.
    (c == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    n && (c == "offset" || c == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    r && (c == "buffer" || c == "byteLength" || c == "byteOffset") || // Skip index properties.
    XOe(c, d))) && o.push(c);
  return o;
}
var t3e = e3e, i3e = Object.prototype;
function n3e(a) {
  var e = a && a.constructor, t = typeof e == "function" && e.prototype || i3e;
  return a === t;
}
var r3e = n3e;
function s3e(a, e) {
  return function(t) {
    return a(e(t));
  };
}
var o3e = s3e, d3e = o3e, l3e = d3e(Object.keys, Object), c3e = l3e, u3e = r3e, p3e = c3e, m3e = Object.prototype, g3e = m3e.hasOwnProperty;
function z3e(a) {
  if (!u3e(a))
    return p3e(a);
  var e = [];
  for (var t in Object(a))
    g3e.call(a, t) && t != "constructor" && e.push(t);
  return e;
}
var f3e = z3e;
function y3e(a) {
  var e = typeof a;
  return a != null && (e == "object" || e == "function");
}
var Wu = y3e, w3e = xs, h3e = Wu, b3e = "[object AsyncFunction]", v3e = "[object Function]", k3e = "[object GeneratorFunction]", _3e = "[object Proxy]";
function $3e(a) {
  if (!h3e(a))
    return !1;
  var e = w3e(a);
  return e == v3e || e == k3e || e == b3e || e == _3e;
}
var SD = $3e, j3e = SD, x3e = _b;
function A3e(a) {
  return a != null && x3e(a.length) && !j3e(a);
}
var $b = A3e, E3e = t3e, S3e = f3e, q3e = $b;
function P3e(a) {
  return q3e(a) ? E3e(a) : S3e(a);
}
var Fu = P3e, T3e = xRe, R3e = Fu;
function O3e(a, e) {
  return a && T3e(a, e, R3e);
}
var M3e = O3e, C3e = $b;
function L3e(a, e) {
  return function(t, i) {
    if (t == null)
      return t;
    if (!C3e(t))
      return a(t, i);
    for (var n = t.length, r = e ? n : -1, s = Object(t); (e ? r-- : ++r < n) && i(s[r], r, s) !== !1; )
      ;
    return t;
  };
}
var I3e = L3e, W3e = M3e, F3e = I3e, D3e = F3e(W3e), B3e = D3e, N3e = B3e;
function U3e(a, e) {
  var t = [];
  return N3e(a, function(i, n, r) {
    e(i, n, r) && t.push(i);
  }), t;
}
var H3e = U3e;
function V3e() {
  this.__data__ = [], this.size = 0;
}
var K3e = V3e;
function G3e(a, e) {
  return a === e || a !== a && e !== e;
}
var qD = G3e, Y3e = qD;
function Z3e(a, e) {
  for (var t = a.length; t--; )
    if (Y3e(a[t][0], e))
      return t;
  return -1;
}
var Du = Z3e, X3e = Du, J3e = Array.prototype, Q3e = J3e.splice;
function aMe(a) {
  var e = this.__data__, t = X3e(e, a);
  if (t < 0)
    return !1;
  var i = e.length - 1;
  return t == i ? e.pop() : Q3e.call(e, t, 1), --this.size, !0;
}
var eMe = aMe, tMe = Du;
function iMe(a) {
  var e = this.__data__, t = tMe(e, a);
  return t < 0 ? void 0 : e[t][1];
}
var nMe = iMe, rMe = Du;
function sMe(a) {
  return rMe(this.__data__, a) > -1;
}
var oMe = sMe, dMe = Du;
function lMe(a, e) {
  var t = this.__data__, i = dMe(t, a);
  return i < 0 ? (++this.size, t.push([a, e])) : t[i][1] = e, this;
}
var cMe = lMe, uMe = K3e, pMe = eMe, mMe = nMe, gMe = oMe, zMe = cMe;
function Es(a) {
  var e = -1, t = a == null ? 0 : a.length;
  for (this.clear(); ++e < t; ) {
    var i = a[e];
    this.set(i[0], i[1]);
  }
}
Es.prototype.clear = uMe;
Es.prototype.delete = pMe;
Es.prototype.get = mMe;
Es.prototype.has = gMe;
Es.prototype.set = zMe;
var Bu = Es, fMe = Bu;
function yMe() {
  this.__data__ = new fMe(), this.size = 0;
}
var wMe = yMe;
function hMe(a) {
  var e = this.__data__, t = e.delete(a);
  return this.size = e.size, t;
}
var bMe = hMe;
function vMe(a) {
  return this.__data__.get(a);
}
var kMe = vMe;
function _Me(a) {
  return this.__data__.has(a);
}
var $Me = _Me, jMe = Di, xMe = jMe["__core-js_shared__"], AMe = xMe, Iz = AMe, iP = function() {
  var a = /[^.]+$/.exec(Iz && Iz.keys && Iz.keys.IE_PROTO || "");
  return a ? "Symbol(src)_1." + a : "";
}();
function EMe(a) {
  return !!iP && iP in a;
}
var SMe = EMe, qMe = Function.prototype, PMe = qMe.toString;
function TMe(a) {
  if (a != null) {
    try {
      return PMe.call(a);
    } catch {
    }
    try {
      return a + "";
    } catch {
    }
  }
  return "";
}
var PD = TMe, RMe = SD, OMe = SMe, MMe = Wu, CMe = PD, LMe = /[\\^$.*+?()[\]{}|]/g, IMe = /^\[object .+?Constructor\]$/, WMe = Function.prototype, FMe = Object.prototype, DMe = WMe.toString, BMe = FMe.hasOwnProperty, NMe = RegExp(
  "^" + DMe.call(BMe).replace(LMe, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function UMe(a) {
  if (!MMe(a) || OMe(a))
    return !1;
  var e = RMe(a) ? NMe : IMe;
  return e.test(CMe(a));
}
var HMe = UMe;
function VMe(a, e) {
  return a == null ? void 0 : a[e];
}
var KMe = VMe, GMe = HMe, YMe = KMe;
function ZMe(a, e) {
  var t = YMe(a, e);
  return GMe(t) ? t : void 0;
}
var Ss = ZMe, XMe = Ss, JMe = Di, QMe = XMe(JMe, "Map"), jb = QMe, aCe = Ss, eCe = aCe(Object, "create"), Nu = eCe, nP = Nu;
function tCe() {
  this.__data__ = nP ? nP(null) : {}, this.size = 0;
}
var iCe = tCe;
function nCe(a) {
  var e = this.has(a) && delete this.__data__[a];
  return this.size -= e ? 1 : 0, e;
}
var rCe = nCe, sCe = Nu, oCe = "__lodash_hash_undefined__", dCe = Object.prototype, lCe = dCe.hasOwnProperty;
function cCe(a) {
  var e = this.__data__;
  if (sCe) {
    var t = e[a];
    return t === oCe ? void 0 : t;
  }
  return lCe.call(e, a) ? e[a] : void 0;
}
var uCe = cCe, pCe = Nu, mCe = Object.prototype, gCe = mCe.hasOwnProperty;
function zCe(a) {
  var e = this.__data__;
  return pCe ? e[a] !== void 0 : gCe.call(e, a);
}
var fCe = zCe, yCe = Nu, wCe = "__lodash_hash_undefined__";
function hCe(a, e) {
  var t = this.__data__;
  return this.size += this.has(a) ? 0 : 1, t[a] = yCe && e === void 0 ? wCe : e, this;
}
var bCe = hCe, vCe = iCe, kCe = rCe, _Ce = uCe, $Ce = fCe, jCe = bCe;
function qs(a) {
  var e = -1, t = a == null ? 0 : a.length;
  for (this.clear(); ++e < t; ) {
    var i = a[e];
    this.set(i[0], i[1]);
  }
}
qs.prototype.clear = vCe;
qs.prototype.delete = kCe;
qs.prototype.get = _Ce;
qs.prototype.has = $Ce;
qs.prototype.set = jCe;
var xCe = qs, rP = xCe, ACe = Bu, ECe = jb;
function SCe() {
  this.size = 0, this.__data__ = {
    hash: new rP(),
    map: new (ECe || ACe)(),
    string: new rP()
  };
}
var qCe = SCe;
function PCe(a) {
  var e = typeof a;
  return e == "string" || e == "number" || e == "symbol" || e == "boolean" ? a !== "__proto__" : a === null;
}
var TCe = PCe, RCe = TCe;
function OCe(a, e) {
  var t = a.__data__;
  return RCe(e) ? t[typeof e == "string" ? "string" : "hash"] : t.map;
}
var Uu = OCe, MCe = Uu;
function CCe(a) {
  var e = MCe(this, a).delete(a);
  return this.size -= e ? 1 : 0, e;
}
var LCe = CCe, ICe = Uu;
function WCe(a) {
  return ICe(this, a).get(a);
}
var FCe = WCe, DCe = Uu;
function BCe(a) {
  return DCe(this, a).has(a);
}
var NCe = BCe, UCe = Uu;
function HCe(a, e) {
  var t = UCe(this, a), i = t.size;
  return t.set(a, e), this.size += t.size == i ? 0 : 1, this;
}
var VCe = HCe, KCe = qCe, GCe = LCe, YCe = FCe, ZCe = NCe, XCe = VCe;
function Ps(a) {
  var e = -1, t = a == null ? 0 : a.length;
  for (this.clear(); ++e < t; ) {
    var i = a[e];
    this.set(i[0], i[1]);
  }
}
Ps.prototype.clear = KCe;
Ps.prototype.delete = GCe;
Ps.prototype.get = YCe;
Ps.prototype.has = ZCe;
Ps.prototype.set = XCe;
var xb = Ps, JCe = Bu, QCe = jb, aLe = xb, eLe = 200;
function tLe(a, e) {
  var t = this.__data__;
  if (t instanceof JCe) {
    var i = t.__data__;
    if (!QCe || i.length < eLe - 1)
      return i.push([a, e]), this.size = ++t.size, this;
    t = this.__data__ = new aLe(i);
  }
  return t.set(a, e), this.size = t.size, this;
}
var iLe = tLe, nLe = Bu, rLe = wMe, sLe = bMe, oLe = kMe, dLe = $Me, lLe = iLe;
function Ts(a) {
  var e = this.__data__ = new nLe(a);
  this.size = e.size;
}
Ts.prototype.clear = rLe;
Ts.prototype.delete = sLe;
Ts.prototype.get = oLe;
Ts.prototype.has = dLe;
Ts.prototype.set = lLe;
var TD = Ts, cLe = "__lodash_hash_undefined__";
function uLe(a) {
  return this.__data__.set(a, cLe), this;
}
var pLe = uLe;
function mLe(a) {
  return this.__data__.has(a);
}
var gLe = mLe, zLe = xb, fLe = pLe, yLe = gLe;
function ac(a) {
  var e = -1, t = a == null ? 0 : a.length;
  for (this.__data__ = new zLe(); ++e < t; )
    this.add(a[e]);
}
ac.prototype.add = ac.prototype.push = fLe;
ac.prototype.has = yLe;
var wLe = ac;
function hLe(a, e) {
  for (var t = -1, i = a == null ? 0 : a.length; ++t < i; )
    if (e(a[t], t, a))
      return !0;
  return !1;
}
var bLe = hLe;
function vLe(a, e) {
  return a.has(e);
}
var kLe = vLe, _Le = wLe, $Le = bLe, jLe = kLe, xLe = 1, ALe = 2;
function ELe(a, e, t, i, n, r) {
  var s = t & xLe, o = a.length, d = e.length;
  if (o != d && !(s && d > o))
    return !1;
  var c = r.get(a), p = r.get(e);
  if (c && p)
    return c == e && p == a;
  var m = -1, w = !0, v = t & ALe ? new _Le() : void 0;
  for (r.set(a, e), r.set(e, a); ++m < o; ) {
    var $ = a[m], P = e[m];
    if (i)
      var h = s ? i(P, $, m, e, a, r) : i($, P, m, a, e, r);
    if (h !== void 0) {
      if (h)
        continue;
      w = !1;
      break;
    }
    if (v) {
      if (!$Le(e, function(z, b) {
        if (!jLe(v, b) && ($ === z || n($, z, t, i, r)))
          return v.push(b);
      })) {
        w = !1;
        break;
      }
    } else if (!($ === P || n($, P, t, i, r))) {
      w = !1;
      break;
    }
  }
  return r.delete(a), r.delete(e), w;
}
var RD = ELe, SLe = Di, qLe = SLe.Uint8Array, PLe = qLe;
function TLe(a) {
  var e = -1, t = Array(a.size);
  return a.forEach(function(i, n) {
    t[++e] = [n, i];
  }), t;
}
var RLe = TLe;
function OLe(a) {
  var e = -1, t = Array(a.size);
  return a.forEach(function(i) {
    t[++e] = i;
  }), t;
}
var MLe = OLe, sP = Iu, oP = PLe, CLe = qD, LLe = RD, ILe = RLe, WLe = MLe, FLe = 1, DLe = 2, BLe = "[object Boolean]", NLe = "[object Date]", ULe = "[object Error]", HLe = "[object Map]", VLe = "[object Number]", KLe = "[object RegExp]", GLe = "[object Set]", YLe = "[object String]", ZLe = "[object Symbol]", XLe = "[object ArrayBuffer]", JLe = "[object DataView]", dP = sP ? sP.prototype : void 0, Wz = dP ? dP.valueOf : void 0;
function QLe(a, e, t, i, n, r, s) {
  switch (t) {
    case JLe:
      if (a.byteLength != e.byteLength || a.byteOffset != e.byteOffset)
        return !1;
      a = a.buffer, e = e.buffer;
    case XLe:
      return !(a.byteLength != e.byteLength || !r(new oP(a), new oP(e)));
    case BLe:
    case NLe:
    case VLe:
      return CLe(+a, +e);
    case ULe:
      return a.name == e.name && a.message == e.message;
    case KLe:
    case YLe:
      return a == e + "";
    case HLe:
      var o = ILe;
    case GLe:
      var d = i & FLe;
      if (o || (o = WLe), a.size != e.size && !d)
        return !1;
      var c = s.get(a);
      if (c)
        return c == e;
      i |= DLe, s.set(a, e);
      var p = LLe(o(a), o(e), i, n, r, s);
      return s.delete(a), p;
    case ZLe:
      if (Wz)
        return Wz.call(a) == Wz.call(e);
  }
  return !1;
}
var aIe = QLe;
function eIe(a, e) {
  for (var t = -1, i = e.length, n = a.length; ++t < i; )
    a[n + t] = e[t];
  return a;
}
var tIe = eIe, iIe = tIe, nIe = si;
function rIe(a, e, t) {
  var i = e(a);
  return nIe(a) ? i : iIe(i, t(a));
}
var sIe = rIe;
function oIe() {
  return [];
}
var dIe = oIe, lIe = vD, cIe = dIe, uIe = Object.prototype, pIe = uIe.propertyIsEnumerable, lP = Object.getOwnPropertySymbols, mIe = lP ? function(a) {
  return a == null ? [] : (a = Object(a), lIe(lP(a), function(e) {
    return pIe.call(a, e);
  }));
} : cIe, gIe = mIe, zIe = sIe, fIe = gIe, yIe = Fu;
function wIe(a) {
  return zIe(a, yIe, fIe);
}
var hIe = wIe, cP = hIe, bIe = 1, vIe = Object.prototype, kIe = vIe.hasOwnProperty;
function _Ie(a, e, t, i, n, r) {
  var s = t & bIe, o = cP(a), d = o.length, c = cP(e), p = c.length;
  if (d != p && !s)
    return !1;
  for (var m = d; m--; ) {
    var w = o[m];
    if (!(s ? w in e : kIe.call(e, w)))
      return !1;
  }
  var v = r.get(a), $ = r.get(e);
  if (v && $)
    return v == e && $ == a;
  var P = !0;
  r.set(a, e), r.set(e, a);
  for (var h = s; ++m < d; ) {
    w = o[m];
    var z = a[w], b = e[w];
    if (i)
      var _ = s ? i(b, z, w, e, a, r) : i(z, b, w, a, e, r);
    if (!(_ === void 0 ? z === b || n(z, b, t, i, r) : _)) {
      P = !1;
      break;
    }
    h || (h = w == "constructor");
  }
  if (P && !h) {
    var S = a.constructor, A = e.constructor;
    S != A && "constructor" in a && "constructor" in e && !(typeof S == "function" && S instanceof S && typeof A == "function" && A instanceof A) && (P = !1);
  }
  return r.delete(a), r.delete(e), P;
}
var $Ie = _Ie, jIe = Ss, xIe = Di, AIe = jIe(xIe, "DataView"), EIe = AIe, SIe = Ss, qIe = Di, PIe = SIe(qIe, "Promise"), TIe = PIe, RIe = Ss, OIe = Di, MIe = RIe(OIe, "Set"), CIe = MIe, LIe = Ss, IIe = Di, WIe = LIe(IIe, "WeakMap"), FIe = WIe, Vf = EIe, Kf = jb, Gf = TIe, Yf = CIe, Zf = FIe, OD = xs, Rs = PD, uP = "[object Map]", DIe = "[object Object]", pP = "[object Promise]", mP = "[object Set]", gP = "[object WeakMap]", zP = "[object DataView]", BIe = Rs(Vf), NIe = Rs(Kf), UIe = Rs(Gf), HIe = Rs(Yf), VIe = Rs(Zf), On = OD;
(Vf && On(new Vf(new ArrayBuffer(1))) != zP || Kf && On(new Kf()) != uP || Gf && On(Gf.resolve()) != pP || Yf && On(new Yf()) != mP || Zf && On(new Zf()) != gP) && (On = function(a) {
  var e = OD(a), t = e == DIe ? a.constructor : void 0, i = t ? Rs(t) : "";
  if (i)
    switch (i) {
      case BIe:
        return zP;
      case NIe:
        return uP;
      case UIe:
        return pP;
      case HIe:
        return mP;
      case VIe:
        return gP;
    }
  return e;
});
var KIe = On, Fz = TD, GIe = RD, YIe = aIe, ZIe = $Ie, fP = KIe, yP = si, wP = xD, XIe = ED, JIe = 1, hP = "[object Arguments]", bP = "[object Array]", sl = "[object Object]", QIe = Object.prototype, vP = QIe.hasOwnProperty;
function aWe(a, e, t, i, n, r) {
  var s = yP(a), o = yP(e), d = s ? bP : fP(a), c = o ? bP : fP(e);
  d = d == hP ? sl : d, c = c == hP ? sl : c;
  var p = d == sl, m = c == sl, w = d == c;
  if (w && wP(a)) {
    if (!wP(e))
      return !1;
    s = !0, p = !1;
  }
  if (w && !p)
    return r || (r = new Fz()), s || XIe(a) ? GIe(a, e, t, i, n, r) : YIe(a, e, d, t, i, n, r);
  if (!(t & JIe)) {
    var v = p && vP.call(a, "__wrapped__"), $ = m && vP.call(e, "__wrapped__");
    if (v || $) {
      var P = v ? a.value() : a, h = $ ? e.value() : e;
      return r || (r = new Fz()), n(P, h, t, i, r);
    }
  }
  return w ? (r || (r = new Fz()), ZIe(a, e, t, i, n, r)) : !1;
}
var eWe = aWe, tWe = eWe, kP = As;
function MD(a, e, t, i, n) {
  return a === e ? !0 : a == null || e == null || !kP(a) && !kP(e) ? a !== a && e !== e : tWe(a, e, t, i, MD, n);
}
var CD = MD, iWe = TD, nWe = CD, rWe = 1, sWe = 2;
function oWe(a, e, t, i) {
  var n = t.length, r = n, s = !i;
  if (a == null)
    return !r;
  for (a = Object(a); n--; ) {
    var o = t[n];
    if (s && o[2] ? o[1] !== a[o[0]] : !(o[0] in a))
      return !1;
  }
  for (; ++n < r; ) {
    o = t[n];
    var d = o[0], c = a[d], p = o[1];
    if (s && o[2]) {
      if (c === void 0 && !(d in a))
        return !1;
    } else {
      var m = new iWe();
      if (i)
        var w = i(c, p, d, a, e, m);
      if (!(w === void 0 ? nWe(p, c, rWe | sWe, i, m) : w))
        return !1;
    }
  }
  return !0;
}
var dWe = oWe, lWe = Wu;
function cWe(a) {
  return a === a && !lWe(a);
}
var LD = cWe, uWe = LD, pWe = Fu;
function mWe(a) {
  for (var e = pWe(a), t = e.length; t--; ) {
    var i = e[t], n = a[i];
    e[t] = [i, n, uWe(n)];
  }
  return e;
}
var gWe = mWe;
function zWe(a, e) {
  return function(t) {
    return t == null ? !1 : t[a] === e && (e !== void 0 || a in Object(t));
  };
}
var ID = zWe, fWe = dWe, yWe = gWe, wWe = ID;
function hWe(a) {
  var e = yWe(a);
  return e.length == 1 && e[0][2] ? wWe(e[0][0], e[0][1]) : function(t) {
    return t === a || fWe(t, a, e);
  };
}
var bWe = hWe, vWe = xs, kWe = As, _We = "[object Symbol]";
function $We(a) {
  return typeof a == "symbol" || kWe(a) && vWe(a) == _We;
}
var Hu = $We, jWe = si, xWe = Hu, AWe = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, EWe = /^\w*$/;
function SWe(a, e) {
  if (jWe(a))
    return !1;
  var t = typeof a;
  return t == "number" || t == "symbol" || t == "boolean" || a == null || xWe(a) ? !0 : EWe.test(a) || !AWe.test(a) || e != null && a in Object(e);
}
var Ab = SWe, WD = xb, qWe = "Expected a function";
function Eb(a, e) {
  if (typeof a != "function" || e != null && typeof e != "function")
    throw new TypeError(qWe);
  var t = function() {
    var i = arguments, n = e ? e.apply(this, i) : i[0], r = t.cache;
    if (r.has(n))
      return r.get(n);
    var s = a.apply(this, i);
    return t.cache = r.set(n, s) || r, s;
  };
  return t.cache = new (Eb.Cache || WD)(), t;
}
Eb.Cache = WD;
var FD = Eb, PWe = FD, TWe = 500;
function RWe(a) {
  var e = PWe(a, function(i) {
    return t.size === TWe && t.clear(), i;
  }), t = e.cache;
  return e;
}
var OWe = RWe, MWe = OWe, CWe = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, LWe = /\\(\\)?/g, IWe = MWe(function(a) {
  var e = [];
  return a.charCodeAt(0) === 46 && e.push(""), a.replace(CWe, function(t, i, n, r) {
    e.push(n ? r.replace(LWe, "$1") : i || t);
  }), e;
}), WWe = IWe;
function FWe(a, e) {
  for (var t = -1, i = a == null ? 0 : a.length, n = Array(i); ++t < i; )
    n[t] = e(a[t], t, a);
  return n;
}
var DD = FWe, _P = Iu, DWe = DD, BWe = si, NWe = Hu, UWe = 1 / 0, $P = _P ? _P.prototype : void 0, jP = $P ? $P.toString : void 0;
function BD(a) {
  if (typeof a == "string")
    return a;
  if (BWe(a))
    return DWe(a, BD) + "";
  if (NWe(a))
    return jP ? jP.call(a) : "";
  var e = a + "";
  return e == "0" && 1 / a == -UWe ? "-0" : e;
}
var HWe = BD, VWe = HWe;
function KWe(a) {
  return a == null ? "" : VWe(a);
}
var GWe = KWe, YWe = si, ZWe = Ab, XWe = WWe, JWe = GWe;
function QWe(a, e) {
  return YWe(a) ? a : ZWe(a, e) ? [a] : XWe(JWe(a));
}
var ND = QWe, aFe = Hu, eFe = 1 / 0;
function tFe(a) {
  if (typeof a == "string" || aFe(a))
    return a;
  var e = a + "";
  return e == "0" && 1 / a == -eFe ? "-0" : e;
}
var Vu = tFe, iFe = ND, nFe = Vu;
function rFe(a, e) {
  e = iFe(e, a);
  for (var t = 0, i = e.length; a != null && t < i; )
    a = a[nFe(e[t++])];
  return t && t == i ? a : void 0;
}
var UD = rFe, sFe = UD;
function oFe(a, e, t) {
  var i = a == null ? void 0 : sFe(a, e);
  return i === void 0 ? t : i;
}
var dFe = oFe;
function lFe(a, e) {
  return a != null && e in Object(a);
}
var cFe = lFe, uFe = ND, pFe = jD, mFe = si, gFe = AD, zFe = _b, fFe = Vu;
function yFe(a, e, t) {
  e = uFe(e, a);
  for (var i = -1, n = e.length, r = !1; ++i < n; ) {
    var s = fFe(e[i]);
    if (!(r = a != null && t(a, s)))
      break;
    a = a[s];
  }
  return r || ++i != n ? r : (n = a == null ? 0 : a.length, !!n && zFe(n) && gFe(s, n) && (mFe(a) || pFe(a)));
}
var wFe = yFe, hFe = cFe, bFe = wFe;
function vFe(a, e) {
  return a != null && bFe(a, e, hFe);
}
var kFe = vFe, _Fe = CD, $Fe = dFe, jFe = kFe, xFe = Ab, AFe = LD, EFe = ID, SFe = Vu, qFe = 1, PFe = 2;
function TFe(a, e) {
  return xFe(a) && AFe(e) ? EFe(SFe(a), e) : function(t) {
    var i = $Fe(t, a);
    return i === void 0 && i === e ? jFe(t, a) : _Fe(e, i, qFe | PFe);
  };
}
var RFe = TFe;
function OFe(a) {
  return a;
}
var MFe = OFe;
function CFe(a) {
  return function(e) {
    return e == null ? void 0 : e[a];
  };
}
var LFe = CFe, IFe = UD;
function WFe(a) {
  return function(e) {
    return IFe(e, a);
  };
}
var FFe = WFe, DFe = LFe, BFe = FFe, NFe = Ab, UFe = Vu;
function HFe(a) {
  return NFe(a) ? DFe(UFe(a)) : BFe(a);
}
var VFe = HFe, KFe = bWe, GFe = RFe, YFe = MFe, ZFe = si, XFe = VFe;
function JFe(a) {
  return typeof a == "function" ? a : a == null ? YFe : typeof a == "object" ? ZFe(a) ? GFe(a[0], a[1]) : KFe(a) : XFe(a);
}
var QFe = JFe, aDe = vD, eDe = H3e, tDe = QFe, iDe = si;
function nDe(a, e) {
  var t = iDe(a) ? aDe : eDe;
  return t(a, tDe(e));
}
var rDe = nDe;
function sDe(a, e, t, i) {
  for (var n = a.length, r = t + (i ? 1 : -1); i ? r-- : ++r < n; )
    if (e(a[r], r, a))
      return r;
  return -1;
}
var oDe = sDe;
function dDe(a) {
  return a !== a;
}
var lDe = dDe;
function cDe(a, e, t) {
  for (var i = t - 1, n = a.length; ++i < n; )
    if (a[i] === e)
      return i;
  return -1;
}
var uDe = cDe, pDe = oDe, mDe = lDe, gDe = uDe;
function zDe(a, e, t) {
  return e === e ? gDe(a, e, t) : pDe(a, mDe, t);
}
var fDe = zDe, yDe = xs, wDe = si, hDe = As, bDe = "[object String]";
function vDe(a) {
  return typeof a == "string" || !wDe(a) && hDe(a) && yDe(a) == bDe;
}
var kDe = vDe, _De = /\s/;
function $De(a) {
  for (var e = a.length; e-- && _De.test(a.charAt(e)); )
    ;
  return e;
}
var jDe = $De, xDe = jDe, ADe = /^\s+/;
function EDe(a) {
  return a && a.slice(0, xDe(a) + 1).replace(ADe, "");
}
var SDe = EDe, qDe = SDe, xP = Wu, PDe = Hu, AP = NaN, TDe = /^[-+]0x[0-9a-f]+$/i, RDe = /^0b[01]+$/i, ODe = /^0o[0-7]+$/i, MDe = parseInt;
function CDe(a) {
  if (typeof a == "number")
    return a;
  if (PDe(a))
    return AP;
  if (xP(a)) {
    var e = typeof a.valueOf == "function" ? a.valueOf() : a;
    a = xP(e) ? e + "" : e;
  }
  if (typeof a != "string")
    return a === 0 ? a : +a;
  a = qDe(a);
  var t = RDe.test(a);
  return t || ODe.test(a) ? MDe(a.slice(2), t ? 2 : 8) : TDe.test(a) ? AP : +a;
}
var LDe = CDe, IDe = LDe, EP = 1 / 0, WDe = 17976931348623157e292;
function FDe(a) {
  if (!a)
    return a === 0 ? a : 0;
  if (a = IDe(a), a === EP || a === -EP) {
    var e = a < 0 ? -1 : 1;
    return e * WDe;
  }
  return a === a ? a : 0;
}
var DDe = FDe, BDe = DDe;
function NDe(a) {
  var e = BDe(a), t = e % 1;
  return e === e ? t ? e - t : e : 0;
}
var UDe = NDe, HDe = DD;
function VDe(a, e) {
  return HDe(e, function(t) {
    return a[t];
  });
}
var KDe = VDe, GDe = KDe, YDe = Fu;
function ZDe(a) {
  return a == null ? [] : GDe(a, YDe(a));
}
var XDe = ZDe, JDe = fDe, QDe = $b, a4e = kDe, e4e = UDe, t4e = XDe, i4e = Math.max;
function n4e(a, e, t, i) {
  a = QDe(a) ? a : t4e(a), t = t && !i ? e4e(t) : 0;
  var n = a.length;
  return t < 0 && (t = i4e(n + t, 0)), a4e(a) ? t <= n && a.indexOf(e, t) > -1 : !!n && JDe(a, e, t) > -1;
}
var r4e = n4e;
Object.defineProperty(qe, "__esModule", {
  value: !0
});
qe.replaceTurkishIsMemoized = qe.replaceTurkishIs = qe.combinations = qe.arraysOverlap = qe.arraysDifference = qe.getIndicesOfCharacter = qe.getIndicesOfWords = void 0;
var s4e = rDe, HD = Ku(s4e), o4e = r4e, VD = Ku(o4e), d4e = FD, l4e = Ku(d4e), c4e = se, u4e = Ku(c4e);
function Ku(a) {
  return a && a.__esModule ? a : { default: a };
}
function KD(a) {
  const e = [], t = (0, u4e.default)(a);
  let i = 0;
  return t.forEach(function(n) {
    const r = a.indexOf(n, i);
    e.push(r), i = r + n.length;
  }), e;
}
function eo(a, e) {
  const t = [];
  if (a.indexOf(e) > -1)
    for (let i = 0; i < a.length; i++)
      a[i] === e && t.push(i);
  return t;
}
function xl(a, e) {
  return (0, HD.default)(a, function(t) {
    return !(0, VD.default)(e, t);
  });
}
function GD(a, e) {
  return (0, HD.default)(a, function(t) {
    return (0, VD.default)(e, t);
  });
}
function Al(a) {
  function e(t, i) {
    const n = t[0];
    if (typeof n > "u")
      return i;
    for (let r = 0, s = i.length; r < s; ++r)
      i.push(i[r].concat(n));
    return e(t.slice(1), i);
  }
  return e(a, [[]]).slice(1).concat([[]]);
}
function ol(a, e, t) {
  const i = a.split("");
  return e.forEach(function(n) {
    i.splice(n, 1, t);
  }), i.join("");
}
function YD(a) {
  const e = eo(a, "İ").concat(eo(a, "I"), eo(a, "i"), eo(a, "ı"));
  if (e.sort(), e.length === 0)
    return [a];
  const t = GD(KD(a), e), i = [];
  Al(t).forEach(function(s) {
    if (s === t)
      i.push([s, [], [], []]);
    else {
      const o = xl(t, s);
      Al(o).forEach(function(c) {
        if (c === o)
          i.push([s, c, [], []]);
        else {
          const p = xl(o, c);
          Al(p).forEach(function(w) {
            if (w === p)
              i.push([s, c, w, []]);
            else {
              const v = xl(p, w);
              i.push([s, c, w, v]);
            }
          });
        }
      });
    }
  });
  const r = [];
  return i.forEach(function(s) {
    const o = ol(a, s[0], "İ"), d = ol(o, s[1], "I"), c = ol(d, s[2], "i"), p = ol(c, s[3], "ı");
    r.push(p);
  }), r;
}
const p4e = (0, l4e.default)(YD);
qe.getIndicesOfWords = KD;
qe.getIndicesOfCharacter = eo;
qe.arraysDifference = xl;
qe.arraysOverlap = GD;
qe.combinations = Al;
qe.replaceTurkishIs = YD;
qe.replaceTurkishIsMemoized = p4e;
Object.defineProperty(bb, "__esModule", {
  value: !0
});
bb.default = function(a, e, t) {
  var i = Dz(e, t);
  if (t === "tr_TR") {
    const w = (0, v4e.replaceTurkishIsMemoized)(e);
    i = new RegExp(w.map((v) => (0, ZD.default)(v)).join("|"), "ig");
  }
  var n = a.match(i) || [];
  a = a.replace(i, "");
  var r = (0, w4e.default)(e, t), s = Dz(r, t), o = a.match(s) || [], d = n.concat(o), c = (0, b4e.default)(e, t);
  if (c !== r) {
    var p = Dz(c, t), m = a.match(p) || [];
    d = d.concat(m);
  }
  return (0, m4e.map)(d, function(w) {
    return (0, f4e.default)(w);
  });
};
var m4e = I, g4e = gr, ZD = Gu(g4e), z4e = be, f4e = Gu(z4e), y4e = pd, w4e = Gu(y4e), h4e = vb, b4e = Gu(h4e), v4e = qe;
function Gu(a) {
  return a && a.__esModule ? a : { default: a };
}
var Dz = function(e, t) {
  return e = (0, ZD.default)(e, !1, "", t), new RegExp(e, "ig");
};
Object.defineProperty(Cu, "__esModule", {
  value: !0
});
Cu.default = function(a, e, t, i) {
  a = (0, _4e.default)(a), a = (0, A4e.unifyAllSpaces)(a), a = (0, qP.normalize)(a), e = (0, SP.default)((0, qP.normalize)(e));
  let n = (0, S4e.default)(a, e, t, i);
  n = (0, PP.map)(n, function(s) {
    return (0, SP.default)((0, x4e.default)(s));
  });
  const r = (0, PP.map)(n, function(s) {
    return a.indexOf(s);
  });
  return {
    count: n.length,
    matches: n,
    position: Math.min(...r)
  };
};
var k4e = Lu, _4e = Yu(k4e), $4e = be, SP = Yu($4e), j4e = Ho, x4e = Yu(j4e), A4e = nr, E4e = bb, S4e = Yu(E4e), qP = Ke, PP = I;
function Yu(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(vn, "__esModule", {
  value: !0
});
vn.default = function(a, e, t = "en_EN") {
  let i = 0, n = [];
  return e = e.map(C4e.normalize), (0, L4e.uniq)(e).forEach(function(r) {
    const s = (0, M4e.default)(a, r, t);
    i += s.count, n = n.concat(s.matches);
  }), n === null && (n = []), n = n.map(function(r) {
    return (0, P4e.default)((0, R4e.default)(r));
  }), {
    count: i,
    matches: n
  };
};
var q4e = be, P4e = Sb(q4e), T4e = Ho, R4e = Sb(T4e), O4e = Cu, M4e = Sb(O4e), C4e = Ke, L4e = I;
function Sb(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(vt, "__esModule", {
  value: !0
});
vt.findTopicFormsInString = vt.findWordFormsInString = void 0;
var I4e = vn, W4e = F4e(I4e), XD = I;
function F4e(a) {
  return a && a.__esModule ? a : { default: a };
}
const Xf = function(e, t, i) {
  const n = e.length, r = Array(n);
  for (let d = 0; d < n; d++) {
    const c = (0, W4e.default)(t, e[d], i).count > 0;
    r[d] = c ? 1 : 0;
  }
  const s = (0, XD.sum)(r), o = {
    countWordMatches: s,
    percentWordMatches: 0
  };
  return n > 0 && (o.percentWordMatches = Math.round(s / n * 100)), o;
}, D4e = function(e, t, i, n) {
  let r = Xf(e.keyphraseForms, t, n);
  if (r.keyphraseOrSynonym = "keyphrase", r.percentWordMatches === 100 || i === !1 || (0, XD.isEmpty)(e.synonymsForms))
    return r;
  const s = [];
  for (let c = 0; c < e.synonymsForms.length; c++) {
    const p = e.synonymsForms[c];
    s[c] = Xf(p, t, n);
  }
  const o = s.map((c) => c.percentWordMatches), d = o.indexOf(Math.max(...o));
  return r.percentWordMatches >= s[d].percentWordMatches || (r = s[d], r.keyphraseOrSynonym = "synonym"), r;
};
vt.findWordFormsInString = Xf;
vt.findTopicFormsInString = D4e;
Object.defineProperty(hb, "__esModule", {
  value: !0
});
hb.default = function(a, e, t = "en_EN") {
  var i = a.match(/>(.*)/ig);
  return i !== null ? (i = i[0].replace(/<.*?>\s?/ig, ""), i = i.slice(1).toString(), (0, B4e.findTopicFormsInString)(e, i, !0, t).percentWordMatches === 100) : !1;
};
var B4e = vt, jd = {};
Object.defineProperty(jd, "__esModule", {
  value: !0
});
jd.default = function(a) {
  var e;
  return e = a.match(/<a[\s]+(?:[^>]+)>((?:.|[\n\r\u2028\u2029])*?)<\/a>/ig), e === null && (e = []), e;
};
var qb = {}, xd = {}, ec = { exports: {} };
/*! https://mths.be/punycode v1.4.1 by @mathias */
ec.exports;
(function(a, e) {
  (function(t) {
    var i = e && !e.nodeType && e, n = a && !a.nodeType && a, r = typeof Ca == "object" && Ca;
    (r.global === r || r.window === r || r.self === r) && (t = r);
    var s, o = 2147483647, d = 36, c = 1, p = 26, m = 38, w = 700, v = 72, $ = 128, P = "-", h = /^xn--/, z = /[^\x20-\x7E]/, b = /[\x2E\u3002\uFF0E\uFF61]/g, _ = {
      overflow: "Overflow: input needs wider integers to process",
      "not-basic": "Illegal input >= 0x80 (not a basic code point)",
      "invalid-input": "Invalid input"
    }, S = d - c, A = Math.floor, L = String.fromCharCode, R;
    function E(O) {
      throw new RangeError(_[O]);
    }
    function N(O, V) {
      for (var x = O.length, T = []; x--; )
        T[x] = V(O[x]);
      return T;
    }
    function D(O, V) {
      var x = O.split("@"), T = "";
      x.length > 1 && (T = x[0] + "@", O = x[1]), O = O.replace(b, ".");
      var M = O.split("."), U = N(M, V).join(".");
      return T + U;
    }
    function H(O) {
      for (var V = [], x = 0, T = O.length, M, U; x < T; )
        M = O.charCodeAt(x++), M >= 55296 && M <= 56319 && x < T ? (U = O.charCodeAt(x++), (U & 64512) == 56320 ? V.push(((M & 1023) << 10) + (U & 1023) + 65536) : (V.push(M), x--)) : V.push(M);
      return V;
    }
    function j(O) {
      return N(O, function(V) {
        var x = "";
        return V > 65535 && (V -= 65536, x += L(V >>> 10 & 1023 | 55296), V = 56320 | V & 1023), x += L(V), x;
      }).join("");
    }
    function ea(O) {
      return O - 48 < 10 ? O - 22 : O - 65 < 26 ? O - 65 : O - 97 < 26 ? O - 97 : d;
    }
    function ra(O, V) {
      return O + 22 + 75 * (O < 26) - ((V != 0) << 5);
    }
    function J(O, V, x) {
      var T = 0;
      for (O = x ? A(O / w) : O >> 1, O += A(O / V); O > S * p >> 1; T += d)
        O = A(O / S);
      return A(T + (S + 1) * O / (O + m));
    }
    function $a(O) {
      var V = [], x = O.length, T, M = 0, U = $, G = v, Y, K, Q, pa, ka, Ja, fe, _e, Fe;
      for (Y = O.lastIndexOf(P), Y < 0 && (Y = 0), K = 0; K < Y; ++K)
        O.charCodeAt(K) >= 128 && E("not-basic"), V.push(O.charCodeAt(K));
      for (Q = Y > 0 ? Y + 1 : 0; Q < x; ) {
        for (pa = M, ka = 1, Ja = d; Q >= x && E("invalid-input"), fe = ea(O.charCodeAt(Q++)), (fe >= d || fe > A((o - M) / ka)) && E("overflow"), M += fe * ka, _e = Ja <= G ? c : Ja >= G + p ? p : Ja - G, !(fe < _e); Ja += d)
          Fe = d - _e, ka > A(o / Fe) && E("overflow"), ka *= Fe;
        T = V.length + 1, G = J(M - pa, T, pa == 0), A(M / T) > o - U && E("overflow"), U += A(M / T), M %= T, V.splice(M++, 0, U);
      }
      return j(V);
    }
    function ne(O) {
      var V, x, T, M, U, G, Y, K, Q, pa, ka, Ja = [], fe, _e, Fe, ui;
      for (O = H(O), fe = O.length, V = $, x = 0, U = v, G = 0; G < fe; ++G)
        ka = O[G], ka < 128 && Ja.push(L(ka));
      for (T = M = Ja.length, M && Ja.push(P); T < fe; ) {
        for (Y = o, G = 0; G < fe; ++G)
          ka = O[G], ka >= V && ka < Y && (Y = ka);
        for (_e = T + 1, Y - V > A((o - x) / _e) && E("overflow"), x += (Y - V) * _e, V = Y, G = 0; G < fe; ++G)
          if (ka = O[G], ka < V && ++x > o && E("overflow"), ka == V) {
            for (K = x, Q = d; pa = Q <= U ? c : Q >= U + p ? p : Q - U, !(K < pa); Q += d)
              ui = K - pa, Fe = d - pa, Ja.push(
                L(ra(pa + ui % Fe, 0))
              ), K = A(ui / Fe);
            Ja.push(L(ra(K, 0))), U = J(x, _e, T == M), x = 0, ++T;
          }
        ++x, ++V;
      }
      return Ja.join("");
    }
    function fa(O) {
      return D(O, function(V) {
        return h.test(V) ? $a(V.slice(4).toLowerCase()) : V;
      });
    }
    function Ea(O) {
      return D(O, function(V) {
        return z.test(V) ? "xn--" + ne(V) : V;
      });
    }
    if (s = {
      /**
       * A string representing the current Punycode.js version number.
       * @memberOf punycode
       * @type String
       */
      version: "1.4.1",
      /**
       * An object of methods to convert from JavaScript's internal character
       * representation (UCS-2) to Unicode code points, and back.
       * @see <https://mathiasbynens.be/notes/javascript-encoding>
       * @memberOf punycode
       * @type Object
       */
      ucs2: {
        decode: H,
        encode: j
      },
      decode: $a,
      encode: ne,
      toASCII: Ea,
      toUnicode: fa
    }, i && n)
      if (a.exports == i)
        n.exports = s;
      else
        for (R in s)
          s.hasOwnProperty(R) && (i[R] = s[R]);
    else
      t.punycode = s;
  })(Ca);
})(ec, ec.exports);
var N4e = ec.exports;
const U4e = /* @__PURE__ */ _y(N4e);
var Pb = typeof Map == "function" && Map.prototype, Bz = Object.getOwnPropertyDescriptor && Pb ? Object.getOwnPropertyDescriptor(Map.prototype, "size") : null, tc = Pb && Bz && typeof Bz.get == "function" ? Bz.get : null, TP = Pb && Map.prototype.forEach, Tb = typeof Set == "function" && Set.prototype, Nz = Object.getOwnPropertyDescriptor && Tb ? Object.getOwnPropertyDescriptor(Set.prototype, "size") : null, ic = Tb && Nz && typeof Nz.get == "function" ? Nz.get : null, RP = Tb && Set.prototype.forEach, H4e = typeof WeakMap == "function" && WeakMap.prototype, so = H4e ? WeakMap.prototype.has : null, V4e = typeof WeakSet == "function" && WeakSet.prototype, oo = V4e ? WeakSet.prototype.has : null, K4e = typeof WeakRef == "function" && WeakRef.prototype, OP = K4e ? WeakRef.prototype.deref : null, G4e = Boolean.prototype.valueOf, Y4e = Object.prototype.toString, Z4e = Function.prototype.toString, X4e = String.prototype.match, Rb = String.prototype.slice, Ji = String.prototype.replace, J4e = String.prototype.toUpperCase, MP = String.prototype.toLowerCase, JD = RegExp.prototype.test, CP = Array.prototype.concat, Gt = Array.prototype.join, Q4e = Array.prototype.slice, LP = Math.floor, Jf = typeof BigInt == "function" ? BigInt.prototype.valueOf : null, Uz = Object.getOwnPropertySymbols, Qf = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? Symbol.prototype.toString : null, Qr = typeof Symbol == "function" && typeof Symbol.iterator == "object", Me = typeof Symbol == "function" && Symbol.toStringTag && (typeof Symbol.toStringTag === Qr || !0) ? Symbol.toStringTag : null, QD = Object.prototype.propertyIsEnumerable, IP = (typeof Reflect == "function" ? Reflect.getPrototypeOf : Object.getPrototypeOf) || ([].__proto__ === Array.prototype ? function(a) {
  return a.__proto__;
} : null);
function WP(a, e) {
  if (a === 1 / 0 || a === -1 / 0 || a !== a || a && a > -1e3 && a < 1e3 || JD.call(/e/, e))
    return e;
  var t = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
  if (typeof a == "number") {
    var i = a < 0 ? -LP(-a) : LP(a);
    if (i !== a) {
      var n = String(i), r = Rb.call(e, n.length + 1);
      return Ji.call(n, t, "$&_") + "." + Ji.call(Ji.call(r, /([0-9]{3})/g, "$&_"), /_$/, "");
    }
  }
  return Ji.call(e, t, "$&_");
}
var ay = rD, FP = ay.custom, DP = t4(FP) ? FP : null, a4 = {
  __proto__: null,
  double: '"',
  single: "'"
}, aBe = {
  __proto__: null,
  double: /(["\\])/g,
  single: /(['\\])/g
}, Zu = function a(e, t, i, n) {
  var r = t || {};
  if (yi(r, "quoteStyle") && !yi(a4, r.quoteStyle))
    throw new TypeError('option "quoteStyle" must be "single" or "double"');
  if (yi(r, "maxStringLength") && (typeof r.maxStringLength == "number" ? r.maxStringLength < 0 && r.maxStringLength !== 1 / 0 : r.maxStringLength !== null))
    throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
  var s = yi(r, "customInspect") ? r.customInspect : !0;
  if (typeof s != "boolean" && s !== "symbol")
    throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");
  if (yi(r, "indent") && r.indent !== null && r.indent !== "	" && !(parseInt(r.indent, 10) === r.indent && r.indent > 0))
    throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
  if (yi(r, "numericSeparator") && typeof r.numericSeparator != "boolean")
    throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
  var o = r.numericSeparator;
  if (typeof e > "u")
    return "undefined";
  if (e === null)
    return "null";
  if (typeof e == "boolean")
    return e ? "true" : "false";
  if (typeof e == "string")
    return n4(e, r);
  if (typeof e == "number") {
    if (e === 0)
      return 1 / 0 / e > 0 ? "0" : "-0";
    var d = String(e);
    return o ? WP(e, d) : d;
  }
  if (typeof e == "bigint") {
    var c = String(e) + "n";
    return o ? WP(e, c) : c;
  }
  var p = typeof r.depth > "u" ? 5 : r.depth;
  if (typeof i > "u" && (i = 0), i >= p && p > 0 && typeof e == "object")
    return ey(e) ? "[Array]" : "[Object]";
  var m = wBe(r, i);
  if (typeof n > "u")
    n = [];
  else if (i4(n, e) >= 0)
    return "[Circular]";
  function w(ea, ra, J) {
    if (ra && (n = Q4e.call(n), n.push(ra)), J) {
      var $a = {
        depth: r.depth
      };
      return yi(r, "quoteStyle") && ($a.quoteStyle = r.quoteStyle), a(ea, $a, i + 1, n);
    }
    return a(ea, r, i + 1, n);
  }
  if (typeof e == "function" && !BP(e)) {
    var v = lBe(e), $ = dl(e, w);
    return "[Function" + (v ? ": " + v : " (anonymous)") + "]" + ($.length > 0 ? " { " + Gt.call($, ", ") + " }" : "");
  }
  if (t4(e)) {
    var P = Qr ? Ji.call(String(e), /^(Symbol\(.*\))_[^)]*$/, "$1") : Qf.call(e);
    return typeof e == "object" && !Qr ? Xs(P) : P;
  }
  if (zBe(e)) {
    for (var h = "<" + MP.call(String(e.nodeName)), z = e.attributes || [], b = 0; b < z.length; b++)
      h += " " + z[b].name + "=" + e4(eBe(z[b].value), "double", r);
    return h += ">", e.childNodes && e.childNodes.length && (h += "..."), h += "</" + MP.call(String(e.nodeName)) + ">", h;
  }
  if (ey(e)) {
    if (e.length === 0)
      return "[]";
    var _ = dl(e, w);
    return m && !yBe(_) ? "[" + ty(_, m) + "]" : "[ " + Gt.call(_, ", ") + " ]";
  }
  if (iBe(e)) {
    var S = dl(e, w);
    return !("cause" in Error.prototype) && "cause" in e && !QD.call(e, "cause") ? "{ [" + String(e) + "] " + Gt.call(CP.call("[cause]: " + w(e.cause), S), ", ") + " }" : S.length === 0 ? "[" + String(e) + "]" : "{ [" + String(e) + "] " + Gt.call(S, ", ") + " }";
  }
  if (typeof e == "object" && s) {
    if (DP && typeof e[DP] == "function" && ay)
      return ay(e, { depth: p - i });
    if (s !== "symbol" && typeof e.inspect == "function")
      return e.inspect();
  }
  if (cBe(e)) {
    var A = [];
    return TP && TP.call(e, function(ea, ra) {
      A.push(w(ra, e, !0) + " => " + w(ea, e));
    }), NP("Map", tc.call(e), A, m);
  }
  if (mBe(e)) {
    var L = [];
    return RP && RP.call(e, function(ea) {
      L.push(w(ea, e));
    }), NP("Set", ic.call(e), L, m);
  }
  if (uBe(e))
    return Hz("WeakMap");
  if (gBe(e))
    return Hz("WeakSet");
  if (pBe(e))
    return Hz("WeakRef");
  if (rBe(e))
    return Xs(w(Number(e)));
  if (oBe(e))
    return Xs(w(Jf.call(e)));
  if (sBe(e))
    return Xs(G4e.call(e));
  if (nBe(e))
    return Xs(w(String(e)));
  if (typeof window < "u" && e === window)
    return "{ [object Window] }";
  if (typeof globalThis < "u" && e === globalThis || typeof Ca < "u" && e === Ca)
    return "{ [object globalThis] }";
  if (!tBe(e) && !BP(e)) {
    var R = dl(e, w), E = IP ? IP(e) === Object.prototype : e instanceof Object || e.constructor === Object, N = e instanceof Object ? "" : "null prototype", D = !E && Me && Object(e) === e && Me in e ? Rb.call(kn(e), 8, -1) : N ? "Object" : "", H = E || typeof e.constructor != "function" ? "" : e.constructor.name ? e.constructor.name + " " : "", j = H + (D || N ? "[" + Gt.call(CP.call([], D || [], N || []), ": ") + "] " : "");
    return R.length === 0 ? j + "{}" : m ? j + "{" + ty(R, m) + "}" : j + "{ " + Gt.call(R, ", ") + " }";
  }
  return String(e);
};
function e4(a, e, t) {
  var i = t.quoteStyle || e, n = a4[i];
  return n + a + n;
}
function eBe(a) {
  return Ji.call(String(a), /"/g, "&quot;");
}
function ey(a) {
  return kn(a) === "[object Array]" && (!Me || !(typeof a == "object" && Me in a));
}
function tBe(a) {
  return kn(a) === "[object Date]" && (!Me || !(typeof a == "object" && Me in a));
}
function BP(a) {
  return kn(a) === "[object RegExp]" && (!Me || !(typeof a == "object" && Me in a));
}
function iBe(a) {
  return kn(a) === "[object Error]" && (!Me || !(typeof a == "object" && Me in a));
}
function nBe(a) {
  return kn(a) === "[object String]" && (!Me || !(typeof a == "object" && Me in a));
}
function rBe(a) {
  return kn(a) === "[object Number]" && (!Me || !(typeof a == "object" && Me in a));
}
function sBe(a) {
  return kn(a) === "[object Boolean]" && (!Me || !(typeof a == "object" && Me in a));
}
function t4(a) {
  if (Qr)
    return a && typeof a == "object" && a instanceof Symbol;
  if (typeof a == "symbol")
    return !0;
  if (!a || typeof a != "object" || !Qf)
    return !1;
  try {
    return Qf.call(a), !0;
  } catch {
  }
  return !1;
}
function oBe(a) {
  if (!a || typeof a != "object" || !Jf)
    return !1;
  try {
    return Jf.call(a), !0;
  } catch {
  }
  return !1;
}
var dBe = Object.prototype.hasOwnProperty || function(a) {
  return a in this;
};
function yi(a, e) {
  return dBe.call(a, e);
}
function kn(a) {
  return Y4e.call(a);
}
function lBe(a) {
  if (a.name)
    return a.name;
  var e = X4e.call(Z4e.call(a), /^function\s*([\w$]+)/);
  return e ? e[1] : null;
}
function i4(a, e) {
  if (a.indexOf)
    return a.indexOf(e);
  for (var t = 0, i = a.length; t < i; t++)
    if (a[t] === e)
      return t;
  return -1;
}
function cBe(a) {
  if (!tc || !a || typeof a != "object")
    return !1;
  try {
    tc.call(a);
    try {
      ic.call(a);
    } catch {
      return !0;
    }
    return a instanceof Map;
  } catch {
  }
  return !1;
}
function uBe(a) {
  if (!so || !a || typeof a != "object")
    return !1;
  try {
    so.call(a, so);
    try {
      oo.call(a, oo);
    } catch {
      return !0;
    }
    return a instanceof WeakMap;
  } catch {
  }
  return !1;
}
function pBe(a) {
  if (!OP || !a || typeof a != "object")
    return !1;
  try {
    return OP.call(a), !0;
  } catch {
  }
  return !1;
}
function mBe(a) {
  if (!ic || !a || typeof a != "object")
    return !1;
  try {
    ic.call(a);
    try {
      tc.call(a);
    } catch {
      return !0;
    }
    return a instanceof Set;
  } catch {
  }
  return !1;
}
function gBe(a) {
  if (!oo || !a || typeof a != "object")
    return !1;
  try {
    oo.call(a, oo);
    try {
      so.call(a, so);
    } catch {
      return !0;
    }
    return a instanceof WeakSet;
  } catch {
  }
  return !1;
}
function zBe(a) {
  return !a || typeof a != "object" ? !1 : typeof HTMLElement < "u" && a instanceof HTMLElement ? !0 : typeof a.nodeName == "string" && typeof a.getAttribute == "function";
}
function n4(a, e) {
  if (a.length > e.maxStringLength) {
    var t = a.length - e.maxStringLength, i = "... " + t + " more character" + (t > 1 ? "s" : "");
    return n4(Rb.call(a, 0, e.maxStringLength), e) + i;
  }
  var n = aBe[e.quoteStyle || "single"];
  n.lastIndex = 0;
  var r = Ji.call(Ji.call(a, n, "\\$1"), /[\x00-\x1f]/g, fBe);
  return e4(r, "single", e);
}
function fBe(a) {
  var e = a.charCodeAt(0), t = {
    8: "b",
    9: "t",
    10: "n",
    12: "f",
    13: "r"
  }[e];
  return t ? "\\" + t : "\\x" + (e < 16 ? "0" : "") + J4e.call(e.toString(16));
}
function Xs(a) {
  return "Object(" + a + ")";
}
function Hz(a) {
  return a + " { ? }";
}
function NP(a, e, t, i) {
  var n = i ? ty(t, i) : Gt.call(t, ", ");
  return a + " (" + e + ") {" + n + "}";
}
function yBe(a) {
  for (var e = 0; e < a.length; e++)
    if (i4(a[e], `
`) >= 0)
      return !1;
  return !0;
}
function wBe(a, e) {
  var t;
  if (a.indent === "	")
    t = "	";
  else if (typeof a.indent == "number" && a.indent > 0)
    t = Gt.call(Array(a.indent + 1), " ");
  else
    return null;
  return {
    base: t,
    prev: Gt.call(Array(e + 1), t)
  };
}
function ty(a, e) {
  if (a.length === 0)
    return "";
  var t = `
` + e.prev + e.base;
  return t + Gt.call(a, "," + t) + `
` + e.prev;
}
function dl(a, e) {
  var t = ey(a), i = [];
  if (t) {
    i.length = a.length;
    for (var n = 0; n < a.length; n++)
      i[n] = yi(a, n) ? e(a[n], a) : "";
  }
  var r = typeof Uz == "function" ? Uz(a) : [], s;
  if (Qr) {
    s = {};
    for (var o = 0; o < r.length; o++)
      s["$" + r[o]] = r[o];
  }
  for (var d in a)
    yi(a, d) && (t && String(Number(d)) === d && d < a.length || Qr && s["$" + d] instanceof Symbol || (JD.call(/[^\w$]/, d) ? i.push(e(d, a) + ": " + e(a[d], a)) : i.push(d + ": " + e(a[d], a))));
  if (typeof Uz == "function")
    for (var c = 0; c < r.length; c++)
      QD.call(a, r[c]) && i.push("[" + e(r[c]) + "]: " + e(a[r[c]], a));
  return i;
}
var hBe = Zu, bBe = hn, Xu = function(a, e, t) {
  for (var i = a, n; (n = i.next) != null; i = n)
    if (n.key === e)
      return i.next = n.next, t || (n.next = /** @type {NonNullable<typeof list.next>} */
      a.next, a.next = n), n;
}, vBe = function(a, e) {
  if (a) {
    var t = Xu(a, e);
    return t && t.value;
  }
}, kBe = function(a, e, t) {
  var i = Xu(a, e);
  i ? i.value = t : a.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */
  {
    // eslint-disable-line no-param-reassign, no-extra-parens
    key: e,
    next: a.next,
    value: t
  };
}, _Be = function(a, e) {
  return a ? !!Xu(a, e) : !1;
}, $Be = function(a, e) {
  if (a)
    return Xu(a, e, !0);
}, jBe = function() {
  var e, t = {
    assert: function(i) {
      if (!t.has(i))
        throw new bBe("Side channel does not contain " + hBe(i));
    },
    delete: function(i) {
      var n = e && e.next, r = $Be(e, i);
      return r && n && n === r && (e = void 0), !!r;
    },
    get: function(i) {
      return vBe(e, i);
    },
    has: function(i) {
      return _Be(e, i);
    },
    set: function(i, n) {
      e || (e = {
        next: void 0
      }), kBe(
        /** @type {NonNullable<typeof $o>} */
        e,
        i,
        n
      );
    }
  };
  return t;
}, r4 = cd, s4 = Nh, xBe = s4(
  /** @type {typeof String.prototype.indexOf} */
  r4("String.prototype.indexOf")
), o4 = function(e, t) {
  var i = (
    /** @type {Parameters<typeof callBind>[0]} */
    r4(e, !!t)
  );
  return typeof i == "function" && xBe(e, ".prototype.") > -1 ? s4(i) : i;
}, ABe = cd, Ad = o4, EBe = Zu, SBe = hn, UP = ABe("%Map%", !0), qBe = Ad("Map.prototype.get", !0), PBe = Ad("Map.prototype.set", !0), TBe = Ad("Map.prototype.has", !0), RBe = Ad("Map.prototype.delete", !0), OBe = Ad("Map.prototype.size", !0), d4 = !!UP && /** @type {Exclude<import('.'), false>} */
function() {
  var e, t = {
    assert: function(i) {
      if (!t.has(i))
        throw new SBe("Side channel does not contain " + EBe(i));
    },
    delete: function(i) {
      if (e) {
        var n = RBe(e, i);
        return OBe(e) === 0 && (e = void 0), n;
      }
      return !1;
    },
    get: function(i) {
      if (e)
        return qBe(e, i);
    },
    has: function(i) {
      return e ? TBe(e, i) : !1;
    },
    set: function(i, n) {
      e || (e = new UP()), PBe(e, i, n);
    }
  };
  return t;
}, MBe = cd, Ju = o4, CBe = Zu, ll = d4, LBe = hn, Ar = MBe("%WeakMap%", !0), IBe = Ju("WeakMap.prototype.get", !0), WBe = Ju("WeakMap.prototype.set", !0), FBe = Ju("WeakMap.prototype.has", !0), DBe = Ju("WeakMap.prototype.delete", !0), BBe = Ar ? (
  /** @type {Exclude<import('.'), false>} */
  function() {
    var e, t, i = {
      assert: function(n) {
        if (!i.has(n))
          throw new LBe("Side channel does not contain " + CBe(n));
      },
      delete: function(n) {
        if (Ar && n && (typeof n == "object" || typeof n == "function")) {
          if (e)
            return DBe(e, n);
        } else if (ll && t)
          return t.delete(n);
        return !1;
      },
      get: function(n) {
        return Ar && n && (typeof n == "object" || typeof n == "function") && e ? IBe(e, n) : t && t.get(n);
      },
      has: function(n) {
        return Ar && n && (typeof n == "object" || typeof n == "function") && e ? FBe(e, n) : !!t && t.has(n);
      },
      set: function(n, r) {
        Ar && n && (typeof n == "object" || typeof n == "function") ? (e || (e = new Ar()), WBe(e, n, r)) : ll && (t || (t = ll()), t.set(n, r));
      }
    };
    return i;
  }
) : ll, NBe = hn, UBe = Zu, HBe = jBe, VBe = d4, KBe = BBe, GBe = KBe || VBe || HBe, YBe = function() {
  var e, t = {
    assert: function(i) {
      if (!t.has(i))
        throw new NBe("Side channel does not contain " + UBe(i));
    },
    delete: function(i) {
      return !!e && e.delete(i);
    },
    get: function(i) {
      return e && e.get(i);
    },
    has: function(i) {
      return !!e && e.has(i);
    },
    set: function(i, n) {
      e || (e = GBe()), e.set(i, n);
    }
  };
  return t;
}, ZBe = String.prototype.replace, XBe = /%20/g, Vz = {
  RFC1738: "RFC1738",
  RFC3986: "RFC3986"
}, Ob = {
  default: Vz.RFC3986,
  formatters: {
    RFC1738: function(a) {
      return ZBe.call(a, XBe, "+");
    },
    RFC3986: function(a) {
      return String(a);
    }
  },
  RFC1738: Vz.RFC1738,
  RFC3986: Vz.RFC3986
}, JBe = Ob, Kz = Object.prototype.hasOwnProperty, Wn = Array.isArray, Bt = function() {
  for (var a = [], e = 0; e < 256; ++e)
    a.push("%" + ((e < 16 ? "0" : "") + e.toString(16)).toUpperCase());
  return a;
}(), QBe = function(e) {
  for (; e.length > 1; ) {
    var t = e.pop(), i = t.obj[t.prop];
    if (Wn(i)) {
      for (var n = [], r = 0; r < i.length; ++r)
        typeof i[r] < "u" && n.push(i[r]);
      t.obj[t.prop] = n;
    }
  }
}, l4 = function(e, t) {
  for (var i = t && t.plainObjects ? { __proto__: null } : {}, n = 0; n < e.length; ++n)
    typeof e[n] < "u" && (i[n] = e[n]);
  return i;
}, aNe = function a(e, t, i) {
  if (!t)
    return e;
  if (typeof t != "object" && typeof t != "function") {
    if (Wn(e))
      e.push(t);
    else if (e && typeof e == "object")
      (i && (i.plainObjects || i.allowPrototypes) || !Kz.call(Object.prototype, t)) && (e[t] = !0);
    else
      return [e, t];
    return e;
  }
  if (!e || typeof e != "object")
    return [e].concat(t);
  var n = e;
  return Wn(e) && !Wn(t) && (n = l4(e, i)), Wn(e) && Wn(t) ? (t.forEach(function(r, s) {
    if (Kz.call(e, s)) {
      var o = e[s];
      o && typeof o == "object" && r && typeof r == "object" ? e[s] = a(o, r, i) : e.push(r);
    } else
      e[s] = r;
  }), e) : Object.keys(t).reduce(function(r, s) {
    var o = t[s];
    return Kz.call(r, s) ? r[s] = a(r[s], o, i) : r[s] = o, r;
  }, n);
}, eNe = function(e, t) {
  return Object.keys(t).reduce(function(i, n) {
    return i[n] = t[n], i;
  }, e);
}, tNe = function(a, e, t) {
  var i = a.replace(/\+/g, " ");
  if (t === "iso-8859-1")
    return i.replace(/%[0-9a-f]{2}/gi, unescape);
  try {
    return decodeURIComponent(i);
  } catch {
    return i;
  }
}, Gz = 1024, iNe = function(e, t, i, n, r) {
  if (e.length === 0)
    return e;
  var s = e;
  if (typeof e == "symbol" ? s = Symbol.prototype.toString.call(e) : typeof e != "string" && (s = String(e)), i === "iso-8859-1")
    return escape(s).replace(/%u[0-9a-f]{4}/gi, function(v) {
      return "%26%23" + parseInt(v.slice(2), 16) + "%3B";
    });
  for (var o = "", d = 0; d < s.length; d += Gz) {
    for (var c = s.length >= Gz ? s.slice(d, d + Gz) : s, p = [], m = 0; m < c.length; ++m) {
      var w = c.charCodeAt(m);
      if (w === 45 || w === 46 || w === 95 || w === 126 || w >= 48 && w <= 57 || w >= 65 && w <= 90 || w >= 97 && w <= 122 || r === JBe.RFC1738 && (w === 40 || w === 41)) {
        p[p.length] = c.charAt(m);
        continue;
      }
      if (w < 128) {
        p[p.length] = Bt[w];
        continue;
      }
      if (w < 2048) {
        p[p.length] = Bt[192 | w >> 6] + Bt[128 | w & 63];
        continue;
      }
      if (w < 55296 || w >= 57344) {
        p[p.length] = Bt[224 | w >> 12] + Bt[128 | w >> 6 & 63] + Bt[128 | w & 63];
        continue;
      }
      m += 1, w = 65536 + ((w & 1023) << 10 | c.charCodeAt(m) & 1023), p[p.length] = Bt[240 | w >> 18] + Bt[128 | w >> 12 & 63] + Bt[128 | w >> 6 & 63] + Bt[128 | w & 63];
    }
    o += p.join("");
  }
  return o;
}, nNe = function(e) {
  for (var t = [{ obj: { o: e }, prop: "o" }], i = [], n = 0; n < t.length; ++n)
    for (var r = t[n], s = r.obj[r.prop], o = Object.keys(s), d = 0; d < o.length; ++d) {
      var c = o[d], p = s[c];
      typeof p == "object" && p !== null && i.indexOf(p) === -1 && (t.push({ obj: s, prop: c }), i.push(p));
    }
  return QBe(t), e;
}, rNe = function(e) {
  return Object.prototype.toString.call(e) === "[object RegExp]";
}, sNe = function(e) {
  return !e || typeof e != "object" ? !1 : !!(e.constructor && e.constructor.isBuffer && e.constructor.isBuffer(e));
}, oNe = function(e, t) {
  return [].concat(e, t);
}, dNe = function(e, t) {
  if (Wn(e)) {
    for (var i = [], n = 0; n < e.length; n += 1)
      i.push(t(e[n]));
    return i;
  }
  return t(e);
}, c4 = {
  arrayToObject: l4,
  assign: eNe,
  combine: oNe,
  compact: nNe,
  decode: tNe,
  encode: iNe,
  isBuffer: sNe,
  isRegExp: rNe,
  maybeMap: dNe,
  merge: aNe
}, u4 = YBe, El = c4, lo = Ob, lNe = Object.prototype.hasOwnProperty, p4 = {
  brackets: function(e) {
    return e + "[]";
  },
  comma: "comma",
  indices: function(e, t) {
    return e + "[" + t + "]";
  },
  repeat: function(e) {
    return e;
  }
}, Kt = Array.isArray, cNe = Array.prototype.push, m4 = function(a, e) {
  cNe.apply(a, Kt(e) ? e : [e]);
}, uNe = Date.prototype.toISOString, HP = lo.default, ue = {
  addQueryPrefix: !1,
  allowDots: !1,
  allowEmptyArrays: !1,
  arrayFormat: "indices",
  charset: "utf-8",
  charsetSentinel: !1,
  commaRoundTrip: !1,
  delimiter: "&",
  encode: !0,
  encodeDotInKeys: !1,
  encoder: El.encode,
  encodeValuesOnly: !1,
  filter: void 0,
  format: HP,
  formatter: lo.formatters[HP],
  // deprecated
  indices: !1,
  serializeDate: function(e) {
    return uNe.call(e);
  },
  skipNulls: !1,
  strictNullHandling: !1
}, pNe = function(e) {
  return typeof e == "string" || typeof e == "number" || typeof e == "boolean" || typeof e == "symbol" || typeof e == "bigint";
}, Yz = {}, mNe = function a(e, t, i, n, r, s, o, d, c, p, m, w, v, $, P, h, z, b) {
  for (var _ = e, S = b, A = 0, L = !1; (S = S.get(Yz)) !== void 0 && !L; ) {
    var R = S.get(e);
    if (A += 1, typeof R < "u") {
      if (R === A)
        throw new RangeError("Cyclic object value");
      L = !0;
    }
    typeof S.get(Yz) > "u" && (A = 0);
  }
  if (typeof p == "function" ? _ = p(t, _) : _ instanceof Date ? _ = v(_) : i === "comma" && Kt(_) && (_ = El.maybeMap(_, function(O) {
    return O instanceof Date ? v(O) : O;
  })), _ === null) {
    if (s)
      return c && !h ? c(t, ue.encoder, z, "key", $) : t;
    _ = "";
  }
  if (pNe(_) || El.isBuffer(_)) {
    if (c) {
      var E = h ? t : c(t, ue.encoder, z, "key", $);
      return [P(E) + "=" + P(c(_, ue.encoder, z, "value", $))];
    }
    return [P(t) + "=" + P(String(_))];
  }
  var N = [];
  if (typeof _ > "u")
    return N;
  var D;
  if (i === "comma" && Kt(_))
    h && c && (_ = El.maybeMap(_, c)), D = [{ value: _.length > 0 ? _.join(",") || null : void 0 }];
  else if (Kt(p))
    D = p;
  else {
    var H = Object.keys(_);
    D = m ? H.sort(m) : H;
  }
  var j = d ? String(t).replace(/\./g, "%2E") : String(t), ea = n && Kt(_) && _.length === 1 ? j + "[]" : j;
  if (r && Kt(_) && _.length === 0)
    return ea + "[]";
  for (var ra = 0; ra < D.length; ++ra) {
    var J = D[ra], $a = typeof J == "object" && J && typeof J.value < "u" ? J.value : _[J];
    if (!(o && $a === null)) {
      var ne = w && d ? String(J).replace(/\./g, "%2E") : String(J), fa = Kt(_) ? typeof i == "function" ? i(ea, ne) : ea : ea + (w ? "." + ne : "[" + ne + "]");
      b.set(e, A);
      var Ea = u4();
      Ea.set(Yz, b), m4(N, a(
        $a,
        fa,
        i,
        n,
        r,
        s,
        o,
        d,
        i === "comma" && h && Kt(_) ? null : c,
        p,
        m,
        w,
        v,
        $,
        P,
        h,
        z,
        Ea
      ));
    }
  }
  return N;
}, gNe = function(e) {
  if (!e)
    return ue;
  if (typeof e.allowEmptyArrays < "u" && typeof e.allowEmptyArrays != "boolean")
    throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
  if (typeof e.encodeDotInKeys < "u" && typeof e.encodeDotInKeys != "boolean")
    throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");
  if (e.encoder !== null && typeof e.encoder < "u" && typeof e.encoder != "function")
    throw new TypeError("Encoder has to be a function.");
  var t = e.charset || ue.charset;
  if (typeof e.charset < "u" && e.charset !== "utf-8" && e.charset !== "iso-8859-1")
    throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
  var i = lo.default;
  if (typeof e.format < "u") {
    if (!lNe.call(lo.formatters, e.format))
      throw new TypeError("Unknown format option provided.");
    i = e.format;
  }
  var n = lo.formatters[i], r = ue.filter;
  (typeof e.filter == "function" || Kt(e.filter)) && (r = e.filter);
  var s;
  if (e.arrayFormat in p4 ? s = e.arrayFormat : "indices" in e ? s = e.indices ? "indices" : "repeat" : s = ue.arrayFormat, "commaRoundTrip" in e && typeof e.commaRoundTrip != "boolean")
    throw new TypeError("`commaRoundTrip` must be a boolean, or absent");
  var o = typeof e.allowDots > "u" ? e.encodeDotInKeys === !0 ? !0 : ue.allowDots : !!e.allowDots;
  return {
    addQueryPrefix: typeof e.addQueryPrefix == "boolean" ? e.addQueryPrefix : ue.addQueryPrefix,
    allowDots: o,
    allowEmptyArrays: typeof e.allowEmptyArrays == "boolean" ? !!e.allowEmptyArrays : ue.allowEmptyArrays,
    arrayFormat: s,
    charset: t,
    charsetSentinel: typeof e.charsetSentinel == "boolean" ? e.charsetSentinel : ue.charsetSentinel,
    commaRoundTrip: !!e.commaRoundTrip,
    delimiter: typeof e.delimiter > "u" ? ue.delimiter : e.delimiter,
    encode: typeof e.encode == "boolean" ? e.encode : ue.encode,
    encodeDotInKeys: typeof e.encodeDotInKeys == "boolean" ? e.encodeDotInKeys : ue.encodeDotInKeys,
    encoder: typeof e.encoder == "function" ? e.encoder : ue.encoder,
    encodeValuesOnly: typeof e.encodeValuesOnly == "boolean" ? e.encodeValuesOnly : ue.encodeValuesOnly,
    filter: r,
    format: i,
    formatter: n,
    serializeDate: typeof e.serializeDate == "function" ? e.serializeDate : ue.serializeDate,
    skipNulls: typeof e.skipNulls == "boolean" ? e.skipNulls : ue.skipNulls,
    sort: typeof e.sort == "function" ? e.sort : null,
    strictNullHandling: typeof e.strictNullHandling == "boolean" ? e.strictNullHandling : ue.strictNullHandling
  };
}, zNe = function(a, e) {
  var t = a, i = gNe(e), n, r;
  typeof i.filter == "function" ? (r = i.filter, t = r("", t)) : Kt(i.filter) && (r = i.filter, n = r);
  var s = [];
  if (typeof t != "object" || t === null)
    return "";
  var o = p4[i.arrayFormat], d = o === "comma" && i.commaRoundTrip;
  n || (n = Object.keys(t)), i.sort && n.sort(i.sort);
  for (var c = u4(), p = 0; p < n.length; ++p) {
    var m = n[p], w = t[m];
    i.skipNulls && w === null || m4(s, mNe(
      w,
      m,
      o,
      d,
      i.allowEmptyArrays,
      i.strictNullHandling,
      i.skipNulls,
      i.encodeDotInKeys,
      i.encode ? i.encoder : null,
      i.filter,
      i.sort,
      i.allowDots,
      i.serializeDate,
      i.format,
      i.formatter,
      i.encodeValuesOnly,
      i.charset,
      c
    ));
  }
  var v = s.join(i.delimiter), $ = i.addQueryPrefix === !0 ? "?" : "";
  return i.charsetSentinel && (i.charset === "iso-8859-1" ? $ += "utf8=%26%2310003%3B&" : $ += "utf8=%E2%9C%93&"), v.length > 0 ? $ + v : "";
}, as = c4, iy = Object.prototype.hasOwnProperty, fNe = Array.isArray, ee = {
  allowDots: !1,
  allowEmptyArrays: !1,
  allowPrototypes: !1,
  allowSparse: !1,
  arrayLimit: 20,
  charset: "utf-8",
  charsetSentinel: !1,
  comma: !1,
  decodeDotInKeys: !1,
  decoder: as.decode,
  delimiter: "&",
  depth: 5,
  duplicates: "combine",
  ignoreQueryPrefix: !1,
  interpretNumericEntities: !1,
  parameterLimit: 1e3,
  parseArrays: !0,
  plainObjects: !1,
  strictDepth: !1,
  strictNullHandling: !1
}, yNe = function(a) {
  return a.replace(/&#(\d+);/g, function(e, t) {
    return String.fromCharCode(parseInt(t, 10));
  });
}, g4 = function(a, e) {
  return a && typeof a == "string" && e.comma && a.indexOf(",") > -1 ? a.split(",") : a;
}, wNe = "utf8=%26%2310003%3B", hNe = "utf8=%E2%9C%93", bNe = function(e, t) {
  var i = { __proto__: null }, n = t.ignoreQueryPrefix ? e.replace(/^\?/, "") : e;
  n = n.replace(/%5B/gi, "[").replace(/%5D/gi, "]");
  var r = t.parameterLimit === 1 / 0 ? void 0 : t.parameterLimit, s = n.split(t.delimiter, r), o = -1, d, c = t.charset;
  if (t.charsetSentinel)
    for (d = 0; d < s.length; ++d)
      s[d].indexOf("utf8=") === 0 && (s[d] === hNe ? c = "utf-8" : s[d] === wNe && (c = "iso-8859-1"), o = d, d = s.length);
  for (d = 0; d < s.length; ++d)
    if (d !== o) {
      var p = s[d], m = p.indexOf("]="), w = m === -1 ? p.indexOf("=") : m + 1, v, $;
      w === -1 ? (v = t.decoder(p, ee.decoder, c, "key"), $ = t.strictNullHandling ? null : "") : (v = t.decoder(p.slice(0, w), ee.decoder, c, "key"), $ = as.maybeMap(
        g4(p.slice(w + 1), t),
        function(h) {
          return t.decoder(h, ee.decoder, c, "value");
        }
      )), $ && t.interpretNumericEntities && c === "iso-8859-1" && ($ = yNe(String($))), p.indexOf("[]=") > -1 && ($ = fNe($) ? [$] : $);
      var P = iy.call(i, v);
      P && t.duplicates === "combine" ? i[v] = as.combine(i[v], $) : (!P || t.duplicates === "last") && (i[v] = $);
    }
  return i;
}, vNe = function(a, e, t, i) {
  for (var n = i ? e : g4(e, t), r = a.length - 1; r >= 0; --r) {
    var s, o = a[r];
    if (o === "[]" && t.parseArrays)
      s = t.allowEmptyArrays && (n === "" || t.strictNullHandling && n === null) ? [] : [].concat(n);
    else {
      s = t.plainObjects ? { __proto__: null } : {};
      var d = o.charAt(0) === "[" && o.charAt(o.length - 1) === "]" ? o.slice(1, -1) : o, c = t.decodeDotInKeys ? d.replace(/%2E/g, ".") : d, p = parseInt(c, 10);
      !t.parseArrays && c === "" ? s = { 0: n } : !isNaN(p) && o !== c && String(p) === c && p >= 0 && t.parseArrays && p <= t.arrayLimit ? (s = [], s[p] = n) : c !== "__proto__" && (s[c] = n);
    }
    n = s;
  }
  return n;
}, kNe = function(e, t, i, n) {
  if (e) {
    var r = i.allowDots ? e.replace(/\.([^.[]+)/g, "[$1]") : e, s = /(\[[^[\]]*])/, o = /(\[[^[\]]*])/g, d = i.depth > 0 && s.exec(r), c = d ? r.slice(0, d.index) : r, p = [];
    if (c) {
      if (!i.plainObjects && iy.call(Object.prototype, c) && !i.allowPrototypes)
        return;
      p.push(c);
    }
    for (var m = 0; i.depth > 0 && (d = o.exec(r)) !== null && m < i.depth; ) {
      if (m += 1, !i.plainObjects && iy.call(Object.prototype, d[1].slice(1, -1)) && !i.allowPrototypes)
        return;
      p.push(d[1]);
    }
    if (d) {
      if (i.strictDepth === !0)
        throw new RangeError("Input depth exceeded depth option of " + i.depth + " and strictDepth is true");
      p.push("[" + r.slice(d.index) + "]");
    }
    return vNe(p, t, i, n);
  }
}, _Ne = function(e) {
  if (!e)
    return ee;
  if (typeof e.allowEmptyArrays < "u" && typeof e.allowEmptyArrays != "boolean")
    throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");
  if (typeof e.decodeDotInKeys < "u" && typeof e.decodeDotInKeys != "boolean")
    throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");
  if (e.decoder !== null && typeof e.decoder < "u" && typeof e.decoder != "function")
    throw new TypeError("Decoder has to be a function.");
  if (typeof e.charset < "u" && e.charset !== "utf-8" && e.charset !== "iso-8859-1")
    throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
  var t = typeof e.charset > "u" ? ee.charset : e.charset, i = typeof e.duplicates > "u" ? ee.duplicates : e.duplicates;
  if (i !== "combine" && i !== "first" && i !== "last")
    throw new TypeError("The duplicates option must be either combine, first, or last");
  var n = typeof e.allowDots > "u" ? e.decodeDotInKeys === !0 ? !0 : ee.allowDots : !!e.allowDots;
  return {
    allowDots: n,
    allowEmptyArrays: typeof e.allowEmptyArrays == "boolean" ? !!e.allowEmptyArrays : ee.allowEmptyArrays,
    allowPrototypes: typeof e.allowPrototypes == "boolean" ? e.allowPrototypes : ee.allowPrototypes,
    allowSparse: typeof e.allowSparse == "boolean" ? e.allowSparse : ee.allowSparse,
    arrayLimit: typeof e.arrayLimit == "number" ? e.arrayLimit : ee.arrayLimit,
    charset: t,
    charsetSentinel: typeof e.charsetSentinel == "boolean" ? e.charsetSentinel : ee.charsetSentinel,
    comma: typeof e.comma == "boolean" ? e.comma : ee.comma,
    decodeDotInKeys: typeof e.decodeDotInKeys == "boolean" ? e.decodeDotInKeys : ee.decodeDotInKeys,
    decoder: typeof e.decoder == "function" ? e.decoder : ee.decoder,
    delimiter: typeof e.delimiter == "string" || as.isRegExp(e.delimiter) ? e.delimiter : ee.delimiter,
    // eslint-disable-next-line no-implicit-coercion, no-extra-parens
    depth: typeof e.depth == "number" || e.depth === !1 ? +e.depth : ee.depth,
    duplicates: i,
    ignoreQueryPrefix: e.ignoreQueryPrefix === !0,
    interpretNumericEntities: typeof e.interpretNumericEntities == "boolean" ? e.interpretNumericEntities : ee.interpretNumericEntities,
    parameterLimit: typeof e.parameterLimit == "number" ? e.parameterLimit : ee.parameterLimit,
    parseArrays: e.parseArrays !== !1,
    plainObjects: typeof e.plainObjects == "boolean" ? e.plainObjects : ee.plainObjects,
    strictDepth: typeof e.strictDepth == "boolean" ? !!e.strictDepth : ee.strictDepth,
    strictNullHandling: typeof e.strictNullHandling == "boolean" ? e.strictNullHandling : ee.strictNullHandling
  };
}, $Ne = function(a, e) {
  var t = _Ne(e);
  if (a === "" || a === null || typeof a > "u")
    return t.plainObjects ? { __proto__: null } : {};
  for (var i = typeof a == "string" ? bNe(a, t) : a, n = t.plainObjects ? { __proto__: null } : {}, r = Object.keys(i), s = 0; s < r.length; ++s) {
    var o = r[s], d = kNe(o, i[o], t, typeof a == "string");
    n = as.merge(n, d, t);
  }
  return t.allowSparse === !0 ? n : as.compact(n);
}, jNe = zNe, xNe = $Ne, ANe = Ob, ENe = {
  formats: ANe,
  parse: xNe,
  stringify: jNe
};
const SNe = /* @__PURE__ */ _y(ENe);
var qNe = U4e;
function yt() {
  this.protocol = null, this.slashes = null, this.auth = null, this.host = null, this.port = null, this.hostname = null, this.hash = null, this.search = null, this.query = null, this.pathname = null, this.path = null, this.href = null;
}
var PNe = /^([a-z0-9.+-]+:)/i, TNe = /:[0-9]*$/, RNe = /^(\/\/?(?!\/)[^?\s]*)(\?[^\s]*)?$/, ONe = [
  "<",
  ">",
  '"',
  "`",
  " ",
  "\r",
  `
`,
  "	"
], MNe = [
  "{",
  "}",
  "|",
  "\\",
  "^",
  "`"
].concat(ONe), ny = ["'"].concat(MNe), VP = [
  "%",
  "/",
  "?",
  ";",
  "#"
].concat(ny), KP = [
  "/",
  "?",
  "#"
], CNe = 255, GP = /^[+a-z0-9A-Z_-]{0,63}$/, LNe = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, INe = {
  javascript: !0,
  "javascript:": !0
}, ry = {
  javascript: !0,
  "javascript:": !0
}, Vr = {
  http: !0,
  https: !0,
  ftp: !0,
  gopher: !0,
  file: !0,
  "http:": !0,
  "https:": !0,
  "ftp:": !0,
  "gopher:": !0,
  "file:": !0
}, sy = SNe;
function Ed(a, e, t) {
  if (a && typeof a == "object" && a instanceof yt)
    return a;
  var i = new yt();
  return i.parse(a, e, t), i;
}
yt.prototype.parse = function(a, e, t) {
  if (typeof a != "string")
    throw new TypeError("Parameter 'url' must be a string, not " + typeof a);
  var i = a.indexOf("?"), n = i !== -1 && i < a.indexOf("#") ? "?" : "#", r = a.split(n), s = /\\/g;
  r[0] = r[0].replace(s, "/"), a = r.join(n);
  var o = a;
  if (o = o.trim(), !t && a.split("#").length === 1) {
    var d = RNe.exec(o);
    if (d)
      return this.path = o, this.href = o, this.pathname = d[1], d[2] ? (this.search = d[2], e ? this.query = sy.parse(this.search.substr(1)) : this.query = this.search.substr(1)) : e && (this.search = "", this.query = {}), this;
  }
  var c = PNe.exec(o);
  if (c) {
    c = c[0];
    var p = c.toLowerCase();
    this.protocol = p, o = o.substr(c.length);
  }
  if (t || c || o.match(/^\/\/[^@/]+@[^@/]+/)) {
    var m = o.substr(0, 2) === "//";
    m && !(c && ry[c]) && (o = o.substr(2), this.slashes = !0);
  }
  if (!ry[c] && (m || c && !Vr[c])) {
    for (var w = -1, v = 0; v < KP.length; v++) {
      var $ = o.indexOf(KP[v]);
      $ !== -1 && (w === -1 || $ < w) && (w = $);
    }
    var P, h;
    w === -1 ? h = o.lastIndexOf("@") : h = o.lastIndexOf("@", w), h !== -1 && (P = o.slice(0, h), o = o.slice(h + 1), this.auth = decodeURIComponent(P)), w = -1;
    for (var v = 0; v < VP.length; v++) {
      var $ = o.indexOf(VP[v]);
      $ !== -1 && (w === -1 || $ < w) && (w = $);
    }
    w === -1 && (w = o.length), this.host = o.slice(0, w), o = o.slice(w), this.parseHost(), this.hostname = this.hostname || "";
    var z = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
    if (!z)
      for (var b = this.hostname.split(/\./), v = 0, _ = b.length; v < _; v++) {
        var S = b[v];
        if (S && !S.match(GP)) {
          for (var A = "", L = 0, R = S.length; L < R; L++)
            S.charCodeAt(L) > 127 ? A += "x" : A += S[L];
          if (!A.match(GP)) {
            var E = b.slice(0, v), N = b.slice(v + 1), D = S.match(LNe);
            D && (E.push(D[1]), N.unshift(D[2])), N.length && (o = "/" + N.join(".") + o), this.hostname = E.join(".");
            break;
          }
        }
      }
    this.hostname.length > CNe ? this.hostname = "" : this.hostname = this.hostname.toLowerCase(), z || (this.hostname = qNe.toASCII(this.hostname));
    var H = this.port ? ":" + this.port : "", j = this.hostname || "";
    this.host = j + H, this.href += this.host, z && (this.hostname = this.hostname.substr(1, this.hostname.length - 2), o[0] !== "/" && (o = "/" + o));
  }
  if (!INe[p])
    for (var v = 0, _ = ny.length; v < _; v++) {
      var ea = ny[v];
      if (o.indexOf(ea) !== -1) {
        var ra = encodeURIComponent(ea);
        ra === ea && (ra = escape(ea)), o = o.split(ea).join(ra);
      }
    }
  var J = o.indexOf("#");
  J !== -1 && (this.hash = o.substr(J), o = o.slice(0, J));
  var $a = o.indexOf("?");
  if ($a !== -1 ? (this.search = o.substr($a), this.query = o.substr($a + 1), e && (this.query = sy.parse(this.query)), o = o.slice(0, $a)) : e && (this.search = "", this.query = {}), o && (this.pathname = o), Vr[p] && this.hostname && !this.pathname && (this.pathname = "/"), this.pathname || this.search) {
    var H = this.pathname || "", ne = this.search || "";
    this.path = H + ne;
  }
  return this.href = this.format(), this;
};
function WNe(a) {
  return typeof a == "string" && (a = Ed(a)), a instanceof yt ? a.format() : yt.prototype.format.call(a);
}
yt.prototype.format = function() {
  var a = this.auth || "";
  a && (a = encodeURIComponent(a), a = a.replace(/%3A/i, ":"), a += "@");
  var e = this.protocol || "", t = this.pathname || "", i = this.hash || "", n = !1, r = "";
  this.host ? n = a + this.host : this.hostname && (n = a + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]"), this.port && (n += ":" + this.port)), this.query && typeof this.query == "object" && Object.keys(this.query).length && (r = sy.stringify(this.query, {
    arrayFormat: "repeat",
    addQueryPrefix: !1
  }));
  var s = this.search || r && "?" + r || "";
  return e && e.substr(-1) !== ":" && (e += ":"), this.slashes || (!e || Vr[e]) && n !== !1 ? (n = "//" + (n || ""), t && t.charAt(0) !== "/" && (t = "/" + t)) : n || (n = ""), i && i.charAt(0) !== "#" && (i = "#" + i), s && s.charAt(0) !== "?" && (s = "?" + s), t = t.replace(/[?#]/g, function(o) {
    return encodeURIComponent(o);
  }), s = s.replace("#", "%23"), e + n + t + s + i;
};
function FNe(a, e) {
  return Ed(a, !1, !0).resolve(e);
}
yt.prototype.resolve = function(a) {
  return this.resolveObject(Ed(a, !1, !0)).format();
};
function DNe(a, e) {
  return a ? Ed(a, !1, !0).resolveObject(e) : e;
}
yt.prototype.resolveObject = function(a) {
  if (typeof a == "string") {
    var e = new yt();
    e.parse(a, !1, !0), a = e;
  }
  for (var t = new yt(), i = Object.keys(this), n = 0; n < i.length; n++) {
    var r = i[n];
    t[r] = this[r];
  }
  if (t.hash = a.hash, a.href === "")
    return t.href = t.format(), t;
  if (a.slashes && !a.protocol) {
    for (var s = Object.keys(a), o = 0; o < s.length; o++) {
      var d = s[o];
      d !== "protocol" && (t[d] = a[d]);
    }
    return Vr[t.protocol] && t.hostname && !t.pathname && (t.pathname = "/", t.path = t.pathname), t.href = t.format(), t;
  }
  if (a.protocol && a.protocol !== t.protocol) {
    if (!Vr[a.protocol]) {
      for (var c = Object.keys(a), p = 0; p < c.length; p++) {
        var m = c[p];
        t[m] = a[m];
      }
      return t.href = t.format(), t;
    }
    if (t.protocol = a.protocol, !a.host && !ry[a.protocol]) {
      for (var _ = (a.pathname || "").split("/"); _.length && !(a.host = _.shift()); )
        ;
      a.host || (a.host = ""), a.hostname || (a.hostname = ""), _[0] !== "" && _.unshift(""), _.length < 2 && _.unshift(""), t.pathname = _.join("/");
    } else
      t.pathname = a.pathname;
    if (t.search = a.search, t.query = a.query, t.host = a.host || "", t.auth = a.auth, t.hostname = a.hostname || a.host, t.port = a.port, t.pathname || t.search) {
      var w = t.pathname || "", v = t.search || "";
      t.path = w + v;
    }
    return t.slashes = t.slashes || a.slashes, t.href = t.format(), t;
  }
  var $ = t.pathname && t.pathname.charAt(0) === "/", P = a.host || a.pathname && a.pathname.charAt(0) === "/", h = P || $ || t.host && a.pathname, z = h, b = t.pathname && t.pathname.split("/") || [], _ = a.pathname && a.pathname.split("/") || [], S = t.protocol && !Vr[t.protocol];
  if (S && (t.hostname = "", t.port = null, t.host && (b[0] === "" ? b[0] = t.host : b.unshift(t.host)), t.host = "", a.protocol && (a.hostname = null, a.port = null, a.host && (_[0] === "" ? _[0] = a.host : _.unshift(a.host)), a.host = null), h = h && (_[0] === "" || b[0] === "")), P)
    t.host = a.host || a.host === "" ? a.host : t.host, t.hostname = a.hostname || a.hostname === "" ? a.hostname : t.hostname, t.search = a.search, t.query = a.query, b = _;
  else if (_.length)
    b || (b = []), b.pop(), b = b.concat(_), t.search = a.search, t.query = a.query;
  else if (a.search != null) {
    if (S) {
      t.host = b.shift(), t.hostname = t.host;
      var A = t.host && t.host.indexOf("@") > 0 ? t.host.split("@") : !1;
      A && (t.auth = A.shift(), t.hostname = A.shift(), t.host = t.hostname);
    }
    return t.search = a.search, t.query = a.query, (t.pathname !== null || t.search !== null) && (t.path = (t.pathname ? t.pathname : "") + (t.search ? t.search : "")), t.href = t.format(), t;
  }
  if (!b.length)
    return t.pathname = null, t.search ? t.path = "/" + t.search : t.path = null, t.href = t.format(), t;
  for (var L = b.slice(-1)[0], R = (t.host || a.host || b.length > 1) && (L === "." || L === "..") || L === "", E = 0, N = b.length; N >= 0; N--)
    L = b[N], L === "." ? b.splice(N, 1) : L === ".." ? (b.splice(N, 1), E++) : E && (b.splice(N, 1), E--);
  if (!h && !z)
    for (; E--; E)
      b.unshift("..");
  h && b[0] !== "" && (!b[0] || b[0].charAt(0) !== "/") && b.unshift(""), R && b.join("/").substr(-1) !== "/" && b.push("");
  var D = b[0] === "" || b[0] && b[0].charAt(0) === "/";
  if (S) {
    t.hostname = D ? "" : b.length ? b.shift() : "", t.host = t.hostname;
    var A = t.host && t.host.indexOf("@") > 0 ? t.host.split("@") : !1;
    A && (t.auth = A.shift(), t.hostname = A.shift(), t.host = t.hostname);
  }
  return h = h || t.host && b.length, h && !D && b.unshift(""), b.length > 0 ? t.pathname = b.join("/") : (t.pathname = null, t.path = null), (t.pathname !== null || t.search !== null) && (t.path = (t.pathname ? t.pathname : "") + (t.search ? t.search : "")), t.auth = a.auth || t.auth, t.slashes = t.slashes || a.slashes, t.href = t.format(), t;
};
yt.prototype.parseHost = function() {
  var a = this.host, e = TNe.exec(a);
  e && (e = e[0], e !== ":" && (this.port = e.substr(1)), a = a.substr(0, a.length - e.length)), a && (this.hostname = a);
};
var BNe = Ed, NNe = FNe, z4 = DNe, UNe = WNe, HNe = yt;
function VNe(a, e) {
  for (var t = 0, i = a.length - 1; i >= 0; i--) {
    var n = a[i];
    n === "." ? a.splice(i, 1) : n === ".." ? (a.splice(i, 1), t++) : t && (a.splice(i, 1), t--);
  }
  if (e)
    for (; t--; t)
      a.unshift("..");
  return a;
}
function KNe() {
  for (var a = "", e = !1, t = arguments.length - 1; t >= -1 && !e; t--) {
    var i = t >= 0 ? arguments[t] : "/";
    if (typeof i != "string")
      throw new TypeError("Arguments to path.resolve must be strings");
    if (!i)
      continue;
    a = i + "/" + a, e = i.charAt(0) === "/";
  }
  return a = VNe(GNe(a.split("/"), function(n) {
    return !!n;
  }), !e).join("/"), (e ? "/" : "") + a || ".";
}
function GNe(a, e) {
  if (a.filter) return a.filter(e);
  for (var t = [], i = 0; i < a.length; i++)
    e(a[i], i, a) && t.push(a[i]);
  return t;
}
var f4 = function(a) {
  function e() {
    var i = this || self;
    return delete a.prototype.__magic__, i;
  }
  if (typeof globalThis == "object")
    return globalThis;
  if (this)
    return e();
  a.defineProperty(a.prototype, "__magic__", {
    configurable: !0,
    get: e
  });
  var t = __magic__;
  return t;
}(Object), YNe = (
  /** @type {formatImport}*/
  UNe
), y4 = (
  /** @type {parseImport}*/
  BNe
), w4 = (
  /** @type {resolveImport}*/
  NNe
), h4 = (
  /** @type {UrlImport}*/
  HNe
), rn = f4.URL, b4 = f4.URLSearchParams, ZNe = /%/g, XNe = /\\/g, JNe = /\n/g, QNe = /\r/g, aUe = /\t/g, eUe = 47;
function tUe(a) {
  var e = (
    /** @type {URL|null} */
    a ?? null
  );
  return !!(e !== null && (e != null && e.href) && (e != null && e.origin));
}
function iUe(a) {
  if (a.hostname !== "")
    throw new TypeError('File URL host must be "localhost" or empty on browser');
  for (var e = a.pathname, t = 0; t < e.length; t++)
    if (e[t] === "%") {
      var i = e.codePointAt(t + 2) | 32;
      if (e[t + 1] === "2" && i === 102)
        throw new TypeError("File URL path must not include encoded / characters");
    }
  return decodeURIComponent(e);
}
function nUe(a) {
  return a.includes("%") && (a = a.replace(ZNe, "%25")), a.includes("\\") && (a = a.replace(XNe, "%5C")), a.includes(`
`) && (a = a.replace(JNe, "%0A")), a.includes("\r") && (a = a.replace(QNe, "%0D")), a.includes("	") && (a = a.replace(aUe, "%09")), a;
}
var v4 = (
  /**
   * @type {domainToASCII}
   */
  function(e) {
    if (typeof e > "u")
      throw new TypeError('The "domain" argument must be specified');
    return new rn("http://" + e).hostname;
  }
), k4 = (
  /**
   * @type {domainToUnicode}
   */
  function(e) {
    if (typeof e > "u")
      throw new TypeError('The "domain" argument must be specified');
    return new rn("http://" + e).hostname;
  }
), _4 = (
  /**
   * @type {(url: string) => URL}
   */
  function(e) {
    var t = new rn("file://"), i = KNe(e), n = e.charCodeAt(e.length - 1);
    return n === eUe && i[i.length - 1] !== "/" && (i += "/"), t.pathname = nUe(i), t;
  }
), $4 = (
  /**
   * @type {fileURLToPath & ((path: string | URL) => string)}
   */
  function(e) {
    if (!tUe(e) && typeof e != "string")
      throw new TypeError('The "path" argument must be of type string or an instance of URL. Received type ' + typeof e + " (" + e + ")");
    var t = new rn(e);
    if (t.protocol !== "file:")
      throw new TypeError("The URL must be of scheme file");
    return iUe(t);
  }
), j4 = (
  /**
   * @type {(
   *   ((urlObject: URL, options?: URLFormatOptions) => string) &
   *   ((urlObject: UrlObject | string, options?: never) => string)
   * )}
   */
  function(e, t) {
    var i, n, r, s;
    if (t === void 0 && (t = {}), !(e instanceof rn))
      return YNe(e);
    if (typeof t != "object" || t === null)
      throw new TypeError('The "options" argument must be of type object.');
    var o = (i = t.auth) != null ? i : !0, d = (n = t.fragment) != null ? n : !0, c = (r = t.search) != null ? r : !0;
    (s = t.unicode) != null;
    var p = new rn(e.toString());
    return o || (p.username = "", p.password = ""), d || (p.hash = ""), c || (p.search = ""), p.toString();
  }
), rUe = {
  format: j4,
  parse: y4,
  resolve: w4,
  resolveObject: z4,
  Url: h4,
  URL: rn,
  URLSearchParams: b4,
  domainToASCII: v4,
  domainToUnicode: k4,
  pathToFileURL: _4,
  fileURLToPath: $4
};
const sUe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  URL: rn,
  URLSearchParams: b4,
  Url: h4,
  default: rUe,
  domainToASCII: v4,
  domainToUnicode: k4,
  fileURLToPath: $4,
  format: j4,
  parse: y4,
  pathToFileURL: _4,
  resolve: w4,
  resolveObject: z4
}, Symbol.toStringTag, { value: "Module" })), oUe = /* @__PURE__ */ ts(sUe);
Object.defineProperty(xd, "__esModule", {
  value: !0
});
var dUe = oUe, Mb = lUe(dUe);
function lUe(a) {
  return a && a.__esModule ? a : { default: a };
}
var cUe = /href=(["'])([^"']+)\1/i;
function oy(a) {
  return a.split("#")[0];
}
function dy(a) {
  return a.split("?")[0];
}
function x4(a) {
  return a.replace(/\/$/, "");
}
function ly(a) {
  return x4(a) + "/";
}
function uUe(a) {
  var e = cUe.exec(a);
  return e === null ? "" : e[2];
}
function pUe(a, e) {
  return a = dy(oy(a)), e = dy(oy(e)), ly(a) === ly(e);
}
function mUe(a) {
  return a = Mb.default.parse(a), a.hostname;
}
function gUe(a) {
  return Mb.default.parse(a).protocol;
}
function zUe(a, e) {
  const t = Mb.default.parse(a, !1, !0);
  return a.indexOf("//") === -1 && a.indexOf("/") === 0 ? !0 : a.indexOf("#") === 0 ? !1 : t.host ? t.host === e : !0;
}
function fUe(a) {
  return a ? a === "http:" || a === "https:" : !1;
}
function yUe(a) {
  return a.indexOf("#") === 0;
}
xd.default = {
  removeHash: oy,
  removeQueryArgs: dy,
  removeTrailingSlash: x4,
  addTrailingSlash: ly,
  getFromAnchorTag: uUe,
  areEqual: pUe,
  getHostname: mUe,
  getProtocol: gUe,
  isInternalLink: zUe,
  protocolIsHttpScheme: fUe,
  isRelativeFragmentURL: yUe
};
Object.defineProperty(qb, "__esModule", {
  value: !0
});
qb.default = function(a, e) {
  const t = Er.default.getFromAnchorTag(a), i = Er.default.getProtocol(t);
  return i && !Er.default.protocolIsHttpScheme(i) || Er.default.isRelativeFragmentURL(t) ? "other" : Er.default.isInternalLink(t, Er.default.getHostname(e)) ? "internal" : "external";
};
var wUe = xd, Er = hUe(wUe);
function hUe(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(yb, "__esModule", {
  value: !0
});
var bUe = $d, vUe = Bi(bUe), kUe = Ya, _Ue = Bi(kUe), $Ue = wb, jUe = Bi($Ue), xUe = se, AUe = Bi(xUe), EUe = hb, SUe = Bi(EUe), qUe = jd, PUe = Bi(qUe), TUe = qb, RUe = Bi(TUe), OUe = vn, MUe = Bi(OUe), CUe = xd, YP = Bi(CUe), Zz = I;
function Bi(a) {
  return a && a.__esModule ? a : { default: a };
}
const LUe = function(e, t) {
  const i = YP.default.getFromAnchorTag(e);
  return YP.default.areEqual(i, t);
}, IUe = function(e, t) {
  const i = e.map(function(n) {
    return LUe(n, t);
  });
  return e = e.filter(function(n, r) {
    return i[r] === !1;
  }), e;
}, WUe = function(e, t, i) {
  const n = e.map(function(r) {
    return (0, SUe.default)(r, t, i);
  });
  return e = e.filter(function(r, s) {
    return n[s] === !0;
  }), e;
}, FUe = function(e, t, i) {
  const n = [(0, Zz.flatten)(t.keyphraseForms)], r = t.synonymsForms;
  for (let d = 0; d < r.length; d++)
    n.push((0, Zz.flatten)(r[d]));
  const s = (0, _Ue.default)(i), o = [];
  return e.forEach(function(d) {
    let c = (0, Zz.uniq)((0, AUe.default)(d));
    c = (0, vUe.default)(c, s);
    for (let p = 0; p < n.length; p++)
      if (c.every((m) => (0, MUe.default)(m, n[p], i).count > 0)) {
        o.push(!0);
        break;
      }
  }), e = e.filter(function(d, c) {
    return o[c] === !0;
  }), e;
}, DUe = function(e, t, i, n) {
  const r = { totalKeyword: 0, matchedAnchors: [] };
  if (e.getKeyword() === "" || (i = IUe(i, n), i.length === 0))
    return r;
  const o = e.getLocale(), d = t.getResearch("morphology");
  return i = WUe(i, d, o), i.length === 0 || (i = FUe(i, d, o), r.totalKeyword = i.length, r.matchedAnchors = i), r;
}, BUe = function(e, t) {
  const i = (0, PUe.default)(e.getText()), n = e.getPermalink(), r = {
    total: i.length,
    totalNaKeyword: 0,
    keyword: {
      totalKeyword: 0,
      matchedAnchors: []
    },
    internalTotal: 0,
    internalDofollow: 0,
    internalNofollow: 0,
    externalTotal: 0,
    externalDofollow: 0,
    externalNofollow: 0,
    otherTotal: 0,
    otherDofollow: 0,
    otherNofollow: 0
  };
  for (let o = 0; o < i.length; o++) {
    const d = i[o], c = (0, RUe.default)(d, n), p = (0, jUe.default)(d);
    r[c + "Total"]++, r[c + p]++;
  }
  const s = DUe(e, t, i, n);
  return r.keyword.totalKeyword = s.totalKeyword, r.keyword.matchedAnchors = s.matchedAnchors, r;
};
yb.default = BUe;
var Cb = {}, Qu = {};
Object.defineProperty(Qu, "__esModule", {
  value: !0
});
Qu.default = function(a) {
  const e = (0, UUe.default)(a.getText());
  return (0, HUe.map)(e, KUe.default.getFromAnchorTag);
};
var NUe = jd, UUe = A4(NUe), HUe = I, VUe = xd, KUe = A4(VUe);
function A4(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(Cb, "__esModule", {
  value: !0
});
Cb.default = function(a) {
  var e = (0, YUe.default)(a);
  return e.length;
};
var GUe = Qu, YUe = ZUe(GUe);
function ZUe(a) {
  return a && a.__esModule ? a : { default: a };
}
var Lb = {};
Object.defineProperty(Lb, "__esModule", {
  value: !0
});
Lb.default = function(a) {
  var e = a.getUrl().length, t = a.getKeyword().length, i = 40, n = 20;
  return e > i && e > t + n;
};
var Ib = {};
Object.defineProperty(Ib, "__esModule", {
  value: !0
});
Ib.default = function(a, e) {
  let t = (0, Qi.escapeRegExp)(a.getKeyword());
  const i = a.getTitle(), n = a.getLocale(), r = { exactMatchFound: !1, allWordsFound: !1, position: -1, exactMatchKeyphrase: !1 }, s = d6e(t);
  s.exactMatchRequested && (t = s.keyword, r.exactMatchKeyphrase = !0);
  const o = (0, JUe.default)(i, t, n);
  if (o.count > 0)
    return r.exactMatchFound = !0, r.allWordsFound = !0, r.position = l6e(i, o.position, n), r;
  const d = e.getResearch("morphology");
  return (0, QUe.findTopicFormsInString)(d, i, !1, n).percentWordMatches === 100 && (r.allWordsFound = !0), r;
};
var XUe = Cu, JUe = ap(XUe), QUe = vt, a6e = fn, e6e = ap(a6e), Qi = I, t6e = Ya, i6e = ap(t6e), n6e = se, r6e = ap(n6e);
function ap(a) {
  return a && a.__esModule ? a : { default: a };
}
const s6e = (0, e6e.default)(), o6e = function(e, t) {
  t = t.toLocaleLowerCase();
  let i = (0, r6e.default)(t.toLocaleLowerCase());
  return i = (0, Qi.filter)(i, function(n) {
    return !(0, Qi.includes)(e, n.trim().toLocaleLowerCase());
  }), (0, Qi.isEmpty)(i);
}, d6e = function(e) {
  const t = { exactMatchRequested: !1, keyword: e }, i = ["“", "”", "〝", "〞", "〟", "‟", "„", '"'];
  return (0, Qi.includes)(i, e[0]) && (0, Qi.includes)(i, e[e.length - 1]) && (t.keyword = e.substring(1, e.length - 1), t.exactMatchRequested = !0), t;
}, l6e = function(e, t, i) {
  if (t === 0)
    return t;
  const n = (0, i6e.default)(i), r = (0, Qi.get)(s6e, [n], []);
  if ((0, Qi.isUndefined)(r.all))
    return t;
  const s = e.substr(0, t);
  return o6e(r.all, s) ? 0 : t;
};
var Wb = {};
Object.defineProperty(Wb, "__esModule", {
  value: !0
});
Wb.default = function(a, e) {
  const t = (0, y6e.default)(a.getText()), i = e.getResearch("morphology"), n = a.getLocale(), r = { count: 0, matches: 0, percentReflectingTopic: 0 }, s = !0, o = (0, z6e.getSubheadingContentsTopLevel)(t);
  return o.length !== 0 && (r.count = o.length, r.matches = b6e(i, o, s, n), r.percentReflectingTopic = r.matches / r.count * 100), r;
};
var c6e = I, u6e = Kc, p6e = Fb(u6e), m6e = Ya, g6e = Fb(m6e), z6e = Mt, f6e = Lu, y6e = Fb(f6e), w6e = vt;
function Fb(a) {
  return a && a.__esModule ? a : { default: a };
}
const h6e = (0, p6e.default)(), b6e = function(e, t, i, n) {
  const r = (0, c6e.includes)(h6e, (0, g6e.default)(n));
  return t.filter((s) => {
    const o = (0, w6e.findTopicFormsInString)(e, s, i, n);
    return r ? o.percentWordMatches > 50 : o.percentWordMatches === 100;
  }).length;
};
var Db = {};
Object.defineProperty(Db, "__esModule", {
  value: !0
});
Db.default = function(a, e) {
  const t = (0, k6e.default)(a.getText());
  return t === 0 ? 0 : e.getResearch("keywordCount").count / t * 100;
};
var v6e = ut, k6e = _6e(v6e);
function _6e(a) {
  return a && a.__esModule ? a : { default: a };
}
var Bb = {}, ep = {}, tp = {}, Os = {};
Object.defineProperty(Os, "__esModule", {
  value: !0
});
const E4 = `[ \\u00a0\\u06d4\\u061f\\u060C\\u061B \\n\\r\\t.,'()"+\\-;!?:/»«‹›<>]`, S4 = new RegExp("^(" + E4 + "+)", "ig"), q4 = new RegExp("(" + E4 + "+$)", "ig"), P4 = function(e) {
  return e = e.replace(S4, ""), e;
}, T4 = function(e) {
  return e = e.replace(q4, ""), e;
}, R4 = function(e) {
  return e = e.replace(S4, ""), e = e.replace(q4, ""), e;
};
Os.stripWordBoundariesStart = P4;
Os.stripWordBoundariesEnd = T4;
Os.stripWordBoundariesEverywhere = R4;
Os.default = {
  stripWordBoundariesStart: P4,
  stripWordBoundariesEnd: T4,
  stripWordBoundariesEverywhere: R4
};
Object.defineProperty(tp, "__esModule", {
  value: !0
});
tp.default = function(a) {
  const e = (0, ZP.stripWordBoundariesStart)(a);
  let t = "", i = "";
  if (e !== a) {
    const r = a.search(e);
    t = a.substr(0, r);
  }
  const n = (0, ZP.stripWordBoundariesEnd)(e);
  if (n !== e) {
    const r = e.search(n) + n.length;
    i = e.substr(r);
  }
  return t + "<yoastmark class='yoast-text-mark'>" + n + "</yoastmark>" + i;
};
var ZP = Os;
Object.defineProperty(ep, "__esModule", {
  value: !0
});
ep.markWordsInSentences = R6e;
var $6e = vn, j6e = ip($6e), x6e = Wi, A6e = ip(x6e), E6e = tp, S6e = ip(E6e), q6e = ct, P6e = ip(q6e);
function ip(a) {
  return a && a.__esModule ? a : { default: a };
}
const T6e = function(e, t) {
  return e.replace((0, A6e.default)(t), function(n) {
    return (0, S6e.default)(n);
  }).replace(new RegExp("</yoastmark> <yoastmark class='yoast-text-mark'>", "ig"), " ");
};
function R6e(a, e, t) {
  let i = [], n = [];
  return e.forEach(function(r) {
    i = (0, j6e.default)(r, a, t).matches, i.length > 0 && (n = n.concat(new P6e.default({
      original: r,
      marked: T6e(r, i)
    })));
  }), n;
}
Object.defineProperty(Bb, "__esModule", {
  value: !0
});
Bb.default = function(a, e) {
  const t = e.getResearch("morphology"), i = a.getText(), n = a.getLocale(), r = (0, L6e.default)(i), s = {
    count: 0,
    matches: [],
    sentencesWithKeywords: []
  };
  r.forEach((d) => {
    const c = t.keyphraseForms.map((m) => (0, M6e.default)(d, m, n));
    if (c.every((m) => m.count > 0)) {
      const m = c.map((v) => v.count), w = (0, Xz.flattenDeep)(c.map((v) => v.matches));
      s.count += Math.min(...m), s.matches.push(w), s.sentencesWithKeywords.push(d);
    }
  });
  const o = (0, Xz.uniq)((0, Xz.flattenDeep)(s.matches)).sort((d, c) => c.length - d.length);
  return {
    count: s.count,
    matches: o,
    markings: (0, I6e.markWordsInSentences)(o, s.sentencesWithKeywords, n),
    length: t.keyphraseForms.length
  };
};
var O6e = vn, M6e = O4(O6e), Xz = I, C6e = Le, L6e = O4(C6e), I6e = ep;
function O4(a) {
  return a && a.__esModule ? a : { default: a };
}
var Nb = {}, np = {}, Ub = {};
Object.defineProperty(Ub, "__esModule", {
  value: !0
});
Ub.default = function() {
  return ["a", "about", "above", "after", "again", "against", "all", "am", "an", "and", "any", "are", "as", "at", "be", "because", "been", "before", "being", "below", "between", "both", "but", "by", "could", "did", "do", "does", "doing", "down", "during", "each", "few", "for", "from", "further", "had", "has", "have", "having", "he", "he'd", "he'll", "he's", "her", "here", "here's", "hers", "herself", "him", "himself", "his", "how", "how's", "i", "i'd", "i'll", "i'm", "i've", "if", "in", "into", "is", "it", "it's", "its", "itself", "let's", "me", "more", "most", "my", "myself", "nor", "of", "on", "once", "only", "or", "other", "ought", "our", "ours", "ourselves", "out", "over", "own", "same", "she", "she'd", "she'll", "she's", "should", "so", "some", "such", "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's", "these", "they", "they'd", "they'll", "they're", "they've", "this", "those", "through", "to", "too", "under", "until", "up", "very", "was", "we", "we'd", "we'll", "we're", "we've", "were", "what", "what's", "when", "when's", "where", "where's", "which", "while", "who", "who's", "whom", "why", "why's", "with", "would", "you", "you'd", "you'll", "you're", "you've", "your", "yours", "yourself", "yourselves"];
};
Object.defineProperty(np, "__esModule", {
  value: !0
});
np.default = function(a) {
  var e, t = [];
  for (e = 0; e < Jz.length; e++)
    a.match((0, B6e.default)(Jz[e])) !== null && t.push(Jz[e]);
  return t;
};
var W6e = Ub, F6e = M4(W6e), D6e = vd, B6e = M4(D6e);
function M4(a) {
  return a && a.__esModule ? a : { default: a };
}
const Jz = (0, F6e.default)();
Object.defineProperty(Nb, "__esModule", {
  value: !0
});
Nb.default = function(a) {
  var e = (0, H6e.escapeRegExp)(a.getKeyword());
  return (0, U6e.default)(e);
};
var N6e = np, U6e = V6e(N6e), H6e = I;
function V6e(a) {
  return a && a.__esModule ? a : { default: a };
}
var Hb = {};
Object.defineProperty(Hb, "__esModule", {
  value: !0
});
Hb.default = function(a) {
  return (0, G6e.default)(a.getUrl().replace(/[-_]/g, " "));
};
var K6e = np, G6e = Y6e(K6e);
function Y6e(a) {
  return a && a.__esModule ? a : { default: a };
}
var Vb = {}, Kb = {};
Object.defineProperty(Kb, "__esModule", {
  value: !0
});
Kb.default = function(a) {
  return a = a.replace(/\b[0-9]+\b/g, ""), a = (0, X6e.default)(a), a === "." && (a = ""), a;
};
var Z6e = be, X6e = J6e(Z6e);
function J6e(a) {
  return a && a.__esModule ? a : { default: a };
}
var Gb = {};
Object.defineProperty(Gb, "__esModule", {
  value: !0
});
Gb.default = function(a) {
  for (var e = (0, a5e.default)(a), t = 0, i = 0; i < e.length; i++)
    t++;
  return t;
};
var Q6e = Le, a5e = e5e(Q6e);
function e5e(a) {
  return a && a.__esModule ? a : { default: a };
}
var rp = {}, Yb = {};
const t5e = "aeiouyäöüáéâàèîêâûôœ", i5e = {
  vowels: [
    {
      fragments: [
        "ouil",
        "deaux",
        "deau$",
        "oard",
        "äthiop",
        "euil",
        "veau",
        "eau$",
        "ueue",
        "lienisch",
        "ance$",
        "ence$",
        "time$",
        "once$",
        "ziat",
        "guette",
        "ête",
        "ôte$",
        "[hp]omme$",
        "[qdscn]ue$",
        "aire$",
        "ture$",
        "êpe$",
        "[^q]ui$",
        "tiche$",
        "vice$",
        "oile$",
        "zial",
        "cruis",
        "leas",
        "coa[ct]",
        "[^i]deal",
        "[fw]eat",
        "[lsx]ed$"
      ],
      countModifier: -1
    },
    {
      fragments: [
        "aau",
        "a[äöüo]",
        "äue",
        "äeu",
        "aei",
        "aue",
        "aeu",
        "ael",
        "ai[aeo]",
        "saik",
        "aismus",
        "ä[aeoi]",
        "auä",
        "éa",
        "e[äaoö]",
        "ei[eo]",
        "ee[aeiou]",
        "eu[aäe]",
        "eum$",
        "eü",
        "o[aäöü]",
        "poet",
        "oo[eo]",
        "oie",
        "oei[^l]",
        "oeu[^f]",
        "öa",
        "[fgrz]ieu",
        "mieun",
        "tieur",
        "ieum",
        "i[aiuü]",
        "[^l]iä",
        "[^s]chien",
        "io[bcdfhjkmpqtuvwx]",
        "[bdhmprv]ion",
        "[lr]ior",
        "[^g]io[gs]",
        "[dr]ioz",
        "elioz",
        "zioni",
        "bio[lnorz]",
        "iö[^s]",
        "ie[ei]",
        "rier$",
        "öi[eg]",
        "[^r]öisch",
        "[^gqv]u[aeéioöuü]",
        "quie$",
        "quie[^s]",
        "uäu",
        "^us-",
        "^it-",
        "üe",
        "naiv",
        "aisch$",
        "aische$",
        "aische[nrs]$",
        "[lst]ien",
        "dien$",
        "gois",
        "[^g]rient",
        "[aeiou]y[aeiou]",
        "byi",
        "yä",
        "[a-z]y[ao]",
        "yau",
        "koor",
        "scient",
        "eriel",
        "[dg]oing"
      ],
      countModifier: 1
    },
    {
      fragments: [
        "eauü",
        "ioi",
        "ioo",
        "ioa",
        "iii",
        "oai",
        "eueu"
      ],
      countModifier: 1
    }
  ],
  words: {
    full: [
      {
        word: "beach",
        syllables: 1
      },
      {
        word: "beat",
        syllables: 1
      },
      {
        word: "beau",
        syllables: 1
      },
      {
        word: "beaune",
        syllables: 1
      },
      {
        word: "belle",
        syllables: 1
      },
      {
        word: "bouche",
        syllables: 1
      },
      {
        word: "brake",
        syllables: 1
      },
      {
        word: "cache",
        syllables: 1
      },
      {
        word: "chaiselongue",
        syllables: 2
      },
      {
        word: "choke",
        syllables: 1
      },
      {
        word: "cordiale",
        syllables: 3
      },
      {
        word: "core",
        syllables: 1
      },
      {
        word: "dope",
        syllables: 1
      },
      {
        word: "eat",
        syllables: 1
      },
      {
        word: "eye",
        syllables: 1
      },
      {
        word: "fake",
        syllables: 1
      },
      {
        word: "fame",
        syllables: 1
      },
      {
        word: "fatigue",
        syllables: 2
      },
      {
        word: "femme",
        syllables: 1
      },
      {
        word: "force",
        syllables: 1
      },
      {
        word: "game",
        syllables: 1
      },
      {
        word: "games",
        syllables: 1
      },
      {
        word: "gate",
        syllables: 1
      },
      {
        word: "grande",
        syllables: 1
      },
      {
        word: "ice",
        syllables: 1
      },
      {
        word: "ion",
        syllables: 2
      },
      {
        word: "joke",
        syllables: 1
      },
      {
        word: "jupe",
        syllables: 1
      },
      {
        word: "maisch",
        syllables: 1
      },
      {
        word: "maische",
        syllables: 2
      },
      {
        word: "move",
        syllables: 1
      },
      {
        word: "native",
        syllables: 2
      },
      {
        word: "nice",
        syllables: 1
      },
      {
        word: "one",
        syllables: 1
      },
      {
        word: "pipe",
        syllables: 1
      },
      {
        word: "prime",
        syllables: 1
      },
      {
        word: "rate",
        syllables: 1
      },
      {
        word: "rhythm",
        syllables: 2
      },
      {
        word: "ride",
        syllables: 1
      },
      {
        word: "rides",
        syllables: 1
      },
      {
        word: "rien",
        syllables: 2
      },
      {
        word: "save",
        syllables: 1
      },
      {
        word: "science",
        syllables: 2
      },
      {
        word: "siècle",
        syllables: 1
      },
      {
        word: "site",
        syllables: 1
      },
      {
        word: "suite",
        syllables: 1
      },
      {
        word: "take",
        syllables: 1
      },
      {
        word: "taupe",
        syllables: 1
      },
      {
        word: "universe",
        syllables: 3
      },
      {
        word: "vogue",
        syllables: 1
      },
      {
        word: "wave",
        syllables: 1
      },
      {
        word: "zion",
        syllables: 2
      }
    ],
    fragments: {
      global: [
        {
          word: "abreaktion",
          syllables: 4
        },
        {
          word: "adware",
          syllables: 2
        },
        {
          word: "affaire",
          syllables: 3
        },
        {
          word: "aiguière",
          syllables: 2
        },
        {
          word: "anisette",
          syllables: 3
        },
        {
          word: "appeal",
          syllables: 2
        },
        {
          word: "backstage",
          syllables: 2
        },
        {
          word: "bankrate",
          syllables: 2
        },
        {
          word: "baseball",
          syllables: 2
        },
        {
          word: "basejump",
          syllables: 2
        },
        {
          word: "beachcomber",
          syllables: 3
        },
        {
          word: "beachvolleyball",
          syllables: 4
        },
        {
          word: "beagle",
          syllables: 2
        },
        {
          word: "beamer",
          syllables: 2
        },
        {
          word: "beamer",
          syllables: 2
        },
        {
          word: "béarnaise",
          syllables: 3
        },
        {
          word: "beaufort",
          syllables: 2
        },
        {
          word: "beaujolais",
          syllables: 3
        },
        {
          word: "beauté",
          syllables: 2
        },
        {
          word: "beauty",
          syllables: 2
        },
        {
          word: "belgier",
          syllables: 3
        },
        {
          word: "bestien",
          syllables: 2
        },
        {
          word: "biskuit",
          syllables: 2
        },
        {
          word: "bleach",
          syllables: 1
        },
        {
          word: "blue",
          syllables: 1
        },
        {
          word: "board",
          syllables: 1
        },
        {
          word: "boat",
          syllables: 1
        },
        {
          word: "bodysuit",
          syllables: 3
        },
        {
          word: "bordelaise",
          syllables: 3
        },
        {
          word: "break",
          syllables: 1
        },
        {
          word: "build",
          syllables: 1
        },
        {
          word: "bureau",
          syllables: 2
        },
        {
          word: "business",
          syllables: 2
        },
        {
          word: "cabrio",
          syllables: 3
        },
        {
          word: "cabriolet",
          syllables: 4
        },
        {
          word: "cachesexe",
          syllables: 2
        },
        {
          word: "camaieu",
          syllables: 3
        },
        {
          word: "canyon",
          syllables: 2
        },
        {
          word: "case",
          syllables: 1
        },
        {
          word: "catsuit",
          syllables: 2
        },
        {
          word: "centime",
          syllables: 3
        },
        {
          word: "chaise",
          syllables: 2
        },
        {
          word: "champion",
          syllables: 2
        },
        {
          word: "championat",
          syllables: 3
        },
        {
          word: "chapiteau",
          syllables: 3
        },
        {
          word: "chateau",
          syllables: 2
        },
        {
          word: "château",
          syllables: 2
        },
        {
          word: "cheat",
          syllables: 1
        },
        {
          word: "cheese",
          syllables: 1
        },
        {
          word: "chihuahua",
          syllables: 3
        },
        {
          word: "choice",
          syllables: 1
        },
        {
          word: "circonflexe",
          syllables: 3
        },
        {
          word: "clean",
          syllables: 1
        },
        {
          word: "cloche",
          syllables: 1
        },
        {
          word: "close",
          syllables: 1
        },
        {
          word: "clothes",
          syllables: 1
        },
        {
          word: "commerce",
          syllables: 2
        },
        {
          word: "crime",
          syllables: 1
        },
        {
          word: "crossrate",
          syllables: 2
        },
        {
          word: "cuisine",
          syllables: 2
        },
        {
          word: "culotte",
          syllables: 2
        },
        {
          word: "death",
          syllables: 1
        },
        {
          word: "defense",
          syllables: 2
        },
        {
          word: "détente",
          syllables: 2
        },
        {
          word: "dread",
          syllables: 1
        },
        {
          word: "dream",
          syllables: 1
        },
        {
          word: "dresscode",
          syllables: 2
        },
        {
          word: "dungeon",
          syllables: 2
        },
        {
          word: "easy",
          syllables: 2
        },
        {
          word: "engagement",
          syllables: 3
        },
        {
          word: "entente",
          syllables: 2
        },
        {
          word: "eye-catcher",
          syllables: 3
        },
        {
          word: "eyecatcher",
          syllables: 3
        },
        {
          word: "eyeliner",
          syllables: 3
        },
        {
          word: "eyeword",
          syllables: 2
        },
        {
          word: "fashion",
          syllables: 2
        },
        {
          word: "feature",
          syllables: 2
        },
        {
          word: "ferien",
          syllables: 3
        },
        {
          word: "fineliner",
          syllables: 3
        },
        {
          word: "fisheye",
          syllables: 2
        },
        {
          word: "flake",
          syllables: 1
        },
        {
          word: "flambeau",
          syllables: 2
        },
        {
          word: "flatrate",
          syllables: 2
        },
        {
          word: "fleece",
          syllables: 1
        },
        {
          word: "fraîche",
          syllables: 1
        },
        {
          word: "freak",
          syllables: 1
        },
        {
          word: "frites",
          syllables: 1
        },
        {
          word: "future",
          syllables: 2
        },
        {
          word: "gaelic",
          syllables: 2
        },
        {
          word: "game-show",
          syllables: 2
        },
        {
          word: "gameboy",
          syllables: 2
        },
        {
          word: "gamepad",
          syllables: 2
        },
        {
          word: "gameplay",
          syllables: 2
        },
        {
          word: "gameport",
          syllables: 2
        },
        {
          word: "gameshow",
          syllables: 2
        },
        {
          word: "garigue",
          syllables: 2
        },
        {
          word: "garrigue",
          syllables: 2
        },
        {
          word: "gatefold",
          syllables: 2
        },
        {
          word: "gateway",
          syllables: 2
        },
        {
          word: "geflashed",
          syllables: 2
        },
        {
          word: "georgier",
          syllables: 4
        },
        {
          word: "goal",
          syllables: 1
        },
        {
          word: "grapefruit",
          syllables: 2
        },
        {
          word: "great",
          syllables: 1
        },
        {
          word: "groupware",
          syllables: 2
        },
        {
          word: "gueule",
          syllables: 1
        },
        {
          word: "guide",
          syllables: 1
        },
        {
          word: "guilloche",
          syllables: 2
        },
        {
          word: "gynäzeen",
          syllables: 4
        },
        {
          word: "gynözeen",
          syllables: 4
        },
        {
          word: "haircare",
          syllables: 2
        },
        {
          word: "hardcore",
          syllables: 2
        },
        {
          word: "hardware",
          syllables: 2
        },
        {
          word: "head",
          syllables: 1
        },
        {
          word: "hearing",
          syllables: 2
        },
        {
          word: "heart",
          syllables: 1
        },
        {
          word: "heavy",
          syllables: 2
        },
        {
          word: "hedge",
          syllables: 1
        },
        {
          word: "heroin",
          syllables: 3
        },
        {
          word: "inclusive",
          syllables: 3
        },
        {
          word: "initiative",
          syllables: 4
        },
        {
          word: "inside",
          syllables: 2
        },
        {
          word: "jaguar",
          syllables: 3
        },
        {
          word: "jalousette",
          syllables: 3
        },
        {
          word: "jeans",
          syllables: 1
        },
        {
          word: "jeunesse",
          syllables: 2
        },
        {
          word: "juice",
          syllables: 1
        },
        {
          word: "jukebox",
          syllables: 2
        },
        {
          word: "jumpsuit",
          syllables: 2
        },
        {
          word: "kanarien",
          syllables: 4
        },
        {
          word: "kapriole",
          syllables: 4
        },
        {
          word: "karosserielinie",
          syllables: 6
        },
        {
          word: "konopeen",
          syllables: 4
        },
        {
          word: "lacrosse",
          syllables: 2
        },
        {
          word: "laplace",
          syllables: 2
        },
        {
          word: "late-",
          syllables: 1
        },
        {
          word: "lead",
          syllables: 1
        },
        {
          word: "league",
          syllables: 1
        },
        {
          word: "learn",
          syllables: 1
        },
        {
          word: "légière",
          syllables: 2
        },
        {
          word: "lizenziat",
          syllables: 4
        },
        {
          word: "load",
          syllables: 1
        },
        {
          word: "lotterielos",
          syllables: 4
        },
        {
          word: "lounge",
          syllables: 1
        },
        {
          word: "lyzeen",
          syllables: 3
        },
        {
          word: "madame",
          syllables: 2
        },
        {
          word: "mademoiselle",
          syllables: 3
        },
        {
          word: "magier",
          syllables: 3
        },
        {
          word: "make-up",
          syllables: 2
        },
        {
          word: "malware",
          syllables: 2
        },
        {
          word: "management",
          syllables: 3
        },
        {
          word: "manteau",
          syllables: 2
        },
        {
          word: "mausoleen",
          syllables: 4
        },
        {
          word: "mauve",
          syllables: 1
        },
        {
          word: "medien",
          syllables: 3
        },
        {
          word: "mesdames",
          syllables: 2
        },
        {
          word: "mesopotamien",
          syllables: 6
        },
        {
          word: "milliarde",
          syllables: 3
        },
        {
          word: "missile",
          syllables: 2
        },
        {
          word: "miszellaneen",
          syllables: 5
        },
        {
          word: "mousse",
          syllables: 1
        },
        {
          word: "mousseline",
          syllables: 3
        },
        {
          word: "museen",
          syllables: 3
        },
        {
          word: "musette",
          syllables: 2
        },
        {
          word: "nahuatl",
          syllables: 2
        },
        {
          word: "noisette",
          syllables: 2
        },
        {
          word: "notebook",
          syllables: 2
        },
        {
          word: "nuance",
          syllables: 3
        },
        {
          word: "nuklease",
          syllables: 4
        },
        {
          word: "odeen",
          syllables: 3
        },
        {
          word: "offline",
          syllables: 2
        },
        {
          word: "offside",
          syllables: 2
        },
        {
          word: "oleaster",
          syllables: 4
        },
        {
          word: "on-stage",
          syllables: 2
        },
        {
          word: "online",
          syllables: 2
        },
        {
          word: "orpheen",
          syllables: 3
        },
        {
          word: "parforceritt",
          syllables: 3
        },
        {
          word: "patiens",
          syllables: 2
        },
        {
          word: "patient",
          syllables: 2
        },
        {
          word: "peace",
          syllables: 1
        },
        {
          word: "peace",
          syllables: 1
        },
        {
          word: "peanuts",
          syllables: 2
        },
        {
          word: "people",
          syllables: 2
        },
        {
          word: "perineen",
          syllables: 4
        },
        {
          word: "peritoneen",
          syllables: 5
        },
        {
          word: "picture",
          syllables: 2
        },
        {
          word: "piece",
          syllables: 1
        },
        {
          word: "pipeline",
          syllables: 2
        },
        {
          word: "plateau",
          syllables: 2
        },
        {
          word: "poesie",
          syllables: 3
        },
        {
          word: "poleposition",
          syllables: 4
        },
        {
          word: "portemanteau",
          syllables: 3
        },
        {
          word: "portemonnaie",
          syllables: 3
        },
        {
          word: "primerate",
          syllables: 2
        },
        {
          word: "primerate",
          syllables: 2
        },
        {
          word: "primetime",
          syllables: 2
        },
        {
          word: "protease",
          syllables: 4
        },
        {
          word: "protein",
          syllables: 3
        },
        {
          word: "prytaneen",
          syllables: 4
        },
        {
          word: "quotient",
          syllables: 2
        },
        {
          word: "radio",
          syllables: 3
        },
        {
          word: "reader",
          syllables: 2
        },
        {
          word: "ready",
          syllables: 2
        },
        {
          word: "reallife",
          syllables: 2
        },
        {
          word: "repeat",
          syllables: 2
        },
        {
          word: "retake",
          syllables: 2
        },
        {
          word: "rigole",
          syllables: 2
        },
        {
          word: "risolle",
          syllables: 2
        },
        {
          word: "road",
          syllables: 1
        },
        {
          word: "roaming",
          syllables: 2
        },
        {
          word: "roquefort",
          syllables: 2
        },
        {
          word: "safe",
          syllables: 1
        },
        {
          word: "savonette",
          syllables: 3
        },
        {
          word: "sciencefiction",
          syllables: 3
        },
        {
          word: "search",
          syllables: 1
        },
        {
          word: "selfmade",
          syllables: 2
        },
        {
          word: "septime",
          syllables: 3
        },
        {
          word: "serapeen",
          syllables: 4
        },
        {
          word: "service",
          syllables: 2
        },
        {
          word: "serviette",
          syllables: 2
        },
        {
          word: "share",
          syllables: 1
        },
        {
          word: "shave",
          syllables: 1
        },
        {
          word: "shore",
          syllables: 1
        },
        {
          word: "sidebar",
          syllables: 2
        },
        {
          word: "sideboard",
          syllables: 2
        },
        {
          word: "sidekick",
          syllables: 2
        },
        {
          word: "silhouette",
          syllables: 3
        },
        {
          word: "sitemap",
          syllables: 2
        },
        {
          word: "slide",
          syllables: 1
        },
        {
          word: "sneak",
          syllables: 1
        },
        {
          word: "soap",
          syllables: 1
        },
        {
          word: "softcore",
          syllables: 2
        },
        {
          word: "software",
          syllables: 2
        },
        {
          word: "soutanelle",
          syllables: 3
        },
        {
          word: "speak",
          syllables: 1
        },
        {
          word: "special",
          syllables: 2
        },
        {
          word: "spracheinstellung",
          syllables: 5
        },
        {
          word: "spyware",
          syllables: 2
        },
        {
          word: "square",
          syllables: 1
        },
        {
          word: "stagediving",
          syllables: 3
        },
        {
          word: "stakeholder",
          syllables: 3
        },
        {
          word: "statement",
          syllables: 2
        },
        {
          word: "steady",
          syllables: 2
        },
        {
          word: "steak",
          syllables: 1
        },
        {
          word: "stealth",
          syllables: 1
        },
        {
          word: "steam",
          syllables: 1
        },
        {
          word: "stoned",
          syllables: 1
        },
        {
          word: "stracciatella",
          syllables: 4
        },
        {
          word: "stream",
          syllables: 1
        },
        {
          word: "stride",
          syllables: 1
        },
        {
          word: "strike",
          syllables: 1
        },
        {
          word: "suitcase",
          syllables: 2
        },
        {
          word: "sweepstake",
          syllables: 2
        },
        {
          word: "t-bone",
          syllables: 2
        },
        {
          word: "t-shirt",
          syllables: 1
        },
        {
          word: "tailgate",
          syllables: 2
        },
        {
          word: "take-off",
          syllables: 2
        },
        {
          word: "take-over",
          syllables: 3
        },
        {
          word: "takeaway",
          syllables: 3
        },
        {
          word: "takeoff",
          syllables: 2
        },
        {
          word: "takeover",
          syllables: 3
        },
        {
          word: "throat",
          syllables: 1
        },
        {
          word: "time-out",
          syllables: 2
        },
        {
          word: "timelag",
          syllables: 2
        },
        {
          word: "timeline",
          syllables: 2
        },
        {
          word: "timesharing",
          syllables: 3
        },
        {
          word: "toast",
          syllables: 1
        },
        {
          word: "traubenmaische",
          syllables: 4
        },
        {
          word: "tristesse",
          syllables: 2
        },
        {
          word: "usenet",
          syllables: 2
        },
        {
          word: "varietät",
          syllables: 4
        },
        {
          word: "varieté",
          syllables: 4
        },
        {
          word: "vinaigrette",
          syllables: 3
        },
        {
          word: "vintage",
          syllables: 2
        },
        {
          word: "violett",
          syllables: 3
        },
        {
          word: "voice",
          syllables: 1
        },
        {
          word: "wakeboard",
          syllables: 2
        },
        {
          word: "washed",
          syllables: 1
        },
        {
          word: "waveboard",
          syllables: 2
        },
        {
          word: "wear",
          syllables: 1
        },
        {
          word: "wear",
          syllables: 1
        },
        {
          word: "website",
          syllables: 2
        },
        {
          word: "white",
          syllables: 1
        },
        {
          word: "widescreen",
          syllables: 2
        },
        {
          word: "wire",
          syllables: 1
        },
        {
          word: "yacht",
          syllables: 1
        },
        {
          word: "yorkshire",
          syllables: 2
        },
        {
          word: "éprouvette",
          syllables: 3,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "galette",
          syllables: 2,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "gigue",
          syllables: 1,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "groove",
          syllables: 1,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "morgue",
          syllables: 1,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "paillette",
          syllables: 2,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "raclette",
          syllables: 2,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "roulette",
          syllables: 2,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "spike",
          syllables: 1,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "style",
          syllables: 1,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "tablette",
          syllables: 2,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "grunge",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "size",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "value",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "quiche",
          syllables: 1,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "house",
          syllables: 1,
          notFollowedBy: [
            "n",
            "s"
          ]
        },
        {
          word: "sauce",
          syllables: 1,
          notFollowedBy: [
            "n",
            "s"
          ]
        },
        {
          word: "space",
          syllables: 1,
          notFollowedBy: [
            "n",
            "s"
          ]
        },
        {
          word: "airline",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "autosave",
          syllables: 3,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "bagpipe",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "bike",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "dance",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "deadline",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "halfpipe",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "headline",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "home",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "hornpipe",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "hotline",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "infoline",
          syllables: 3,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "inline",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "kite",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "rollerblade",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "score",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "skyline",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "slackline",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "slice",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "snooze",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "storyline",
          syllables: 3,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "office",
          syllables: 2,
          notFollowedBy: [
            "s",
            "r"
          ]
        },
        {
          word: "space",
          syllables: 1,
          notFollowedBy: [
            "n",
            "s",
            "r"
          ]
        },
        {
          word: "tease",
          syllables: 1,
          notFollowedBy: [
            "n",
            "s",
            "r"
          ]
        },
        {
          word: "cache",
          syllables: 1,
          notFollowedBy: [
            "t"
          ]
        }
      ],
      atBeginningOrEnd: [
        {
          word: "case",
          syllables: 1
        },
        {
          word: "life",
          syllables: 1
        },
        {
          word: "teak",
          syllables: 1
        },
        {
          word: "team",
          syllables: 1
        },
        {
          word: "creme",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "crème",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "drive",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "skate",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "update",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "upgrade",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        }
      ],
      atBeginning: [
        {
          word: "anion",
          syllables: 3
        },
        {
          word: "facelift",
          syllables: 2
        },
        {
          word: "jiu",
          syllables: 1
        },
        {
          word: "pace",
          syllables: 1
        },
        {
          word: "shake",
          syllables: 1
        },
        {
          word: "tea",
          syllables: 1
        },
        {
          word: "trade",
          syllables: 1
        },
        {
          word: "deal",
          syllables: 1
        }
      ],
      atEnd: [
        {
          word: "face",
          syllables: 1
        },
        {
          word: "file",
          syllables: 1
        },
        {
          word: "mousse",
          syllables: 1
        },
        {
          word: "plate",
          syllables: 1
        },
        {
          word: "tape",
          syllables: 1
        },
        {
          word: "byte",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "cape",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "five",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "hype",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "leak",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "like",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "make",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "phone",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "rave",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "regime",
          syllables: 2,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "statue",
          syllables: 2,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "store",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "wave",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "date",
          syllables: 1,
          notFollowedBy: [
            "n"
          ]
        },
        {
          word: "image",
          syllables: 2,
          notFollowedBy: [
            "s"
          ]
        }
      ]
    }
  }
}, n5e = {
  vowels: t5e,
  deviations: i5e
}, r5e = "aeiouy", s5e = {
  vowels: [
    {
      fragments: [
        "cial",
        "tia",
        "cius",
        "giu",
        "ion",
        "[^bdnprv]iou",
        "sia$",
        "[^aeiuot]{2,}ed$",
        "[aeiouy][^aeiuoyts]{1,}e$",
        "[a-z]ely$",
        "[cgy]ed$",
        "rved$",
        "[aeiouy][dt]es?$",
        "eau",
        "ieu",
        "oeu",
        "[aeiouy][^aeiouydt]e[sd]?$",
        "[aeouy]rse$",
        "^eye"
      ],
      countModifier: -1
    },
    {
      fragments: [
        "ia",
        "iu",
        "ii",
        "io",
        "[aeio][aeiou]{2}",
        "[aeiou]ing",
        "[^aeiou]ying",
        "ui[aeou]"
      ],
      countModifier: 1
    },
    {
      fragments: [
        "^ree[jmnpqrsx]",
        "^reele",
        "^reeva",
        "riet",
        "dien",
        "[aeiouym][bdp]le$",
        "uei",
        "uou",
        "^mc",
        "ism$",
        "[^l]lien",
        "^coa[dglx].",
        "[^gqauieo]ua[^auieo]",
        "dn't$",
        "uity$",
        "ie(r|st)",
        "[aeiouw]y[aeiou]",
        "[^ao]ire[ds]",
        "[^ao]ire$"
      ],
      countModifier: 1
    },
    {
      fragments: [
        "eoa",
        "eoo",
        "ioa",
        "ioe",
        "ioo"
      ],
      countModifier: 1
    }
  ],
  words: {
    full: [
      {
        word: "business",
        syllables: 2
      },
      {
        word: "coheiress",
        syllables: 3
      },
      {
        word: "colonel",
        syllables: 2
      },
      {
        word: "heiress",
        syllables: 2
      },
      {
        word: "i.e",
        syllables: 2
      },
      {
        word: "shoreline",
        syllables: 2
      },
      {
        word: "simile",
        syllables: 3
      },
      {
        word: "unheired",
        syllables: 2
      },
      {
        word: "wednesday",
        syllables: 2
      }
    ],
    fragments: {
      global: [
        {
          word: "coyote",
          syllables: 3
        },
        {
          word: "graveyard",
          syllables: 2
        },
        {
          word: "lawyer",
          syllables: 2
        }
      ]
    }
  }
}, o5e = {
  vowels: r5e,
  deviations: s5e
}, d5e = "aáäâeéëêiíïîoóöôuúüûy", l5e = {
  vowels: [
    {
      fragments: [
        "ue$",
        "dge$",
        "[tcp]iënt",
        "ace$",
        "[br]each",
        "[ainpr]tiaal",
        "[io]tiaan",
        "gua[yc]",
        "[^i]deal",
        "tive$",
        "load",
        "[^e]coke",
        "[^s]core$"
      ],
      countModifier: -1
    },
    {
      fragments: [
        "aä",
        "aeu",
        "aie",
        "ao",
        "ë",
        "eo",
        "eú",
        "ieau",
        "ea$",
        "ea[^u]",
        "ei[ej]",
        "eu[iu]",
        "ï",
        "iei",
        "ienne",
        "[^l]ieu[^w]",
        "[^l]ieu$",
        "i[auiy]",
        "stion",
        "[^cstx]io",
        "^sion",
        "riè",
        "oö",
        "oa",
        "oeing",
        "oie",
        "[eu]ü",
        "[^q]u[aeèo]",
        "uie",
        "[bhnpr]ieel",
        "[bhnpr]iël"
      ],
      countModifier: 1
    },
    {
      fragments: [
        "[aeolu]y[aeéèoóu]"
      ],
      countModifier: 1
    }
  ],
  words: {
    full: [
      {
        word: "bye",
        syllables: 1
      },
      {
        word: "core",
        syllables: 1
      },
      {
        word: "cure",
        syllables: 1
      },
      {
        word: "dei",
        syllables: 2
      },
      {
        word: "dope",
        syllables: 1
      },
      {
        word: "dude",
        syllables: 1
      },
      {
        word: "fake",
        syllables: 1
      },
      {
        word: "fame",
        syllables: 1
      },
      {
        word: "five",
        syllables: 1
      },
      {
        word: "hole",
        syllables: 1
      },
      {
        word: "least",
        syllables: 1
      },
      {
        word: "lone",
        syllables: 1
      },
      {
        word: "minute",
        syllables: 2
      },
      {
        word: "move",
        syllables: 1
      },
      {
        word: "nice",
        syllables: 1
      },
      {
        word: "one",
        syllables: 1
      },
      {
        word: "state",
        syllables: 1
      },
      {
        word: "surplace",
        syllables: 2
      },
      {
        word: "take",
        syllables: 1
      },
      {
        word: "trade",
        syllables: 1
      },
      {
        word: "wide",
        syllables: 1
      }
    ],
    fragments: {
      global: [
        {
          word: "adieu",
          syllables: 2
        },
        {
          word: "airline",
          syllables: 2
        },
        {
          word: "airmiles",
          syllables: 2
        },
        {
          word: "alien",
          syllables: 3
        },
        {
          word: "ambient",
          syllables: 3
        },
        {
          word: "announcement",
          syllables: 3
        },
        {
          word: "appearance",
          syllables: 3
        },
        {
          word: "appeasement",
          syllables: 3
        },
        {
          word: "atheneum",
          syllables: 4
        },
        {
          word: "awesome",
          syllables: 2
        },
        {
          word: "baccalaurei",
          syllables: 5
        },
        {
          word: "baccalaureus",
          syllables: 5
        },
        {
          word: "baseball",
          syllables: 3
        },
        {
          word: "basejump",
          syllables: 2
        },
        {
          word: "banlieue",
          syllables: 3
        },
        {
          word: "bapao",
          syllables: 2
        },
        {
          word: "barbecue",
          syllables: 3
        },
        {
          word: "beamer",
          syllables: 2
        },
        {
          word: "beanie",
          syllables: 2
        },
        {
          word: "beat",
          syllables: 1
        },
        {
          word: "belle",
          syllables: 2
        },
        {
          word: "bête",
          syllables: 1
        },
        {
          word: "bingewatch",
          syllables: 2
        },
        {
          word: "blocnote",
          syllables: 2
        },
        {
          word: "blue",
          syllables: 1
        },
        {
          word: "board",
          syllables: 1
        },
        {
          word: "break",
          syllables: 1
        },
        {
          word: "broad",
          syllables: 1
        },
        {
          word: "bulls-eye",
          syllables: 2
        },
        {
          word: "business",
          syllables: 2
        },
        {
          word: "byebye",
          syllables: 2
        },
        {
          word: "cacao",
          syllables: 2
        },
        {
          word: "caesar",
          syllables: 2
        },
        {
          word: "camaieu",
          syllables: 3
        },
        {
          word: "caoutchouc",
          syllables: 2
        },
        {
          word: "carbolineum",
          syllables: 5
        },
        {
          word: "catchphrase",
          syllables: 1
        },
        {
          word: "carrier",
          syllables: 3
        },
        {
          word: "cheat",
          syllables: 1
        },
        {
          word: "cheese",
          syllables: 1
        },
        {
          word: "circonflexe",
          syllables: 3
        },
        {
          word: "clean",
          syllables: 1
        },
        {
          word: "cloak",
          syllables: 1
        },
        {
          word: "cobuying",
          syllables: 3
        },
        {
          word: "comeback",
          syllables: 2
        },
        {
          word: "comfortzone",
          syllables: 3
        },
        {
          word: "communiqué",
          syllables: 4
        },
        {
          word: "conopeum",
          syllables: 4
        },
        {
          word: "console",
          syllables: 2
        },
        {
          word: "corporate",
          syllables: 3
        },
        {
          word: "coûte",
          syllables: 1
        },
        {
          word: "creamer",
          syllables: 2
        },
        {
          word: "crime",
          syllables: 1
        },
        {
          word: "cruesli",
          syllables: 2
        },
        {
          word: "deadline",
          syllables: 2
        },
        {
          word: "deautoriseren",
          syllables: 6
        },
        {
          word: "deuce",
          syllables: 1
        },
        {
          word: "deum",
          syllables: 2
        },
        {
          word: "dirndl",
          syllables: 2
        },
        {
          word: "dread",
          syllables: 2
        },
        {
          word: "dreamteam",
          syllables: 2
        },
        {
          word: "drone",
          syllables: 1
        },
        {
          word: "enquête",
          syllables: 3
        },
        {
          word: "escape",
          syllables: 2
        },
        {
          word: "exposure",
          syllables: 3
        },
        {
          word: "extranei",
          syllables: 4
        },
        {
          word: "extraneus",
          syllables: 4
        },
        {
          word: "eyecatcher",
          syllables: 3
        },
        {
          word: "eyeliner",
          syllables: 3
        },
        {
          word: "eyeopener",
          syllables: 4
        },
        {
          word: "eyetracker",
          syllables: 3
        },
        {
          word: "eyetracking",
          syllables: 3
        },
        {
          word: "fairtrade",
          syllables: 2
        },
        {
          word: "fauteuil",
          syllables: 2
        },
        {
          word: "feature",
          syllables: 2
        },
        {
          word: "feuilletee",
          syllables: 3
        },
        {
          word: "feuilleton",
          syllables: 3
        },
        {
          word: "fisheye",
          syllables: 2
        },
        {
          word: "fineliner",
          syllables: 3
        },
        {
          word: "finetunen",
          syllables: 3
        },
        {
          word: "forehand",
          syllables: 2
        },
        {
          word: "freak",
          syllables: 1
        },
        {
          word: "fusioneren",
          syllables: 4
        },
        {
          word: "gayparade",
          syllables: 3
        },
        {
          word: "gaypride",
          syllables: 2
        },
        {
          word: "goal",
          syllables: 1
        },
        {
          word: "grapefruit",
          syllables: 2
        },
        {
          word: "gruyère",
          syllables: 3
        },
        {
          word: "guele",
          syllables: 1
        },
        {
          word: "guerrilla",
          syllables: 3
        },
        {
          word: "guest",
          syllables: 1
        },
        {
          word: "hardware",
          syllables: 2
        },
        {
          word: "haute",
          syllables: 1
        },
        {
          word: "healing",
          syllables: 2
        },
        {
          word: "heater",
          syllables: 2
        },
        {
          word: "heavy",
          syllables: 2
        },
        {
          word: "hoax",
          syllables: 1
        },
        {
          word: "hotline",
          syllables: 2
        },
        {
          word: "idee-fixe",
          syllables: 3
        },
        {
          word: "inclusive",
          syllables: 3
        },
        {
          word: "inline",
          syllables: 2
        },
        {
          word: "intake",
          syllables: 2
        },
        {
          word: "intensive",
          syllables: 3
        },
        {
          word: "jeans",
          syllables: 1
        },
        {
          word: "Jones",
          syllables: 1
        },
        {
          word: "jubileum",
          syllables: 4
        },
        {
          word: "kalfsribeye",
          syllables: 3
        },
        {
          word: "kraaiennest",
          syllables: 3
        },
        {
          word: "lastminute",
          syllables: 3
        },
        {
          word: "learning",
          syllables: 2
        },
        {
          word: "league",
          syllables: 1
        },
        {
          word: "line-up",
          syllables: 2
        },
        {
          word: "linoleum",
          syllables: 4
        },
        {
          word: "load",
          syllables: 1
        },
        {
          word: "loafer",
          syllables: 2
        },
        {
          word: "longread",
          syllables: 2
        },
        {
          word: "lookalike",
          syllables: 3
        },
        {
          word: "louis",
          syllables: 3
        },
        {
          word: "lyceum",
          syllables: 3
        },
        {
          word: "magazine",
          syllables: 3
        },
        {
          word: "mainstream",
          syllables: 2
        },
        {
          word: "make-over",
          syllables: 3
        },
        {
          word: "make-up",
          syllables: 2
        },
        {
          word: "malware",
          syllables: 2
        },
        {
          word: "marmoleum",
          syllables: 4
        },
        {
          word: "mausoleum",
          syllables: 4
        },
        {
          word: "medeauteur",
          syllables: 4
        },
        {
          word: "midlifecrisis",
          syllables: 4
        },
        {
          word: "migraineaura",
          syllables: 5
        },
        {
          word: "milkshake",
          syllables: 2
        },
        {
          word: "millefeuille",
          syllables: 4
        },
        {
          word: "mixed",
          syllables: 1
        },
        {
          word: "muesli",
          syllables: 2
        },
        {
          word: "museum",
          syllables: 3
        },
        {
          word: "must-have",
          syllables: 2
        },
        {
          word: "must-read",
          syllables: 2
        },
        {
          word: "notebook",
          syllables: 2
        },
        {
          word: "nonsense",
          syllables: 2
        },
        {
          word: "nowhere",
          syllables: 2
        },
        {
          word: "nurture",
          syllables: 2
        },
        {
          word: "offline",
          syllables: 2
        },
        {
          word: "oneliner",
          syllables: 3
        },
        {
          word: "onesie",
          syllables: 2
        },
        {
          word: "online",
          syllables: 2
        },
        {
          word: "opinion",
          syllables: 3
        },
        {
          word: "paella",
          syllables: 3
        },
        {
          word: "pacemaker",
          syllables: 3
        },
        {
          word: "panache",
          syllables: 2
        },
        {
          word: "papegaaienneus",
          syllables: 5
        },
        {
          word: "passe-partout",
          syllables: 3
        },
        {
          word: "peanuts",
          syllables: 2
        },
        {
          word: "perigeum",
          syllables: 4
        },
        {
          word: "perineum",
          syllables: 4
        },
        {
          word: "perpetuum",
          syllables: 4
        },
        {
          word: "petroleum",
          syllables: 4
        },
        {
          word: "phone",
          syllables: 3
        },
        {
          word: "picture",
          syllables: 2
        },
        {
          word: "placemat",
          syllables: 2
        },
        {
          word: "porte-manteau",
          syllables: 3
        },
        {
          word: "portefeuille",
          syllables: 4
        },
        {
          word: "presse-papier",
          syllables: 3
        },
        {
          word: "primetime",
          syllables: 2
        },
        {
          word: "queen",
          syllables: 1
        },
        {
          word: "questionnaire",
          syllables: 3
        },
        {
          word: "queue",
          syllables: 1
        },
        {
          word: "reader",
          syllables: 2
        },
        {
          word: "reality",
          syllables: 3
        },
        {
          word: "reallife",
          syllables: 2
        },
        {
          word: "remake",
          syllables: 2
        },
        {
          word: "repeat",
          syllables: 2
        },
        {
          word: "repertoire",
          syllables: 3
        },
        {
          word: "research",
          syllables: 2
        },
        {
          word: "reverence",
          syllables: 3
        },
        {
          word: "ribeye",
          syllables: 2
        },
        {
          word: "ringtone",
          syllables: 3
        },
        {
          word: "road",
          syllables: 1
        },
        {
          word: "roaming",
          syllables: 2
        },
        {
          word: "sciencefiction",
          syllables: 4
        },
        {
          word: "selfmade",
          syllables: 2
        },
        {
          word: "sidekick",
          syllables: 2
        },
        {
          word: "sightseeing",
          syllables: 3
        },
        {
          word: "skyline",
          syllables: 2
        },
        {
          word: "smile",
          syllables: 1
        },
        {
          word: "sneaky",
          syllables: 2
        },
        {
          word: "software",
          syllables: 2
        },
        {
          word: "sparerib",
          syllables: 2
        },
        {
          word: "speaker",
          syllables: 2
        },
        {
          word: "spread",
          syllables: 1
        },
        {
          word: "statement",
          syllables: 2
        },
        {
          word: "steak",
          syllables: 1
        },
        {
          word: "steeplechase",
          syllables: 3
        },
        {
          word: "stonewash",
          syllables: 2
        },
        {
          word: "store",
          syllables: 1
        },
        {
          word: "streaken",
          syllables: 2
        },
        {
          word: "stream",
          syllables: 1
        },
        {
          word: "streetware",
          syllables: 1
        },
        {
          word: "supersoaker",
          syllables: 4
        },
        {
          word: "surprise-party",
          syllables: 4
        },
        {
          word: "sweater",
          syllables: 2
        },
        {
          word: "teaser",
          syllables: 2
        },
        {
          word: "tenue",
          syllables: 2
        },
        {
          word: "template",
          syllables: 2
        },
        {
          word: "timeline",
          syllables: 2
        },
        {
          word: "tissue",
          syllables: 2
        },
        {
          word: "toast",
          syllables: 1
        },
        {
          word: "tête-à-tête",
          syllables: 3
        },
        {
          word: "typecast",
          syllables: 2
        },
        {
          word: "unique",
          syllables: 2
        },
        {
          word: "ureum",
          syllables: 3
        },
        {
          word: "vibe",
          syllables: 1
        },
        {
          word: "vieux",
          syllables: 1
        },
        {
          word: "ville",
          syllables: 1
        },
        {
          word: "vintage",
          syllables: 2
        },
        {
          word: "wandelyup",
          syllables: 3
        },
        {
          word: "wiseguy",
          syllables: 2
        },
        {
          word: "wake-up-call",
          syllables: 3
        },
        {
          word: "webcare",
          syllables: 2
        },
        {
          word: "winegum",
          syllables: 2
        },
        {
          word: "base",
          syllables: 1,
          notFollowedBy: [
            "e",
            "n",
            "r"
          ]
        },
        {
          word: "game",
          syllables: 1,
          notFollowedBy: [
            "n",
            "l",
            "r"
          ]
        },
        {
          word: "style",
          syllables: 1,
          notFollowedBy: [
            "n",
            "s"
          ]
        },
        {
          word: "douche",
          syllables: 1,
          notFollowedBy: [
            "n",
            "s"
          ]
        },
        {
          word: "space",
          syllables: 1,
          notFollowedBy: [
            "n",
            "s"
          ]
        },
        {
          word: "striptease",
          syllables: 2,
          notFollowedBy: [
            "n",
            "s"
          ]
        },
        {
          word: "jive",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "keynote",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "mountainbike",
          syllables: 3,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "face",
          syllables: 1,
          notFollowedBy: [
            "n",
            "t"
          ]
        },
        {
          word: "challenge",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "cruise",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "house",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "dance",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "franchise",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "freelance",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "lease",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "linedance",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "lounge",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "merchandise",
          syllables: 3,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "performance",
          syllables: 3,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "release",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "resource",
          syllables: 2,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        },
        {
          word: "cache",
          syllables: 1,
          notFollowedBy: [
            "c",
            "l",
            "n",
            "t",
            "x"
          ]
        },
        {
          word: "office",
          syllables: 2,
          notFollowedBy: [
            "r",
            "s"
          ]
        },
        {
          word: "close",
          syllables: 1,
          notFollowedBy: [
            "r",
            "t"
          ]
        }
      ],
      atBeginningOrEnd: [
        {
          word: "byte",
          syllables: 1
        },
        {
          word: "cake",
          syllables: 1
        },
        {
          word: "care",
          syllables: 1
        },
        {
          word: "coach",
          syllables: 1
        },
        {
          word: "coat",
          syllables: 1
        },
        {
          word: "earl",
          syllables: 1
        },
        {
          word: "foam",
          syllables: 1
        },
        {
          word: "gate",
          syllables: 1
        },
        {
          word: "head",
          syllables: 1
        },
        {
          word: "home",
          syllables: 1
        },
        {
          word: "live",
          syllables: 1
        },
        {
          word: "safe",
          syllables: 1
        },
        {
          word: "site",
          syllables: 1
        },
        {
          word: "soap",
          syllables: 1
        },
        {
          word: "teak",
          syllables: 1
        },
        {
          word: "team",
          syllables: 1
        },
        {
          word: "wave",
          syllables: 1
        },
        {
          word: "brace",
          syllables: 1,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "case",
          syllables: 1,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "fleece",
          syllables: 1,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "service",
          syllables: 2,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "voice",
          syllables: 1,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "kite",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "skate",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "race",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r",
            "s"
          ]
        }
      ],
      atBeginning: [
        {
          word: "coke",
          syllables: 1
        },
        {
          word: "deal",
          syllables: 1
        },
        {
          word: "image",
          syllables: 2,
          notFollowedBy: [
            "s"
          ]
        }
      ],
      atEnd: [
        {
          word: "force",
          syllables: 1
        },
        {
          word: "tea",
          syllables: 1
        },
        {
          word: "time",
          syllables: 1
        },
        {
          word: "date",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "hype",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "quote",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "tape",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "upgrade",
          syllables: 2,
          alsoFollowedBy: [
            "s"
          ]
        }
      ]
    }
  }
}, c5e = {
  vowels: d5e,
  deviations: l5e
}, u5e = "aeiouyàèéìîïòù", p5e = {
  vowels: [
    {
      fragments: [
        "a[íúeo]",
        "e[íúao]",
        "o[íúaeè]",
        "í[aeo]",
        "ú[aeo]",
        "ai[aeou]",
        "àii",
        "aiì",
        "au[eé]",
        "ei[aàeèé]",
        "èia",
        "ia[èiì]",
        "iài",
        "oi[aàeèo]",
        "òia",
        "óio",
        "uí",
        "ui[aàó]",
        "ùio",
        "ouï",
        "coo[cmnpr]",
        "lcool",
        "coòf",
        "[aeuioìùèéàò]y[aeuioíìùèàó]",
        "ìa$",
        "èa$"
      ],
      countModifier: 1
    },
    {
      fragments: [
        "aoi",
        "aoì",
        "ioe",
        "riae",
        "ïa$"
      ],
      countModifier: 1
    }
  ],
  words: {
    full: [
      {
        word: "via",
        syllables: 2
      },
      {
        word: "guaime",
        syllables: 3
      },
      {
        word: "guaina",
        syllables: 3
      },
      {
        word: "coke",
        syllables: 1
      },
      {
        word: "frame",
        syllables: 1
      },
      {
        word: "goal",
        syllables: 1
      },
      {
        word: "live",
        syllables: 1
      },
      {
        word: "mouse",
        syllables: 1
      },
      {
        word: "coon",
        syllables: 1
      }
    ],
    fragments: {
      global: [
        {
          word: "mayoyào",
          syllables: 4
        },
        {
          word: "eye-liner",
          syllables: 3
        },
        {
          word: "scooner",
          syllables: 2
        },
        {
          word: "cocoon",
          syllables: 2
        },
        {
          word: "silhouette",
          syllables: 4
        },
        {
          word: "circuíto",
          syllables: 4
        },
        {
          word: "cruento",
          syllables: 3
        },
        {
          word: "cruènto",
          syllables: 3
        },
        {
          word: "rituale",
          syllables: 4
        },
        {
          word: "duello",
          syllables: 3
        },
        {
          word: "fuorviante",
          syllables: 4
        },
        {
          word: "league",
          syllables: 1
        },
        {
          word: "leader",
          syllables: 2
        },
        {
          word: "appeal",
          syllables: 2
        },
        {
          word: "backstage",
          syllables: 2
        },
        {
          word: "badge",
          syllables: 1
        },
        {
          word: "baseball",
          syllables: 2
        },
        {
          word: "beauty",
          syllables: 2
        },
        {
          word: "bondage",
          syllables: 2,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "break",
          syllables: 1
        },
        {
          word: "brokerage",
          syllables: 3
        },
        {
          word: "business",
          syllables: 2
        },
        {
          word: "cache",
          syllables: 2,
          notFollowedBy: [
            "s",
            "r"
          ]
        },
        {
          word: "cashmere",
          syllables: 2
        },
        {
          word: "challenge",
          syllables: 2,
          notFollowedBy: [
            "s",
            "r"
          ]
        },
        {
          word: "charleston",
          syllables: 2
        },
        {
          word: "cheap",
          syllables: 1
        },
        {
          word: "cottage",
          syllables: 2,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "cruise",
          syllables: 1,
          notFollowedBy: [
            "s",
            "r"
          ]
        },
        {
          word: "device",
          syllables: 2,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "downgrade",
          syllables: 2,
          notFollowedBy: [
            "d"
          ]
        },
        {
          word: "download",
          syllables: 2
        },
        {
          word: "drive",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "endorsement",
          syllables: 3
        },
        {
          word: "drive",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "executive",
          syllables: 4
        },
        {
          word: "firmware",
          syllables: 2
        },
        {
          word: "fobia",
          syllables: 3
        },
        {
          word: "float",
          syllables: 1
        },
        {
          word: "freak",
          syllables: 1
        },
        {
          word: "game",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "guideline",
          syllables: 2
        },
        {
          word: "hardware",
          syllables: 2
        },
        {
          word: "homeless",
          syllables: 2
        },
        {
          word: "hardware",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "hardware",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "hardware",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "hospice",
          syllables: 2,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "impeachment",
          syllables: 3
        },
        {
          word: "jeans",
          syllables: 1
        },
        {
          word: "jukebox",
          syllables: 2
        },
        {
          word: "leasing",
          syllables: 2
        },
        {
          word: "lease",
          syllables: 1,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "lounge",
          syllables: 1,
          notFollowedBy: [
            "r",
            "s"
          ]
        },
        {
          word: "magazine",
          syllables: 3
        },
        {
          word: "notebook",
          syllables: 2
        },
        {
          word: "office",
          syllables: 2,
          notFollowedBy: [
            "r",
            "s"
          ]
        },
        {
          word: "online",
          syllables: 2
        },
        {
          word: "offline",
          syllables: 2
        },
        {
          word: "overcoat",
          syllables: 3
        },
        {
          word: "offside",
          syllables: 2,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "overdrive",
          syllables: 3
        },
        {
          word: "oversize",
          syllables: 3
        },
        {
          word: "pacemaker",
          syllables: 3
        },
        {
          word: "package",
          syllables: 2,
          notFollowedBy: [
            "r",
            "s"
          ]
        },
        {
          word: "pancake",
          syllables: 2
        },
        {
          word: "performance",
          syllables: 3
        },
        {
          word: "premium",
          syllables: 3
        },
        {
          word: "ragtime",
          syllables: 2
        },
        {
          word: "reading",
          syllables: 2
        },
        {
          word: "residence",
          syllables: 3,
          notFollowedBy: [
            "s"
          ]
        },
        {
          word: "roaming",
          syllables: 2
        },
        {
          word: "rollerblade",
          syllables: 3,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "royalty",
          syllables: 3
        },
        {
          word: "shake",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "shale",
          syllables: 1
        },
        {
          word: "shampooing",
          syllables: 3
        },
        {
          word: "shareware",
          syllables: 2
        },
        {
          word: "shearling",
          syllables: 2
        },
        {
          word: "sidecar",
          syllables: 2
        },
        {
          word: "hardware",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "skate",
          syllables: 1,
          notFollowedBy: [
            "n",
            "r"
          ]
        },
        {
          word: "trial",
          syllables: 2
        },
        {
          word: "toast",
          syllables: 1
        },
        {
          word: "texture",
          syllables: 2
        },
        {
          word: "testimonial",
          syllables: 5
        },
        {
          word: "teaser",
          syllables: 2
        },
        {
          word: "sweater",
          syllables: 2
        },
        {
          word: "suspense",
          syllables: 2,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "subroutine",
          syllables: 3
        },
        {
          word: "steadicam",
          syllables: 3
        },
        {
          word: "spread",
          syllables: 1
        },
        {
          word: "speaker",
          syllables: 2
        },
        {
          word: "board",
          syllables: 1
        },
        {
          word: "sneaker",
          syllables: 2
        },
        {
          word: "smartphone",
          syllables: 2
        },
        {
          word: "slide",
          syllables: 1,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "skyline",
          syllables: 2
        },
        {
          word: "skinhead",
          syllables: 2
        },
        {
          word: "update",
          syllables: 2,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "upgrade",
          syllables: 2,
          notFollowedBy: [
            "r"
          ]
        },
        {
          word: "upload",
          syllables: 2
        },
        {
          word: "vintage",
          syllables: 2
        },
        {
          word: "wakeboard",
          syllables: 2
        },
        {
          word: "website",
          syllables: 2
        },
        {
          word: "welfare",
          syllables: 2
        },
        {
          word: "yeah",
          syllables: 1
        },
        {
          word: "yearling",
          syllables: 2
        }
      ],
      atEnd: [
        {
          word: "byte",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "bite",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "beat",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        },
        {
          word: "coach",
          syllables: 1
        },
        {
          word: "line",
          syllables: 1,
          alsoFollowedBy: [
            "s"
          ]
        }
      ],
      atBeginning: [
        {
          word: "cheese",
          syllables: 1
        },
        {
          word: "head",
          syllables: 1
        },
        {
          word: "streak",
          syllables: 1
        }
      ],
      atBeginningOrEnd: [
        {
          word: "team",
          syllables: 1
        },
        {
          word: "stream",
          syllables: 1
        }
      ]
    }
  }
}, m5e = {
  vowels: u5e,
  deviations: p5e
}, g5e = "аоиеёэыуюя", z5e = {
  vowels: [
    {
      fragments: [
        "[аоиеёэыуюя][аоиеёэыуюя]"
      ],
      countModifier: 1
    },
    {
      fragments: [
        "[аоиеёэыуюя][аоиеёэыуюя][аоиеёэыуюя]"
      ],
      countModifier: 1
    }
  ],
  words: {
    full: [],
    fragments: []
  }
}, f5e = {
  vowels: g5e,
  deviations: z5e
}, y5e = "aeiouyàâéèêëîïûüùôæœ", w5e = {
  vowels: [
    {
      fragments: [
        "[ptf]aon(ne)?[s]?$"
      ],
      countModifier: -1
    },
    {
      fragments: [
        "aoul",
        "[^eéiïou]e(s|nt)?$",
        "[qg]ue(s|nt)?$"
      ],
      countModifier: -1
    },
    {
      fragments: [
        "o[ëaéèï]"
      ],
      countModifier: 1
    },
    {
      fragments: [
        "a[eéèïüo]",
        "é[aâèéiîuo]",
        "ii[oe]",
        "[aeéuo]y[aâeéèoui]",
        "coe[^u]",
        "zoo",
        "coop",
        "coord",
        "poly[ae]",
        "[bcd]ry[oa]",
        "[bcdfgptv][rl](ou|u|i)[aéèouâ]",
        "ouez",
        "[blmnt]uio",
        "uoia",
        "ment$",
        "yua",
        "[bcdfgptv][rl](i|u|eu)e([ltz]|r[s]?$|n[^t])",
        "[^aeiuyàâéèêëîïûüùôæœqg]uie[rz]$"
      ],
      countModifier: 1
    }
  ],
  words: {
    full: [
      {
        word: "ok",
        syllables: 2
      },
      {
        word: "eyeliner",
        syllables: 3
      },
      {
        word: "coati",
        syllables: 3
      },
      {
        word: "que",
        syllables: 1
      },
      {
        word: "flouer",
        syllables: 2
      },
      {
        word: "relouer",
        syllables: 3
      },
      {
        word: "évaluons",
        syllables: 4
      },
      {
        word: "instituons",
        syllables: 4
      },
      {
        word: "atténuons",
        syllables: 4
      },
      {
        word: "remuons",
        syllables: 3
      },
      {
        word: "redestribuons",
        syllables: 5
      },
      {
        word: "suons",
        syllables: 2
      },
      {
        word: "reconstituons",
        syllables: 5
      },
      {
        word: "dent",
        syllables: 1
      },
      {
        word: "fréquent",
        syllables: 2
      },
      {
        word: "permanent",
        syllables: 3
      },
      {
        word: "mécontent",
        syllables: 3
      },
      {
        word: "grandiloquent",
        syllables: 4
      },
      {
        word: "continent",
        syllables: 3
      },
      {
        word: "occident",
        syllables: 3
      },
      {
        word: "référent",
        syllables: 3
      },
      {
        word: "indigent",
        syllables: 3
      },
      {
        word: "concurrent",
        syllables: 3
      },
      {
        word: "gent",
        syllables: 1
      },
      {
        word: "différent",
        syllables: 3
      },
      {
        word: "strident",
        syllables: 2
      },
      {
        word: "équivalent",
        syllables: 4
      },
      {
        word: "ardent",
        syllables: 2
      },
      {
        word: "impotent",
        syllables: 3
      },
      {
        word: "argent",
        syllables: 2
      },
      {
        word: "immanent",
        syllables: 3
      },
      {
        word: "indécent",
        syllables: 3
      },
      {
        word: "effluent",
        syllables: 3
      },
      {
        word: "agent",
        syllables: 2
      },
      {
        word: "dolent",
        syllables: 2
      },
      {
        word: "contingent",
        syllables: 3
      },
      {
        word: "impénitent",
        syllables: 4
      },
      {
        word: "adjacent",
        syllables: 3
      },
      {
        word: "incident",
        syllables: 3
      },
      {
        word: "content",
        syllables: 2
      },
      {
        word: "incontinent",
        syllables: 4
      },
      {
        word: "éloquent",
        syllables: 3
      },
      {
        word: "convent",
        syllables: 2
      },
      {
        word: "dissident",
        syllables: 3
      },
      {
        word: "innocent",
        syllables: 3
      },
      {
        word: "ventripotent",
        syllables: 4
      },
      {
        word: "convalescent",
        syllables: 4
      },
      {
        word: "accident",
        syllables: 3
      },
      {
        word: "récent",
        syllables: 2
      },
      {
        word: "absent",
        syllables: 2
      },
      {
        word: "décadent",
        syllables: 3
      },
      {
        word: "réticent",
        syllables: 3
      },
      {
        word: "évent",
        syllables: 2
      },
      {
        word: "souvent",
        syllables: 2
      },
      {
        word: "intelligent",
        syllables: 3
      },
      {
        word: "inhérent",
        syllables: 3
      },
      {
        word: "adolescent",
        syllables: 4
      },
      {
        word: "couvent",
        syllables: 2
      },
      {
        word: "cent",
        syllables: 1
      },
      {
        word: "urgent",
        syllables: 2
      },
      {
        word: "précédent",
        syllables: 3
      },
      {
        word: "imprudent",
        syllables: 3
      },
      {
        word: "torrent",
        syllables: 2
      },
      {
        word: "abstinent",
        syllables: 3
      },
      {
        word: "indifférent",
        syllables: 4
      },
      {
        word: "excédent",
        syllables: 3
      },
      {
        word: "déférent",
        syllables: 3
      },
      {
        word: "incandescent",
        syllables: 4
      },
      {
        word: "intermittent",
        syllables: 4
      },
      {
        word: "présent",
        syllables: 3
      },
      {
        word: "astringent",
        syllables: 3
      },
      {
        word: "trident",
        syllables: 2
      },
      {
        word: "impertinent",
        syllables: 4
      },
      {
        word: "détergent",
        syllables: 3
      },
      {
        word: "évident",
        syllables: 3
      },
      {
        word: "influent",
        syllables: 3
      },
      {
        word: "pertinent",
        syllables: 3
      },
      {
        word: "subséquent",
        syllables: 3
      },
      {
        word: "féculent",
        syllables: 3
      },
      {
        word: "déférent",
        syllables: 3
      },
      {
        word: "ambivalent",
        syllables: 4
      },
      {
        word: "omnipotent",
        syllables: 4
      },
      {
        word: "décent",
        syllables: 2
      },
      {
        word: "compétent",
        syllables: 3
      },
      {
        word: "adhérent",
        syllables: 3
      },
      {
        word: "afférent",
        syllables: 3
      },
      {
        word: "luminescent",
        syllables: 4
      },
      {
        word: "lent",
        syllables: 1
      },
      {
        word: "apparent",
        syllables: 3
      },
      {
        word: "effervescent",
        syllables: 4
      },
      {
        word: "parent",
        syllables: 2
      },
      {
        word: "pénitent",
        syllables: 3
      },
      {
        word: "fluorescent",
        syllables: 3
      },
      {
        word: "impudent",
        syllables: 3
      },
      {
        word: "diligent",
        syllables: 3
      },
      {
        word: "entregent",
        syllables: 3
      },
      {
        word: "flatulent",
        syllables: 3
      },
      {
        word: "serpent",
        syllables: 2
      },
      {
        word: "violent",
        syllables: 2
      },
      {
        word: "somnolent",
        syllables: 3
      },
      {
        word: "déliquescent",
        syllables: 4
      },
      {
        word: "proéminent",
        syllables: 4
      },
      {
        word: "résident",
        syllables: 3
      },
      {
        word: "putrescent",
        syllables: 3
      },
      {
        word: "talent",
        syllables: 2
      },
      {
        word: "spumescent",
        syllables: 3
      },
      {
        word: "tangent",
        syllables: 2
      },
      {
        word: "chiendent",
        syllables: 2
      },
      {
        word: "négligent",
        syllables: 3
      },
      {
        word: "antécédent",
        syllables: 4
      },
      {
        word: "régent",
        syllables: 2
      },
      {
        word: "polyvalent",
        syllables: 4
      },
      {
        word: "latent",
        syllables: 2
      },
      {
        word: "opulent",
        syllables: 3
      },
      {
        word: "arpent",
        syllables: 2
      },
      {
        word: "adent",
        syllables: 2
      },
      {
        word: "concupiscent",
        syllables: 4
      },
      {
        word: "sanguinolent",
        syllables: 4
      },
      {
        word: "opalescent",
        syllables: 4
      },
      {
        word: "prudent",
        syllables: 2
      },
      {
        word: "conséquent",
        syllables: 3
      },
      {
        word: "pourcent",
        syllables: 2
      },
      {
        word: "transparent",
        syllables: 3
      },
      {
        word: "sergent",
        syllables: 2
      },
      {
        word: "diligent",
        syllables: 3
      },
      {
        word: "inconséquent",
        syllables: 4
      },
      {
        word: "turbulent",
        syllables: 3
      },
      {
        word: "fervent",
        syllables: 2
      },
      {
        word: "truculent",
        syllables: 3
      },
      {
        word: "interférent",
        syllables: 4
      },
      {
        word: "confluent",
        syllables: 3
      },
      {
        word: "succulent",
        syllables: 3
      },
      {
        word: "purulent",
        syllables: 3
      },
      {
        word: "patent",
        syllables: 2
      },
      {
        word: "indulgent",
        syllables: 3
      },
      {
        word: "engoulevent",
        syllables: 4
      },
      {
        word: "auvent",
        syllables: 2
      },
      {
        word: "président",
        syllables: 3
      },
      {
        word: "confident",
        syllables: 3
      },
      {
        word: "incompétent",
        syllables: 4
      },
      {
        word: "accent",
        syllables: 2
      },
      {
        word: "arborescent",
        syllables: 4
      },
      {
        word: "contrevent",
        syllables: 3
      },
      {
        word: "cohérent",
        syllables: 3
      },
      {
        word: "relent",
        syllables: 2
      },
      {
        word: "insolent",
        syllables: 3
      },
      {
        word: "virulent",
        syllables: 3
      },
      {
        word: "rémanent",
        syllables: 3
      },
      {
        word: "vent",
        syllables: 1
      },
      {
        word: "turgescent",
        syllables: 3
      },
      {
        word: "incohérent",
        syllables: 4
      },
      {
        word: "malcontent",
        syllables: 3
      },
      {
        word: "lactescent",
        syllables: 3
      },
      {
        word: "inintelligent",
        syllables: 5
      },
      {
        word: "omniprésent",
        syllables: 4
      },
      {
        word: "récurrent",
        syllables: 3
      },
      {
        word: "covalent",
        syllables: 3
      },
      {
        word: "éminent",
        syllables: 3
      },
      {
        word: "onguent",
        syllables: 2
      },
      {
        word: "indolent",
        syllables: 3
      },
      {
        word: "event",
        syllables: 2
      },
      {
        word: "corpulent",
        syllables: 3
      },
      {
        word: "divergent",
        syllables: 3
      },
      {
        word: "excellent",
        syllables: 3
      },
      {
        word: "phosphorescent",
        syllables: 4
      },
      {
        word: "évanescent",
        syllables: 4
      },
      {
        word: "paravent",
        syllables: 3
      },
      {
        word: "avent",
        syllables: 2
      },
      {
        word: "iridescent",
        syllables: 4
      },
      {
        word: "prénomment",
        syllables: 2
      },
      {
        word: "consument",
        syllables: 2
      },
      {
        word: "dégomment",
        syllables: 2
      },
      {
        word: "enveniment",
        syllables: 3
      },
      {
        word: "proclament",
        syllables: 2
      },
      {
        word: "chôment",
        syllables: 1
      },
      {
        word: "infirment",
        syllables: 2
      },
      {
        word: "briment",
        syllables: 1
      },
      {
        word: "fument",
        syllables: 1
      },
      {
        word: "acclament",
        syllables: 2
      },
      {
        word: "referment",
        syllables: 2
      },
      {
        word: "impriment",
        syllables: 2
      },
      {
        word: "paument",
        syllables: 1
      },
      {
        word: "déciment",
        syllables: 2
      },
      {
        word: "accoutument",
        syllables: 3
      },
      {
        word: "essaiment",
        syllables: 2
      },
      {
        word: "ferment",
        syllables: 1
      },
      {
        word: "dépriment",
        syllables: 2
      },
      {
        word: "raniment",
        syllables: 2
      },
      {
        word: "programment",
        syllables: 2
      },
      {
        word: "fantasment",
        syllables: 2
      },
      {
        word: "animent",
        syllables: 2
      },
      {
        word: "affirment",
        syllables: 2
      },
      {
        word: "filment",
        syllables: 1
      },
      {
        word: "dament",
        syllables: 1
      },
      {
        word: "parsèment",
        syllables: 3
      },
      {
        word: "priment",
        syllables: 1
      },
      {
        word: "assomment",
        syllables: 2
      },
      {
        word: "rament",
        syllables: 1
      },
      {
        word: "pâment",
        syllables: 1
      },
      {
        word: "conforment",
        syllables: 2
      },
      {
        word: "embaument",
        syllables: 2
      },
      {
        word: "calment",
        syllables: 1
      },
      {
        word: "blasphèment",
        syllables: 2
      },
      {
        word: "désarment",
        syllables: 2
      },
      {
        word: "consomment",
        syllables: 2
      },
      {
        word: "griment",
        syllables: 1
      },
      {
        word: "abîment",
        syllables: 2
      },
      {
        word: "blâment",
        syllables: 1
      },
      {
        word: "endorment",
        syllables: 2
      },
      {
        word: "allument",
        syllables: 2
      },
      {
        word: "blâment",
        syllables: 1
      },
      {
        word: "confirment",
        syllables: 2
      },
      {
        word: "escriment",
        syllables: 2
      },
      {
        word: "trament",
        syllables: 1
      },
      {
        word: "hument",
        syllables: 1
      },
      {
        word: "surnomment",
        syllables: 2
      },
      {
        word: "écument",
        syllables: 2
      },
      {
        word: "triment",
        syllables: 1
      },
      {
        word: "estiment",
        syllables: 2
      },
      {
        word: "rallument",
        syllables: 2
      },
      {
        word: "enflamment",
        syllables: 2
      },
      {
        word: "riment",
        syllables: 1
      },
      {
        word: "plument",
        syllables: 1
      },
      {
        word: "suppriment",
        syllables: 2
      },
      {
        word: "gomment",
        syllables: 1
      },
      {
        word: "affament",
        syllables: 2
      },
      {
        word: "friment",
        syllables: 1
      },
      {
        word: "clament",
        syllables: 1
      },
      {
        word: "dorment",
        syllables: 1
      },
      {
        word: "dénomment",
        syllables: 2
      },
      {
        word: "entament",
        syllables: 2
      },
      {
        word: "arriment",
        syllables: 2
      },
      {
        word: "résument",
        syllables: 2
      },
      {
        word: "enrhument",
        syllables: 2
      },
      {
        word: "rendorment",
        syllables: 2
      },
      {
        word: "compriment",
        syllables: 2
      },
      {
        word: "aiment",
        syllables: 1
      },
      {
        word: "rythment",
        syllables: 1
      },
      {
        word: "périment",
        syllables: 2
      },
      {
        word: "réclament",
        syllables: 2
      },
      {
        word: "subliment",
        syllables: 2
      },
      {
        word: "brument",
        syllables: 1
      },
      {
        word: "embrument",
        syllables: 2
      },
      {
        word: "germent",
        syllables: 1
      },
      {
        word: "renferment",
        syllables: 2
      },
      {
        word: "sèment",
        syllables: 1
      },
      {
        word: "reforment",
        syllables: 2
      },
      {
        word: "liment",
        syllables: 1
      },
      {
        word: "cament",
        syllables: 1
      },
      {
        word: "parfument",
        syllables: 2
      },
      {
        word: "arment",
        syllables: 1
      },
      {
        word: "brament",
        syllables: 1
      },
      {
        word: "déforment",
        syllables: 2
      },
      {
        word: "assument",
        syllables: 2
      },
      {
        word: "crament",
        syllables: 1
      },
      {
        word: "exclament",
        syllables: 2
      },
      {
        word: "forment",
        syllables: 1
      },
      {
        word: "diffament",
        syllables: 2
      },
      {
        word: "somment",
        syllables: 1
      },
      {
        word: "oppriment",
        syllables: 2
      },
      {
        word: "miment",
        syllables: 1
      },
      {
        word: "enferment",
        syllables: 2
      },
      {
        word: "nomment",
        syllables: 1
      },
      {
        word: "reprogramment",
        syllables: 3
      },
      {
        word: "transforment",
        syllables: 2
      },
      {
        word: "expriment",
        syllables: 2
      },
      {
        word: "informent",
        syllables: 2
      },
      {
        word: "légitiment",
        syllables: 3
      },
      {
        word: "de",
        syllables: 1
      },
      {
        word: "le",
        syllables: 1
      },
      {
        word: "je",
        syllables: 1
      },
      {
        word: "te",
        syllables: 1
      },
      {
        word: "ce",
        syllables: 1
      },
      {
        word: "ne",
        syllables: 1
      },
      {
        word: "re",
        syllables: 1
      },
      {
        word: "me",
        syllables: 1
      },
      {
        word: "se",
        syllables: 1
      },
      {
        word: "ses",
        syllables: 1
      },
      {
        word: "mes",
        syllables: 1
      },
      {
        word: "mes",
        syllables: 1
      },
      {
        word: "ces",
        syllables: 1
      },
      {
        word: "des",
        syllables: 1
      },
      {
        word: "tes",
        syllables: 1
      },
      {
        word: "les",
        syllables: 1
      },
      {
        word: "oye",
        syllables: 1
      },
      {
        word: "es",
        syllables: 1
      },
      {
        word: "remerciâmes",
        syllables: 4
      },
      {
        word: "herniaires",
        syllables: 3
      },
      {
        word: "autopsiais",
        syllables: 4
      },
      {
        word: "août",
        syllables: 1
      }
    ],
    fragments: {
      global: [
        {
          word: "business",
          syllables: 2
        },
        {
          word: "skate",
          syllables: 1
        },
        {
          word: "board",
          syllables: 1
        },
        {
          word: "coach",
          syllables: 1
        },
        {
          word: "roadster",
          syllables: 2
        },
        {
          word: "soap",
          syllables: 1
        },
        {
          word: "goal",
          syllables: 1
        },
        {
          word: "coaltar",
          syllables: 2
        },
        {
          word: "loader",
          syllables: 2
        },
        {
          word: "coat",
          syllables: 1
        },
        {
          word: "baseball",
          syllables: 2
        },
        {
          word: "foëne",
          syllables: 1
        },
        {
          word: "cacaoyer",
          syllables: 4
        },
        {
          word: "scoop",
          syllables: 1
        },
        {
          word: "zoom",
          syllables: 1
        },
        {
          word: "bazooka",
          syllables: 3
        },
        {
          word: "tatoueu",
          syllables: 3
        },
        {
          word: "cloueu",
          syllables: 2
        },
        {
          word: "déchouer",
          syllables: 2
        },
        {
          word: "écrouelles",
          syllables: 3
        },
        {
          word: "maestria",
          syllables: 3
        },
        {
          word: "maestro",
          syllables: 3
        },
        {
          word: "vitae",
          syllables: 3
        },
        {
          word: "paella",
          syllables: 3
        },
        {
          word: "vae",
          syllables: 2
        },
        {
          word: "thaï",
          syllables: 1
        },
        {
          word: "skaï",
          syllables: 1
        },
        {
          word: "masaï",
          syllables: 2
        },
        {
          word: "samouraï",
          syllables: 3
        },
        {
          word: "bonsaï",
          syllables: 2
        },
        {
          word: "bonzaï",
          syllables: 2
        },
        {
          word: "aïkido",
          syllables: 3
        },
        {
          word: "daïquiri",
          syllables: 3
        },
        {
          word: "pagaïe",
          syllables: 2
        },
        {
          word: "chiite",
          syllables: 2
        },
        {
          word: "pays",
          syllables: 2
        },
        {
          word: "antiaérien",
          syllables: 5
        },
        {
          word: "bleui",
          syllables: 2
        },
        {
          word: "remerciai",
          syllables: 4
        },
        {
          word: "monstrueu",
          syllables: 3
        },
        {
          word: "niakoué",
          syllables: 3
        },
        {
          word: "minoen",
          syllables: 3
        },
        {
          word: "groenlandais",
          syllables: 4
        },
        {
          word: "remerciant",
          syllables: 4
        },
        {
          word: "skiant",
          syllables: 2
        },
        {
          word: "ruade",
          syllables: 2
        },
        {
          word: "weltanschauung",
          syllables: 4
        }
      ],
      atBeginning: [
        {
          word: "roast",
          syllables: 1
        },
        {
          word: "taï",
          syllables: 1
        }
      ],
      atEnd: [
        {
          word: "écrouer",
          syllables: 3
        },
        {
          word: "clouer",
          syllables: 2
        }
      ]
    }
  }
}, h5e = {
  vowels: y5e,
  deviations: w5e
}, b5e = "aeiouáéíóúü", v5e = {
  vowels: [
    {
      fragments: [
        "i[ií]",
        "[íú][aeo]",
        "o[aáeéíóú]",
        "uu",
        "flu[iea]",
        "ru[ie]",
        "eio",
        "eu[aá]",
        "oi[aó]",
        "[iu]ei",
        "ui[éu]",
        "^anti[aeoá]",
        "^zoo",
        "coo",
        "microo"
      ],
      countModifier: 1
    },
    {
      fragments: [
        "[eéó][aáeéíoóú]"
      ],
      countModifier: 1
    },
    {
      fragments: [
        "[aáü][aáeéiíoóú]",
        "eoi",
        "oeu",
        "[eu]au"
      ],
      countModifier: 1
    }
  ],
  words: {
    full: [
      {
        word: "scooter",
        syllables: 2
      },
      {
        word: "y",
        syllables: 1
      },
      {
        word: "beat",
        syllables: 1
      },
      {
        word: "via",
        syllables: 2
      },
      {
        word: "ok",
        syllables: 2
      }
    ],
    fragments: {
      global: [
        {
          word: "business",
          syllables: 2
        },
        {
          word: "coach",
          syllables: 1
        },
        {
          word: "reggae",
          syllables: 2
        },
        {
          word: "mail",
          syllables: 1
        },
        {
          word: "airbag",
          syllables: 2
        },
        {
          word: "affaire",
          syllables: 2
        },
        {
          word: "training",
          syllables: 2
        },
        {
          word: "hawaian",
          syllables: 3
        },
        {
          word: "saharaui",
          syllables: 3
        },
        {
          word: "nouveau",
          syllables: 2
        },
        {
          word: "chapeau",
          syllables: 2
        },
        {
          word: "free",
          syllables: 1
        },
        {
          word: "green",
          syllables: 1
        },
        {
          word: "jeep",
          syllables: 1
        },
        {
          word: "toffee",
          syllables: 2
        },
        {
          word: "tweet",
          syllables: 1
        },
        {
          word: "tweed",
          syllables: 1
        },
        {
          word: "semiautomátic",
          syllables: 6
        },
        {
          word: "estadou",
          syllables: 4
        },
        {
          word: "broadway",
          syllables: 2
        },
        {
          word: "board",
          syllables: 1
        },
        {
          word: "load",
          syllables: 1
        },
        {
          word: "roaming",
          syllables: 2
        },
        {
          word: "heavy",
          syllables: 2
        },
        {
          word: "break",
          syllables: 1
        }
      ]
    }
  }
}, k5e = {
  vowels: b5e,
  deviations: v5e
}, _5e = "aeiouáéíóúàâêôãõü", $5e = {
  vowels: [
    {
      fragments: [
        "(gu|qu)[aeoáéíóúêã]"
      ],
      countModifier: -1
    },
    {
      fragments: [
        "[^(g|q|a)][aeiou][aeo]$"
      ],
      countModifier: -1
    },
    {
      fragments: [
        "[aeiouáéíóúàâêôü][aeo]",
        "[aeiou][íúáéóãê]"
      ],
      countModifier: 1
    },
    {
      fragments: [
        "aí[ae]"
      ],
      countModifier: 1
    }
  ],
  words: {
    full: [
      {
        word: "delegacia",
        syllables: 5
      },
      {
        word: "democracia",
        syllables: 5
      },
      {
        word: "parceria",
        syllables: 4
      },
      {
        word: "secretaria",
        syllables: 5
      }
    ],
    fragments: []
  }
}, j5e = {
  vowels: _5e,
  deviations: $5e
};
Object.defineProperty(Yb, "__esModule", {
  value: !0
});
Yb.default = function(a = "en_US") {
  let e = (0, A5e.default)(a);
  return Qz.hasOwnProperty(e) ? Qz[e] : Qz.en;
};
var x5e = Ya, A5e = Ni(x5e), E5e = n5e, S5e = Ni(E5e), q5e = o5e, P5e = Ni(q5e), T5e = c5e, R5e = Ni(T5e), O5e = m5e, M5e = Ni(O5e), C5e = f5e, L5e = Ni(C5e), I5e = h5e, W5e = Ni(I5e), F5e = k5e, D5e = Ni(F5e), B5e = j5e, N5e = Ni(B5e);
function Ni(a) {
  return a && a.__esModule ? a : { default: a };
}
let Qz = { de: S5e.default, nl: R5e.default, en: P5e.default, it: M5e.default, ru: L5e.default, fr: W5e.default, es: D5e.default, pt: N5e.default };
var Zb = {}, Xb = {};
Object.defineProperty(Xb, "__esModule", {
  value: !0
});
var XP = I, U5e = Wi, H5e = V5e(U5e);
function V5e(a) {
  return a && a.__esModule ? a : { default: a };
}
var Sd = function(e) {
  this._hasRegex = !1, this._regex = "", this._multiplier = "", this.createRegex(e);
};
Sd.prototype.hasRegex = function() {
  return this._hasRegex;
};
Sd.prototype.createRegex = function(a) {
  !(0, XP.isUndefined)(a) && !(0, XP.isUndefined)(a.fragments) && (this._hasRegex = !0, this._regex = (0, H5e.default)(a.fragments, !0), this._multiplier = a.countModifier);
};
Sd.prototype.getRegex = function() {
  return this._regex;
};
Sd.prototype.countSyllables = function(a) {
  if (this._hasRegex) {
    var e = a.match(this._regex) || [];
    return e.length * this._multiplier;
  }
  return 0;
};
Xb.default = Sd;
Object.defineProperty(Zb, "__esModule", {
  value: !0
});
var K5e = Xb, G5e = Y5e(K5e), Jb = I;
function Y5e(a) {
  return a && a.__esModule ? a : { default: a };
}
var sp = function(e) {
  this.countSteps = [], (0, Jb.isUndefined)(e) || this.createSyllableCountSteps(e.deviations.vowels);
};
sp.prototype.createSyllableCountSteps = function(a) {
  (0, Jb.forEach)(a, (function(e) {
    this.countSteps.push(new G5e.default(e));
  }).bind(this));
};
sp.prototype.getAvailableSyllableCountSteps = function() {
  return this.countSteps;
};
sp.prototype.countSyllables = function(a) {
  var e = 0;
  return (0, Jb.forEach)(this.countSteps, function(t) {
    e += t.countSyllables(a);
  }), e;
};
Zb.default = sp;
var Qb = {};
Object.defineProperty(Qb, "__esModule", {
  value: !0
});
var cy = I;
function Ms(a) {
  this._location = a.location, this._fragment = a.word, this._syllables = a.syllables, this._regex = null, this._options = (0, cy.pick)(a, ["notFollowedBy", "alsoFollowedBy"]);
}
Ms.prototype.createRegex = function() {
  var a = "", e = this._options, t = this._fragment;
  switch ((0, cy.isUndefined)(e.notFollowedBy) || (t += "(?![" + e.notFollowedBy.join("") + "])"), (0, cy.isUndefined)(e.alsoFollowedBy) || (t += "[" + e.alsoFollowedBy.join("") + "]?"), this._location) {
    case "atBeginning":
      a = "^" + t;
      break;
    case "atEnd":
      a = t + "$";
      break;
    case "atBeginningOrEnd":
      a = "(^" + t + ")|(" + t + "$)";
      break;
    default:
      a = t;
      break;
  }
  this._regex = new RegExp(a);
};
Ms.prototype.getRegex = function() {
  return this._regex === null && this.createRegex(), this._regex;
};
Ms.prototype.occursIn = function(a) {
  var e = this.getRegex();
  return e.test(a);
};
Ms.prototype.removeFrom = function(a) {
  return a.replace(this._fragment, " ");
};
Ms.prototype.getSyllables = function() {
  return this._syllables;
};
Qb.default = Ms;
Object.defineProperty(rp, "__esModule", {
  value: !0
});
var Z5e = Yb, op = dp(Z5e), X5e = se, J5e = dp(X5e), St = I, Q5e = Zb, a8e = dp(Q5e), e8e = Qb, t8e = dp(e8e);
function dp(a) {
  return a && a.__esModule ? a : { default: a };
}
var i8e = function(e, t) {
  var i = 0, n = new RegExp("[^" + (0, op.default)(t).vowels + "]", "ig"), r = e.split(n), s = (0, St.filter)(r, function(o) {
    return o !== "";
  });
  return i += s.length, i;
}, n8e = function(e, t) {
  var i = new a8e.default((0, op.default)(t));
  return i.countSyllables(e);
}, r8e = function(e, t) {
  var i = (0, op.default)(t).deviations.words.full, n = (0, St.find)(i, function(r) {
    return r.word === e;
  });
  return (0, St.isUndefined)(n) ? 0 : n.syllables;
};
function s8e(a) {
  var e = [], t = a.deviations;
  return !(0, St.isUndefined)(t.words) && !(0, St.isUndefined)(t.words.fragments) && (e = (0, St.flatMap)(t.words.fragments, function(i, n) {
    return (0, St.map)(i, function(r) {
      return r.location = n, new t8e.default(r);
    });
  })), e;
}
var o8e = (0, St.memoize)(s8e), d8e = function(e, t) {
  var i = o8e((0, op.default)(t)), n = e, r = 0;
  return (0, St.forEach)(i, function(s) {
    s.occursIn(n) && (n = s.removeFrom(n), r += s.getSyllables());
  }), { word: n, syllableCount: r };
}, l8e = function(e, t) {
  var i = 0;
  return i += i8e(e, t), i += n8e(e, t), i;
}, c8e = function(e, t) {
  var i = 0, n = r8e(e, t);
  if (n !== 0)
    return n;
  var r = d8e(e, t);
  return e = r.word, i += r.syllableCount, i += l8e(e, t), i;
}, u8e = function(e, t) {
  e = e.toLocaleLowerCase();
  var i = (0, J5e.default)(e), n = (0, St.map)(i, function(r) {
    return c8e(r, t);
  });
  return (0, St.sum)(n);
};
rp.default = u8e;
Object.defineProperty(Vb, "__esModule", {
  value: !0
});
Vb.default = function(a) {
  let e, t = a.getText();
  const i = a.getLocale(), n = (0, _8e.default)(i);
  if (t === "")
    return 0;
  t = (0, m8e.default)(t);
  const r = (0, z8e.default)(t), s = (0, y8e.default)(t);
  if (r === 0 || s === 0)
    return 0;
  const o = (0, h8e.default)(t, i), d = $8e(s, r), c = o * (100 / s);
  switch (n) {
    case "nl":
      e = 206.84 - 0.77 * c - 0.93 * d;
      break;
    case "de":
      e = 180 - d - 58.5 * o / s;
      break;
    case "it":
      e = 217 - 1.3 * d - 0.6 * c;
      break;
    case "ru":
      e = 206.835 - 1.3 * s / r - 60.1 * o / s;
      break;
    case "es":
      e = 206.84 - 1.02 * s / r - 0.6 * c;
      break;
    case "fr":
      e = 207 - 1.015 * s / r - 73.6 * o / s;
      break;
    case "pt":
      e = 248.835 - 1.015 * d - 84.6 * o / s;
      break;
    case "en":
    default:
      e = 206.835 - 1.015 * d - 84.6 * (o / s);
      break;
  }
  return (0, v8e.default)(e);
};
var p8e = Kb, m8e = Cs(p8e), g8e = Gb, z8e = Cs(g8e), f8e = ut, y8e = Cs(f8e), w8e = rp, h8e = Cs(w8e), b8e = zn, v8e = Cs(b8e), k8e = Ya, _8e = Cs(k8e);
function Cs(a) {
  return a && a.__esModule ? a : { default: a };
}
const $8e = function(e, t) {
  return e / t;
};
var av = {};
Object.defineProperty(av, "__esModule", {
  value: !0
});
av.default = function(a) {
  return a.getDescription().length;
};
var lp = {};
Object.defineProperty(lp, "__esModule", {
  value: !0
});
lp.default = function(a) {
  return (0, x8e.default)(a.getText()).length;
};
var j8e = ur, x8e = A8e(j8e);
function A8e(a) {
  return a && a.__esModule ? a : { default: a };
}
var ev = {}, cp = {};
Object.defineProperty(cp, "__esModule", {
  value: !0
});
cp.default = function(a) {
  var e = "", t = a.match(P8e);
  return t !== null && (e = (0, S8e.default)(t[2]), e = e.replace(/&quot;/g, '"'), e = e.replace(/&#039;/g, "'")), e;
};
var E8e = be, S8e = q8e(E8e);
function q8e(a) {
  return a && a.__esModule ? a : { default: a };
}
var P8e = /alt=(['"])(.*?)\1/i;
Object.defineProperty(ev, "__esModule", {
  value: !0
});
ev.default = function(a, e) {
  const t = e.getResearch("morphology");
  return I8e((0, R8e.default)(a.getText()), t, a.getLocale());
};
var T8e = ur, R8e = C4(T8e), O8e = cp, M8e = C4(O8e), C8e = vt, L8e = I;
function C4(a) {
  return a && a.__esModule ? a : { default: a };
}
const I8e = function(e, t, i) {
  const n = {
    noAlt: 0,
    withAlt: 0,
    withAltKeyword: 0,
    withAltNonKeyword: 0
  };
  for (let r = 0; r < e.length; r++) {
    const s = (0, M8e.default)(e[r]);
    if (s === "") {
      n.noAlt++;
      continue;
    }
    if ((0, L8e.isEmpty)(t.keyphraseForms)) {
      n.withAlt++;
      continue;
    }
    if ((0, C8e.findTopicFormsInString)(t, s, !0, i).percentWordMatches >= 50) {
      n.withAltKeyword++;
      continue;
    }
    n.withAltNonKeyword++;
  }
  return n;
};
var tv = {};
Object.defineProperty(tv, "__esModule", {
  value: !0
});
tv.default = function(a, e) {
  return e.getResearch("morphology").keyphraseForms.length;
};
var iv = {};
Object.defineProperty(iv, "__esModule", {
  value: !0
});
iv.default = function(a, e) {
  const t = a.getDescription(), i = a.getLocale(), n = e.getResearch("morphology");
  return (0, D8e.default)(t).map((o) => B8e(o, n, i)).reduce((o, d) => o + d, 0);
};
var W8e = vn, JP = L4(W8e), F8e = Le, D8e = L4(F8e);
function L4(a) {
  return a && a.__esModule ? a : { default: a };
}
const QP = function(e, t, i) {
  return t.forEach((n) => n.matches.slice(0, i).forEach((r) => {
    e = e.replace(r, "");
  })), e;
}, B8e = function(e, t, i) {
  const n = t.keyphraseForms.map((o) => (0, JP.default)(e, o, i)), r = Math.min(...n.map((o) => o.count));
  e = QP(e, n, r);
  const s = t.synonymsForms.map((o) => {
    const d = o.map((p) => (0, JP.default)(e, p, i)), c = Math.min(...d.map((p) => p.count));
    return e = QP(e, n, c), c;
  });
  return [r, ...s].reduce((o, d) => o + d, 0);
};
var nv = {}, up = {};
Object.defineProperty(up, "__esModule", {
  value: !0
});
up.default = function(a) {
  return a.replace(/[-_]/ig, " ");
};
Object.defineProperty(nv, "__esModule", {
  value: !0
});
nv.default = function(a, e) {
  const t = e.getResearch("morphology"), i = (0, U8e.default)(a.getUrl());
  let n = (0, aT.findTopicFormsInString)(t, i, !1, a.getLocale());
  if (n.percentWordMatches === 0) {
    const r = a.getUrl();
    n = (0, aT.findTopicFormsInString)(t, r, !1, a.getLocale());
  }
  return {
    keyphraseLength: t.keyphraseForms.length,
    percentWordMatches: n.percentWordMatches
  };
};
var N8e = up, U8e = H8e(N8e), aT = vt;
function H8e(a) {
  return a && a.__esModule ? a : { default: a };
}
var rv = {}, pp = {};
Object.defineProperty(pp, "__esModule", {
  value: !0
});
pp.default = function(a) {
  var e = K8e(a);
  if (e.length > 0)
    return e;
  var t = (0, V8e.getBlocks)(a);
  return t = (0, uy.filter)(t, function(i) {
    return i.indexOf("<h") !== 0;
  }), e = (0, uy.flatMap)(t, function(i) {
    return i.split(`

`);
  }), e.length > 0 ? e : [a];
};
var uy = I, V8e = Re, K8e = function(e) {
  for (var t = [], i = /<p(?:[^>]+)?>(.*?)<\/p>/ig, n; (n = i.exec(e)) !== null; )
    t.push(n);
  return (0, uy.map)(t, function(r) {
    return r[1];
  });
}, sv = {};
Object.defineProperty(sv, "__esModule", {
  value: !0
});
sv.default = function(a) {
  return (0, Y8e.default)(a, "<div(?:[^>]+)?> *</div>");
};
var G8e = md, Y8e = Z8e(G8e);
function Z8e(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(rv, "__esModule", {
  value: !0
});
rv.default = function(a, e) {
  const t = e.getResearch("morphology"), i = a.getLocale();
  let n = (0, J8e.default)(a.getText());
  n = (0, cl.reject)(n, cl.isEmpty), n = (0, cl.reject)(n, u7e)[0] || "";
  const r = {
    foundInOneSentence: !1,
    foundInParagraph: !1,
    keyphraseOrSynonym: ""
  }, s = (0, a7e.default)(n), o = !0;
  if (!(0, cl.isEmpty)(s)) {
    s.forEach(function(c) {
      const p = (0, eT.findTopicFormsInString)(t, c, o, i);
      if (p.percentWordMatches === 100)
        return r.foundInOneSentence = !0, r.foundInParagraph = !0, r.keyphraseOrSynonym = p.keyphraseOrSynonym, r;
    });
    const d = (0, eT.findTopicFormsInString)(t, n, o, i);
    if (d.percentWordMatches === 100)
      return r.foundInParagraph = !0, r.keyphraseOrSynonym = d.keyphraseOrSynonym, r;
  }
  return r;
};
var X8e = pp, J8e = Ls(X8e), Q8e = Le, a7e = Ls(Q8e), eT = vt, e7e = ur, t7e = Ls(e7e), i7e = sv, n7e = Ls(i7e), r7e = jd, s7e = Ls(r7e), o7e = md, d7e = Ls(o7e), cl = I;
function Ls(a) {
  return a && a.__esModule ? a : { default: a };
}
function l7e(a) {
  const e = (0, s7e.default)(a);
  return e.length > 0 && e.forEach(function(t) {
    a = a.replace(t, "");
  }), a;
}
function c7e(a) {
  const e = (0, t7e.default)(a), t = (0, d7e.default)(a, "</img>");
  return e.length > 0 && (e.forEach(function(i) {
    a = a.replace(i, "");
  }), t.forEach(function(i) {
    a = a.replace(i, "");
  })), a;
}
function u7e(a) {
  if (a = l7e(a), a === "" || (a = c7e(a), a === ""))
    return !0;
  const e = (0, n7e.default)(a);
  return e.length < 1 ? !1 : (e.forEach(function(t) {
    a = a.replace(t, "");
  }), a === "");
}
var ov = {};
Object.defineProperty(ov, "__esModule", {
  value: !0
});
ov.default = function(a) {
  return a.hasTitle() ? a.getTitleWidth() : 0;
};
var dv = {};
Object.defineProperty(dv, "__esModule", {
  value: !0
});
dv.default = function(a) {
  var e = (0, y7e.default)(a.getText());
  return (0, I4.map)(e, function(t) {
    return {
      sentence: t,
      words: w7e(t)
    };
  });
};
var p7e = se, m7e = lv(p7e), g7e = rp, z7e = lv(g7e), f7e = Le, y7e = lv(f7e), I4 = I;
function lv(a) {
  return a && a.__esModule ? a : { default: a };
}
var w7e = function(e) {
  var t = (0, m7e.default)(e), i = [];
  return (0, I4.forEach)(t, function(n, r) {
    i.push({
      word: n,
      wordIndex: r,
      complexity: (0, z7e.default)(n)
    });
  }), i;
}, cv = {};
Object.defineProperty(cv, "__esModule", {
  value: !0
});
cv.default = function(a) {
  var e = a.getText(), t = (0, k7e.default)(e), i = [];
  return t.map(function(n) {
    i.push({
      wordCount: (0, b7e.default)(n),
      text: n
    });
  }), (0, _7e.filter)(i, function(n) {
    return n.wordCount > 0;
  });
};
var h7e = ut, b7e = W4(h7e), v7e = pp, k7e = W4(v7e), _7e = I;
function W4(a) {
  return a && a.__esModule ? a : { default: a };
}
var uv = {}, mp = {};
Object.defineProperty(mp, "__esModule", {
  value: !0
});
mp.default = function(a) {
  var e = [];
  return (0, j7e.forEach)(a, function(t) {
    var i = (0, x7e.stripFullTags)(t), n = (0, tT.default)(i);
    n <= 0 || e.push({
      sentence: t,
      sentenceLength: (0, tT.default)(t)
    });
  }), e;
};
var $7e = ut, tT = A7e($7e), j7e = I, x7e = re;
function A7e(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(uv, "__esModule", {
  value: !0
});
uv.default = function(a) {
  var e = (0, S7e.default)(a.getText());
  return (0, P7e.default)(e);
};
var E7e = Le, S7e = F4(E7e), q7e = mp, P7e = F4(q7e);
function F4(a) {
  return a && a.__esModule ? a : { default: a };
}
var pv = {};
Object.defineProperty(pv, "__esModule", {
  value: !0
});
pv.default = function(a) {
  var e = (0, R7e.default)(a.getDescription());
  return (0, M7e.default)(e);
};
var T7e = Le, R7e = D4(T7e), O7e = mp, M7e = D4(O7e);
function D4(a) {
  return a && a.__esModule ? a : { default: a };
}
var mv = {}, gv = {};
Object.defineProperty(gv, "__esModule", {
  value: !0
});
gv.default = function(a) {
  a = a.replace(/\|/ig, ""), a = a.replace(/<h([1-6])(?:[^>]+)?>(.*?)<\/h\1>/ig, "|");
  const e = a.split("|");
  return (0, C7e.isEmpty)(e[0]) && e.shift(), e;
};
var C7e = I;
Object.defineProperty(mv, "__esModule", {
  value: !0
});
mv.default = function(a) {
  const e = a.getText(), t = (0, I7e.default)(e), i = [];
  return (0, D7e.forEach)(t, function(n) {
    i.push({
      text: n,
      wordCount: (0, F7e.default)(n)
    });
  }), i;
};
var L7e = gv, I7e = B4(L7e), W7e = ut, F7e = B4(W7e), D7e = I;
function B4(a) {
  return a && a.__esModule ? a : { default: a };
}
var zv = {}, fv = {};
Object.defineProperty(fv, "__esModule", {
  value: !0
});
fv.default = function(a) {
  a = a.map(function(t) {
    return H7e(t);
  });
  const e = "(" + a.join(")|(") + ")";
  return new RegExp(e, "ig");
};
var B7e = gr, N7e = U7e(B7e);
function U7e(a) {
  return a && a.__esModule ? a : { default: a };
}
const H7e = function(e) {
  return e = e.map(function(t) {
    return (0, N7e.default)(t);
  }), e.join("(.*?)");
};
var yv = {}, wv = {};
Object.defineProperty(wv, "__esModule", {
  value: !0
});
wv.default = function() {
  return [["both", "and"], ["if", "then"], ["not only", "but also"], ["neither", "nor"], ["either", "or"], ["not", "but"], ["whether", "or"], ["no sooner", "than"]];
};
var hv = {};
Object.defineProperty(hv, "__esModule", {
  value: !0
});
hv.default = function() {
  return [["anstatt", "dass"], ["bald", "bald"], ["dadurch", "dass"], ["dessen ungeachtet", "dass"], ["entweder", "oder"], ["einerseits", "andererseits"], ["erst", "wenn"], ["je", "desto"], ["je", "umso"], ["umso", "umso"], ["mal", "mal"], ["nicht nur", "sondern auch"], ["ob", "oder"], ["ohne", "dass"], ["so", "dass"], ["sowohl", "als auch"], ["sowohl", "wie auch"], ["teils", "teils"], ["unbeschadet dessen", "dass"], ["weder", "noch"], ["wenn", "auch"], ["wenn", "schon"], ["nicht weil", "sondern"]];
};
var bv = {};
Object.defineProperty(bv, "__esModule", {
  value: !0
});
bv.default = function() {
  return [["à première vue", "mais à bien considérer les choses"], ["à première vue", "mais toute réflexion faite"], ["aussi", "que"], ["autant de", "que"], ["certes", "mais"], ["d'un côté", "de l'autre côté"], ["d'un côté", "de l'autre"], ["d'un côté", "d'un autre côté"], ["d'une part", "d'autre part"], ["d'une parte", "de l'autre parte"], ["moins de", "que"], ["non seulement", "mais aussi"], ["non seulement", "mais en outre"], ["non seulement", "mais encore"], ["plus de", "que"], ["quelque", "que"], ["si", "que"], ["soit", "soit"], ["tantôt", "tantôt"], ["tout d'abord", "ensuite"], ["tout", "que"]];
};
var vv = {};
Object.defineProperty(vv, "__esModule", {
  value: !0
});
vv.default = function() {
  return [["de un lado", "de otra parte"], ["de un lado", "de otro"], ["no", "sino que"], ["no", "sino"], ["por un lado", "por otro lado"], ["por una parte", "por otra parte"], ["por una parte", "por otra"], ["tanto", "como"], ["bien", "bien"]];
};
var kv = {};
Object.defineProperty(kv, "__esModule", {
  value: !0
});
kv.default = function() {
  return [["aan de ene kant", "aan de andere kant"], ["enerzijds", "anderzijds"], ["natuurlijk", "maar"], ["niet alleen", "maar ook"], ["noch", "noch"], ["zowel", "als"]];
};
var _v = {};
Object.defineProperty(_v, "__esModule", {
  value: !0
});
_v.default = function() {
  return [["né", "né"], ["non", "ma"], ["non prima", "che"], ["non prima", "di"], ["non solo", "ma anche"], ["o", "o"], ["se", "allora"], ["se", "o"], ["sia", "che"]];
};
var $v = {};
Object.defineProperty($v, "__esModule", {
  value: !0
});
$v.default = function() {
  return [["não apenas", "como também"], ["não só", "bem como"], ["não só", "como também"], ["não só", "mas também"], ["ora", "ora"], ["ou", "ou"], ["quer", "quer"]];
};
var jv = {};
Object.defineProperty(jv, "__esModule", {
  value: !0
});
jv.default = function() {
  return [["будь то", "или"], ["возможно", "а может быть"], ["возможно", "возможно"], ["достаточно", "чтобы"], ["едва", "как"], ["ежели", "то"], ["если говорить о", "то"], ["если и не", "то"], ["если не", "то"], ["если", "то"], ["мало того что", "еще и"], ["мало того, что", "еще и"], ["не сказать чтобы", "но"], ["не сказать, чтобы", "но"], ["не столько", "сколько"], ["не то чтобы", "но"], ["не только не", "но и"], ["стоило", "как"], ["так как", "то"], ["только", "как"], ["хоть бы", "а то"], ["хоть", "хоть"], ["хотя", "но"], ["чем", "лучше бы"], ["чем", "тем"], ["что касается", "то"]];
};
var xv = {};
Object.defineProperty(xv, "__esModule", {
  value: !0
});
xv.default = function() {
  return {
    singleWords: iT,
    multipleWords: nT,
    allWords: iT.concat(nT)
  };
};
const iT = ["abans", "així", "alhora", "aleshores", "altrament", "anteriorment", "breument", "bàsicament", "contràriament", "després", "doncs", "efectivament", "endemés", "especialment", "evidentment", "finalment", "fins a", "fins que", "generalment", "igualment", "malgrat", "mentre", "mentrestant", "parallelament", "paral·lelament", "però", "perquè", "quan", "primerament", "resumidament", "resumint", "segurament", "segons això", "sens dubte", "sinó", "sobretot", "també", "tanmateix"], nT = ["a banda d'això", "a continuació", "a diferència de", "a fi de", "a fi que", "a força de", "a manera de resum", "a més", "a partir d'aquí", "a partir d'ara", "a tall d'exemple", "a tall de recapitulació", "a tall de resum", "al capdavall", "al contrari", "al mateix temps", "amb relació a", "tot plegat", "ara bé", "atès que", "com a conseqüència", "com a exemple", "com a resultat", "com a resum", "com que", "comptat i debatut", "considerant que", "convé destacar", "convé recalcar", "convé ressaltar que", "d'altra banda", "d’una banda", "d’una forma breu", "de la mateixa manera", "de manera parallela", "de manera paral·lela", "de manera que", "de tota manera", "degut a", "deixant de banda", "dit d'una altra manera", "donat que", "en a resum", "en lloc de", "en altres paraules", "en aquest sentit", "en canvi", "en conclusió", "en conjunt", "en conseqüència", "encara que", "en darrer lloc", "en darrer terme", "en definitiva", "en efecte", "en general", "en particular", "en pocs mots", "en poques paraules", "en primer lloc", "en relació amb", "en resum", "en segon lloc", "en síntesi", "en suma", "en tercer lloc", "en últim terme", "és a dir", "és més", "és per això que", "fins i tot", "gràcies a", "gràcies de", "igual com", "igual que", "ja que", "llevat que", "més aviat", "més tard", "més endavant", "no obstant", "o sia", "o sigui", "òbviament", "pel fet que", "pel general", "pel que", "per acabar", "per això", "per altra banda", "per aquest motiu", "per causa de", "per causa que", "per cert", "per començar", "per concloure", "per concretar", "per contra", "per exemple", "per illustrar", "per il·lustrar", "per l'altra part", "per l'altre cantó", "per la qual cosa", "per mitjà de", "per posar un exemple", "per raó de", "per raó que", "per tal de", "per tal que", "per tant", "per últim", "per un cantó", "per un costat", "per una altra banda", "per una part", "quant a", "recapitulant", "respecte de", "s'ha de tenir en compte que", "sempre que", "tal com s’ha dit", "tan bon punt", "tan aviat com", "tenint en compte que", "tot i", "tot seguit", "val a dir", "val la pena dir que", "vist que"];
var Av = {};
Object.defineProperty(Av, "__esModule", {
  value: !0
});
Av.default = function() {
  return [["ara", "ara"], ["ni", "ni"]];
};
var Ev = {};
Object.defineProperty(Ev, "__esModule", {
  value: !0
});
Ev.default = function() {
  return [["albo", "albo"], ["ani", "ani"], ["czy", "czy"], ["im", "tym"], ["tak", "jak"]];
};
var V7e = function() {
  return [["antingen", "eller"], ["icke blott", "utan afven"], ["ju", "desto"]];
}, Sv = {};
Object.defineProperty(Sv, "__esModule", {
  value: !0
});
Sv.default = function() {
  return [["nemcsak", "hanem", "is"], ["ahogy", "akkor"], ["ahogy", "azonnal"], ["ahogy", "azután"], ["ahogy", "máris"], ["ahogy", "nyomban"], ["ahogy", "tüstént"], ["akkor", "amikor"], ["akkor", "ha"], ["akkor", "hogy"], ["akkor", "hogyha"], ["akkor", "mikor"], ["akkorra", "amikorra"], ["akkorra", "mikorra"], ["akkorra", "mire"], ["akkortól", "amikor"], ["akkortól", "mikor"], ["alighogy", "máris"], ["alighogy", "nyomban"], ["alighogy", "tüstént"], ["addig", "ameddig"], ["ameddig", "addig"], ["abba", "hogy"], ["abban", "hogy"], ["abból", "hogy"], ["addig", "amíg"], ["addig", "hogy"], ["addig", "míg"], ["afelé", "hogy"], ["ahelyett", "hogy"], ["ahhoz", "hogy"], ["akként", "hogy"], ["akkorra", "hogy"], ["amiatt", "hogy"], ["amellett", "hogy"], ["anélkül", "hogy"], ["annyi", "hogy"], ["annyi", "mint"], ["annyira", "hogy"], ["annyira", "mint"], ["arra", "hogy"], ["arról", "hogy"], ["attól fogva", "hogy"], ["attól", "hogy"], ["avégett", "hogy"], ["avégre", "hogy"], ["az ellen", "hogy"], ["az iránt", "hogy"], ["azelőtt", "hogy"], ["azért", "hogy"], ["azon", "hogy"], ["azonkívül", "hogy"], ["azóta", "hogy"], ["azután", "hogy"], ["azzal", "hogy"], ["hol", "hol"], ["igaz", "hogy"], ["mind", "mind"], ["nem úgy", "mint"], ["oly módon", "hogy"], ["inkább", "semhogy"], ["úgy", "hogy"], ["úgy", "mint"], ["vagy", "vagy"], ["se", "se"], ["sem", "sem"], ["is", "is"], ["akár", "akár"], ["is", "meg"], ["nem", "hanem"], ["egyrészt", "másrészt"], ["minél", "annál"], ["amíg", "addig"], ["amíg", "addigra"], ["amikor", "akkor"], ["akkor", "amikor"], ["amikor", "aközben"], ["amikor", "azalatt"], ["addigra", "amikorra"], ["amikorra", "addigra"], ["amikorra", "akkorra"], ["amint", "akkor"], ["amint", "azonnal"], ["amint", "máris"], ["amint", "nyomban"], ["amint", "tüstént"], ["amióta", "attól kezdve"], ["azóta", "amióta"], ["amióta", "azóta"], ["amire", "addig"], ["amire", "addigra"], ["azóta", "hogy"], ["ha", "akkor"], ["hogyha", "akkor"], ["is", "is"], ["azalatt", "mialatt"], ["mialatt", "azalatt"], ["mielőtt", "azelőtt"], ["azelőtt", "mielőtt"], ["mihelyt", "azonnal"], ["mihelyt", "máris"], ["mihelyt", "nyomban"], ["mihelyt", "tüstént"], ["mikor", "akkor"], ["mikor", "aközben"], ["mikor", "azalatt"], ["mikor", "azután"], ["mikorra", "addigra"], ["akkorra", "mikorra"], ["mikorra", "akkorra"], ["miközben", "azalatt"], ["mióta", "attól kezdve"], ["mire", "addigra"], ["miután", "azután"], ["attól kezdve", "mióta"], ["mióta", "azóta"], ["azóta", "mióta"], ["mire", "addig"], ["addigra", "mire"], ["azután", "miután"], ["nemcsak", "hanem"], ["sem", "sem"], ["vagy", "vagy"]];
};
var qv = {};
Object.defineProperty(qv, "__esModule", {
  value: !0
});
qv.default = function() {
  return {
    singleWords: rT,
    multipleWords: sT,
    allWords: rT.concat(sT)
  };
};
var rT = ["adakalanya", "agak", "agar", "akhirnya", "alhasil", "andaikan", "bahkan", "bahwasannya", "berikut", "betapapun", "biarpun", "biasanya", "contohnya", "dahulunya", "diantaranya", "dikarenakan", "disebabkan", "dulunya", "faktanya", "hasilnya", "intinya", "jadi", "jua", "juga", "kadang-kadang", "kapanpun", "karena", "karenanya", "kedua", "kelak", "kemudian", "kesimpulannya", "khususnya", "langsung", "lantaran", "maka", "makanya", "masih", "memang", "meski", "meskipun", "misalnya", "mulanya", "nantinya", "nyatanya", "pendeknya", "pertama", "ringkasnya", "rupanya", "seakan-akan", "sebaliknya", "sebelum", "sebetulnya", "sedangkan", "segera", "sehingga", "sekali-sekali", "sekalipun", "sekiranya", "selagi", "selain", "selama", "selanjutnya", "semasa", "semasih", "semenjak", "sementara", "semula", "sepanjang", "serasa", "seraya", "seringkali", "sesungguhnya", "setelahnya", "seterusnya", "setidak-tidaknya", "setidaknya", "sewaktu-waktu", "sewaktu", "tadinya", "tentunya", "terakhir", "terdahulu", "terlebih", "ternyata", "terpenting", "terutama", "terutamanya", "tetapi", "umpamanya", "umumnya", "utamanya", "walau", "walaupun", "yaitu", "yakni", "akibatnya", "hingga", "kadang", "kendatipun", "ketiga", "lainnya", "manakala", "namun", "pastinya", "pertama-tama", "sampai-sampai", "sebaliknya", "sebelumnya", "sebetulnya", "sesekali"], sT = ["agar supaya", "akan tetapi", "apa lagi", "asal saja", "bagaimanapun juga", "bahkan jika", "bahkan lebih", "begitu juga", "berbeda dari", "biarpun begitu", "biarpun demikian", "bilamana saja", "cepat atau lambat", "dalam hal ini", "dalam jangka panjang", "dalam kasus ini", "dalam kasus lain", "dalam kedua kasus", "dalam kenyataannya", "dalam pandangan", "dalam situasi ini", "dalam situasi seperti itu", "dan lagi", "dari awal", "dari pada", "dari waktu ke waktu", "demikian juga", "demikian pula", "dengan serentak", "dengan cara yang sama", "dengan jelas", "dengan kata lain", "dengan ketentuan", "dengan nyata", "dengan panjang lebar", "dengan pemikiran ini", "dengan syarat bahwa", "dengan terang", "di pihak lain", "di sisi lain", "dibandingkan dengan", "disebabkan oleh", "ditambah dengan", "hanya jika", "harus diingat", "hasil dari", "hingga kini", "kalau tidak", "kalau-kalau", "kali ini", "kapan saja", "karena alasan itulah", "karena alasan tersebut", "kecuali kalau", "kendatipun begitu", "kendatipun demikian", "lebih jauh", "lebih lanjut", "maka dari itu", "meskipun demikian", "oleh karena itu", "oleh karenanya", "oleh sebab itu", "pada akhirnya", "pada awalnya", "pada dasarnya", "pada intinya", "pada kenyataannya", "pada kesempatan ini", "pada mulanya", "pada saat ini", "pada saat", "pada situasi ini", "pada umumnya", "pada waktu yang sama", "pada waktunya", "paling tidak", "pendek kata", "penting untuk disadari", "poin penting lainnya", "saat ini", "sama halnya", "sama pentingnya", "sama sekali", "sampai sekarang", "sebab itu", "sebagai akibatnya", "sebagai contoh", "sebagai gambaran", "sebagai gantinya", "sebagai hasilnya", "sebagai tambahan", "sebelum itu", "secara bersamaan", "secara eksplisit", "secara keseluruhan", "secara keseluruhan", "secara khusus", "secara menyeluruh", "secara signifikan", "secara singkat", "secara umum", "sejalan dengan ini", "sejalan dengan itu", "sejauh ini", "sekali lagi", "sekalipun begitu", "sekalipun demikian", "sementara itu", "seperti yang bisa dilihat", "seperti yang sudah saya katakan", "seperti yang sudah saya tunjukkan", "sesudah itu", "setelah ini", "setelah itu", "tak pelak lagi", "tanpa menunda-nunda lagi", "tentu saja", "terutama sekali", "tidak perlu dipertanyakan lagi", "tidak sama", "tidak seperti", "untuk alasan ini", "untuk alasan yang sama", "untuk memperjelas", "untuk menekankan", "untuk menyimpulkan", "untuk satu hal", "untuk sebagian besar", "untuk selanjutnya", "untuk tujuan ini", "walaupun demikian", "yang lain", "yang terakhir", "yang terpenting", "begitu pula", "berbeda dengan", "betapapun juga", "dalam hal itu", "di samping itu", "hal pertama yang perlu diingat", "kadang kala", "karena itu", "lagi pula", "lambat laun", "mengingat bahwa", "meskipun begitu", "pada umumnya", "pada waktu", "saat ini juga", "sampai saat ini", "sebagian besar", "secara terperinci", "selain itu", "seperti yang sudah dijelaskan", "seperti yang tertera di", "tak seperti", "tanpa memperhatikan", "tentu saja", "untuk memastikan", "untuk menggambarkan", "walaupun begitu"], Pv = {};
Object.defineProperty(Pv, "__esModule", {
  value: !0
});
Pv.default = function() {
  return [["baik", "maupun"], ["bukan", "melainkan"], ["bukan", "tetapi"], ["bukannya", "melainkan"], ["bukannya", "tetapi"], ["tidak", "melainkan"], ["tidak", "tetapi"], ["tidak hanya", "tetapi juga"], ["begitu", "sehingga"], ["begitu", "sampai"], ["demikian", "sehingga"], ["demikian", "sampai"], ["sedemikian", "sehingga"], ["sedemikian", "sampai"], ["meskipun", "namun"], ["biarpun", "namun"], ["bukan hanya", "melainkan juga"], ["sedemikian rupa", "sehingga"], ["sebaiknya", "daripada"], ["entah", "entah"], ["kalau", "maka"], ["apabila", "maka"], ["apa", "atau"], ["jangankan", "pun"], ["saja", "apalagi"], ["apakah", "atau"]];
};
var Tv = {};
Object.defineProperty(Tv, "__esModule", {
  value: !0
});
Tv.default = function() {
  return {
    singleWords: oT,
    multipleWords: dT,
    allWords: oT.concat(dT)
  };
};
const oT = ["לכן", "משום‎", "בגלל", "מפני", "אחרי", "לפני", "חוץ", "בזכות", "כתוצאה", "הודות", "בשביל", "למרות‎", "בשל‎", "ו", "או", "אבל", "אולם", "אך", "אם", "גם", "רק", "אכן", "אלא", "עדיין", "כאשר", "אז", "לכן", "כבר", "לאחר", "אפילו", "אף", "כך", "כדי", "על", "עד", "בשנת", "כמו", "שני", "באופן", "במהלך", "במקום", "וכן", "בעיקר", "מאז", " בינתיים", "במקום", "תחת", "מתוך", "מול", "כגון", "באמצעות", "מכן", "במשך", "ואף", "ועל", "לעתים", "בנוסף", "בעקבות", "לפי", "בקרב", "כי", "ראשית", "שנית", "תחילה", "לבסוף", "הבא", "ברם", "ואילו", "להפך", "כנגד", "מנגד", "אמנם", "אדרבא", "לחילופין", "בייחוד", "במיוחד", "ודאי", "ואפילו", "לו", "אילו", "לולא", "אלמלא", "אילולא", "מאחורי", "בקרבת", "כאן", "שם", "כן", "למעט", "בלבד", "מלבד", "שוב", "כלומר", "דהיינו", "לאמור", "כאמור", "כידוע", "כש", "אחר-כך", "כעבור", "לאחרונה", "בטרם", "עכשיו", "עתה", "מלכתחילה", "למען", "פן", "לבל", "שמא", "עקב", "לרגל", "מפאת", "בגין", "בהתאם", "לפיכך", "למשל", "לדוגמה", "כדוגמת", "לסיכום", "בהתחשב", "בקיצור", "בקצרה", "חרף"], dT = ["כתוצאה מכך", "כתוצאה מ", "בעקבות ה", "בעקבות זאת", "לעומת זאת", "אלא אם כן", "בזמן ש", "מתי ש", "אף על פי ש", "אף על פי", "חוץ מ", "אחרי ש", "לפני ש", "בעוד ש", "בגלל ה", "הודות ל", "בניגוד ל", "מפני ש", "אלא ש", "קודם כל", "והחשוב ביותר", "לפני כן", "לאחר מכן", "אחר כך", "שלב ראשון", "בניגוד לכך", "ראוי לציין", "יש להדגיש", "ללא ספק", "קל וחומר", "אין ספק ש", "לא כל שכן", "בתנאי ש", "בדומה ל", "כשם ש", "כפי ש", "כך גם", "יחסית ל", "בהשוואה ל", "לשם כך", "במקביל ל", "במידה ש", "במקום ש", "על יד", "בסמוך ל", "במרחק מה", "אל אשר", "מעבר ל", "כמו כן", "יתר על כן", "זאת ועוד", "נוסף על כך", "פרט ל", "למעלה מכך", "פנים נוספות לעניין", "יתרה מכך", "אך ורק", "מעבר לכך", "זאת אומרת", "במילים אחרות", "רוצה לומר", "הווה אומר", "משתמע מזאת", "הוא אשר", "ללמד ש", "פירושו של דבר", "לשון אחרת", "בהקשר זה", "דרך אגב", "כדי ש", "כנזכר לעיל", "בקשר לכך", "במסגרת זו", "עד ש", "בשעה ש", "כל זמן ש", "לפי שעה", "בזמן האחרון", "עד כה", "בו בזמן", "כל אימת ש", "על מנת", "לתכלית זו", "במטרה ל", "מחמת ה", "הואיל ו", "מאחר ש", "היות ש", "כיוון ש", "יען כי", "באופן ש", "בצורה ש", "כמו ש", "אם כן", "אפוא", "על כן", "משום כך", "עקב כך", "בשל כך", "אי לכך", "נובע מכך", "הודות לכך", "כמו למשל", "סיכומו של דבר", "מכל האמור ניתן לומר", "בסך הכול", "בכל מקרה", "בסיכום כולל", "לטווח ארוך", "על כל פנים", "אף על פי כן", "על אף ש", "על אף זאת", "אף ש", "למרות זאת", "בכל אופן", "עם זאת", "אם כי", "גם אם"];
var Rv = {};
Object.defineProperty(Rv, "__esModule", {
  value: !0
});
Rv.default = function() {
  return [["או", "או"], ["אין", "אלא"], ["לא", "אלא"], ["מצד אחד", "מצד אחר"], ["מחד גיסא", "מאידך גיסא"], ["ראשית", "שנית"], ["תחילה", "לבסוף"], ["משום ש", "מפני ש"], ["לכאורה", "אך"]];
};
var Ov = {};
Object.defineProperty(Ov, "__esModule", {
  value: !0
});
Ov.default = function() {
  return {
    singleWords: lT,
    multipleWords: cT,
    allWords: lT.concat(cT)
  };
};
const lT = ["كذلك", "ولكن", "ولذلك", "حاليا", "أخيرا", "بالطبع", "ثم", "بما", "كما", "لما", "إنما", "ليتما", "إما", "أينما", "حيثما", "كيفما", "أيما", "أيّما", "بينما", "ممّا", "إلاّ", "ألّا", "لئلّا", "حبّذا", "سيّما", "لكن", "بالتالي", "هكذا", "أو", "أم", "لذلك", "مثلا", "تحديدا", "عموما", "لاسيما", "خصوصا", "بالأخص", "خاصة", "بالمثل", "لأن", "بسبب", "إذا", "عندما", "حين", "متى", "قبل", "بعد", "منذ", "أيضا", "ريثما", "بين"], cT = ["إلا إذا", "إلا أن", "إلى آخره", "إلى الأبد", "إلى أن", "آن لك أن", "آن له أن", "آن لعلي", "بعد ذلك", "بما أن", "بما فيه", "حتى لا", "حتى لو", "عليك أن", "علينا أن", "عليه أن", "عليكم أن", "على محمد أن", "فيما بعد", "لا أحد", "لا بأس أن", "لا بد من", "لا بد من أن", "لا سيما", "لا شيء", "لا غير", "لا هذا ولا ذاك", "له أن", "لها أن", "لك أن", "لكم أن", "ما لم", "مع هذا ، مع ذلك", "من أجل أن", "من أجلك", "من أجلها", "من أجل سارة", "من أجل اليمن", "من دون ، بدون", "منذ ذلك الحين", "بالإضافة إلى ذلك", "في نهاية المطاف", "في الوقت الحالي", "علاوة على ذلك", "أنا أيضا", "بدلا من ذلك", "في الواقع", "بناء على ذلك", "ومع ذلك", "في الحقيقة", "من ناحية أخرى", "لا يزال", "وفي الوقت نفسه", "زيادة على ذلك", "زيادة على", "علاوة على", "ما عدا", "مع ذلك", "غير أن", "من جهة أخرى", "على عكس ذلك", "نتيجة لذلك", "من ثم", "على سبيل المثال", "على وجه الخصوص", "على وجه التحديد", "بصفة عامة", "قبل كل شيء", "في النهاية", "بصورة شاملة", "رغم أن", "مع ان", "على الرغم من", "من هنا", " لهذا السبب", "في حالة", "في أقرب وقت", "على أي حال", "في نفس الوقت", "من بين"];
var Mv = {};
Object.defineProperty(Mv, "__esModule", {
  value: !0
});
Mv.default = function() {
  return [["لا", "ولا"], ["إما", "أو"], ["ربما", "ربما"], ["حينئذ", "عندئذ"], ["إما", "وإما"], ["كل من", "و"]];
};
const uT = ["fakat", "halbuki", "hatta", "üstelik", "ancak", "oysa", "sonuçta", "yalnız", "çünkü", "oysaki", "kısacası", "özetle", "böylelikle", "ama", "lakin", "ayrıca", "açıkcası", "yani", "sonucunda", "böylece", "kısaca", "veya", "veyahut", "zira", "öyleyse", "sonrasında", "ardından", "vakıa", "gerçi", "karşın", "tümüyle", "bütünüyle", "tamamıyla", "genelde", "diğer", "başka", "önce", "öncesinde", "sonra", "yanısıra", "ama", "muhakkak", "kesinlikle", "şüphesiz", "elbet", "elbette", "kuşkusuz", "başlıca", "bilakis", "aksine", "tersine", "devamında", "özellikle", "bilhassa", "nihayet", "nihayetinde", "neticede", "ayrıyeten", "dahası", "çoğunlukla", "genellikle", "genelde", "dolayısıyla", "gelgelelim", "aslında", "doğrusu", "mamafih", "binaenaleyh", "evvelce", "önceden", "şöylelikle", "örneğin", "mesela", "nitekim", "mademki", "şimdi", "halihazırda", "i̇laveten", "aynen", "nazaran", "nedeniyle", "yüzünden", "umumiyetle", "ekseriye", "amacıyla", "gayesiyle", "velhasıl", "ezcümle", "özetlersek", "etraflıca", "tafsilatlı", "genişçe", "bilfiil", "filhakika", "evvela", "i̇lkin", "en önce", "birincisi", "i̇kincisi", "üçüncüsü", "sonuncusu", "tıpkı", "topyekun", "hem", "ne", "kah", "ister", "ya", "gerek", "ha"], pT = ["o halde", "bundan böyle", "demek ki", "ne yazık ki", "görüldüğü gibi", "i̇lk olarak", "son olarak", "ne var ki", "buna rağmen", "yine de", "başka bir deyişle", "açıklamak gerekirse", "özetlemek gerekirse", "kısaca söylemek gerekirse", "görüldüğü gibi", "ve bunun gibi", "halbu ki", "buna göre", "ona göre", "ek olarak", "her ne kadar", "velev ki", "olmakla beraber", "bile olsa", "i̇le beaber", "i̇le birlikte", "her şeye rağmen", "bütün yanlarıyla", "bütün yönleriyle", "ele alacak olursak", "baştan sona", "diğer bir", "başka bir", "daha önce", "daha sonra", "bundan başka", "bunun yanında", "bunun yanı sıra", "bununla birlikte", "buna ilaveten", "bunun dışında", "elbette ki", "muhakkak ki", "belli başlı", "karşılaştırmak gerekirse", "karşılaştırmalı olarak", "aynı zamanda", "sonuç olarak", "diğer taraftan", "diğer bir taraftan", "buna karşılık", "tam tersine", "buna bağlı olarak", "buna parelel olarak", "i̇kinci olarak", "üçüncü olarak", "aynı derecede", "eşit olarak", "başta olmak üzere", "en sonunda", "açık bir şekilde", "ana hatlarıyla", "genel itibariyle", "genel anlamda", "genel olarak", "bunun için", "bu nedenle", "bundan dolayı", "bu sebeple", "dolayısı ile", "her halükarda", "aynı biçimde", "aynı şekilde", "bu esnada", "bu arada", "hal böyleyken", "bağlı kalmaksızın", "açık olarak", "belli ki", "ayrıntılı olarak", "bundan önce", "sözün kısası", "az ve öz bir şekilde", "tüm ayrıntılarıyla", "bu şekilde", "o yüzden", "bu sayede", "buradan hareketle", "buna mukabil", "en önemlisi", "her şeyden önce", "esas olarak", "hepsinden önce", "hepsinden öte", "hepsinden ötesi", "her şeyin üzerinde", "her şeyin ötesinde", "hepsinden önemlisi", "asıl önemlisi", "her şeyi hesaba katarak", "bütün olarak", "her şey göz önüne alındığında", "pararel olarak", "diğer bir nokta", "diğer açıdan", "öyle ya da böyle", "doğrusunu söylemek gerekirse", "i̇şin doğrusu", "aslına bakılırsa", "gerçek şu ki", "hattı zatında", "aslına bakıldığında", "aslına bakarsak", "i̇şin aslı", "sonuç itibariyle", "örnek olarak", "örneleyecek olursak", "görülebileceği gibi", "görülebileceği üzere", "görüldüğü üzere", "söylendiği gibi", "söylenildiği gibi", "söylediği gibi", "söylediğim gibi", "olduğu kadar", "önceden belirtildiği gibi", "önceden söylendiği gibi", "yukarıda gösterildiği gibi", "eninde sonunda", "önünde sonunda", "şu anda", "bu sırada", "bununla beraber", "bu noktada", "bunun ışığında", "bunların ışığında", "aşikar olarak", "aynı sebeple", "bir de", "doğru da olsa", "doğru bile olsa", "öyle bile olsa", "öyle de olsa", "i̇le ilgili", "olsa bile", "eğer ki", "olsa dahi", "ondan dolayı", "o sebepten dolayı", "bu yüzden", "onun için", "esas itibarıyla", "aynı sebepten dolayı", "bu amaçla", "zaman zaman", "arada sırada", "dönem dönem", "arada bir", "diyelim ki", "farz edelim ki", "farz edersek", "kısaca söylecek olursak", "tek kelimeyle", "birkaç kelimeyle", "sözün özü", "en nihayetinde", "uzun uzadıya", "her iki durumda da", "özü itibariyle", "amacı ile", "olması için", "başka bir ifadeyle", "diğer bir deyişle", "i̇lk önce", "bir yandan", "bir taraftan", "hatırlatmak gerekirse", "bu bağlamda", "gel gelelim", "her şey hesaba katılırsa", "bütüne bakıldığında", "belirtildiği gibi", "bir başka ifadeyle", "lafı toparlamak gerekirse", "bu düşünceyle", "bu maksatla", "bu doğrultuda", "bu niyetle", "hem de", "ne de", "ya da", "gerekse de"];
var K7e = function() {
  return {
    singleWords: uT,
    multipleWords: pT,
    allWords: uT.concat(pT)
  };
}, Cv = {};
Object.defineProperty(Cv, "__esModule", {
  value: !0
});
Cv.default = function() {
  return [["hem", "hem de"], ["ne", "ne de"], ["ya", "ya da"], ["gerek", "gerekse de"]];
};
Object.defineProperty(yv, "__esModule", {
  value: !0
});
yv.default = function(a) {
  switch ((0, X9e.default)(a)) {
    case "de":
      return {
        transitionWords: oHe,
        twoPartTransitionWords: e9e.default
      };
    case "es":
      return {
        transitionWords: lHe,
        twoPartTransitionWords: l9e.default
      };
    case "fr":
      return {
        transitionWords: dHe,
        twoPartTransitionWords: r9e.default
      };
    case "nl":
      return {
        transitionWords: cHe,
        twoPartTransitionWords: m9e.default
      };
    case "it":
      return {
        transitionWords: uHe,
        twoPartTransitionWords: y9e.default
      };
    case "pt":
      return {
        transitionWords: pHe,
        twoPartTransitionWords: v9e.default
      };
    case "ru":
      return {
        transitionWords: mHe,
        twoPartTransitionWords: j9e.default
      };
    case "ca":
      return {
        transitionWords: gHe,
        twoPartTransitionWords: S9e.default
      };
    case "pl":
      return {
        transitionWords: zHe,
        twoPartTransitionWords: R9e.default
      };
    case "sv":
      return {
        transitionWords: fHe,
        twoPartTransitionWords: L9e.default
      };
    case "hu":
      return {
        transitionWords: yHe,
        twoPartTransitionWords: D9e.default
      };
    case "id":
      return {
        transitionWords: wHe,
        twoPartTransitionWords: H9e.default
      };
    case "he":
      return {
        transitionWords: hHe,
        twoPartTransitionWords: Y9e.default
      };
    case "ar":
      return {
        transitionWords: bHe,
        twoPartTransitionWords: eHe.default
      };
    case "tr":
      return {
        transitionWords: vHe,
        twoPartTransitionWords: rHe.default
      };
    default:
    case "en":
      return {
        transitionWords: sHe,
        twoPartTransitionWords: X7e.default
      };
  }
};
var G7e = Zc, Y7e = _a(G7e), Z7e = wv, X7e = _a(Z7e), J7e = Gc, Q7e = _a(J7e), a9e = hv, e9e = _a(a9e), t9e = eu, i9e = _a(t9e), n9e = bv, r9e = _a(n9e), s9e = Qc, o9e = _a(s9e), d9e = vv, l9e = _a(d9e), c9e = Jc, u9e = _a(c9e), p9e = kv, m9e = _a(p9e), g9e = au, z9e = _a(g9e), f9e = _v, y9e = _a(f9e), w9e = iu, h9e = _a(w9e), b9e = $v, v9e = _a(b9e), k9e = nu, _9e = _a(k9e), $9e = jv, j9e = _a($9e), x9e = xv, A9e = _a(x9e), E9e = Av, S9e = _a(E9e), q9e = ru, P9e = _a(q9e), T9e = Ev, R9e = _a(T9e), O9e = NI, M9e = _a(O9e), C9e = V7e, L9e = _a(C9e), I9e = UI, W9e = _a(I9e), F9e = Sv, D9e = _a(F9e), B9e = qv, N9e = _a(B9e), U9e = Pv, H9e = _a(U9e), V9e = Tv, K9e = _a(V9e), G9e = Rv, Y9e = _a(G9e), Z9e = Ya, X9e = _a(Z9e), J9e = Ov, Q9e = _a(J9e), aHe = Mv, eHe = _a(aHe), tHe = K7e, iHe = _a(tHe), nHe = Cv, rHe = _a(nHe);
function _a(a) {
  return a && a.__esModule ? a : { default: a };
}
const sHe = (0, Y7e.default)().allWords, oHe = (0, Q7e.default)().allWords, dHe = (0, i9e.default)().allWords, lHe = (0, o9e.default)().allWords, cHe = (0, u9e.default)().allWords, uHe = (0, z9e.default)().allWords, pHe = (0, h9e.default)().allWords, mHe = (0, _9e.default)().allWords, gHe = (0, A9e.default)().allWords, zHe = (0, P9e.default)().allWords, fHe = (0, M9e.default)().allWords, yHe = (0, W9e.default)().allWords, wHe = (0, N9e.default)().allWords, hHe = (0, K9e.default)().allWords, bHe = (0, Q9e.default)().allWords, vHe = (0, iHe.default)().allWords;
var sn = {};
Object.defineProperty(sn, "__esModule", {
  value: !0
});
sn.isWordInSentence = sn.characterInBoundary = void 0;
var kHe = Ru, _He = U4(kHe), N4 = I, $He = gr, jHe = U4($He);
function U4(a) {
  return a && a.__esModule ? a : { default: a };
}
const xHe = (0, _He.default)(), nc = function(e) {
  return (0, N4.includes)(xHe, e);
}, H4 = function(e, t) {
  e = e.toLocaleLowerCase(), t = t.toLocaleLowerCase();
  const i = (0, jHe.default)((0, N4.escapeRegExp)(e));
  let n = t.search(new RegExp(i, "ig"));
  if (n === -1)
    return !1;
  n > 0 && (n += 1);
  const r = n + e.length, s = nc(t[n - 1]) || n === 0, o = nc(t[r]) || r === t.length;
  return s && o;
};
sn.characterInBoundary = nc;
sn.isWordInSentence = H4;
sn.default = {
  characterInBoundary: nc,
  isWordInSentence: H4
};
Object.defineProperty(zv, "__esModule", {
  value: !0
});
zv.default = function(a) {
  const e = a.getLocale(), t = (0, THe.default)(e), i = (0, qHe.default)(a.getText()), n = IHe(i, t);
  return {
    totalSentences: i.length,
    sentenceResults: n,
    transitionWordSentences: n.length
  };
};
var AHe = fv, EHe = Lv(AHe), SHe = Le, qHe = Lv(SHe), V4 = Ke, PHe = yv, THe = Lv(PHe), RHe = sn, OHe = I;
function Lv(a) {
  return a && a.__esModule ? a : { default: a };
}
let af = null, mT = "";
function MHe(a) {
  const e = (0, OHe.flattenDeep)(a).join("");
  return (mT !== e || af === null) && (mT = e, af = (0, EHe.default)(a)), af;
}
const CHe = function(e, t) {
  e = (0, V4.normalizeSingle)(e);
  const i = MHe(t);
  return e.match(i);
}, LHe = function(e, t) {
  return e = (0, V4.normalizeSingle)(e), t.filter((i) => (0, RHe.isWordInSentence)(i, e));
}, IHe = function(e, t) {
  const i = [];
  return e.forEach((n) => {
    const r = CHe(n, t.twoPartTransitionWords());
    if (r !== null) {
      i.push({
        sentence: n,
        transitionWords: r
      });
      return;
    }
    const s = LHe(n, t.transitionWords);
    if (s.length !== 0) {
      i.push({
        sentence: n,
        transitionWords: s
      });
      return;
    }
  }), i;
};
var Iv = {}, gp = {};
Object.defineProperty(gp, "__esModule", {
  value: !0
});
var WHe = {
  locale: "en_US"
}, on = function(e, t) {
  this._sentenceText = e || "", this._locale = t || WHe.locale, this._isPassive = !1;
};
on.prototype.getSentenceText = function() {
  return this._sentenceText;
};
on.prototype.getLocale = function() {
  return this._locale;
};
on.prototype.isPassive = function() {
  return this._isPassive;
};
on.prototype.setPassive = function(a) {
  this._isPassive = a;
};
on.prototype.serialize = function() {
  return {
    _parseClass: "Sentence",
    sentenceText: this._sentenceText,
    locale: this._locale,
    isPassive: this._isPassive
  };
};
on.parse = function(a) {
  const e = new on(a.sentenceText, a.locale);
  return e.setPassive(a.isPassive), e;
};
gp.default = on;
var Wv = {}, Fv = {};
Object.defineProperty(Fv, "__esModule", {
  value: !0
});
Fv.default = function(a) {
  let e = !1;
  return (0, FHe.forEach)(a, function(t) {
    t.determinesSentencePartIsPassive() && (e = !0);
  }), e;
};
var FHe = I, oi = {}, Dv = {}, Bv = {};
Object.defineProperty(Bv, "__esModule", {
  value: !0
});
Bv.default = function() {
  return [
    "arisen",
    "awoken",
    "reawoken",
    "babysat",
    "backslid",
    "backslidden",
    "beat",
    "beaten",
    "become",
    "begun",
    "bent",
    "unbent",
    "bet",
    "bid",
    "outbid",
    "rebid",
    "underbid",
    "overbid",
    "bidden",
    "bitten",
    "blown",
    "bought",
    "overbought",
    "bound",
    "unbound",
    "rebound",
    "broadcast",
    "rebroadcast",
    "broken",
    "brought",
    "browbeat",
    "browbeaten",
    "built",
    "prebuilt",
    "rebuilt",
    "overbuilt",
    "burnt",
    "burst",
    "bust",
    "cast",
    "miscast",
    "recast",
    "caught",
    "chosen",
    "clung",
    "come",
    "overcome",
    "cost",
    "crept",
    "cut",
    "undercut",
    "recut",
    "daydreamt",
    "dealt",
    "misdealt",
    "redealt",
    "disproven",
    "done",
    "predone",
    "outdone",
    "misdone",
    "redone",
    "overdone",
    "undone",
    "drawn",
    "outdrawn",
    "redrawn",
    "overdrawn",
    "dreamt",
    "driven",
    "outdriven",
    "drunk",
    "outdrunk",
    "overdrunk",
    "dug",
    "dwelt",
    "eaten",
    "overeaten",
    "fallen",
    "felt",
    "fit",
    "refit",
    "retrofit",
    "flown",
    "outflown",
    "flung",
    "forbidden",
    "forecast",
    "foregone",
    "foreseen",
    "foretold",
    "forgiven",
    "forgotten",
    "forsaken",
    "fought",
    "outfought",
    "found",
    "frostbitten",
    "frozen",
    "unfrozen",
    "given",
    "gone",
    "undergone",
    //	Is also auxiliary: "got",
    "gotten",
    "ground",
    "reground",
    "grown",
    "outgrown",
    "regrown",
    "had",
    "handwritten",
    "heard",
    "reheard",
    "misheard",
    "overheard",
    "held",
    "hewn",
    "hidden",
    "unhidden",
    "hit",
    "hung",
    "rehung",
    "overhung",
    "unhung",
    "hurt",
    "inlaid",
    "input",
    "interwound",
    "interwoven",
    "jerry-built",
    "kept",
    "knelt",
    "knit",
    "reknit",
    "unknit",
    "known",
    "laid",
    "mislaid",
    "relaid",
    "overlaid",
    "lain",
    "underlain",
    "leant",
    "leapt",
    "outleapt",
    "learnt",
    "unlearnt",
    "relearnt",
    "mislearnt",
    "left",
    "lent",
    "let",
    "lip-read",
    "lit",
    "relit",
    "lost",
    "made",
    "premade",
    "remade",
    "meant",
    "met",
    "mown",
    "offset",
    "paid",
    "prepaid",
    "repaid",
    "overpaid",
    "partaken",
    "proofread",
    "proven",
    "put",
    "quick-frozen",
    "quit",
    "read",
    "misread",
    "reread",
    "retread",
    "rewaken",
    "rid",
    "ridden",
    "outridden",
    "overridden",
    "risen",
    "roughcast",
    "run",
    "outrun",
    "rerun",
    "overrun",
    "rung",
    "said",
    "sand-cast",
    "sat",
    "outsat",
    "sawn",
    "seen",
    "overseen",
    "sent",
    "resent",
    "set",
    "preset",
    "reset",
    "misset",
    "sewn",
    "resewn",
    "oversewn",
    "unsewn",
    "shaken",
    "shat",
    "shaven",
    "shit",
    "shone",
    "outshone",
    "shorn",
    "shot",
    "outshot",
    "overshot",
    "shown",
    "shrunk",
    "preshrunk",
    "shut",
    "sight-read",
    "slain",
    "slept",
    "outslept",
    "overslept",
    "slid",
    "slit",
    "slung",
    "unslung",
    "slunk",
    "smelt",
    "outsmelt",
    "snuck",
    "sold",
    "undersold",
    "presold",
    "outsold",
    "resold",
    "oversold",
    "sought",
    "sown",
    "spat",
    "spelt",
    "misspelt",
    "spent",
    "underspent",
    "outspent",
    "misspent",
    "overspent",
    "spilt",
    "overspilt",
    "spit",
    "split",
    "spoilt",
    "spoken",
    "outspoken",
    "misspoken",
    "overspoken",
    "spread",
    "sprung",
    "spun",
    "unspun",
    "stolen",
    "stood",
    "understood",
    "misunderstood",
    "strewn",
    "stricken",
    "stridden",
    "striven",
    "struck",
    "strung",
    "unstrung",
    "stuck",
    "unstuck",
    "stung",
    "stunk",
    "sublet",
    "sunburnt",
    "sung",
    "outsung",
    "sunk",
    "sweat",
    "swept",
    "swollen",
    "sworn",
    "outsworn",
    "swum",
    "outswum",
    "swung",
    "taken",
    "undertaken",
    "mistaken",
    "retaken",
    "overtaken",
    "taught",
    "mistaught",
    "retaught",
    "telecast",
    "test-driven",
    "test-flown",
    "thought",
    "outthought",
    "rethought",
    "overthought",
    "thrown",
    "outthrown",
    "overthrown",
    "thrust",
    "told",
    "retold",
    "torn",
    "retorn",
    "trod",
    "trodden",
    "typecast",
    "typeset",
    "upheld",
    "waylaid",
    "wept",
    "wet",
    "rewet",
    "withdrawn",
    "withheld",
    "withstood",
    "woken",
    "won",
    "rewon",
    "worn",
    "reworn",
    "wound",
    "rewound",
    "overwound",
    "unwound",
    "woven",
    "rewoven",
    "unwoven",
    "written",
    "typewritten",
    "underwritten",
    "outwritten",
    "miswritten",
    "rewritten",
    "overwritten",
    "wrung"
  ];
};
var Nv = {};
Object.defineProperty(Nv, "__esModule", {
  value: !0
});
Nv.default = function() {
  return {
    irregularsRegular: DHe,
    irregularsIrregular: BHe,
    irregularsEndingInS: NHe
  };
};
var DHe = ["abâtardi", "abattu", "abêti", "aboli", "abouti", "abruti", "abstenu", "abstrait", "accompli", "accouru", "accroupi", "accru", "accueilli", "adjoint", "adouci", "advenu", "affadi", "affaibli", "affermi", "agi", "agrandi", "aguerri", "ahuri", "aigri", "alangui", "alenti", "alourdi", "aluni", "amaigri", "amati", "amerri", "aminci", "amoindri", "amolli", "amorti", "anéanti", "apâli", "aperçu", "aplani", "appartenu", "appauvri", "appendu", "appesanti", "applaudi", "approfondi", "arrondi", "assagi", "assailli", "assaini", "asservi", "assombri", "assorti", "assoupi", "assoupli", "assourdi", "assouvi", "assujetti", "astreint", "attendri", "attendu", "atterri", "attiédi", "attrait", "autodétruit", "avachi", "aveuli", "avili", "banni", "barri", "bâti", "battu", "béni", "blanchi", "blêmi", "bleui", "blondi", "blotti", "bonni", "bouffi", "bouilli", "bruni", "bu", "calmi", "candi", "ceint", "chéri", "choisi", "circonscrit", "circonvenu", "combattu", "comparu", "compati", "conclu", "concouru", "condescendu", "conduit", "confit", "confondu", "conjoint", "connu", "consenti", "construit", "contenu", "contraint", "contredit", "contrefait", "contrevenu", "convaincu", "convenu", "converti", "coproduit", "correspondu", "couru", "cousu", "craint", "cramoisi", "crépi", "croupi", "cru", "cueilli", "cuit", "débattu", "décati", "déchu", "déconfit", "déconstruit", "décousu", "découvert", "décrépi", "décrit", "décru", "déçu", "dédit", "déduit", "défailli", "défendu", "défini", "défleuri", "défraîchi", "dégarni", "dégluti", "dégourdi", "démenti", "démoli", "démordu", "démuni", "départi", "dépeint", "dépendu", "dépéri", "déplu", "dépoli", "dépourvu", "désobéi", "desservi", "déteint", "détendu", "détenu", "détruit", "dévêtu", "discouru", "disjoint", "disparu", "distendu", "distrait", "dit", "diverti", "dormi", "durci", "ébahi", "ébaubi", "ébaudi", "éclairci", "éconduit", "écrit", "élargi", "élu", "embelli", "embouti", "émoulu", "empli", "empreint", "empuanti", "ému", "enchéri", "encouru", "endolori", "endormi", "enduit", "endurci", "enfoui", "enfreint", "enfui", "englouti", "engourdi", "enhardi", "enjoint", "enlaidi", "ennobli", "enorgueilli", "enrichi", "enseveli", "entendu", "entr'aperçu", "entraperçu", "entreclos", "entremis", "entretenu", "entrevu", "entrouvert", "envahi", "épanoui", "éperdu", "équarri", "équivalu", "estourbi", "établi", "éteint", "étendu", "étourdi", "étréci", "étreint", "eu", "évanoui", "exclu", "extrait", "faibli", "fait", "fallu", "farci", "feint", "fendu", "fini", "fléchi", "fleuri", "fondu", "forci", "foui", "fourbi", "fourni", "foutu", "fraîchi", "franchi", "frémi", "frit", "fui", "garanti", "garni", "gauchi", "gémi", "glapi", "grandi", "grossi", "guéri", "haï", "imparti", "induit", "infléchi", "inscrit", "instruit", "interdit", "interrompu", "interverti", "introduit", "inverti", "investi", "jailli", "jauni", "joint", "joui", "langui", "loti", "lu", "maintenu", "méconnu", "mécru", "médit", "menti", "minci", "moisi", "moiti", "molli", "mordu", "morfondu", "moulu", "mugi", "muni", "nanti", "noirci", "nourri", "nui", "obéi", "obscurci", "obtenu", "offert", "oint", "ouï", "ourdi", "ouvert", "pâli", "parcouru", "paru", "pâti", "peint", "pendu", "perçu", "péri", "perverti", "pétri", "plaint", "portrait", "pourfendu", "pourri", "poursuivi", "pourvu", "prédéfini", "prédit", "préétabli", "prémuni", "prescrit", "prétendu", "prévalu", "prévenu", "prévu", "produit", "promu", "proscrit", "pu", "puni", "rabattu", "rabougri", "radouci", "raffermi", "ragaillardi", "raidi", "rajeuni", "ralenti", "ramolli", "ranci", "ravi", "réadmis", "réagi", "réappris", "rebâti", "rebattu", "rebondi", "rebu", "reconnu", "reconstruit", "reconverti", "recouru", "recouvert", "recrépi", "récrit", "recru", "reçu", "recueilli", "recuit", "redécouvert", "redéfini", "redit", "réduit", "réécrit", "réélu", "réentendu", "refendu", "réfléchi", "refondu", "refoutu", "refroidi", "regarni", "régi", "réinscrit", "réintroduit", "réinvesti", "rejoint", "réjoui", "relu", "relui", "rembruni", "remordu", "rempli", "renchéri", "rendormi", "rendu", "rentrait", "répandu", "reparcouru", "réparti", "reparu", "repeint", "rependu", "repenti", "reperdu", "répondu", "reproduit", "résolu", "resplendi", "ressaisi", "resservi", "restreint", "resurgi", "rétabli", "retendu", "retenu", "retraduit", "retrait", "retranscrit", "rétréci", "réuni", "réussi", "revécu", "revendu", "reverdi", "reverni", "revêtu", "revu", "ri", "roidi", "rosi", "rôti", "rougi", "roussi", "rousti", "rouvert", "rugi", "saisi", "sali", "satisfait", "sauri", "secouru", "séduit", "senti", "serti", "servi", "sévi", "souffert", "souri", "sous-entendu", "sous-tendu", "souscrit", "soustrait", "soutenu", "souvenu", "su", "subi", "subvenu", "suffi", "suivi", "surenchéri", "surgi", "suri", "survécu", "suspendu", "tapi", "tari", "teint", "tendu", "tenu", "terni", "terri", "tiédi", "tondu", "tordu", "traduit", "trahi", "trait", "transcrit", "transi", "travesti", "tressailli", "uni", "vagi", "vaincu", "valu", "vécu", "vendu", "verdi", "verni", "vêtu", "vieilli", "vomi", "voulu", "vu"], BHe = ["absous", "absoute", "absoutes", "dissous", "dissoute", "dissoutes", "crû", "crus", "crue", "crues", "dû", "dus", "dues", "mû", "mus", "mue", "mues"], NHe = ["repris", "démis", "omis", "dépris", "retransmis", "assis", "promis", "circoncis", "permis", "compris", "mépris", "inclus", "soumis", "rassis", "sursis", "enclos", "acquis", "compromis", "commis", "désappris", "appris", "conquis", "transmis", "remis", "surpris", "reconquis", "mis", "enquis", "pris", "admis", "clos", "émis", "entrepris", "épris", "requis"], Uv = {};
Object.defineProperty(Uv, "__esModule", {
  value: !0
});
Uv.default = function() {
  return ["abajado", "abalanzado", "abaleado", "abandonado", "abaratado", "abarcado", "abarrotado", "abastecido", "abatido", "abdicado", "abierto", "abismado", "abjurado", "ablandado", "abocado", "abochornado", "abofeteado", "abolido", "abollado", "abombado", "abominado", "abonado", "abordado", "aborrecido", "aborregado", "abortado", "abotonado", "abrasado", "abrazado", "abrevado", "abreviado", "abrigado", "abrochado", "abrogado", "abroquelado", "abrumado", "absorbido", "abstenido", "abstraído", "absuelto", "abucheado", "abultado", "abundado", "aburguesado", "aburrido", "abusado", "acabado", "acallado", "acalorado", "acaparado", "acariciado", "acarreado", "acatado", "acaudillado", "accedido", "accionado", "acechado", "aceitado", "acelerado", "acentuado", "aceptado", "acerado", "acercado", "acertado", "achacado", "achantado", "achatado", "achicado", "acicalado", "acidificado", "aclarado", "aclimatado", "acobardado", "acodado", "acogido", "acojonado", "acometido", "acomodado", "acompañado", "acompasado", "acongojado", "aconsejado", "acontecido", "acopiado", "acoplado", "acordado", "acordonado", "acorralado", "acortado", "acosado", "acostado", "acostumbrado", "acotado", "acrecentado", "acreditado", "acrisolado", "activado", "actuado", "acuchillado", "acuciado", "acudido", "acuerpado", "acumulado", "acunado", "acuñado", "acurrucado", "acusado", "adaptado", "adecentado", "adelantado", "adelgazado", "adentrado", "adeudado", "adherido", "adicionado", "adiestrado", "adivinado", "adjetivado", "adjudicado", "adjuntado", "administrado", "admirado", "admitido", "adoctrinado", "adolecido", "adoptado", "adorado", "adormecido", "adornado", "adquirido", "aducido", "adueñado", "adulado", "adulterado", "advertido", "afanado", "afeado", "afectado", "afeitado", "aferrado", "afianzado", "afinado", "afirmado", "afligido", "aflorado", "afrentado", "afrontado", "agachado", "agarrado", "agarrotado", "agasajado", "agenciado", "agigantado", "agilizado", "agitado", "aglutinado", "agobiado", "agolpado", "agonizado", "agostado", "agotado", "agradado", "agradecido", "agrandado", "agravado", "agraviado", "agredido", "agregado", "agriado", "agrietado", "agrupado", "aguado", "aguantado", "aguardado", "agudizado", "aguijoneado", "agujereado", "aguzado", "ahogado", "ahondado", "ahorcado", "ahorrado", "ahuecado", "ahuyentado", "aireado", "aislado", "ajustado", "ajusticiado", "alabado", "alagado", "alambrado", "alardeado", "alargado", "alarmado", "albergado", "alborotado", "alcanzado", "aleccionado", "alegado", "alegrado", "alejado", "alentado", "alertado", "alfabetizado", "alfombrado", "aliado", "alienado", "aligerado", "alimentado", "aliñado", "alineado", "alisado", "alistado", "aliviado", "alivianado", "allanado", "almacenado", "almorzado", "alojado", "alquilado", "alterado", "alternado", "alucinado", "aludido", "alumbrado", "alzado", "amado", "amaestrado", "amagado", "amainado", "amalgamado", "amamantado", "amansado", "amargado", "amarrado", "amasado", "ambicionado", "amedrentado", "amenazado", "amenizado", "ameritado", "ametrallado", "amilanado", "aminorado", "amnistiado", "amoldado", "amonestado", "amontonado", "amordazado", "amortajado", "amortiguado", "amortizado", "amotinado", "amparado", "ampayado", "ampliado", "amplificado", "amputado", "amueblado", "añadido", "analizado", "anatematizado", "andado", "anegado", "anestesiado", "anexado", "anexionado", "anhelado", "anidado", "anillado", "animado", "aniquilado", "anisado", "añorado", "anotado", "anoticiado", "ansiado", "antecedido", "antepuesto", "anticipado", "antojado", "anudado", "anulado", "anunciado", "apabullado", "apachurrado", "apaciguado", "apadrinado", "apagado", "apalancado", "apaleado", "apañado", "apantallado", "aparcado", "apareado", "aparecido", "aparentado", "apartado", "apeado", "apedreado", "apelado", "apellidado", "apelmazado", "apercibido", "apersonado", "apestado", "apetecido", "apiadado", "apilado", "apiñado", "apisonado", "aplacado", "aplanado", "aplastado", "aplaudido", "aplazado", "aplicado", "apoderado", "apoltronado", "aporreado", "aportado", "aposentado", "apostado", "apostatado", "apostillado", "apoyado", "apreciado", "aprehendido", "apremiado", "aprendido", "apresado", "apresurado", "apretado", "apretujado", "aprisionado", "aprobado", "aprovechado", "aprovisionado", "aproximado", "apuñalado", "apuñaleado", "apuntado", "apuntalado", "apuntillado", "apurado", "aquejado", "aquietado", "aquilatado", "arañado", "arbitrado", "archivado", "arengado", "argüido", "argumentado", "armado", "armonizado", "aromatizado", "arqueado", "arrancado", "arrasado", "arrastrado", "arreado", "arrebatado", "arreciado", "arreglado", "arrellanado", "arremangado", "arremetido", "arrendado", "arrepentido", "arrestado", "arriado", "arribado", "arriesgado", "arrimado", "arrinconado", "arrodillado", "arrogado", "arrojado", "arrollado", "arropado", "arruinado", "arrullado", "articulado", "asado", "asaltado", "ascendido", "aseado", "asechado", "asediado", "asegurado", "asemejado", "asentado", "asentido", "aserrado", "asesinado", "asesorado", "asestado", "aseverado", "asfixiado", "asido", "asignado", "asilado", "asimilado", "asistido", "asolado", "asoleado", "asomado", "asombrado", "aspirado", "astillado", "asumido", "asustado", "atacado", "atado", "atajado", "atarantado", "atascado", "atemorizado", "atemperado", "atenazado", "atendido", "atenido", "atentado", "atenuado", "aterrado", "aterrorizado", "atesorado", "atestiguado", "atiborrado", "atisbado", "atizado", "atomizado", "atontado", "atorado", "atormentado", "atornillado", "atosigado", "atracado", "atragantado", "atraído", "atrancado", "atrapado", "atrasado", "atravesado", "atrevido", "atribuido", "atrincherado", "atrofiado", "atropellado", "aturdido", "auditado", "augurado", "aumentado", "aunado", "aupado", "auscultado", "ausentado", "autenticado", "autentificado", "autodefinido", "autoeditado", "automatizado", "autorizado", "autorregulado", "auxiliado", "avalado", "avanzado", "avasallado", "avenido", "aventado", "aventajado", "aventurado", "averiado", "averiguado", "avezado", "avisado", "avispado", "avistado", "avivado", "avizorado", "avocado", "ayudado", "azotado", "azuzado", "babeado", "bailado", "bajado", "balaceado", "balanceado", "bañado", "banalizado", "bancado", "bandeado", "barajado", "barrido", "basado", "bastardeado", "basureado", "batallado", "bateado", "batido", "bautizado", "beatificado", "bebido", "beneficiado", "besado", "bifurcado", "birlado", "blandido", "blanqueado", "blasfemado", "blindado", "bloqueado", "boicoteado", "bombardeado", "bombeado", "bonificado", "bordeado", "borrado", "borroneado", "bosquejado", "bostezado", "botado", "boxeado", "bregado", "brillado", "brincado", "brindado", "bromeado", "brotado", "bruñido", "buceado", "burlado", "buscado", "cabeceado", "cabido", "cabildeado", "cabreado", "cacareado", "cachado", "cacheado", "cacheteado", "caducado", "cagado", "calado", "calculado", "caldeado", "calefaccionado", "calendarizado", "calentado", "calibrado", "calificado", "caligrafiado", "callado", "calmado", "calumniado", "calzado", "cambiado", "caminado", "camuflado", "canalizado", "cancelado", "canjeado", "cansado", "cantado", "capado", "capeado", "capitalizado", "capitulado", "captado", "capturado", "caracterizado", "carburado", "carcomido", "cardado", "careado", "carecido", "cargado", "caricaturizado", "cartografiado", "cascado", "castigado", "castrado", "catado", "catalizado", "catalogado", "catapultado", "cateado", "categorizado", "causado", "cauterizado", "cautivado", "cavado", "cavilado", "cazado", "cebado", "cedido", "cegado", "cejado", "celebrado", "cenado", "ceñido", "censurado", "centrifugado", "centuplicado", "cepillado", "cercado", "cercenado", "cerciorado", "cernido", "cerrado", "cesado", "chafado", "chamuscado", "chantajeado", "chapado", "charlado", "chateado", "chequeado", "chiflado", "chillado", "chingado", "chirriado", "chivado", "chocado", "chorreado", "choteado", "chupado", "chutado", "cicatrizado", "cifrado", "cimentado", "cincelado", "circulado", "circuncidado", "circundado", "citado", "clamado", "clarificado", "clasificado", "claudicado", "clausurado", "clavado", "clicado", "clonado", "coaccionado", "coadyuvado", "coagulado", "coaligado", "coartado", "cobijado", "cobrado", "cocido", "cocinado", "codeado", "codiciado", "codificado", "codirigido", "coexistido", "cofinanciado", "cogido", "cohabitado", "cohibido", "coincidido", "colaborado", "colacionado", "colado", "colapsado", "coleccionado", "colectado", "colectivizado", "colgado", "colisionado", "colmado", "colocado", "colonizado", "coloreado", "columpiado", "combatido", "combinado", "comentado", "comenzado", "comerciado", "comercializado", "cometido", "comido", "comisionado", "compactado", "compadecido", "compaginado", "comparado", "comparecido", "compartido", "compatibilizado", "compelido", "compendiado", "compenetrado", "compensado", "compilado", "complacido", "complementado", "completado", "complotado", "comportado", "comprado", "comprendido", "comprimido", "comprobado", "comprometido", "compuesto", "compulsado", "computado", "comulgado", "comunicado", "concatenado", "concebido", "concedido", "concelebrado", "concentrado", "conceptuado", "conceptualizado", "concertado", "concienciado", "concientizado", "conciliado", "concitado", "concluido", "concordado", "concretado", "concretizado", "conculcado", "concursado", "condenado", "condensado", "condicionado", "condimentado", "condolido", "condonado", "conducido", "conectado", "conexionado", "confabulado", "confeccionado", "conferido", "confesado", "confiado", "configurado", "confirmado", "confiscado", "confluido", "conformado", "confortado", "confrontado", "confundido", "congeniado", "congestionado", "congratulado", "congregado", "conjeturado", "conjugado", "conjuntado", "conjurado", "conllevado", "conmemorado", "conminado", "conmocionado", "conmovido", "conmutado", "connotado", "conquistado", "consagrado", "conseguido", "consensuado", "consentido", "conservado", "considerado", "consignado", "consistido", "consolado", "consolidado", "conspirado", "constado", "constatado", "constelado", "constitucionalizado", "constituido", "constreñido", "construido", "consultado", "consumado", "consumido", "contabilizado", "contactado", "contado", "contagiado", "contemplado", "contendido", "contenido", "contentado", "contestado", "contextualizado", "continuado", "contorneado", "contraatacado", "contrabandeado", "contradicho", "contrahecho", "contraído", "contrapesado", "contrapuesto", "contrariado", "contrarrestado", "contrastado", "contratado", "contravenido", "contribuido", "contristado", "controlado", "convalidado", "convencido", "convenido", "convergido", "conversado", "convertido", "convidado", "convivido", "convocado", "convulsionado", "cooperado", "cooptado", "coordinado", "copado", "copiado", "coproducido", "copulado", "coqueteado", "corchado", "coreado", "coreografiado", "corneado", "coronado", "corporizado", "corregido", "correlacionado", "correspondido", "correteado", "corrido", "corroborado", "corroído", "corrompido", "cortado", "cortejado", "cosechado", "cosido", "cosificado", "costado", "costeado", "cotejado", "cotizado", "creado", "creído", "criado", "cribado", "criminalizado", "crispado", "cristalizado", "cristianizado", "criticado", "cronometrado", "crucificado", "crujido", "cruzado", "cuadriplicado", "cuadruplicado", "cuajado", "cuantificado", "cuarteado", "cubierto", "cuestionado", "cuidado", "culeado", "culminado", "culpabilizado", "culpado", "cultivado", "culturizado", "cumplido", "cumplimentado", "cundido", "curado", "curioseado", "currado", "cursado", "curvado", "custodiado", "dado", "dañado", "danzado", "datado", "dateado", "debatido", "debido", "debilitado", "debitado", "debutado", "decaído", "decantado", "decapitado", "decepcionado", "decidido", "declamado", "declarado", "declinado", "decodificado", "decolorado", "decomisado", "decrecido", "decretado", "dedicado", "deducido", "defecado", "defendido", "defenestrado", "deferido", "definido", "deformado", "defraudado", "degenerado", "deglutido", "degollado", "degradado", "degustado", "deificado", "dejado", "delatado", "delegado", "deleitado", "deletreado", "deliberado", "delimitado", "delineado", "delinquido", "demandado", "demarcado", "demediado", "demeritado", "democratizado", "demolido", "demonizado", "demorado", "demostrado", "demudado", "denegado", "denigrado", "denominado", "denostado", "denotado", "denunciado", "deparado", "departido", "dependido", "depilado", "deplorado", "deportado", "depositado", "depreciado", "depredado", "deprimido", "depuesto", "depurado", "derechizado", "derivado", "derogado", "derramado", "derretido", "derribado", "derrocado", "derrochado", "derrotado", "derruido", "derrumbado", "desabrochado", "desacatado", "desacelerado", "desacomodado", "desaconsejado", "desacoplado", "desacralizado", "desacreditado", "desactivado", "desafiado", "desafinado", "desaguado", "desahogado", "desairado", "desajustado", "desalentado", "desalineado", "desalojado", "desandado", "desangrado", "desanimado", "desaparecido", "desapegado", "desaprendido", "desaprobado", "desaprovechado", "desarmado", "desarraigado", "desarreglado", "desarrollado", "desarticulado", "desaseado", "desasido", "desasosegado", "desatado", "desatendido", "desautorizado", "desayunado", "desbancado", "desbandado", "desbaratado", "desbarrancado", "desbastado", "desbloqueado", "desbocado", "desbordado", "desbrozado", "descabalgado", "descabezado", "descaderado", "descalabrado", "descalificado", "descansado", "descargado", "descarriado", "descarrilado", "descartado", "descascarado", "descascarillado", "descendido", "descentrado", "descifrado", "descocido", "descodificado", "descojonado", "descolgado", "descolocado", "descolonizado", "descompensado", "descomprimido", "descompuesto", "desconectado", "desconfiado", "descongelado", "desconocido", "descontado", "descontaminado", "descontextualizado", "descontinuado", "desconvocado", "descorazonado", "descorchado", "descorrido", "descosido", "descoyuntado", "descreído", "descristianizado", "descuadrado", "descuartizado", "descubierto", "descuidado", "desdeñado", "desdibujado", "desdicho", "desdoblado", "deseado", "desecado", "desechado", "desembarazado", "desembarcado", "desembocado", "desembolsado", "desempacado", "desempañado", "desempaquetado", "desempeñado", "desempolvado", "desenamorado", "desencadenado", "desencajado", "desencarnado", "desenchufado", "desenfocado", "desenfundado", "desenganchado", "desengrasado", "desenmascarado", "desenredado", "desenrollado", "desentendido", "desenterrado", "desentonado", "desentrañado", "desenvainado", "desenvuelto", "desequilibrado", "desertado", "desestabilizado", "desestimado", "desfalcado", "desfallecido", "desfigurado", "desfondado", "desgajado", "desgañitado", "desgarrado", "desgastado", "desglosado", "desgobernado", "desgranado", "desguazado", "deshecho", "desheredado", "deshidratado", "deshilachado", "deshojado", "deshonrado", "deshuesado", "deshumanizado", "designado", "desilusionado", "desincentivado", "desinfectado", "desinflado", "desinflamado", "desinformado", "desinhibido", "desinstalado", "desintegrado", "desintoxicado", "desistido", "desjarretado", "deslegitimado", "desleído", "desligado", "deslindado", "deslizado", "deslucido", "deslumbrado", "desmadrado", "desmalezado", "desmantelado", "desmaquillado", "desmarcado", "desmayado", "desmejorado", "desmembrado", "desmentido", "desmenuzado", "desmerecido", "desmigado", "desmitificado", "desmoldado", "desmontado", "desmoralizado", "desmoronado", "desmotivado", "desmovilizado", "desnaturalizado", "desnivelado", "desnucado", "desnudado", "desobedecido", "desobligado", "desoído", "desollado", "desorganizado", "desorientado", "despachado", "desparasitado", "desparecido", "desparramado", "despedazado", "despedido", "despegado", "despeinado", "despejado", "despellejado", "despeñado", "despenalizado", "desperdiciado", "despersonalizado", "despertado", "despilfarrado", "despintado", "despiojado", "despistado", "desplazado", "desplegado", "desplomado", "desplumado", "despojado", "despolitizado", "desposado", "desposeído", "despotricado", "despreciado", "desprendido", "despreocupado", "desprestigiado", "desprogramado", "despulpado", "despuntado", "desquiciado", "desquitado", "destacado", "destapado", "desteñido", "desterrado", "destetado", "destilado", "destituido", "destrabado", "destripado", "destronado", "destrozado", "destruido", "desunido", "desvalijado", "desvalorizado", "desvanecido", "desvelado", "desvestido", "desviado", "desvinculado", "desvirtuado", "desvivido", "detectado", "detenido", "detentado", "deteriorado", "determinado", "detestado", "detonado", "devaluado", "devanado", "devastado", "develado", "devengado", "devenido", "devorado", "devuelto", "diagnosticado", "diagramado", "dializado", "dialogado", "dibujado", "dicho", "dictado", "dictaminado", "diezmado", "difamado", "diferenciado", "diferido", "dificultado", "difuminado", "difundido", "digerido", "digitado", "dignado", "dignificado", "dilapidado", "dilatado", "diligenciado", "dilucidado", "diluido", "dimensionado", "dimitido", "dinamitado", "dinamizado", "dirimido", "discernido", "disciplinado", "discontinuado", "discrepado", "discriminado", "disculpado", "discurrido", "discutido", "diseccionado", "diseminado", "diseñado", "disentido", "disertado", "disfrazado", "disfrutado", "disgregado", "disgustado", "disimulado", "disipado", "dislocado", "disminuido", "disociado", "dispensado", "dispersado", "dispuesto", "disputado", "distado", "distanciado", "distendido", "distinguido", "distorsionado", "distraído", "distribuido", "disuadido", "disuelto", "divagado", "diversificado", "divertido", "dividido", "divinizado", "divisado", "divorciado", "divulgado", "doblado", "doblegado", "doctorado", "documentado", "dogmatizado", "dolido", "domado", "domesticado", "dominado", "donado", "dopado", "dormido", "dosificado", "dotado", "dragado", "dramatizado", "drenado", "drogado", "duchado", "dudado", "dulcificado", "duplicado", "durado", "echado", "eclipsado", "eclosionado", "economizado", "ecualizado", "edificado", "editado", "educado", "efectuado", "ejecutado", "ejemplificado", "ejercido", "ejercitado", "elaborado", "electrizado", "electrocutado", "elevado", "elidido", "eliminado", "elogiado", "elucubrado", "eludido", "emanado", "emancipado", "embadurnado", "embalado", "embalsamado", "embanderado", "embarcado", "embargado", "embarrado", "embarrancado", "embaucado", "embebido", "embelesado", "embellecido", "embestido", "embolado", "embolsado", "emborrachado", "emborronado", "emboscado", "embotado", "embriagado", "embrollado", "embrutecido", "embuchado", "emergido", "emigrado", "emitido", "emocionado", "empacado", "empachado", "empadronado", "empalado", "empalmado", "empanado", "empañado", "empantanado", "empapelado", "empaquetado", "emparejado", "empastado", "empatado", "empecinado", "empeñado", "empeorado", "empequeñecido", "emperrado", "empezado", "empinado", "emplazado", "empleado", "empobrecido", "empoderado", "empollado", "empolvado", "emponzoñado", "emprendido", "empujado", "empuñado", "emputado", "emulado", "emulsionado", "enajenado", "enaltecido", "enamorado", "enarbolado", "enardecido", "encabezado", "encabritado", "encabronado", "encadenado", "encajado", "encajonado", "encallado", "encamado", "encaminado", "encandilado", "encanecido", "encañonado", "encantado", "encaprichado", "encapsulado", "encarado", "encaramado", "encarecido", "encargado", "encariñado", "encarnado", "encarrilado", "encartado", "encasillado", "encasquetado", "encasquillado", "encastrado", "encausado", "encauzado", "enceguecido", "encendido", "encerado", "encerrado", "encharcado", "enchufado", "encimado", "encogido", "encolado", "encolerizado", "encolumnado", "encomendado", "enconado", "encontrado", "encordado", "encrespado", "encuadrado", "encubierto", "encuerado", "encumbrado", "enderezado", "endeudado", "endilgado", "endiosado", "endosado", "endulzado", "endurecido", "enemistado", "energizado", "enervado", "enfadado", "enfangado", "enfatizado", "enfermado", "enfiestado", "enfilado", "enflaquecido", "enfocado", "enfrascado", "enfrentado", "enfriado", "enfurecido", "engalanado", "engañado", "enganchado", "engarzado", "engatusado", "engendrado", "englobado", "engolosinado", "engordado", "engranado", "engrandecido", "engrasado", "engreído", "engrosado", "engullido", "enharinado", "enhebrado", "enjuagado", "enjugado", "enjuiciado", "enlazado", "enlistado", "enlodado", "enloquecido", "enlozado", "enlutado", "enmarañado", "enmascarado", "enmendado", "enmohecido", "enmudecido", "ennegrecido", "ennoblecido", "enorgullecido", "enrarecido", "enredado", "enripiado", "enriquecido", "enrocado", "enrojecido", "enrolado", "enrollado", "enroscado", "enrumbado", "ensalzado", "ensamblado", "ensañado", "ensanchado", "ensartado", "ensayado", "ensebado", "enseñado", "enseñoreado", "ensillado", "ensoberbecido", "ensogado", "ensombrecido", "ensoñado", "ensordecido", "ensuciado", "entablado", "entallado", "entendido", "enterado", "enternecido", "enterrado", "entibiado", "entintado", "entonado", "entorpecido", "entrado", "entrampado", "entrañado", "entreabierto", "entrecomillado", "entrecruzado", "entregado", "entrelazado", "entremetido", "entremezclado", "entrenado", "entresacado", "entretejido", "entretenido", "entreverado", "entrevistado", "entristecido", "entrometido", "entronado", "entroncado", "entronizado", "entumecido", "enturbiado", "entusiasmado", "enumerado", "enunciado", "envainado", "envalentonado", "envanecido", "envasado", "envejecido", "envenenado", "envestido", "enviado", "enviciado", "envidiado", "envilecido", "enviudado", "envuelto", "enzarzado", "equilibrado", "equiparado", "equivocado", "erigido", "erizado", "erogado", "erosionado", "erotizado", "erradicado", "errado", "esbozado", "escabullido", "escalado", "escaldado", "escalfado", "escamado", "escamoteado", "escampado", "escandalizado", "escaneado", "escapado", "escaqueado", "escarbado", "escarchado", "escarmentado", "escarnecido", "escaseado", "escatimado", "escenificado", "escindido", "esclarecido", "esclavizado", "escocido", "escogido", "escolarizado", "escoltado", "escondido", "escorado", "escrachado", "escrito", "escrutado", "escuchado", "escudado", "escudriñado", "esculpido", "escupido", "escurrido", "esforzado", "esfumado", "esgrimido", "esmerado", "esmerilado", "espabilado", "espaciado", "españolizado", "espantado", "esparcido", "especificado", "especulado", "esperado", "espesado", "espetado", "espiado", "espigado", "espinado", "espirado", "espiritualizado", "espoleado", "espolvoreado", "esponjado", "esponsorizado", "esposado", "esquematizado", "esquiado", "esquilado", "esquilmado", "esquivado", "estabilizado", "establecido", "estacionado", "estafado", "estallado", "estampado", "estancado", "estaqueado", "estatizado", "estatuido", "esterificado", "esterilizado", "estigmatizado", "estilizado", "estimado", "estimulado", "estipulado", "estirado", "estorbado", "estornudado", "estragado", "estrangulado", "estrechado", "estrellado", "estremecido", "estrenado", "estresado", "estriado", "estropeado", "estructurado", "estrujado", "estudiado", "eternizado", "etiquetado", "evacuado", "evadido", "evaluado", "evangelizado", "evaporado", "evidenciado", "eviscerado", "evitado", "evocado", "evolucionado", "exacerbado", "exagerado", "exaltado", "examinado", "exasperado", "excarcelado", "excavado", "excedido", "exceptuado", "excitado", "exclamado", "excluido", "excretado", "exculpado", "excusado", "execrado", "exhalado", "exhibido", "exhortado", "exhumado", "exigido", "exilado", "eximido", "existido", "exonerado", "exorcizado", "expandido", "expedido", "expedientado", "expelido", "expendido", "experimentado", "expiado", "expirado", "explayado", "explicado", "explicitado", "explorado", "explosionado", "explotado", "expoliado", "exportado", "expresado", "exprimido", "expropiado", "expuesto", "expulsado", "expurgado", "extendido", "exteriorizado", "exterminado", "externado", "externalizado", "extinguido", "extirpado", "extorsionado", "extractado", "extraditado", "extraído", "extralimitado", "extrañado", "extrapolado", "extraviado", "extremado", "extruido", "exudado", "eyaculado", "eyectado", "fabricado", "fabulado", "facilitado", "facturado", "facultado", "fagocitado", "fajado", "fallado", "fallecido", "falsado", "falseado", "falsificado", "familiarizado", "fantaseado", "fascinado", "fastidiado", "fatigado", "favorecido", "fecundado", "felicitado", "feminizado", "fenecido", "fermentado", "fertilizado", "festejado", "fiado", "fichado", "fidelizado", "figurado", "fijado", "filmado", "filosofado", "filtrado", "finalizado", "financiado", "fincado", "fingido", "finiquitado", "firmado", "fiscalizado", "fisurado", "flagelado", "flameado", "flanqueado", "flaqueado", "fletado", "flexibilizado", "flexionado", "flipado", "floreado", "florecido", "flotado", "fluctuado", "focalizado", "fogueado", "foliado", "follado", "fomentado", "fondeado", "forcejeado", "forestado", "forjado", "formado", "formalizado", "formateado", "formulado", "fornicado", "forrado", "fortalecido", "forzado", "fotocopiado", "fotografiado", "fracasado", "fraccionado", "fracturado", "fragmentado", "fraguado", "franqueado", "frecuentado", "fregado", "frenado", "fresado", "friccionado", "frotado", "fructificado", "fruncido", "fugado", "fulminado", "fumado", "fumigado", "funcionado", "fundado", "fundamentado", "fundido", "fungido", "fusilado", "fusionado", "fustigado", "gafado", "ganado", "gangrenado", "garabateado", "garantido", "garantizado", "garrido", "gaseado", "gastado", "gemido", "generado", "generalizado", "gerenciado", "germinado", "gestado", "gestionado", "girado", "glorificado", "glosado", "gobernado", "goleado", "golpeado", "gozado", "grabado", "graduado", "graficado", "granjeado", "grapado", "gratificado", "gravado", "gravitado", "gritado", "gruñido", "guardado", "guarecido", "guarnecido", "guerreado", "guiado", "guillotinado", "guiñado", "guindado", "guisado", "gustado", "habilitado", "habitado", "habituado", "hablado", "halado", "halagado", "hallado", "hartado", "hechizado", "hecho", "helenizado", "henchido", "hendido", "heredado", "herido", "hermanado", "herrado", "hervido", "hibernado", "hibridado", "hidratado", "higienizado", "hilado", "hilvanado", "hincado", "hinchado", "hipnotizado", "hipotecado", "historiado", "hojeado", "holgado", "hollado", "homenajeado", "homogeneizado", "homologado", "honrado", "horadado", "horneado", "horrorizado", "hospedado", "hostigado", "hostilizado", "huido", "humanado", "humanizado", "humectado", "humedecido", "humillado", "hundido", "hurgado", "hurtado", "ideado", "idealizado", "identificado", "ideologizado", "idiotizado", "idolatrado", "ignorado", "igualado", "ilegalizado", "iluminado", "ilusionado", "ilustrado", "imaginado", "imbricado", "imitado", "impactado", "impartido", "impedido", "impelido", "imperado", "impermeabilizado", "implantado", "implementado", "implicado", "implorado", "importado", "importunado", "imposibilitado", "impresionado", "improvisado", "impuesto", "impugnado", "impulsado", "imputado", "inaugurado", "incautado", "incendiado", "incentivado", "incinerado", "incitado", "inclinado", "incluido", "incoado", "incomodado", "incorporado", "incrementado", "increpado", "incriminado", "incubado", "inculcado", "inculpado", "incumplido", "incurrido", "incursionado", "indagado", "indemnizado", "independizado", "indexado", "indicado", "indigestado", "indignado", "indispuesto", "individuado", "inducido", "indultado", "inervado", "infamado", "infartado", "infectado", "inferido", "inficionado", "infiltrado", "inflado", "inflamado", "infligido", "influenciado", "influido", "informado", "infravalorado", "infringido", "infundido", "ingeniado", "ingerido", "ingresado", "inhabilitado", "inhalado", "inhibido", "inhumado", "iniciado", "inicializado", "injertado", "injuriado", "inmigrado", "inmiscuido", "inmolado", "inmortalizado", "inmovilizado", "inmunizado", "innovado", "inoculado", "inquietado", "inquirido", "insensibilizado", "insertado", "insinuado", "insistido", "inspeccionado", "inspirado", "instado", "instalado", "instaurado", "instigado", "instituido", "instruido", "instrumentado", "instrumentalizado", "insuflado", "insultado", "insumido", "integrado", "intelectualizado", "intensificado", "intentado", "interactuado", "intercalado", "intercambiado", "intercedido", "interceptado", "interesado", "interferido", "interiorizado", "intermediado", "internacionalizado", "internalizado", "interpelado", "interpolado", "interpretado", "interpuesto", "interrogado", "interrumpido", "intervenido", "intimado", "intimidado", "intitulado", "intoxicado", "intrigado", "introducido", "intuido", "inundado", "inutilizado", "invadido", "invalidado", "inventado", "inventariado", "invertido", "investido", "investigado", "invitado", "invocado", "involucionado", "inyectado", "ionizado", "ironizado", "irradiado", "irrespetado", "irrigado", "irritado", "irrogado", "irrumpido", "jactado", "jalado", "jaleado", "jalonado", "jaqueado", "jerarquizado", "jodido", "jorobado", "jubilado", "jugado", "juntado", "jurado", "juramentado", "justificado", "juzgado", "laborado", "labrado", "laburado", "lacado", "lacerado", "lactado", "ladeado", "ladrado", "lamentado", "lamido", "laminado", "languidecido", "lanzado", "lapidado", "laqueado", "largado", "lastimado", "lastrado", "latido", "laudado", "lavado", "legalizado", "legislado", "legitimado", "leído", "lesionado", "leudado", "levantado", "liado", "liberado", "liberalizado", "libertado", "librado", "licitado", "licuado", "liderizado", "lidiado", "ligado", "lijado", "limado", "limitado", "limpiado", "linchado", "liquidado", "litigado", "llagado", "llamado", "llegado", "llenado", "llevado", "llorado", "localizado", "logrado", "lubricado", "luchado", "lucido", "lucrado", "lustrado", "macerado", "machacado", "macheteado", "machucado", "madreado", "madrugado", "madurado", "magnetizado", "magnificado", "malacostumbrado", "malbaratado", "malcriado", "maleado", "malentendido", "malgastado", "malinterpretado", "malogrado", "maltratado", "malversado", "mamado", "manchado", "mancillado", "mandado", "manejado", "mangado", "mangoneado", "manifestado", "maniobrado", "manipulado", "manoseado", "manteado", "mantenido", "manufacturado", "maquillado", "maquinado", "maravillado", "marcado", "marchitado", "mareado", "marginado", "maridado", "martillado", "martirizado", "masacrado", "masajeado", "mascado", "masificado", "masticado", "masturbado", "matado", "materializado", "matizado", "matriculado", "maximizado", "meado", "mecanografiado", "mechado", "mecido", "mediado", "mediatizado", "medicado", "medido", "meditado", "medrado", "mejorado", "mellado", "memorizado", "mencionado", "meneado", "menguado", "menoscabado", "menospreciado", "menstruado", "mensualizado", "mensurado", "mentado", "mentalizado", "mentido", "mercadeado", "mercantilizado", "merecido", "merendado", "mermado", "merodeado", "mesurado", "metamorfoseado", "metido", "mezclado", "migrado", "militado", "militarizado", "mimado", "mimetizado", "minado", "minimizado", "ministrado", "minusvalorado", "mirado", "mistificado", "mitificado", "mitigado", "modelado", "modernizado", "modificado", "modulado", "mofado", "mojado", "moldeado", "molestado", "molido", "monetizado", "monitorizado", "monopolizado", "montado", "morado", "moralizado", "mordido", "mordisqueado", "mortificado", "mosqueado", "mostrado", "motejado", "motivado", "movido", "movilizado", "mudado", "muestreado", "multado", "multiplicado", "munido", "murmurado", "mutado", "mutilado", "nacionalizado", "narcotizado", "narrado", "naufragado", "navegado", "necesitado", "negado", "negociado", "neutralizado", "ninguneado", "nivelado", "nombrado", "nominado", "noqueado", "normado", "normalizado", "notado", "notificado", "nutrido", "obcecado", "obedecido", "objetado", "objetivado", "obligado", "obliterado", "obnubilado", "obrado", "obsequiado", "observado", "obsesionado", "obstaculizado", "obstruido", "obtenido", "obturado", "obviado", "ocasionado", "ocluido", "ocultado", "ocupado", "odiado", "ofendido", "ofertado", "oficiado", "oficializado", "ofrecido", "ofrendado", "ofuscado", "oído", "ojeado", "olfateado", "olido", "olvidado", "omitido", "ondeado", "ondulado", "opacado", "operado", "opinado", "oprimido", "optado", "optimizado", "opuesto", "orado", "orbitado", "ordenado", "ordeñado", "organizado", "orientado", "originado", "orillado", "orinado", "ornado", "ornamentado", "orquestado", "osado", "oscilado", "oscurecido", "osificado", "ostentado", "otorgado", "ovacionado", "ovulado", "oxidado", "oxigenado", "pacificado", "pactado", "padecido", "paganizado", "paginado", "paladeado", "paliado", "palpado", "parado", "parafraseado", "paralizado", "parapetado", "parasitado", "parcelado", "parchado", "parcheado", "pareado", "parido", "parodiado", "parqueado", "participado", "particularizado", "partido", "pasado", "paseado", "pastoreado", "pataleado", "pateado", "patentado", "patentizado", "patinado", "patrullado", "pecado", "pedaleado", "pedido", "pegado", "peinado", "pellizcado", "penalizado", "penetrado", "pensado", "percatado", "percibido", "percutido", "perdido", "perdonado", "perdurado", "perecido", "peregrinado", "perfeccionado", "perfilado", "perforado", "perfumado", "pergeñado", "peritado", "perjudicado", "perjurado", "permeado", "permitido", "permutado", "pernoctado", "perpetrado", "perpetuado", "perseguido", "perseverado", "persistido", "personado", "personalizado", "personificado", "persuadido", "pertenecido", "pertrechado", "perturbado", "pervertido", "pervivido", "pescado", "petado", "peticionado", "picado", "picaneado", "picoteado", "pifiado", "pignorado", "pillado", "pilotado", "piloteado", "pincelado", "pinchado", "pintado", "pintarrajeado", "pinzado", "pirado", "pirateado", "pisado", "pisoteado", "pitado", "placido", "plagiado", "planchado", "planeado", "plantado", "planteado", "plasmado", "platicado", "plegado", "pluralizado", "podado", "poetizado", "polemizado", "politizado", "pololeado", "ponderado", "pontificado", "popularizado", "porfiado", "portado", "porteado", "posado", "posesionado", "posibilitado", "posicionado", "pospuesto", "posteado", "postergado", "postrado", "postulado", "potenciado", "practicado", "precarizado", "precedido", "preceptuado", "precintado", "precipitado", "precisado", "preconizado", "predicado", "predicho", "predispuesto", "predominado", "preferido", "prefigurado", "pregonado", "preguntado", "prejuzgado", "premiado", "prendado", "prendido", "preocupado", "preparado", "presagiado", "prescindido", "presenciado", "presentado", "presentido", "preservado", "presidido", "presionado", "prestado", "prestigiado", "presumido", "presurizado", "pretendido", "preterido", "prevalecido", "prevalido", "prevaricado", "prevenido", "previsto", "primado", "principiado", "pringado", "priorizado", "privatizado", "probado", "problematizado", "procedido", "procesado", "proclamado", "procreado", "procurado", "prodigado", "producido", "profanado", "proferido", "profesado", "profesionalizado", "profetizado", "profundizado", "programado", "progresado", "prohibido", "prohijado", "proletarizado", "proliferado", "prologado", "prolongado", "promediado", "prometido", "promocionado", "promovido", "promulgado", "pronosticado", "pronunciado", "propagado", "propalado", "propendido", "propiciado", "propinado", "proporcionado", "propuesto", "propugnado", "propulsado", "prorrateado", "prorrogado", "proseguido", "prosperado", "prostituido", "protegido", "protestado", "protocolizado", "provenido", "provocado", "proyectado", "psicoanalizado", "publicado", "publicitado", "puesto", "pugnado", "pujado", "pulido", "pulsado", "pululado", "pulverizado", "punado", "punteado", "puntuado", "puntualizado", "punzado", "purgado", "purificado", "puteado", "quebrado", "quebrantado", "quejado", "quemado", "querellado", "querido", "quintuplicado", "quitado", "racionado", "racionalizado", "radiado", "radicado", "radicalizado", "raído", "rajado", "ralentizado", "rapado", "rapeado", "raptado", "rascado", "rasgado", "rasguñado", "raspado", "rastreado", "rasurado", "ratificado", "rayado", "razonado", "reabierto", "reabsorbido", "reaccionado", "reactivado", "readaptado", "readmitido", "reafirmado", "reagrupado", "reajustado", "realimentado", "realizado", "realzado", "reanimado", "reanudado", "reaparecido", "rearmado", "reasumido", "reavivado", "rebajado", "rebalsado", "rebanado", "rebasado", "rebatido", "rebautizado", "rebelado", "reblandecido", "rebobinado", "rebosado", "rebotado", "rebozado", "rebuscado", "recabado", "recaído", "recalado", "recalcado", "recalentado", "recalificado", "recapacitado", "recapitulado", "recargado", "recatado", "recaudado", "receptado", "recetado", "rechazado", "recibido", "reciclado", "recitado", "reclamado", "reclinado", "reclutado", "recobrado", "recocido", "recogido", "recolectado", "recomendado", "recomenzado", "recompensado", "recompuesto", "reconcentrado", "reconciliado", "reconducido", "reconfortado", "reconocido", "reconquistado", "reconsiderado", "reconstituido", "reconstruido", "reconvenido", "reconvertido", "recopilado", "recordado", "recorrido", "recortado", "recreado", "recriminado", "recrudecido", "rectificado", "recubierto", "reculado", "recuperado", "recurrido", "recusado", "redactado", "redefinido", "redescubierto", "redimensionado", "redimido", "rediseñado", "redistribuido", "redituado", "redoblado", "redondeado", "reducido", "redundado", "reedificado", "reeditado", "reeducado", "reelaborado", "reembolsado", "reemplazado", "reencarnado", "reencauchado", "reencontrado", "reenganchado", "reenviado", "reescrito", "reestructurado", "reexaminado", "refaccionado", "referido", "refinado", "refinanciado", "reflejado", "reflexionado", "reflotado", "reforestado", "reformado", "reforzado", "refractado", "refrenado", "refrendado", "refrescado", "refrigerado", "refundido", "refutado", "regado", "regalado", "regañado", "regateado", "regenerado", "regentado", "regenteado", "regido", "regionalizado", "registrado", "reglado", "reglamentado", "regocijado", "regodeado", "regresado", "regulado", "regularizado", "regurgitado", "rehabilitado", "rehecho", "rehogado", "rehuido", "rehusado", "reído", "reinado", "reincidido", "reincorporado", "reingresado", "reiniciado", "reinsertado", "reinstalado", "reinstaurado", "reintegrado", "reinventado", "reinvertido", "reiterado", "reivindicado", "rejuvenecido", "relajado", "relamido", "relanzado", "relatado", "relativizado", "relegado", "releído", "relevado", "religado", "rellenado", "remachado", "remado", "remangado", "remarcado", "rematado", "remecido", "remediado", "rememorado", "remendado", "remitido", "remodelado", "remojado", "remolcado", "remontado", "removido", "remplazado", "renacido", "rendido", "renegado", "renegociado", "reñido", "renombrado", "renovado", "rentabilizado", "rentado", "renunciado", "reordenado", "reorganizado", "reorientado", "reparado", "repartido", "repasado", "repatriado", "repelido", "repensado", "repercutido", "repescado", "repetido", "repicado", "repintado", "replanteado", "replegado", "replicado", "repoblado", "reportado", "reporteado", "reposado", "repreguntado", "reprendido", "represado", "representado", "reprimido", "reprobado", "reprochado", "reproducido", "repudiado", "repuesto", "repugnado", "repuntado", "reputado", "requerido", "requisado", "resaltado", "resarcido", "resbalado", "rescatado", "rescindido", "resecado", "reseñado", "reservado", "reseteado", "resguardado", "residido", "resignado", "resistido", "resonado", "respaldado", "respetado", "respirado", "resplandecido", "respondido", "responsabilizado", "resquebrajado", "restablecido", "restado", "restaurado", "restituido", "restregado", "resucitado", "resuelto", "resumido", "resurgido", "retado", "retardado", "retenido", "retirado", "retocado", "retomado", "retorcido", "retornado", "retractado", "retraído", "retransmitido", "retrasado", "retratado", "retribuido", "retrotraído", "retumbado", "reunido", "reunificado", "reutilizado", "revalidado", "revalorizado", "revaluado", "revelado", "revendido", "reventado", "reverdecido", "reverenciado", "revertido", "revestido", "revirado", "revisado", "revitalizado", "revivido", "revocado", "revolcado", "revoloteado", "revolucionado", "revuelto", "ridiculizado", "rifado", "rimado", "rivalizado", "rizado", "robado", "robustecido", "rociado", "rodado", "rodeado", "rogado", "roído", "rondado", "rotado", "roto", "rotulado", "roturado", "rozado", "ruborizado", "rubricado", "rugido", "rumiado", "rumorado", "sabido", "saboreado", "saboteado", "sacado", "saciado", "sacralizado", "sacrificado", "sacudido", "saldado", "salpimentado", "salpullido", "saltado", "salteado", "saludado", "salvado", "salvaguardado", "sanado", "saneado", "sangrado", "santificado", "saqueado", "satanizado", "satirizado", "satisfecho", "sazonado", "secado", "seccionado", "secretado", "secuenciado", "secuestrado", "secundado", "sedimentado", "seducido", "segado", "segmentado", "segregado", "seguido", "seleccionado", "sembrado", "señalado", "sensibilizado", "sentado", "sentenciado", "sentido", "separado", "serenado", "serrado", "servido", "significado", "silenciado", "simbolizado", "simpatizado", "simplificado", "simulado", "sincerado", "sincronizado", "sindicado", "sindicalizado", "singularizado", "sintetizado", "sintonizado", "sistematizado", "situado", "sobado", "sobornado", "sobrado", "sobrecargado", "sobrecogido", "sobreentendido", "sobreestimado", "sobrellevado", "sobrentendido", "sobrepasado", "sobrepuesto", "sobresalido", "sobresaltado", "sobrestimado", "sobrevenido", "sobrevivido", "sobrevolado", "socavado", "socializado", "socorrido", "sodomizado", "sofocado", "sojuzgado", "solapado", "solicitado", "solidarizado", "solidificado", "soliviantado", "soltado", "solucionado", "solventado", "sombreado", "sometido", "sonado", "soñado", "sondeado", "sonreído", "sonrojado", "sopesado", "soplado", "soportado", "sorbido", "sorprendido", "sorteado", "sosegado", "soslayado", "sospechado", "sostenido", "suavizado", "subastado", "subcontratado", "subdividido", "subestimado", "subido", "sublevado", "sublimado", "subrayado", "subrogado", "subsanado", "subsidiado", "subsistido", "substraído", "subsumido", "subvertido", "subyugado", "succionado", "sucedido", "sucumbido", "sudado", "sufragado", "sufrido", "sugerido", "sugestionado", "suicidado", "sujetado", "sumado", "sumergido", "suministrado", "supeditado", "superado", "superpuesto", "supervisado", "suplantado", "suplicado", "suplido", "suprimido", "supuesto", "surcado", "surtido", "suscitado", "suspendido", "suspirado", "sustanciado", "sustantivado", "sustentado", "sustituido", "sustraído", "susurrado", "suturado", "tabulado", "tachado", "talado", "taladrado", "tallado", "tambaleado", "tamizado", "tañido", "tanteado", "tapado", "tapizado", "taponado", "tarareado", "tardado", "tasado", "tatuado", "tecleado", "tejido", "telefoneado", "televisado", "temido", "templado", "tendido", "tenido", "tensado", "tentado", "teorizado", "terciado", "tergiversado", "terminado", "territorializado", "testado", "testeado", "testificado", "testimoniado", "tildado", "timado", "timbrado", "tinturado", "tipeado", "tipificado", "tirado", "tiranizado", "tironeado", "tiroteado", "titubeado", "tiznado", "tocado", "tolerado", "tomado", "tonificado", "topado", "toqueteado", "torcido", "toreado", "tornado", "tornasolado", "torneado", "torpedeado", "torturado", "tosido", "tostado", "totalizado", "trabado", "trabajado", "traducido", "traficado", "tragado", "traicionado", "traído", "trajinado", "tramado", "tramitado", "trancado", "tranquilizado", "transcendido", "transcurrido", "transferido", "transfigurado", "transformado", "transfundido", "transgredido", "transigido", "transitado", "transliterado", "translucido", "transmitido", "transmutado", "transparentado", "transpirado", "transportado", "transpuesto", "trasegado", "trasgredido", "trasladado", "traslapado", "traslucido", "trasnochado", "traspapelado", "traspasado", "trasplantado", "traspuesto", "trasquilado", "trasteado", "trastocado", "trastornado", "trasvasado", "tratado", "trazado", "trenzado", "trepado", "tributado", "trincado", "triplicado", "triturado", "triunfado", "trivializado", "trocado", "troceado", "tronado", "tronchado", "truncado", "tumbado", "tuneado", "turbado", "turnado", "tutelado", "ufanado", "ultimado", "uncido", "ungido", "unido", "universalizado", "untado", "urbanizado", "urdido", "usado", "usufructuado", "usurpado", "utilizado", "vacado", "vaciado", "vacilado", "vacunado", "vagado", "validado", "valido", "valorado", "valorizado", "valuado", "vanagloriado", "vandalizado", "vaporizado", "variado", "vaticinado", "vedado", "vehiculado", "vejado", "velado", "vencido", "vendado", "vendido", "venerado", "vengado", "ventilado", "veraneado", "verbalizado", "verificado", "versado", "versionado", "vertebrado", "vertido", "vestido", "vetado", "viabilizado", "viajado", "vibrado", "victimado", "victimizado", "vigilado", "vigorizado", "vilipendiado", "vindicado", "violado", "violentado", "virado", "visado", "visibilizado", "visitado", "vislumbrado", "visto", "visualizado", "vitoreado", "vitrificado", "vituperado", "vivido", "vivificado", "vocalizado", "voceado", "vociferado", "volado", "volatilizado", "volcado", "volteado", "vomitado", "votado", "vuelto", "vulcanizado", "vulgarizado", "vulnerado", "yuxtapuesto", "zafado", "zambullido", "zampado", "zanjado", "zarandeado", "zarpado", "zozobrado", "zumbado", "zurcido", "zurrado", "abajada", "abalanzada", "abaleada", "abandonada", "abaratada", "abarcada", "abarrotada", "abastecida", "abatida", "abdicada", "abierta", "abismada", "abjurada", "ablandada", "abocada", "abochornada", "abofeteada", "abolida", "abollada", "abombada", "abominada", "abonada", "abordada", "aborrecida", "aborregada", "abortada", "abotonada", "abrasada", "abrazada", "abrevada", "abreviada", "abrigada", "abrochada", "abrogada", "abroquelada", "abrumada", "absorbida", "abstenida", "abstraída", "absuelta", "abucheada", "abultada", "abundada", "aburguesada", "aburrida", "abusada", "acabada", "acallada", "acalorada", "acaparada", "acariciada", "acarreada", "acatada", "acaudillada", "accedida", "accionada", "acechada", "aceitada", "acelerada", "acentuada", "aceptada", "acerada", "acercada", "acertada", "achacada", "achantada", "achatada", "achicada", "acicalada", "acidificada", "aclarada", "aclimatada", "acobardada", "acodada", "acogida", "acojonada", "acometida", "acomodada", "acompañada", "acompasada", "acongojada", "aconsejada", "acontecida", "acopiada", "acoplada", "acordada", "acordonada", "acorralada", "acortada", "acosada", "acostada", "acostumbrada", "acotada", "acrecentada", "acreditada", "acrisolada", "activada", "actuada", "acuchillada", "acuciada", "acudida", "acuerpada", "acumulada", "acunada", "acuñada", "acurrucada", "acusada", "adaptada", "adecentada", "adelantada", "adelgazada", "adentrada", "adeudada", "adherida", "adicionada", "adiestrada", "adivinada", "adjetivada", "adjudicada", "adjuntada", "administrada", "admirada", "admitida", "adoctrinada", "adolecida", "adoptada", "adorada", "adormecida", "adornada", "adquirida", "aducida", "adueñada", "adulada", "adulterada", "advertida", "afanada", "afeada", "afectada", "afeitada", "aferrada", "afianzada", "afinada", "afirmada", "afligida", "aflorada", "afrentada", "afrontada", "agachada", "agarrada", "agarrotada", "agasajada", "agenciada", "agigantada", "agilizada", "agitada", "aglutinada", "agobiada", "agolpada", "agonizada", "agostada", "agotada", "agradada", "agradecida", "agrandada", "agravada", "agraviada", "agredida", "agregada", "agriada", "agrietada", "agrupada", "aguada", "aguantada", "aguardada", "agudizada", "aguijoneada", "agujereada", "aguzada", "ahogada", "ahondada", "ahorcada", "ahorrada", "ahuecada", "ahuyentada", "aireada", "aislada", "ajustada", "ajusticiada", "alabada", "alagada", "alambrada", "alardeada", "alargada", "alarmada", "albergada", "alborotada", "alcanzada", "aleccionada", "alegada", "alegrada", "alejada", "alentada", "alertada", "alfabetizada", "alfombrada", "aliada", "alienada", "aligerada", "alimentada", "aliñada", "alineada", "alisada", "alistada", "aliviada", "alivianada", "allanada", "almacenada", "almorzada", "alojada", "alquilada", "alterada", "alternada", "alucinada", "aludida", "alumbrada", "alzada", "amada", "amaestrada", "amagada", "amainada", "amalgamada", "amamantada", "amansada", "amargada", "amarrada", "amasada", "ambicionada", "amedrentada", "amenazada", "amenizada", "ameritada", "ametrallada", "amilanada", "aminorada", "amnistiada", "amoldada", "amonestada", "amontonada", "amordazada", "amortajada", "amortiguada", "amortizada", "amotinada", "amparada", "ampayada", "ampliada", "amplificada", "amputada", "amueblada", "añadida", "analizada", "anatematizada", "andada", "anegada", "anestesiada", "anexada", "anexionada", "anhelada", "anidada", "anillada", "animada", "aniquilada", "anisada", "añorada", "anotada", "anoticiada", "ansiada", "antecedida", "antepuesta", "anticipada", "antojada", "anudada", "anulada", "anunciada", "apabullada", "apachurrada", "apaciguada", "apadrinada", "apagada", "apalancada", "apaleada", "apañada", "apantallada", "aparcada", "apareada", "aparecida", "aparentada", "apartada", "apeada", "apedreada", "apelada", "apellidada", "apelmazada", "apercibida", "apersonada", "apestada", "apetecida", "apiadada", "apilada", "apiñada", "apisonada", "aplacada", "aplanada", "aplastada", "aplaudida", "aplazada", "aplicada", "apoderada", "apoltronada", "aporreada", "aportada", "aposentada", "apostada", "apostatada", "apostillada", "apoyada", "apreciada", "aprehendida", "apremiada", "aprendida", "apresada", "apresurada", "apretada", "apretujada", "aprisionada", "aprobada", "aprovechada", "aprovisionada", "aproximada", "apuñalada", "apuñaleada", "apuntada", "apuntalada", "apuntillada", "apurada", "aquejada", "aquietada", "aquilatada", "arañada", "arbitrada", "archivada", "arengada", "argüida", "argumentada", "armada", "armonizada", "aromatizada", "arqueada", "arrancada", "arrasada", "arrastrada", "arreada", "arrebatada", "arreciada", "arreglada", "arrellanada", "arremangada", "arremetida", "arrendada", "arrepentida", "arrestada", "arriada", "arribada", "arriesgada", "arrimada", "arrinconada", "arrodillada", "arrogada", "arrojada", "arrollada", "arropada", "arruinada", "arrullada", "articulada", "asada", "asaltada", "ascendida", "aseada", "asechada", "asediada", "asegurada", "asemejada", "asentada", "asentida", "aserrada", "asesinada", "asesorada", "asestada", "aseverada", "asfixiada", "asida", "asignada", "asilada", "asimilada", "asistida", "asolada", "asoleada", "asomada", "asombrada", "aspirada", "astillada", "asumida", "asustada", "atacada", "atada", "atajada", "atarantada", "atascada", "atemorizada", "atemperada", "atenazada", "atendida", "atenida", "atentada", "atenuada", "aterrada", "aterrorizada", "atesorada", "atestiguada", "atiborrada", "atisbada", "atizada", "atomizada", "atontada", "atorada", "atormentada", "atornillada", "atosigada", "atracada", "atragantada", "atraída", "atrancada", "atrapada", "atrasada", "atravesada", "atrevida", "atribuida", "atrincherada", "atrofiada", "atropellada", "aturdida", "auditada", "augurada", "aumentada", "aunada", "aupada", "auscultada", "ausentada", "autenticada", "autentificada", "autodefinida", "autoeditada", "automatizada", "autorizada", "autorregulada", "auxiliada", "avalada", "avanzada", "avasallada", "avenida", "aventada", "aventajada", "aventurada", "averiada", "averiguada", "avezada", "avisada", "avispada", "avistada", "avivada", "avizorada", "avocada", "ayudada", "azotada", "azuzada", "babeada", "bailada", "bajada", "balaceada", "balanceada", "bañada", "banalizada", "bancada", "bandeada", "barajada", "barrida", "basada", "bastardeada", "basureada", "batallada", "bateada", "batida", "bautizada", "beatificada", "bebida", "beneficiada", "besada", "bifurcada", "birlada", "blandida", "blanqueada", "blasfemada", "blindada", "bloqueada", "boicoteada", "bombardeada", "bombeada", "bonificada", "bordeada", "borrada", "borroneada", "bosquejada", "bostezada", "botada", "boxeada", "bregada", "brillada", "brincada", "brindada", "bromeada", "brotada", "bruñida", "buceada", "burlada", "buscada", "cabeceada", "cabida", "cabildeada", "cabreada", "cacareada", "cachada", "cacheada", "cacheteada", "caducada", "cagada", "calada", "calculada", "caldeada", "calefaccionada", "calendarizada", "calentada", "calibrada", "calificada", "caligrafiada", "callada", "calmada", "calumniada", "calzada", "cambiada", "caminada", "camuflada", "canalizada", "cancelada", "canjeada", "cansada", "cantada", "capada", "capeada", "capitalizada", "capitulada", "captada", "capturada", "caracterizada", "carburada", "carcomida", "cardada", "careada", "carecida", "cargada", "caricaturizada", "cartografiada", "cascada", "castigada", "castrada", "catada", "catalizada", "catalogada", "catapultada", "cateada", "categorizada", "causada", "cauterizada", "cautivada", "cavada", "cavilada", "cazada", "cebada", "cedida", "cegada", "cejada", "celebrada", "cenada", "ceñida", "censurada", "centrifugada", "centuplicada", "cepillada", "cercada", "cercenada", "cerciorada", "cernida", "cerrada", "cesada", "chafada", "chamuscada", "chantajeada", "chapada", "charlada", "chateada", "chequeada", "chiflada", "chillada", "chingada", "chirriada", "chivada", "chocada", "chorreada", "choteada", "chupada", "chutada", "cicatrizada", "cifrada", "cimentada", "cincelada", "circulada", "circuncidada", "circundada", "citada", "clamada", "clarificada", "clasificada", "claudicada", "clausurada", "clavada", "clicada", "clonada", "coaccionada", "coadyuvada", "coagulada", "coaligada", "coartada", "cobijada", "cobrada", "cocida", "cocinada", "codeada", "codiciada", "codificada", "codirigida", "coexistida", "cofinanciada", "cogida", "cohabitada", "cohibida", "coincidida", "colaborada", "colacionada", "colada", "colapsada", "coleccionada", "colectada", "colectivizada", "colgada", "colisionada", "colmada", "colocada", "colonizada", "coloreada", "columpiada", "combatida", "combinada", "comentada", "comenzada", "comerciada", "comercializada", "cometida", "comida", "comisionada", "compactada", "compadecida", "compaginada", "comparada", "comparecida", "compartida", "compatibilizada", "compelida", "compendiada", "compenetrada", "compensada", "compilada", "complacida", "complementada", "completada", "complotada", "comportada", "comprada", "comprendida", "comprimida", "comprobada", "comprometida", "compuesta", "compulsada", "computada", "comulgada", "comunicada", "concatenada", "concebida", "concedida", "concelebrada", "concentrada", "conceptuada", "conceptualizada", "concertada", "concienciada", "concientizada", "conciliada", "concitada", "concluida", "concordada", "concretada", "concretizada", "conculcada", "concursada", "condenada", "condensada", "condicionada", "condimentada", "condolida", "condonada", "conducida", "conectada", "conexionada", "confabulada", "confeccionada", "conferida", "confesada", "confiada", "configurada", "confirmada", "confiscada", "confluida", "conformada", "confortada", "confrontada", "confundida", "congeniada", "congestionada", "congratulada", "congregada", "conjeturada", "conjugada", "conjuntada", "conjurada", "conllevada", "conmemorada", "conminada", "conmocionada", "conmovida", "conmutada", "connotada", "conquistada", "consagrada", "conseguida", "consensuada", "consentida", "conservada", "considerada", "consignada", "consistida", "consolada", "consolidada", "conspirada", "constada", "constatada", "constelada", "constitucionalizada", "constituida", "constreñida", "construida", "consultada", "consumada", "consumida", "contabilizada", "contactada", "contada", "contagiada", "contemplada", "contendida", "contenida", "contentada", "contestada", "contextualizada", "continuada", "contorneada", "contraatacada", "contrabandeada", "contradicha", "contrahecha", "contraída", "contrapesada", "contrapuesta", "contrariada", "contrarrestada", "contrastada", "contratada", "contravenida", "contribuida", "contristada", "controlada", "convalidada", "convencida", "convenida", "convergida", "conversada", "convertida", "convidada", "convivida", "convocada", "convulsionada", "cooperada", "cooptada", "coordinada", "copada", "copiada", "coproducida", "copulada", "coqueteada", "corchada", "coreada", "coreografiada", "corneada", "coronada", "corporizada", "corregida", "correlacionada", "correspondida", "correteada", "corrida", "corroborada", "corroída", "corrompida", "cortada", "cortejada", "cosechada", "cosida", "cosificada", "costada", "costeada", "cotejada", "cotizada", "creada", "creída", "criada", "cribada", "criminalizada", "crispada", "cristalizada", "cristianizada", "criticada", "cronometrada", "crucificada", "crujida", "cruzada", "cuadriplicada", "cuadruplicada", "cuajada", "cuantificada", "cuarteada", "cubierta", "cuestionada", "cuidada", "culeada", "culminada", "culpabilizada", "culpada", "cultivada", "culturizada", "cumplida", "cumplimentada", "cundida", "curada", "curioseada", "currada", "cursada", "curvada", "custodiada", "dada", "dañada", "danzada", "datada", "dateada", "debatida", "debida", "debilitada", "debitada", "debutada", "decaída", "decantada", "decapitada", "decepcionada", "decidida", "declamada", "declarada", "declinada", "decodificada", "decolorada", "decomisada", "decrecida", "decretada", "dedicada", "deducida", "defecada", "defendida", "defenestrada", "deferida", "definida", "deformada", "defraudada", "degenerada", "deglutida", "degollada", "degradada", "degustada", "deificada", "dejada", "delatada", "delegada", "deleitada", "deletreada", "deliberada", "delimitada", "delineada", "delinquida", "demandada", "demarcada", "demediada", "demeritada", "democratizada", "demolida", "demonizada", "demorada", "demostrada", "demudada", "denegada", "denigrada", "denominada", "denostada", "denotada", "denunciada", "deparada", "departida", "dependida", "depilada", "deplorada", "deportada", "depositada", "depreciada", "depredada", "deprimida", "depuesta", "depurada", "derechizada", "derivada", "derogada", "derramada", "derretida", "derribada", "derrocada", "derrochada", "derrotada", "derruida", "derrumbada", "desabrochada", "desacatada", "desacelerada", "desacomodada", "desaconsejada", "desacoplada", "desacralizada", "desacreditada", "desactivada", "desafiada", "desafinada", "desaguada", "desahogada", "desairada", "desajustada", "desalentada", "desalineada", "desalojada", "desandada", "desangrada", "desanimada", "desaparecida", "desapegada", "desaprendida", "desaprobada", "desaprovechada", "desarmada", "desarraigada", "desarreglada", "desarrollada", "desarticulada", "desaseada", "desasida", "desasosegada", "desatada", "desatendida", "desautorizada", "desayunada", "desbancada", "desbandada", "desbaratada", "desbarrancada", "desbastada", "desbloqueada", "desbocada", "desbordada", "desbrozada", "descabalgada", "descabezada", "descaderada", "descalabrada", "descalificada", "descansada", "descargada", "descarriada", "descarrilada", "descartada", "descascarada", "descascarillada", "descendida", "descentrada", "descifrada", "descocida", "descodificada", "descojonada", "descolgada", "descolocada", "descolonizada", "descompensada", "descomprimida", "descompuesta", "desconectada", "desconfiada", "descongelada", "desconocida", "descontada", "descontaminada", "descontextualizada", "descontinuada", "desconvocada", "descorazonada", "descorchada", "descorrida", "descosida", "descoyuntada", "descreída", "descristianizada", "descuadrada", "descuartizada", "descubierta", "descuidada", "desdeñada", "desdibujada", "desdicha", "desdoblada", "deseada", "desecada", "desechada", "desembarazada", "desembarcada", "desembocada", "desembolsada", "desempacada", "desempañada", "desempaquetada", "desempeñada", "desempolvada", "desenamorada", "desencadenada", "desencajada", "desencarnada", "desenchufada", "desenfocada", "desenfundada", "desenganchada", "desengrasada", "desenmascarada", "desenredada", "desenrollada", "desentendida", "desenterrada", "desentonada", "desentrañada", "desenvainada", "desenvuelta", "desequilibrada", "desertada", "desestabilizada", "desestimada", "desfalcada", "desfallecida", "desfigurada", "desfondada", "desgajada", "desgañitada", "desgarrada", "desgastada", "desglosada", "desgobernada", "desgranada", "desguazada", "deshecha", "desheredada", "deshidratada", "deshilachada", "deshojada", "deshonrada", "deshuesada", "deshumanizada", "designada", "desilusionada", "desincentivada", "desinfectada", "desinflada", "desinflamada", "desinformada", "desinhibida", "desinstalada", "desintegrada", "desintoxicada", "desistida", "desjarretada", "deslegitimada", "desleída", "desligada", "deslindada", "deslizada", "deslucida", "deslumbrada", "desmadrada", "desmalezada", "desmantelada", "desmaquillada", "desmarcada", "desmayada", "desmejorada", "desmembrada", "desmentida", "desmenuzada", "desmerecida", "desmigada", "desmitificada", "desmoldada", "desmontada", "desmoralizada", "desmoronada", "desmotivada", "desmovilizada", "desnaturalizada", "desnivelada", "desnucada", "desnudada", "desobedecida", "desobligada", "desoída", "desollada", "desorganizada", "desorientada", "despachada", "desparasitada", "desparecida", "desparramada", "despedazada", "despedida", "despegada", "despeinada", "despejada", "despellejada", "despeñada", "despenalizada", "desperdiciada", "despersonalizada", "despertada", "despilfarrada", "despintada", "despiojada", "despistada", "desplazada", "desplegada", "desplomada", "desplumada", "despojada", "despolitizada", "desposada", "desposeída", "despotricada", "despreciada", "desprendida", "despreocupada", "desprestigiada", "desprogramada", "despulpada", "despuntada", "desquiciada", "desquitada", "destacada", "destapada", "desteñida", "desterrada", "destetada", "destilada", "destituida", "destrabada", "destripada", "destronada", "destrozada", "destruida", "desunida", "desvalijada", "desvalorizada", "desvanecida", "desvelada", "desvestida", "desviada", "desvinculada", "desvirtuada", "desvivida", "detectada", "detenida", "detentada", "deteriorada", "determinada", "detestada", "detonada", "devaluada", "devanada", "devastada", "develada", "devengada", "devenida", "devorada", "devuelta", "diagnosticada", "diagramada", "dializada", "dialogada", "dibujada", "dicha", "dictada", "dictaminada", "diezmada", "difamada", "diferenciada", "diferida", "dificultada", "difuminada", "difundida", "digerida", "digitada", "dignada", "dignificada", "dilapidada", "dilatada", "diligenciada", "dilucidada", "diluida", "dimensionada", "dimitida", "dinamitada", "dinamizada", "dirimida", "discernida", "disciplinada", "discontinuada", "discrepada", "discriminada", "disculpada", "discurrida", "discutida", "diseccionada", "diseminada", "diseñada", "disentida", "disertada", "disfrazada", "disfrutada", "disgregada", "disgustada", "disimulada", "disipada", "dislocada", "disminuida", "disociada", "dispensada", "dispersada", "dispuesta", "disputada", "distada", "distanciada", "distendida", "distinguida", "distorsionada", "distraída", "distribuida", "disuadida", "disuelta", "divagada", "diversificada", "divertida", "dividida", "divinizada", "divisada", "divorciada", "divulgada", "doblada", "doblegada", "doctorada", "documentada", "dogmatizada", "dolida", "domada", "domesticada", "dominada", "donada", "dopada", "dormida", "dosificada", "dotada", "dragada", "dramatizada", "drenada", "drogada", "duchada", "dudada", "dulcificada", "duplicada", "durada", "echada", "eclipsada", "eclosionada", "economizada", "ecualizada", "edificada", "editada", "educada", "efectuada", "ejecutada", "ejemplificada", "ejercida", "ejercitada", "elaborada", "electrizada", "electrocutada", "elevada", "elidida", "eliminada", "elogiada", "elucubrada", "eludida", "emanada", "emancipada", "embadurnada", "embalada", "embalsamada", "embanderada", "embarcada", "embargada", "embarrada", "embarrancada", "embaucada", "embebida", "embelesada", "embellecida", "embestida", "embolada", "embolsada", "emborrachada", "emborronada", "emboscada", "embotada", "embriagada", "embrollada", "embrutecida", "embuchada", "emergida", "emigrada", "emitida", "emocionada", "empacada", "empachada", "empadronada", "empalada", "empalmada", "empanada", "empañada", "empantanada", "empapelada", "empaquetada", "emparejada", "empastada", "empatada", "empecinada", "empeñada", "empeorada", "empequeñecida", "emperrada", "empezada", "empinada", "emplazada", "empleada", "empobrecida", "empoderada", "empollada", "empolvada", "emponzoñada", "emprendida", "empujada", "empuñada", "emputada", "emulada", "emulsionada", "enajenada", "enaltecida", "enamorada", "enarbolada", "enardecida", "encabezada", "encabritada", "encabronada", "encadenada", "encajada", "encajonada", "encallada", "encamada", "encaminada", "encandilada", "encanecida", "encañonada", "encantada", "encaprichada", "encapsulada", "encarada", "encaramada", "encarecida", "encargada", "encariñada", "encarnada", "encarrilada", "encartada", "encasillada", "encasquetada", "encasquillada", "encastrada", "encausada", "encauzada", "enceguecida", "encendida", "encerada", "encerrada", "encharcada", "enchufada", "encimada", "encogida", "encolada", "encolerizada", "encolumnada", "encomendada", "enconada", "encontrada", "encordada", "encrespada", "encuadrada", "encubierta", "encuerada", "encumbrada", "enderezada", "endeudada", "endilgada", "endiosada", "endosada", "endulzada", "endurecida", "enemistada", "energizada", "enervada", "enfadada", "enfangada", "enfatizada", "enfermada", "enfiestada", "enfilada", "enflaquecida", "enfocada", "enfrascada", "enfrentada", "enfriada", "enfurecida", "engalanada", "engañada", "enganchada", "engarzada", "engatusada", "engendrada", "englobada", "engolosinada", "engordada", "engranada", "engrandecida", "engrasada", "engreída", "engrosada", "engullida", "enharinada", "enhebrada", "enjuagada", "enjugada", "enjuiciada", "enlazada", "enlistada", "enlodada", "enloquecida", "enlozada", "enlutada", "enmarañada", "enmascarada", "enmendada", "enmohecida", "enmudecida", "ennegrecida", "ennoblecida", "enorgullecida", "enrarecida", "enredada", "enripiada", "enriquecida", "enrocada", "enrojecida", "enrolada", "enrollada", "enroscada", "enrumbada", "ensalzada", "ensamblada", "ensañada", "ensanchada", "ensartada", "ensayada", "ensebada", "enseñada", "enseñoreada", "ensillada", "ensoberbecida", "ensogada", "ensombrecida", "ensoñada", "ensordecida", "ensuciada", "entablada", "entallada", "entendida", "enterada", "enternecida", "enterrada", "entibiada", "entintada", "entonada", "entorpecida", "entrada", "entrampada", "entrañada", "entreabierta", "entrecomillada", "entrecruzada", "entregada", "entrelazada", "entremetida", "entremezclada", "entrenada", "entresacada", "entretejida", "entretenida", "entreverada", "entrevistada", "entristecida", "entrometida", "entronada", "entroncada", "entronizada", "entumecida", "enturbiada", "entusiasmada", "enumerada", "enunciada", "envainada", "envalentonada", "envanecida", "envasada", "envejecida", "envenenada", "envestida", "enviada", "enviciada", "envidiada", "envilecida", "enviudada", "envuelta", "enzarzada", "equilibrada", "equiparada", "equivocada", "erigida", "erizada", "erogada", "erosionada", "erotizada", "erradicada", "errada", "esbozada", "escabullida", "escalada", "escaldada", "escalfada", "escamada", "escamoteada", "escampada", "escandalizada", "escaneada", "escapada", "escaqueada", "escarbada", "escarchada", "escarmentada", "escarnecida", "escaseada", "escatimada", "escenificada", "escindida", "esclarecida", "esclavizada", "escocida", "escogida", "escolarizada", "escoltada", "escondida", "escorada", "escrachada", "escrita", "escrutada", "escuchada", "escudada", "escudriñada", "esculpida", "escupida", "escurrida", "esforzada", "esfumada", "esgrimida", "esmerada", "esmerilada", "espabilada", "espaciada", "españolizada", "espantada", "esparcida", "especificada", "especulada", "esperada", "espesada", "espetada", "espiada", "espigada", "espinada", "espirada", "espiritualizada", "espoleada", "espolvoreada", "esponjada", "esponsorizada", "esposada", "esquematizada", "esquiada", "esquilada", "esquilmada", "esquivada", "estabilizada", "establecida", "estacionada", "estafada", "estallada", "estampada", "estancada", "estaqueada", "estatizada", "estatuida", "esterificada", "esterilizada", "estigmatizada", "estilizada", "estimada", "estimulada", "estipulada", "estirada", "estorbada", "estornudada", "estragada", "estrangulada", "estrechada", "estrellada", "estremecida", "estrenada", "estresada", "estriada", "estropeada", "estructurada", "estrujada", "estudiada", "eternizada", "etiquetada", "evacuada", "evadida", "evaluada", "evangelizada", "evaporada", "evidenciada", "eviscerada", "evitada", "evocada", "evolucionada", "exacerbada", "exagerada", "exaltada", "examinada", "exasperada", "excarcelada", "excavada", "excedida", "exceptuada", "excitada", "exclamada", "excluida", "excretada", "exculpada", "excusada", "execrada", "exhalada", "exhibida", "exhortada", "exhumada", "exigida", "exilada", "eximida", "existida", "exonerada", "exorcizada", "expandida", "expedida", "expedientada", "expelida", "expendida", "experimentada", "expiada", "expirada", "explayada", "explicada", "explicitada", "explorada", "explosionada", "explotada", "expoliada", "exportada", "expresada", "exprimida", "expropiada", "expuesta", "expulsada", "expurgada", "extendida", "exteriorizada", "exterminada", "externada", "externalizada", "extinguida", "extirpada", "extorsionada", "extractada", "extraditada", "extraída", "extralimitada", "extrañada", "extrapolada", "extraviada", "extremada", "extruida", "exudada", "eyaculada", "eyectada", "fabricada", "fabulada", "facilitada", "facturada", "facultada", "fagocitada", "fajada", "fallada", "fallecida", "falsada", "falseada", "falsificada", "familiarizada", "fantaseada", "fascinada", "fastidiada", "fatigada", "favorecida", "fecundada", "felicitada", "feminizada", "fenecida", "fermentada", "fertilizada", "festejada", "fiada", "fichada", "fidelizada", "figurada", "fijada", "filmada", "filosofada", "filtrada", "finalizada", "financiada", "fincada", "fingida", "finiquitada", "firmada", "fiscalizada", "fisurada", "flagelada", "flameada", "flanqueada", "flaqueada", "fletada", "flexibilizada", "flexionada", "flipada", "floreada", "florecida", "flotada", "fluctuada", "focalizada", "fogueada", "foliada", "follada", "fomentada", "fondeada", "forcejeada", "forestada", "forjada", "formada", "formalizada", "formateada", "formulada", "fornicada", "forrada", "fortalecida", "forzada", "fotocopiada", "fotografiada", "fracasada", "fraccionada", "fracturada", "fragmentada", "fraguada", "franqueada", "frecuentada", "fregada", "frenada", "fresada", "friccionada", "frotada", "fructificada", "fruncida", "fugada", "fulminada", "fumada", "fumigada", "funcionada", "fundada", "fundamentada", "fundida", "fungida", "fusilada", "fusionada", "fustigada", "gafada", "ganada", "gangrenada", "garabateada", "garantida", "garantizada", "garrida", "gaseada", "gastada", "gemida", "generada", "generalizada", "gerenciada", "germinada", "gestada", "gestionada", "girada", "glorificada", "glosada", "gobernada", "goleada", "golpeada", "gozada", "grabada", "graduada", "graficada", "granjeada", "grapada", "gratificada", "gravada", "gravitada", "gritada", "gruñida", "guardada", "guarecida", "guarnecida", "guerreada", "guiada", "guillotinada", "guiñada", "guindada", "guisada", "gustada", "habilitada", "habitada", "habituada", "hablada", "halada", "halagada", "hallada", "hartada", "hechizada", "hecha", "helenizada", "henchida", "hendida", "heredada", "herida", "hermanada", "herrada", "hervida", "hibernada", "hibridada", "hidratada", "higienizada", "hilada", "hilvanada", "hincada", "hinchada", "hipnotizada", "hipotecada", "historiada", "hojeada", "holgada", "hollada", "homenajeada", "homogeneizada", "homologada", "honrada", "horadada", "horneada", "horrorizada", "hospedada", "hostigada", "hostilizada", "huida", "humanada", "humanizada", "humectada", "humedecida", "humillada", "hundida", "hurgada", "hurtada", "ideada", "idealizada", "identificada", "ideologizada", "idiotizada", "idolatrada", "ignorada", "igualada", "ilegalizada", "iluminada", "ilusionada", "ilustrada", "imaginada", "imbricada", "imitada", "impactada", "impartida", "impedida", "impelida", "imperada", "impermeabilizada", "implantada", "implementada", "implicada", "implorada", "importada", "importunada", "imposibilitada", "impresionada", "improvisada", "impuesta", "impugnada", "impulsada", "imputada", "inaugurada", "incautada", "incendiada", "incentivada", "incinerada", "incitada", "inclinada", "incluida", "incoada", "incomodada", "incorporada", "incrementada", "increpada", "incriminada", "incubada", "inculcada", "inculpada", "incumplida", "incurrida", "incursionada", "indagada", "indemnizada", "independizada", "indexada", "indicada", "indigestada", "indignada", "indispuesta", "individuada", "inducida", "indultada", "inervada", "infamada", "infartada", "infectada", "inferida", "inficionada", "infiltrada", "inflada", "inflamada", "infligida", "influenciada", "influida", "informada", "infravalorada", "infringida", "infundida", "ingeniada", "ingerida", "ingresada", "inhabilitada", "inhalada", "inhibida", "inhumada", "iniciada", "inicializada", "injertada", "injuriada", "inmigrada", "inmiscuida", "inmolada", "inmortalizada", "inmovilizada", "inmunizada", "innovada", "inoculada", "inquietada", "inquirida", "insensibilizada", "insertada", "insinuada", "insistida", "inspeccionada", "inspirada", "instada", "instalada", "instaurada", "instigada", "instituida", "instruida", "instrumentada", "instrumentalizada", "insuflada", "insultada", "insumida", "integrada", "intelectualizada", "intensificada", "intentada", "interactuada", "intercalada", "intercambiada", "intercedida", "interceptada", "interesada", "interferida", "interiorizada", "intermediada", "internacionalizada", "internalizada", "interpelada", "interpolada", "interpretada", "interpuesta", "interrogada", "interrumpida", "intervenida", "intimada", "intimidada", "intitulada", "intoxicada", "intrigada", "introducida", "intuida", "inundada", "inutilizada", "invadida", "invalidada", "inventada", "inventariada", "invertida", "investida", "investigada", "invitada", "invocada", "involucionada", "inyectada", "ionizada", "ironizada", "irradiada", "irrespetada", "irrigada", "irritada", "irrogada", "irrumpida", "jactada", "jalada", "jaleada", "jalonada", "jaqueada", "jerarquizada", "jodida", "jorobada", "jubilada", "jugada", "juntada", "jurada", "juramentada", "justificada", "juzgada", "laborada", "labrada", "laburada", "lacada", "lacerada", "lactada", "ladeada", "ladrada", "lamentada", "lamida", "laminada", "languidecida", "lanzada", "lapidada", "laqueada", "largada", "lastimada", "lastrada", "latida", "laudada", "lavada", "legalizada", "legislada", "legitimada", "leída", "lesionada", "leudada", "levantada", "liada", "liberada", "liberalizada", "libertada", "librada", "licitada", "licuada", "liderizada", "lidiada", "ligada", "lijada", "limada", "limitada", "limpiada", "linchada", "liquidada", "litigada", "llagada", "llamada", "llegada", "llenada", "llevada", "llorada", "localizada", "lograda", "lubricada", "luchada", "lucida", "lucrada", "lustrada", "macerada", "machacada", "macheteada", "machucada", "madreada", "madrugada", "madurada", "magnetizada", "magnificada", "malacostumbrada", "malbaratada", "malcriada", "maleada", "malentendida", "malgastada", "malinterpretada", "malograda", "maltratada", "malversada", "mamada", "manchada", "mancillada", "mandada", "manejada", "mangada", "mangoneada", "manifestada", "maniobrada", "manipulada", "manoseada", "manteada", "mantenida", "manufacturada", "maquillada", "maquinada", "maravillada", "marcada", "marchitada", "mareada", "marginada", "maridada", "martillada", "martirizada", "masacrada", "masajeada", "mascada", "masificada", "masticada", "masturbada", "matada", "materializada", "matizada", "matriculada", "maximizada", "meada", "mecanografiada", "mechada", "mecida", "mediada", "mediatizada", "medicada", "medida", "meditada", "medrada", "mejorada", "mellada", "memorizada", "mencionada", "meneada", "menguada", "menoscabada", "menospreciada", "menstruada", "mensualizada", "mensurada", "mentada", "mentalizada", "mentida", "mercadeada", "mercantilizada", "merecida", "merendada", "mermada", "merodeada", "mesurada", "metamorfoseada", "metida", "mezclada", "migrada", "militada", "militarizada", "mimada", "mimetizada", "minada", "minimizada", "ministrada", "minusvalorada", "mirada", "mistificada", "mitificada", "mitigada", "modelada", "modernizada", "modificada", "modulada", "mofada", "mojada", "moldeada", "molestada", "molida", "monetizada", "monitorizada", "monopolizada", "montada", "morada", "moralizada", "mordida", "mordisqueada", "mortificada", "mosqueada", "mostrada", "motejada", "motivada", "movida", "movilizada", "mudada", "muestreada", "multada", "multiplicada", "munida", "murmurada", "mutada", "mutilada", "nacionalizada", "narcotizada", "narrada", "naufragada", "navegada", "necesitada", "negada", "negociada", "neutralizada", "ninguneada", "nivelada", "nombrada", "nominada", "noqueada", "normada", "normalizada", "notada", "notificada", "nutrida", "obcecada", "obedecida", "objetada", "objetivada", "obligada", "obliterada", "obnubilada", "obrada", "obsequiada", "observada", "obsesionada", "obstaculizada", "obstruida", "obtenida", "obturada", "obviada", "ocasionada", "ocluida", "ocultada", "ocupada", "odiada", "ofendida", "ofertada", "oficiada", "oficializada", "ofrecida", "ofrendada", "ofuscada", "oída", "ojeada", "olfateada", "olida", "olvidada", "omitida", "ondeada", "ondulada", "opacada", "operada", "opinada", "oprimida", "optada", "optimizada", "opuesta", "orada", "orbitada", "ordenada", "ordeñada", "organizada", "orientada", "originada", "orillada", "orinada", "ornada", "ornamentada", "orquestada", "osada", "oscilada", "oscurecida", "osificada", "ostentada", "otorgada", "ovacionada", "ovulada", "oxidada", "oxigenada", "pacificada", "pactada", "padecida", "paganizada", "paginada", "paladeada", "paliada", "palpada", "parada", "parafraseada", "paralizada", "parapetada", "parasitada", "parcelada", "parchada", "parcheada", "pareada", "parida", "parodiada", "parqueada", "participada", "particularizada", "partida", "pasada", "paseada", "pastoreada", "pataleada", "pateada", "patentada", "patentizada", "patinada", "patrullada", "pecada", "pedaleada", "pedida", "pegada", "peinada", "pellizcada", "penalizada", "penetrada", "pensada", "percatada", "percibida", "percutida", "perdida", "perdonada", "perdurada", "perecida", "peregrinada", "perfeccionada", "perfilada", "perforada", "perfumada", "pergeñada", "peritada", "perjudicada", "perjurada", "permeada", "permitida", "permutada", "pernoctada", "perpetrada", "perpetuada", "perseguida", "perseverada", "persistida", "personada", "personalizada", "personificada", "persuadida", "pertenecida", "pertrechada", "perturbada", "pervertida", "pervivida", "pescada", "petada", "peticionada", "picada", "picaneada", "picoteada", "pifiada", "pignorada", "pillada", "pilotada", "piloteada", "pincelada", "pinchada", "pintada", "pintarrajeada", "pinzada", "pirada", "pirateada", "pisada", "pisoteada", "pitada", "placida", "plagiada", "planchada", "planeada", "plantada", "planteada", "plasmada", "platicada", "plegada", "pluralizada", "podada", "poetizada", "polemizada", "politizada", "pololeada", "ponderada", "pontificada", "popularizada", "porfiada", "portada", "porteada", "posada", "posesionada", "posibilitada", "posicionada", "pospuesta", "posteada", "postergada", "postrada", "postulada", "potenciada", "practicada", "precarizada", "precedida", "preceptuada", "precintada", "precipitada", "precisada", "preconizada", "predicada", "predicha", "predispuesta", "predominada", "preferida", "prefigurada", "pregonada", "preguntada", "prejuzgada", "premiada", "prendada", "prendida", "preocupada", "preparada", "presagiada", "prescindida", "presenciada", "presentada", "presentida", "preservada", "presidida", "presionada", "prestada", "prestigiada", "presumida", "presurizada", "pretendida", "preterida", "prevalecida", "prevalida", "prevaricada", "prevenida", "prevista", "primada", "principiada", "pringada", "priorizada", "privatizada", "probada", "problematizada", "procedida", "procesada", "proclamada", "procreada", "procurada", "prodigada", "producida", "profanada", "proferida", "profesada", "profesionalizada", "profetizada", "profundizada", "programada", "progresada", "prohibida", "prohijada", "proletarizada", "proliferada", "prologada", "prolongada", "promediada", "prometida", "promocionada", "promovida", "promulgada", "pronosticada", "pronunciada", "propagada", "propalada", "propendida", "propiciada", "propinada", "proporcionada", "propuesta", "propugnada", "propulsada", "prorrateada", "prorrogada", "proseguida", "prosperada", "prostituida", "protegida", "protestada", "protocolizada", "provenida", "provocada", "proyectada", "psicoanalizada", "publicada", "publicitada", "puesta", "pugnada", "pujada", "pulida", "pulsada", "pululada", "pulverizada", "punada", "punteada", "puntuada", "puntualizada", "punzada", "purgada", "purificada", "puteada", "quebrada", "quebrantada", "quejada", "quemada", "querellada", "querida", "quintuplicada", "quitada", "racionada", "racionalizada", "radiada", "radicada", "radicalizada", "raída", "rajada", "ralentizada", "rapada", "rapeada", "raptada", "rascada", "rasgada", "rasguñada", "raspada", "rastreada", "rasurada", "ratificada", "rayada", "razonada", "reabierta", "reabsorbida", "reaccionada", "reactivada", "readaptada", "readmitida", "reafirmada", "reagrupada", "reajustada", "realimentada", "realizada", "realzada", "reanimada", "reanudada", "reaparecida", "rearmada", "reasumida", "reavivada", "rebajada", "rebalsada", "rebanada", "rebasada", "rebatida", "rebautizada", "rebelada", "reblandecida", "rebobinada", "rebosada", "rebotada", "rebozada", "rebuscada", "recabada", "recaída", "recalada", "recalcada", "recalentada", "recalificada", "recapacitada", "recapitulada", "recargada", "recatada", "recaudada", "receptada", "recetada", "rechazada", "recibida", "reciclada", "recitada", "reclamada", "reclinada", "reclutada", "recobrada", "recocida", "recogida", "recolectada", "recomendada", "recomenzada", "recompensada", "recompuesta", "reconcentrada", "reconciliada", "reconducida", "reconfortada", "reconocida", "reconquistada", "reconsiderada", "reconstituida", "reconstruida", "reconvenida", "reconvertida", "recopilada", "recordada", "recorrida", "recortada", "recreada", "recriminada", "recrudecida", "rectificada", "recubierta", "reculada", "recuperada", "recurrida", "recusada", "redactada", "redefinida", "redescubierta", "redimensionada", "redimida", "rediseñada", "redistribuida", "redituada", "redoblada", "redondeada", "reducida", "redundada", "reedificada", "reeditada", "reeducada", "reelaborada", "reembolsada", "reemplazada", "reencarnada", "reencauchada", "reencontrada", "reenganchada", "reenviada", "reescrita", "reestructurada", "reexaminada", "refaccionada", "referida", "refinada", "refinanciada", "reflejada", "reflexionada", "reflotada", "reforestada", "reformada", "reforzada", "refractada", "refrenada", "refrendada", "refrescada", "refrigerada", "refundida", "refutada", "regada", "regalada", "regañada", "regateada", "regenerada", "regentada", "regenteada", "regida", "regionalizada", "registrada", "reglada", "reglamentada", "regocijada", "regodeada", "regresada", "regulada", "regularizada", "regurgitada", "rehabilitada", "rehecha", "rehogada", "rehuida", "rehusada", "reída", "reinada", "reincidida", "reincorporada", "reingresada", "reiniciada", "reinsertada", "reinstalada", "reinstaurada", "reintegrada", "reinventada", "reinvertida", "reiterada", "reivindicada", "rejuvenecida", "relajada", "relamida", "relanzada", "relatada", "relativizada", "relegada", "releída", "relevada", "religada", "rellenada", "remachada", "remada", "remangada", "remarcada", "rematada", "remecida", "remediada", "rememorada", "remendada", "remitida", "remodelada", "remojada", "remolcada", "remontada", "removida", "remplazada", "renacida", "rendida", "renegada", "renegociada", "reñida", "renombrada", "renovada", "rentabilizada", "rentada", "renunciada", "reordenada", "reorganizada", "reorientada", "reparada", "repartida", "repasada", "repatriada", "repelida", "repensada", "repercutida", "repescada", "repetida", "repicada", "repintada", "replanteada", "replegada", "replicada", "repoblada", "reportada", "reporteada", "reposada", "repreguntada", "reprendida", "represada", "representada", "reprimida", "reprobada", "reprochada", "reproducida", "repudiada", "repuesta", "repugnada", "repuntada", "reputada", "requerida", "requisada", "resaltada", "resarcida", "resbalada", "rescatada", "rescindida", "resecada", "reseñada", "reservada", "reseteada", "resguardada", "residida", "resignada", "resistida", "resonada", "respaldada", "respetada", "respirada", "resplandecida", "respondida", "responsabilizada", "resquebrajada", "restablecida", "restada", "restaurada", "restituida", "restregada", "resucitada", "resuelta", "resumida", "resurgida", "retada", "retardada", "retenida", "retirada", "retocada", "retomada", "retorcida", "retornada", "retractada", "retraída", "retransmitida", "retrasada", "retratada", "retribuida", "retrotraída", "retumbada", "reunida", "reunificada", "reutilizada", "revalidada", "revalorizada", "revaluada", "revelada", "revendida", "reventada", "reverdecida", "reverenciada", "revertida", "revestida", "revirada", "revisada", "revitalizada", "revivida", "revocada", "revolcada", "revoloteada", "revolucionada", "revuelta", "ridiculizada", "rifada", "rimada", "rivalizada", "rizada", "robada", "robustecida", "rociada", "rodada", "rodeada", "rogada", "roída", "rondada", "rotada", "rota", "rotulada", "roturada", "rozada", "ruborizada", "rubricada", "rugida", "rumiada", "rumorada", "sabida", "saboreada", "saboteada", "sacada", "saciada", "sacralizada", "sacrificada", "sacudida", "saldada", "salpimentada", "salpullida", "saltada", "salteada", "saludada", "salvada", "salvaguardada", "sanada", "saneada", "sangrada", "santificada", "saqueada", "satanizada", "satirizada", "satisfecha", "sazonada", "secada", "seccionada", "secretada", "secuenciada", "secuestrada", "secundada", "sedimentada", "seducida", "segada", "segmentada", "segregada", "seguida", "seleccionada", "sembrada", "señalada", "sensibilizada", "sentada", "sentenciada", "sentida", "separada", "serenada", "serrada", "servida", "significada", "silenciada", "simbolizada", "simpatizada", "simplificada", "simulada", "sincerada", "sincronizada", "sindicada", "sindicalizada", "singularizada", "sintetizada", "sintonizada", "sistematizada", "situada", "sobada", "sobornada", "sobrada", "sobrecargada", "sobrecogida", "sobreentendida", "sobreestimada", "sobrellevada", "sobrentendida", "sobrepasada", "sobrepuesta", "sobresalida", "sobresaltada", "sobrestimada", "sobrevenida", "sobrevivida", "sobrevolada", "socavada", "socializada", "socorrida", "sodomizada", "sofocada", "sojuzgada", "solapada", "solicitada", "solidarizada", "solidificada", "soliviantada", "soltada", "solucionada", "solventada", "sombreada", "sometida", "sonada", "soñada", "sondeada", "sonreída", "sonrojada", "sopesada", "soplada", "soportada", "sorbida", "sorprendida", "sorteada", "sosegada", "soslayada", "sospechada", "sostenida", "suavizada", "subastada", "subcontratada", "subdividida", "subestimada", "subida", "sublevada", "sublimada", "subrayada", "subrogada", "subsanada", "subsidiada", "subsistida", "substraída", "subsumida", "subvertida", "subyugada", "succionada", "sucedida", "sucumbida", "sudada", "sufragada", "sufrida", "sugerida", "sugestionada", "suicidada", "sujetada", "sumada", "sumergida", "suministrada", "supeditada", "superada", "superpuesta", "supervisada", "suplantada", "suplicada", "suplida", "suprimida", "supuesta", "surcada", "surtida", "suscitada", "suspendida", "suspirada", "sustanciada", "sustantivada", "sustentada", "sustituida", "sustraída", "susurrada", "suturada", "tabulada", "tachada", "talada", "taladrada", "tallada", "tambaleada", "tamizada", "tañida", "tanteada", "tapada", "tapizada", "taponada", "tarareada", "tardada", "tasada", "tatuada", "tecleada", "tejida", "telefoneada", "televisada", "temida", "templada", "tendida", "tenida", "tensada", "tentada", "teorizada", "terciada", "tergiversada", "terminada", "territorializada", "testada", "testeada", "testificada", "testimoniada", "tildada", "timada", "timbrada", "tinturada", "tipeada", "tipificada", "tirada", "tiranizada", "tironeada", "tiroteada", "titubeada", "tiznada", "tocada", "tolerada", "tomada", "tonificada", "topada", "toqueteada", "torcida", "toreada", "tornada", "tornasolada", "torneada", "torpedeada", "torturada", "tosida", "tostada", "totalizada", "trabada", "trabajada", "traducida", "traficada", "tragada", "traicionada", "traída", "trajinada", "tramada", "tramitada", "trancada", "tranquilizada", "transcendida", "transcurrida", "transferida", "transfigurada", "transformada", "transfundida", "transgredida", "transigida", "transitada", "transliterada", "translucida", "transmitida", "transmutada", "transparentada", "transpirada", "transportada", "transpuesta", "trasegada", "trasgredida", "trasladada", "traslapada", "traslucida", "trasnochada", "traspapelada", "traspasada", "trasplantada", "traspuesta", "trasquilada", "trasteada", "trastocada", "trastornada", "trasvasada", "tratada", "trazada", "trenzada", "trepada", "tributada", "trincada", "triplicada", "triturada", "triunfada", "trivializada", "trocada", "troceada", "tronada", "tronchada", "truncada", "tumbada", "tuneada", "turbada", "turnada", "tutelada", "ufanada", "ultimada", "uncida", "ungida", "unida", "universalizada", "untada", "urbanizada", "urdida", "usada", "usufructuada", "usurpada", "utilizada", "vacada", "vaciada", "vacilada", "vacunada", "vagada", "validada", "valida", "valorada", "valorizada", "valuada", "vanagloriada", "vandalizada", "vaporizada", "variada", "vaticinada", "vedada", "vehiculada", "vejada", "velada", "vencida", "vendada", "vendida", "venerada", "vengada", "ventilada", "veraneada", "verbalizada", "verificada", "versada", "versionada", "vertebrada", "vertida", "vestida", "vetada", "viabilizada", "viajada", "vibrada", "victimada", "victimizada", "vigilada", "vigorizada", "vilipendiada", "vindicada", "violada", "violentada", "virada", "visada", "visibilizada", "visitada", "vislumbrada", "vista", "visualizada", "vitoreada", "vitrificada", "vituperada", "vivida", "vivificada", "vocalizada", "voceada", "vociferada", "volada", "volatilizada", "volcada", "volteada", "vomitada", "votada", "vuelta", "vulcanizada", "vulgarizada", "vulnerada", "yuxtapuesta", "zafada", "zambullida", "zampada", "zanjada", "zarandeada", "zarpada", "zozobrada", "zumbada", "zurcida", "zurrada", "abajados", "abalanzados", "abaleados", "abandonados", "abaratados", "abarcados", "abarrotados", "abastecidos", "abatidos", "abdicados", "abiertos", "abismados", "abjurados", "ablandados", "abocados", "abochornados", "abofeteados", "abolidos", "abollados", "abombados", "abominados", "abonados", "abordados", "aborrecidos", "aborregados", "abortados", "abotonados", "abrasados", "abrazados", "abrevados", "abreviados", "abrigados", "abrochados", "abrogados", "abroquelados", "abrumados", "absorbidos", "abstenidos", "abstraídos", "absueltos", "abucheados", "abultados", "abundados", "aburguesados", "aburridos", "abusados", "acabados", "acallados", "acalorados", "acaparados", "acariciados", "acarreados", "acatados", "acaudillados", "accedidos", "accionados", "acechados", "aceitados", "acelerados", "acentuados", "aceptados", "acerados", "acercados", "acertados", "achacados", "achantados", "achatados", "achicados", "acicalados", "acidificados", "aclarados", "aclimatados", "acobardados", "acodados", "acogidos", "acojonados", "acometidos", "acomodados", "acompañados", "acompasados", "acongojados", "aconsejados", "acontecidos", "acopiados", "acoplados", "acordados", "acordonados", "acorralados", "acortados", "acosados", "acostados", "acostumbrados", "acotados", "acrecentados", "acreditados", "acrisolados", "activados", "actuados", "acuchillados", "acuciados", "acudidos", "acuerpados", "acumulados", "acunados", "acuñados", "acurrucados", "acusados", "adaptados", "adecentados", "adelantados", "adelgazados", "adentrados", "adeudados", "adheridos", "adicionados", "adiestrados", "adivinados", "adjetivados", "adjudicados", "adjuntados", "administrados", "admirados", "admitidos", "adoctrinados", "adolecidos", "adoptados", "adorados", "adormecidos", "adornados", "adquiridos", "aducidos", "adueñados", "adulados", "adulterados", "advertidos", "afanados", "afeados", "afectados", "afeitados", "aferrados", "afianzados", "afinados", "afirmados", "afligidos", "aflorados", "afrentados", "afrontados", "agachados", "agarrados", "agarrotados", "agasajados", "agenciados", "agigantados", "agilizados", "agitados", "aglutinados", "agobiados", "agolpados", "agonizados", "agostados", "agotados", "agradados", "agradecidos", "agrandados", "agravados", "agraviados", "agredidos", "agregados", "agriados", "agrietados", "agrupados", "aguados", "aguantados", "aguardados", "agudizados", "aguijoneados", "agujereados", "aguzados", "ahogados", "ahondados", "ahorcados", "ahorrados", "ahuecados", "ahuyentados", "aireados", "aislados", "ajustados", "ajusticiados", "alabados", "alagados", "alambrados", "alardeados", "alargados", "alarmados", "albergados", "alborotados", "alcanzados", "aleccionados", "alegados", "alegrados", "alejados", "alentados", "alertados", "alfabetizados", "alfombrados", "aliados", "alienados", "aligerados", "alimentados", "aliñados", "alineados", "alisados", "alistados", "aliviados", "alivianados", "allanados", "almacenados", "almorzados", "alojados", "alquilados", "alterados", "alternados", "alucinados", "aludidos", "alumbrados", "alzados", "amados", "amaestrados", "amagados", "amainados", "amalgamados", "amamantados", "amansados", "amargados", "amarrados", "amasados", "ambicionados", "amedrentados", "amenazados", "amenizados", "ameritados", "ametrallados", "amilanados", "aminorados", "amnistiados", "amoldados", "amonestados", "amontonados", "amordazados", "amortajados", "amortiguados", "amortizados", "amotinados", "amparados", "ampayados", "ampliados", "amplificados", "amputados", "amueblados", "añadidos", "analizados", "anatematizados", "andados", "anegados", "anestesiados", "anexados", "anexionados", "anhelados", "anidados", "anillados", "animados", "aniquilados", "anisados", "añorados", "anotados", "anoticiados", "ansiados", "antecedidos", "antepuestos", "anticipados", "antojados", "anudados", "anulados", "anunciados", "apabullados", "apachurrados", "apaciguados", "apadrinados", "apagados", "apalancados", "apaleados", "apañados", "apantallados", "aparcados", "apareados", "aparecidos", "aparentados", "apartados", "apeados", "apedreados", "apelados", "apellidados", "apelmazados", "apercibidos", "apersonados", "apestados", "apetecidos", "apiadados", "apilados", "apiñados", "apisonados", "aplacados", "aplanados", "aplastados", "aplaudidos", "aplazados", "aplicados", "apoderados", "apoltronados", "aporreados", "aportados", "aposentados", "apostados", "apostatados", "apostillados", "apoyados", "apreciados", "aprehendidos", "apremiados", "aprendidos", "apresados", "apresurados", "apretados", "apretujados", "aprisionados", "aprobados", "aprovechados", "aprovisionados", "aproximados", "apuñalados", "apuñaleados", "apuntados", "apuntalados", "apuntillados", "apurados", "aquejados", "aquietados", "aquilatados", "arañados", "arbitrados", "archivados", "arengados", "argüidos", "argumentados", "armados", "armonizados", "aromatizados", "arqueados", "arrancados", "arrasados", "arrastrados", "arreados", "arrebatados", "arreciados", "arreglados", "arrellanados", "arremangados", "arremetidos", "arrendados", "arrepentidos", "arrestados", "arriados", "arribados", "arriesgados", "arrimados", "arrinconados", "arrodillados", "arrogados", "arrojados", "arrollados", "arropados", "arruinados", "arrullados", "articulados", "asados", "asaltados", "ascendidos", "aseados", "asechados", "asediados", "asegurados", "asemejados", "asentados", "asentidos", "aserrados", "asesinados", "asesorados", "asestados", "aseverados", "asfixiados", "asidos", "asignados", "asilados", "asimilados", "asistidos", "asolados", "asoleados", "asomados", "asombrados", "aspirados", "astillados", "asumidos", "asustados", "atacados", "atados", "atajados", "atarantados", "atascados", "atemorizados", "atemperados", "atenazados", "atendidos", "atenidos", "atentados", "atenuados", "aterrados", "aterrorizados", "atesorados", "atestiguados", "atiborrados", "atisbados", "atizados", "atomizados", "atontados", "atorados", "atormentados", "atornillados", "atosigados", "atracados", "atragantados", "atraídos", "atrancados", "atrapados", "atrasados", "atravesados", "atrevidos", "atribuidos", "atrincherados", "atrofiados", "atropellados", "aturdidos", "auditados", "augurados", "aumentados", "aunados", "aupados", "auscultados", "ausentados", "autenticados", "autentificados", "autodefinidos", "autoeditados", "automatizados", "autorizados", "autorregulados", "auxiliados", "avalados", "avanzados", "avasallados", "avenidos", "aventados", "aventajados", "aventurados", "averiados", "averiguados", "avezados", "avisados", "avispados", "avistados", "avivados", "avizorados", "avocados", "ayudados", "azotados", "azuzados", "babeados", "bailados", "bajados", "balaceados", "balanceados", "bañados", "banalizados", "bancados", "bandeados", "barajados", "barridos", "basados", "bastardeados", "basureados", "batallados", "bateados", "batidos", "bautizados", "beatificados", "bebidos", "beneficiados", "besados", "bifurcados", "birlados", "blandidos", "blanqueados", "blasfemados", "blindados", "bloqueados", "boicoteados", "bombardeados", "bombeados", "bonificados", "bordeados", "borrados", "borroneados", "bosquejados", "bostezados", "botados", "boxeados", "bregados", "brillados", "brincados", "brindados", "bromeados", "brotados", "bruñidos", "buceados", "burlados", "buscados", "cabeceados", "cabidos", "cabildeados", "cabreados", "cacareados", "cachados", "cacheados", "cacheteados", "caducados", "cagados", "calados", "calculados", "caldeados", "calefaccionados", "calendarizados", "calentados", "calibrados", "calificados", "caligrafiados", "callados", "calmados", "calumniados", "calzados", "cambiados", "caminados", "camuflados", "canalizados", "cancelados", "canjeados", "cansados", "cantados", "capados", "capeados", "capitalizados", "capitulados", "captados", "capturados", "caracterizados", "carburados", "carcomidos", "cardados", "careados", "carecidos", "cargados", "caricaturizados", "cartografiados", "cascados", "castigados", "castrados", "catados", "catalizados", "catalogados", "catapultados", "cateados", "categorizados", "causados", "cauterizados", "cautivados", "cavados", "cavilados", "cazados", "cebados", "cedidos", "cegados", "cejados", "celebrados", "cenados", "ceñidos", "censurados", "centrifugados", "centuplicados", "cepillados", "cercados", "cercenados", "cerciorados", "cernidos", "cerrados", "cesados", "chafados", "chamuscados", "chantajeados", "chapados", "charlados", "chateados", "chequeados", "chiflados", "chillados", "chingados", "chirriados", "chivados", "chocados", "chorreados", "choteados", "chupados", "chutados", "cicatrizados", "cifrados", "cimentados", "cincelados", "circulados", "circuncidados", "circundados", "citados", "clamados", "clarificados", "clasificados", "claudicados", "clausurados", "clavados", "clicados", "clonados", "coaccionados", "coadyuvados", "coagulados", "coaligados", "coartados", "cobijados", "cobrados", "cocidos", "cocinados", "codeados", "codiciados", "codificados", "codirigidos", "coexistidos", "cofinanciados", "cogidos", "cohabitados", "cohibidos", "coincididos", "colaborados", "colacionados", "colados", "colapsados", "coleccionados", "colectados", "colectivizados", "colgados", "colisionados", "colmados", "colocados", "colonizados", "coloreados", "columpiados", "combatidos", "combinados", "comentados", "comenzados", "comerciados", "comercializados", "cometidos", "comidos", "comisionados", "compactados", "compadecidos", "compaginados", "comparados", "comparecidos", "compartidos", "compatibilizados", "compelidos", "compendiados", "compenetrados", "compensados", "compilados", "complacidos", "complementados", "completados", "complotados", "comportados", "comprados", "comprendidos", "comprimidos", "comprobados", "comprometidos", "compuestos", "compulsados", "computados", "comulgados", "comunicados", "concatenados", "concebidos", "concedidos", "concelebrados", "concentrados", "conceptuados", "conceptualizados", "concertados", "concienciados", "concientizados", "conciliados", "concitados", "concluidos", "concordados", "concretados", "concretizados", "conculcados", "concursados", "condenados", "condensados", "condicionados", "condimentados", "condolidos", "condonados", "conducidos", "conectados", "conexionados", "confabulados", "confeccionados", "conferidos", "confesados", "confiados", "configurados", "confirmados", "confiscados", "confluidos", "conformados", "confortados", "confrontados", "confundidos", "congeniados", "congestionados", "congratulados", "congregados", "conjeturados", "conjugados", "conjuntados", "conjurados", "conllevados", "conmemorados", "conminados", "conmocionados", "conmovidos", "conmutados", "connotados", "conquistados", "consagrados", "conseguidos", "consensuados", "consentidos", "conservados", "considerados", "consignados", "consistidos", "consolados", "consolidados", "conspirados", "constados", "constatados", "constelados", "constitucionalizados", "constituidos", "constreñidos", "construidos", "consultados", "consumados", "consumidos", "contabilizados", "contactados", "contados", "contagiados", "contemplados", "contendidos", "contenidos", "contentados", "contestados", "contextualizados", "continuados", "contorneados", "contraatacados", "contrabandeados", "contradichos", "contrahechos", "contraídos", "contrapesados", "contrapuestos", "contrariados", "contrarrestados", "contrastados", "contratados", "contravenidos", "contribuidos", "contristados", "controlados", "convalidados", "convencidos", "convenidos", "convergidos", "conversados", "convertidos", "convidados", "convividos", "convocados", "convulsionados", "cooperados", "cooptados", "coordinados", "copados", "copiados", "coproducidos", "copulados", "coqueteados", "corchados", "coreados", "coreografiados", "corneados", "coronados", "corporizados", "corregidos", "correlacionados", "correspondidos", "correteados", "corridos", "corroborados", "corroídos", "corrompidos", "cortados", "cortejados", "cosechados", "cosidos", "cosificados", "costados", "costeados", "cotejados", "cotizados", "creados", "creídos", "criados", "cribados", "criminalizados", "crispados", "cristalizados", "cristianizados", "criticados", "cronometrados", "crucificados", "crujidos", "cruzados", "cuadriplicados", "cuadruplicados", "cuajados", "cuantificados", "cuarteados", "cubiertos", "cuestionados", "cuidados", "culeados", "culminados", "culpabilizados", "culpados", "cultivados", "culturizados", "cumplidos", "cumplimentados", "cundidos", "curados", "curioseados", "currados", "cursados", "curvados", "custodiados", "dados", "dañados", "danzados", "datados", "dateados", "debatidos", "debidos", "debilitados", "debitados", "debutados", "decaídos", "decantados", "decapitados", "decepcionados", "decididos", "declamados", "declarados", "declinados", "decodificados", "decolorados", "decomisados", "decrecidos", "decretados", "dedicados", "deducidos", "defecados", "defendidos", "defenestrados", "deferidos", "definidos", "deformados", "defraudados", "degenerados", "deglutidos", "degollados", "degradados", "degustados", "deificados", "dejados", "delatados", "delegados", "deleitados", "deletreados", "deliberados", "delimitados", "delineados", "delinquidos", "demandados", "demarcados", "demediados", "demeritados", "democratizados", "demolidos", "demonizados", "demorados", "demostrados", "demudados", "denegados", "denigrados", "denominados", "denostados", "denotados", "denunciados", "deparados", "departidos", "dependidos", "depilados", "deplorados", "deportados", "depositados", "depreciados", "depredados", "deprimidos", "depuestos", "depurados", "derechizados", "derivados", "derogados", "derramados", "derretidos", "derribados", "derrocados", "derrochados", "derrotados", "derruidos", "derrumbados", "desabrochados", "desacatados", "desacelerados", "desacomodados", "desaconsejados", "desacoplados", "desacralizados", "desacreditados", "desactivados", "desafiados", "desafinados", "desaguados", "desahogados", "desairados", "desajustados", "desalentados", "desalineados", "desalojados", "desandados", "desangrados", "desanimados", "desaparecidos", "desapegados", "desaprendidos", "desaprobados", "desaprovechados", "desarmados", "desarraigados", "desarreglados", "desarrollados", "desarticulados", "desaseados", "desasidos", "desasosegados", "desatados", "desatendidos", "desautorizados", "desayunados", "desbancados", "desbandados", "desbaratados", "desbarrancados", "desbastados", "desbloqueados", "desbocados", "desbordados", "desbrozados", "descabalgados", "descabezados", "descaderados", "descalabrados", "descalificados", "descansados", "descargados", "descarriados", "descarrilados", "descartados", "descascarados", "descascarillados", "descendidos", "descentrados", "descifrados", "descocidos", "descodificados", "descojonados", "descolgados", "descolocados", "descolonizados", "descompensados", "descomprimidos", "descompuestos", "desconectados", "desconfiados", "descongelados", "desconocidos", "descontados", "descontaminados", "descontextualizados", "descontinuados", "desconvocados", "descorazonados", "descorchados", "descorridos", "descosidos", "descoyuntados", "descreídos", "descristianizados", "descuadrados", "descuartizados", "descubiertos", "descuidados", "desdeñados", "desdibujados", "desdichos", "desdoblados", "deseados", "desecados", "desechados", "desembarazados", "desembarcados", "desembocados", "desembolsados", "desempacados", "desempañados", "desempaquetados", "desempeñados", "desempolvados", "desenamorados", "desencadenados", "desencajados", "desencarnados", "desenchufados", "desenfocados", "desenfundados", "desenganchados", "desengrasados", "desenmascarados", "desenredados", "desenrollados", "desentendidos", "desenterrados", "desentonados", "desentrañados", "desenvainados", "desenvueltos", "desequilibrados", "desertados", "desestabilizados", "desestimados", "desfalcados", "desfallecidos", "desfigurados", "desfondados", "desgajados", "desgañitados", "desgarrados", "desgastados", "desglosados", "desgobernados", "desgranados", "desguazados", "deshechos", "desheredados", "deshidratados", "deshilachados", "deshojados", "deshonrados", "deshuesados", "deshumanizados", "designados", "desilusionados", "desincentivados", "desinfectados", "desinflados", "desinflamados", "desinformados", "desinhibidos", "desinstalados", "desintegrados", "desintoxicados", "desistidos", "desjarretados", "deslegitimados", "desleídos", "desligados", "deslindados", "deslizados", "deslucidos", "deslumbrados", "desmadrados", "desmalezados", "desmantelados", "desmaquillados", "desmarcados", "desmayados", "desmejorados", "desmembrados", "desmentidos", "desmenuzados", "desmerecidos", "desmigados", "desmitificados", "desmoldados", "desmontados", "desmoralizados", "desmoronados", "desmotivados", "desmovilizados", "desnaturalizados", "desnivelados", "desnucados", "desnudados", "desobedecidos", "desobligados", "desoídos", "desollados", "desorganizados", "desorientados", "despachados", "desparasitados", "desparecidos", "desparramados", "despedazados", "despedidos", "despegados", "despeinados", "despejados", "despellejados", "despeñados", "despenalizados", "desperdiciados", "despersonalizados", "despertados", "despilfarrados", "despintados", "despiojados", "despistados", "desplazados", "desplegados", "desplomados", "desplumados", "despojados", "despolitizados", "desposados", "desposeídos", "despotricados", "despreciados", "desprendidos", "despreocupados", "desprestigiados", "desprogramados", "despulpados", "despuntados", "desquiciados", "desquitados", "destacados", "destapados", "desteñidos", "desterrados", "destetados", "destilados", "destituidos", "destrabados", "destripados", "destronados", "destrozados", "destruidos", "desunidos", "desvalijados", "desvalorizados", "desvanecidos", "desvelados", "desvestidos", "desviados", "desvinculados", "desvirtuados", "desvividos", "detectados", "detenidos", "detentados", "deteriorados", "determinados", "detestados", "detonados", "devaluados", "devanados", "devastados", "develados", "devengados", "devenidos", "devorados", "devueltos", "diagnosticados", "diagramados", "dializados", "dialogados", "dibujados", "dichos", "dictados", "dictaminados", "diezmados", "difamados", "diferenciados", "diferidos", "dificultados", "difuminados", "difundidos", "digeridos", "digitados", "dignados", "dignificados", "dilapidados", "dilatados", "diligenciados", "dilucidados", "diluidos", "dimensionados", "dimitidos", "dinamitados", "dinamizados", "dirimidos", "discernidos", "disciplinados", "discontinuados", "discrepados", "discriminados", "disculpados", "discurridos", "discutidos", "diseccionados", "diseminados", "diseñados", "disentidos", "disertados", "disfrazados", "disfrutados", "disgregados", "disgustados", "disimulados", "disipados", "dislocados", "disminuidos", "disociados", "dispensados", "dispersados", "dispuestos", "disputados", "distados", "distanciados", "distendidos", "distinguidos", "distorsionados", "distraídos", "distribuidos", "disuadidos", "disueltos", "divagados", "diversificados", "divertidos", "divididos", "divinizados", "divisados", "divorciados", "divulgados", "doblados", "doblegados", "doctorados", "documentados", "dogmatizados", "dolidos", "domados", "domesticados", "dominados", "donados", "dopados", "dormidos", "dosificados", "dotados", "dragados", "dramatizados", "drenados", "drogados", "duchados", "dudados", "dulcificados", "duplicados", "durados", "echados", "eclipsados", "eclosionados", "economizados", "ecualizados", "edificados", "editados", "educados", "efectuados", "ejecutados", "ejemplificados", "ejercidos", "ejercitados", "elaborados", "electrizados", "electrocutados", "elevados", "elididos", "eliminados", "elogiados", "elucubrados", "eludidos", "emanados", "emancipados", "embadurnados", "embalados", "embalsamados", "embanderados", "embarcados", "embargados", "embarrados", "embarrancados", "embaucados", "embebidos", "embelesados", "embellecidos", "embestidos", "embolados", "embolsados", "emborrachados", "emborronados", "emboscados", "embotados", "embriagados", "embrollados", "embrutecidos", "embuchados", "emergidos", "emigrados", "emitidos", "emocionados", "empacados", "empachados", "empadronados", "empalados", "empalmados", "empanados", "empañados", "empantanados", "empapelados", "empaquetados", "emparejados", "empastados", "empatados", "empecinados", "empeñados", "empeorados", "empequeñecidos", "emperrados", "empezados", "empinados", "emplazados", "empleados", "empobrecidos", "empoderados", "empollados", "empolvados", "emponzoñados", "emprendidos", "empujados", "empuñados", "emputados", "emulados", "emulsionados", "enajenados", "enaltecidos", "enamorados", "enarbolados", "enardecidos", "encabezados", "encabritados", "encabronados", "encadenados", "encajados", "encajonados", "encallados", "encamados", "encaminados", "encandilados", "encanecidos", "encañonados", "encantados", "encaprichados", "encapsulados", "encarados", "encaramados", "encarecidos", "encargados", "encariñados", "encarnados", "encarrilados", "encartados", "encasillados", "encasquetados", "encasquillados", "encastrados", "encausados", "encauzados", "enceguecidos", "encendidos", "encerados", "encerrados", "encharcados", "enchufados", "encimados", "encogidos", "encolados", "encolerizados", "encolumnados", "encomendados", "enconados", "encontrados", "encordados", "encrespados", "encuadrados", "encubiertos", "encuerados", "encumbrados", "enderezados", "endeudados", "endilgados", "endiosados", "endosados", "endulzados", "endurecidos", "enemistados", "energizados", "enervados", "enfadados", "enfangados", "enfatizados", "enfermados", "enfiestados", "enfilados", "enflaquecidos", "enfocados", "enfrascados", "enfrentados", "enfriados", "enfurecidos", "engalanados", "engañados", "enganchados", "engarzados", "engatusados", "engendrados", "englobados", "engolosinados", "engordados", "engranados", "engrandecidos", "engrasados", "engreídos", "engrosados", "engullidos", "enharinados", "enhebrados", "enjuagados", "enjugados", "enjuiciados", "enlazados", "enlistados", "enlodados", "enloquecidos", "enlozados", "enlutados", "enmarañados", "enmascarados", "enmendados", "enmohecidos", "enmudecidos", "ennegrecidos", "ennoblecidos", "enorgullecidos", "enrarecidos", "enredados", "enripiados", "enriquecidos", "enrocados", "enrojecidos", "enrolados", "enrollados", "enroscados", "enrumbados", "ensalzados", "ensamblados", "ensañados", "ensanchados", "ensartados", "ensayados", "ensebados", "enseñados", "enseñoreados", "ensillados", "ensoberbecidos", "ensogados", "ensombrecidos", "ensoñados", "ensordecidos", "ensuciados", "entablados", "entallados", "entendidos", "enterados", "enternecidos", "enterrados", "entibiados", "entintados", "entonados", "entorpecidos", "entrados", "entrampados", "entrañados", "entreabiertos", "entrecomillados", "entrecruzados", "entregados", "entrelazados", "entremetidos", "entremezclados", "entrenados", "entresacados", "entretejidos", "entretenidos", "entreverados", "entrevistados", "entristecidos", "entrometidos", "entronados", "entroncados", "entronizados", "entumecidos", "enturbiados", "entusiasmados", "enumerados", "enunciados", "envainados", "envalentonados", "envanecidos", "envasados", "envejecidos", "envenenados", "envestidos", "enviados", "enviciados", "envidiados", "envilecidos", "enviudados", "envueltos", "enzarzados", "equilibrados", "equiparados", "equivocados", "erigidos", "erizados", "erogados", "erosionados", "erotizados", "erradicados", "errados", "esbozados", "escabullidos", "escalados", "escaldados", "escalfados", "escamados", "escamoteados", "escampados", "escandalizados", "escaneados", "escapados", "escaqueados", "escarbados", "escarchados", "escarmentados", "escarnecidos", "escaseados", "escatimados", "escenificados", "escindidos", "esclarecidos", "esclavizados", "escocidos", "escogidos", "escolarizados", "escoltados", "escondidos", "escorados", "escrachados", "escritos", "escrutados", "escuchados", "escudados", "escudriñados", "esculpidos", "escupidos", "escurridos", "esforzados", "esfumados", "esgrimidos", "esmerados", "esmerilados", "espabilados", "espaciados", "españolizados", "espantados", "esparcidos", "especificados", "especulados", "esperados", "espesados", "espetados", "espiados", "espigados", "espinados", "espirados", "espiritualizados", "espoleados", "espolvoreados", "esponjados", "esponsorizados", "esposados", "esquematizados", "esquiados", "esquilados", "esquilmados", "esquivados", "estabilizados", "establecidos", "estacionados", "estafados", "estallados", "estampados", "estancados", "estaqueados", "estatizados", "estatuidos", "esterificados", "esterilizados", "estigmatizados", "estilizados", "estimados", "estimulados", "estipulados", "estirados", "estorbados", "estornudados", "estragados", "estrangulados", "estrechados", "estrellados", "estremecidos", "estrenados", "estresados", "estriados", "estropeados", "estructurados", "estrujados", "estudiados", "eternizados", "etiquetados", "evacuados", "evadidos", "evaluados", "evangelizados", "evaporados", "evidenciados", "eviscerados", "evitados", "evocados", "evolucionados", "exacerbados", "exagerados", "exaltados", "examinados", "exasperados", "excarcelados", "excavados", "excedidos", "exceptuados", "excitados", "exclamados", "excluidos", "excretados", "exculpados", "excusados", "execrados", "exhalados", "exhibidos", "exhortados", "exhumados", "exigidos", "exilados", "eximidos", "existidos", "exonerados", "exorcizados", "expandidos", "expedidos", "expedientados", "expelidos", "expendidos", "experimentados", "expiados", "expirados", "explayados", "explicados", "explicitados", "explorados", "explosionados", "explotados", "expoliados", "exportados", "expresados", "exprimidos", "expropiados", "expuestos", "expulsados", "expurgados", "extendidos", "exteriorizados", "exterminados", "externados", "externalizados", "extinguidos", "extirpados", "extorsionados", "extractados", "extraditados", "extraídos", "extralimitados", "extrañados", "extrapolados", "extraviados", "extremados", "extruidos", "exudados", "eyaculados", "eyectados", "fabricados", "fabulados", "facilitados", "facturados", "facultados", "fagocitados", "fajados", "fallados", "fallecidos", "falsados", "falseados", "falsificados", "familiarizados", "fantaseados", "fascinados", "fastidiados", "fatigados", "favorecidos", "fecundados", "felicitados", "feminizados", "fenecidos", "fermentados", "fertilizados", "festejados", "fiados", "fichados", "fidelizados", "figurados", "fijados", "filmados", "filosofados", "filtrados", "finalizados", "financiados", "fincados", "fingidos", "finiquitados", "firmados", "fiscalizados", "fisurados", "flagelados", "flameados", "flanqueados", "flaqueados", "fletados", "flexibilizados", "flexionados", "flipados", "floreados", "florecidos", "flotados", "fluctuados", "focalizados", "fogueados", "foliados", "follados", "fomentados", "fondeados", "forcejeados", "forestados", "forjados", "formados", "formalizados", "formateados", "formulados", "fornicados", "forrados", "fortalecidos", "forzados", "fotocopiados", "fotografiados", "fracasados", "fraccionados", "fracturados", "fragmentados", "fraguados", "franqueados", "frecuentados", "fregados", "frenados", "fresados", "friccionados", "frotados", "fructificados", "fruncidos", "fugados", "fulminados", "fumados", "fumigados", "funcionados", "fundados", "fundamentados", "fundidos", "fungidos", "fusilados", "fusionados", "fustigados", "gafados", "ganados", "gangrenados", "garabateados", "garantidos", "garantizados", "garridos", "gaseados", "gastados", "gemidos", "generados", "generalizados", "gerenciados", "germinados", "gestados", "gestionados", "girados", "glorificados", "glosados", "gobernados", "goleados", "golpeados", "gozados", "grabados", "graduados", "graficados", "granjeados", "grapados", "gratificados", "gravados", "gravitados", "gritados", "gruñidos", "guardados", "guarecidos", "guarnecidos", "guerreados", "guiados", "guillotinados", "guiñados", "guindados", "guisados", "gustados", "habilitados", "habitados", "habituados", "hablados", "halados", "halagados", "hallados", "hartados", "hechizados", "hechos", "helenizados", "henchidos", "hendidos", "heredados", "heridos", "hermanados", "herrados", "hervidos", "hibernados", "hibridados", "hidratados", "higienizados", "hilados", "hilvanados", "hincados", "hinchados", "hipnotizados", "hipotecados", "historiados", "hojeados", "holgados", "hollados", "homenajeados", "homogeneizados", "homologados", "honrados", "horadados", "horneados", "horrorizados", "hospedados", "hostigados", "hostilizados", "huidos", "humanados", "humanizados", "humectados", "humedecidos", "humillados", "hundidos", "hurgados", "hurtados", "ideados", "idealizados", "identificados", "ideologizados", "idiotizados", "idolatrados", "ignorados", "igualados", "ilegalizados", "iluminados", "ilusionados", "ilustrados", "imaginados", "imbricados", "imitados", "impactados", "impartidos", "impedidos", "impelidos", "imperados", "impermeabilizados", "implantados", "implementados", "implicados", "implorados", "importados", "importunados", "imposibilitados", "impresionados", "improvisados", "impuestos", "impugnados", "impulsados", "imputados", "inaugurados", "incautados", "incendiados", "incentivados", "incinerados", "incitados", "inclinados", "incluidos", "incoados", "incomodados", "incorporados", "incrementados", "increpados", "incriminados", "incubados", "inculcados", "inculpados", "incumplidos", "incurridos", "incursionados", "indagados", "indemnizados", "independizados", "indexados", "indicados", "indigestados", "indignados", "indispuestos", "individuados", "inducidos", "indultados", "inervados", "infamados", "infartados", "infectados", "inferidos", "inficionados", "infiltrados", "inflados", "inflamados", "infligidos", "influenciados", "influidos", "informados", "infravalorados", "infringidos", "infundidos", "ingeniados", "ingeridos", "ingresados", "inhabilitados", "inhalados", "inhibidos", "inhumados", "iniciados", "inicializados", "injertados", "injuriados", "inmigrados", "inmiscuidos", "inmolados", "inmortalizados", "inmovilizados", "inmunizados", "innovados", "inoculados", "inquietados", "inquiridos", "insensibilizados", "insertados", "insinuados", "insistidos", "inspeccionados", "inspirados", "instados", "instalados", "instaurados", "instigados", "instituidos", "instruidos", "instrumentados", "instrumentalizados", "insuflados", "insultados", "insumidos", "integrados", "intelectualizados", "intensificados", "intentados", "interactuados", "intercalados", "intercambiados", "intercedidos", "interceptados", "interesados", "interferidos", "interiorizados", "intermediados", "internacionalizados", "internalizados", "interpelados", "interpolados", "interpretados", "interpuestos", "interrogados", "interrumpidos", "intervenidos", "intimados", "intimidados", "intitulados", "intoxicados", "intrigados", "introducidos", "intuidos", "inundados", "inutilizados", "invadidos", "invalidados", "inventados", "inventariados", "invertidos", "investidos", "investigados", "invitados", "invocados", "involucionados", "inyectados", "ionizados", "ironizados", "irradiados", "irrespetados", "irrigados", "irritados", "irrogados", "irrumpidos", "jactados", "jalados", "jaleados", "jalonados", "jaqueados", "jerarquizados", "jodidos", "jorobados", "jubilados", "jugados", "juntados", "jurados", "juramentados", "justificados", "juzgados", "laborados", "labrados", "laburados", "lacados", "lacerados", "lactados", "ladeados", "ladrados", "lamentados", "lamidos", "laminados", "languidecidos", "lanzados", "lapidados", "laqueados", "largados", "lastimados", "lastrados", "latidos", "laudados", "lavados", "legalizados", "legislados", "legitimados", "leídos", "lesionados", "leudados", "levantados", "liados", "liberados", "liberalizados", "libertados", "librados", "licitados", "licuados", "liderizados", "lidiados", "ligados", "lijados", "limados", "limitados", "limpiados", "linchados", "liquidados", "litigados", "llagados", "llamados", "llegados", "llenados", "llevados", "llorados", "localizados", "logrados", "lubricados", "luchados", "lucidos", "lucrados", "lustrados", "macerados", "machacados", "macheteados", "machucados", "madreados", "madrugados", "madurados", "magnetizados", "magnificados", "malacostumbrados", "malbaratados", "malcriados", "maleados", "malentendidos", "malgastados", "malinterpretados", "malogrados", "maltratados", "malversados", "mamados", "manchados", "mancillados", "mandados", "manejados", "mangados", "mangoneados", "manifestados", "maniobrados", "manipulados", "manoseados", "manteados", "mantenidos", "manufacturados", "maquillados", "maquinados", "maravillados", "marcados", "marchitados", "mareados", "marginados", "maridados", "martillados", "martirizados", "masacrados", "masajeados", "mascados", "masificados", "masticados", "masturbados", "matados", "materializados", "matizados", "matriculados", "maximizados", "meados", "mecanografiados", "mechados", "mecidos", "mediados", "mediatizados", "medicados", "medidos", "meditados", "medrados", "mejorados", "mellados", "memorizados", "mencionados", "meneados", "menguados", "menoscabados", "menospreciados", "menstruados", "mensualizados", "mensurados", "mentados", "mentalizados", "mentidos", "mercadeados", "mercantilizados", "merecidos", "merendados", "mermados", "merodeados", "mesurados", "metamorfoseados", "metidos", "mezclados", "migrados", "militados", "militarizados", "mimados", "mimetizados", "minados", "minimizados", "ministrados", "minusvalorados", "mirados", "mistificados", "mitificados", "mitigados", "modelados", "modernizados", "modificados", "modulados", "mofados", "mojados", "moldeados", "molestados", "molidos", "monetizados", "monitorizados", "monopolizados", "montados", "morados", "moralizados", "mordidos", "mordisqueados", "mortificados", "mosqueados", "mostrados", "motejados", "motivados", "movidos", "movilizados", "mudados", "muestreados", "multados", "multiplicados", "munidos", "murmurados", "mutados", "mutilados", "nacionalizados", "narcotizados", "narrados", "naufragados", "navegados", "necesitados", "negados", "negociados", "neutralizados", "ninguneados", "nivelados", "nombrados", "nominados", "noqueados", "normados", "normalizados", "notados", "notificados", "nutridos", "obcecados", "obedecidos", "objetados", "objetivados", "obligados", "obliterados", "obnubilados", "obrados", "obsequiados", "observados", "obsesionados", "obstaculizados", "obstruidos", "obtenidos", "obturados", "obviados", "ocasionados", "ocluidos", "ocultados", "ocupados", "odiados", "ofendidos", "ofertados", "oficiados", "oficializados", "ofrecidos", "ofrendados", "ofuscados", "oídos", "ojeados", "olfateados", "olidos", "olvidados", "omitidos", "ondeados", "ondulados", "opacados", "operados", "opinados", "oprimidos", "optados", "optimizados", "opuestos", "orados", "orbitados", "ordenados", "ordeñados", "organizados", "orientados", "originados", "orillados", "orinados", "ornados", "ornamentados", "orquestados", "osados", "oscilados", "oscurecidos", "osificados", "ostentados", "otorgados", "ovacionados", "ovulados", "oxidados", "oxigenados", "pacificados", "pactados", "padecidos", "paganizados", "paginados", "paladeados", "paliados", "palpados", "parados", "parafraseados", "paralizados", "parapetados", "parasitados", "parcelados", "parchados", "parcheados", "pareados", "paridos", "parodiados", "parqueados", "participados", "particularizados", "partidos", "pasados", "paseados", "pastoreados", "pataleados", "pateados", "patentados", "patentizados", "patinados", "patrullados", "pecados", "pedaleados", "pedidos", "pegados", "peinados", "pellizcados", "penalizados", "penetrados", "pensados", "percatados", "percibidos", "percutidos", "perdidos", "perdonados", "perdurados", "perecidos", "peregrinados", "perfeccionados", "perfilados", "perforados", "perfumados", "pergeñados", "peritados", "perjudicados", "perjurados", "permeados", "permitidos", "permutados", "pernoctados", "perpetrados", "perpetuados", "perseguidos", "perseverados", "persistidos", "personados", "personalizados", "personificados", "persuadidos", "pertenecidos", "pertrechados", "perturbados", "pervertidos", "pervividos", "pescados", "petados", "peticionados", "picados", "picaneados", "picoteados", "pifiados", "pignorados", "pillados", "pilotados", "piloteados", "pincelados", "pinchados", "pintados", "pintarrajeados", "pinzados", "pirados", "pirateados", "pisados", "pisoteados", "pitados", "placidos", "plagiados", "planchados", "planeados", "plantados", "planteados", "plasmados", "platicados", "plegados", "pluralizados", "podados", "poetizados", "polemizados", "politizados", "pololeados", "ponderados", "pontificados", "popularizados", "porfiados", "portados", "porteados", "posados", "posesionados", "posibilitados", "posicionados", "pospuestos", "posteados", "postergados", "postrados", "postulados", "potenciados", "practicados", "precarizados", "precedidos", "preceptuados", "precintados", "precipitados", "precisados", "preconizados", "predicados", "predichos", "predispuestos", "predominados", "preferidos", "prefigurados", "pregonados", "preguntados", "prejuzgados", "premiados", "prendados", "prendidos", "preocupados", "preparados", "presagiados", "prescindidos", "presenciados", "presentados", "presentidos", "preservados", "presididos", "presionados", "prestados", "prestigiados", "presumidos", "presurizados", "pretendidos", "preteridos", "prevalecidos", "prevalidos", "prevaricados", "prevenidos", "previstos", "primados", "principiados", "pringados", "priorizados", "privatizados", "probados", "problematizados", "procedidos", "procesados", "proclamados", "procreados", "procurados", "prodigados", "producidos", "profanados", "proferidos", "profesados", "profesionalizados", "profetizados", "profundizados", "programados", "progresados", "prohibidos", "prohijados", "proletarizados", "proliferados", "prologados", "prolongados", "promediados", "prometidos", "promocionados", "promovidos", "promulgados", "pronosticados", "pronunciados", "propagados", "propalados", "propendidos", "propiciados", "propinados", "proporcionados", "propuestos", "propugnados", "propulsados", "prorrateados", "prorrogados", "proseguidos", "prosperados", "prostituidos", "protegidos", "protestados", "protocolizados", "provenidos", "provocados", "proyectados", "psicoanalizados", "publicados", "publicitados", "puestos", "pugnados", "pujados", "pulidos", "pulsados", "pululados", "pulverizados", "punados", "punteados", "puntuados", "puntualizados", "punzados", "purgados", "purificados", "puteados", "quebrados", "quebrantados", "quejados", "quemados", "querellados", "queridos", "quintuplicados", "quitados", "racionados", "racionalizados", "radiados", "radicados", "radicalizados", "raídos", "rajados", "ralentizados", "rapados", "rapeados", "raptados", "rascados", "rasgados", "rasguñados", "raspados", "rastreados", "rasurados", "ratificados", "rayados", "razonados", "reabiertos", "reabsorbidos", "reaccionados", "reactivados", "readaptados", "readmitidos", "reafirmados", "reagrupados", "reajustados", "realimentados", "realizados", "realzados", "reanimados", "reanudados", "reaparecidos", "rearmados", "reasumidos", "reavivados", "rebajados", "rebalsados", "rebanados", "rebasados", "rebatidos", "rebautizados", "rebelados", "reblandecidos", "rebobinados", "rebosados", "rebotados", "rebozados", "rebuscados", "recabados", "recaídos", "recalados", "recalcados", "recalentados", "recalificados", "recapacitados", "recapitulados", "recargados", "recatados", "recaudados", "receptados", "recetados", "rechazados", "recibidos", "reciclados", "recitados", "reclamados", "reclinados", "reclutados", "recobrados", "recocidos", "recogidos", "recolectados", "recomendados", "recomenzados", "recompensados", "recompuestos", "reconcentrados", "reconciliados", "reconducidos", "reconfortados", "reconocidos", "reconquistados", "reconsiderados", "reconstituidos", "reconstruidos", "reconvenidos", "reconvertidos", "recopilados", "recordados", "recorridos", "recortados", "recreados", "recriminados", "recrudecidos", "rectificados", "recubiertos", "reculados", "recuperados", "recurridos", "recusados", "redactados", "redefinidos", "redescubiertos", "redimensionados", "redimidos", "rediseñados", "redistribuidos", "redituados", "redoblados", "redondeados", "reducidos", "redundados", "reedificados", "reeditados", "reeducados", "reelaborados", "reembolsados", "reemplazados", "reencarnados", "reencauchados", "reencontrados", "reenganchados", "reenviados", "reescritos", "reestructurados", "reexaminados", "refaccionados", "referidos", "refinados", "refinanciados", "reflejados", "reflexionados", "reflotados", "reforestados", "reformados", "reforzados", "refractados", "refrenados", "refrendados", "refrescados", "refrigerados", "refundidos", "refutados", "regados", "regalados", "regañados", "regateados", "regenerados", "regentados", "regenteados", "regidos", "regionalizados", "registrados", "reglados", "reglamentados", "regocijados", "regodeados", "regresados", "regulados", "regularizados", "regurgitados", "rehabilitados", "rehechos", "rehogados", "rehuidos", "rehusados", "reídos", "reinados", "reincididos", "reincorporados", "reingresados", "reiniciados", "reinsertados", "reinstalados", "reinstaurados", "reintegrados", "reinventados", "reinvertidos", "reiterados", "reivindicados", "rejuvenecidos", "relajados", "relamidos", "relanzados", "relatados", "relativizados", "relegados", "releídos", "relevados", "religados", "rellenados", "remachados", "remados", "remangados", "remarcados", "rematados", "remecidos", "remediados", "rememorados", "remendados", "remitidos", "remodelados", "remojados", "remolcados", "remontados", "removidos", "remplazados", "renacidos", "rendidos", "renegados", "renegociados", "reñidos", "renombrados", "renovados", "rentabilizados", "rentados", "renunciados", "reordenados", "reorganizados", "reorientados", "reparados", "repartidos", "repasados", "repatriados", "repelidos", "repensados", "repercutidos", "repescados", "repetidos", "repicados", "repintados", "replanteados", "replegados", "replicados", "repoblados", "reportados", "reporteados", "reposados", "repreguntados", "reprendidos", "represados", "representados", "reprimidos", "reprobados", "reprochados", "reproducidos", "repudiados", "repuestos", "repugnados", "repuntados", "reputados", "requeridos", "requisados", "resaltados", "resarcidos", "resbalados", "rescatados", "rescindidos", "resecados", "reseñados", "reservados", "reseteados", "resguardados", "resididos", "resignados", "resistidos", "resonados", "respaldados", "respetados", "respirados", "resplandecidos", "respondidos", "responsabilizados", "resquebrajados", "restablecidos", "restados", "restaurados", "restituidos", "restregados", "resucitados", "resueltos", "resumidos", "resurgidos", "retados", "retardados", "retenidos", "retirados", "retocados", "retomados", "retorcidos", "retornados", "retractados", "retraídos", "retransmitidos", "retrasados", "retratados", "retribuidos", "retrotraídos", "retumbados", "reunidos", "reunificados", "reutilizados", "revalidados", "revalorizados", "revaluados", "revelados", "revendidos", "reventados", "reverdecidos", "reverenciados", "revertidos", "revestidos", "revirados", "revisados", "revitalizados", "revividos", "revocados", "revolcados", "revoloteados", "revolucionados", "revueltos", "ridiculizados", "rifados", "rimados", "rivalizados", "rizados", "robados", "robustecidos", "rociados", "rodados", "rodeados", "rogados", "roídos", "rondados", "rotados", "rotos", "rotulados", "roturados", "rozados", "ruborizados", "rubricados", "rugidos", "rumiados", "rumorados", "sabidos", "saboreados", "saboteados", "sacados", "saciados", "sacralizados", "sacrificados", "sacudidos", "saldados", "salpimentados", "salpullidos", "saltados", "salteados", "saludados", "salvados", "salvaguardados", "sanados", "saneados", "sangrados", "santificados", "saqueados", "satanizados", "satirizados", "satisfechos", "sazonados", "secados", "seccionados", "secretados", "secuenciados", "secuestrados", "secundados", "sedimentados", "seducidos", "segados", "segmentados", "segregados", "seguidos", "seleccionados", "sembrados", "señalados", "sensibilizados", "sentados", "sentenciados", "sentidos", "separados", "serenados", "serrados", "servidos", "significados", "silenciados", "simbolizados", "simpatizados", "simplificados", "simulados", "sincerados", "sincronizados", "sindicados", "sindicalizados", "singularizados", "sintetizados", "sintonizados", "sistematizados", "situados", "sobados", "sobornados", "sobrados", "sobrecargados", "sobrecogidos", "sobreentendidos", "sobreestimados", "sobrellevados", "sobrentendidos", "sobrepasados", "sobrepuestos", "sobresalidos", "sobresaltados", "sobrestimados", "sobrevenidos", "sobrevividos", "sobrevolados", "socavados", "socializados", "socorridos", "sodomizados", "sofocados", "sojuzgados", "solapados", "solicitados", "solidarizados", "solidificados", "soliviantados", "soltados", "solucionados", "solventados", "sombreados", "sometidos", "sonados", "soñados", "sondeados", "sonreídos", "sonrojados", "sopesados", "soplados", "soportados", "sorbidos", "sorprendidos", "sorteados", "sosegados", "soslayados", "sospechados", "sostenidos", "suavizados", "subastados", "subcontratados", "subdivididos", "subestimados", "subidos", "sublevados", "sublimados", "subrayados", "subrogados", "subsanados", "subsidiados", "subsistidos", "substraídos", "subsumidos", "subvertidos", "subyugados", "succionados", "sucedidos", "sucumbidos", "sudados", "sufragados", "sufridos", "sugeridos", "sugestionados", "suicidados", "sujetados", "sumados", "sumergidos", "suministrados", "supeditados", "superados", "superpuestos", "supervisados", "suplantados", "suplicados", "suplidos", "suprimidos", "supuestos", "surcados", "surtidos", "suscitados", "suspendidos", "suspirados", "sustanciados", "sustantivados", "sustentados", "sustituidos", "sustraídos", "susurrados", "suturados", "tabulados", "tachados", "talados", "taladrados", "tallados", "tambaleados", "tamizados", "tañidos", "tanteados", "tapados", "tapizados", "taponados", "tarareados", "tardados", "tasados", "tatuados", "tecleados", "tejidos", "telefoneados", "televisados", "temidos", "templados", "tendidos", "tenidos", "tensados", "tentados", "teorizados", "terciados", "tergiversados", "terminados", "territorializados", "testados", "testeados", "testificados", "testimoniados", "tildados", "timados", "timbrados", "tinturados", "tipeados", "tipificados", "tirados", "tiranizados", "tironeados", "tiroteados", "titubeados", "tiznados", "tocados", "tolerados", "tomados", "tonificados", "topados", "toqueteados", "torcidos", "toreados", "tornados", "tornasolados", "torneados", "torpedeados", "torturados", "tosidos", "tostados", "totalizados", "trabados", "trabajados", "traducidos", "traficados", "tragados", "traicionados", "traídos", "trajinados", "tramados", "tramitados", "trancados", "tranquilizados", "transcendidos", "transcurridos", "transferidos", "transfigurados", "transformados", "transfundidos", "transgredidos", "transigidos", "transitados", "transliterados", "translucidos", "transmitidos", "transmutados", "transparentados", "transpirados", "transportados", "transpuestos", "trasegados", "trasgredidos", "trasladados", "traslapados", "traslucidos", "trasnochados", "traspapelados", "traspasados", "trasplantados", "traspuestos", "trasquilados", "trasteados", "trastocados", "trastornados", "trasvasados", "tratados", "trazados", "trenzados", "trepados", "tributados", "trincados", "triplicados", "triturados", "triunfados", "trivializados", "trocados", "troceados", "tronados", "tronchados", "truncados", "tumbados", "tuneados", "turbados", "turnados", "tutelados", "ufanados", "ultimados", "uncidos", "ungidos", "unidos", "universalizados", "untados", "urbanizados", "urdidos", "usados", "usufructuados", "usurpados", "utilizados", "vacados", "vaciados", "vacilados", "vacunados", "vagados", "validados", "validos", "valorados", "valorizados", "valuados", "vanagloriados", "vandalizados", "vaporizados", "variados", "vaticinados", "vedados", "vehiculados", "vejados", "velados", "vencidos", "vendados", "vendidos", "venerados", "vengados", "ventilados", "veraneados", "verbalizados", "verificados", "versados", "versionados", "vertebrados", "vertidos", "vestidos", "vetados", "viabilizados", "viajados", "vibrados", "victimados", "victimizados", "vigilados", "vigorizados", "vilipendiados", "vindicados", "violados", "violentados", "virados", "visados", "visibilizados", "visitados", "vislumbrados", "vistos", "visualizados", "vitoreados", "vitrificados", "vituperados", "vividos", "vivificados", "vocalizados", "voceados", "vociferados", "volados", "volatilizados", "volcados", "volteados", "vomitados", "votados", "vueltos", "vulcanizados", "vulgarizados", "vulnerados", "yuxtapuestos", "zafados", "zambullidos", "zampados", "zanjados", "zarandeados", "zarpados", "zozobrados", "zumbados", "zurcidos", "zurrados", "abajadas", "abalanzadas", "abaleadas", "abandonadas", "abaratadas", "abarcadas", "abarrotadas", "abastecidas", "abatidas", "abdicadas", "abiertas", "abismadas", "abjuradas", "ablandadas", "abocadas", "abochornadas", "abofeteadas", "abolidas", "abolladas", "abombadas", "abominadas", "abonadas", "abordadas", "aborrecidas", "aborregadas", "abortadas", "abotonadas", "abrasadas", "abrazadas", "abrevadas", "abreviadas", "abrigadas", "abrochadas", "abrogadas", "abroqueladas", "abrumadas", "absorbidas", "abstenidas", "abstraídas", "absueltas", "abucheadas", "abultadas", "abundadas", "aburguesadas", "aburridas", "abusadas", "acabadas", "acalladas", "acaloradas", "acaparadas", "acariciadas", "acarreadas", "acatadas", "acaudilladas", "accedidas", "accionadas", "acechadas", "aceitadas", "aceleradas", "acentuadas", "aceptadas", "aceradas", "acercadas", "acertadas", "achacadas", "achantadas", "achatadas", "achicadas", "acicaladas", "acidificadas", "aclaradas", "aclimatadas", "acobardadas", "acodadas", "acogidas", "acojonadas", "acometidas", "acomodadas", "acompañadas", "acompasadas", "acongojadas", "aconsejadas", "acontecidas", "acopiadas", "acopladas", "acordadas", "acordonadas", "acorraladas", "acortadas", "acosadas", "acostadas", "acostumbradas", "acotadas", "acrecentadas", "acreditadas", "acrisoladas", "activadas", "actuadas", "acuchilladas", "acuciadas", "acudidas", "acuerpadas", "acumuladas", "acunadas", "acuñadas", "acurrucadas", "acusadas", "adaptadas", "adecentadas", "adelantadas", "adelgazadas", "adentradas", "adeudadas", "adheridas", "adicionadas", "adiestradas", "adivinadas", "adjetivadas", "adjudicadas", "adjuntadas", "administradas", "admiradas", "admitidas", "adoctrinadas", "adolecidas", "adoptadas", "adoradas", "adormecidas", "adornadas", "adquiridas", "aducidas", "adueñadas", "aduladas", "adulteradas", "advertidas", "afanadas", "afeadas", "afectadas", "afeitadas", "aferradas", "afianzadas", "afinadas", "afirmadas", "afligidas", "afloradas", "afrentadas", "afrontadas", "agachadas", "agarradas", "agarrotadas", "agasajadas", "agenciadas", "agigantadas", "agilizadas", "agitadas", "aglutinadas", "agobiadas", "agolpadas", "agonizadas", "agostadas", "agotadas", "agradadas", "agradecidas", "agrandadas", "agravadas", "agraviadas", "agredidas", "agregadas", "agriadas", "agrietadas", "agrupadas", "aguadas", "aguantadas", "aguardadas", "agudizadas", "aguijoneadas", "agujereadas", "aguzadas", "ahogadas", "ahondadas", "ahorcadas", "ahorradas", "ahuecadas", "ahuyentadas", "aireadas", "aisladas", "ajustadas", "ajusticiadas", "alabadas", "alagadas", "alambradas", "alardeadas", "alargadas", "alarmadas", "albergadas", "alborotadas", "alcanzadas", "aleccionadas", "alegadas", "alegradas", "alejadas", "alentadas", "alertadas", "alfabetizadas", "alfombradas", "aliadas", "alienadas", "aligeradas", "alimentadas", "aliñadas", "alineadas", "alisadas", "alistadas", "aliviadas", "alivianadas", "allanadas", "almacenadas", "almorzadas", "alojadas", "alquiladas", "alteradas", "alternadas", "alucinadas", "aludidas", "alumbradas", "alzadas", "amadas", "amaestradas", "amagadas", "amainadas", "amalgamadas", "amamantadas", "amansadas", "amargadas", "amarradas", "amasadas", "ambicionadas", "amedrentadas", "amenazadas", "amenizadas", "ameritadas", "ametralladas", "amilanadas", "aminoradas", "amnistiadas", "amoldadas", "amonestadas", "amontonadas", "amordazadas", "amortajadas", "amortiguadas", "amortizadas", "amotinadas", "amparadas", "ampayadas", "ampliadas", "amplificadas", "amputadas", "amuebladas", "añadidas", "analizadas", "anatematizadas", "andadas", "anegadas", "anestesiadas", "anexadas", "anexionadas", "anheladas", "anidadas", "anilladas", "animadas", "aniquiladas", "anisadas", "añoradas", "anotadas", "anoticiadas", "ansiadas", "antecedidas", "antepuestas", "anticipadas", "antojadas", "anudadas", "anuladas", "anunciadas", "apabulladas", "apachurradas", "apaciguadas", "apadrinadas", "apagadas", "apalancadas", "apaleadas", "apañadas", "apantalladas", "aparcadas", "apareadas", "aparecidas", "aparentadas", "apartadas", "apeadas", "apedreadas", "apeladas", "apellidadas", "apelmazadas", "apercibidas", "apersonadas", "apestadas", "apetecidas", "apiadadas", "apiladas", "apiñadas", "apisonadas", "aplacadas", "aplanadas", "aplastadas", "aplaudidas", "aplazadas", "aplicadas", "apoderadas", "apoltronadas", "aporreadas", "aportadas", "aposentadas", "apostadas", "apostatadas", "apostilladas", "apoyadas", "apreciadas", "aprehendidas", "apremiadas", "aprendidas", "apresadas", "apresuradas", "apretadas", "apretujadas", "aprisionadas", "aprobadas", "aprovechadas", "aprovisionadas", "aproximadas", "apuñaladas", "apuñaleadas", "apuntadas", "apuntaladas", "apuntilladas", "apuradas", "aquejadas", "aquietadas", "aquilatadas", "arañadas", "arbitradas", "archivadas", "arengadas", "argüidas", "argumentadas", "armadas", "armonizadas", "aromatizadas", "arqueadas", "arrancadas", "arrasadas", "arrastradas", "arreadas", "arrebatadas", "arreciadas", "arregladas", "arrellanadas", "arremangadas", "arremetidas", "arrendadas", "arrepentidas", "arrestadas", "arriadas", "arribadas", "arriesgadas", "arrimadas", "arrinconadas", "arrodilladas", "arrogadas", "arrojadas", "arrolladas", "arropadas", "arruinadas", "arrulladas", "articuladas", "asadas", "asaltadas", "ascendidas", "aseadas", "asechadas", "asediadas", "aseguradas", "asemejadas", "asentadas", "asentidas", "aserradas", "asesinadas", "asesoradas", "asestadas", "aseveradas", "asfixiadas", "asidas", "asignadas", "asiladas", "asimiladas", "asistidas", "asoladas", "asoleadas", "asomadas", "asombradas", "aspiradas", "astilladas", "asumidas", "asustadas", "atacadas", "atadas", "atajadas", "atarantadas", "atascadas", "atemorizadas", "atemperadas", "atenazadas", "atendidas", "atenidas", "atentadas", "atenuadas", "aterradas", "aterrorizadas", "atesoradas", "atestiguadas", "atiborradas", "atisbadas", "atizadas", "atomizadas", "atontadas", "atoradas", "atormentadas", "atornilladas", "atosigadas", "atracadas", "atragantadas", "atraídas", "atrancadas", "atrapadas", "atrasadas", "atravesadas", "atrevidas", "atribuidas", "atrincheradas", "atrofiadas", "atropelladas", "aturdidas", "auditadas", "auguradas", "aumentadas", "aunadas", "aupadas", "auscultadas", "ausentadas", "autenticadas", "autentificadas", "autodefinidas", "autoeditadas", "automatizadas", "autorizadas", "autorreguladas", "auxiliadas", "avaladas", "avanzadas", "avasalladas", "avenidas", "aventadas", "aventajadas", "aventuradas", "averiadas", "averiguadas", "avezadas", "avisadas", "avispadas", "avistadas", "avivadas", "avizoradas", "avocadas", "ayudadas", "azotadas", "azuzadas", "babeadas", "bailadas", "bajadas", "balaceadas", "balanceadas", "bañadas", "banalizadas", "bancadas", "bandeadas", "barajadas", "barridas", "basadas", "bastardeadas", "basureadas", "batalladas", "bateadas", "batidas", "bautizadas", "beatificadas", "bebidas", "beneficiadas", "besadas", "bifurcadas", "birladas", "blandidas", "blanqueadas", "blasfemadas", "blindadas", "bloqueadas", "boicoteadas", "bombardeadas", "bombeadas", "bonificadas", "bordeadas", "borradas", "borroneadas", "bosquejadas", "bostezadas", "botadas", "boxeadas", "bregadas", "brilladas", "brincadas", "brindadas", "bromeadas", "brotadas", "bruñidas", "buceadas", "burladas", "buscadas", "cabeceadas", "cabidas", "cabildeadas", "cabreadas", "cacareadas", "cachadas", "cacheadas", "cacheteadas", "caducadas", "cagadas", "caladas", "calculadas", "caldeadas", "calefaccionadas", "calendarizadas", "calentadas", "calibradas", "calificadas", "caligrafiadas", "calladas", "calmadas", "calumniadas", "calzadas", "cambiadas", "caminadas", "camufladas", "canalizadas", "canceladas", "canjeadas", "cansadas", "cantadas", "capadas", "capeadas", "capitalizadas", "capituladas", "captadas", "capturadas", "caracterizadas", "carburadas", "carcomidas", "cardadas", "careadas", "carecidas", "cargadas", "caricaturizadas", "cartografiadas", "cascadas", "castigadas", "castradas", "catadas", "catalizadas", "catalogadas", "catapultadas", "cateadas", "categorizadas", "causadas", "cauterizadas", "cautivadas", "cavadas", "caviladas", "cazadas", "cebadas", "cedidas", "cegadas", "cejadas", "celebradas", "cenadas", "ceñidas", "censuradas", "centrifugadas", "centuplicadas", "cepilladas", "cercadas", "cercenadas", "cercioradas", "cernidas", "cerradas", "cesadas", "chafadas", "chamuscadas", "chantajeadas", "chapadas", "charladas", "chateadas", "chequeadas", "chifladas", "chilladas", "chingadas", "chirriadas", "chivadas", "chocadas", "chorreadas", "choteadas", "chupadas", "chutadas", "cicatrizadas", "cifradas", "cimentadas", "cinceladas", "circuladas", "circuncidadas", "circundadas", "citadas", "clamadas", "clarificadas", "clasificadas", "claudicadas", "clausuradas", "clavadas", "clicadas", "clonadas", "coaccionadas", "coadyuvadas", "coaguladas", "coaligadas", "coartadas", "cobijadas", "cobradas", "cocidas", "cocinadas", "codeadas", "codiciadas", "codificadas", "codirigidas", "coexistidas", "cofinanciadas", "cogidas", "cohabitadas", "cohibidas", "coincididas", "colaboradas", "colacionadas", "coladas", "colapsadas", "coleccionadas", "colectadas", "colectivizadas", "colgadas", "colisionadas", "colmadas", "colocadas", "colonizadas", "coloreadas", "columpiadas", "combatidas", "combinadas", "comentadas", "comenzadas", "comerciadas", "comercializadas", "cometidas", "comidas", "comisionadas", "compactadas", "compadecidas", "compaginadas", "comparadas", "comparecidas", "compartidas", "compatibilizadas", "compelidas", "compendiadas", "compenetradas", "compensadas", "compiladas", "complacidas", "complementadas", "completadas", "complotadas", "comportadas", "compradas", "comprendidas", "comprimidas", "comprobadas", "comprometidas", "compuestas", "compulsadas", "computadas", "comulgadas", "comunicadas", "concatenadas", "concebidas", "concedidas", "concelebradas", "concentradas", "conceptuadas", "conceptualizadas", "concertadas", "concienciadas", "concientizadas", "conciliadas", "concitadas", "concluidas", "concordadas", "concretadas", "concretizadas", "conculcadas", "concursadas", "condenadas", "condensadas", "condicionadas", "condimentadas", "condolidas", "condonadas", "conducidas", "conectadas", "conexionadas", "confabuladas", "confeccionadas", "conferidas", "confesadas", "confiadas", "configuradas", "confirmadas", "confiscadas", "confluidas", "conformadas", "confortadas", "confrontadas", "confundidas", "congeniadas", "congestionadas", "congratuladas", "congregadas", "conjeturadas", "conjugadas", "conjuntadas", "conjuradas", "conllevadas", "conmemoradas", "conminadas", "conmocionadas", "conmovidas", "conmutadas", "connotadas", "conquistadas", "consagradas", "conseguidas", "consensuadas", "consentidas", "conservadas", "consideradas", "consignadas", "consistidas", "consoladas", "consolidadas", "conspiradas", "constadas", "constatadas", "consteladas", "constitucionalizadas", "constituidas", "constreñidas", "construidas", "consultadas", "consumadas", "consumidas", "contabilizadas", "contactadas", "contadas", "contagiadas", "contempladas", "contendidas", "contenidas", "contentadas", "contestadas", "contextualizadas", "continuadas", "contorneadas", "contraatacadas", "contrabandeadas", "contradichas", "contrahechas", "contraídas", "contrapesadas", "contrapuestas", "contrariadas", "contrarrestadas", "contrastadas", "contratadas", "contravenidas", "contribuidas", "contristadas", "controladas", "convalidadas", "convencidas", "convenidas", "convergidas", "conversadas", "convertidas", "convidadas", "convividas", "convocadas", "convulsionadas", "cooperadas", "cooptadas", "coordinadas", "copadas", "copiadas", "coproducidas", "copuladas", "coqueteadas", "corchadas", "coreadas", "coreografiadas", "corneadas", "coronadas", "corporizadas", "corregidas", "correlacionadas", "correspondidas", "correteadas", "corridas", "corroboradas", "corroídas", "corrompidas", "cortadas", "cortejadas", "cosechadas", "cosidas", "cosificadas", "costadas", "costeadas", "cotejadas", "cotizadas", "creadas", "creídas", "criadas", "cribadas", "criminalizadas", "crispadas", "cristalizadas", "cristianizadas", "criticadas", "cronometradas", "crucificadas", "crujidas", "cruzadas", "cuadriplicadas", "cuadruplicadas", "cuajadas", "cuantificadas", "cuarteadas", "cubiertas", "cuestionadas", "cuidadas", "culeadas", "culminadas", "culpabilizadas", "culpadas", "cultivadas", "culturizadas", "cumplidas", "cumplimentadas", "cundidas", "curadas", "curioseadas", "curradas", "cursadas", "curvadas", "custodiadas", "dadas", "dañadas", "danzadas", "datadas", "dateadas", "debatidas", "debidas", "debilitadas", "debitadas", "debutadas", "decaídas", "decantadas", "decapitadas", "decepcionadas", "decididas", "declamadas", "declaradas", "declinadas", "decodificadas", "decoloradas", "decomisadas", "decrecidas", "decretadas", "dedicadas", "deducidas", "defecadas", "defendidas", "defenestradas", "deferidas", "definidas", "deformadas", "defraudadas", "degeneradas", "deglutidas", "degolladas", "degradadas", "degustadas", "deificadas", "dejadas", "delatadas", "delegadas", "deleitadas", "deletreadas", "deliberadas", "delimitadas", "delineadas", "delinquidas", "demandadas", "demarcadas", "demediadas", "demeritadas", "democratizadas", "demolidas", "demonizadas", "demoradas", "demostradas", "demudadas", "denegadas", "denigradas", "denominadas", "denostadas", "denotadas", "denunciadas", "deparadas", "departidas", "dependidas", "depiladas", "deploradas", "deportadas", "depositadas", "depreciadas", "depredadas", "deprimidas", "depuestas", "depuradas", "derechizadas", "derivadas", "derogadas", "derramadas", "derretidas", "derribadas", "derrocadas", "derrochadas", "derrotadas", "derruidas", "derrumbadas", "desabrochadas", "desacatadas", "desaceleradas", "desacomodadas", "desaconsejadas", "desacopladas", "desacralizadas", "desacreditadas", "desactivadas", "desafiadas", "desafinadas", "desaguadas", "desahogadas", "desairadas", "desajustadas", "desalentadas", "desalineadas", "desalojadas", "desandadas", "desangradas", "desanimadas", "desaparecidas", "desapegadas", "desaprendidas", "desaprobadas", "desaprovechadas", "desarmadas", "desarraigadas", "desarregladas", "desarrolladas", "desarticuladas", "desaseadas", "desasidas", "desasosegadas", "desatadas", "desatendidas", "desautorizadas", "desayunadas", "desbancadas", "desbandadas", "desbaratadas", "desbarrancadas", "desbastadas", "desbloqueadas", "desbocadas", "desbordadas", "desbrozadas", "descabalgadas", "descabezadas", "descaderadas", "descalabradas", "descalificadas", "descansadas", "descargadas", "descarriadas", "descarriladas", "descartadas", "descascaradas", "descascarilladas", "descendidas", "descentradas", "descifradas", "descocidas", "descodificadas", "descojonadas", "descolgadas", "descolocadas", "descolonizadas", "descompensadas", "descomprimidas", "descompuestas", "desconectadas", "desconfiadas", "descongeladas", "desconocidas", "descontadas", "descontaminadas", "descontextualizadas", "descontinuadas", "desconvocadas", "descorazonadas", "descorchadas", "descorridas", "descosidas", "descoyuntadas", "descreídas", "descristianizadas", "descuadradas", "descuartizadas", "descubiertas", "descuidadas", "desdeñadas", "desdibujadas", "desdichas", "desdobladas", "deseadas", "desecadas", "desechadas", "desembarazadas", "desembarcadas", "desembocadas", "desembolsadas", "desempacadas", "desempañadas", "desempaquetadas", "desempeñadas", "desempolvadas", "desenamoradas", "desencadenadas", "desencajadas", "desencarnadas", "desenchufadas", "desenfocadas", "desenfundadas", "desenganchadas", "desengrasadas", "desenmascaradas", "desenredadas", "desenrolladas", "desentendidas", "desenterradas", "desentonadas", "desentrañadas", "desenvainadas", "desenvueltas", "desequilibradas", "desertadas", "desestabilizadas", "desestimadas", "desfalcadas", "desfallecidas", "desfiguradas", "desfondadas", "desgajadas", "desgañitadas", "desgarradas", "desgastadas", "desglosadas", "desgobernadas", "desgranadas", "desguazadas", "deshechas", "desheredadas", "deshidratadas", "deshilachadas", "deshojadas", "deshonradas", "deshuesadas", "deshumanizadas", "designadas", "desilusionadas", "desincentivadas", "desinfectadas", "desinfladas", "desinflamadas", "desinformadas", "desinhibidas", "desinstaladas", "desintegradas", "desintoxicadas", "desistidas", "desjarretadas", "deslegitimadas", "desleídas", "desligadas", "deslindadas", "deslizadas", "deslucidas", "deslumbradas", "desmadradas", "desmalezadas", "desmanteladas", "desmaquilladas", "desmarcadas", "desmayadas", "desmejoradas", "desmembradas", "desmentidas", "desmenuzadas", "desmerecidas", "desmigadas", "desmitificadas", "desmoldadas", "desmontadas", "desmoralizadas", "desmoronadas", "desmotivadas", "desmovilizadas", "desnaturalizadas", "desniveladas", "desnucadas", "desnudadas", "desobedecidas", "desobligadas", "desoídas", "desolladas", "desorganizadas", "desorientadas", "despachadas", "desparasitadas", "desparecidas", "desparramadas", "despedazadas", "despedidas", "despegadas", "despeinadas", "despejadas", "despellejadas", "despeñadas", "despenalizadas", "desperdiciadas", "despersonalizadas", "despertadas", "despilfarradas", "despintadas", "despiojadas", "despistadas", "desplazadas", "desplegadas", "desplomadas", "desplumadas", "despojadas", "despolitizadas", "desposadas", "desposeídas", "despotricadas", "despreciadas", "desprendidas", "despreocupadas", "desprestigiadas", "desprogramadas", "despulpadas", "despuntadas", "desquiciadas", "desquitadas", "destacadas", "destapadas", "desteñidas", "desterradas", "destetadas", "destiladas", "destituidas", "destrabadas", "destripadas", "destronadas", "destrozadas", "destruidas", "desunidas", "desvalijadas", "desvalorizadas", "desvanecidas", "desveladas", "desvestidas", "desviadas", "desvinculadas", "desvirtuadas", "desvividas", "detectadas", "detenidas", "detentadas", "deterioradas", "determinadas", "detestadas", "detonadas", "devaluadas", "devanadas", "devastadas", "develadas", "devengadas", "devenidas", "devoradas", "devueltas", "diagnosticadas", "diagramadas", "dializadas", "dialogadas", "dibujadas", "dichas", "dictadas", "dictaminadas", "diezmadas", "difamadas", "diferenciadas", "diferidas", "dificultadas", "difuminadas", "difundidas", "digeridas", "digitadas", "dignadas", "dignificadas", "dilapidadas", "dilatadas", "diligenciadas", "dilucidadas", "diluidas", "dimensionadas", "dimitidas", "dinamitadas", "dinamizadas", "dirimidas", "discernidas", "disciplinadas", "discontinuadas", "discrepadas", "discriminadas", "disculpadas", "discurridas", "discutidas", "diseccionadas", "diseminadas", "diseñadas", "disentidas", "disertadas", "disfrazadas", "disfrutadas", "disgregadas", "disgustadas", "disimuladas", "disipadas", "dislocadas", "disminuidas", "disociadas", "dispensadas", "dispersadas", "dispuestas", "disputadas", "distadas", "distanciadas", "distendidas", "distinguidas", "distorsionadas", "distraídas", "distribuidas", "disuadidas", "disueltas", "divagadas", "diversificadas", "divertidas", "divididas", "divinizadas", "divisadas", "divorciadas", "divulgadas", "dobladas", "doblegadas", "doctoradas", "documentadas", "dogmatizadas", "dolidas", "domadas", "domesticadas", "dominadas", "donadas", "dopadas", "dormidas", "dosificadas", "dotadas", "dragadas", "dramatizadas", "drenadas", "drogadas", "duchadas", "dudadas", "dulcificadas", "duplicadas", "duradas", "echadas", "eclipsadas", "eclosionadas", "economizadas", "ecualizadas", "edificadas", "editadas", "educadas", "efectuadas", "ejecutadas", "ejemplificadas", "ejercidas", "ejercitadas", "elaboradas", "electrizadas", "electrocutadas", "elevadas", "elididas", "eliminadas", "elogiadas", "elucubradas", "eludidas", "emanadas", "emancipadas", "embadurnadas", "embaladas", "embalsamadas", "embanderadas", "embarcadas", "embargadas", "embarradas", "embarrancadas", "embaucadas", "embebidas", "embelesadas", "embellecidas", "embestidas", "emboladas", "embolsadas", "emborrachadas", "emborronadas", "emboscadas", "embotadas", "embriagadas", "embrolladas", "embrutecidas", "embuchadas", "emergidas", "emigradas", "emitidas", "emocionadas", "empacadas", "empachadas", "empadronadas", "empaladas", "empalmadas", "empanadas", "empañadas", "empantanadas", "empapeladas", "empaquetadas", "emparejadas", "empastadas", "empatadas", "empecinadas", "empeñadas", "empeoradas", "empequeñecidas", "emperradas", "empezadas", "empinadas", "emplazadas", "empleadas", "empobrecidas", "empoderadas", "empolladas", "empolvadas", "emponzoñadas", "emprendidas", "empujadas", "empuñadas", "emputadas", "emuladas", "emulsionadas", "enajenadas", "enaltecidas", "enamoradas", "enarboladas", "enardecidas", "encabezadas", "encabritadas", "encabronadas", "encadenadas", "encajadas", "encajonadas", "encalladas", "encamadas", "encaminadas", "encandiladas", "encanecidas", "encañonadas", "encantadas", "encaprichadas", "encapsuladas", "encaradas", "encaramadas", "encarecidas", "encargadas", "encariñadas", "encarnadas", "encarriladas", "encartadas", "encasilladas", "encasquetadas", "encasquilladas", "encastradas", "encausadas", "encauzadas", "enceguecidas", "encendidas", "enceradas", "encerradas", "encharcadas", "enchufadas", "encimadas", "encogidas", "encoladas", "encolerizadas", "encolumnadas", "encomendadas", "enconadas", "encontradas", "encordadas", "encrespadas", "encuadradas", "encubiertas", "encueradas", "encumbradas", "enderezadas", "endeudadas", "endilgadas", "endiosadas", "endosadas", "endulzadas", "endurecidas", "enemistadas", "energizadas", "enervadas", "enfadadas", "enfangadas", "enfatizadas", "enfermadas", "enfiestadas", "enfiladas", "enflaquecidas", "enfocadas", "enfrascadas", "enfrentadas", "enfriadas", "enfurecidas", "engalanadas", "engañadas", "enganchadas", "engarzadas", "engatusadas", "engendradas", "englobadas", "engolosinadas", "engordadas", "engranadas", "engrandecidas", "engrasadas", "engreídas", "engrosadas", "engullidas", "enharinadas", "enhebradas", "enjuagadas", "enjugadas", "enjuiciadas", "enlazadas", "enlistadas", "enlodadas", "enloquecidas", "enlozadas", "enlutadas", "enmarañadas", "enmascaradas", "enmendadas", "enmohecidas", "enmudecidas", "ennegrecidas", "ennoblecidas", "enorgullecidas", "enrarecidas", "enredadas", "enripiadas", "enriquecidas", "enrocadas", "enrojecidas", "enroladas", "enrolladas", "enroscadas", "enrumbadas", "ensalzadas", "ensambladas", "ensañadas", "ensanchadas", "ensartadas", "ensayadas", "ensebadas", "enseñadas", "enseñoreadas", "ensilladas", "ensoberbecidas", "ensogadas", "ensombrecidas", "ensoñadas", "ensordecidas", "ensuciadas", "entabladas", "entalladas", "entendidas", "enteradas", "enternecidas", "enterradas", "entibiadas", "entintadas", "entonadas", "entorpecidas", "entradas", "entrampadas", "entrañadas", "entreabiertas", "entrecomilladas", "entrecruzadas", "entregadas", "entrelazadas", "entremetidas", "entremezcladas", "entrenadas", "entresacadas", "entretejidas", "entretenidas", "entreveradas", "entrevistadas", "entristecidas", "entrometidas", "entronadas", "entroncadas", "entronizadas", "entumecidas", "enturbiadas", "entusiasmadas", "enumeradas", "enunciadas", "envainadas", "envalentonadas", "envanecidas", "envasadas", "envejecidas", "envenenadas", "envestidas", "enviadas", "enviciadas", "envidiadas", "envilecidas", "enviudadas", "envueltas", "enzarzadas", "equilibradas", "equiparadas", "equivocadas", "erigidas", "erizadas", "erogadas", "erosionadas", "erotizadas", "erradicadas", "erradas", "esbozadas", "escabullidas", "escaladas", "escaldadas", "escalfadas", "escamadas", "escamoteadas", "escampadas", "escandalizadas", "escaneadas", "escapadas", "escaqueadas", "escarbadas", "escarchadas", "escarmentadas", "escarnecidas", "escaseadas", "escatimadas", "escenificadas", "escindidas", "esclarecidas", "esclavizadas", "escocidas", "escogidas", "escolarizadas", "escoltadas", "escondidas", "escoradas", "escrachadas", "escritas", "escrutadas", "escuchadas", "escudadas", "escudriñadas", "esculpidas", "escupidas", "escurridas", "esforzadas", "esfumadas", "esgrimidas", "esmeradas", "esmeriladas", "espabiladas", "espaciadas", "españolizadas", "espantadas", "esparcidas", "especificadas", "especuladas", "esperadas", "espesadas", "espetadas", "espiadas", "espigadas", "espinadas", "espiradas", "espiritualizadas", "espoleadas", "espolvoreadas", "esponjadas", "esponsorizadas", "esposadas", "esquematizadas", "esquiadas", "esquiladas", "esquilmadas", "esquivadas", "estabilizadas", "establecidas", "estacionadas", "estafadas", "estalladas", "estampadas", "estancadas", "estaqueadas", "estatizadas", "estatuidas", "esterificadas", "esterilizadas", "estigmatizadas", "estilizadas", "estimadas", "estimuladas", "estipuladas", "estiradas", "estorbadas", "estornudadas", "estragadas", "estranguladas", "estrechadas", "estrelladas", "estremecidas", "estrenadas", "estresadas", "estriadas", "estropeadas", "estructuradas", "estrujadas", "estudiadas", "eternizadas", "etiquetadas", "evacuadas", "evadidas", "evaluadas", "evangelizadas", "evaporadas", "evidenciadas", "evisceradas", "evitadas", "evocadas", "evolucionadas", "exacerbadas", "exageradas", "exaltadas", "examinadas", "exasperadas", "excarceladas", "excavadas", "excedidas", "exceptuadas", "excitadas", "exclamadas", "excluidas", "excretadas", "exculpadas", "excusadas", "execradas", "exhaladas", "exhibidas", "exhortadas", "exhumadas", "exigidas", "exiladas", "eximidas", "existidas", "exoneradas", "exorcizadas", "expandidas", "expedidas", "expedientadas", "expelidas", "expendidas", "experimentadas", "expiadas", "expiradas", "explayadas", "explicadas", "explicitadas", "exploradas", "explosionadas", "explotadas", "expoliadas", "exportadas", "expresadas", "exprimidas", "expropiadas", "expuestas", "expulsadas", "expurgadas", "extendidas", "exteriorizadas", "exterminadas", "externadas", "externalizadas", "extinguidas", "extirpadas", "extorsionadas", "extractadas", "extraditadas", "extraídas", "extralimitadas", "extrañadas", "extrapoladas", "extraviadas", "extremadas", "extruidas", "exudadas", "eyaculadas", "eyectadas", "fabricadas", "fabuladas", "facilitadas", "facturadas", "facultadas", "fagocitadas", "fajadas", "falladas", "fallecidas", "falsadas", "falseadas", "falsificadas", "familiarizadas", "fantaseadas", "fascinadas", "fastidiadas", "fatigadas", "favorecidas", "fecundadas", "felicitadas", "feminizadas", "fenecidas", "fermentadas", "fertilizadas", "festejadas", "fiadas", "fichadas", "fidelizadas", "figuradas", "fijadas", "filmadas", "filosofadas", "filtradas", "finalizadas", "financiadas", "fincadas", "fingidas", "finiquitadas", "firmadas", "fiscalizadas", "fisuradas", "flageladas", "flameadas", "flanqueadas", "flaqueadas", "fletadas", "flexibilizadas", "flexionadas", "flipadas", "floreadas", "florecidas", "flotadas", "fluctuadas", "focalizadas", "fogueadas", "foliadas", "folladas", "fomentadas", "fondeadas", "forcejeadas", "forestadas", "forjadas", "formadas", "formalizadas", "formateadas", "formuladas", "fornicadas", "forradas", "fortalecidas", "forzadas", "fotocopiadas", "fotografiadas", "fracasadas", "fraccionadas", "fracturadas", "fragmentadas", "fraguadas", "franqueadas", "frecuentadas", "fregadas", "frenadas", "fresadas", "friccionadas", "frotadas", "fructificadas", "fruncidas", "fugadas", "fulminadas", "fumadas", "fumigadas", "funcionadas", "fundadas", "fundamentadas", "fundidas", "fungidas", "fusiladas", "fusionadas", "fustigadas", "gafadas", "ganadas", "gangrenadas", "garabateadas", "garantidas", "garantizadas", "garridas", "gaseadas", "gastadas", "gemidas", "generadas", "generalizadas", "gerenciadas", "germinadas", "gestadas", "gestionadas", "giradas", "glorificadas", "glosadas", "gobernadas", "goleadas", "golpeadas", "gozadas", "grabadas", "graduadas", "graficadas", "granjeadas", "grapadas", "gratificadas", "gravadas", "gravitadas", "gritadas", "gruñidas", "guardadas", "guarecidas", "guarnecidas", "guerreadas", "guiadas", "guillotinadas", "guiñadas", "guindadas", "guisadas", "gustadas", "habilitadas", "habitadas", "habituadas", "habladas", "haladas", "halagadas", "halladas", "hartadas", "hechizadas", "hechas", "helenizadas", "henchidas", "hendidas", "heredadas", "heridas", "hermanadas", "herradas", "hervidas", "hibernadas", "hibridadas", "hidratadas", "higienizadas", "hiladas", "hilvanadas", "hincadas", "hinchadas", "hipnotizadas", "hipotecadas", "historiadas", "hojeadas", "holgadas", "holladas", "homenajeadas", "homogeneizadas", "homologadas", "honradas", "horadadas", "horneadas", "horrorizadas", "hospedadas", "hostigadas", "hostilizadas", "huidas", "humanadas", "humanizadas", "humectadas", "humedecidas", "humilladas", "hundidas", "hurgadas", "hurtadas", "ideadas", "idealizadas", "identificadas", "ideologizadas", "idiotizadas", "idolatradas", "ignoradas", "igualadas", "ilegalizadas", "iluminadas", "ilusionadas", "ilustradas", "imaginadas", "imbricadas", "imitadas", "impactadas", "impartidas", "impedidas", "impelidas", "imperadas", "impermeabilizadas", "implantadas", "implementadas", "implicadas", "imploradas", "importadas", "importunadas", "imposibilitadas", "impresionadas", "improvisadas", "impuestas", "impugnadas", "impulsadas", "imputadas", "inauguradas", "incautadas", "incendiadas", "incentivadas", "incineradas", "incitadas", "inclinadas", "incluidas", "incoadas", "incomodadas", "incorporadas", "incrementadas", "increpadas", "incriminadas", "incubadas", "inculcadas", "inculpadas", "incumplidas", "incurridas", "incursionadas", "indagadas", "indemnizadas", "independizadas", "indexadas", "indicadas", "indigestadas", "indignadas", "indispuestas", "individuadas", "inducidas", "indultadas", "inervadas", "infamadas", "infartadas", "infectadas", "inferidas", "inficionadas", "infiltradas", "infladas", "inflamadas", "infligidas", "influenciadas", "influidas", "informadas", "infravaloradas", "infringidas", "infundidas", "ingeniadas", "ingeridas", "ingresadas", "inhabilitadas", "inhaladas", "inhibidas", "inhumadas", "iniciadas", "inicializadas", "injertadas", "injuriadas", "inmigradas", "inmiscuidas", "inmoladas", "inmortalizadas", "inmovilizadas", "inmunizadas", "innovadas", "inoculadas", "inquietadas", "inquiridas", "insensibilizadas", "insertadas", "insinuadas", "insistidas", "inspeccionadas", "inspiradas", "instadas", "instaladas", "instauradas", "instigadas", "instituidas", "instruidas", "instrumentadas", "instrumentalizadas", "insufladas", "insultadas", "insumidas", "integradas", "intelectualizadas", "intensificadas", "intentadas", "interactuadas", "intercaladas", "intercambiadas", "intercedidas", "interceptadas", "interesadas", "interferidas", "interiorizadas", "intermediadas", "internacionalizadas", "internalizadas", "interpeladas", "interpoladas", "interpretadas", "interpuestas", "interrogadas", "interrumpidas", "intervenidas", "intimadas", "intimidadas", "intituladas", "intoxicadas", "intrigadas", "introducidas", "intuidas", "inundadas", "inutilizadas", "invadidas", "invalidadas", "inventadas", "inventariadas", "invertidas", "investidas", "investigadas", "invitadas", "invocadas", "involucionadas", "inyectadas", "ionizadas", "ironizadas", "irradiadas", "irrespetadas", "irrigadas", "irritadas", "irrogadas", "irrumpidas", "jactadas", "jaladas", "jaleadas", "jalonadas", "jaqueadas", "jerarquizadas", "jodidas", "jorobadas", "jubiladas", "jugadas", "juntadas", "juradas", "juramentadas", "justificadas", "juzgadas", "laboradas", "labradas", "laburadas", "lacadas", "laceradas", "lactadas", "ladeadas", "ladradas", "lamentadas", "lamidas", "laminadas", "languidecidas", "lanzadas", "lapidadas", "laqueadas", "largadas", "lastimadas", "lastradas", "latidas", "laudadas", "lavadas", "legalizadas", "legisladas", "legitimadas", "leídas", "lesionadas", "leudadas", "levantadas", "liadas", "liberadas", "liberalizadas", "libertadas", "libradas", "licitadas", "licuadas", "liderizadas", "lidiadas", "ligadas", "lijadas", "limadas", "limitadas", "limpiadas", "linchadas", "liquidadas", "litigadas", "llagadas", "llamadas", "llegadas", "llenadas", "llevadas", "lloradas", "localizadas", "logradas", "lubricadas", "luchadas", "lucidas", "lucradas", "lustradas", "maceradas", "machacadas", "macheteadas", "machucadas", "madreadas", "madrugadas", "maduradas", "magnetizadas", "magnificadas", "malacostumbradas", "malbaratadas", "malcriadas", "maleadas", "malentendidas", "malgastadas", "malinterpretadas", "malogradas", "maltratadas", "malversadas", "mamadas", "manchadas", "mancilladas", "mandadas", "manejadas", "mangadas", "mangoneadas", "manifestadas", "maniobradas", "manipuladas", "manoseadas", "manteadas", "mantenidas", "manufacturadas", "maquilladas", "maquinadas", "maravilladas", "marcadas", "marchitadas", "mareadas", "marginadas", "maridadas", "martilladas", "martirizadas", "masacradas", "masajeadas", "mascadas", "masificadas", "masticadas", "masturbadas", "matadas", "materializadas", "matizadas", "matriculadas", "maximizadas", "meadas", "mecanografiadas", "mechadas", "mecidas", "mediadas", "mediatizadas", "medicadas", "medidas", "meditadas", "medradas", "mejoradas", "melladas", "memorizadas", "mencionadas", "meneadas", "menguadas", "menoscabadas", "menospreciadas", "menstruadas", "mensualizadas", "mensuradas", "mentadas", "mentalizadas", "mentidas", "mercadeadas", "mercantilizadas", "merecidas", "merendadas", "mermadas", "merodeadas", "mesuradas", "metamorfoseadas", "metidas", "mezcladas", "migradas", "militadas", "militarizadas", "mimadas", "mimetizadas", "minadas", "minimizadas", "ministradas", "minusvaloradas", "miradas", "mistificadas", "mitificadas", "mitigadas", "modeladas", "modernizadas", "modificadas", "moduladas", "mofadas", "mojadas", "moldeadas", "molestadas", "molidas", "monetizadas", "monitorizadas", "monopolizadas", "montadas", "moradas", "moralizadas", "mordidas", "mordisqueadas", "mortificadas", "mosqueadas", "mostradas", "motejadas", "motivadas", "movidas", "movilizadas", "mudadas", "muestreadas", "multadas", "multiplicadas", "munidas", "murmuradas", "mutadas", "mutiladas", "nacionalizadas", "narcotizadas", "narradas", "naufragadas", "navegadas", "necesitadas", "negadas", "negociadas", "neutralizadas", "ninguneadas", "niveladas", "nombradas", "nominadas", "noqueadas", "normadas", "normalizadas", "notadas", "notificadas", "nutridas", "obcecadas", "obedecidas", "objetadas", "objetivadas", "obligadas", "obliteradas", "obnubiladas", "obradas", "obsequiadas", "observadas", "obsesionadas", "obstaculizadas", "obstruidas", "obtenidas", "obturadas", "obviadas", "ocasionadas", "ocluidas", "ocultadas", "ocupadas", "odiadas", "ofendidas", "ofertadas", "oficiadas", "oficializadas", "ofrecidas", "ofrendadas", "ofuscadas", "oídas", "ojeadas", "olfateadas", "olidas", "olvidadas", "omitidas", "ondeadas", "onduladas", "opacadas", "operadas", "opinadas", "oprimidas", "optadas", "optimizadas", "opuestas", "oradas", "orbitadas", "ordenadas", "ordeñadas", "organizadas", "orientadas", "originadas", "orilladas", "orinadas", "ornadas", "ornamentadas", "orquestadas", "osadas", "osciladas", "oscurecidas", "osificadas", "ostentadas", "otorgadas", "ovacionadas", "ovuladas", "oxidadas", "oxigenadas", "pacificadas", "pactadas", "padecidas", "paganizadas", "paginadas", "paladeadas", "paliadas", "palpadas", "paradas", "parafraseadas", "paralizadas", "parapetadas", "parasitadas", "parceladas", "parchadas", "parcheadas", "pareadas", "paridas", "parodiadas", "parqueadas", "participadas", "particularizadas", "partidas", "pasadas", "paseadas", "pastoreadas", "pataleadas", "pateadas", "patentadas", "patentizadas", "patinadas", "patrulladas", "pecadas", "pedaleadas", "pedidas", "pegadas", "peinadas", "pellizcadas", "penalizadas", "penetradas", "pensadas", "percatadas", "percibidas", "percutidas", "perdidas", "perdonadas", "perduradas", "perecidas", "peregrinadas", "perfeccionadas", "perfiladas", "perforadas", "perfumadas", "pergeñadas", "peritadas", "perjudicadas", "perjuradas", "permeadas", "permitidas", "permutadas", "pernoctadas", "perpetradas", "perpetuadas", "perseguidas", "perseveradas", "persistidas", "personadas", "personalizadas", "personificadas", "persuadidas", "pertenecidas", "pertrechadas", "perturbadas", "pervertidas", "pervividas", "pescadas", "petadas", "peticionadas", "picadas", "picaneadas", "picoteadas", "pifiadas", "pignoradas", "pilladas", "pilotadas", "piloteadas", "pinceladas", "pinchadas", "pintadas", "pintarrajeadas", "pinzadas", "piradas", "pirateadas", "pisadas", "pisoteadas", "pitadas", "placidas", "plagiadas", "planchadas", "planeadas", "plantadas", "planteadas", "plasmadas", "platicadas", "plegadas", "pluralizadas", "podadas", "poetizadas", "polemizadas", "politizadas", "pololeadas", "ponderadas", "pontificadas", "popularizadas", "porfiadas", "portadas", "porteadas", "posadas", "posesionadas", "posibilitadas", "posicionadas", "pospuestas", "posteadas", "postergadas", "postradas", "postuladas", "potenciadas", "practicadas", "precarizadas", "precedidas", "preceptuadas", "precintadas", "precipitadas", "precisadas", "preconizadas", "predicadas", "predichas", "predispuestas", "predominadas", "preferidas", "prefiguradas", "pregonadas", "preguntadas", "prejuzgadas", "premiadas", "prendadas", "prendidas", "preocupadas", "preparadas", "presagiadas", "prescindidas", "presenciadas", "presentadas", "presentidas", "preservadas", "presididas", "presionadas", "prestadas", "prestigiadas", "presumidas", "presurizadas", "pretendidas", "preteridas", "prevalecidas", "prevalidas", "prevaricadas", "prevenidas", "previstas", "primadas", "principiadas", "pringadas", "priorizadas", "privatizadas", "probadas", "problematizadas", "procedidas", "procesadas", "proclamadas", "procreadas", "procuradas", "prodigadas", "producidas", "profanadas", "proferidas", "profesadas", "profesionalizadas", "profetizadas", "profundizadas", "programadas", "progresadas", "prohibidas", "prohijadas", "proletarizadas", "proliferadas", "prologadas", "prolongadas", "promediadas", "prometidas", "promocionadas", "promovidas", "promulgadas", "pronosticadas", "pronunciadas", "propagadas", "propaladas", "propendidas", "propiciadas", "propinadas", "proporcionadas", "propuestas", "propugnadas", "propulsadas", "prorrateadas", "prorrogadas", "proseguidas", "prosperadas", "prostituidas", "protegidas", "protestadas", "protocolizadas", "provenidas", "provocadas", "proyectadas", "psicoanalizadas", "publicadas", "publicitadas", "puestas", "pugnadas", "pujadas", "pulidas", "pulsadas", "pululadas", "pulverizadas", "punadas", "punteadas", "puntuadas", "puntualizadas", "punzadas", "purgadas", "purificadas", "puteadas", "quebradas", "quebrantadas", "quejadas", "quemadas", "querelladas", "queridas", "quintuplicadas", "quitadas", "racionadas", "racionalizadas", "radiadas", "radicadas", "radicalizadas", "raídas", "rajadas", "ralentizadas", "rapadas", "rapeadas", "raptadas", "rascadas", "rasgadas", "rasguñadas", "raspadas", "rastreadas", "rasuradas", "ratificadas", "rayadas", "razonadas", "reabiertas", "reabsorbidas", "reaccionadas", "reactivadas", "readaptadas", "readmitidas", "reafirmadas", "reagrupadas", "reajustadas", "realimentadas", "realizadas", "realzadas", "reanimadas", "reanudadas", "reaparecidas", "rearmadas", "reasumidas", "reavivadas", "rebajadas", "rebalsadas", "rebanadas", "rebasadas", "rebatidas", "rebautizadas", "rebeladas", "reblandecidas", "rebobinadas", "rebosadas", "rebotadas", "rebozadas", "rebuscadas", "recabadas", "recaídas", "recaladas", "recalcadas", "recalentadas", "recalificadas", "recapacitadas", "recapituladas", "recargadas", "recatadas", "recaudadas", "receptadas", "recetadas", "rechazadas", "recibidas", "recicladas", "recitadas", "reclamadas", "reclinadas", "reclutadas", "recobradas", "recocidas", "recogidas", "recolectadas", "recomendadas", "recomenzadas", "recompensadas", "recompuestas", "reconcentradas", "reconciliadas", "reconducidas", "reconfortadas", "reconocidas", "reconquistadas", "reconsideradas", "reconstituidas", "reconstruidas", "reconvenidas", "reconvertidas", "recopiladas", "recordadas", "recorridas", "recortadas", "recreadas", "recriminadas", "recrudecidas", "rectificadas", "recubiertas", "reculadas", "recuperadas", "recurridas", "recusadas", "redactadas", "redefinidas", "redescubiertas", "redimensionadas", "redimidas", "rediseñadas", "redistribuidas", "redituadas", "redobladas", "redondeadas", "reducidas", "redundadas", "reedificadas", "reeditadas", "reeducadas", "reelaboradas", "reembolsadas", "reemplazadas", "reencarnadas", "reencauchadas", "reencontradas", "reenganchadas", "reenviadas", "reescritas", "reestructuradas", "reexaminadas", "refaccionadas", "referidas", "refinadas", "refinanciadas", "reflejadas", "reflexionadas", "reflotadas", "reforestadas", "reformadas", "reforzadas", "refractadas", "refrenadas", "refrendadas", "refrescadas", "refrigeradas", "refundidas", "refutadas", "regadas", "regaladas", "regañadas", "regateadas", "regeneradas", "regentadas", "regenteadas", "regidas", "regionalizadas", "registradas", "regladas", "reglamentadas", "regocijadas", "regodeadas", "regresadas", "reguladas", "regularizadas", "regurgitadas", "rehabilitadas", "rehechas", "rehogadas", "rehuidas", "rehusadas", "reídas", "reinadas", "reincididas", "reincorporadas", "reingresadas", "reiniciadas", "reinsertadas", "reinstaladas", "reinstauradas", "reintegradas", "reinventadas", "reinvertidas", "reiteradas", "reivindicadas", "rejuvenecidas", "relajadas", "relamidas", "relanzadas", "relatadas", "relativizadas", "relegadas", "releídas", "relevadas", "religadas", "rellenadas", "remachadas", "remadas", "remangadas", "remarcadas", "rematadas", "remecidas", "remediadas", "rememoradas", "remendadas", "remitidas", "remodeladas", "remojadas", "remolcadas", "remontadas", "removidas", "remplazadas", "renacidas", "rendidas", "renegadas", "renegociadas", "reñidas", "renombradas", "renovadas", "rentabilizadas", "rentadas", "renunciadas", "reordenadas", "reorganizadas", "reorientadas", "reparadas", "repartidas", "repasadas", "repatriadas", "repelidas", "repensadas", "repercutidas", "repescadas", "repetidas", "repicadas", "repintadas", "replanteadas", "replegadas", "replicadas", "repobladas", "reportadas", "reporteadas", "reposadas", "repreguntadas", "reprendidas", "represadas", "representadas", "reprimidas", "reprobadas", "reprochadas", "reproducidas", "repudiadas", "repuestas", "repugnadas", "repuntadas", "reputadas", "requeridas", "requisadas", "resaltadas", "resarcidas", "resbaladas", "rescatadas", "rescindidas", "resecadas", "reseñadas", "reservadas", "reseteadas", "resguardadas", "resididas", "resignadas", "resistidas", "resonadas", "respaldadas", "respetadas", "respiradas", "resplandecidas", "respondidas", "responsabilizadas", "resquebrajadas", "restablecidas", "restadas", "restauradas", "restituidas", "restregadas", "resucitadas", "resueltas", "resumidas", "resurgidas", "retadas", "retardadas", "retenidas", "retiradas", "retocadas", "retomadas", "retorcidas", "retornadas", "retractadas", "retraídas", "retransmitidas", "retrasadas", "retratadas", "retribuidas", "retrotraídas", "retumbadas", "reunidas", "reunificadas", "reutilizadas", "revalidadas", "revalorizadas", "revaluadas", "reveladas", "revendidas", "reventadas", "reverdecidas", "reverenciadas", "revertidas", "revestidas", "reviradas", "revisadas", "revitalizadas", "revividas", "revocadas", "revolcadas", "revoloteadas", "revolucionadas", "revueltas", "ridiculizadas", "rifadas", "rimadas", "rivalizadas", "rizadas", "robadas", "robustecidas", "rociadas", "rodadas", "rodeadas", "rogadas", "roídas", "rondadas", "rotadas", "rotas", "rotuladas", "roturadas", "rozadas", "ruborizadas", "rubricadas", "rugidas", "rumiadas", "rumoradas", "sabidas", "saboreadas", "saboteadas", "sacadas", "saciadas", "sacralizadas", "sacrificadas", "sacudidas", "saldadas", "salpimentadas", "salpullidas", "saltadas", "salteadas", "saludadas", "salvadas", "salvaguardadas", "sanadas", "saneadas", "sangradas", "santificadas", "saqueadas", "satanizadas", "satirizadas", "satisfechas", "sazonadas", "secadas", "seccionadas", "secretadas", "secuenciadas", "secuestradas", "secundadas", "sedimentadas", "seducidas", "segadas", "segmentadas", "segregadas", "seguidas", "seleccionadas", "sembradas", "señaladas", "sensibilizadas", "sentadas", "sentenciadas", "sentidas", "separadas", "serenadas", "serradas", "servidas", "significadas", "silenciadas", "simbolizadas", "simpatizadas", "simplificadas", "simuladas", "sinceradas", "sincronizadas", "sindicadas", "sindicalizadas", "singularizadas", "sintetizadas", "sintonizadas", "sistematizadas", "situadas", "sobadas", "sobornadas", "sobradas", "sobrecargadas", "sobrecogidas", "sobreentendidas", "sobreestimadas", "sobrellevadas", "sobrentendidas", "sobrepasadas", "sobrepuestas", "sobresalidas", "sobresaltadas", "sobrestimadas", "sobrevenidas", "sobrevividas", "sobrevoladas", "socavadas", "socializadas", "socorridas", "sodomizadas", "sofocadas", "sojuzgadas", "solapadas", "solicitadas", "solidarizadas", "solidificadas", "soliviantadas", "soltadas", "solucionadas", "solventadas", "sombreadas", "sometidas", "sonadas", "soñadas", "sondeadas", "sonreídas", "sonrojadas", "sopesadas", "sopladas", "soportadas", "sorbidas", "sorprendidas", "sorteadas", "sosegadas", "soslayadas", "sospechadas", "sostenidas", "suavizadas", "subastadas", "subcontratadas", "subdivididas", "subestimadas", "subidas", "sublevadas", "sublimadas", "subrayadas", "subrogadas", "subsanadas", "subsidiadas", "subsistidas", "substraídas", "subsumidas", "subvertidas", "subyugadas", "succionadas", "sucedidas", "sucumbidas", "sudadas", "sufragadas", "sufridas", "sugeridas", "sugestionadas", "suicidadas", "sujetadas", "sumadas", "sumergidas", "suministradas", "supeditadas", "superadas", "superpuestas", "supervisadas", "suplantadas", "suplicadas", "suplidas", "suprimidas", "supuestas", "surcadas", "surtidas", "suscitadas", "suspendidas", "suspiradas", "sustanciadas", "sustantivadas", "sustentadas", "sustituidas", "sustraídas", "susurradas", "suturadas", "tabuladas", "tachadas", "taladas", "taladradas", "talladas", "tambaleadas", "tamizadas", "tañidas", "tanteadas", "tapadas", "tapizadas", "taponadas", "tarareadas", "tardadas", "tasadas", "tatuadas", "tecleadas", "tejidas", "telefoneadas", "televisadas", "temidas", "templadas", "tendidas", "tenidas", "tensadas", "tentadas", "teorizadas", "terciadas", "tergiversadas", "terminadas", "territorializadas", "testadas", "testeadas", "testificadas", "testimoniadas", "tildadas", "timadas", "timbradas", "tinturadas", "tipeadas", "tipificadas", "tiradas", "tiranizadas", "tironeadas", "tiroteadas", "titubeadas", "tiznadas", "tocadas", "toleradas", "tomadas", "tonificadas", "topadas", "toqueteadas", "torcidas", "toreadas", "tornadas", "tornasoladas", "torneadas", "torpedeadas", "torturadas", "tosidas", "tostadas", "totalizadas", "trabadas", "trabajadas", "traducidas", "traficadas", "tragadas", "traicionadas", "traídas", "trajinadas", "tramadas", "tramitadas", "trancadas", "tranquilizadas", "transcendidas", "transcurridas", "transferidas", "transfiguradas", "transformadas", "transfundidas", "transgredidas", "transigidas", "transitadas", "transliteradas", "translucidas", "transmitidas", "transmutadas", "transparentadas", "transpiradas", "transportadas", "transpuestas", "trasegadas", "trasgredidas", "trasladadas", "traslapadas", "traslucidas", "trasnochadas", "traspapeladas", "traspasadas", "trasplantadas", "traspuestas", "trasquiladas", "trasteadas", "trastocadas", "trastornadas", "trasvasadas", "tratadas", "trazadas", "trenzadas", "trepadas", "tributadas", "trincadas", "triplicadas", "trituradas", "triunfadas", "trivializadas", "trocadas", "troceadas", "tronadas", "tronchadas", "truncadas", "tumbadas", "tuneadas", "turbadas", "turnadas", "tuteladas", "ufanadas", "ultimadas", "uncidas", "ungidas", "unidas", "universalizadas", "untadas", "urbanizadas", "urdidas", "usadas", "usufructuadas", "usurpadas", "utilizadas", "vacadas", "vaciadas", "vaciladas", "vacunadas", "vagadas", "validadas", "validas", "valoradas", "valorizadas", "valuadas", "vanagloriadas", "vandalizadas", "vaporizadas", "variadas", "vaticinadas", "vedadas", "vehiculadas", "vejadas", "veladas", "vencidas", "vendadas", "vendidas", "veneradas", "vengadas", "ventiladas", "veraneadas", "verbalizadas", "verificadas", "versadas", "versionadas", "vertebradas", "vertidas", "vestidas", "vetadas", "viabilizadas", "viajadas", "vibradas", "victimadas", "victimizadas", "vigiladas", "vigorizadas", "vilipendiadas", "vindicadas", "violadas", "violentadas", "viradas", "visadas", "visibilizadas", "visitadas", "vislumbradas", "vistas", "visualizadas", "vitoreadas", "vitrificadas", "vituperadas", "vividas", "vivificadas", "vocalizadas", "voceadas", "vociferadas", "voladas", "volatilizadas", "volcadas", "volteadas", "vomitadas", "votadas", "vueltas", "vulcanizadas", "vulgarizadas", "vulneradas", "yuxtapuestas", "zafadas", "zambullidas", "zampadas", "zanjadas", "zarandeadas", "zarpadas", "zozobradas", "zumbadas", "zurcidas", "zurradas"];
};
var Hv = {};
Object.defineProperty(Hv, "__esModule", {
  value: !0
});
Hv.default = function() {
  return ["encontrado", "levado", "considdo", "condenado", "registrado", "encaminhado", "realizado", "lançado", "aprovado", "acusado", "divulgado", "apresentado", "usado", "dado", "localizado", "identido", "publicado", "votado", "anuncdo", "abordado", "libdo", "baleado", "mcado", "ado", "assassinado", "informado", "prepado", "utilizado", "resultado", "assinado", "revelado", "confirmado", "chamado", "acionado", "notido", "formado", "passado", "contratado", "autuado", "invigado", "nomeado", "retirado", "chegado", "convidado", "quionado", "colocado", "apontado", "acabado", "flagrado", "limitado", "denuncdo", "julgado", "innado", "envdo", "deixado", "constatado", "pticipado", "complicado", "obrigado", "relacionado", "derrotado", "inaugurado", "espdo", "dinado", "afastado", "cuidado", "aplicado", "ligado", "tratado", "eliminado", "baseado", "convocado", "matado", "grdo", "registado", "entrado", "fechado", "dgnosticado", "indicado", "analisado", "preocupado", "addo", "começado", "prorrogado", "agendado", "capturado", "negado", "acompanhado", "indicdo", "aumentado", "executado", "resgatado", "enrado", "casado", "inaproprdo", "recomendado", "citado", "procurado", "alcançado", "declado", "organizado", "roubado", "elaborado", "mado", "instaurado", "trabalhado", "transportado", "errado", "voltado", "inicdo", "achado", "gdo", "logado", "cancelado", "mostrado", "atacado", "minado", "comprado", "solicitado", "emprado", "conquistado", "inessado", "alado", "tentado", "derrubado", "do", "encerrado", "acostumado", "montado", "fundado", "demasdo", "autorizado", "advogado", "disputado", "atropelado", "assocdo", "recupdo", "filmado", "ajudado", "abandonado", "crdo", "causado", "jogado", "rejeitado", "alvejado", "falado", "apaixonado", "multado", "firmado", "inrogado", "premdo", "libertado", "noticdo", "homenageado", "deminado", "pensado", "comemorado", "negocdo", "comunicado", "dedicado", "demonstrado", "criticado", "instalado", "obvado", "esfaqueado", "culpado", "inspirado", "sepultado", "pado", "adotado", "controlado", "acendido", "notado", "opdo", "acessado", "assaltado", "projetado", "mudado", "apanhado", "disponibilizado", "engraçado", "inditado", "calculado", "programado", "consultado", "cobrado", "celebrado", "responsabilizado", "respeitado", "detectado", "cortado", "eleito deputado", "falhado", "implementado", "selecionado", "motivado", "afetado", "verido", "sentado", "forçado", "acordado", "batizado", "reforçado", "exondo", "atuado", "imado", "provocado", "espancado", "fotografado", "tado", "baixado", "aceitado", "licencdo", "deputado", "enfrentado", "quivado", "implantado", "ldo", "dispensado", "supdo", "protocolado", "evitado", "ultrapassado", "repassado", "apagado", "recusado", "desenhado", "anulado", "provado", "avisado", "perguntado", "nformado", "relatado", "explicado", "afirmado", "apurado", "encado", "focado", "comerclizado", "modido", "explorado", "inpretado", "lembrado", "classido", "empenhado", "reado", "incenddo", "escalado", "vicdo", "afogado", "aprecdo", "equipado", "empatado", "inceptado", "praticado", "designado", "aproveitado", "orientado", "sequrado", "direcionado", "velado", "tirado", "buscado", "transformado", "habituado", "violado", "adequado", "prejudicado", "oficlizado", "confrontado", "beneficdo", "dominado", "isolado", "ampldo", "detetado", "apostado", "processado", "comprovado", "compado", "situado", "atualizado", "ganhado", "vedado", "cansado", "coordenado", "idealizado", "conectado", "tornado", "rastado", "ameaçado", "finalizado", "ocupado", "renovado", "reivindicado", "elevado", "desempregado", "planejado", "cercado", "nçado", "vetado", "integrado", "remessado", "melhorado", "efetuado", "hospitalizado", "financdo", "republicado", "mencionado", "bloqueado", "atirado", "apodo", "concentrado", "atrasado", "acertado", "abusado", "poupado", "doado", "editado", "embrgado", "lavrado", "entrevistado", "comandado", "gostado", "ordenado", "em ado", "vinculado", "lotado", "em chegado", "udado", "elogdo", "cruzado", "desvdo", "sentencdo", "fixado", "cacizado", "andado", "em passado", "representado", "administrado", "desctado", "furtado", "puxado", "agudado", "intimado", "adaptado", "funcionado", "visitado", "conplado", "lesionado", "conversado", "fildo", "hospedado", "avistado", "assegurado", "alimentado", "trocado", "empossado", "facultado", "vado", "configurado", "ministrado", "evacuado", "quebrado", "cassado", "cotado", "homologado", "enquadrado", "dacado", "revado", "mandado", "graduado", "penalizado", "monitorado", "rebaixado", "copdo", "ferdo", "justido", "impulsionado", "concretizado", "decretado", "agracdo", "viu obrigado", "m chegado", "torturado", "levantado", "recapturado", "trdo", "extraditado", "m pticipado", "apelidado", "antecipado", "captado", "postado", "noticiado", "prestado", "impressionado", "compartilhado", "contado", "optado", "fabricado", "dasiado", "medicado", "ampliado", "estado", "estimado", "questionado", "confessado", "estuprado", "prevado", "calado", "criado", "queimado", "descartado", "encarado", "á levado", "estudado", "alertado", "tomado", "carregado", "barrado", "patado", "associado", "preparado", "marcado", "sancionado", "esgotado", "influenciado", "irritado", "ovacionado", "iniciado", "contactado", "estreado", "apoiado", "partilhado", "bêbado", "alargado", "arriscado", "participado", "cadastrado", "gravado", "disparado", "ignorado", "faltado", "implentado", "colaborado", "encomendado", "depositado", "danido", "normalizado", "enganado", "donstrado", "diagnosticado", "avançado", "denunciado", "enviado", "valorizado", "beneficiado", "condecorado", "aliado", "negociado", "deslocado", "parcelado", "desativado", "comercializado", "tivesse do", "completado", "incorporado", "pressionado", "comorado", "desligado", "desviado", "especializado", "treinado", "virado", "briagado", "orçado", "reavaliado", "delicado", "despertado", "pesado", "financiado", "despregado", "sorteado", "sequestrado", "possado", "condicionado", "chumbado", "ativado", "tenham do", "armado", "alinhado", "encontrado carbonizado", "acatado", "delegado", "presenciado", "sondado", "viajado", "pecado", "tenham passado", "solucionado", "crado", "dificultado", "apropriado", "tivesse passado", "adiado", "regressado", "assinalado", "inocentado", "compensado", "tocado", "deitado", "amado", "reformado", "amarrado", "goleado", "arratado", "castigado", "animado", "destinado", "m dado", "indagado", "entregado", "rodado", "lutado", "inventado", "combinado", "investigado", "purrado", "efetivado", "liddo", "avaliado", "aconselhado", "ateado", "retratado", "protagonizado", "arranjado", "parado", "á marcado", "iam do", "continuado", "replicado", "arbitrado", "reportado", "equilibrado", "apreciado", "decretar estado", "tombado", "preditado", "manifestado", "m deixado", "imobilizado", "destacado", "contestado", "declarado", "pagado", "dorado", "suscitado", "moddo", "revogado", "guardado", "adicionado", "estipulado", "ajustado", "intensido", "desafiado", "examinado", "comparado", "galardoado", "adiantado", "arrombado", "reajustado", "á fechado", "á deixado", "vê obrigado", "privado", "sagrado", "mercado", "arquivado", "importado", "formalizado", "priado", "vazado", "atravessado", "suportado", "pregado", "testado", "diferenciado", "separado", "comentado", "reprovado", "circulado", "armazenado", "alcoolizado", "clicado", "matriculado", "arrastado", "patrocinado", "atrelado", "chocado", "aposentado", "pintado", "filiado", "os obvado", "despenhado", "tivesse chegado", "sacado", "recepcionado", "recado", "incetado", "m entrado", "anunciado", "cogitado", "agradado", "contabilizado", "paralisado", "cursado", "escapado", "recompensado", "aclamado", "chateado", "á entrado", "acreditado", "recuado", "encantado", "indiciado", "regulamentado", "facilitado", "revisado", "arrancado", "dotado", "anexado", "arrecadado", "recheado", "retornado", "desarmado", "encontrados", "publicados", "registrados", "mediados", "levados", "utilizados", "encaminhados", "denunciados", "bloqueados", "identificados", "divulgados", "votados", "considerados", "usados", "realizados", "apresentados", "condenados", "vetados", "acionados", "tratados", "retirados", "localizados", "alados", "acusados", "obrigados", "liberados", "chamados", "criados", "esperados", "confirmados", "colocados", "abordados", "notificados", "autuados", "aprovados", "informados", "convidados", "enviados", "revelados", "marcados", "preocupados", "selecionados", "recuperados", "resgatados", "registados", "assassinados", "flagrados", "invigados", "lançados", "preparados", "convocados", "contratados", "afetados", "dinados", "cancelados", "relacionados", "baleados", "roubados", "transportados", "o invigados", "prados", "disponibilizados", "anunciados", "instalados", "comprados", "mobilizados", "dados", "ligados", "indiciados", "contabilizados", "julgados", "fechados", "avaliados", "ar preparados", "analisados", "afastados", "consultados", "executados", "capturados", "assinados", "repassados", "apontados", "aplicados", "atacados", "eliminados", "o realizados", "beneficiados", "parados", "inessados", "armados", "disparados", "habituados", "concentrados", "evitados", "doados", "acostumados", "coletados", "armazenados", "citados", "achados", "incendiados", "orientados", "nomeados", "libertados", "associados", "armazenar dados", "descartados", "avisados", "autorizados", "innados", "responsabilizados", "furtados", "focados", "acompanhados", "indicados", "detectados", "deixados", "formados", "contplados", "multados", "queimados", "espalhados", "arrecadados", "priados", "derrotados", "obvados", "somos obrigados", "deslocados", "efetuados", "resultados", "respeitados", "fiscalizados", "acessados", "programados", "iniciados", "detetados", "tomados", "ob resultados", "esgotados", "desviados", "danificados", "dispensados", "limitados", "classificados", "solicitados", "abandonados", "recapturados", "levantados", "casados", "apanhados", "comercializados", "baseados", "alcançados", "instaurados", "o procurados", "iam usados", "procurados", "homenageados", "diagnosticados", "separados", "trocados", "prejudicados", "enrados", "vinculados", "o utilizados", "leiloados", "cobrados", "entrevistados", "declarados", "fomos informados", "disputados", "penhados", "praticados", "fabricados", "mandados", "rejeitados", "incentivados", "cortados", "gerados", "dacados", "aproveitados", "apresentar resultados", "ocupados", "relatados", "agendados", "deletados", "tados", "representados", "treinados", "forçados", "adotados", "constatados", "causados", "cumpre mandados", "alertados", "fotografados", "atrasados", "comunicados", "assaltados", "vacinados", "apaixonados", "inditados", "considere inadequados", "depositados", "quionados", "negociados", "ofertados", "cansados", "ar fechados", "apurados", "evacuados", "elaborados", "matriculados", "voltados", "encerrados", "negados", "sorteados", "sequrados", "gravados", "montados", "cumprir mandados", "reportados", "integrados", "ob dados", "processados", "lotados", "importados", "entusiasmados", "errados", "o analisados", "despregados", "exonerados", "fornecer dados", "arrastados", "firmados", "inceptados", "retomados", "moderados", "arquivados", "equipados", "organizados", "ameaçados", "prar cuidados", "visualizados", "recolher dados", "controlados", "patados", "jogados", "adicionados", "monitorados", "poupados", "vistoriados", "verificados", "celebrados", "elevados", "administrados", "iam utilizados", "produzir resultados", "possados", "visitados", "direcionados", "quebrados", "aliados", "variados", "hospitalizados", "apresenta resultados", "alinhados", "roubar dados", "aguardados", "incorporados", "implantados", "cadastrados", "lesionados", "revoltados", "filmados", "mostrados", "ar acompanhados", "hospedados", "conquistados", "avançados", "ficaram assustados", "considerados culpados", "apresentou resultados", "exist dados", "culpados", "editados", "ar ligados", "penalizados", "recomendados", "atualizados", "desligados", "imputados", "transformados", "conectados", "teve resultados", "lbrados", "o encaminhados", "inrogados", "arressados", "atropelados", "revados", "sentados", "adiados", "escalados", "inspira cuidados", "inaugurados", "financiados", "apreciados", "o colocados", "projetados", "passados", "cuidados", "compensados", "intimados", "enquadrados", "derrubados", "explorados", "designados", "melhorados", "calculados", "implentados", "tirados", "barrados", "assustados", "alvejados", "superados", "runerados", "adequados", "enganados", "chocados", "afogados", "alimentados", "ministrados", "cumpriram mandados", "ultrapassados", "renovados", "alcançar resultados", "pensados", "desafiados", "assegurados", "prevados", "guardados", "paralisados", "habilitados", "agraciados", "acampados", "ar focados", "o apurados", "reforçados", "apresentaram resultados", "baixados", "o obrigados", "o prejudicados", "provocados", "cassados", "capacitados", "imulados", "apoiados", "desesperados", "o avaliados", "dedicados", "pertences roubados", "desenhados", "ficaram espalhados", "inpretados", "ficaram impressionados", "pregados", "protocolados", "torturados", "indignados", "trabalhados", "suportados", "analisou dados", "avistados", "recepcionados", "reúne dados", "animados", "divulgou dados", "recrutados", "parcelados", "indexados", "lavrados", "ficaram danificados", "o executados", "somos confrontados", "anotados", "ranejados", "efugiados", "listados", "ignorados", "computados", "for considerados", "adaptados", "captados", "movimentados", "indicam dados", "retratados", "solucionados", "contactados", "confrontados", "cercados", "sepultados", "plantados", "mencionados", "reivindicados", "comparados", "udados", "imados", "imunizados", "mostram dados", "refugiados", "confiscados", "arratados", "pesquisados", "infectados", "compartilhados", "situados", "arrancados", "anulados", "encarados", "apresentadados", "motivados", "exportados", "alocados", "finalizados", "inspirados", "violados", "operados", "incetados", "criticados", "realizada", "encontrada", "criada", "considerada", "tomada", "limitada", "aprovada", "divulgada", "nada", "marcada", "levada", "confirmada", "acionada", "publicada", "registrada", "apresentada", "anunciada", "encaminhada", "usada", "lançada", "deu entrada", "chamada", "mada", "pagar nada", "inmada", "identida", "aplicada", "utilizada", "decada", "relacionada", "condenada", "adiada", "encerrada", "inaugurada", "liberada", "revelada", "abordada", "localizada", "estão cada", "colocada", "são cada", "agendada", "fundada", "enviada", "retirada", "cada", "iniciada", "baseada", "acusada", "notida", "assassinada", "avançada", "convidada", "vetada", "dar entrada", "vedada", "ligada", "dada", "disputada", "autorizada", "internada", "deflagrada", "baleada", "contratada", "preparada", "votada", "assinada", "acompanhada", "tratada", "tinha nada", "convocada", "obrigada", "fechada", "determinada", "cancelada", "analisada", "diagnosticada", "casada", "adotada", "procurada", "comunicada", "partilhada", "motivada", "atacada", "flagrada", "destinada", "montada", "solicitada", "associada", "apontada", "faz nada", "organizada", "entrada", "nomeada", "decretada", "interditada", "deram entrada", "eliminada", "questionada", "rejeitada", "preocupada", "instalada", "programada", "gravada", "alterada", "criticada", "tirada", "constatada", "esperada", "visitada", "investigada", "comprada", "voltada", "deixada", "resgatada", "assaltada", "declarada", "derrotada", "reçada", "liderada", "batizada", "atropelada", "afetada", "roubada", "indicada", "parada", "descartada", "respeitada", "causada", "recuperada", "estuprada", "sancionada", "autuada", "transportada", "avaliada", "julgada", "controlada", "inspirada", "dizer nada", "afastada", "fotografada", "havnada", "retomada", "denunciada", "executada", "pensada", "dedicada", "ameaçada", "abandonada", "contada", "citada", "provocada", "filmada", "cobrada", "cortada", "levantada", "antecipada", "concentrada", "implementada", "repassada", "efetuada", "consultada", "elaborada", "falar nada", "acessada", "focada", "empenhada", "encarada", "achada", "detectada", "negada", "complicada", "situada", "avisada", "sentada", "projetada", "orientada", "multada", "passada", "comentada", "desencadeada", "ajuizada", "justida", "alimentada", "premiada", "apreciada", "feito nada", "compartilhada", "celebrada", "disponibilizada", "aconteceu nada", "interpretada", "isolada", "recomendada", "caracterizada", "errada", "derrubada", "registada", "disse nada", "obvada", "transmada", "protocolada", "interessada", "esfaqueada", "selecionada", "sequestrada", "estudada", "alcançada", "integrada", "çada", "condicionada", "fixada", "evitada", "ampliada", "oficializada", "classida", "explicada", "ocupada", "editada", "finalizada", "implantada", "apaixonada", "detetada", "revogada", "comandada", "coordenada", "enterrada", "custa nada", "superada", "responsabilizada", "bloqueada", "especializada", "alertada", "homenageada", "conquistada", "acertada", "fazem nada", "desenhada", "negociada", "verida", "elevada", "testada", "jogada", "apoiada", "representada", "orçada", "arrastada", "recusada", "explorada", "concretizada", "capturada", "acostumada", "comprovada", "sabe nada", "estimada", "furtada", "libertada", "calculada", "promulgada", "trabalhada", "elogiada", "direcionada", "planejada", "assegurada", "clicada", "postada", "abusada", "comparada", "renovada", "arremessada", "arrombada", "alvejada", "administrada", "anulada", "prejudicada", "violada", "adequada", "operada", "advogada", "prestada", "espancada", "puxada", "tornada", "aproveitada", "ministrada", "indiciada", "alinhada", "acordada", "comemorada", "comercializada", "noticiada", "vinculada", "quebrada", "evacuada", "conplada", "adaptada", "chumbada", "contestada", "dominada", "danida", "beneficiada", "atrasada", "licenciada", "chegada", "hospedada", "prorrogada", "idealizada", "atualizada", "apanhada", "destacada", "aguardada", "revada", "mostrada", "viu nada", "cercada", "melhorada", "prevada", "privilegiada", "sediada", "instaurada", "regulamentada", "gerada", "barrada", "ultrapassada", "relatada", "intimada", "hospitalizada", "malizada", "aumentada", "arquivada", "normalizada", "desativada", "lembrada", "financiada", "influenciada", "sabnada", "encomendada", "cansada", "desempregada", "praticada", "doada", "deslocada", "trocada", "paralisada", "homologada", "captada", "apagada", "lotada", "designada", "adjudicada", "modida", "acatada", "medicada", "ver nada", "processada", "violentada", "ignorada", "incendiada", "acontecer nada", "fazer piada", "tornar cada", "alargada", "estamos cada", "r parada", "equipada", "estacionada", "incorporada", "ganhar nada", "afogada", "escalada", "empatada", "mudada", "remada", "habituada", "encabeçada", "delicada", "contactada", "coroada", "impulsionada", "sei nada", "deitada", "veiculada", "mencionada", "atrelada", "monitorada", "agravada", "raptada", "penalizada", "apurada", "queimada", "pintada", "entrevistada", "adiantada", "fazer cada", "ordenada", "sepultada", "inventada", "dispensada", "esgotada", "arrancada", "firmada", "apelidada", "sustentada", "chocada", "faz piada", "terá entrada", "exonerada", "ratida", "retratada", "protagonizada", "torturada", "assolapada", "abalada", "plantada", "centrada", "manifestada", "generalizada", "dar risada", "desesperada", "enquadrada", "culpada", "enfrentada", "efetivada", "alagada", "ambientada", "complementada", "espalhada", "piada", "frustrada", "sejam cada", "compensada", "valorizada", "descarregada", "examinada", "assinalada", "consolidada", "tocada", "notada", "trancada", "carregada", "privada", "pesada", "travada", "rebaixada", "restaurada", "arrematada", "intensida", "interceptada", "revoltada", "assustada", "r marcada", "crescer cada", "equacionada", "confrontada", "recheada", "irritada", "deputada", "animada", "calada", "cotada", "encantada", "ponderada", "desvendada", "remarcada", "armazenada", "assediada", "depositada", "vem equipada", "sorteada", "encenada", "ajustada", "impressionada", "regulada", "perguntada", "desviada", "amarrada", "leiloada", "revisada", "sagrada", "fabricada", "empregada", "m cada", "estipulada", "investido cada", "mandada", "adicionada", "enganada", "equivocada", "empurrada", "aconselhada", "armada", "demonstrada", "ativada", "arbitrada", "exportada", "separada", "validada", "pautada", "privatizada", "rá marcada", "desclassida", "cassada", "agraciada", "viabilizada", "ver cada", "guardada", "anexada", "estrangulada", "redobrada", "repensada", "denominada", "estimulada", "baixada", "dando risada", "emocionada", "faz cada", "comer nada", "cogitada", "reivindicada", "desligada", "avistada", "replicada", "arrasada", "suportada", "picada", "importada", "tombada", "mobilizada", "narrada", "namorada", "curada", "desmantelada", "contatada", "recepcionada", "indignada", "equilibrada", "saudada", "contraindicada", "interrogada", "amada", "confiada", "reportada", "efectuada", "vazada", "pressionada", "conectada", "graduada", "cultivada", "articulada", "vira piada", "filiada", "censurada", "mergulhada", "aliada", "subordinada", "congelada", "governada", "devastada", "desarticulada", "acendida", "golpeada", "reprovada", "estagnada", "regularizada", "prestigiada", "ovacionada", "variada", "amparada", "infundada", "corroborada", "diferenciada", "poupada", "saqueada", "vandalizada", "chateada", "molhada", "contaminada", "frequentada", "desafiada", "embargada", "morre afogada", "exagerada", "mulada", "patrocinada", "treinada", "apostada", "investir cada", "cresce cada", "presenciada", "alojada", "do cada", "inadequada", "dourada", "cuidada", "impetrada", "estarrelacionada", "reajustada", "ofertada", "acrescentada", "cantada", "deu risada", "ocasionada", "galardoada", "prolongada", "aperfeiçoada", "licitada", "atirada", "infectada", "engraçada", "empossada", "consumada", "inundada", "quitada", "facilitada", "empolgada", "embriagada", "completada", "rechaçada", "contabilizada", "bombardeada", "detonada", "incentivada", "imputada", "enraizada", "estrelada", "provada", "manipulada", "falada", "viciada", "consagrada", "abortada", "alugada", "intrigada", "sentenciada", "reavaliada", "vaiada", "farnada", "derivada", "dotada", "condecorada", "ternada", "remulada", "terminada", "estabilizada", "desacordada", "arriscada", "indenizada", "habitada", "proclamada", "mudarnada", "abraçada", "rodeada", "posicionada", "apropriada", "solucionada", "estruturada", "décadas", "realizadas", "relacionadas", "tomadas", "estradas", "armadas", "apresentadas", "privadas", "ligadas", "chamadas", "usadas", "divulgadas", "encontradas", "temporadas", "polegadas", "aplicadas", "consideradas", "entradas", "registradas", "criadas", "utilizadas", "afetadas", "jornadas", "publicadas", "dadas", "fechadas", "determinadas", "controladas", "levadas", "destinadas", "jogadas", "aprovadas", "enviadas", "paradas", "rodadas", "colocadas", "identificadas", "associadas", "bancadas", "instaladas", "adotadas", "veiculadas", "voltadas", "retiradas", "elevadas", "marcadas", "pancadas", "olimpíadas", "registadas", "localizadas", "camadas", "diferenciadas", "encaminhadas", "espalhadas", "adequadas", "interessadas", "variadas", "partilhadas", "passadas", "anunciadas", "confirmadas", "organizadas", "investigadas", "analisadas", "especializadas", "citadas", "toleradas", "acompanhadas", "facadas", "avançadas", "calçadas", "disponibilizadas", "lançadas", "autorizadas", "rajadas", "causadas", "piadas", "disputadas", "baseadas", "apontadas", "avaliadas", "antecipadas", "isoladas", "lâmpadas", "pesadas", "escadas", "ocupadas", "queimadas", "integradas", "obrigadas", "arquibancadas", "guardadas", "preparadas", "iniciadas", "selecionadas", "apuradas", "separadas", "gravadas", "efetuadas", "limitadas", "esperadas", "executadas", "beneficiadas", "tratadas", "pesquisadas", "informadas", "implementadas", "programadas", "reveladas", "provocadas", "tiradas", "contratadas", "repassadas", "ofertadas", "retomadas", "coletadas", "liberadas", "erradas", "convidadas", "premiadas", "dedicadas", "classificadas", "levantadas", "ameaçadas", "roubadas", "comentadas", "cotadas", "direcionadas", "deixadas", "formadas", "caminhadas", "encerradas", "acusadas", "agendadas", "cobradas", "praticadas", "reservadas", "cadastradas", "alegadas", "indicadas", "geradas", "trocadas", "prestadas", "apoiadas", "assassinadas", "cortadas", "observadas", "contempladas", "chegadas", "compartilhadas", "fadas", "complicadas", "negociadas", "procuradas", "trovoadas", "abandonadas", "solicitadas", "internadas", "representadas", "captadas", "empregadas", "danificadas", "compradas", "pousadas", "detalhadas", "comercializadas", "paralisadas", "visitadas", "carregadas", "elaboradas", "inspiradas", "bloqueadas", "vinculadas", "montadas", "resgatadas", "condenadas", "respeitadas", "coordenadas", "abordadas", "convocadas", "trabalhadas", "pedaladas", "interditadas", "acionadas", "gargalhadas", "somadas", "armazenadas", "embaixadas", "ministradas", "transportadas", "plantadas", "alteradas", "situadas", "atualizadas", "preocupadas", "granadas", "contadas", "prejudicadas", "vacinadas", "atrasadas", "quebradas", "guiadas", "saladas", "risadas", "concentradas", "listadas", "canceladas", "adaptadas", "fachadas", "mencionadas", "declaradas", "focadas", "verificadas", "aliadas", "personalizadas", "carenciadas", "movimentadas", "implantadas", "adiadas", "público-privadas", "infectadas", "enfrentadas", "julgadas", "comprovadas", "moderadas", "assinadas", "forçadas", "pintadas", "influenciadas", "alcançadas", "recuperadas", "orientadas", "baladas", "desalojadas", "picadas", "contabilizadas", "destacadas", "equipadas", "estudadas", "exploradas", "consultadas", "detetadas", "qualificadas", "financiadas", "estruturadas", "rejeitadas", "congeladas", "privilegiadas", "afectadas", "acumuladas", "cruzadas", "alagadas", "cantadas", "votadas", "fabricadas", "animadas", "entrevistadas", "detectadas", "denunciadas", "deslocadas", "afastadas", "mostradas", "transformadas", "inesperadas", "recomendadas", "motivadas", "consolidadas", "reforçadas", "degradadas", "comparadas", "importadas", "pensadas", "tocadas", "monitoradas", "doadas", "fixadas", "lotadas", "pauladas", "touradas", "conectadas", "camaradas", "sofisticadas", "combinadas", "eliminadas", "conquistadas", "desenhadas", "administradas", "autoestradas", "interpretadas", "brigadas", "inauguradas", "projetadas", "desabrigadas", "viradas", "ousadas", "empreitadas", "furtadas", "testadas", "capturadas", "lideradas", "apagadas", "planejadas", "contaminadas", "atacadas", "almofadas", "barricadas", "esgotadas", "apropriadas", "postadas", "diagnosticadas", "inusitadas", "credenciadas", "filmadas", "evitadas", "deputadas", "notificadas", "apertadas", "preservadas", "delicadas", "incorporadas", "enterradas", "sentadas", "operadas", "engraçadas", "processadas", "alinhadas", "espadas", "efectuadas", "equilibradas", "sorteadas", "estimadas", "pegadas", "comandadas", "terceirizadas", "actualizadas", "asseguradas", "comunicadas", "constatadas", "infundadas", "arrancadas", "descartadas", "lembradas", "baleadas", "acordadas", "questionadas", "namoradas", "inadequadas", "modificadas", "frustradas", "equivocadas", "evacuadas", "barradas", "relatadas", "centradas", "finalizadas", "ossadas", "demasiadas", "amarradas", "douradas", "valorizadas", "sediadas", "apreciadas", "consagradas", "editadas", "fiscalizadas", "habilitadas", "hospitalizadas", "apaixonadas", "desejadas", "dominadas", "aguardadas", "cultivadas", "casadas", "madrugadas", "andradas", "depositadas", "derrubadas", "ultrapassadas", "renovadas", "refugiadas", "acentuadas", "diversificadas", "exageradas", "mobilizadas", "inundadas", "desempregadas", "vazadas", "decretadas", "ignoradas", "concretizadas", "derivadas", "denominadas", "remuneradas", "acertadas", "superadas", "adicionadas", "flagradas", "pedradas", "imunizadas", "melhoradas", "recheadas", "aproveitadas", "enquadradas", "desesperadas", "inalteradas", "improvisadas", "certificadas", "afiliadas", "intensificadas", "adiantadas", "libertadas", "prolongadas", "deflagradas", "justificadas", "condicionadas", "licenciadas", "salgadas", "sinalizadas", "exportadas", "fundamentadas", "conveniadas", "prestigiadas", "endividadas", "reguladas", "ajustadas", "badaladas", "formuladas", "generalizadas", "advogadas", "autuadas", "abusadas", "violadas", "ampliadas", "designadas", "criticadas", "nomeadas", "celebradas", "posicionadas", "acessadas", "inacabadas", "empenhadas", "decoradas", "esplanadas", "lusíadas", "impulsionadas", "embaladas", "homenageadas", "treinadas", "lombadas", "retratadas", "pisadas", "arriscadas", "alimentadas", "traçadas", "explicadas", "reiteradas", "estipuladas", "cilindradas", "conceituadas", "desligadas", "desativadas", "anuladas", "geladas", "moradas", "ajuizadas", "fundadas", "iluminadas", "pressionadas", "contactadas", "calculadas", "travadas", "necessitadas", "filiadas", "penduradas", "confeccionadas", "cercadas", "interligadas", "incentivadas", "goleadas", "estacionadas", "suportadas", "habitadas", "indesejadas", "desempenhadas", "matriculadas", "reportadas", "motorizadas", "impactadas", "sagradas", "indiciadas", "misturadas", "faladas", "alugadas", "manipuladas", "sequestradas", "validadas", "penalizadas", "atropeladas", "arroladas", "infetadas", "terminadas", "multadas", "acostumadas", "desperdiçadas", "atadas", "cansadas", "ilimitadas", "auto-estradas", "trapalhadas", "articuladas", "enxurradas", "dotadas", "visadas", "renomadas", "homologadas", "subordinadas", "falsificadas", "arquivadas", "saturadas", "regulamentadas", "injustificadas", "efetivadas", "reformadas", "capacitadas", "protagonizadas", "fotografadas", "soterradas", "planeadas", "tornadas", "elencadas", "educadas", "desencadeadas", "estupradas", "falhadas", "agravadas", "desocupadas", "assustadas", "assadas", "requisitadas", "leiloadas", "especificadas", "açucaradas", "arrecadadas", "estampadas", "assaltadas", "agrupadas", "estimuladas", "caracterizadas", "encomendadas", "pavimentadas", "firmadas", "inventadas", "largadas", "interceptadas", "emplacadas", "trancadas", "aumentadas", "achadas", "protocoladas", "desviadas", "abrigadas", "arrastadas", "ativadas", "empatadas", "agitadas", "prorrogadas", "avultadas", "torradas", "geadas", "regularizadas", "examinadas", "sustentadas", "participadas", "proporcionadas", "orçadas", "ensinadas", "imputadas", "contestadas", "amadas", "negadas", "culpadas", "disparadas", "anexadas", "pautadas", "cuidadas", "alargadas", "adoptadas", "custeadas", "coladas", "lavadas", "responsabilizadas", "baixadas", "reprovadas", "licitadas", "manifestadas", "desencontradas", "dispensadas", "demarcadas", "puxadas", "restauradas", "derrotadas", "pitadas", "alojadas", "provadas", "assinaladas", "encaradas", "povoadas", "molhadas", "patrocinadas", "familiarizadas", "compensadas", "catalogadas", "rasgadas", "confrontadas", "atreladas", "vistoriadas", "privatizadas", "referenciadas", "quitadas", "esburacadas", "sanadas", "originadas", "aprofundadas", "demonstradas", "embarcadas", "enganadas", "automatizadas", "suscitadas", "vedadas", "adulteradas", "delegadas", "habituadas", "viciadas", "precipitadas", "avisadas", "despejadas", "descontadas", "regadas", "lesadas", "paralimpíadas", "atiradas", "devastadas", "apanhadas", "vigiadas", "ordenadas", "formalizadas", "herdadas", "legalizadas", "documentadas", "arrojadas", "escaladas", "datadas", "sacadas", "aceleradas", "chumbadas", "discriminadas", "elogiadas", "parceladas", "conservadas", "descentralizadas", "reclamadas", "revogadas", "tripuladas", "tributadas", "padronizadas", "noticiadas", "superlotadas", "frequentadas", "demoradas", "marginalizadas", "recicladas", "ponderadas", "negligenciadas", "afogadas", "acrescentadas", "raptadas", "engajadas", "alertadas", "pinceladas", "disseminadas", "avermelhadas", "encarregadas", "intercaladas", "seleccionadas", "torturadas", "incendiadas", "indignadas", "alocadas", "asfaltadas", "emprestadas", "violentadas", "veladas", "clonadas", "auditadas", "mapeadas", "arcadas", "assediadas", "compiladas", "customizadas", "arredondadas", "ocasionadas", "coronhadas", "solucionadas", "sancionadas", "xadas", "preconizadas", "ditadas", "arremessadas", "caçadas", "chicotadas", "encantadas", "desmatadas", "deitadas", "industrializadas", "perpetradas", "fragilizadas", "encarceradas", "supervisionadas", "mudadas", "ilustradas", "abastadas", "fracassadas", "cobiçadas", "afiadas", "buscadas", "franqueadas", "inapropriadas", "completadas", "notadas", "forjadas", "confinadas", "continuadas", "destelhadas", "pacificadas", "priorizadas", "ancoradas", "agregadas", "vocacionadas", "amparadas", "acampadas", "unificadas", "encenadas", "noitadas", "despachadas", "vetadas", "mediadas", "peladas", "recusadas", "cotoveladas", "subsidiadas", "descarregadas", "narradas", "criptografadas", "bofetadas", "alternadas", "computadas", "realojadas", "recrutadas", "lacradas", "alfinetadas", "dinamizadas", "emocionadas", "derrocadas", "ajudadas", "blindadas", "numeradas", "invocadas", "intencionadas", "liquidadas", "desatualizadas", "vivenciadas", "emboscadas", "poupadas", "hospedadas", "encarnadas", "acirradas", "congestionadas", "entrelaçadas", "pomadas", "juntadas", "fragmentadas", "anotadas", "beiradas", "assentadas", "ensaiadas", "batizadas", "temperadas", "abaladas", "revisadas", "rodeadas", "ilhadas", "arrimadas", "revoltadas", "curadas", "digitalizadas", "admiradas", "facilitadas", "carbonizadas", "delimitadas", "acatadas", "intimadas", "arrendadas", "reajustadas", "endereçadas", "pronunciadas", "aprimoradas", "cabeçadas", "traficadas", "duplicadas", "cristalizadas", "enfeitadas", "charqueadas", "superfaturadas", "arrumadas", "desmontadas", "nómadas", "simuladas", "reivindicadas", "centralizadas", "aclamadas", "pernadas", "fraudadas", "dobradas", "acabadas", "fracionadas", "videochamadas", "visualizadas", "fantasiadas", "manchadas", "monitorizadas", "emanadas", "bordadas", "rebaixadas", "gratificadas", "arrombadas", "disfarçadas", "acaloradas", "copiadas", "checadas", "implicadas", "saqueadas", "sepultadas", "caladas", "enraizadas", "estadas", "confiscadas", "civilizadas", "valadas", "desgastadas", "coligadas", "afixadas", "oficializadas", "entusiasmadas", "equiparadas", "estagnadas", "complementadas", "evidenciadas", "incomodadas", "inspecionadas", "arborizadas", "inflamadas", "desbloqueadas", "grelhadas", "palmadas", "rabanadas", "inclinadas", "individualizadas", "apressadas", "experimentadas", "castigadas", "conjugadas", "gerenciadas", "encriptadas", "delineadas", "banhadas", "replicadas", "creditadas", "comissionadas", "acopladas", "reabilitadas", "esmagadas", "sobrecarregadas", "desacompanhadas", "joelhadas", "ressalvadas", "contextualizadas", "sincronizadas", "tombadas", "sitiadas", "aconselhadas", "demandadas", "cunhadas", "mandadas", "humoradas", "pichadas", "empadas", "camufladas", "institucionalizadas", "simplificadas", "censuradas", "empurradas", "desafiadas", "canalizadas", "angariadas", "embargadas", "enxadas", "encostadas", "esvaziadas", "normalizadas", "escravizadas", "concessionadas", "autenticadas", "refinadas", "palhaçadas", "furadas", "vaquejadas", "sensibilizadas", "amputadas", "acomodadas", "espancadas", "extremadas", "malvadas", "empanadas", "empilhadas", "deterioradas", "enroladas", "direccionadas", "estocadas", "estragadas", "interrogadas", "revistadas", "quadradas", "encaixadas", "reparadas", "escutadas", "toadas", "idealizadas", "marteladas", "tapadas", "federadas", "desapropriadas", "indenizadas", "maltratadas", "intervencionadas", "chocadas", "climatizadas", "braçadas", "rastreadas", "abraçadas", "confiadas", "aposentadas", "contrabandeadas", "descoladas", "pactuadas", "tacadas", "retrógradas", "equacionadas", "agarradas", "avistadas", "encorajadas", "pontuadas", "moldadas", "honradas", "empoderadas", "erradicadas", "enferrujadas", "clicadas", "adjudicadas", "tentadas", "silenciadas", "depredadas", "inchadas", "realocadas", "viabilizadas", "vincadas", "espelhadas", "carimbadas", "cavalgadas", "amontoadas", "confecionadas", "lavradas", "reaproveitadas", "afinadas", "arruadas", "alfabetizadas", "ex-namoradas", "reavaliadas", "configuradas", "mutiladas", "colegiadas", "impossibilitadas", "imaginadas", "bem-humoradas", "atravessadas", "agraciadas", "irritadas", "remarcadas", "irrigadas", "olímpiadas", "alçadas", "alongadas", "promulgadas", "assemelhadas", "concertadas", "averiguadas", "espaçadas", "desrespeitadas", "edificadas", "esfaqueadas", "obcecadas", "vandalizadas", "tuteladas", "estilizadas", "desvalorizadas", "enlutadas", "instauradas", "contatadas", "amareladas", "descontroladas", "consignadas", "cassadas", "espetadas", "machucadas", "prateadas", "enumeradas", "enteadas", "desequilibradas", "descongeladas", "desajustadas", "penhoradas", "sacrificadas", "juradas", "otimizadas", "uniformizadas", "torneadas", "sedeadas", "orquestradas", "recriadas", "esfarrapadas", "cromadas", "acauteladas", "onças-pintadas", "mascaradas", "deletadas", "desidratadas", "subcontratadas", "escancaradas", "reutilizadas", "providenciadas", "traumatizadas", "ratificadas", "periciadas", "estabilizadas", "incubadas", "desconsideradas", "conturbadas", "forradas", "taxadas", "zeradas", "urbanizadas", "reputadas", "debilitadas", "deliberadas", "apelidadas", "sucateadas", "amassadas", "encabeçadas", "enunciadas", "desamparadas", "acreditadas", "projectadas", "medicadas", "transitadas", "mal-intencionadas", "intoxicadas", "pré-fabricadas", "exaltadas", "coroadas", "vitimadas", "transplantadas", "chuvadas", "aperfeiçoadas", "esticadas", "indexadas", "remanejadas", "mesadas", "empolgadas", "acondicionadas", "segregadas", "tituladas", "aproximadas", "encalhadas", "encurraladas", "embasadas", "coreografadas", "entoadas", "estreladas", "propagadas", "autografadas", "chibatadas", "acidentadas", "queijadas", "escapadas", "hasteadas", "infestadas", "cavadas", "arrematadas", "impregnadas", "salvaguardadas", "jangadas", "envenenadas", "descascadas", "renegociadas", "intermediadas", "impugnadas", "geminadas", "dubladas", "dissipadas", "segmentadas", "disciplinadas", "galardoadas", "sobrelotadas", "intocadas", "recortadas", "cogitadas", "desadequadas", "minimizadas", "chefiadas", "abarrotadas", "desabitadas", "gozadas", "relegadas", "outorgadas", "seladas", "requalificadas", "codificadas", "encapuzadas", "alienadas", "recuadas", "freadas", "bombardeadas", "acarinhadas", "metalizadas", "mergulhadas", "divorciadas", "decapitadas", "desprezadas", "intituladas", "humilhadas", "materializadas", "contratualizadas", "alvejadas", "abençoadas", "arrasadas", "despojadas", "transacionadas", "tipificadas", "costuradas", "chapadas", "ceifadas", "alcoolizadas", "comemoradas", "destiladas", "desestruturadas", "mecanizadas", "ranqueadas", "dificultadas", "desconectadas", "semeadas", "pré-selecionadas", "pirateadas", "perdoadas", "ciladas", "aliviadas", "manadas", "incineradas", "estressadas", "perturbadas", "polarizadas", "refrigeradas", "compromissadas", "algemadas", "exacerbadas", "impetradas", "legendadas", "modernizadas", "aliciadas", "consorciadas", "saradas", "seguradas", "estereotipadas", "filtradas", "olhadas", "recarregadas", "presenteadas", "dizimadas", "descontinuadas", "governadas", "escrutinadas", "revitalizadas", "pormenorizadas", "perfumadas", "deportadas", "detonadas", "domiciliadas", "recordadas", "tesouradas", "relaxadas", "rosadas", "deturpadas", "arranjadas", ":noticiasrelacionadas", "despreparadas", "embriagadas", "reembolsadas", "redobradas", "intercetadas", "desclassificadas", "talhadas", "deformadas", "encruzilhadas", "adoradas", "lesionadas", "respaldadas", "radicadas", "marretadas", "impressionadas", "alicerçadas", "assimiladas", "emolduradas", "inutilizadas", "intrincadas", "cronometradas", "rotuladas", "dissimuladas", "lança-granadas", "goradas", "avariadas", "caramelizadas", "militarizadas", "redesenhadas", "reiniciadas", "lecionadas", "desvendadas", "comparticipadas", "descaracterizadas", "embrulhadas", "escavadas", "requintadas", "ninhadas", "raspadas", "eternizadas", "injetadas", "engarrafadas", "defasadas", "tatuadas", "graduadas", "famigeradas", "pulverizadas", "comportadas", "encetadas", "chateadas", "ambientadas", "antenadas", "corroboradas", "desacreditadas", "remodeladas", "pleiteadas", "fincadas", "podadas", "cozinhadas", "atenuadas", "auxiliadas", "envergonhadas", "desordenadas", "estigmatizadas", "sufocadas", "ocultadas", "desorganizadas", "consumadas", "decepadas", "esbranquiçadas", "extraviadas", "grudadas", "porradas", "cravadas", "cifradas", "borradas", "pré-determinadas", "politizadas", "capitaneadas", "decadas", "enviesadas", "multiplicadas", "recompensadas", "hackeadas", "feijoadas", "represadas", "ensanguentadas", "descontextualizadas", "assombradas", "legitimadas", "musculadas", "cavalhadas", "desconfiadas", "desmanteladas", "harmonizadas", "magistradas", "ozadas", "pescadas", "disparatadas", "enfileiradas", "bêbadas", "acamadas", "abafadas", "reformuladas", "evocadas", "trituradas", "intimidadas", "recolocadas", "balanceadas", "carradas", "angustiadas", "despropositadas", "pilotadas", "escoltadas", "ventiladas", "zangadas", "sintonizadas", "fustigadas", "incapacitadas", "incrementadas", "mescladas", "explicitadas", "resguardadas", "subestimadas", "sentenciadas", "defraudadas", "dentadas", "computadorizadas", "alavancadas", "aparadas", "orçamentadas", "expressadas", "eletrificadas", "apetrechadas", "guitarradas", "nadas", "nevadas", "incrustadas", "dilatadas", "clarificadas", "decotadas", "arruinadas", "aventadas", "encharcadas", "inconformadas", "infiltradas", "reprogramadas", "regionalizadas", "reassentadas", "meadas", "aprisionadas", "massacradas", "inexploradas", "guinadas", "patenteadas", "supracitadas", "desfocadas", "desastradas", "contrariadas", "atestadas", "rechaçadas", "rachadas", "parparticipadas", "fraturadas", "antiquadas", "desmarcadas", "higienizadas", "humanizadas", "molestadas", "avantajadas", "apostadas", "assoalhadas", "calcadas", "apavoradas", "abaixadas", "reviradas", "paraolimpíadas", "potenciadas", "digitadas", "garrafadas", "folgadas", "esterilizadas", "fadadas", "gaseificadas", "laminadas", "pré-moldadas", "recepcionadas", "relembradas", "desarmadas", "derramadas", "cursadas", "asfixiadas", "sub-representadas", "caneladas", "desqualificadas", "pisoteadas", "maquiadas", "escolarizadas", "posadas", "ornamentadas", "desmembradas", "curvadas", "aradas", "sintetizadas", "subutilizadas", "acorrentadas", "coitadas", "portadas", "remasterizadas", "machadadas", "fornadas", "quantificadas", "popularizadas", "desorientadas", "apimentadas", "amamentadas", "destroçadas", "grampeadas", "transaccionadas", "fermentadas", "indeterminadas", "prensadas", "desproporcionadas", "cartadas", "arraigadas", "aterrorizadas", "contornadas", "criminalizadas", "reativadas", "gritadas", "referendadas", "repensadas", "custodiadas", "descaradas", "conflagradas", "amenizadas", "ressecadas", "reagendadas", "odiadas", "fascinadas", "mimadas", "universíadas", "trajadas", "adornadas", "assalariadas", "caprichadas", "correlacionadas", "desinformadas", "ensolaradas", "enfiadas", "sonhadas", "serradas", "tostadas", "emperradas", "consertadas", "colheradas", "facultadas", "olimpiadas", "revisitadas", "pedagiadas", "inviabilizadas", "englobadas", "dimensionadas", "cerradas", "truncadas", "suadas", "batucadas", "cacheadas", "amplificadas", "mamadas", "flechadas", "gigatoneladas", "perfuradas", "potencializadas", "reclassificadas", "presenciadas", "apadrinhadas", "descansadas", "aglomeradas", "bastonadas", "rebuscadas", "inabilitadas", "bem-intencionadas", "charadas", "desgarradas", "empoeiradas", "degustadas", "consubstanciadas", "informatizadas", "imobilizadas", "publicitadas", "roçadas", "reencaminhadas", "adas", "abortadas", "sublinhadas", "aromatizadas", "reestruturadas", "pré-instaladas", "radicalizadas", "pregadas", "formatadas", "abóbadas", "calendarizadas", "decepcionadas", "enseadas", "dissociadas", "arrecadas", "balançadas", "estreadas", "exterminadas", "estranguladas", "replantadas", "plasmadas", "abonadas", "aviadas", "atrapalhadas", "arregaçadas", "boicotadas", "flexibilizadas", "imortalizadas", "exoneradas", "minadas", "condensadas", "convencionadas", "envidraçadas", "partido", "devido", "sentido", "pedido", "conhecido", "marido", "unido", "rápido", "recebido", "detido", "ocorrido", "tido", "atingido", "seguido", "desenvolvido", "escolhido", "proibido", "ouvido", "válido", "perdido", "ferido", "definido", "líquido", "vendido", "produzido", "envolvido", "conseguido", "vestido", "reconhecido", "promovido", "acontecido", "mantido", "sofrido", "cumprido", "nascido", "dirigido", "reduzido", "apreendido", "decidido", "permitido", "garantido", "referido", "oferecido", "estabelecido", "cometido", "conduzido", "exibido", "arguido", "vencido", "transferido", "dividido", "obtido", "ido", "concedido", "resolvido", "havido", "tecido", "parecido", "emitido", "surpreendido", "submetido", "desaparecido", "socorrido", "discutido", "foragido", "agredido", "adquirido", "divertido", "impedido", "desconhecido", "atendido", "bandido", "vivido", "preferido", "escondido", "lido", "assumido", "investido", "falecido", "demitido", "apelido", "exigido", "punido", "transmitido", "querido", "interrompido", "servido", "protegido", "cândido", "batido", "ex-marido", "defendido", "esquecido", "sucedido", "prometido", "morrido", "comprometido", "assistido", "cedido", "aparecido", "recolhido", "convencido", "crescido", "ácido", "reunido", "indevido", "removido", "inserido", "percebido", "sugerido", "sólido", "trazido", "colorido", "perseguido", "expedido", "consumido", "entendido", "presidido", "sabido", "fugido", "devolvido", "movido", "rígido", "fornecido", "surgido", "concebido", "abatido", "gerido", "invadido", "estendido", "híbrido", "guido", "admitido", "corrigido", "esclarecido", "distinguido", "debatido", "contido", "recém-nascido", "absolvido", "corrido", "bem-sucedido", "dióxido", "exercido", "tímido", "subido", "traduzido", "rendido", "acrescido", "repetido", "temido", "preenchido", "merecido", "compreendido", "pretendido", "convertido", "requerido", "aplaudido", "respondido", "introduzido", "ofendido", "duvido", "medido", "agido", "arrependido", "percorrido", "aprendido", "despedido", "retido", "banido", "combatido", "acolhido", "existido", "erguido", "cozido", "comprido", "despercebido", "revertido", "remetido", "proferido", "recorrido", "semiárido", "confundido", "doido", "sobrevivido", "comprimido", "aquecido", "ingerido", "concorrido", "colhido", "decorrido", "garrido", "falido", "induzido", "conferido", "expandido", "úmido", "descuido", "indefinido", "nítido", "estúpido", "desistido", "embutido", "agradecido", "desiludido", "favorecido", "difundido", "candido", "fluido", "munido", "abastecido", "rompido", "reagido", "reproduzido", "desmentido", "indeferido", "plácido", "refletido", "advertido", "fortalecido", "sumido", "mentido", "restabelecido", "reconduzido", "demolido", "metido", "insistido", "bebido", "absorvido", "permanecido", "amido", "repartido", "comido", "valido", "invertido", "descido", "enfraquecido", "enriquecido", "deferido", "rescindido", "revestido", "constrangido", "óxido", "suspendido", "regido", "presumido", "aborrecido", "preterido", "aderido", "deprimido", "monóxido", "envelhecido", "cuido", "dormido", "redigido", "mal-entendido", "resistido", "mexido", "divido", "lúcido", "mordido", "ressarcido", "engolido", "adormecido", "desprovido", "decido", "comparecido", "dissolvido", "correspondido", "libido", "abrangido", "comovido", "derretido", "precedido", "corrompido", "podido", "convido", "florido", "omitido", "explodido", "consentido", "fundido", "despromovido", "resumido", "descumprido", "ávido", "deduzido", "atrevido", "despido", "expelido", "desferido", "acometido", "aguerrido", "dolorido", "inválido", "repreendido", "comedido", "seduzido", "pulido", "destemido", "auferido", "polido", "cido", "penido", "apercebido", "descabido", "desentendido", "distorcido", "curtido", "cupido", "oprimido", "procedido", "adido", "incumbido", "ardido", "coagido", "desprotegido", "restringido", "hokkaido", "húmido", "acedido", "provido", "zumbido", "pertencido", "despendido", "recém-promovido", "prendido", "inquirido", "interferido", "pré-aquecido", "alarido", "extrovertido", "antecedido", "reprimido", "aludido", "suprimido", "liquido", "árido", "colidido", "enfurecido", "chovido", "esculpido", "surtido", "desprevenido", "pálido", "rapido", "excedido", "renascido", "empreendido", "enchido", "convivido", "prosseguido", "entupido", "obedecido", "repercutido", "amadurecido", "aferido", "prevenido", "abolido", "espremido", "desmedido", "tripartido", "varrido", "encolhido", "travestido", "transcorrido", "aminoácido", "saburido", "rebatido", "contundido", "esplêndido", "evadido", "diferido", "renhido", "introvertido", "combalido", "estarrecido", "ressentido", "cuspido", "ingressorapido", "torcido", "inibido", "pré-definido", "iludido", "sórdido", "mórbido", "enaltecido", "incompreendido", "competido", "ungido", "brígido", "ascendido", "pré-estabelecido", "infringido", "entretido", "embatido", "entristecido", "enlouquecido", "cabido", "preaquecido", "compelido", "madrido", "translúcido", "precavido", "bólido", "ríspido", "incorrido", "subentendido", "rugido", "prevalecido", "volvido", "peróxido", "reflectido", "empobrecido", "sacudido", "gélido", "digerido", "controvertido", "límpido", "walfrido", "vido", "revendido", "margarido", "erigido", "fingido", "progredido", "impávido", "tingido", "estampido", "semi-árido", "vertido", "endurecido", "lava-rápido", "reestabelecido", "tórrido", "quirido", "rejuvenescido", "extorquido", "latido", "nutrido", "yupido", "retorcido", "coproduzido", "olido", "desprendido", "embebido", "sortido", "elegido", "desapercebido", "arrefecido", "prurido", "subdesenvolvido", "infligido", "resido", "emagrecido", "construido", "intrépido", "abduzido", "[respondido", "incluido", "exaurido", "predefinido", "pervertido", "saido", "desobedecido", "enrustido", "reinvestido", "desinibido", "dido", "grávido", "escurecido", "suprido", "desnutrido", "[partido", "repelido", "revivido", "sucumbido", "substituido", "tremido", "incutido", "coibido", "persuadido", "impelido", "coincidido", "fétido", "hidróxido", "implodido", "emergido", "imprimido", "umedecido", "guarnecido", "peido", "multicolorido", "reabastecido", "fervido", "residido", "carvalhido", "acorrido", "enraivecido", "extinguido", "vívido", "rossido", "hibrido", "gemido", "presido", "co-produzido", "subdividido", "tolhido", "desimpedido", "sorrido", "ruido", "desfavorecido", "flácido", "incidido", "redefinido", "dorido", "decrescido", "prescindido", "zoido", "parido", "malsucedido", "fedido", "ilíquido", "descomprometido", "apodrecido", "preestabelecido", "readmitido", "escorrido", "guaido", "fido", "reconvertido", "apetecido", "estupido", "insípido", "atribuido", "dispendido", "intrometido", "rediscutido", "premido", "braido", "bipartido", "retransmitido", "rido", "interagido", "amanhecido", "adoecido", "desassistido", "abstido", "superaquecido", "empedernido", "borlido", "estremecido", "destruido", "valfrido", "divergido", "desfalecido", "aikido", "distribuido", "distendido", "urdido", "cumplido", "irrefletido", "reintroduzido", "contribuido", "shiseido", "recém-falecido", "pérfido", "fodido", "insurgido", "codirigido", "concluido", "caido", "masellido", "placido", "remexido", "insculpido", "submergido", "amortecido", "bem-recebido", "reerguido", "persistido", "recém-adquirido", "incontido", "desparecido", "encardido", "embevecido", "dependido", "franzido", "diminuido", "redimido", "pedorido", "extendido", "intercedido", "desunido", "super-rápido", "descolorido", "carcomido", "mido", "aturdido", "contorcido", "dirimido", "nido", "regredido", "dissuadido", "entorpecido", "consabido", "dúvido", "desaquecido", "[devido", "reinserido", "improvido", "ex-partido", "supreendido", "inadvertido", "olvido", "perecido", "demovido", "nabonido", "ultrarrápido", "r?pido", "ensandecido", "benzido", "obscurecido", "subvertido", "reaparecido", "amolecido", "arpinido", "acido", "envaidecido", "lambido", "cosido", "shido", "constituido", "líbido", "kido", "lânguido", "esquálido", "esbatido", "sustenido", "desguarnecido", "desabrido", "pressentido", "hígido", "desabastecido", "bushido", "imerecido", "recém-demitido", "remido", "nérido", "pré-cozido", "intervido", "exprimido", "esbaforido", "consistido", "afligido", "relido", "antiácido", "coarguido", "subnutrido", "sonido", "mal-sucedido", "mantovanido", "encarecido", "valentinido", "gramido", "redistribuido", "engrandecido", "convergido", "proíbido", "esgrimido", "esmorecido", "fudido", "lagido", "namorido", "denegrido", "desvanecido", "turionido", "ultra-rápido", "lépido", "flórido", "hapkido", "impingido", "pendido", "reincidido", "ressurgido", "vida", "medida", "partida", "avenida", "seguida", "dívida", "proibida", "corrida", "conhecida", "almeida", "dúvida", "torcida", "rápida", "comida", "subida", "ida", "devida", "grávida", "bebida", "atingida", "definida", "aparecida", "descida", "desenvolvida", "reduzida", "reconhecida", "contrapartida", "escolhida", "promovida", "despedida", "dirigida", "mantida", "concedida", "produzida", "permitida", "batida", "líquida", "recebida", "válida", "referida", "garantida", "perdida", "dividida", "vendida", "exibida", "ferida", "detida", "envolvida", "flórida", "margarida", "apreendida", "cumprida", "convida", "cuida", "transmitida", "ocorrida", "conduzida", "estabelecida", "oferecida", "lida", "presidida", "socorrida", "parecida", "pedida", "divertida", "discutida", "decidida", "indevida", "banida", "atendida", "obtida", "nascida", "proferida", "emitida", "ouvida", "sólida", "escondida", "sofrida", "resolvida", "interrompida", "agredida", "vivida", "defendida", "transferida", "submetida", "movida", "florida", "desconhecida", "comprometida", "exigida", "adquirida", "querida", "protegida", "desaparecida", "assistida", "contida", "inserida", "vencida", "suicida", "surpreendida", "unida", "vestida", "assumida", "investida", "prometida", "decida", "acolhida", "impedida", "exercida", "bem-sucedida", "consumida", "preferida", "duvida", "invadida", "erguida", "recolhida", "esquecida", "tímida", "sentida", "sucedida", "estendida", "conseguida", "revertida", "servida", "trazida", "colorida", "tida", "fornecida", "gerida", "corrigida", "rígida", "cometida", "acrescida", "repetida", "convertida", "concebida", "reunida", "preenchida", "debatida", "requerida", "arguida", "divida", "conferida", "cândida", "híbrida", "cida", "sida", "consolida", "emicida", "arrábida", "introduzida", "expedida", "esclarecida", "frida", "entendida", "traduzida", "nítida", "perseguida", "falecida", "removida", "distinguida", "punida", "pretendida", "ardida", "mordida", "colhida", "antártida", "cedida", "sobrevida", "despercebida", "demitida", "admitida", "homicida", "reproduzida", "falida", "percebida", "sugerida", "devolvida", "convencida", "comprida", "ofendida", "merecida", "difundida", "restabelecida", "recém-nascida", "aquecida", "compreendida", "aplaudida", "deferida", "indefinida", "reprimida", "remetida", "distorcida", "dida", "envelhecida", "percorrida", "cozida", "confundida", "combatida", "refletida", "estúpida", "inseticida", "invertida", "rendida", "resumida", "respondida", "temida", "adormecida", "valida", "atlântida", "doida", "precedida", "concorrida", "fortalecida", "absorvida", "constrangida", "rebatida", "abastecida", "ermida", "demolida", "retida", "regida", "mexida", "desmentida", "expandida", "revalida", "favorecida", "desprovida", "descabida", "agradecida", "úmida", "abatida", "absolvida", "foragida", "vih/sida", "aida", "fluida", "deprimida", "embutida", "desmedida", "invalida", "arrependida", "intimida", "enfraquecida", "presumida", "deduzida", "lúcida", "indeferida", "abrangida", "herbicida", "induzida", "renhida", "enriquecida", "redigida", "revestida", "guida", "surgida", "liquida", "ácida", "ingerida", "aguerrida", "descumprida", "machida", "rompida", "jazida", "mórbida", "destemida", "dormida", "despida", "mérida", "consentida", "comovida", "pálida", "abolida", "repartida", "suprimida", "aprendida", "boavida", "aborrecida", "bandida", "curtida", "al-qaida", "guarida", "apelida", "derretida", "esculpida", "yoshida", "hodeida", "desprotegida", "metida", "antecedida", "desiludida", "hapvida", "dissolvida", "atrevida", "proíbida", "saida", "inválida", "ressarcida", "recorrida", "engolida", "sumida", "dolorida", "brígida", "sacudida", "pesticida", "empreendida", "extrovertida", "elucida", "pró-vida", "aludida", "resida", "engravida", "arida", "coagida", "reconduzida", "munida", "aferida", "corrompida", "ávida", "ríspida", "acometida", "crescida", "polida", "comedida", "suprida", "árida", "incumbida", "restringida", "varrida", "húmida", "prevenida", "sórdida", "oprimida", "amadurecida", "combalida", "límpida", "genocida", "élida", "eneida", "decorrida", "preterida", "controvertida", "tripartida", "enfurecida", "descuida", "seduzida", "larvicida", "fida", "empobrecida", "fratricida", "auferida", "advertida", "compadecida", "desinibida", "obedecida", "travestida", "provida", "esplêndida", "correspondida", "pegida", "fungicida", "hiv/sida", "bipartida", "enlouquecida", "diferida", "digerida", "despromovida", "translúcida", "estarrecida", "flácida", "repreendida", "estremecida", "havida", "incida", "omitida", "candida", "cressida", "apátrida", "reflectida", "antárctida", "pré-definida", "nélida", "espremida", "expelida", "gravida", "desprevenida", "vertida", "desassistida", "lleida", "coincida", "prosseguida", "merida", "desfavorecida", "repercutida", "gélida", "rodovida", "revendida", "entupida", "fundida", "prócida", "tremida", "reestabelecida", "vívida", "talidomida", "iludida", "pré-estabelecida", "comprimida", "fervida", "elida", "derrida", "fugida", "sabida", "acedida", "retorcida", "zuraida", "pré-preenchida", "nutrida", "inibida", "ressentida", "infligida", "enaltecida", "kishida", "rapida", "progrida", "malsucedida", "explodida", "renascida", "sachsida", "desnutrida", "erigida", "incompreendida", "tecida", "inquirida", "bífida", "urdida", "rejuvenescida", "bactericida", "introvertida", "#conexãopelavida", "ebtida", "inadvertida", "revida", "desimpedida", "militar/cedida", "codevida", "escurecida", "entristecida", "exaurida", "desapercebida", "embebida", "agrida", "entretida", "nereida", "acontecida", "ishida", "irrefletida", "poliamida", "descomprometida", "cheida", "lampre-merida", "encolhida", "incontida", "imprimida", "procedida", "tingida", "endurecida", "onusida", "desferida", "desprendida", "predefinida", "tiida", "multicolorida", "druida", "subdividida", "repelida", "lambida", "rashida", "despendida", "lérida", "hidroclorotiazida", "compelida", "tolhida", "semiárida", "bida", "preestabelecida", "leida", "freixo-arrábida", "carótida", "guarnecida", "reintroduzida", "coibida", "pervertida", "revivida", "uchida", "dirimida", "construida", "precavida", "intrépida", "zaida", "fingida", "giufrida", "insecticida", "parida", "desunida", "desfalecida", "pérfida", "coproduzida", "recém-adquirida", "apodrecida", "ultrarrápida", "amortecida", "denegrida", "vih-sida", "farida", "remexida", "endivida", "insípida", "incutida", "pida", "meia-vida", "cuspida", "hemorroida", "rida", "arremetida", "finasterida", "fedida", "fuenzalida", "hermida", "tórrida", "semirrígida", "subvertida", "preconcebida", "recém-promovida", "desabastecida", "desguarnecida", "baida", "umedecida", "fétida", "redefinida", "raticida", "extorquida", "ensandecida", "ilíquida", "pré-concebida", "benzida", "colida", "d?vida", "concluida", "aderida", "retransmitida", "splendida", "amolecida", "carcomida", "brida", "mal-sucedida", "envida", "rediscutida", "reinvestida", "presida", "embevecida", "impelida", "impávida", "aleida", "rescindida", "distribuida", "excedida", "crisálida", "reerguida", "subdesenvolvida", "desabrida", "acrilamida", "estupida", "lenalidomida", "khálida", "volvida", "reconvertida", "cindida", "destruida", "constituida", "brigida", "incluida", "insculpida", "oxida", "nishida", "convalida", "desaquecida", "suthida", "ressequida", "desobedecida", "arrefecida", "obscurecida", "esbatida", "enzalutamida", "hiv-sida", "plácida", "lânguida", "implodida", "furosemida", "enraivecida", "reabastecida", "zida", "subentendida", "envaidecida", "imerecida", "pré-cozida", "desentendida", "civil/cedida", "enegrecida", "dorida", "subnutrida", "suspendida", "qaida", "entorpecida", "lollobrigida", "bem-resolvida", "desparecida", "tépida", "avida", "cara-pálida", "adida", "franzida", "frígida", "esquálida", "oneida", "apparecida", "bem-recebida", "ungida", "superaquecida", "khalida", "guarda-vida", "hibrida", "freida", "carrapaticida", "co-produzida", "dalida", "atribuida", "maida", "nida", "extendida", "atentado-suicida", "encardida", "marcha-corrida", "bombista-suicida", "substituida", "readmitida", "vilaneida", "cálida", "apalutamida", "intrometida", "okaida", "zoraida", "peida", "contra-partida", "descolorida", "clarida", "brízida", "abduzida", "áida", "apetecida", "persuadida", "marida", "distendida", "resistida", "solida", "revolvida", "ultra-rápida", "escorrida", "aramida", "comvida", "erodida", "inferida", "regicida", "reexibida", "protevida", "neida", "moraleida", "enchida", "enrustida", "sortida", "unidos", "partidos", "feridos", "pedidos", "envolvidos", "detidos", "conhecidos", "produzidos", "apreendidos", "bandidos", "estabelecidos", "vendidos", "ouvidos", "referidos", "arguidos", "oferecidos", "recebidos", "sentidos", "cometidos", "obtidos", "atingidos", "desenvolvidos", "reconhecidos", "escolhidos", "definidos", "seguidos", "atendidos", "desaparecidos", "vestidos", "adquiridos", "inseridos", "divididos", "recolhidos", "cumpridos", "tecidos", "rápidos", "transferidos", "sólidos", "reunidos", "ocorridos", "submetidos", "mantidos", "concedidos", "líquidos", "investidos", "perdidos", "proibidos", "válidos", "emitidos", "desconhecidos", "protegidos", "exigidos", "escondidos", "devidos", "exibidos", "sofridos", "surpreendidos", "nascidos", "conduzidos", "impedidos", "garantidos", "reduzidos", "fornecidos", "inquiridos", "resolvidos", "parecidos", "queridos", "punidos", "discutidos", "preferidos", "foragidos", "comprometidos", "promovidos", "vencidos", "comprimidos", "assumidos", "demitidos", "consumidos", "abrangidos", "coloridos", "óbidos", "expedidos", "recém-nascidos", "removidos", "permitidos", "suprimidos", "devolvidos", "híbridos", "dirigidos", "trazidos", "transmitidos", "esquecidos", "servidos", "movidos", "perseguidos", "socorridos", "geridos", "divertidos", "maridos", "colhidos", "retidos", "cedidos", "vividos", "agredidos", "assistidos", "abatidos", "corrigidos", "convencidos", "conseguidos", "corridos", "preenchidos", "contidos", "admitidos", "acolhidos", "debatidos", "rígidos", "redigidos", "regidos", "embutidos", "bem-sucedidos", "esclarecidos", "tidos", "apelidos", "acrescidos", "indevidos", "decididos", "sucedidos", "ácidos", "falecidos", "munidos", "convertidos", "repetidos", "interrompidos", "lidos", "distinguidos", "percorridos", "enchidos", "volvidos", "prometidos", "fluidos", "desfavorecidos", "absolvidos", "defendidos", "introduzidos", "ofendidos", "remetidos", "concebidos", "sugeridos", "rendidos", "abastecidos", "banidos", "requeridos", "favorecidos", "entendidos", "batidos", "idos", "traduzidos", "conferidos", "tímidos", "decorridos", "concorridos", "compreendidos", "medidos", "percebidos", "repartidos", "cozidos", "despedidos", "reproduzidos", "aminoácidos", "pretendidos", "despercebidos", "compridos", "erguidos", "revertidos", "absorvidos", "ávidos", "ressarcidos", "invadidos", "revestidos", "oprimidos", "corrompidos", "desiludidos", "combatidos", "confundidos", "estendidos", "desprotegidos", "auferidos", "proferidos", "aquecidos", "úmidos", "estúpidos", "aplaudidos", "distribuidos", "desprovidos", "respondidos", "agradecidos", "inválidos", "crescidos", "ingeridos", "aprendidos", "reprimidos", "temidos", "demolidos", "falidos", "deduzidos", "doidos", "mal-entendidos", "deferidos", "exercidos", "difundidos", "desmentidos", "constrangidos", "indeferidos", "mexidos", "metidos", "induzidos", "arrependidos", "surgidos", "fortalecidos", "revendidos", "nítidos", "deprimidos", "óxidos", "acometidos", "distorcidos", "consentidos", "pré-definidos", "refletidos", "diferidos", "advertidos", "envelhecidos", "coagidos", "esculpidos", "adormecidos", "engolidos", "gemidos", "rompidos", "invertidos", "providos", "preteridos", "desprevenidos", "latidos", "desferidos", "subdesenvolvidos", "aborrecidos", "comovidos", "enfraquecidos", "entupidos", "travestidos", "ardidos", "fugidos", "comidos", "seduzidos", "pré-estabelecidos", "destemidos", "escurecidos", "iludidos", "floridos", "reconduzidos", "aferidos", "incumbidos", "prevenidos", "despidos", "enriquecidos", "despendidos", "merecidos", "rescindidos", "lúcidos", "resumidos", "indefinidos", "empreendidos", "rebatidos", "omitidos", "explodidos", "fundidos", "entretidos", "intrépidos", "enlouquecidos", "restabelecidos", "atrevidos", "retorcidos", "varridos", "despromovidos", "incorridos", "húmidos", "descuidos", "precedidos", "espremidos", "reinvestidos", "expandidos", "aguerridos", "sórdidos", "desassistidos", "introvertidos", "acedidos", "desnutridos", "dissolvidos", "desvalidos", "acontecidos", "presididos", "adidos", "enfurecidos", "precavidos", "infligidos", "obedecidos", "comedidos", "transcorridos", "predefinidos", "grávidos", "estarrecidos", "havidos", "restringidos", "extrovertidos", "derretidos", "umedecidos", "tingidos", "inibidos", "empobrecidos", "áridos", "evadidos", "ilíquidos", "estampidos", "preestabelecidos", "presumidos", "reabastecidos", "doloridos", "controvertidos", "polidos", "imunodeprimidos", "compelidos", "repreendidos", "multicoloridos", "abolidos", "contundidos", "digeridos", "lípidos", "desabastecidos", "ressentidos", "reintroduzidos", "pruridos", "mordidos", "aludidos", "entristecidos", "ex-maridos", "repelidos", "desimpedidos", "rugidos", "vertidos", "descumpridos", "impelidos", "grunhidos", "incompreendidos", "readmitidos", "descabidos", "subdivididos", "sumidos", "expelidos", "avidos", "coligidos", "embebidos", "nutridos", "curtidos", "eidos", "exauridos", "extorquidos", "remidos", "zumbidos", "recém-promovidos", "impávidos", "coarguidos", "vívidos", "ungidos", "mórbidos", "correspondidos", "sabidos", "reinseridos", "bólidos", "coibidos", "pálidos", "repercutidos", "atribuidos", "subnutridos", "subidos", "amidos", "amadurecidos", "encolhidos", "incluidos", "desmedidos", "combalidos", "sortidos", "translúcidos", "antiácidos", "recorridos", "reflectidos", "bebidos", "torcidos", "antecedidos", "enaltecidos", "desparecidos", "alaridos", "reconvertidos", "pervertidos", "renhidos", "persuadidos", "empedernidos", "aduzidos", "garridos", "descoloridos", "ríspidos", "revividos", "dividos", "excedidos", "malsucedidos", "desapercebidos", "desinibidos", "supridos", "desunidos", "insculpidos", "flácidos", "embevecidos", "dispendidos", "aderidos", "apodrecidos", "endurecidos", "gélidos", "redefinidos", "validos", "lava-rápidos", "tolhidos", "esplêndidos", "enrustidos", "desprendidos", "enraivecidos", "inadimplidos", "franzidos", "divergidos", "sacudidos", "triglicéridos", "esgrimidos", "prosseguidos", "erigidos", "substituidos", "construidos", "abduzidos", "guarnecidos", "ensandecidos", "doridos", "dirimidos", "límpidos", "estupidos", "benzidos", "tremidos", "ultrarrápidos", "aturdidos", "aidos", "fervidos", "tórridos", "incutidos", "péptidos", "descomprometidos", "entorpecidos", "arrefecidos", "rapidos", "ex-detidos", "escorridos", "supreendidos", "infringidos", "peidos", "cuspidos", "cupidos", "premidos", "fétidos", "tripartidos", "renascidos", "subentendidos", "fingidos", "esquálidos", "hidróxidos", "candidatos/partidos", "hibridos", "recém-adquiridos", "cândidos", "encardidos", "dissuadidos", "desguarnecidos", "refugidos", "rangidos", "pré-medidos", "estados-unidos", "excluidos", "imunossuprimidos", "peróxidos", "desentendidos", "desentupidos", "amanhecidos", "apetecidos", "shidos", "cosidos", "erodidos", "fodidos", "fedidos", "paridos", "destruidos", "coproduzidos", "co-arguidos", "aparecidos", "adoecidos", "bem-nascidos", "intrometidos", "expendidos", "anti-partidos", "androidos", "enternecidos", "elegidos", "evolvidos", "imunocomprometidos", "insípidos", "obidos", "pré-preenchidos", "rediscutidos", "remexidos", "tchauqueridos", "pérfidos", "estalidos", "caleidos", "bem-recebidos", "lânguidos", "obscurecidos", "superaquecidos", "subvertidos", "pré-concebidos", "bipartidos", "contorcidos", "reestabelecidos", "inadmitidos", "rejuvenescidos", "ressequidos", "fudidos", "esbatidos", "desatendidos", "estadosunidos", "liquidos", "pré-cozidos", "preconcebidos", "urdidos", "super-rápidos", "revolvidos", "submergidos", "carcomidos", "embrutecidos", "dormidos", "bem-vestidos", "antipartidos", "afligidos", "constituidos", "reexibidos", "imprimidos", "resistidos", "inadvertidos", "hígidos", "distendidos", "enegrecidos", "autopropelidos", "autoinfligidos", "carecidos", "encarecidos", "inqueridos", "medidas", "dúvidas", "partidas", "unidas", "dívidas", "vidas", "bebidas", "feridas", "envolvidas", "conhecidas", "corridas", "oferecidas", "ouvidas", "apreendidas", "vendidas", "avenidas", "seguidas", "desenvolvidas", "obtidas", "atendidas", "detidas", "atingidas", "definidas", "produzidas", "rápidas", "recebidas", "estabelecidas", "grávidas", "protegidas", "desaparecidas", "recolhidas", "cumpridas", "comidas", "divididas", "devidas", "referidas", "mantidas", "escolhidas", "proibidas", "fornecidas", "reunidas", "torcidas", "lidas", "promovidas", "perdidas", "emitidas", "transmitidas", "escondidas", "subidas", "cometidas", "ocorridas", "coloridas", "desconhecidas", "reduzidas", "reconhecidas", "dirigidas", "discutidas", "preenchidas", "idas", "adquiridas", "investidas", "concedidas", "indevidas", "parecidas", "submetidas", "batidas", "contidas", "curtidas", "exigidas", "exibidas", "colhidas", "contrapartidas", "conduzidas", "dormidas", "proferidas", "adidas", "resolvidas", "salva-vidas", "repetidas", "divertidas", "inseridas", "válidas", "introduzidas", "suicidas", "rígidas", "transferidas", "compreendidas", "trazidas", "sofridas", "preferidas", "sólidas", "garantidas", "sentidas", "pedidas", "líquidas", "permitidas", "socorridas", "vividas", "esclarecidas", "assumidas", "descidas", "servidas", "interrompidas", "abrangidas", "nascidas", "comprometidas", "vencidas", "vestidas", "pesticidas", "reproduzidas", "defendidas", "esquecidas", "tidas", "removidas", "bem-sucedidas", "respondidas", "consumidas", "decididas", "queridas", "assistidas", "movidas", "debatidas", "impedidas", "prometidas", "sugeridas", "agredidas", "corrigidas", "acolhidas", "geridas", "sucedidas", "mexidas", "cedidas", "invadidas", "exercidas", "devolvidas", "acrescidas", "guarda-vidas", "conseguidas", "convertidas", "desfavorecidas", "duvidas", "punidas", "conferidas", "despedidas", "erguidas", "compridas", "requeridas", "inseticidas", "admitidas", "mordidas", "abastecidas", "retidas", "concebidas", "dividas", "difundidas", "surpreendidas", "abatidas", "leônidas", "aprendidas", "traduzidas", "híbridas", "favorecidas", "jazidas", "expedidas", "nítidas", "ardidas", "distinguidas", "concorridas", "demolidas", "entendidas", "despercebidas", "herbicidas", "estendidas", "tímidas", "midas", "combatidas", "distorcidas", "percebidas", "estúpidas", "remetidas", "perseguidas", "arguidas", "ácidas", "rebatidas", "homicidas", "inquiridas", "revertidas", "surgidas", "demitidas", "cozidas", "desprovidas", "percorridas", "banidas", "pretendidas", "ofendidas", "merecidas", "úmidas", "revestidas", "margaridas", "ingeridas", "desprotegidas", "repartidas", "aquecidas", "deferidas", "absorvidas", "esculpidas", "suprimidas", "húmidas", "foragidas", "empreendidas", "temidas", "deduzidas", "descabidas", "embutidas", "reprimidas", "induzidas", "presididas", "regidas", "acometidas", "refletidas", "envelhecidas", "convencidas", "confundidas", "apátridas", "rendidas", "desmentidas", "deprimidas", "falidas", "falecidas", "fungicidas", "fluidas", "fortalecidas", "pré-definidas", "floridas", "adormecidas", "invertidas", "áridas", "crescidas", "decorridas", "despidas", "recém-nascidas", "munidas", "indeferidas", "pré-estabelecidas", "engolidas", "precedidas", "aplaudidas", "entupidas", "ressarcidas", "fundidas", "desnutridas", "restabelecidas", "resumidas", "oprimidas", "supridas", "constrangidas", "descumpridas", "rompidas", "obedecidas", "límpidas", "prevenidas", "tecidas", "consentidas", "doidas", "travestidas", "indefinidas", "revendidas", "enfraquecidas", "hemorroidas", "ávidas", "auferidas", "contramedidas", "redigidas", "aborrecidas", "vertidas", "coagidas", "expelidas", "perseidas", "inválidas", "tira-dúvidas", "abolidas", "vívidas", "pelópidas", "omitidas", "atrevidas", "pré-concebidas", "desassistidas", "escurecidas", "dissolvidas", "multicoloridas", "volvidas", "havidas", "doloridas", "gélidas", "preestabelecidas", "restringidas", "preconcebidas", "polidas", "garridas", "ríspidas", "incumbidas", "superprotegidas", "empobrecidas", "tremidas", "expandidas", "genocidas", "lúcidas", "corrompidas", "subnutridas", "providas", "enriquecidas", "predefinidas", "renhidas", "absolvidas", "incorridas", "varridas", "larvicidas", "metidas", "aferidas", "enlouquecidas", "translúcidas", "desferidas", "preteridas", "leonidas", "retorcidas", "espremidas", "lambidas", "infligidas", "malsucedidas", "desmedidas", "controvertidas", "desiludidas", "sórdidas", "aguerridas", "aludidas", "pálidas", "tingidas", "fratricidas", "derretidas", "extrovertidas", "comprimidas", "ermidas", "comedidas", "correspondidas", "dirimidas", "digeridas", "inibidas", "insecticidas", "destemidas", "estremecidas", "druidas", "antecedidas", "subdivididas", "acedidas", "amadurecidas", "iludidas", "repercutidas", "nutridas", "endurecidas", "embebidas", "reflectidas", "redefinidas", "tórridas", "seduzidas", "explodidas", "advertidas", "bipartidas", "combalidas", "acontecidas", "agradecidas", "prosseguidas", "despendidas", "setevidas", "entretidas", "esplêndidas", "comovidas", "sabidas", "reintroduzidas", "despromovidas", "desprevenidas", "exauridas", "imunodeprimidas", "subdesenvolvidas", "sumidas", "distribuidas", "coibidas", "mórbidas", "arrependidas", "semiáridas", "leónidas", "introvertidas", "reabastecidas", "coligidas", "fugidas", "bactericidas", "apodrecidas", "enfurecidas", "construidas", "compelidas", "esbatidas", "enaltecidas", "hemorróidas", "incompreendidas", "sacudidas", "desapercebidas", "bandidas", "d?vidas", "retransmitidas", "liquidas", "gravidas", "saidas", "desinibidas", "almeidas", "desabastecidas", "encolhidas", "erigidas", "incluidas", "latrocidas", "decidas", "fétidas", "gemínidas", "sortidas", "repelidas", "pervertidas", "raticidas", "revividas", "desguarnecidas", "carótidas", "desparecidas", "flácidas", "guarnecidas", "oriónidas", "reestabelecidas", "enegrecidas", "cálidas", "excluidas", "excedidas", "extorquidas", "presumidas", "paridas", "irrefletidas", "reinseridas", "benzidas", "aderidas", "estupidas", "recorridas", "transcorridas", "diferidas", "destruidas", "escorridas", "fervidas", "bombistas-suicidas", "procedidas", "reconvertidas", "biocidas", "encardidas", "desimpedidas", "urdidas", "validas", "cuidas", "repreendidas", "quadrântidas", "enchidas", "ciberdúvidas", "amazônidas", "ceramidas", "reconduzidas", "precavidas", "impelidas", "imerecidas", "parótidas", "aquáridas", "envidas", "fingidas", "cosidas", "tolhidas", "tépidas", "descomprometidas", "aduzidas", "laxmidas", "infundidas", "reinvestidas", "semi-rápidas", "subvertidas", "incontidas", "descoloridas", "desobedecidas", "carrapaticidas", "hibridas", "ressentidas", "rediscutidas", "recém-adquiridas", "táuridas", "ultrarrápidas", "pré-preenchidas", "remexidas", "infringidas", "mal-sucedidas", "maldormidas", "carcomidas", "atribuidas", "bem-vestidas", "contra-medidas", "desprendidas", "cuspidas", "acendidas", "umedecidas", "fura-vidas", "ilíquidas", "insípidas", "malnutridas", "substituidas", "subentendidas", "pérfidas", "persuadidas", "rapidas", "sádidas", "inadimplidas", "lânguidas", "hébridas", "bastidas", "cândidas", "ensandecidas", "doridas", "tripartidas", "descurtidas", "amolecidas", "liberticidas", "oriônidas", "insculpidas", "reerguidas", "plácidas", "cefeidas", "aparecidas", "arrefecidas", "desatendidas", "concluidas", "esgrimidas", "erodidas", "esquálidas", "renascidas", "incumpridas", "incutidas", "obscurecidas", "líridas", "crisálidas", "ungidas", "arremetidas", "estarrecidas", "entorpecidas", "meias-medidas", "não-assistidas", "imprimidas", "reileonidas", "premidas", "solidas", "implodidas"];
};
var Vv = {};
Object.defineProperty(Vv, "__esModule", {
  value: !0
});
Vv.default = function() {
  return ["abalienato", "abbacchiato", "abbacinato", "abbadato", "abbagliato", "abbaiato", "abballato", "abbambinato", "abbancato", "abbandonato", "abbarbagliato", "abbarbato", "abbarcato", "abbaruffato", "abbassato", "abbatacchiato", "abbattuto", "abbatuffolato", "abbelito", "abbellato", "abbellito", "abbendato", "abbeverato", "abbiadato", "abbicato", "abbigliato", "abbinato", "abbindolato", "abbioccato", "abbiosciato", "abbisciato", "abbittato", "abboccato", "abboffato", "abbominato", "abbonacciato", "abbonato", "abbonito", "abbordato", "abborracciato", "abborrato", "abborrito", "abbottinato", "abbottonato", "abbozzacchiato", "abbozzato", "abbozzolato", "abbracciato", "abbraciato", "abbrancato", "abbreviato", "abbriccato", "abbrigliato", "abbrivato", "abbriviato", "abbrividito", "abbronzato", "abbrostolato", "abbrostolito", "abbruciacchiato", "abbruciato", "abbrunato", "abbrunito", "abbruscato", "abbrusciato", "abbrustiato", "abbrustolato", "abbrustolito", "abbrutito", "abbruttito", "abbuffato", "abbuiato", "abbuonato", "abburattato", "abbuzzito", "abdicato", "abdotto", "abiettato", "abilitato", "abissato", "abitato", "abituato", "abiurato", "abolito", "abominato", "abondato", "aborrito", "abraso", "abrogato", "abusato", "accaffato", "accagionato", "accagliato", "accalappiato", "accalcato", "accaldato", "accallato", "accalorato", "accalorito", "accambiato", "accampato", "accampionato", "accanalato", "accanato", "accaneggiato", "accanito", "accantonato", "accaparrato", "accapezzato", "accapigliato", "accapottato", "accappiato", "accappiettato", "accapponato", "accappucciato", "accaprettato", "accareggiato", "accarezzato", "accarnato", "accarpionato", "accartocciato", "accasato", "accasciato", "accasellato", "accasermato", "accastellato", "accastellinato", "accatarrato", "accatastato", "accattato", "accattivato", "accavalcato", "accavalciato", "accavallato", "accavezzato", "accecato", "acceffato", "accelerato", "accellerato", "accennato", "accensato", "accentato", "accentrato", "accentuato", "acceppato", "accerchiato", "accercinato", "accertato", "acceso", "accessoriato", "accettato", "acchetato", "acchiappato", "acchiocciolato", "acchitato", "acchiuduto", "acciabattato", "acciaiato", "acciambellato", "acciarpato", "acciecato", "accigliato", "acciglionato", "accignuto", "accincignato", "accinto", "acciocchito", "acciottolato", "accipigliato", "accismato", "acciso", "acciucchito", "acciuffato", "accivettato", "acclamato", "acclarato", "acclimatato", "accluso", "accoccato", "accoccolato", "accoccovato", "accodato", "accollato", "accoltellato", "accolto", "accomandato", "accomiatato", "accommiatato", "accomodato", "accompagnato", "accomunato", "acconciato", "acconigliato", "accontato", "accontentato", "accoppato", "accoppiato", "accorato", "accorciato", "accorcito", "accordato", "accordellato", "accorpato", "accorto", "accosciato", "accostato", "accostumato", "accotonato", "accottimato", "accovacciato", "accovato", "accovonato", "accozzato", "accreditato", "accresciuto", "accrespato", "accucciato", "accucciolato", "accudito", "acculato", "acculturato", "accumulato", "accumunato", "accusato", "acetificato", "acetilato", "acetito", "acidato", "acidificato", "acidulato", "acquadernato", "acquarellato", "acquartierato", "acquato", "acquattato", "acquerellato", "acquetato", "acquietato", "acquisito", "acquistato", "acromatizzato", "acuito", "acuminato", "acutizzato", "adacquato", "adagiato", "adattato", "addaziato", "addebbiato", "addebitato", "addecimato", "addensato", "addentato", "addentellato", "addentrato", "addestrato", "addetto", "addiacciato", "addimandato", "addimesticato", "addimorato", "addimostrato", "addipanato", "addirizzato", "additato", "additivato", "addizionato", "addobbato", "addocilito", "addogliato", "addolcato", "addolciato", "addolcito", "addolorato", "addomandato", "addomesticato", "addoppiato", "addormentato", "addossato", "addotto", "addottorato", "addottrinato", "addrizzato", "adduato", "addugliato", "adeguato", "adempito", "adempiuto", "adequato", "aderizzato", "adescato", "adibito", "adirato", "adito", "adiuvato", "adizzato", "adocchiato", "adombrato", "adonato", "adonestato", "adontato", "adoperato", "adoprato", "adorato", "adornato", "adottato", "adsorbito", "aduggiato", "adugnato", "adulato", "adulterato", "adunato", "adunghiato", "adusato", "aerato", "aereato", "aerotrainato", "aerotrasportato", "affabulato", "affaccendato", "affacchinato", "affacciato", "affagottato", "affaldato", "affamato", "affamigliato", "affannato", "affardellato", "affascinato", "affastellato", "affaticato", "affattucchiato", "affatturato", "affermato", "afferrato", "affettato", "affezionato", "affiancato", "affiatato", "affibbiato", "affidato", "affienato", "affievolito", "affigliato", "affigurato", "affilato", "affilettato", "affiliato", "affinato", "affiochito", "affiorato", "affisato", "affissato", "affisso", "affittato", "affittito", "afflitto", "afflosciato", "affocato", "affogato", "affogliato", "affollato", "affoltato", "affondato", "afforcato", "afforestato", "afforzato", "affossato", "affralito", "affrancato", "affranto", "affratellato", "affrenato", "affrenellato", "affrescato", "affrettato", "affrittellato", "affrontato", "affumato", "affumicato", "affumigato", "affuocato", "affusolato", "africanizzato", "ageminato", "agevolato", "aggallato", "agganciato", "aggangherato", "aggarbato", "aggattonato", "aggavignato", "aggelato", "aggettivato", "agghiacciato", "agghiadato", "agghiaiato", "agghindato", "aggiaccato", "aggiogato", "aggiornato", "aggirato", "aggiucchito", "aggiudicato", "aggiuntato", "aggiunto", "aggiustato", "agglomerato", "agglutinato", "aggomitolato", "aggottato", "aggradito", "aggraffato", "aggranchiato", "aggranchito", "aggrandito", "aggrappato", "aggraticciato", "aggravato", "aggredito", "aggregato", "aggrevato", "aggricciato", "aggrinzato", "aggrinzito", "aggrommato", "aggrondato", "aggroppato", "aggrottato", "aggrovigliato", "aggrumato", "aggruppato", "aggruzzolato", "agguagliato", "agguantato", "agguardato", "agguatato", "aggueffato", "agitato", "agognato", "agrarizzato", "aguatato", "agucchiato", "agunato", "agurato", "aguzzato", "aitato", "aiutato", "aizzato", "alato", "alberato", "albergato", "alcalinizzato", "alchilato", "alchimiato", "alchimizzato", "alcolizzato", "alcoolizzato", "alenato", "alesato", "alettato", "alfabetato", "alfabetizzato", "alidito", "alienato", "alimentato", "allacciato", "allagato", "allappato", "allargato", "allascato", "allattato", "alleato", "allegato", "alleggerito", "alleggiato", "allegorizzato", "alleluiato", "allenato", "allenito", "allentato", "allertato", "allessato", "allestito", "allettato", "allevato", "alleviato", "allibato", "allibito", "allibrato", "allicciato", "allietato", "allindato", "allineato", "alliso", "allocato", "allogato", "alloggiato", "allontanato", "allottato", "allucchettato", "allucciolato", "allucinato", "allumato", "alluminato", "alluminiato", "allungato", "allupato", "alluso", "alluzzato", "alogenato", "alonato", "alpeggiato", "alterato", "alternato", "alzato", "amalgamato", "amareggiato", "amaricato", "amato", "ambientato", "ambiguato", "ambito", "americanizzato", "amicato", "ammaccato", "ammaestrato", "ammainato", "ammalato", "ammaliato", "ammalinconito", "ammaltato", "ammanettato", "ammanicato", "ammanierato", "ammanigliato", "ammannato", "ammannellato", "ammannito", "ammansato", "ammansito", "ammantato", "ammantellato", "ammarato", "ammarezzato", "ammassato", "ammassellato", "ammassicciato", "ammatassato", "ammattonato", "ammazzato", "ammelmato", "ammencito", "ammendato", "ammennicolato", "ammesso", "ammetato", "ammezzito", "amministrato", "amminutato", "ammirato", "ammiserito", "ammobiliato", "ammodernato", "ammodernizzato", "ammogliato", "ammoinato", "ammollato", "ammollito", "ammonito", "ammonticchiato", "ammonticellato", "ammorbato", "ammorbidato", "ammorbidito", "ammorsato", "ammortato", "ammortito", "ammortizzato", "ammorzato", "ammosciato", "ammoscito", "ammostato", "ammotinato", "ammucchiato", "ammulinato", "ammusato", "ammutato", "ammutinato", "amnistiato", "amoracciato", "ampiato", "ampliato", "amplificato", "amputato", "anagrammato", "analizzato", "anamorfizzato", "anastomizzato", "anatematizzato", "anatomizzato", "anchilosato", "anciso", "ancorato", "andatoseno", "andicappato", "anellato", "anemizzato", "anestetizzato", "angariato", "anglicizzato", "angolato", "angosciato", "angustiato", "animato", "annacquato", "annaffiato", "annasato", "annaspato", "annaspicato", "annebbiato", "annegato", "annerato", "annerito", "annesso", "annestato", "annichilato", "annichilito", "annidato", "annientato", "annitrito", "annobilito", "annodato", "annodicchiato", "annoiato", "annotato", "annottato", "annottolato", "annoverato", "annullato", "annunciato", "annunziato", "annusato", "annuvolato", "anodizzato", "anonimizzato", "anteceduto", "anteposto", "antergato", "anticheggiato", "antichizzato", "anticipato", "anticonosciuto", "antidatato", "antiveduto", "antivisto", "antologizzato", "antropizzato", "antropomorfizzato", "aocchiato", "aombrato", "aonestato", "aontato", "aperto", "apocopato", "apologizzato", "apostrofato", "appaciato", "appacificato", "appagato", "appaiato", "appalesato", "appallottolato", "appaltato", "appanettato", "appannato", "apparato", "apparecchiato", "apparentato", "apparigliato", "apparito", "appartato", "appassionato", "appastato", "appastellato", "appellato", "appennellato", "appercepito", "appertizzato", "appesantito", "appesito", "appeso", "appestato", "appetito", "appezzato", "appiacevolito", "appianato", "appiastrato", "appiatato", "appiattato", "appiattito", "appiccato", "appiccicato", "appiccolito", "appiedato", "appigionato", "appigliato", "appinzato", "appiombato", "appioppato", "appisolato", "applaudito", "applicato", "appoderato", "appoggiato", "appollaiato", "appoppato", "apportato", "appostato", "apposto", "appratito", "appresentato", "appreso", "appressato", "apprestato", "apprettato", "apprezzato", "approcciato", "approfittato", "approfondato", "approfondito", "approntato", "appropinquato", "appropriato", "approssimato", "approvato", "approvisionato", "approvvigionato", "appruato", "appulcrato", "appuntato", "appuntellato", "appuntito", "appurato", "appuzzato", "arabescato", "arabizzato", "arato", "arbitrato", "arborato", "arcaizzato", "arcato", "architettato", "archiviato", "arcuato", "ardito", "areato", "argentato", "arginato", "argomentato", "arguito", "arianizzato", "arieggiato", "armato", "armonizzato", "aromatizzato", "arpeggiato", "arpionato", "arponato", "arrabattato", "arraffato", "arraffiato", "arrandellato", "arrangiato", "arrapato", "arrapinato", "arrappato", "arrazzato", "arrecato", "arredato", "arreggimentato", "arrembato", "arrenato", "arresiso", "arreso", "arrestato", "arretrato", "arricchito", "arricciato", "arricciolato", "arriffato", "arringato", "arrischiato", "arrisicato", "arriso", "arrocato", "arroccato", "arrochito", "arrogato", "arrolato", "arroncato", "arronzato", "arrosato", "arrossato", "arrostato", "arrostito", "arrotato", "arrotolato", "arrotondato", "arrovellato", "arroventato", "arroventito", "arrovesciato", "arrubinato", "arruffato", "arruffianato", "arrugginito", "arruncigliato", "arruolato", "arruvidito", "arsicciato", "arso", "artefatto", "articolato", "artigliato", "asceso", "asciato", "asciolvuto", "asciugato", "ascoltato", "ascoso", "ascosto", "ascritto", "asfaltato", "asfissiato", "asperso", "aspettato", "aspirato", "asportato", "aspreggiato", "assaettato", "assaggiato", "assalito", "assaltato", "assaporato", "assaporito", "assassinato", "assecondato", "assecurato", "assediato", "asseggiato", "assegnato", "assembiato", "assemblato", "assembrato", "assemprato", "assentato", "asserito", "asserragliato", "asservito", "assestato", "assetato", "assettato", "asseverato", "assibilato", "assicurato", "assiderato", "assiemato", "assiepato", "assillato", "assimigliato", "assimilato", "assiomatizzato", "assiso", "assistito", "associato", "assodato", "assoggettato", "assolcato", "assoldato", "assolto", "assolutizzato", "assomato", "assommato", "assonato", "assonnato", "assopito", "assorbito", "assordato", "assordito", "assortito", "assottigliato", "assuefatto", "assunto", "asteggiato", "astenuto", "asterso", "astratto", "astretto", "atomizzato", "atrofizzato", "atrovato", "attaccato", "attagliato", "attanagliato", "attardato", "attediato", "atteggiato", "attempato", "attendato", "attentato", "attenuato", "attenuto", "attergato", "atterrato", "atterrito", "atterzato", "atteso", "attestato", "atticizzato", "attillato", "attinto", "attirato", "attivato", "attivizzato", "attizzato", "attorcigliato", "attorniato", "attorto", "attoscato", "attossicato", "attraccato", "attrappito", "attratto", "attraversato", "attrezzato", "attribuito", "attristato", "attristito", "attruppato", "attualizzato", "attuato", "attuffato", "attutato", "attutito", "auggiato", "augumentato", "augurato", "aulito", "aumentato", "aunghiato", "ausato", "auscultato", "auspicato", "autenticato", "autentificato", "autoaccusato", "autoaffondato", "autoalimentato", "autoassolto", "autocandidato", "autocensurato", "autocitato", "autocommiserato", "autoconsumato", "autoconvinto", "autodefinito", "autodenunciato", "autodistrutto", "autofinanziato", "autogestito", "autogovernato", "autografato", "autoincensato", "autointersecato", "autoinvitato", "autolesionato", "autolimitato", "automaticizzato", "automatizzato", "automotivato", "autonominato", "autoproclamato", "autoprodotto", "autoprotetto", "autopubblicato", "autopubblicizzato", "autoregolamentato", "autoregolato", "autoridotto", "autoriparato", "autorizzato", "autosomministrato", "autosostenuto", "autosuggestionato", "autotassato", "autotrapiantato", "autotrasportato", "autovalutato", "avallato", "avampato", "avanzato", "avariato", "avinto", "aviolanciato", "aviotrasportato", "avocato", "avolterato", "avulso", "avutacelo", "avuto", "avvalorato", "avvalso", "avvantaggiato", "avvelato", "avvelenato", "avventato", "avventurato", "avverato", "avversato", "avvertito", "avvezzato", "avviato", "avvicendato", "avvicinato", "avvignato", "avvilito", "avviluppato", "avvinato", "avvinchiato", "avvinghiato", "avvinto", "avvisato", "avvistato", "avvitato", "avviticchiato", "avvitito", "avvivato", "avvolto", "avvoltolato", "aziendalizzato", "azionato", "azotato", "azzannato", "azzardato", "azzeccato", "azzerato", "azzimato", "azzittato", "azzittito", "azzoppato", "azzoppito", "azzuffato", "azzurrato", "bacato", "baccagliato", "bacchettato", "bacchiato", "baciato", "badato", "bagnato", "baipassato", "balbettato", "balcanizzato", "ballato", "baloccato", "balzato", "banalizzato", "bancato", "bandito", "bannato", "baraccato", "barattato", "barbarizzato", "barcamenato", "bardato", "barellato", "barrato", "barricato", "basato", "basciato", "basculato", "bassato", "bastato", "bastionato", "bastito", "bastonato", "battezzato", "battuto", "bazzicato", "beatificato", "beato", "beccato", "beccheggiato", "becchettato", "beffato", "beffeggiato", "bendato", "benedetto", "beneficato", "benvoluto", "berlusconizzato", "bersagliato", "bestemmiato", "bevuto", "biadato", "bianchettato", "bianchito", "biascicato", "biasimato", "biasmato", "bidonato", "biennalizzato", "biforcato", "bigiato", "bilanciato", "binato", "bindolato", "biodegradato", "biografato", "bipartito", "bisbigliato", "biscottato", "bisecato", "bisellato", "bisognato", "bissato", "bistrato", "bistrattato", "bitumato", "bituminato", "blandito", "bleffato", "blindato", "bloccato", "bobinato", "boccheggiato", "bocciato", "boicottato", "bollato", "bollito", "bombardato", "bombato", "bonderizzato", "bonificato", "bootato", "borbottato", "bordato", "boriato", "borrato", "borseggiato", "braccato", "bracciato", "bramato", "bramito", "brancicato", "brandeggiato", "brandito", "brasato", "bravato", "brevettato", "breviato", "brillantato", "brillato", "brinato", "broccato", "brocciato", "broccolato", "brontolato", "bronzato", "brucato", "bruciacchiato", "bruciato", "brunito", "bruscato", "bruschinato", "brutalizzato", "bruttato", "bucato", "bucherellato", "bufato", "buffato", "bufferizzato", "buggerato", "bugnato", "bulicato", "bulinato", "bullettato", "bullonato", "burattato", "burlato", "burocratizzato", "burrificato", "buscato", "buttato", "butterato", "bypassato", "cablato", "cabrato", "cacato", "cacciato", "cadenzato", "cadmiato", "caducato", "cagato", "caggiato", "cagionato", "cagliato", "calafatato", "calamitato", "calandrato", "calato", "calcato", "calciato", "calcificato", "calcolato", "caldeggiato", "calettato", "calibrato", "calmato", "calmierato", "calpestato", "calumato", "calunniato", "calzato", "cambiato", "camerato", "campionato", "campito", "camuffato", "canalizzato", "cancellato", "cancerizzato", "candeggiato", "candidato", "candito", "canforato", "cangiato", "cannato", "canneggiato", "cannibalizzato", "cannoneggiato", "canonizzato", "cantato", "canterellato", "canticchiato", "cantilenato", "canzonato", "caolinizzato", "capacitato", "capeggiato", "capillarizzato", "capitalizzato", "capitanato", "capitaneggiato", "capito", "capitozzato", "capivolto", "caponato", "capotato", "capottato", "capovolto", "capponato", "captato", "caramellato", "caramellizzato", "caratato", "caratterizzato", "carbonizzato", "carbossilato", "carburato", "carcato", "carcerato", "cardato", "carenato", "carezzato", "cariato", "caricato", "caricaturato", "caricaturizzato", "carotato", "carpionato", "carpito", "carreggiato", "carrozzato", "cartavetrato", "carteggiato", "cartellinato", "cartografato", "cartolarizzato", "cartonato", "cascolato", "cassato", "casso", "castigato", "castrato", "casualizzato", "catabolizzato", "catalizzato", "catalogato", "catapultato", "catechizzato", "categorizzato", "cateterizzato", "catramato", "cattolicizzato", "catturato", "causato", "cautelato", "cauterizzato", "cauzionato", "cavalcato", "cavataselo", "cavato", "cazzato", "cazziato", "cazzottato", "cedrato", "ceduto", "celato", "celebrato", "cellofanato", "cementato", "cementificato", "cennato", "censito", "censurato", "centellato", "centellinato", "centimetrato", "centinato", "centralizzato", "centrato", "centrifugato", "centuplicato", "cerato", "cercato", "cerchiato", "cernuto", "certificato", "cesellato", "cessato", "cestinato", "cheratinizzato", "chetato", "chiamato", "chiappato", "chiarificato", "chiarito", "chiaroscurato", "chiavato", "chiazzato", "chiesto", "chilificato", "chilometrato", "chimificato", "chinato", "chinizzato", "chiodato", "chiosato", "chiuso", "choccato", "ciancicato", "cianfrinato", "cianfrugliato", "ciangottato", "ciattato", "cibato", "cicatrizzato", "ciccato", "cicchettato", "ciclizzato", "ciclostilato", "cifrato", "cilindrato", "cimato", "cimentato", "cincischiato", "cinematografato", "cintato", "cinto", "cioncato", "ciondolato", "circolato", "circoncinto", "circonciso", "circondato", "circondotto", "circonflesso", "circonfluito", "circonfuso", "circonscritto", "circonvenuto", "circoscritto", "circostanziato", "circuito", "circumcinto", "circumnavigato", "citato", "ciucciato", "ciurmato", "civettato", "civilizzato", "clamato", "classato", "classicizzato", "classificato", "cliccato", "climatizzato", "clivato", "clonato", "cloroformizzato", "clorurato", "clusterizzato", "co-diretto", "coacervato", "coadiuvato", "coagulato", "coalizzato", "coartato", "coccolato", "codificato", "coeditato", "coesistito", "cofinanziato", "cofirmato", "cofondato", "cogestito", "cogitato", "coglionato", "cognosciuto", "coibentato", "coinciso", "cointeressato", "cointestato", "coinvolto", "cokificato", "colato", "colettato", "collassato", "collaudato", "collazionato", "collegato", "collettivizzato", "collezionato", "collimato", "colliquato", "colliso", "collocato", "colluttato", "colmato", "colonizzato", "colorato", "colorito", "colorizzato", "colpevolizzato", "colpito", "coltellato", "coltivato", "colto", "coltrato", "comandato", "combattuto", "combinato", "comburuto", "comicizzato", "cominciato", "commemorato", "commendato", "commensurato", "commentato", "commercializzato", "commesso", "comminato", "commiserato", "commissariato", "commissionato", "commisurato", "commosso", "commutato", "comodato", "compaginato", "comparito", "compartimentalizzato", "compartito", "compassionato", "compatibilizzato", "compatito", "compattato", "compendiato", "compenetrato", "compensato", "comperato", "compiaciuto", "compianto", "compilato", "compitato", "compiuto", "complessato", "complessificato", "complesso", "completato", "complicato", "complimentato", "comportato", "compostato", "composto", "comprato", "compravenduto", "compreso", "compresso", "compromesso", "comprovato", "compulsato", "compunto", "computato", "computerizzato", "comunicato", "comunistizzato", "concatenato", "conceduto", "concelebrato", "concentrato", "concepito", "concertato", "concesso", "concettato", "concettualizzato", "conchiuso", "conciato", "conciliato", "concimato", "concitato", "conclamato", "concluso", "concordato", "concotto", "concretato", "concretizzato", "conculcato", "concupito", "condannato", "condensato", "condito", "condiviso", "condizionato", "condoluto", "condonato", "condotto", "confatto", "confederato", "conferito", "confermato", "confessato", "confettato", "confezionato", "conficcato", "confidato", "configurato", "confinato", "confinto", "confiscato", "confitto", "conformato", "confortato", "confricato", "confrontato", "confuso", "confutato", "congedato", "congegnato", "congelato", "congestionato", "congetturato", "congiunto", "conglobato", "conglomerato", "conglutinato", "congratulato", "congregato", "conguagliato", "coniato", "coniugato", "connaturato", "connesso", "connotato", "connumerato", "conosciuto", "conquistato", "consacrato", "consapevolizzato", "consegnato", "conseguito", "consentito", "conservato", "considerato", "consigliato", "consistito", "consociato", "consolato", "consolidato", "consorziato", "consparso", "consperso", "constatato", "constretto", "construito", "consultato", "consumato", "consunto", "contabilizzato", "contagiato", "containerizzato", "contaminato", "contato", "contattato", "conteggiato", "contemperato", "contemplato", "contentato", "contenuto", "conteso", "contestato", "contestualizzato", "contingentato", "continuato", "contornato", "contorto", "contrabbandato", "contraccambiato", "contraddetto", "contraddistinto", "contradetto", "contraffatto", "contrappesato", "contrapposto", "contrappuntato", "contrariato", "contrassegnato", "contrastato", "contrato", "contrattaccato", "contrattato", "contratto", "contravvalso", "contristato", "controbattuto", "controbilanciato", "controdatato", "controfirmato", "controindicato", "controllato", "controminato", "contronotato", "controproposto", "controprovato", "controquerelato", "controsoffittato", "controstampato", "controventato", "conturbato", "contuso", "convalidato", "convenuto", "convenzionato", "convertito", "convinto", "convitato", "convocato", "convogliato", "convolto", "coobato", "cooptato", "coordinato", "coperchiato", "coperto", "copiaincollato", "copiato", "copolimerizzato", "coppellato", "coprodotto", "corazzato", "corbellato", "corcato", "cordonato", "coreografato", "coricato", "cornificato", "coronato", "corredato", "correlato", "corresponsabilizzato", "corretto", "corricchiato", "corrisposto", "corroborato", "corroso", "corrotto", "corrucciato", "corrugato", "corso", "corteato", "corteggiato", "cortocircuitato", "coruscato", "cosato", "coscritto", "cosparso", "cosperso", "costatato", "costeggiato", "costellato", "costernato", "costicchiato", "costipato", "costituito", "costituzionalizzato", "costretto", "costruito", "costudito", "cotonato", "cotto", "covato", "coventrizzato", "coverchiato", "craccato", "creato", "creduto", "cremato", "crepato", "cresciuto", "cresimato", "crespato", "criminalizzato", "crioconcentrato", "criptato", "cristallizzato", "cristianizzato", "criticato", "crittato", "crittografato", "crivellato", "crocchiato", "crocefisso", "crocefitto", "crocifisso", "crocifitto", "crogiolato", "cromato", "cronicizzato", "cronometrato", "crostato", "crucciato", "crucifisso", "crucifitto", "cuccato", "cucinato", "cucito", "cullato", "cumulato", "cuntato", "curato", "curvato", "curvato", "custodito", "customizzato", "damascato", "damaschinato", "damato", "dannato", "danneggiato", "danzato", "dardeggiato", "datato", "dato", "dattilografato", "dattiloscritto", "daziato", "deacidificato", "deattivato", "debbiato", "debellato", "debilitato", "decaffeinato", "decaffeinizzato", "decalcato", "decalcificato", "decantato", "decapato", "decapitato", "decappottato", "decarbossilato", "decarburato", "decatizzato", "decelerato", "decentralizzato", "decentrato", "decerebrato", "decernuto", "decespugliato", "deciferato", "decifrato", "decimalizzato", "decimato", "deciso", "declamato", "declassato", "declassificato", "declinato", "declorato", "decodificato", "decolonizzato", "decolorato", "decompartimentato", "decompilato", "decomposto", "decompresso", "deconcentrato", "decondizionato", "decongelato", "decongestionato", "decontaminato", "decontestualizzato", "decontratto", "decorato", "decorticato", "decostruito", "decrementato", "decretato", "decriminalizzato", "decriptato", "decrittato", "decuplicato", "decurtato", "dedicato", "dedotto", "defacciato", "defalcato", "defascistizzato", "defecato", "defenestrato", "deferito", "defilato", "definito", "defiscalizzato", "defitto", "deflazionato", "deflemmato", "deflorato", "defogliato", "defoliato", "deforestato", "deformato", "defosforato", "defosforilato", "deframmentato", "defraudato", "degassato", "degassificato", "deglutito", "degnato", "degradato", "degustato", "deidratato", "deidrogenato", "deificato", "deindicizzato", "deindustrializzato", "deionizzato", "delegato", "delegificato", "delegittimato", "delibato", "deliberato", "delimitato", "delineato", "delirato", "deliziato", "delocalizzato", "delucidato", "deluso", "demagnetizzato", "demandato", "demanializzato", "demarcato", "demeritato", "demerso", "demetallizzato", "demilitarizzato", "demineralizzato", "demistificato", "demitizzato", "democratizzato", "demodulato", "demolito", "demoltiplicato", "demonetato", "demonetizzato", "demonizzato", "demoralizzato", "demorso", "demotivato", "denaturalizzato", "denaturato", "denazificato", "denazionalizzato", "denicotinizzato", "denigrato", "denitrificato", "denocciolato", "denominato", "denotato", "dentellato", "denuclearizzato", "denudato", "denunciato", "denunziato", "deodorato", "deossidato", "deossigenato", "deostruito", "depauperato", "depenalizzato", "depennato", "depilato", "depinto", "depistato", "deplorato", "depolarizzato", "depolimerizzato", "depoliticizzato", "depolverizzato", "deportato", "depositato", "deposto", "depotenziato", "depravato", "deprecato", "depredato", "depresso", "depressurizzato", "deprezzato", "deprivato", "deprotonato", "depulso", "depurato", "dequalificato", "deratizzato", "derattizzato", "dereferenziato", "deregolamentato", "deregolato", "derequisito", "deresponsabilizzato", "deriso", "derubato", "derubricato", "desacralizzato", "desalato", "desalinizzato", "descolarizzato", "descritto", "desecretato", "desegretato", "deselezionato", "desensibilizzato", "desessualizzato", "desiato", "desiderato", "designato", "desinato", "desirato", "desolato", "desolforato", "desonorizzato", "desorbito", "desossidato", "desquamato", "destabilizzato", "destagionalizzato", "destalinizzato", "destatalizzato", "destatizzato", "destato", "destinato", "destituito", "destoricizzato", "destreggiato", "destrutto", "destrutturato", "desunto", "detassato", "detenuto", "deteriorato", "determinato", "deterso", "detestato", "detonato", "detorto", "detossificato", "detratto", "detronizzato", "dettagliato", "dettato", "detto", "deturpato", "deumidificato", "devastato", "deventato", "deviato", "deviscerato", "devitalizzato", "devitaminizzato", "devoluto", "dezippato", "diaframmato", "diagnosticato", "diagonalizzato", "diagrammato", "dializzato", "dialogato", "dialogizzato", "diazotato", "dibattuto", "diboscato", "dichiarato", "diesato", "diesizzato", "difeso", "diffamato", "differito", "diffidato", "diffranto", "diffratto", "diffuso", "digerito", "digitalizzato", "digitato", "digiunto", "digrassato", "digrignato", "digrossato", "dilacerato", "dilaniato", "dilapidato", "dilatato", "dilavato", "dilazionato", "dileggiato", "dileguato", "dilettato", "diletto", "diliscato", "dilucidato", "diluito", "dilungato", "dimagrato", "dimandato", "dimenato", "dimensionato", "dimenticato", "dimerizzato", "dimesso", "dimezzato", "diminuito", "dimissionato", "dimostrato", "dimunto", "dinamizzato", "dinoccato", "dipanato", "dipelato", "dipinto", "diplomato", "diposto", "diradato", "diramato", "diretto", "direzionato", "dirimuto", "diroccato", "dirottato", "dirotto", "dirozzato", "disabilitato", "disabituato", "disaccentato", "disaccoppiato", "disaccordato", "disacerbato", "disacidato", "disacidificato", "disacidito", "disaerato", "disaffezionato", "disaggregato", "disalberato", "disallineato", "disamato", "disambiguato", "disaminato", "disamorato", "disancorato", "disanimato", "disappannato", "disapplicato", "disappreso", "disapprovato", "disarcionato", "disarmato", "disarticolato", "disascosto", "disassemblato", "disassuefatto", "disatomizzato", "disatteso", "disattivato", "disattrezzato", "disavvezzato", "disboscato", "disbrigato", "discacciato", "discalzato", "discantato", "discaricato", "discernuto", "disceso", "disceverato", "dischiesto", "dischiuso", "discinto", "disciolto", "disciplinato", "discolorato", "discolpato", "discommesso", "discompagnato", "discomposto", "disconcluso", "disconfitto", "discongiunto", "disconnesso", "disconosciuto", "discoperto", "discordato", "discosceso", "discostato", "discreditato", "discresciuto", "discriminato", "discritto", "discucito", "discuoiato", "discusso", "disdegnato", "disdettato", "disdetto", "diseccato", "diseccitato", "diseducato", "disegnato", "diserbato", "diseredato", "disertato", "diserto", "disfatto", "disgelato", "disgiunto", "disgraziato", "disgregato", "disgustato", "disidentificato", "disiderato", "disidratato", "disilluso", "disimballato", "disimparato", "disimpegnato", "disimpresso", "disincagliato", "disincantato", "disincentivato", "disincrostato", "disindustrializzato", "disinfestato", "disinfettato", "disinflazionato", "disinformato", "disingannato", "disingranato", "disinibito", "disinnamorato", "disinnescato", "disinnestato", "disinquinato", "disinserito", "disinstallato", "disintasato", "disintegrato", "disinteressato", "disinteso", "disintossicato", "disinvestito", "disinvolto", "disistimato", "dislocato", "dismesso", "disobbedito", "disobbligato", "disonorato", "disordinato", "disorganizzato", "disorientato", "disormeggiato", "disossato", "disossidato", "disostruito", "disotterrato", "disparito", "dispensato", "dispento", "disperduto", "disperso", "dispeso", "dispiegato", "dispinto", "dispogliato", "disposto", "dispregiato", "disprezzato", "dispromesso", "disproporzionato", "disputato", "disqualificato", "disrotto", "dissacrato", "dissalato", "dissaldato", "dissanguato", "dissecato", "disseccato", "disselciato", "dissellato", "disseminato", "dissepolto", "disseppellito", "dissequestrato", "disserrato", "dissestato", "dissetato", "dissezionato", "dissigillato", "dissimulato", "dissipato", "dissociato", "dissodato", "dissolto", "dissomigliato", "dissotterrato", "dissuaso", "dissuggellato", "distaccato", "distanziato", "disteso", "distillato", "distinto", "distolto", "distorto", "distratto", "distretto", "distribuito", "districato", "distrigato", "distrutto", "disturbato", "disubbidito", "disumanato", "disumanizzato", "disunito", "disusato", "disveduto", "disvelato", "disvestito", "disviato", "disvisto", "disvolto", "disvoluto", "dittongato", "divallato", "divaricato", "divelto", "diversificato", "divertito", "divezzato", "divinato", "divincolato", "divinizzato", "diviso", "divolto", "divorato", "divorziato", "divulgato", "documentato", "dogato", "dogmatizzato", "dolcificato", "dollarizzato", "dolorato", "doluto", "domandato", "domato", "domesticato", "domiciliato", "dominato", "donato", "dondolato", "dopato", "doppiato", "dorato", "dormitoco", "dosato", "dotato", "dovuto", "dragato", "drammatizzato", "drappeggiato", "drenato", "dribblato", "drizzato", "drogato", "dugliato", "duplicato", "duramificato", "ebraizzato", "ecceduto", "eccepito", "eccettuato", "eccitato", "echeggiato", "eclissato", "economizzato", "edificato", "editato", "edotto", "educato", "edulcorato", "effettuato", "efficientato", "effigiato", "effinto", "effluito", "effuso", "egemonizzato", "eguagliato", "eiettato", "elaborato", "elargito", "elasticizzato", "elementarizzato", "elemosinato", "elencato", "eletto", "elettrificato", "elettrizzato", "elettrocoagulato", "elettrolizzato", "elevato", "eliminato", "eliso", "elitrasportato", "ellenizzato", "elogiato", "elucidato", "elucubrato", "eluito", "eluso", "emanato", "emancipato", "emarginato", "embricato", "emendato", "emesso", "emozionato", "empito", "empiuto", "emulato", "emulsionato", "emunto", "encomiato", "endocitato", "energizzato", "enfatizzato", "enfiato", "entusiasmato", "enucleato", "enumerato", "enunciato", "epicureggiato", "epurato", "equalizzato", "equilibrato", "equipaggiato", "equiparato", "eradicato", "eraso", "ereditato", "eretto", "erogato", "eroicizzato", "eroso", "erotizzato", "erpicato", "erso", "erudito", "eruttato", "esacerbato", "esagerato", "esagitato", "esalato", "esaltato", "esaminato", "esasperato", "esaudito", "esaurito", "esautorato", "esborsato", "escluso", "escogitato", "escomiato", "escoriato", "escosso", "escusso", "esecrato", "esecutato", "eseguito", "esemplificato", "esentato", "esercitato", "esfoliato", "esibito", "esilarato", "esiliato", "esimuto", "esitato", "esonerato", "esorbitato", "esorcizzato", "esortato", "espanso", "esparso", "esperimentato", "esperito", "espettorato", "espiantato", "espiato", "espirato", "espletato", "esplicato", "esplicitato", "esplorato", "esploso", "esportato", "esposto", "espresso", "espropriato", "espugnato", "espulso", "espunto", "espurgato", "essiccato", "essuto", "estasiato", "estenuato", "esterificato", "esteriorizzato", "esterminato", "esternalizzato", "esternato", "esteso", "estimato", "estinto", "estirpato", "estivato", "estorto", "estradato", "estraniato", "estrapolato", "estratto", "estremizzato", "estrinsecato", "estromesso", "estruso", "estubato", "esulcerato", "esultato", "esumato", "eterificato", "eterizzato", "eternato", "eternizzato", "etichettato", "etossilato", "euforizzato", "europeizzato", "evacuato", "evangelizzato", "evaso", "eveto", "evidenziato", "evinto", "evirato", "eviscerato", "evitato", "evocato", "evolto", "evoluto", "evulso", "fabbricato", "faccettato", "facilitato", "fagocitato", "falciato", "falcidiato", "fallito", "falsato", "falsificato", "familiarizzato", "fanatizzato", "fantasticato", "farcito", "farfugliato", "fasciato", "fascicolato", "fascistizzato", "fattacelo", "fatto", "fattorizzato", "fatturato", "favellato", "favoreggiato", "favorito", "faxato", "fecondato", "fedecommesso", "federalizzato", "federato", "felicitato", "felpato", "feltrato", "femminilizzato", "fenduto", "ferito", "fermato", "fermentato", "ferrato", "fertilizzato", "fesso", "fessurato", "festeggiato", "festonato", "feudalizzato", "fiaccato", "fiammeggiato", "fiancheggiato", "ficcato", "fidanzato", "fidato", "fidecommesso", "fidelizzato", "figliato", "figurato", "filato", "filettato", "filmato", "filosofato", "filtrato", "finalizzato", "finanziato", "finitalo", "finito", "finlandizzato", "fintato", "finto", "fiocinato", "fiondato", "fiorettato", "firmato", "fiscalizzato", "fischiato", "fischiettato", "fissato", "fissionato", "fitto", "fiutato", "flagellato", "flaggato", "flambato", "flangiato", "flemmatizzato", "flesso", "flippato", "flottato", "fluidificato", "fluidizzato", "fluorizzato", "fluorurato", "focalizzato", "focheggiato", "foderato", "foggiato", "fognato", "folgorato", "follato", "fomentato", "fonato", "fondato", "foracchiato", "foraggiato", "forato", "forestato", "forfettizzato", "forgiato", "formalizzato", "formato", "formattato", "formilato", "formulato", "fornito", "fortificato", "forviato", "forwardato", "forzato", "fosfatato", "fosforato", "fosforilato", "fossilizzato", "fotocomposto", "fotocopiato", "fotografato", "fottuto", "fracassato", "frainteso", "framesso", "frammentato", "frammesso", "frammezzato", "frammischiato", "franceseggiato", "francesizzato", "frangiato", "franto", "frantumato", "frappato", "frapposto", "fraseggiato", "frastagliato", "frastornato", "fratturato", "frazionato", "freddato", "fregato", "fregiato", "frenato", "frequentato", "fresato", "frettato", "friendzonato", "fritto", "frizionato", "frodato", "frollato", "fronteggiato", "frugato", "fruito", "frullato", "frusciato", "frustato", "frustrato", "fruttato", "fucilato", "fucinato", "fugato", "fuggito", "fulminato", "fumato", "fumigato", "funestato", "funto", "funzionato", "fuoriuscito", "fuorviato", "fuso", "fustellato", "fustigato", "gabbato", "gabellato", "gallato", "gallicizzato", "gallonato", "galvanizzato", "gambizzato", "garantito", "garnettato", "garrotato", "garzato", "gasato", "gassato", "gassificato", "gazato", "gelatinizzato", "gelato", "gelificato", "gemellato", "gemicato", "geminato", "generalizzato", "generato", "gentrificato", "genuflesso", "geometrizzato", "georeferenziato", "gerarchizzato", "germanizzato", "gestito", "gettato", "gettonato", "ghermito", "ghettizzato", "ghigliottinato", "ghindato", "gibollato", "gingillato", "ginnato", "giocato", "gioito", "gionglato", "giovaneggiato", "girandolato", "girato", "giudicato", "giulebbato", "giuntato", "giunto", "giuracchiato", "giurato", "giustapposto", "giustificato", "giustiziato", "glamourizzato", "glassato", "glissato", "globalizzato", "gloriato", "glorificato", "glossato", "godronato", "goduto", "goffrato", "gommato", "gonfiato", "googlato", "gottato", "governato", "gradinato", "gradito", "gradualizzato", "graduato", "graffato", "graffiato", "graffito", "graficato", "grafitato", "gramolato", "granagliato", "grandinato", "granellato", "granito", "granulato", "graticciato", "graticolato", "gratificato", "gratinato", "grattato", "grattugiato", "gravato", "graziato", "grecheggiato", "grecizzato", "gremito", "gridato", "griffato", "grigliato", "grippato", "groccato", "grondato", "grugato", "grugnito", "guadagnato", "gualcito", "guardato", "guarito", "guarnito", "guastato", "guatato", "guerreggiato", "gufato", "guidato", "gustato", "hackerato", "handicappato", "ibridato", "idealizzato", "ideato", "identificato", "ideologizzato", "idolatrato", "idoleggiato", "idratato", "idrogenato", "idrolizzato", "iettato", "igienizzato", "ignifugato", "ignorato", "illanguidito", "illeggiadrito", "illividito", "illuminato", "illuso", "illustrato", "imbacuccato", "imbaldanzito", "imballato", "imbalsamato", "imbambolato", "imbandierato", "imbandito", "imbarbarito", "imbarcato", "imbarilato", "imbastardito", "imbastito", "imbattuto", "imbavagliato", "imbeccato", "imbellettato", "imbellito", "imbestialito", "imbestiato", "imbevuto", "imbiaccato", "imbiancato", "imbianchito", "imbibito", "imbiettato", "imbiondito", "imbizzarrito", "imboccato", "imbonito", "imborghesito", "imboscato", "imboschito", "imbottato", "imbottigliato", "imbottito", "imbozzimato", "imbracato", "imbracciato", "imbragato", "imbrancato", "imbrattato", "imbrecciato", "imbrigliato", "imbrillantinato", "imbroccato", "imbrodato", "imbrogliato", "imbronciato", "imbruttito", "imbucato", "imbudellato", "imbullettato", "imbullonato", "imburrato", "imbussolato", "imbustato", "imbutito", "imitato", "immagazzinato", "immaginato", "immalinconito", "immatricolato", "immedesimato", "immerso", "immesso", "immischiato", "immiserito", "immobilizzato", "immolato", "immortalato", "immunizzato", "immusonito", "impaccato", "impacchettato", "impacciato", "impadronito", "impaginato", "impagliato", "impalato", "impalcato", "impallato", "impallinato", "impalmato", "impaludato", "impanato", "impaniato", "impannato", "impantanato", "impaperato", "impapocchiato", "impappinato", "imparentato", "imparruccato", "impartito", "impastato", "impasticcato", "impasticciato", "impastocchiato", "impastoiato", "impataccato", "impattato", "impaurito", "impavesato", "impeciato", "impedicato", "impedito", "impegnato", "impegolato", "impelagato", "impellicciato", "impennacchiato", "impennato", "impensierito", "impepato", "imperlato", "impermalito", "impermeabilizzato", "imperniato", "impersonato", "impersonificato", "impestato", "impetrato", "impiallacciato", "impiantato", "impiastrato", "impiastricciato", "impiccato", "impicciato", "impicciolito", "impiccolito", "impidocchiato", "impiegato", "impietosito", "impietrito", "impigliato", "impigrito", "impilato", "impillaccherato", "impinguato", "impinto", "impinzato", "impiombato", "impipato", "impiumato", "implementato", "implicato", "implorato", "impollinato", "impolpato", "impoltronito", "impolverato", "impomatato", "imporcato", "imporporato", "importato", "importunato", "impossessato", "impossibilitato", "impostato", "imposto", "impratichito", "impregnato", "impreso", "impressionato", "impresso", "imprestato", "impreziosito", "imprigionato", "impromesso", "improntato", "improsciuttito", "impugnato", "impuntito", "impunturato", "impupato", "imputato", "impuzzolentito", "inabilitato", "inabissato", "inacerbito", "inacetito", "inacidito", "inacutito", "inaffiato", "inalato", "inalberato", "inalveato", "inalzato", "inamidato", "inanellato", "inarcato", "inargentato", "inaridito", "inasprito", "inastato", "inattivato", "inaugurato", "incacchiato", "incalcinato", "incalorito", "incalzato", "incamerato", "incamiciato", "incamminato", "incanaglito", "incanalato", "incannato", "incannucciato", "incaponito", "incappottato", "incappucciato", "incaprettato", "incapricciato", "incapsulato", "incarcerato", "incardinato", "incaricato", "incarnato", "incarrozzato", "incartato", "incartocciato", "incartonato", "incasellato", "incasinato", "incassato", "incastellato", "incastonato", "incastrato", "incatenato", "incatramato", "incattivito", "incavato", "incavigliato", "incavolato", "incazzato", "incellofanato", "incendiato", "incenerito", "incensato", "incentivato", "incentrato", "inceppato", "incerato", "incernierato", "incerottato", "inceso", "incettato", "inchiappettato", "inchiavardato", "inchiesto", "inchinato", "inchiodato", "inchiostrato", "incipriato", "inciso", "incistato", "incitato", "inciuccato", "incivilito", "inclinato", "incluso", "incoccato", "incocciato", "incoiato", "incollato", "incolonnato", "incolpato", "incominciato", "incomodato", "incontrato", "incoraggiato", "incordato", "incornato", "incorniciato", "incoronato", "incorporato", "incotto", "incravattato", "incrementato", "increspato", "incretinito", "incriminato", "incrinato", "incrociato", "incrostato", "incrudelito", "incrudito", "incruscato", "incubato", "inculato", "inculcato", "incuneato", "incuoiato", "incuorato", "incupito", "incuriosito", "incurvato", "incusso", "indagato", "indebitato", "indebolito", "indemaniato", "indennizzato", "indetto", "indicato", "indicizzato", "indignato", "indiretto", "indirizzato", "indispettito", "indisposto", "individualizzato", "individuato", "indolenzito", "indorato", "indossato", "indotto", "indottomo", "indottrinato", "indovinato", "indugiato", "indulto", "indurato", "indurito", "industrializzato", "industriato", "inebetito", "inebriato", "inerito", "inerpicato", "infagottato", "infamato", "infangato", "infarcito", "infarinato", "infastidito", "infatuato", "infeltrito", "inferito", "inferocito", "inferto", "infervorato", "infestato", "infettato", "infeudato", "infiacchito", "infialato", "infialettato", "infiammato", "infiascato", "infibulato", "inficiato", "infilato", "infiltrato", "infilzato", "infingardito", "infinocchiato", "infinto", "infioccato", "infiocchettato", "infiochito", "infiorato", "infirmato", "infischiato", "infisso", "infittito", "inflazionato", "inflesso", "inflitto", "influenzato", "infocato", "infoderato", "infognato", "infoibato", "infoltito", "inforcato", "informatizzato", "informato", "informicolato", "informicolito", "infornaciato", "infornato", "infortunato", "infoscato", "infossato", "infradiciato", "inframesso", "inframezzato", "inframmesso", "inframmezzato", "infrancesato", "infrapposto", "infrascato", "infrattato", "infreddato", "infronzolato", "infuocato", "infurbito", "infuriato", "ingabbiato", "ingaggiato", "ingagliardito", "ingannato", "ingarbugliato", "ingavonato", "ingegnato", "ingegnerizzato", "ingelosito", "ingemmato", "ingenerato", "ingentilito", "ingerito", "ingessato", "inghiaiato", "inghiottito", "inghirlandato", "ingiallito", "ingigantito", "inginocchiato", "ingioiellato", "ingiunto", "ingiuriato", "inglesizzato", "inglobato", "ingoffito", "ingoiato", "ingolfato", "ingollato", "ingolosito", "ingombrato", "ingommato", "ingorgato", "ingozzato", "ingranato", "ingrandito", "ingrassato", "ingraticciato", "ingraticolato", "ingravidato", "ingraziato", "ingraziosito", "ingrigito", "ingrommato", "ingrossato", "ingrullito", "inguaiato", "inguainato", "ingualdrappato", "inguantato", "ingurgitato", "inibito", "iniettato", "inimicato", "inizializzato", "iniziato", "inmillato", "innacquato", "innaffiato", "innalzato", "innamorato", "innastato", "innervato", "innervosito", "innescato", "innestato", "innevato", "innocentato", "innocuizzato", "innovato", "inoculato", "inoltrato", "inondato", "inorgoglito", "inorpellato", "inorridito", "inquadrato", "inquietato", "inquisito", "insabbiato", "insacchettato", "insalato", "insaldato", "insalivato", "insanguinato", "insaponato", "insaporito", "inscatolato", "inscenato", "inscritto", "insecchito", "insediato", "insegnato", "inseguito", "insellato", "inselvatichito", "inserito", "insidiato", "insignito", "insilato", "insinuato", "insolentito", "insonnolito", "insonorizzato", "insordito", "insospettito", "insozzato", "inspessito", "inspirato", "installato", "instaurato", "insterilito", "instillato", "instituito", "instradato", "insudiciato", "insufflato", "insultato", "insuperbito", "intabaccato", "intabarrato", "intaccato", "intagliato", "intarsiato", "intasato", "intascato", "intavolato", "integrato", "intelaiato", "intelato", "intellettualizzato", "intenebrato", "intenerito", "intensificato", "intentato", "intepidito", "intercalato", "intercambiato", "intercettato", "interciso", "intercluso", "intercollegato", "interconnesso", "interconvertito", "interdetto", "interessato", "interfacciato", "interfogliato", "interfoliato", "interiorizzato", "interlacciato", "interlineato", "intermesso", "intermezzato", "internalizzato", "internato", "internazionalizzato", "interpellato", "interpenetrato", "interpolato", "interposto", "interpretato", "interpunto", "interrato", "interrogato", "interrotto", "intersecato", "intervallato", "intervistato", "inteso", "intessuto", "intestardito", "intestato", "intiepidito", "intimato", "intimidito", "intimorito", "intinto", "intirizzito", "intitolato", "intonacato", "intonato", "intontito", "intorbidato", "intorbidito", "intorpidito", "intortato", "intossicato", "intralciato", "intramesso", "intramezzato", "intrappolato", "intrapreso", "intrattenuto", "intraveduto", "intravisto", "intravveduto", "intravvisto", "intrecciato", "intricato", "intrigato", "intrinsecato", "intrippato", "intriso", "introdotto", "introflesso", "introiettato", "introitato", "intromesso", "intronato", "intronizzato", "intruduto", "intrufolato", "intrugliato", "intruppato", "intruso", "intubato", "intubettato", "intuito", "inumato", "inumidito", "inurbato", "inutilizzato", "invaghito", "invaginato", "invalidato", "invasato", "invaso", "invelenito", "inventariato", "inventato", "invenuto", "inverdito", "invergato", "inverniciato", "investigato", "investito", "invetriato", "inviato", "invidiato", "invigorito", "inviluppato", "invischiato", "invitato", "invocato", "invogliato", "involato", "involgarito", "involtato", "involto", "inzaccherato", "inzeppato", "inzigato", "inzolfato", "inzuccato", "inzuccherato", "inzuppato", "iodurato", "ionizzato", "ipertrofizzato", "ipnotizzato", "ipostatizzato", "ipotecato", "ipotizzato", "iridato", "irradiato", "irraggiato", "irreggimentato", "irretito", "irrigato", "irrigidito", "irriso", "irritato", "irrobustito", "irrogato", "irrorato", "irrugginito", "irruvidito", "ischeletrito", "iscritto", "islamizzato", "isolato", "isomerizzato", "ispanizzato", "ispessito", "ispezionato", "ispirato", "issato", "istallato", "istanziato", "istaurato", "isterilito", "istigato", "istillato", "istituito", "istituzionalizzato", "istoriato", "istradato", "istruito", "istupidito", "italianeggiato", "italianizzato", "iterato", "iudicato", "killerato", "labbreggiato", "labializzato", "laccato", "lacerato", "laconizzato", "lacrimato", "ladroneggiato", "lagnato", "lagrimato", "laicizzato", "lambiccato", "lambito", "lamentato", "laminato", "lanciato", "lapidato", "lappato", "lardato", "lardellato", "largito", "larvato", "lascato", "lasciato", "lastricato", "latinizzato", "laudato", "laureato", "lavato", "lavorato", "leccato", "legalizzato", "legato", "leggicchiato", "leggiucchiato", "legittimato", "legittimizzato", "legnato", "lemmatizzato", "lenito", "lesinato", "lesionato", "leso", "lessato", "letto", "levato", "levigato", "liberalizzato", "liberato", "licenziato", "lievitato", "liftato", "lignificato", "limato", "limitato", "linciato", "linearizzato", "lineato", "linkato", "liofilizzato", "liquefatto", "liquidato", "lisato", "lisciato", "lisciviato", "listato", "litografato", "livellato", "lizzato", "lobotomizzato", "localizzato", "locato", "lodato", "logorato", "lordato", "lottato", "lottizzato", "lubrificato", "lucchettato", "lucidato", "lucrato", "lumeggiato", "luppolizzato", "lusingato", "lussato", "lustrato", "macadamizzato", "macchiato", "macchinato", "macellato", "macerato", "maciullato", "maggesato", "maggiorato", "magnato", "magnetizzato", "magnificato", "maiolicato", "maledetto", "malfatto", "malignato", "malmenato", "malmesso", "maltato", "maltrattato", "malveduto", "malversato", "malvisto", "malvoluto", "mandato", "mandrinato", "manducato", "maneggiato", "manganato", "manganellato", "mangiato", "mangiucchiato", "manifatturato", "manifestato", "manimesso", "manipolato", "manlevato", "manomesso", "manoscritto", "manovrato", "mansuefatto", "mantecato", "mantenutaso", "mantenuto", "manualizzato", "manutenuto", "mappato", "marcato", "marchiato", "marcito", "marezzato", "marginalizzato", "marginato", "margottato", "marimesso", "marinato", "maritato", "marmorizzato", "marnato", "marocchinato", "martellato", "martellinato", "martirizzato", "martoriato", "mascherato", "maschiato", "maschiettato", "mascolinizzato", "massacrato", "massaggiato", "massellato", "massicciato", "massificato", "massimato", "massimizzato", "mastectomizzato", "masterizzato", "masticato", "masturbato", "matematizzato", "materializzato", "matricolato", "mattonato", "maturato", "mazziato", "mazzolato", "meccanizzato", "medagliato", "mediato", "medicalizzato", "medicato", "meditato", "membrato", "memorizzato", "menato", "mendicato", "menomato", "mentovato", "menzionato", "meravigliato", "mercanteggiato", "mercerizzato", "mercificato", "meriato", "meridionalizzato", "meritato", "merlato", "merlettato", "merso", "mesciato", "mesciuto", "mescolato", "mescuto", "mesmerizzato", "messaggiato", "messo", "messoco", "mestato", "mesticato", "mestruato", "metabolizzato", "metaforeggiato", "metaforizzato", "metallizzato", "metamorfizzato", "metamorfosato", "metanizzato", "metilato", "metodizzato", "microfilmato", "microfonato", "microminiaturizzato", "micronizzato", "mietuto", "migliorato", "militarizzato", "millantato", "millimetrato", "mimato", "mimeografato", "mimetizzato", "minacciato", "minato", "minchionato", "mineralizzato", "miniato", "miniaturizzato", "minimizzato", "minuito", "minuzzato", "miracolato", "miscelato", "mischiato", "misconosciuto", "missato", "mistificato", "misturato", "misurato", "miticizzato", "mitigato", "mitizzato", "mitragliato", "mitrato", "mixato", "mobiliato", "mobilitato", "mobilizzato", "modanato", "modellato", "modellizzato", "moderato", "modernizzato", "modificato", "modulato", "molato", "molestato", "mollato", "molleggiato", "moltiplicato", "monacato", "mondato", "mondializzato", "monetarizzato", "monetato", "monetizzato", "monitorato", "monitorizzato", "monocromatizzato", "monopolizzato", "monottongato", "montato", "monumentalizzato", "mordenzato", "mordicchiato", "mormorato", "morphato", "morsicato", "morsicchiato", "morso", "mortasato", "mortificato", "mosso", "mostrato", "motivato", "motorizzato", "motteggiato", "movimentato", "mozzato", "mugolato", "mulcito", "multato", "multiplexato", "mummificato", "municipalizzato", "munito", "munto", "murato", "musato", "musicato", "mussato", "mutato", "mutilato", "mutizzato", "mutuato", "nappato", "narcotizzato", "narrativizzato", "narrato", "nasalizzato", "nascoso", "nascosto", "nastrato", "naturaleggiato", "naturalizzato", "nauseato", "naverato", "navicato", "navigato", "nazificato", "nazionalizzato", "nebulizzato", "necessitato", "necrosato", "necrotizzato", "negativizzato", "negato", "negletto", "negoziato", "negreggiato", "neologizzato", "nerbato", "nericato", "nettato", "neutralizzato", "nevato", "nevicato", "nevischiato", "nevrotizzato", "nichelato", "niellato", "ninfeggiato", "ninnato", "ninnolato", "nitratato", "nitrificato", "nobilitato", "noiato", "noleggiato", "nomato", "nominalizzato", "nominato", "normalizzato", "normato", "notato", "notificato", "notiziato", "notricato", "noverato", "nuclearizzato", "nudricato", "nullificato", "numerato", "numerizzato", "nuotato", "nutrito", "obbiettato", "obbliato", "obbligato", "oberato", "obiettato", "obiettivato", "obiettivizzato", "obiurgato", "obliato", "obliterato", "obnubilato", "occasionato", "occhieggiato", "occidentalizzato", "occiso", "occluso", "occultato", "occupato", "ocheggiato", "odiato", "odorato", "odorizzato", "offerito", "offerto", "offeso", "officiato", "offiziato", "offuscato", "ofiziato", "oggettivato", "oggettivizzato", "oggettualizzato", "oliato", "olito", "olografato", "oltraggiato", "oltrapassato", "oltrepassato", "omaggiato", "ombrato", "ombreggiato", "omesso", "omogeneizzato", "omogenizzato", "omologato", "ondato", "ondulato", "onestato", "onnubilato", "onorato", "opacato", "opacizzato", "operato", "opinato", "oppiato", "oppignorato", "oppilato", "opposto", "oppresso", "oppugnato", "oprato", "opsonizzato", "optato", "opzionato", "orbitato", "orchestrato", "ordinato", "ordito", "orecchiato", "organato", "organicato", "organizzato", "orgasmato", "orientalizzato", "orientato", "originato", "origliato", "orizzontato", "orlato", "orlettato", "ormato", "ormeggiato", "ornato", "orpellato", "orrato", "orripilato", "ortogonalizzato", "osannato", "osato", "osculato", "oscurato", "ospedalizzato", "ospitato", "osseduto", "ossequiato", "osservato", "ossessionato", "ossidato", "ossificato", "ossitonizzato", "ostacolato", "osteggiato", "ostentato", "ostinato", "ostracizzato", "ostruito", "ottemperato", "ottenebrato", "ottenuto", "ottimalizzato", "ottimato", "ottimizzato", "ottonato", "ottriato", "ottuplicato", "otturato", "ottuso", "ottusso", "ovalizzato", "ovariectomizzato", "ovattato", "overcloccato", "ovrato", "ovviato", "ozieggiato", "ozonizzato", "pacato", "pacciamato", "pacificato", "padroneggiato", "paganizzato", "pagato", "paginato", "palafittato", "palatalizzato", "palato", "palesato", "palettato", "palettizzato", "palificato", "palleggiato", "pallettizzato", "palpato", "palpeggiato", "panato", "panneggiato", "panoramicato", "pappato", "paracadutato", "parafato", "paraffinato", "parafrasato", "paragonato", "paragrafato", "paralizzato", "parallelizzato", "parametrato", "parametrizzato", "parassitato", "parato", "parcato", "parcellizzato", "parcheggiato", "pareggiato", "parificato", "parkerizzato", "parlato", "parlucchiato", "parodiato", "partecipato", "particolareggiato", "particolarizzato", "partizionato", "partorito", "parzializzato", "pasciuto", "pascolato", "passato", "passeggiato", "passionato", "passivato", "pasticciato", "pastorizzato", "pasturato", "patinato", "patito", "patrocinato", "patteggiato", "pattugliato", "pattuito", "paventato", "pavesato", "pavimentato", "pavoneggiato", "pazziato", "pedinato", "pedonalizzato", "peggiorato", "pelato", "pellettizzato", "penalizzato", "penetrato", "pennellato", "pensato", "pensionato", "pentito", "pepato", "peptonizzato", "peragrato", "percentualizzato", "percepito", "percolato", "percorso", "percosso", "perdonato", "perdotto", "perduto", "perequato", "perfatto", "perfezionato", "perforato", "performato", "perito", "periziato", "perlustrato", "permeato", "permesso", "perorato", "perpetrato", "perpetuato", "perplimuto", "perquisito", "perscrutato", "perseguitato", "perseguito", "perso", "personalizzato", "personificato", "persuaso", "perturbato", "pervaso", "pervertito", "pesato", "pescato", "pestato", "petrarcheggiato", "pettegolato", "pettinato", "piagato", "piaggiato", "piallato", "pianeggiato", "pianificato", "piantato", "piantatalo", "piantato", "pianto", "piantonato", "piantumato", "piastrellato", "piatito", "piazzato", "picchettato", "picchiato", "picchierellato", "picchiettato", "picconato", "piegato", "pieghettato", "pietrificato", "pigiato", "pigliato", "pigmentato", "pignorato", "pigolato", "pilotato", "pimentato", "pinto", "pinzato", "piombato", "piovigginato", "piovuto", "pipato", "pippato", "piratato", "pirogenato", "pisciato", "pitoccato", "pittato", "pitturato", "pizzicato", "pizzicottato", "placato", "placcato", "plagiato", "plasmato", "plasticato", "plastificato", "platinato", "plissettato", "pluralizzato", "poetato", "poeticizzato", "poggiato", "polarizzato", "poligrafato", "polimerizzato", "politicizzato", "polverizzato", "pomiciato", "pompato", "ponderato", "ponzato", "popolarizzato", "popolato", "poppato", "porcellanato", "porfirizzato", "portato", "porteso", "porto", "porzionato", "posato", "posdatato", "positivizzato", "posizionato", "posposto", "posseduto", "postato", "postdatato", "posteggiato", "posticipato", "postillato", "posto", "postsincronizzato", "postulato", "potabilizzato", "potato", "potenziato", "potuto", "pralinato", "praticato", "preaccennato", "preannunciato", "preannunziato", "preavvertito", "preavvisato", "precaricato", "preceduto", "precettato", "precinto", "precisato", "precluso", "precompilato", "precompresso", "preconfezionato", "preconizzato", "preconosciuto", "precorso", "precostituito", "predato", "predefinito", "predestinato", "predeterminato", "predetto", "predicato", "predigerito", "prediletto", "predisposto", "preeletto", "preesistuto", "prefabbricato", "prefato", "prefatto", "prefazionato", "preferito", "prefigurato", "prefinanziato", "prefissato", "prefisso", "preformato", "pregato", "pregiato", "pregiudicato", "pregustato", "preimpregnato", "prelevato", "premeditato", "premescolato", "premesso", "premiato", "premonito", "premunito", "premurato", "premuto", "prenotato", "preoccupato", "preordinato", "preparato", "prepensionato", "prepigmentato", "preposto", "preprogrammato", "preraffreddato", "prerefrigerato", "preregistrato", "preregolato", "preriscaldato", "preso", "presagito", "presaputo", "presaselo", "prescelto", "prescritto", "preseduto", "presegnalato", "preselezionato", "presentato", "presentito", "preservato", "presidiato", "presieduto", "preso", "pressato", "presso", "pressurizzato", "prestabilito", "prestampato", "prestato", "prestigiato", "presunto", "presupposto", "pretermesso", "preteso", "pretrattato", "prevaricato", "preveduto", "prevenduto", "preventivato", "prevenuto", "previsto", "prezzato", "prezzolato", "principiato", "privatizzato", "privato", "privilegiato", "problematizzato", "procacciato", "processato", "proclamato", "procrastinato", "procreato", "procurato", "prodigato", "prodotto", "profanato", "proferito", "professato", "professionalizzato", "profetato", "profetizzato", "profferito", "profilato", "profondato", "profumato", "profuso", "progettato", "prognosticato", "programmato", "proibito", "proiettato", "proletarizzato", "prolungato", "promanato", "promesso", "promosso", "promozionato", "promulgato", "pronosticato", "pronunciato", "pronunziato", "propagandato", "propagato", "propagginato", "propalato", "propinato", "propiziato", "proporzionato", "proposto", "propugnato", "propulso", "prorogato", "prosciolto", "prosciugato", "proscritto", "proseguito", "prospettato", "prosternato", "prosteso", "prostituito", "prostrato", "prosunto", "proteso", "protestato", "protetto", "protocollato", "protonato", "protratto", "protruso", "provato", "proveduto", "provincializzato", "provisto", "provocato", "provveduto", "provvisto", "psicanalizzato", "psichiatrizzato", "psicoanalizzato", "psicologizzato", "pubblicato", "pubblicizzato", "puddellato", "pugnalato", "pulito", "pungolato", "punito", "puntato", "punteggiato", "puntellato", "punto", "puntualizzato", "punzecchiato", "punzonato", "purgato", "purificato", "putito", "putrefatto", "putrito", "quadrato", "quadrettato", "quadriennalizzato", "quadruplicato", "qualificato", "quantificato", "quantizzato", "querelato", "questuato", "quetato", "quietanzato", "quietato", "quintessenziato", "quintuplicato", "quotato", "quotizzato", "rabberciato", "rabboccato", "rabbonito", "rabbuffato", "rabuffato", "raccapezzato", "raccapricciato", "raccattato", "raccerchiato", "racceso", "racchetato", "racchiuso", "raccolto", "raccolto", "raccomandato", "raccomodato", "raccontato", "raccorciato", "raccorcito", "raccordato", "raccostato", "raccozzato", "racemizzato", "racimolato", "radazzato", "raddensato", "raddobbato", "raddolcito", "raddoppiato", "raddotto", "raddrizzato", "radiato", "radicalizzato", "radioassistito", "radioattivato", "radiocomandato", "radiodiffuso", "radiografato", "radioguidato", "radiolocalizzato", "radiomarcato", "radiotelegrafato", "radiotrasmesso", "radunato", "raffazzonato", "raffermato", "raffigurato", "raffilato", "raffinato", "rafforzato", "raffreddato", "raffrenato", "raffrescato", "raffrontato", "raggelato", "raggentilito", "ragghiato", "raggirato", "raggiunto", "raggiustato", "raggomitolato", "raggranchiato", "raggranchito", "raggranellato", "raggrinzato", "raggrinzito", "raggrumato", "raggruppato", "raggruzzolato", "ragguagliato", "ralingato", "rallegrato", "rallentato", "ramato", "ramazzato", "rammagliato", "rammaricato", "rammemorato", "rammendato", "rammentato", "rammodernato", "rammollito", "rammorbidito", "rampognato", "randellato", "randomizzato", "rannicchiato", "rannuvolato", "ranzato", "rapato", "rapinato", "rapito", "rappacificato", "rappato", "rappattumato", "rappezzato", "rapportato", "rappresantato", "rappresentato", "rappreso", "rarefatto", "rasato", "raschiato", "raschiettato", "rasentato", "raso", "raspato", "rassegnato", "rasserenato", "rassettato", "rassicurato", "rassodato", "rassomigliato", "rassottigliato", "rassunto", "rastrellato", "rastremato", "rateato", "rateizzato", "ratificato", "ratinato", "rattizzato", "rattoppato", "rattorto", "rattrappito", "rattristato", "rattristito", "raunato", "ravvalorato", "ravveduto", "ravviato", "ravvicinato", "ravviluppato", "ravvisato", "ravvisto", "ravvivato", "ravvolto", "ravvoltolato", "razionalizzato", "razionato", "razziato", "razzolato", "realizzato", "reassunto", "recapitato", "recato", "receduto", "recensito", "recepito", "recidivato", "recintato", "recinto", "reciprocato", "reciso", "recitato", "reclamato", "reclamizzato", "reclinato", "recluso", "reclutato", "recuperato", "redarguito", "redatto", "redazzato", "redduto", "redento", "redistribuito", "redotto", "referenziato", "refertato", "refilato", "reflesso", "reflettuto", "refranto", "refrigerato", "regalato", "regimato", "regimentato", "regionalizzato", "registrato", "regolamentato", "regolarizzato", "regolato", "reidratato", "reificato", "reimbarcato", "reimmerso", "reimmesso", "reimparato", "reimpastato", "reimpiantato", "reimpiegato", "reimportato", "reimpostato", "reincarcerato", "reincaricato", "reincarnato", "reinciso", "reincontrato", "reindirizzato", "reindustrializzato", "reinfettato", "reingaggiato", "reinizializzato", "reinnestato", "reinoltrato", "reinscritto", "reinsediato", "reinserito", "reinstallato", "reinstaurato", "reintegrato", "reinterpretato", "reintitolato", "reintrodotto", "reinventato", "reinvestito", "reiterato", "relativizzato", "relazionato", "relegato", "remixato", "remunerato", "renderizzato", "reperito", "repertato", "replicato", "represso", "repulso", "reputato", "requisito", "rescisso", "resecato", "resettato", "residuato", "resinificato", "reso", "resolato", "resolto", "respinto", "respirato", "responsabilizzato", "resposto", "restaurato", "restituito", "resunto", "resuscitato", "reticolato", "retinato", "retribuito", "retroceduto", "retrocesso", "retrodatato", "rettificato", "retto", "reumatizzato", "revisionato", "revocato", "riabbassato", "riabbellito", "riabbonato", "riabbottonato", "riabbracciato", "riabilitato", "riabitato", "riabituato", "riaccaduto", "riaccasato", "riacceso", "riaccettato", "riacchiappato", "riacciuffato", "riaccolto", "riaccomodato", "riaccompagnato", "riaccordato", "riaccostato", "riaccreditato", "riacquisito", "riacquistato", "riacutizzato", "riadattato", "riaddestrato", "riaddormentato", "riadoperato", "riaffacciato", "riaffermato", "riafferrato", "riaffiorato", "riaffittato", "riaffrontato", "riagganciato", "riaggiornato", "riaggiustato", "riaggravato", "riaggregato", "riagguantato", "rialimentato", "riallacciato", "riallargato", "riallineato", "riallocato", "riallungato", "rialzato", "riamato", "riambientato", "riammalato", "riammesso", "riammodernato", "riammogliato", "rianimato", "riannesso", "riannodato", "riannunciato", "riaperto", "riappacificato", "riappaltato", "riapparecchiato", "riapparito", "riappeso", "riappiccicato", "riapplicato", "riappreso", "riapprodato", "riappropriato", "riapprovato", "riarmato", "riarrangiato", "riarredato", "riascoltato", "riasfaltato", "riassalito", "riassaporato", "riassegnato", "riassemblato", "riassestato", "riassettato", "riassicurato", "riassociato", "riassopito", "riassorbito", "riassunto", "riattaccato", "riattato", "riatteso", "riattinto", "riattivato", "riattizzato", "riattraversato", "riaumentato", "riavuto", "riavventato", "riavvertito", "riavviato", "riavvicinato", "riavvinto", "riavvisato", "riavvistato", "riavvolto", "riazzuffato", "ribaciato", "ribadito", "ribaltato", "ribassato", "ribattezzato", "ribattuto", "ribellato", "ribenedetto", "ribevuto", "ributtato", "ricacciato", "ricalato", "ricalcato", "ricalcificato", "ricalcitrato", "ricalcolato", "ricalibrato", "ricamato", "ricambiato", "ricanalizzato", "ricandidato", "ricantato", "ricapitalizzato", "ricapitolato", "ricaricato", "ricategorizzato", "ricattato", "ricavato", "ricelebrato", "ricercato", "ricetrasmesso", "ricettato", "ricevuto", "richiamato", "richiesto", "richiuso", "riciclato", "ricinto", "ricircolato", "riclassificato", "ricodificato", "ricollegato", "ricollocato", "ricolmato", "ricolonizzato", "ricolorato", "ricolorito", "ricoltivato", "ricombinato", "ricominciato", "ricommesso", "ricomparito", "ricompattato", "ricompensato", "ricomperato", "ricompilato", "ricompiuto", "ricomposto", "ricomprato", "ricompresso", "ricomunicato", "riconceduto", "riconcesso", "riconciliato", "ricondizionato", "ricondotto", "riconfermato", "riconfezionato", "riconfigurato", "riconfortato", "riconfuso", "ricongelato", "ricongiunto", "riconnesso", "riconosciuto", "riconquistato", "riconsacrato", "riconsegnato", "riconsiderato", "riconsigliato", "riconsolato", "ricontato", "ricontattato", "ricontrattato", "ricontratto", "ricontrollato", "riconvalidato", "riconvenuto", "riconvertito", "riconvinto", "riconvocato", "riconvogliato", "ricoperto", "ricopiato", "ricordato", "ricoricato", "ricorretto", "ricosparso", "ricostituito", "ricostretto", "ricostruito", "ricotto", "ricoverato", "ricreato", "ricristallizzato", "ricrocifisso", "ricucito", "ricuperato", "ricusato", "ridato", "ridecorato", "ridefinito", "ridenominato", "ridestato", "rideterminato", "ridetto", "ridicolizzato", "ridigitato", "ridimensionato", "ridipinto", "ridisceso", "ridisciolto", "ridisciplinato", "ridiscusso", "ridisegnato", "ridisfatto", "ridisposto", "ridisteso", "ridistinto", "ridistribuito", "ridiviso", "ridomandato", "ridonato", "ridondato", "ridorato", "ridotato", "ridotto", "ridovuto", "riecheggiato", "riedificato", "rieducato", "rielaborato", "rieletto", "riemesso", "riempito", "riempiuto", "rientrato", "riepilogato", "riequilibrato", "riequipaggiato", "riesaminato", "rieseguito", "riesercitato", "riesploso", "riesportato", "riesposto", "riespresso", "riespulso", "riesteso", "riesumato", "rietichettato", "rievaporato", "rievocato", "rifabbricato", "rifasciato", "rifatto", "rifenduto", "riferito", "rifermato", "rifermentato", "rifesso", "rificcato", "rifilato", "rifiltrato", "rifinanziato", "rifinito", "rifirmato", "rifischiato", "rifisso", "rifiutato", "riflesso", "riflettuto", "rifocillato", "rifoderato", "rifondato", "riforestato", "riforgiato", "riformato", "riformattato", "riformulato", "rifornito", "rifranto", "rifritto", "rifrugato", "rifuggito", "rifugiato", "rifuso", "rigassificato", "rigato", "rigelato", "rigenerato", "rigettato", "righettato", "rigiocato", "rigirato", "rigiudicato", "rigiunto", "rigoduto", "rigonfiato", "rigovernato", "riguadagnato", "riguardato", "rigurgitato", "rilanciato", "rilasciato", "rilassato", "rilavato", "rilavorato", "rilegato", "riletto", "rilevato", "rilocalizzato", "rimagliato", "rimandato", "rimaneggiato", "rimangiato", "rimappato", "rimarcato", "rimarchiato", "rimarginato", "rimaritato", "rimasticato", "rimato", "rimbacuccato", "rimbaldanzito", "rimbarcato", "rimbeccato", "rimbecillito", "rimbellito", "rimbiancato", "rimbiondito", "rimboccato", "rimbombato", "rimborsato", "rimboscato", "rimboschito", "rimbrottato", "rimediato", "rimembrato", "rimemorato", "rimenato", "rimeritato", "rimescolato", "rimesso", "rimestato", "rimilitarizzato", "rimirato", "rimischiato", "rimisurato", "rimodellato", "rimodernato", "rimodulato", "rimondato", "rimontato", "rimorchiato", "rimorso", "rimosso", "rimostrato", "rimotivato", "rimpacchettato", "rimpadronito", "rimpaginato", "rimpagliato", "rimpannucciato", "rimpastato", "rimpatriato", "rimpiallacciato", "rimpianto", "rimpiattato", "rimpiazzato", "rimpicciolito", "rimpiccolito", "rimpiegato", "rimpinguato", "rimpinzato", "rimpolpato", "rimpossessato", "rimpresso", "rimproverato", "rimuginato", "rimunerato", "rimunto", "rimusicato", "rimutato", "rinarrato", "rinascosto", "rincalcato", "rincalzato", "rincamminato", "rincantucciato", "rincarato", "rincarcerato", "rincarnato", "rincentrato", "rinchiesto", "rinchiodato", "rinchiuso", "rincitrullito", "rincivilito", "rincoglionito", "rincollato", "rincominciato", "rincontrato", "rincoraggiato", "rincorato", "rincorporato", "rincorso", "rincretinito", "rincrudito", "rinculcato", "rincuorato", "rindossato", "rindurito", "rinegoziato", "rinfacciato", "rinfagottato", "rinfiammato", "rinfiancato", "rinfilato", "rinfittito", "rinfocolato", "rinfoderato", "rinforzato", "rinfrancato", "rinfranto", "rinfrescato", "rinfuso", "ringagliardito", "ringalluzzito", "ringiovanito", "ringiovenito", "ringoiato", "ringorgato", "ringraziato", "ringuainato", "rinnamorato", "rinnegato", "rinnestato", "rinnovato", "rinnovellato", "rinociuto", "rinomato", "rinominato", "rinormalizzato", "rinquadrato", "rinsaccato", "rinsaldato", "rinsanguato", "rinselvatichito", "rinselvato", "rinserrato", "rintanato", "rintasato", "rintascato", "rintavolato", "rintenerito", "rinterrato", "rinterrogato", "rinteso", "rintiepidito", "rintoccato", "rintonacato", "rintontito", "rintorpidito", "rintracciato", "rintrodotto", "rintronato", "rintuzzato", "rinunciato", "rinunziato", "rinutrito", "rinvangato", "rinvasato", "rinvenuto", "rinverdito", "rinvestito", "rinviato", "rinvigorito", "rinvilito", "rinvitato", "rinvoltato", "rinvolto", "rinvoltolato", "rinzaffato", "rinzeppato", "riobbligato", "rioccupato", "riofferto", "rioffeso", "rioperato", "riordinato", "riorganizzato", "riorientato", "riosservato", "riottenuto", "riottimizzato", "riotturato", "ripagato", "riparametrizzato", "riparato", "ripartito", "ripassato", "ripercorso", "ripercosso", "riperduto", "riperso", "ripesato", "ripescato", "ripestato", "ripetuto", "ripianato", "ripianificato", "ripiantato", "ripianto", "ripicchiato", "ripiegato", "ripigliato", "ripinto", "ripiovuto", "ripitturato", "riplasmato", "ripolarizzato", "ripopolato", "riportato", "riporto", "riposato", "riposizionato", "riposseduto", "riposto", "ripotuto", "ripresentato", "ripreso", "riprestato", "ripreteso", "riprincipiato", "ripristinato", "riprivatizzato", "riprodotto", "riprogettato", "riprogrammato", "ripromesso", "riproposto", "riprotetto", "riprovato", "riprovveduto", "riprovvisto", "ripubblicato", "ripudiato", "ripugnato", "ripulito", "ripuntato", "ripunto", "ripurgato", "riputato", "riquadrato", "riqualificato", "rireso", "rirotto", "risaldato", "risalito", "risaltato", "risalutato", "risanato", "risaputo", "risarcito", "riscalato", "riscaldato", "riscattato", "riscelto", "risceso", "rischiarato", "rischiato", "risciacquato", "risciolto", "riscommesso", "riscontato", "riscontrato", "risconvolto", "riscoperto", "riscoppiato", "riscorso", "riscosso", "riscritto", "risecato", "riseduto", "risegato", "risegnato", "riselciato", "riselezionato", "riseminato", "risentito", "riseppellito", "riserbato", "riservato", "risicato", "risigillato", "risistemato", "riso", "risoffiato", "risoggiunto", "risolato", "risolidificato", "risollevato", "risolto", "risommato", "risommerso", "risonato", "risorpassato", "risospeso", "risospinto", "risottomesso", "risparmiato", "risparso", "rispecchiato", "rispedito", "rispento", "risperso", "rispettato", "rispiegato", "rispinto", "rispolverato", "risposato", "risposto", "rissato", "ristabilito", "ristagnato", "ristampato", "ristaurato", "risteso", "ristilizzato", "ristorato", "ristretto", "ristrutto", "ristrutturato", "ristuccato", "ristudiato", "risucchiato", "risultato", "risuolato", "risuonato", "risuscitato", "risvegliato", "risvolto", "ritagliato", "ritarato", "ritardato", "ritemprato", "ritentato", "ritenuto", "riterso", "riteso", "ritinto", "ritirato", "ritoccato", "ritolto", "ritorto", "ritracciato", "ritradotto", "ritrascorso", "ritrascritto", "ritrasferito", "ritrasformato", "ritrasmesso", "ritrasposto", "ritrattato", "ritratto", "ritrovato", "ritualizzato", "rituffato", "riudito", "riunificato", "riunito", "riusato", "riutilizzato", "rivaccinato", "rivaleggiato", "rivalorizzato", "rivalso", "rivalutato", "rivangato", "riveduto", "rivelato", "rivendicato", "rivenduto", "riverberato", "riverito", "riverniciato", "riversato", "rivestito", "rivettato", "rivinto", "rivisitato", "rivissuto", "rivisto", "rivitalizzato", "rivivificato", "rivoltato", "rivolto", "rivoltolato", "rivoluto", "rivoluzionato", "rizappato", "rizzato", "robotizzato", "rodato", "rogato", "rollato", "romanizzato", "romanticizzato", "romanzato", "roncolato", "rosicato", "rosicchiato", "roso", "rosolato", "rotacizzato", "rotato", "roteato", "rotolato", "rottamato", "rotto", "rovesciato", "rovinato", "rovistato", "rubacchiato", "rubato", "rullato", "ruminato", "ruotato", "russificato", "ruzzolato", "sabbiato", "sabotato", "saccarificato", "saccheggiato", "sacralizzato", "sacramentato", "sacrificato", "saettato", "saggiato", "sagginato", "sagomato", "salamoiato", "salariato", "salassato", "salato", "saldato", "salificato", "salinizzato", "salito", "salmeggiato", "salmistrato", "salpato", "saltato", "salutato", "salvaguardato", "salvato", "sanato", "sancito", "sanforizzato", "sanificato", "sanitizzato", "santificato", "sanzionato", "saponificato", "saputo", "sarchiato", "sarchiellato", "sartiato", "satellizzato", "satinato", "satireggiato", "satisfatto", "satollato", "saturato", "saziato", "sbaccellato", "sbaciucchiato", "sbafato", "sbaffato", "sbalestrato", "sballato", "sballottato", "sballottolato", "sbalordito", "sbalzato", "sbancato", "sbandato", "sbandierato", "sbandito", "sbaraccato", "sbaragliato", "sbarazzato", "sbarbato", "sbarcato", "sbardato", "sbarrato", "sbassato", "sbastito", "sbatacchiato", "sbattezzato", "sbattuto", "sbeccato", "sbeffeggiato", "sbellicato", "sbendato", "sbertucciato", "sbiadito", "sbiancato", "sbianchito", "sbiellato", "sbiettato", "sbigottito", "sbilanciato", "sbirbato", "sbirciato", "sbizzarrito", "sbloccato", "sbobinato", "sboccato", "sbocconcellato", "sbollentato", "sbolognato", "sborniato", "sborsato", "sboscato", "sbottonato", "sbozzato", "sbozzimato", "sbozzolato", "sbracato", "sbracciato", "sbraciato", "sbraitato", "sbranato", "sbrancato", "sbrattato", "sbreccato", "sbriciolato", "sbrigato", "sbrigliato", "sbrinato", "sbrindellato", "sbrodolato", "sbrogliato", "sbronzato", "sbruffato", "sbucciato", "sbudellato", "sbuffato", "sbugiardato", "sbullettato", "sbullonato", "sburrato", "scacazzato", "scacchiato", "scacciato", "scaccolato", "scadenzato", "scafato", "scaffalato", "scagionato", "scagliato", "scaglionato", "scalato", "scalcato", "scalcinato", "scaldato", "scalettato", "scalfato", "scalfito", "scalmanato", "scaloppato", "scalpato", "scalpellato", "scalpellinato", "scaltrito", "scalzato", "scambiato", "scamiciato", "scamosciato", "scamozzato", "scampato", "scampatalo", "scampato", "scamuffato", "scanalato", "scancellato", "scandagliato", "scandalizzato", "scandito", "scannato", "scannellato", "scannerato", "scannerizato", "scannerizzato", "scansato", "scansionato", "scapecchiato", "scapezzato", "scapicollato", "scapigliato", "scapitozzato", "scapocchiato", "scappato", "scappellato", "scappottato", "scapricciato", "scapsulato", "scarabocchiato", "scaracchiato", "scaraventato", "scarcerato", "scardassato", "scardato", "scardinato", "scaricato", "scarificato", "scarmigliato", "scarnato", "scarnificato", "scarnito", "scarrellato", "scarrocciato", "scarrozzato", "scarruffato", "scartabellato", "scartato", "scartavetrato", "scartinato", "scartocciato", "scassato", "scassinato", "scatenato", "scattato", "scavalcato", "scavallato", "scavato", "scavezzato", "scazzottato", "scekerato", "scelto", "scempiato", "sceneggiato", "scernuto", "scervellato", "sceso", "sceverato", "schedato", "schedulato", "scheggiato", "scheletrito", "schematizzato", "schermato", "schermito", "schermografato", "schernito", "schiacciato", "schiaffato", "schiaffeggiato", "schiantato", "schiarito", "schiavardato", "schiavizzato", "schiccherato", "schierato", "schifato", "schinciato", "schioccato", "schiodato", "schiumato", "schiuso", "schivato", "schizzato", "schizzettato", "sciabolato", "sciabordato", "sciacquato", "scialacquato", "sciamanizzato", "sciamannato", "sciancato", "sciancrato", "scimmieggiato", "scimmiottato", "scinto", "scioccato", "sciolinato", "sciolto", "sciorinato", "scippato", "sciroppato", "scisso", "sciupacchiato", "sciupato", "sclamato", "sclerosato", "sclerotizzato", "scoccato", "scocciato", "scodato", "scodellato", "scoiato", "scolarizzato", "scolato", "scollacciato", "scollato", "scollegato", "scolorato", "scolorito", "scolpato", "scolpito", "scombaciato", "scombinato", "scombussolato", "scommesso", "scomodato", "scompaginato", "scompagnato", "scompartito", "scompattato", "scompensato", "scompiacuto", "scompigliato", "scomposto", "scomputato", "scomunicato", "sconcertato", "sconciato", "sconcluso", "sconfessato", "sconficcato", "sconﬁtto", "sconfortato", "sconfuso", "scongelato", "scongiurato", "sconnesso", "sconosciuto", "sconquassato", "sconsacrato", "sconsigliato", "sconsolato", "scontato", "scontentato", "scontornato", "scontorto", "scontrato", "sconvolto", "scopato", "scoperchiato", "scoperto", "scopiazzato", "scoraggiato", "scoraggito", "scorato", "scorazzato", "scorciato", "scorcito", "scordato", "scoreggiato", "scorificato", "scornato", "scorniciato", "scoronato", "scorporato", "scorrazzato", "scorreggiato", "scorretto", "scorso", "scortato", "scortecciato", "scorticato", "scorto", "scorzato", "scosceso", "scosciato", "scosso", "scostato", "scostolato", "scotennato", "scoticato", "scotolato", "scotomizzato", "scottato", "scotto", "scovato", "scoverto", "scozzato", "scozzonato", "screditato", "scremato", "screpolato", "screziato", "scribacchiato", "scriminato", "scristianizzato", "scritto", "scritturato", "scroccato", "scrocchiato", "scrollato", "scrostato", "scrutato", "scrutinato", "scucito", "scudisciato", "scuffiato", "sculacciato", "sculettato", "scuoiato", "scuriosato", "scurito", "scusato", "sdaziato", "sdebitato", "sdegnato", "sdemanializzato", "sdentato", "sdilinquito", "sdoganato", "sdoluto", "sdoppiato", "sdraiato", "sdrammatizzato", "sdrucito", "secato", "seccato", "secernuto", "secolarizzato", "secondato", "secretato", "secreto", "sedato", "sedentarizzato", "sedotto", "segato", "seghettato", "segmentato", "segnalato", "segnato", "segnoreggiato", "segregato", "segretato", "seguitato", "seguito", "selciato", "selezionato", "sellato", "sembrato", "sementato", "semicinto", "seminato", "semplificato", "senilizzato", "sensibilizzato", "sensorizzato", "sentenziato", "sentito", "sentitaselo", "sentito", "sentito", "separato", "sepolto", "seppellito", "sequenziato", "sequestrato", "serbato", "serrato", "servito", "servoassistito", "sessualizzato", "sestuplicato", "setacciato", "setificato", "settato", "settorializzato", "settuplicato", "seviziato", "sezionato", "sfaccettato", "sfagliato", "sfaldato", "sfalsato", "sfamato", "sfanalato", "sfangato", "sfarinato", "sfasato", "sfasciato", "sfatato", "sfatto", "sfavillato", "sfavorito", "sfegatato", "sfeltrato", "sfenduto", "sferragliato", "sferrato", "sferzato", "sfesso", "sfiancato", "sfiatato", "sfiato", "sfibbiato", "sfibrato", "sfidato", "sfiduciato", "sfigurato", "sfilato", "sfilettato", "sfinito", "sfioccato", "sfiorato", "sfittato", "sfocato", "sfociato", "sfoderato", "sfogato", "sfoggiato", "sfogliato", "sfollato", "sfoltito", "sfondato", "sforacchiato", "sforato", "sforbiciato", "sformato", "sfornaciato", "sfornato", "sfornito", "sforzato", "sfottuto", "sfracellato", "sfrangiato", "sfrascato", "sfratato", "sfrattato", "sfrecciato", "sfregato", "sfregiato", "sfrenato", "sfrisato", "sfrondato", "sfrucugliato", "sfruculiato", "sfruttato", "sfumato", "sfuocato", "sgamato", "sganasciato", "sganciato", "sgarbugliato", "sgattaiolato", "sgelato", "sghiacciato", "sgocciolato", "sgolato", "sgomberato", "sgombrato", "sgomentato", "sgominato", "sgomitato", "sgomitolato", "sgonfiato", "sgorbiato", "sgottato", "sgovernato", "sgozzato", "sgraffiato", "sgraffignato", "sgranato", "sgranchito", "sgranellato", "sgrassato", "sgravato", "sgretolato", "sgridato", "sgrommato", "sgrondato", "sgroppato", "sgrossato", "sgrovigliato", "sgrugnato", "sguainato", "sgualcito", "sguanciato", "sguarnito", "sguinzagliato", "sgusciato", "shakerato", "shoccato", "shuntato", "sigillato", "siglato", "significato", "signoreggiato", "silenziato", "silicizzato", "sillabato", "sillogizzato", "silurato", "simboleggiato", "simbolizzato", "simmetrizzato", "simpatizzato", "simulato", "sincerato", "sincopato", "sincretizzato", "sincronizzato", "sindacalizzato", "sindacato", "singolarizzato", "sinistrato", "sinizzato", "sinterizzato", "sintetizzato", "sintonizzato", "siringato", "sistematizzato", "sistemato", "situato", "slabbrato", "slacciato", "slamato", "slanciato", "slappolato", "slargato", "slavizzato", "slegato", "slentato", "slinguato", "slogato", "sloggato", "sloggiato", "slombato", "slungato", "smaccato", "smacchiato", "smagliato", "smagnetizzato", "smagrito", "smaliziato", "smallato", "smaltato", "smaltito", "smammato", "smanacciato", "smangiato", "smantellato", "smarcato", "smarginato", "smarrito", "smascellato", "smascherato", "smaterializzato", "smattonato", "smembrato", "smentito", "smerciato", "smerdato", "smerigliato", "smerlato", "smerlettato", "smessalo", "smesso", "smezzato", "smidollato", "smielato", "smilitarizzato", "sminato", "sminuito", "sminuzzato", "smistato", "smitizzato", "smobiliato", "smobilitato", "smobilizzato", "smoccolato", "smollicato", "smonacato", "smontato", "smorbato", "smorzato", "smosso", "smozzicato", "smunto", "smurato", "smussato", "smutandato", "snaturato", "snazionalizzato", "snebbiato", "snellito", "snervato", "snidato", "sniffato", "snobbato", "snocciolato", "snodato", "snudato", "sobbarcato", "sobbollito", "sobillato", "socchiuso", "soccorso", "soddisfatto", "sodisfatto", "sodomizzato", "sofferito", "soffermato", "sofferto", "soffiato", "soffocato", "soffregato", "soffritto", "soffuso", "sofisticato", "soggettivato", "soggettivizzato", "sogghignato", "soggiogato", "soggiunto", "sogguardato", "sognato", "solarizzato", "solcato", "soleggiato", "solennizzato", "solfeggiato", "solfitato", "solfonato", "solforato", "solidificato", "solito", "sollazzato", "sollecitato", "solleticato", "sollevato", "solto", "solubilizzato", "soluto", "soluzionato", "solvatato", "somatizzato", "someggiato", "somigliato", "sommato", "sommerso", "sommesso", "somministrato", "sommosso", "sonato", "sondato", "sonorizzato", "sopito", "soppalcato", "soppesato", "soppiantato", "sopportato", "sopposto", "soppresso", "sopraddotato", "sopraeccitato", "sopraedificato", "sopraelevato", "sopraffato", "sopraffatto", "sopraggiunto", "soprainteso", "soprammesso", "soprannominato", "sopraposto", "soprappreso", "soprascritto", "sopraspeso", "soprassaturato", "soprasseduto", "sopravanzato", "sopravvalutato", "sopravveduto", "sopravvinto", "sopravvisto", "sopreccitato", "sopredificato", "soprelevato", "soprinteso", "sorbettato", "sorbito", "sorgiunto", "sormontato", "sorpassato", "sorpreso", "sorraso", "sorretto", "sorseggiato", "sorteggiato", "sortito", "sorvegliato", "sorvolato", "soscritto", "sospeso", "sospettato", "sospinto", "sospirato", "sostantivato", "sostanziato", "sostentato", "sostenuto", "sostituito", "sottaciuto", "sotterrato", "sotteso", "sottinteso", "sottoalimentato", "sottocapitalizzato", "sottodiviso", "sottoesposto", "sottofirmato", "sottolineato", "sottomesso", "sottomurato", "sottopagato", "sottopassato", "sottoposto", "sottorappresentato", "sottoriso", "sottoscritto", "sottostimato", "sottosviluppato", "sottotitolato", "sottovalutato", "sottratto", "soverchiato", "sovesciato", "sovietizzato", "sovracapitalizzato", "sovraccaricato", "sovradimensionato", "sovraeccitato", "sovraesposto", "sovraffaticato", "sovraffollato", "sovraggiunto", "sovraimposto", "sovrainteso", "sovralimentato", "sovramodulato", "sovrappopolato", "sovrapposto", "sovrariscaldato", "sovrasaturato", "sovrascritto", "sovrastampato", "sovrastato", "sovrastimato", "sovrautilizzato", "sovreccitato", "sovresposto", "sovrimposto", "sovrinteso", "sovvenuto", "sovvenzionato", "sovvertito", "spaccato", "spacchettato", "spacciato", "spaginato", "spaiato", "spalancato", "spalato", "spalcato", "spalleggiato", "spalmato", "spammato", "spampanato", "spampinato", "spanato", "spanciato", "spanduto", "spannato", "spannocchiato", "spanso", "spantanato", "spanto", "spaparacchiato", "spaparanzato", "spappolato", "sparato", "sparecchiato", "sparigliato", "sparito", "sparlato", "sparpagliato", "spartito", "spassato", "spassatoselo", "spastoiato", "spaurato", "spaurito", "spaventato", "spazializzato", "spaziato", "spazieggiato", "spazientito", "spazzato", "spazzolato", "specchiato", "specializzato", "specificato", "specillato", "specolato", "spedito", "spegnato", "spelacchiato", "spelato", "spellato", "spennacchiato", "spennato", "spennellato", "spento", "spenzolato", "sperato", "sperimentato", "spernacchiato", "speronato", "sperperato", "spersonalizzato", "sperticato", "spesato", "speso", "spessito", "spettacolarizzato", "spettinato", "spezzato", "spezzettato", "spezziato", "spezzonato", "spiaccicato", "spianato", "spiantato", "spiato", "spiattellato", "spiazzato", "spiccato", "spicciato", "spiccicato", "spicciolato", "spicconato", "spidocchiato", "spiegato", "spiegazzato", "spietrato", "spifferato", "spigionato", "spignorato", "spigolato", "spigrito", "spillato", "spilluzzicato", "spiluccato", "spinto", "spintonato", "spiombato", "spiralizzato", "spirantizzato", "spirato", "spiritualizzato", "spiumato", "spizzicato", "spodestato", "spoetizzato", "spogliato", "spolettato", "spoliato", "spoliticizzato", "spollonato", "spolmonato", "spolpato", "spoltronito", "spolverato", "spolverizzato", "spompato", "spompinato", "sponsorizzato", "spopolato", "spoppato", "sporcato", "sportato", "sporto", "sposato", "sposseduto", "spossessato", "spostato", "sposto", "sprangato", "sprecato", "spregiato", "spremuto", "spretato", "sprezzato", "sprigionato", "sprimacciato", "spromesso", "spronato", "sprotetto", "sprovincializzato", "sprovveduto", "sprovvisto", "spruzzato", "spugnato", "spulato", "spulciato", "spuntato", "spuntellato", "spupazzato", "spurgato", "sputacchiato", "sputato", "sputtanato", "squadernato", "squadrato", "squagliato", "squagliataselo", "squagliato", "squalificato", "squamato", "squarciato", "squartato", "squassato", "squattrinato", "squilibrato", "squinternato", "sradicato", "srotolato", "srugginito", "stabbiato", "stabilito", "stabilizzato", "stabulato", "staccato", "stacciato", "staffato", "staffilato", "staggiato", "staggito", "stagionato", "stagliato", "stagnato", "stamburato", "stampato", "stampigliato", "stanato", "stancato", "standardizzato", "stangato", "stanziato", "stappato", "starato", "starnazzato", "stasato", "statalizzato", "statizzato", "statoco", "statoseno", "statuito", "stazzato", "stazzonato", "steccacciato", "steccato", "stecchito", "stecconato", "stemperato", "stempiato", "stenografato", "stereotipato", "sterilito", "sterilizzato", "sterpato", "sterrato", "sterzato", "steso", "stigliato", "stigmatizzato", "stilato", "stilettato", "stilizzato", "stillato", "stimato", "stimolato", "stinto", "stipato", "stipendiato", "stipulato", "stiracchiato", "stirato", "stivato", "stizzito", "stoccato", "stolto", "stomacato", "stonato", "stondato", "stoppato", "stordito", "storicizzato", "stornato", "storpiato", "stortato", "storto", "stozzato", "strabenedetto", "strabuzzato", "stracannato", "straccato", "stracciato", "stracotto", "strafogato", "stragoduto", "stralciato", "stralodato", "stralunato", "stramaledetto", "stramortito", "strangolato", "straniato", "stranito", "straorzato", "strapagato", "strapazzato", "straperduto", "straperso", "strappato", "strasaputo", "strascicato", "strascinato", "strasformato", "stratificato", "strattonato", "stravaccato", "stravinto", "stravolto", "stravoluto", "straziato", "stregato", "stremato", "stressato", "striato", "stridulato", "strigato", "strigliato", "strillato", "striminzito", "strimpellato", "strinato", "stringato", "strisciato", "stritolato", "strizzato", "strofinato", "strombato", "strombazzato", "stroncato", "stronzato", "stropicciato", "stroppato", "stroppiato", "strozzato", "struccato", "strumentalizzato", "strumentato", "strusciato", "strutto", "strutturalizzato", "strutturato", "stuccato", "studiacchiato", "studiato", "stuellato", "stufato", "stupefatto", "stupito", "stuprato", "sturato", "stutato", "stuzzicato", "suaso", "subaffittato", "subappaltato", "subbiato", "subdelegato", "subissato", "subito", "sublicenziato", "sublimato", "sublocato", "subodorato", "subordinato", "subornato", "suburbanizzato", "sucato", "succhiato", "succhiellato", "succiato", "succinto", "succiso", "suddistinto", "suddiviso", "suffissato", "suffisso", "suffragato", "suffumicato", "suffuso", "suggellato", "suggerito", "suggestionato", "suicidato", "sunteggiato", "sunto", "suolato", "suonato", "superato", "superpagato", "superraffreddato", "supervalutato", "supervisionato", "supplicato", "supplito", "supportato", "supposto", "suppurato", "surclassato", "surfato", "surgelato", "surraffreddato", "surriscaldato", "surrogato", "survoltato", "suscitato", "susseguito", "sussidiato", "sussunto", "sussurrato", "suturato", "svaccato", "svagato", "svaligiato", "svalutato", "svapato", "svariato", "svasato", "svecchiato", "svegliato", "svelato", "svelenito", "sveltito", "svelto", "svenato", "svenduto", "sventagliato", "sventato", "sventolato", "sventrato", "sverginato", "svergognato", "svergolato", "sverminato", "sverniciato", "svestito", "svettato", "svezzato", "sviato", "svignatoselo", "svigorito", "svilito", "svillaneggiato", "sviluppato", "svinato", "svincolato", "sviolinato", "svirgolato", "svirilizzato", "svisato", "sviscerato", "svitato", "sviticchiato", "svolato", "svolazzato", "svolto", "svoluto", "svuotato", "tabuizzato", "tabulato", "taccato", "taccheggiato", "tacciato", "tacitato", "taciuto", "tagliato", "taglieggiato", "tagliuzzato", "talebanizzato", "tallonato", "tampinato", "tamponato", "tanguto", "tannato", "tappato", "tappezzato", "tarato", "tardato", "targato", "tariffato", "tarlato", "tarmato", "taroccato", "tarpato", "tartagliato", "tartassato", "tartufato", "tassato", "tassellato", "tastato", "tasteggiato", "tatuato", "tecnicizzato", "tecnologizzato", "tedeschizzato", "tediato", "teflonato", "telecomandato", "telecontrollato", "telediffuso", "telefonato", "telegrafato", "teleguidato", "telematizzato", "telemetrato", "teleradiotrasmesso", "teletrasmesso", "teletrasportato", "tematizzato", "temperato", "tempestato", "tempificato", "templatizzato", "temporizzato", "temprato", "temuto", "tentato", "tenuto", "teologizzato", "teorizzato", "tepefatto", "terebrato", "terminato", "termostatato", "terrazzato", "terrificato", "terrorizzato", "terso", "terzarolato", "terziarizzato", "terziato", "tesato", "tesaurizzato", "teso", "tesserato", "testato", "testificato", "testimoniato", "timbrato", "tindalizzato", "tinteggiato", "tinto", "tipicizzato", "tipizzato", "tippato", "tiranneggiato", "tirato", "titillato", "titolato", "toccato", "toelettato", "tollerato", "tolto", "tonalizzato", "tonificato", "tonneggiato", "tonsurato", "torchiato", "tormentato", "tornatoseno", "tornito", "torrefatto", "torto", "tortoreggiato", "torturato", "tosato", "toscaneggiato", "toscanizzato", "tostato", "totalizzato", "traboccato", "trabuccato", "tracannato", "tracciato", "tradito", "tradotto", "trafficato", "trafilato", "trafitto", "traforato", "trafugato", "traghettato", "traguardato", "trainato", "tralasciato", "tralignato", "tramandato", "tramato", "trambasciato", "tramesso", "tramestato", "tramezzato", "tramortito", "tramutato", "tranciato", "trangugiato", "tranquillato", "tranquillizzato", "transatto", "transceso", "transcodificato", "transcorso", "transcritto", "transennato", "transfluito", "transfuso", "transistorizzato", "translitterato", "transposto", "transricevuto", "transustanziato", "transveduto", "transvisto", "trapanato", "trapassato", "trapiantato", "traportato", "traposto", "trapposto", "trapuntato", "trapunto", "trarotto", "trasandato", "trasbordato", "trascelto", "trasceso", "trascinato", "trascorso", "trascritto", "trascurato", "trasdotto", "trasferito", "trasfigurato", "trasformato", "trasfuso", "trasgredito", "traslato", "traslitterato", "traslocato", "trasmesso", "trasmutato", "trasparito", "traspirato", "trasportato", "trasposto", "trastullato", "trasudato", "trasvolato", "trasvolto", "trattato", "tratteggiato", "trattenuto", "tratto", "traumatizzato", "travagliato", "travalicato", "travasato", "traveduto", "traversato", "travestito", "traviato", "travisato", "travisto", "travolto", "trebbiato", "triangolato", "tribbiato", "tribolato", "tributato", "triennalizzato", "trimestralizzato", "trincato", "trincerato", "trinciato", "tripartito", "triplicato", "trisecato", "trisezionato", "tritato", "triturato", "trivellato", "trollato", "trombato", "troncato", "tropicalizzato", "trovato", "truccato", "trucidato", "truffato", "tuffato", "tumefatto", "tumulato", "turato", "turbato", "turlupinato", "tutelato", "ubbligato", "ubicato", "ubidito", "ubiquitinato", "ubriacato", "uccellato", "uccellinato", "ucciso", "udito", "ufficializzato", "uggito", "ugnato", "uguagliato", "ulcerato", "ulito", "ulolato", "ultimato", "ultracentrifugato", "ululato", "umanato", "umanizzato", "umettato", "umidificato", "umidito", "umiliato", "uncinato", "unguentato", "unificato", "uniformato", "unito", "univerbato", "universaleggiato", "universalizzato", "untato", "unto", "uperizzato", "urbanizzato", "urgenzato", "urlato", "urtacchiato", "urtato", "urticchiato", "usato", "usciolato", "usolato", "ustionato", "usucapito", "usurato", "usurpato", "utilitato", "utilizzato", "vaccinato", "vagabondeggiato", "vagellato", "vagheggiato", "vagillato", "vagliato", "valcato", "valicato", "validato", "valorizzato", "valso", "valutato", "vanagloriato", "vanato", "vandalizzato", "vangato", "vangelizzato", "vanificato", "vanito", "vantaggiato", "vantato", "vaporato", "vaporizzato", "varato", "varcato", "variato", "vasectomizzato", "vaticinato", "vedovato", "veduto", "vegetato", "veggiato", "vegliato", "veicolato", "velarizzato", "velato", "velettato", "velinato", "vellicato", "vellutato", "velocizzato", "vendemmiato", "vendicato", "vendicchiato", "venducchiato", "venduto", "venerato", "vengiato", "ventagliato", "ventilato", "ventolato", "verbalizzato", "vergato", "vergheggiato", "vergognato", "vergolato", "verificato", "verminato", "vernalizzato", "verniciato", "verrinato", "versato", "verseggiato", "versificato", "verticalizzato", "vessato", "vestito", "vestito", "vetrificato", "vetrinato", "vetrioleggiato", "vettovagliato", "vezzeggiato", "viaggiato", "vicinato", "vicitato", "videochattato", "videochiamato", "videocomunicato", "videoregistrato", "videotrasmesso", "vidimato", "vigilato", "vigliato", "vigoreggiato", "vigorito", "vilificato", "vilipeso", "villaneggiato", "vincolato", "vinto", "violato", "violentato", "violinato", "virgolato", "virgoleggiato", "virgolettato", "virilizzato", "virtualizzato", "visionato", "visitato", "vissuto", "vistato", "visto", "visualizzato", "vitaliziato", "vitalizzato", "vitaminizzato", "vittimizzato", "vituperato", "vivacizzato", "vivandato", "vivificato", "vivisezionato", "viziato", "vocabolarizzato", "vocalizzato", "vocato", "vociferato", "volantinato", "volatilizzato", "volgarizzato", "volicchiato", "volpeggiato", "voltato", "volto", "voltolato", "volturato", "voluminizzato", "voluto", "volutoco", "vomitato", "vorato", "votato", "vulcanizzato", "vuotato", "wappato", "wikificato", "xerocopiato", "zaffato", "zampato", "zampettato", "zampillato", "zannato", "zappato", "zappettato", "zapponato", "zavorrato", "zeppato", "zigrinato", "zigzagato", "zimbellato", "zincato", "zinnato", "zipolato", "zippato", "zirlato", "zittito", "zizzagato", "zoccolato", "zollato", "zombato", "zonato", "zonizzato", "zoppato", "zoppeggiato", "zoppicato", "zucconato", "zufolato", "zumato", "zuppato", "abalienata", "abbacchiata", "abbacinata", "abbadata", "abbagliata", "abbaiata", "abballata", "abbambinata", "abbancata", "abbandonata", "abbarbagliata", "abbarbata", "abbarcata", "abbaruffata", "abbassata", "abbatacchiata", "abbattuta", "abbatuffolata", "abbelita", "abbellata", "abbellita", "abbendata", "abbeverata", "abbiadata", "abbicata", "abbigliata", "abbinata", "abbindolata", "abbioccata", "abbiosciata", "abbisciata", "abbittata", "abboccata", "abboffata", "abbominata", "abbonacciata", "abbonata", "abbonita", "abbordata", "abborracciata", "abborrata", "abborrita", "abbottinata", "abbottonata", "abbozzacchiata", "abbozzata", "abbozzolata", "abbracciata", "abbraciata", "abbrancata", "abbreviata", "abbriccata", "abbrigliata", "abbrivata", "abbriviata", "abbrividita", "abbronzata", "abbrostolata", "abbrostolita", "abbruciacchiata", "abbruciata", "abbrunata", "abbrunita", "abbruscata", "abbrusciata", "abbrustiata", "abbrustolata", "abbrustolita", "abbrutita", "abbruttita", "abbuffata", "abbuiata", "abbuonata", "abburattata", "abbuzzita", "abdicata", "abdotta", "abiettata", "abilitata", "abissata", "abitata", "abituata", "abiurata", "abolita", "abominata", "abondata", "aborrita", "abrasa", "abrogata", "abusata", "accaffata", "accagionata", "accagliata", "accalappiata", "accalcata", "accaldata", "accallata", "accalorata", "accalorita", "accambiata", "accampata", "accampionata", "accanalata", "accanata", "accaneggiata", "accanita", "accantonata", "accaparrata", "accapezzata", "accapigliata", "accapottata", "accappiata", "accappiettata", "accapponata", "accappucciata", "accaprettata", "accareggiata", "accarezzata", "accarnata", "accarpionata", "accartocciata", "accasata", "accasciata", "accasellata", "accasermata", "accastellata", "accastellinata", "accatarrata", "accatastata", "accattata", "accattivata", "accavalcata", "accavalciata", "accavallata", "accavezzata", "accecata", "acceffata", "accelerata", "accellerata", "accennata", "accensata", "accentata", "accentrata", "accentuata", "acceppata", "accerchiata", "accercinata", "accertata", "accesa", "accessoriata", "accettata", "acchetata", "acchiappata", "acchiocciolata", "acchitata", "acchiuduta", "acciabattata", "acciaiata", "acciambellata", "acciarpata", "acciecata", "accigliata", "acciglionata", "accignuta", "accincignata", "accinta", "acciocchita", "acciottolata", "accipigliata", "accismata", "accisa", "acciucchita", "acciuffata", "accivettata", "acclamata", "acclarata", "acclimatata", "acclusa", "accoccata", "accoccolata", "accoccovata", "accodata", "accollata", "accoltellata", "accolta", "accomandata", "accomiatata", "accommiatata", "accomodata", "accompagnata", "accomunata", "acconciata", "acconigliata", "accontata", "accontentata", "accoppata", "accoppiata", "accorata", "accorciata", "accorcita", "accordata", "accordellata", "accorpata", "accorta", "accosciata", "accostata", "accostumata", "accotonata", "accottimata", "accovacciata", "accovata", "accovonata", "accozzata", "accreditata", "accresciuta", "accrespata", "accucciata", "accucciolata", "accudita", "acculata", "acculturata", "accumulata", "accumunata", "accusata", "acetificata", "acetilata", "acetita", "acidata", "acidificata", "acidulata", "acquadernata", "acquarellata", "acquartierata", "acquata", "acquattata", "acquerellata", "acquetata", "acquietata", "acquisita", "acquistata", "acromatizzata", "acuita", "acuminata", "acutizzata", "adacquata", "adagiata", "adattata", "addaziata", "addebbiata", "addebitata", "addecimata", "addensata", "addentata", "addentellata", "addentrata", "addestrata", "addetta", "addiacciata", "addimandata", "addimesticata", "addimorata", "addimostrata", "addipanata", "addirizzata", "additata", "additivata", "addizionata", "addobbata", "addocilita", "addogliata", "addolcata", "addolciata", "addolcita", "addolorata", "addomandata", "addomesticata", "addoppiata", "addormentata", "addossata", "addotta", "addottorata", "addottrinata", "addrizzata", "adduata", "addugliata", "adeguata", "adempita", "adempiuta", "adequata", "aderizzata", "adescata", "adibita", "adirata", "adita", "adiuvata", "adizzata", "adocchiata", "adombrata", "adonata", "adonestata", "adontata", "adoperata", "adoprata", "adorata", "adornata", "adottata", "adsorbita", "aduggiata", "adugnata", "adulata", "adulterata", "adunata", "adunghiata", "adusata", "aerata", "aereata", "aerotrainata", "aerotrasportata", "affabulata", "affaccendata", "affacchinata", "affacciata", "affagottata", "affaldata", "affamata", "affamigliata", "affannata", "affardellata", "affascinata", "affastellata", "affaticata", "affattucchiata", "affatturata", "affermata", "afferrata", "affettata", "affezionata", "affiancata", "affiatata", "affibbiata", "affidata", "affienata", "affievolita", "affigliata", "affigurata", "affilata", "affilettata", "affiliata", "affinata", "affiochita", "affiorata", "affisata", "affissata", "affissa", "affittata", "affittita", "afflitta", "afflosciata", "affocata", "affogata", "affogliata", "affollata", "affoltata", "affondata", "afforcata", "afforestata", "afforzata", "affossata", "affralita", "affrancata", "affranta", "affratellata", "affrenata", "affrenellata", "affrescata", "affrettata", "affrittellata", "affrontata", "affumata", "affumicata", "affumigata", "affuocata", "affusolata", "africanizzata", "ageminata", "agevolata", "aggallata", "agganciata", "aggangherata", "aggarbata", "aggattonata", "aggavignata", "aggelata", "aggettivata", "agghiacciata", "agghiadata", "agghiaiata", "agghindata", "aggiaccata", "aggiogata", "aggiornata", "aggirata", "aggiucchita", "aggiudicata", "aggiuntata", "aggiunta", "aggiustata", "agglomerata", "agglutinata", "aggomitolata", "aggottata", "aggradita", "aggraffata", "aggranchiata", "aggranchita", "aggrandita", "aggrappata", "aggraticciata", "aggravata", "aggredita", "aggregata", "aggrevata", "aggricciata", "aggrinzata", "aggrinzita", "aggrommata", "aggrondata", "aggroppata", "aggrottata", "aggrovigliata", "aggrumata", "aggruppata", "aggruzzolata", "agguagliata", "agguantata", "agguardata", "agguatata", "aggueffata", "agitata", "agognata", "agrarizzata", "aguatata", "agucchiata", "agunata", "agurata", "aguzzata", "aitata", "aiutata", "aizzata", "alata", "alberata", "albergata", "alcalinizzata", "alchilata", "alchimiata", "alchimizzata", "alcolizzata", "alcoolizzata", "alenata", "alesata", "alettata", "alfabetata", "alfabetizzata", "alidita", "alienata", "alimentata", "allacciata", "allagata", "allappata", "allargata", "allascata", "allattata", "alleata", "allegata", "alleggerita", "alleggiata", "allegorizzata", "alleluiata", "allenata", "allenita", "allentata", "allertata", "allessata", "allestita", "allettata", "allevata", "alleviata", "allibata", "allibita", "allibrata", "allicciata", "allietata", "allindata", "allineata", "allisa", "allocata", "allogata", "alloggiata", "allontanata", "allottata", "allucchettata", "allucciolata", "allucinata", "allumata", "alluminata", "alluminiata", "allungata", "allupata", "allusa", "alluzzata", "alogenata", "alonata", "alpeggiata", "alterata", "alternata", "alzata", "amalgamata", "amareggiata", "amaricata", "amata", "ambientata", "ambiguata", "ambita", "americanizzata", "amicata", "ammaccata", "ammaestrata", "ammainata", "ammalata", "ammaliata", "ammalinconita", "ammaltata", "ammanettata", "ammanicata", "ammanierata", "ammanigliata", "ammannata", "ammannellata", "ammannita", "ammansata", "ammansita", "ammantata", "ammantellata", "ammarata", "ammarezzata", "ammassata", "ammassellata", "ammassicciata", "ammatassata", "ammattonata", "ammazzata", "ammelmata", "ammencita", "ammendata", "ammennicolata", "ammessa", "ammetata", "ammezzita", "amministrata", "amminutata", "ammirata", "ammiserita", "ammobiliata", "ammodernata", "ammodernizzata", "ammogliata", "ammoinata", "ammollata", "ammollita", "ammonita", "ammonticchiata", "ammonticellata", "ammorbata", "ammorbidata", "ammorbidita", "ammorsata", "ammortata", "ammortita", "ammortizzata", "ammorzata", "ammosciata", "ammoscita", "ammostata", "ammotinata", "ammucchiata", "ammulinata", "ammusata", "ammutata", "ammutinata", "amnistiata", "amoracciata", "ampiata", "ampliata", "amplificata", "amputata", "anagrammata", "analizzata", "anamorfizzata", "anastomizzata", "anatematizzata", "anatomizzata", "anchilosata", "ancisa", "ancorata", "andatosena", "andicappata", "anellata", "anemizzata", "anestetizzata", "angariata", "anglicizzata", "angolata", "angosciata", "angustiata", "animata", "annacquata", "annaffiata", "annasata", "annaspata", "annaspicata", "annebbiata", "annegata", "annerata", "annerita", "annessa", "annestata", "annichilata", "annichilita", "annidata", "annientata", "annitrita", "annobilita", "annodata", "annodicchiata", "annoiata", "annotata", "annottata", "annottolata", "annoverata", "annullata", "annunciata", "annunziata", "annusata", "annuvolata", "anodizzata", "anonimizzata", "anteceduta", "anteposta", "antergata", "anticheggiata", "antichizzata", "anticipata", "anticonosciuta", "antidatata", "antiveduta", "antivista", "antologizzata", "antropizzata", "antropomorfizzata", "aocchiata", "aombrata", "aonestata", "aontata", "aperta", "apocopata", "apologizzata", "apostrofata", "appaciata", "appacificata", "appagata", "appaiata", "appalesata", "appallottolata", "appaltata", "appanettata", "appannata", "apparata", "apparecchiata", "apparentata", "apparigliata", "apparita", "appartata", "appassionata", "appastata", "appastellata", "appellata", "appennellata", "appercepita", "appertizzata", "appesantita", "appesita", "appesa", "appestata", "appetita", "appezzata", "appiacevolita", "appianata", "appiastrata", "appiatata", "appiattata", "appiattita", "appiccata", "appiccicata", "appiccolita", "appiedata", "appigionata", "appigliata", "appinzata", "appiombata", "appioppata", "appisolata", "applaudita", "applicata", "appoderata", "appoggiata", "appollaiata", "appoppata", "apportata", "appostata", "apposta", "appratita", "appresentata", "appresa", "appressata", "apprestata", "apprettata", "apprezzata", "approcciata", "approfittata", "approfondata", "approfondita", "approntata", "appropinquata", "appropriata", "approssimata", "approvata", "approvisionata", "approvvigionata", "appruata", "appulcrata", "appuntata", "appuntellata", "appuntita", "appurata", "appuzzata", "arabescata", "arabizzata", "arata", "arbitrata", "arborata", "arcaizzata", "arcata", "architettata", "archiviata", "arcuata", "ardita", "areata", "argentata", "arginata", "argomentata", "arguita", "arianizzata", "arieggiata", "armata", "armonizzata", "aromatizzata", "arpeggiata", "arpionata", "arponata", "arrabattata", "arraffata", "arraffiata", "arrandellata", "arrangiata", "arrapata", "arrapinata", "arrappata", "arrazzata", "arrecata", "arredata", "arreggimentata", "arrembata", "arrenata", "arresisa", "arresa", "arrestata", "arretrata", "arricchita", "arricciata", "arricciolata", "arriffata", "arringata", "arrischiata", "arrisicata", "arrisa", "arrocata", "arroccata", "arrochita", "arrogata", "arrolata", "arroncata", "arronzata", "arrosata", "arrossata", "arrostata", "arrostita", "arrotata", "arrotolata", "arrotondata", "arrovellata", "arroventata", "arroventita", "arrovesciata", "arrubinata", "arruffata", "arruffianata", "arrugginita", "arruncigliata", "arruolata", "arruvidita", "arsicciata", "arsa", "artefatta", "articolata", "artigliata", "ascesa", "asciata", "asciolvuta", "asciugata", "ascoltata", "ascosa", "ascosta", "ascritta", "asfaltata", "asfissiata", "aspersa", "aspettata", "aspirata", "asportata", "aspreggiata", "assaettata", "assaggiata", "assalita", "assaltata", "assaporata", "assaporita", "assassinata", "assecondata", "assecurata", "assediata", "asseggiata", "assegnata", "assembiata", "assemblata", "assembrata", "assemprata", "assentata", "asserita", "asserragliata", "asservita", "assestata", "assetata", "assettata", "asseverata", "assibilata", "assicurata", "assiderata", "assiemata", "assiepata", "assillata", "assimigliata", "assimilata", "assiomatizzata", "assisa", "assistita", "associata", "assodata", "assoggettata", "assolcata", "assoldata", "assolta", "assolutizzata", "assomata", "assommata", "assonata", "assonnata", "assopita", "assorbita", "assordata", "assordita", "assortita", "assottigliata", "assuefatta", "assunta", "asteggiata", "astenuta", "astersa", "astratta", "astretta", "atomizzata", "atrofizzata", "atrovata", "attaccata", "attagliata", "attanagliata", "attardata", "attediata", "atteggiata", "attempata", "attendata", "attentata", "attenuata", "attenuta", "attergata", "atterrata", "atterrita", "atterzata", "attesa", "attestata", "atticizzata", "attillata", "attinta", "attirata", "attivata", "attivizzata", "attizzata", "attorcigliata", "attorniata", "attorta", "attoscata", "attossicata", "attraccata", "attrappita", "attratta", "attraversata", "attrezzata", "attribuita", "attristata", "attristita", "attruppata", "attualizzata", "attuata", "attuffata", "attutata", "attutita", "auggiata", "augumentata", "augurata", "aulita", "aumentata", "aunghiata", "ausata", "auscultata", "auspicata", "autenticata", "autentificata", "autoaccusata", "autoaffondata", "autoalimentata", "autoassolta", "autocandidata", "autocensurata", "autocitata", "autocommiserata", "autoconsumata", "autoconvinta", "autodefinita", "autodenunciata", "autodistrutta", "autofinanziata", "autogestita", "autogovernata", "autografata", "autoincensata", "autointersecata", "autoinvitata", "autolesionata", "autolimitata", "automaticizzata", "automatizzata", "automotivata", "autonominata", "autoproclamata", "autoprodotta", "autoprotetta", "autopubblicata", "autopubblicizzata", "autoregolamentata", "autoregolata", "autoridotta", "autoriparata", "autorizzata", "autosomministrata", "autosostenuta", "autosuggestionata", "autotassata", "autotrapiantata", "autotrasportata", "autovalutata", "avallata", "avampata", "avanzata", "avariata", "avinta", "aviolanciata", "aviotrasportata", "avocata", "avolterata", "avulsa", "avutacela", "avuta", "avvalorata", "avvalsa", "avvantaggiata", "avvelata", "avvelenata", "avventata", "avventurata", "avverata", "avversata", "avvertita", "avvezzata", "avviata", "avvicendata", "avvicinata", "avvignata", "avvilita", "avviluppata", "avvinata", "avvinchiata", "avvinghiata", "avvinta", "avvisata", "avvistata", "avvitata", "avviticchiata", "avvitita", "avvivata", "avvolta", "avvoltolata", "aziendalizzata", "azionata", "azotata", "azzannata", "azzardata", "azzeccata", "azzerata", "azzimata", "azzittata", "azzittita", "azzoppata", "azzoppita", "azzuffata", "azzurrata", "bacata", "baccagliata", "bacchettata", "bacchiata", "baciata", "badata", "bagnata", "baipassata", "balbettata", "balcanizzata", "ballata", "baloccata", "balzata", "banalizzata", "bancata", "bandita", "bannata", "baraccata", "barattata", "barbarizzata", "barcamenata", "bardata", "barellata", "barrata", "barricata", "basata", "basciata", "basculata", "bassata", "bastata", "bastionata", "bastita", "bastonata", "battezzata", "battuta", "bazzicata", "beatificata", "beata", "beccata", "beccheggiata", "becchettata", "beffata", "beffeggiata", "bendata", "benedetta", "beneficata", "benvoluta", "berlusconizzata", "bersagliata", "bestemmiata", "bevuta", "biadata", "bianchettata", "bianchita", "biascicata", "biasimata", "biasmata", "bidonata", "biennalizzata", "biforcata", "bigiata", "bilanciata", "binata", "bindolata", "biodegradata", "biografata", "bipartita", "bisbigliata", "biscottata", "bisecata", "bisellata", "bisognata", "bissata", "bistrata", "bistrattata", "bitumata", "bituminata", "blandita", "bleffata", "blindata", "bloccata", "bobinata", "boccheggiata", "bocciata", "boicottata", "bollata", "bollita", "bombardata", "bombata", "bonderizzata", "bonificata", "bootata", "borbottata", "bordata", "boriata", "borrata", "borseggiata", "braccata", "bracciata", "bramata", "bramita", "brancicata", "brandeggiata", "brandita", "brasata", "bravata", "brevettata", "breviata", "brillantata", "brillata", "brinata", "broccata", "brocciata", "broccolata", "brontolata", "bronzata", "brucata", "bruciacchiata", "bruciata", "brunita", "bruscata", "bruschinata", "brutalizzata", "bruttata", "bucata", "bucherellata", "bufata", "buffata", "bufferizzata", "buggerata", "bugnata", "bulicata", "bulinata", "bullettata", "bullonata", "burattata", "burlata", "burocratizzata", "burrificata", "buscata", "buttata", "butterata", "bypassata", "cablata", "cabrata", "cacata", "cacciata", "cadenzata", "cadmiata", "caducata", "cagata", "caggiata", "cagionata", "cagliata", "calafatata", "calamitata", "calandrata", "calata", "calcata", "calciata", "calcificata", "calcolata", "caldeggiata", "calettata", "calibrata", "calmata", "calmierata", "calpestata", "calumata", "calunniata", "calzata", "cambiata", "camerata", "campionata", "campita", "camuffata", "canalizzata", "cancellata", "cancerizzata", "candeggiata", "candidata", "candita", "canforata", "cangiata", "cannata", "canneggiata", "cannibalizzata", "cannoneggiata", "canonizzata", "cantata", "canterellata", "canticchiata", "cantilenata", "canzonata", "caolinizzata", "capacitata", "capeggiata", "capillarizzata", "capitalizzata", "capitanata", "capitaneggiata", "capita", "capitozzata", "capivolta", "caponata", "capotata", "capottata", "capovolta", "capponata", "captata", "caramellata", "caramellizzata", "caratata", "caratterizzata", "carbonizzata", "carbossilata", "carburata", "carcata", "carcerata", "cardata", "carenata", "carezzata", "cariata", "caricata", "caricaturata", "caricaturizzata", "carotata", "carpionata", "carpita", "carreggiata", "carrozzata", "cartavetrata", "carteggiata", "cartellinata", "cartografata", "cartolarizzata", "cartonata", "cascolata", "cassata", "cassa", "castigata", "castrata", "casualizzata", "catabolizzata", "catalizzata", "catalogata", "catapultata", "catechizzata", "categorizzata", "cateterizzata", "catramata", "cattolicizzata", "catturata", "causata", "cautelata", "cauterizzata", "cauzionata", "cavalcata", "cavatasela", "cavata", "cazzata", "cazziata", "cazzottata", "cedrata", "ceduta", "celata", "celebrata", "cellofanata", "cementata", "cementificata", "cennata", "censita", "censurata", "centellata", "centellinata", "centimetrata", "centinata", "centralizzata", "centrata", "centrifugata", "centuplicata", "cerata", "cercata", "cerchiata", "cernuta", "certificata", "cesellata", "cessata", "cestinata", "cheratinizzata", "chetata", "chiamata", "chiappata", "chiarificata", "chiarita", "chiaroscurata", "chiavata", "chiazzata", "chiesta", "chilificata", "chilometrata", "chimificata", "chinata", "chinizzata", "chiodata", "chiosata", "chiusa", "choccata", "ciancicata", "cianfrinata", "cianfrugliata", "ciangottata", "ciattata", "cibata", "cicatrizzata", "ciccata", "cicchettata", "ciclizzata", "ciclostilata", "cifrata", "cilindrata", "cimata", "cimentata", "cincischiata", "cinematografata", "cintata", "cinta", "cioncata", "ciondolata", "circolata", "circoncinta", "circoncisa", "circondata", "circondotta", "circonflessa", "circonfluita", "circonfusa", "circonscritta", "circonvenuta", "circoscritta", "circostanziata", "circuita", "circumcinta", "circumnavigata", "citata", "ciucciata", "ciurmata", "civettata", "civilizzata", "clamata", "classata", "classicizzata", "classificata", "cliccata", "climatizzata", "clivata", "clonata", "cloroformizzata", "clorurata", "clusterizzata", "co-diretta", "coacervata", "coadiuvata", "coagulata", "coalizzata", "coartata", "coccolata", "codificata", "coeditata", "coesistita", "cofinanziata", "cofirmata", "cofondata", "cogestita", "cogitata", "coglionata", "cognosciuta", "coibentata", "coincisa", "cointeressata", "cointestata", "coinvolta", "cokificata", "colata", "colettata", "collassata", "collaudata", "collazionata", "collegata", "collettivizzata", "collezionata", "collimata", "colliquata", "collisa", "collocata", "colluttata", "colmata", "colonizzata", "colorata", "colorita", "colorizzata", "colpevolizzata", "colpita", "coltellata", "coltivata", "colta", "coltrata", "comandata", "combattuta", "combinata", "comburuta", "comicizzata", "cominciata", "commemorata", "commendata", "commensurata", "commentata", "commercializzata", "commessa", "comminata", "commiserata", "commissariata", "commissionata", "commisurata", "commossa", "commutata", "comodata", "compaginata", "comparita", "compartimentalizzata", "compartita", "compassionata", "compatibilizzata", "compatita", "compattata", "compendiata", "compenetrata", "compensata", "comperata", "compiaciuta", "compianta", "compilata", "compitata", "compiuta", "complessata", "complessificata", "complessa", "completata", "complicata", "complimentata", "comportata", "compostata", "composta", "comprata", "compravenduta", "compresa", "compressa", "compromessa", "comprovata", "compulsata", "compunta", "computata", "computerizzata", "comunicata", "comunistizzata", "concatenata", "conceduta", "concelebrata", "concentrata", "concepita", "concertata", "concessa", "concettata", "concettualizzata", "conchiusa", "conciata", "conciliata", "concimata", "concitata", "conclamata", "conclusa", "concordata", "concotta", "concretata", "concretizzata", "conculcata", "concupita", "condannata", "condensata", "condita", "condivisa", "condizionata", "condoluta", "condonata", "condotta", "confatta", "confederata", "conferita", "confermata", "confessata", "confettata", "confezionata", "conficcata", "confidata", "configurata", "confinata", "confinta", "confiscata", "confitta", "conformata", "confortata", "confricata", "confrontata", "confusa", "confutata", "congedata", "congegnata", "congelata", "congestionata", "congetturata", "congiunta", "conglobata", "conglomerata", "conglutinata", "congratulata", "congregata", "conguagliata", "coniata", "coniugata", "connaturata", "connessa", "connotata", "connumerata", "conosciuta", "conquistata", "consacrata", "consapevolizzata", "consegnata", "conseguita", "consentita", "conservata", "considerata", "consigliata", "consistita", "consociata", "consolata", "consolidata", "consorziata", "consparsa", "conspersa", "constatata", "constretta", "construita", "consultata", "consumata", "consunta", "contabilizzata", "contagiata", "containerizzata", "contaminata", "contata", "contattata", "conteggiata", "contemperata", "contemplata", "contentata", "contenuta", "contesa", "contestata", "contestualizzata", "contingentata", "continuata", "contornata", "contorta", "contrabbandata", "contraccambiata", "contraddetta", "contraddistinta", "contradetta", "contraffatta", "contrappesata", "contrapposta", "contrappuntata", "contrariata", "contrassegnata", "contrastata", "contrata", "contrattaccata", "contrattata", "contratta", "contravvalsa", "contristata", "controbattuta", "controbilanciata", "controdatata", "controfirmata", "controindicata", "controllata", "controminata", "contronotata", "controproposta", "controprovata", "controquerelata", "controsoffittata", "controstampata", "controventata", "conturbata", "contusa", "convalidata", "convenuta", "convenzionata", "convertita", "convinta", "convitata", "convocata", "convogliata", "convolta", "coobata", "cooptata", "coordinata", "coperchiata", "coperta", "copiaincollata", "copiata", "copolimerizzata", "coppellata", "coprodotta", "corazzata", "corbellata", "corcata", "cordonata", "coreografata", "coricata", "cornificata", "coronata", "corredata", "correlata", "corresponsabilizzata", "corretta", "corricchiata", "corrisposta", "corroborata", "corrosa", "corrotta", "corrucciata", "corrugata", "corsa", "corteata", "corteggiata", "cortocircuitata", "coruscata", "cosata", "coscritta", "cosparsa", "cospersa", "costatata", "costeggiata", "costellata", "costernata", "costicchiata", "costipata", "costituita", "costituzionalizzata", "costretta", "costruita", "costudita", "cotonata", "cotta", "covata", "coventrizzata", "coverchiata", "craccata", "creata", "creduta", "cremata", "crepata", "cresciuta", "cresimata", "crespata", "criminalizzata", "crioconcentrata", "criptata", "cristallizzata", "cristianizzata", "criticata", "crittata", "crittografata", "crivellata", "crocchiata", "crocefissa", "crocefitta", "crocifissa", "crocifitta", "crogiolata", "cromata", "cronicizzata", "cronometrata", "crostata", "crucciata", "crucifissa", "crucifitta", "cuccata", "cucinata", "cucita", "cullata", "cumulata", "cuntata", "curata", "curvata", "curvata", "custodita", "customizzata", "damascata", "damaschinata", "damata", "dannata", "danneggiata", "danzata", "dardeggiata", "datata", "data", "dattilografata", "dattiloscritta", "daziata", "deacidificata", "deattivata", "debbiata", "debellata", "debilitata", "decaffeinata", "decaffeinizzata", "decalcata", "decalcificata", "decantata", "decapata", "decapitata", "decappottata", "decarbossilata", "decarburata", "decatizzata", "decelerata", "decentralizzata", "decentrata", "decerebrata", "decernuta", "decespugliata", "deciferata", "decifrata", "decimalizzata", "decimata", "decisa", "declamata", "declassata", "declassificata", "declinata", "declorata", "decodificata", "decolonizzata", "decolorata", "decompartimentata", "decompilata", "decomposta", "decompressa", "deconcentrata", "decondizionata", "decongelata", "decongestionata", "decontaminata", "decontestualizzata", "decontratta", "decorata", "decorticata", "decostruita", "decrementata", "decretata", "decriminalizzata", "decriptata", "decrittata", "decuplicata", "decurtata", "dedicata", "dedotta", "defacciata", "defalcata", "defascistizzata", "defecata", "defenestrata", "deferita", "defilata", "definita", "defiscalizzata", "defitta", "deflazionata", "deflemmata", "deflorata", "defogliata", "defoliata", "deforestata", "deformata", "defosforata", "defosforilata", "deframmentata", "defraudata", "degassata", "degassificata", "deglutita", "degnata", "degradata", "degustata", "deidratata", "deidrogenata", "deificata", "deindicizzata", "deindustrializzata", "deionizzata", "delegata", "delegificata", "delegittimata", "delibata", "deliberata", "delimitata", "delineata", "delirata", "deliziata", "delocalizzata", "delucidata", "delusa", "demagnetizzata", "demandata", "demanializzata", "demarcata", "demeritata", "demersa", "demetallizzata", "demilitarizzata", "demineralizzata", "demistificata", "demitizzata", "democratizzata", "demodulata", "demolita", "demoltiplicata", "demonetata", "demonetizzata", "demonizzata", "demoralizzata", "demorsa", "demotivata", "denaturalizzata", "denaturata", "denazificata", "denazionalizzata", "denicotinizzata", "denigrata", "denitrificata", "denocciolata", "denominata", "denotata", "dentellata", "denuclearizzata", "denudata", "denunciata", "denunziata", "deodorata", "deossidata", "deossigenata", "deostruita", "depauperata", "depenalizzata", "depennata", "depilata", "depinta", "depistata", "deplorata", "depolarizzata", "depolimerizzata", "depoliticizzata", "depolverizzata", "deportata", "depositata", "deposta", "depotenziata", "depravata", "deprecata", "depredata", "depressa", "depressurizzata", "deprezzata", "deprivata", "deprotonata", "depulsa", "depurata", "dequalificata", "deratizzata", "derattizzata", "dereferenziata", "deregolamentata", "deregolata", "derequisita", "deresponsabilizzata", "derisa", "derubata", "derubricata", "desacralizzata", "desalata", "desalinizzata", "descolarizzata", "descritta", "desecretata", "desegretata", "deselezionata", "desensibilizzata", "desessualizzata", "desiata", "desiderata", "designata", "desinata", "desirata", "desolata", "desolforata", "desonorizzata", "desorbita", "desossidata", "desquamata", "destabilizzata", "destagionalizzata", "destalinizzata", "destatalizzata", "destatizzata", "destata", "destinata", "destituita", "destoricizzata", "destreggiata", "destrutta", "destrutturata", "desunta", "detassata", "detenuta", "deteriorata", "determinata", "detersa", "detestata", "detonata", "detorta", "detossificata", "detratta", "detronizzata", "dettagliata", "dettata", "detta", "deturpata", "deumidificata", "devastata", "deventata", "deviata", "deviscerata", "devitalizzata", "devitaminizzata", "devoluta", "dezippata", "diaframmata", "diagnosticata", "diagonalizzata", "diagrammata", "dializzata", "dialogata", "dialogizzata", "diazotata", "dibattuta", "diboscata", "dichiarata", "diesata", "diesizzata", "difesa", "diffamata", "differita", "diffidata", "diffranta", "diffratta", "diffusa", "digerita", "digitalizzata", "digitata", "digiunta", "digrassata", "digrignata", "digrossata", "dilacerata", "dilaniata", "dilapidata", "dilatata", "dilavata", "dilazionata", "dileggiata", "dileguata", "dilettata", "diletta", "diliscata", "dilucidata", "diluita", "dilungata", "dimagrata", "dimandata", "dimenata", "dimensionata", "dimenticata", "dimerizzata", "dimessa", "dimezzata", "diminuita", "dimissionata", "dimostrata", "dimunta", "dinamizzata", "dinoccata", "dipanata", "dipelata", "dipinta", "diplomata", "diposta", "diradata", "diramata", "diretta", "direzionata", "dirimuta", "diroccata", "dirottata", "dirotta", "dirozzata", "disabilitata", "disabituata", "disaccentata", "disaccoppiata", "disaccordata", "disacerbata", "disacidata", "disacidificata", "disacidita", "disaerata", "disaffezionata", "disaggregata", "disalberata", "disallineata", "disamata", "disambiguata", "disaminata", "disamorata", "disancorata", "disanimata", "disappannata", "disapplicata", "disappresa", "disapprovata", "disarcionata", "disarmata", "disarticolata", "disascosta", "disassemblata", "disassuefatta", "disatomizzata", "disattesa", "disattivata", "disattrezzata", "disavvezzata", "disboscata", "disbrigata", "discacciata", "discalzata", "discantata", "discaricata", "discernuta", "discesa", "disceverata", "dischiesta", "dischiusa", "discinta", "disciolta", "disciplinata", "discolorata", "discolpata", "discommessa", "discompagnata", "discomposta", "disconclusa", "disconfitta", "discongiunta", "disconnessa", "disconosciuta", "discoperta", "discordata", "discoscesa", "discostata", "discreditata", "discresciuta", "discriminata", "discritta", "discucita", "discuoiata", "discussa", "disdegnata", "disdettata", "disdetta", "diseccata", "diseccitata", "diseducata", "disegnata", "diserbata", "diseredata", "disertata", "diserta", "disfatta", "disgelata", "disgiunta", "disgraziata", "disgregata", "disgustata", "disidentificata", "disiderata", "disidratata", "disillusa", "disimballata", "disimparata", "disimpegnata", "disimpressa", "disincagliata", "disincantata", "disincentivata", "disincrostata", "disindustrializzata", "disinfestata", "disinfettata", "disinflazionata", "disinformata", "disingannata", "disingranata", "disinibita", "disinnamorata", "disinnescata", "disinnestata", "disinquinata", "disinserita", "disinstallata", "disintasata", "disintegrata", "disinteressata", "disintesa", "disintossicata", "disinvestita", "disinvolta", "disistimata", "dislocata", "dismessa", "disobbedita", "disobbligata", "disonorata", "disordinata", "disorganizzata", "disorientata", "disormeggiata", "disossata", "disossidata", "disostruita", "disotterrata", "disparita", "dispensata", "dispenta", "disperduta", "dispersa", "dispesa", "dispiegata", "dispinta", "dispogliata", "disposta", "dispregiata", "disprezzata", "dispromessa", "disproporzionata", "disputata", "disqualificata", "disrotta", "dissacrata", "dissalata", "dissaldata", "dissanguata", "dissecata", "disseccata", "disselciata", "dissellata", "disseminata", "dissepolta", "disseppellita", "dissequestrata", "disserrata", "dissestata", "dissetata", "dissezionata", "dissigillata", "dissimulata", "dissipata", "dissociata", "dissodata", "dissolta", "dissomigliata", "dissotterrata", "dissuasa", "dissuggellata", "distaccata", "distanziata", "distesa", "distillata", "distinta", "distolta", "distorta", "distratta", "distretta", "distribuita", "districata", "distrigata", "distrutta", "disturbata", "disubbidita", "disumanata", "disumanizzata", "disunita", "disusata", "disveduta", "disvelata", "disvestita", "disviata", "disvista", "disvolta", "disvoluta", "dittongata", "divallata", "divaricata", "divelta", "diversificata", "divertita", "divezzata", "divinata", "divincolata", "divinizzata", "divisa", "divolta", "divorata", "divorziata", "divulgata", "documentata", "dogata", "dogmatizzata", "dolcificata", "dollarizzata", "dolorata", "doluta", "domandata", "domata", "domesticata", "domiciliata", "dominata", "donata", "dondolata", "dopata", "doppiata", "dorata", "dormitoca", "dosata", "dotata", "dovuta", "dragata", "drammatizzata", "drappeggiata", "drenata", "dribblata", "drizzata", "drogata", "dugliata", "duplicata", "duramificata", "ebraizzata", "ecceduta", "eccepita", "eccettuata", "eccitata", "echeggiata", "eclissata", "economizzata", "edificata", "editata", "edotta", "educata", "edulcorata", "effettuata", "efficientata", "effigiata", "effinta", "effluita", "effusa", "egemonizzata", "eguagliata", "eiettata", "elaborata", "elargita", "elasticizzata", "elementarizzata", "elemosinata", "elencata", "eletta", "elettrificata", "elettrizzata", "elettrocoagulata", "elettrolizzata", "elevata", "eliminata", "elisa", "elitrasportata", "ellenizzata", "elogiata", "elucidata", "elucubrata", "eluita", "elusa", "emanata", "emancipata", "emarginata", "embricata", "emendata", "emessa", "emozionata", "empita", "empiuta", "emulata", "emulsionata", "emunta", "encomiata", "endocitata", "energizzata", "enfatizzata", "enfiata", "entusiasmata", "enucleata", "enumerata", "enunciata", "epicureggiata", "epurata", "equalizzata", "equilibrata", "equipaggiata", "equiparata", "eradicata", "erasa", "ereditata", "eretta", "erogata", "eroicizzata", "erosa", "erotizzata", "erpicata", "ersa", "erudita", "eruttata", "esacerbata", "esagerata", "esagitata", "esalata", "esaltata", "esaminata", "esasperata", "esaudita", "esaurita", "esautorata", "esborsata", "esclusa", "escogitata", "escomiata", "escoriata", "escossa", "escussa", "esecrata", "esecutata", "eseguita", "esemplificata", "esentata", "esercitata", "esfoliata", "esibita", "esilarata", "esiliata", "esimuta", "esitata", "esonerata", "esorbitata", "esorcizzata", "esortata", "espansa", "esparsa", "esperimentata", "esperita", "espettorata", "espiantata", "espiata", "espirata", "espletata", "esplicata", "esplicitata", "esplorata", "esplosa", "esportata", "esposta", "espressa", "espropriata", "espugnata", "espulsa", "espunta", "espurgata", "essiccata", "essuta", "estasiata", "estenuata", "esterificata", "esteriorizzata", "esterminata", "esternalizzata", "esternata", "estesa", "estimata", "estinta", "estirpata", "estivata", "estorta", "estradata", "estraniata", "estrapolata", "estratta", "estremizzata", "estrinsecata", "estromessa", "estrusa", "estubata", "esulcerata", "esultata", "esumata", "eterificata", "eterizzata", "eternata", "eternizzata", "etichettata", "etossilata", "euforizzata", "europeizzata", "evacuata", "evangelizzata", "evasa", "eveta", "evidenziata", "evinta", "evirata", "eviscerata", "evitata", "evocata", "evolta", "evoluta", "evulsa", "fabbricata", "faccettata", "facilitata", "fagocitata", "falciata", "falcidiata", "fallita", "falsata", "falsificata", "familiarizzata", "fanatizzata", "fantasticata", "farcita", "farfugliata", "fasciata", "fascicolata", "fascistizzata", "fattacela", "fatta", "fattorizzata", "fatturata", "favellata", "favoreggiata", "favorita", "faxata", "fecondata", "fedecommessa", "federalizzata", "federata", "felicitata", "felpata", "feltrata", "femminilizzata", "fenduta", "ferita", "fermata", "fermentata", "ferrata", "fertilizzata", "fessa", "fessurata", "festeggiata", "festonata", "feudalizzata", "fiaccata", "fiammeggiata", "fiancheggiata", "ficcata", "fidanzata", "fidata", "fidecommessa", "fidelizzata", "figliata", "figurata", "filata", "filettata", "filmata", "filosofata", "filtrata", "finalizzata", "finanziata", "finitala", "finita", "finlandizzata", "fintata", "finta", "fiocinata", "fiondata", "fiorettata", "firmata", "fiscalizzata", "fischiata", "fischiettata", "fissata", "fissionata", "fitta", "fiutata", "flagellata", "flaggata", "flambata", "flangiata", "flemmatizzata", "flessa", "flippata", "flottata", "fluidificata", "fluidizzata", "fluorizzata", "fluorurata", "focalizzata", "focheggiata", "foderata", "foggiata", "fognata", "folgorata", "follata", "fomentata", "fonata", "fondata", "foracchiata", "foraggiata", "forata", "forestata", "forfettizzata", "forgiata", "formalizzata", "formata", "formattata", "formilata", "formulata", "fornita", "fortificata", "forviata", "forwardata", "forzata", "fosfatata", "fosforata", "fosforilata", "fossilizzata", "fotocomposta", "fotocopiata", "fotografata", "fottuta", "fracassata", "fraintesa", "framessa", "frammentata", "frammessa", "frammezzata", "frammischiata", "franceseggiata", "francesizzata", "frangiata", "franta", "frantumata", "frappata", "frapposta", "fraseggiata", "frastagliata", "frastornata", "fratturata", "frazionata", "freddata", "fregata", "fregiata", "frenata", "frequentata", "fresata", "frettata", "friendzonata", "fritta", "frizionata", "frodata", "frollata", "fronteggiata", "frugata", "fruita", "frullata", "frusciata", "frustata", "frustrata", "fruttata", "fucilata", "fucinata", "fugata", "fuggita", "fulminata", "fumata", "fumigata", "funestata", "funta", "funzionata", "fuoriuscita", "fuorviata", "fusa", "fustellata", "fustigata", "gabbata", "gabellata", "gallata", "gallicizzata", "gallonata", "galvanizzata", "gambizzata", "garantita", "garnettata", "garrotata", "garzata", "gasata", "gassata", "gassificata", "gazata", "gelatinizzata", "gelata", "gelificata", "gemellata", "gemicata", "geminata", "generalizzata", "generata", "gentrificata", "genuflessa", "geometrizzata", "georeferenziata", "gerarchizzata", "germanizzata", "gestita", "gettata", "gettonata", "ghermita", "ghettizzata", "ghigliottinata", "ghindata", "gibollata", "gingillata", "ginnata", "giocata", "gioita", "gionglata", "giovaneggiata", "girandolata", "girata", "giudicata", "giulebbata", "giuntata", "giunta", "giuracchiata", "giurata", "giustapposta", "giustificata", "giustiziata", "glamourizzata", "glassata", "glissata", "globalizzata", "gloriata", "glorificata", "glossata", "godronata", "goduta", "goffrata", "gommata", "gonfiata", "googlata", "gottata", "governata", "gradinata", "gradita", "gradualizzata", "graduata", "graffata", "graffiata", "graffita", "graficata", "grafitata", "gramolata", "granagliata", "grandinata", "granellata", "granita", "granulata", "graticciata", "graticolata", "gratificata", "gratinata", "grattata", "grattugiata", "gravata", "graziata", "grecheggiata", "grecizzata", "gremita", "gridata", "griffata", "grigliata", "grippata", "groccata", "grondata", "grugata", "grugnita", "guadagnata", "gualcita", "guardata", "guarita", "guarnita", "guastata", "guatata", "guerreggiata", "gufata", "guidata", "gustata", "hackerata", "handicappata", "ibridata", "idealizzata", "ideata", "identificata", "ideologizzata", "idolatrata", "idoleggiata", "idratata", "idrogenata", "idrolizzata", "iettata", "igienizzata", "ignifugata", "ignorata", "illanguidita", "illeggiadrita", "illividita", "illuminata", "illusa", "illustrata", "imbacuccata", "imbaldanzita", "imballata", "imbalsamata", "imbambolata", "imbandierata", "imbandita", "imbarbarita", "imbarcata", "imbarilata", "imbastardita", "imbastita", "imbattuta", "imbavagliata", "imbeccata", "imbellettata", "imbellita", "imbestialita", "imbestiata", "imbevuta", "imbiaccata", "imbiancata", "imbianchita", "imbibita", "imbiettata", "imbiondita", "imbizzarrita", "imboccata", "imbonita", "imborghesita", "imboscata", "imboschita", "imbottata", "imbottigliata", "imbottita", "imbozzimata", "imbracata", "imbracciata", "imbragata", "imbrancata", "imbrattata", "imbrecciata", "imbrigliata", "imbrillantinata", "imbroccata", "imbrodata", "imbrogliata", "imbronciata", "imbruttita", "imbucata", "imbudellata", "imbullettata", "imbullonata", "imburrata", "imbussolata", "imbustata", "imbutita", "imitata", "immagazzinata", "immaginata", "immalinconita", "immatricolata", "immedesimata", "immersa", "immessa", "immischiata", "immiserita", "immobilizzata", "immolata", "immortalata", "immunizzata", "immusonita", "impaccata", "impacchettata", "impacciata", "impadronita", "impaginata", "impagliata", "impalata", "impalcata", "impallata", "impallinata", "impalmata", "impaludata", "impanata", "impaniata", "impannata", "impantanata", "impaperata", "impapocchiata", "impappinata", "imparentata", "imparruccata", "impartita", "impastata", "impasticcata", "impasticciata", "impastocchiata", "impastoiata", "impataccata", "impattata", "impaurita", "impavesata", "impeciata", "impedicata", "impedita", "impegnata", "impegolata", "impelagata", "impellicciata", "impennacchiata", "impennata", "impensierita", "impepata", "imperlata", "impermalita", "impermeabilizzata", "imperniata", "impersonata", "impersonificata", "impestata", "impetrata", "impiallacciata", "impiantata", "impiastrata", "impiastricciata", "impiccata", "impicciata", "impicciolita", "impiccolita", "impidocchiata", "impiegata", "impietosita", "impietrita", "impigliata", "impigrita", "impilata", "impillaccherata", "impinguata", "impinta", "impinzata", "impiombata", "impipata", "impiumata", "implementata", "implicata", "implorata", "impollinata", "impolpata", "impoltronita", "impolverata", "impomatata", "imporcata", "imporporata", "importata", "importunata", "impossessata", "impossibilitata", "impostata", "imposta", "impratichita", "impregnata", "impresa", "impressionata", "impressa", "imprestata", "impreziosita", "imprigionata", "impromessa", "improntata", "improsciuttita", "impugnata", "impuntita", "impunturata", "impupata", "imputata", "impuzzolentita", "inabilitata", "inabissata", "inacerbita", "inacetita", "inacidita", "inacutita", "inaffiata", "inalata", "inalberata", "inalveata", "inalzata", "inamidata", "inanellata", "inarcata", "inargentata", "inaridita", "inasprita", "inastata", "inattivata", "inaugurata", "incacchiata", "incalcinata", "incalorita", "incalzata", "incamerata", "incamiciata", "incamminata", "incanaglita", "incanalata", "incannata", "incannucciata", "incaponita", "incappottata", "incappucciata", "incaprettata", "incapricciata", "incapsulata", "incarcerata", "incardinata", "incaricata", "incarnata", "incarrozzata", "incartata", "incartocciata", "incartonata", "incasellata", "incasinata", "incassata", "incastellata", "incastonata", "incastrata", "incatenata", "incatramata", "incattivita", "incavata", "incavigliata", "incavolata", "incazzata", "incellofanata", "incendiata", "incenerita", "incensata", "incentivata", "incentrata", "inceppata", "incerata", "incernierata", "incerottata", "incesa", "incettata", "inchiappettata", "inchiavardata", "inchiesta", "inchinata", "inchiodata", "inchiostrata", "incipriata", "incisa", "incistata", "incitata", "inciuccata", "incivilita", "inclinata", "inclusa", "incoccata", "incocciata", "incoiata", "incollata", "incolonnata", "incolpata", "incominciata", "incomodata", "incontrata", "incoraggiata", "incordata", "incornata", "incorniciata", "incoronata", "incorporata", "incotta", "incravattata", "incrementata", "increspata", "incretinita", "incriminata", "incrinata", "incrociata", "incrostata", "incrudelita", "incrudita", "incruscata", "incubata", "inculata", "inculcata", "incuneata", "incuoiata", "incuorata", "incupita", "incuriosita", "incurvata", "incussa", "indagata", "indebitata", "indebolita", "indemaniata", "indennizzata", "indetta", "indicata", "indicizzata", "indignata", "indiretta", "indirizzata", "indispettita", "indisposta", "individualizzata", "individuata", "indolenzita", "indorata", "indossata", "indotta", "indottoma", "indottrinata", "indovinata", "indugiata", "indulta", "indurata", "indurita", "industrializzata", "industriata", "inebetita", "inebriata", "inerita", "inerpicata", "infagottata", "infamata", "infangata", "infarcita", "infarinata", "infastidita", "infatuata", "infeltrita", "inferita", "inferocita", "inferta", "infervorata", "infestata", "infettata", "infeudata", "infiacchita", "infialata", "infialettata", "infiammata", "infiascata", "infibulata", "inficiata", "infilata", "infiltrata", "infilzata", "infingardita", "infinocchiata", "infinta", "infioccata", "infiocchettata", "infiochita", "infiorata", "infirmata", "infischiata", "infissa", "infittita", "inflazionata", "inflessa", "inflitta", "influenzata", "infocata", "infoderata", "infognata", "infoibata", "infoltita", "inforcata", "informatizzata", "informata", "informicolata", "informicolita", "infornaciata", "infornata", "infortunata", "infoscata", "infossata", "infradiciata", "inframessa", "inframezzata", "inframmessa", "inframmezzata", "infrancesata", "infrapposta", "infrascata", "infrattata", "infreddata", "infronzolata", "infuocata", "infurbita", "infuriata", "ingabbiata", "ingaggiata", "ingagliardita", "ingannata", "ingarbugliata", "ingavonata", "ingegnata", "ingegnerizzata", "ingelosita", "ingemmata", "ingenerata", "ingentilita", "ingerita", "ingessata", "inghiaiata", "inghiottita", "inghirlandata", "ingiallita", "ingigantita", "inginocchiata", "ingioiellata", "ingiunta", "ingiuriata", "inglesizzata", "inglobata", "ingoffita", "ingoiata", "ingolfata", "ingollata", "ingolosita", "ingombrata", "ingommata", "ingorgata", "ingozzata", "ingranata", "ingrandita", "ingrassata", "ingraticciata", "ingraticolata", "ingravidata", "ingraziata", "ingraziosita", "ingrigita", "ingrommata", "ingrossata", "ingrullita", "inguaiata", "inguainata", "ingualdrappata", "inguantata", "ingurgitata", "inibita", "iniettata", "inimicata", "inizializzata", "iniziata", "inmillata", "innacquata", "innaffiata", "innalzata", "innamorata", "innastata", "innervata", "innervosita", "innescata", "innestata", "innevata", "innocentata", "innocuizzata", "innovata", "inoculata", "inoltrata", "inondata", "inorgoglita", "inorpellata", "inorridita", "inquadrata", "inquietata", "inquisita", "insabbiata", "insacchettata", "insalata", "insaldata", "insalivata", "insanguinata", "insaponata", "insaporita", "inscatolata", "inscenata", "inscritta", "insecchita", "insediata", "insegnata", "inseguita", "insellata", "inselvatichita", "inserita", "insidiata", "insignita", "insilata", "insinuata", "insolentita", "insonnolita", "insonorizzata", "insordita", "insospettita", "insozzata", "inspessita", "inspirata", "installata", "instaurata", "insterilita", "instillata", "instituita", "instradata", "insudiciata", "insufflata", "insultata", "insuperbita", "intabaccata", "intabarrata", "intaccata", "intagliata", "intarsiata", "intasata", "intascata", "intavolata", "integrata", "intelaiata", "intelata", "intellettualizzata", "intenebrata", "intenerita", "intensificata", "intentata", "intepidita", "intercalata", "intercambiata", "intercettata", "intercisa", "interclusa", "intercollegata", "interconnessa", "interconvertita", "interdetta", "interessata", "interfacciata", "interfogliata", "interfoliata", "interiorizzata", "interlacciata", "interlineata", "intermessa", "intermezzata", "internalizzata", "internata", "internazionalizzata", "interpellata", "interpenetrata", "interpolata", "interposta", "interpretata", "interpunta", "interrata", "interrogata", "interrotta", "intersecata", "intervallata", "intervistata", "intesa", "intessuta", "intestardita", "intestata", "intiepidita", "intimata", "intimidita", "intimorita", "intinta", "intirizzita", "intitolata", "intonacata", "intonata", "intontita", "intorbidata", "intorbidita", "intorpidita", "intortata", "intossicata", "intralciata", "intramessa", "intramezzata", "intrappolata", "intrapresa", "intrattenuta", "intraveduta", "intravista", "intravveduta", "intravvista", "intrecciata", "intricata", "intrigata", "intrinsecata", "intrippata", "intrisa", "introdotta", "introflessa", "introiettata", "introitata", "intromessa", "intronata", "intronizzata", "intruduta", "intrufolata", "intrugliata", "intruppata", "intrusa", "intubata", "intubettata", "intuita", "inumata", "inumidita", "inurbata", "inutilizzata", "invaghita", "invaginata", "invalidata", "invasata", "invasa", "invelenita", "inventariata", "inventata", "invenuta", "inverdita", "invergata", "inverniciata", "investigata", "investita", "invetriata", "inviata", "invidiata", "invigorita", "inviluppata", "invischiata", "invitata", "invocata", "invogliata", "involata", "involgarita", "involtata", "involta", "inzaccherata", "inzeppata", "inzigata", "inzolfata", "inzuccata", "inzuccherata", "inzuppata", "iodurata", "ionizzata", "ipertrofizzata", "ipnotizzata", "ipostatizzata", "ipotecata", "ipotizzata", "iridata", "irradiata", "irraggiata", "irreggimentata", "irretita", "irrigata", "irrigidita", "irrisa", "irritata", "irrobustita", "irrogata", "irrorata", "irrugginita", "irruvidita", "ischeletrita", "iscritta", "islamizzata", "isolata", "isomerizzata", "ispanizzata", "ispessita", "ispezionata", "ispirata", "issata", "istallata", "istanziata", "istaurata", "isterilita", "istigata", "istillata", "istituita", "istituzionalizzata", "istoriata", "istradata", "istruita", "istupidita", "italianeggiata", "italianizzata", "iterata", "iudicata", "killerata", "labbreggiata", "labializzata", "laccata", "lacerata", "laconizzata", "lacrimata", "ladroneggiata", "lagnata", "lagrimata", "laicizzata", "lambiccata", "lambita", "lamentata", "laminata", "lanciata", "lapidata", "lappata", "lardata", "lardellata", "largita", "larvata", "lascata", "lasciata", "lastricata", "latinizzata", "laudata", "laureata", "lavata", "lavorata", "leccata", "legalizzata", "legata", "leggicchiata", "leggiucchiata", "legittimata", "legittimizzata", "legnata", "lemmatizzata", "lenita", "lesinata", "lesionata", "lesa", "lessata", "letta", "levata", "levigata", "liberalizzata", "liberata", "licenziata", "lievitata", "liftata", "lignificata", "limata", "limitata", "linciata", "linearizzata", "lineata", "linkata", "liofilizzata", "liquefatta", "liquidata", "lisata", "lisciata", "lisciviata", "listata", "litografata", "livellata", "lizzata", "lobotomizzata", "localizzata", "locata", "lodata", "logorata", "lordata", "lottata", "lottizzata", "lubrificata", "lucchettata", "lucidata", "lucrata", "lumeggiata", "luppolizzata", "lusingata", "lussata", "lustrata", "macadamizzata", "macchiata", "macchinata", "macellata", "macerata", "maciullata", "maggesata", "maggiorata", "magnata", "magnetizzata", "magnificata", "maiolicata", "maledetta", "malfatta", "malignata", "malmenata", "malmessa", "maltata", "maltrattata", "malveduta", "malversata", "malvista", "malvoluta", "mandata", "mandrinata", "manducata", "maneggiata", "manganata", "manganellata", "mangiata", "mangiucchiata", "manifatturata", "manifestata", "manimessa", "manipolata", "manlevata", "manomessa", "manoscritta", "manovrata", "mansuefatta", "mantecata", "mantenutasa", "mantenuta", "manualizzata", "manutenuta", "mappata", "marcata", "marchiata", "marcita", "marezzata", "marginalizzata", "marginata", "margottata", "marimessa", "marinata", "maritata", "marmorizzata", "marnata", "marocchinata", "martellata", "martellinata", "martirizzata", "martoriata", "mascherata", "maschiata", "maschiettata", "mascolinizzata", "massacrata", "massaggiata", "massellata", "massicciata", "massificata", "massimata", "massimizzata", "mastectomizzata", "masterizzata", "masticata", "masturbata", "matematizzata", "materializzata", "matricolata", "mattonata", "maturata", "mazziata", "mazzolata", "meccanizzata", "medagliata", "mediata", "medicalizzata", "medicata", "meditata", "membrata", "memorizzata", "menata", "mendicata", "menomata", "mentovata", "menzionata", "meravigliata", "mercanteggiata", "mercerizzata", "mercificata", "meriata", "meridionalizzata", "meritata", "merlata", "merlettata", "mersa", "mesciata", "mesciuta", "mescolata", "mescuta", "mesmerizzata", "messaggiata", "messa", "messoca", "mestata", "mesticata", "mestruata", "metabolizzata", "metaforeggiata", "metaforizzata", "metallizzata", "metamorfizzata", "metamorfosata", "metanizzata", "metilata", "metodizzata", "microfilmata", "microfonata", "microminiaturizzata", "micronizzata", "mietuta", "migliorata", "militarizzata", "millantata", "millimetrata", "mimata", "mimeografata", "mimetizzata", "minacciata", "minata", "minchionata", "mineralizzata", "miniata", "miniaturizzata", "minimizzata", "minuita", "minuzzata", "miracolata", "miscelata", "mischiata", "misconosciuta", "missata", "mistificata", "misturata", "misurata", "miticizzata", "mitigata", "mitizzata", "mitragliata", "mitrata", "mixata", "mobiliata", "mobilitata", "mobilizzata", "modanata", "modellata", "modellizzata", "moderata", "modernizzata", "modificata", "modulata", "molata", "molestata", "mollata", "molleggiata", "moltiplicata", "monacata", "mondata", "mondializzata", "monetarizzata", "monetata", "monetizzata", "monitorata", "monitorizzata", "monocromatizzata", "monopolizzata", "monottongata", "montata", "monumentalizzata", "mordenzata", "mordicchiata", "mormorata", "morphata", "morsicata", "morsicchiata", "morsa", "mortasata", "mortificata", "mossa", "mostrata", "motivata", "motorizzata", "motteggiata", "movimentata", "mozzata", "mugolata", "mulcita", "multata", "multiplexata", "mummificata", "municipalizzata", "munita", "munta", "murata", "musata", "musicata", "mussata", "mutata", "mutilata", "mutizzata", "mutuata", "nappata", "narcotizzata", "narrativizzata", "narrata", "nasalizzata", "nascosa", "nascosta", "nastrata", "naturaleggiata", "naturalizzata", "nauseata", "naverata", "navicata", "navigata", "nazificata", "nazionalizzata", "nebulizzata", "necessitata", "necrosata", "necrotizzata", "negativizzata", "negata", "negletta", "negoziata", "negreggiata", "neologizzata", "nerbata", "nericata", "nettata", "neutralizzata", "nevata", "nevicata", "nevischiata", "nevrotizzata", "nichelata", "niellata", "ninfeggiata", "ninnata", "ninnolata", "nitratata", "nitrificata", "nobilitata", "noiata", "noleggiata", "nomata", "nominalizzata", "nominata", "normalizzata", "normata", "notata", "notificata", "notiziata", "notricata", "noverata", "nuclearizzata", "nudricata", "nullificata", "numerata", "numerizzata", "nuotata", "nutrita", "obbiettata", "obbliata", "obbligata", "oberata", "obiettata", "obiettivata", "obiettivizzata", "obiurgata", "obliata", "obliterata", "obnubilata", "occasionata", "occhieggiata", "occidentalizzata", "occisa", "occlusa", "occultata", "occupata", "ocheggiata", "odiata", "odorata", "odorizzata", "offerita", "offerta", "offesa", "officiata", "offiziata", "offuscata", "ofiziata", "oggettivata", "oggettivizzata", "oggettualizzata", "oliata", "olita", "olografata", "oltraggiata", "oltrapassata", "oltrepassata", "omaggiata", "ombrata", "ombreggiata", "omessa", "omogeneizzata", "omogenizzata", "omologata", "ondata", "ondulata", "onestata", "onnubilata", "onorata", "opacata", "opacizzata", "operata", "opinata", "oppiata", "oppignorata", "oppilata", "opposta", "oppressa", "oppugnata", "oprata", "opsonizzata", "optata", "opzionata", "orbitata", "orchestrata", "ordinata", "ordita", "orecchiata", "organata", "organicata", "organizzata", "orgasmata", "orientalizzata", "orientata", "originata", "origliata", "orizzontata", "orlata", "orlettata", "ormata", "ormeggiata", "ornata", "orpellata", "orrata", "orripilata", "ortogonalizzata", "osannata", "osata", "osculata", "oscurata", "ospedalizzata", "ospitata", "osseduta", "ossequiata", "osservata", "ossessionata", "ossidata", "ossificata", "ossitonizzata", "ostacolata", "osteggiata", "ostentata", "ostinata", "ostracizzata", "ostruita", "ottemperata", "ottenebrata", "ottenuta", "ottimalizzata", "ottimata", "ottimizzata", "ottonata", "ottriata", "ottuplicata", "otturata", "ottusa", "ottussa", "ovalizzata", "ovariectomizzata", "ovattata", "overcloccata", "ovrata", "ovviata", "ozieggiata", "ozonizzata", "pacata", "pacciamata", "pacificata", "padroneggiata", "paganizzata", "pagata", "paginata", "palafittata", "palatalizzata", "palata", "palesata", "palettata", "palettizzata", "palificata", "palleggiata", "pallettizzata", "palpata", "palpeggiata", "panata", "panneggiata", "panoramicata", "pappata", "paracadutata", "parafata", "paraffinata", "parafrasata", "paragonata", "paragrafata", "paralizzata", "parallelizzata", "parametrata", "parametrizzata", "parassitata", "parata", "parcata", "parcellizzata", "parcheggiata", "pareggiata", "parificata", "parkerizzata", "parlata", "parlucchiata", "parodiata", "partecipata", "particolareggiata", "particolarizzata", "partizionata", "partorita", "parzializzata", "pasciuta", "pascolata", "passata", "passeggiata", "passionata", "passivata", "pasticciata", "pastorizzata", "pasturata", "patinata", "patita", "patrocinata", "patteggiata", "pattugliata", "pattuita", "paventata", "pavesata", "pavimentata", "pavoneggiata", "pazziata", "pedinata", "pedonalizzata", "peggiorata", "pelata", "pellettizzata", "penalizzata", "penetrata", "pennellata", "pensata", "pensionata", "pentita", "pepata", "peptonizzata", "peragrata", "percentualizzata", "percepita", "percolata", "percorsa", "percossa", "perdonata", "perdotta", "perduta", "perequata", "perfatta", "perfezionata", "perforata", "performata", "perita", "periziata", "perlustrata", "permeata", "permessa", "perorata", "perpetrata", "perpetuata", "perplimuta", "perquisita", "perscrutata", "perseguitata", "perseguita", "persa", "personalizzata", "personificata", "persuasa", "perturbata", "pervasa", "pervertita", "pesata", "pescata", "pestata", "petrarcheggiata", "pettegolata", "pettinata", "piagata", "piaggiata", "piallata", "pianeggiata", "pianificata", "piantata", "piantatala", "piantata", "pianta", "piantonata", "piantumata", "piastrellata", "piatita", "piazzata", "picchettata", "picchiata", "picchierellata", "picchiettata", "picconata", "piegata", "pieghettata", "pietrificata", "pigiata", "pigliata", "pigmentata", "pignorata", "pigolata", "pilotata", "pimentata", "pinta", "pinzata", "piombata", "piovigginata", "piovuta", "pipata", "pippata", "piratata", "pirogenata", "pisciata", "pitoccata", "pittata", "pitturata", "pizzicata", "pizzicottata", "placata", "placcata", "plagiata", "plasmata", "plasticata", "plastificata", "platinata", "plissettata", "pluralizzata", "poetata", "poeticizzata", "poggiata", "polarizzata", "poligrafata", "polimerizzata", "politicizzata", "polverizzata", "pomiciata", "pompata", "ponderata", "ponzata", "popolarizzata", "popolata", "poppata", "porcellanata", "porfirizzata", "portata", "portesa", "porta", "porzionata", "posata", "posdatata", "positivizzata", "posizionata", "posposta", "posseduta", "postata", "postdatata", "posteggiata", "posticipata", "postillata", "posta", "postsincronizzata", "postulata", "potabilizzata", "potata", "potenziata", "potuta", "pralinata", "praticata", "preaccennata", "preannunciata", "preannunziata", "preavvertita", "preavvisata", "precaricata", "preceduta", "precettata", "precinta", "precisata", "preclusa", "precompilata", "precompressa", "preconfezionata", "preconizzata", "preconosciuta", "precorsa", "precostituita", "predata", "predefinita", "predestinata", "predeterminata", "predetta", "predicata", "predigerita", "prediletta", "predisposta", "preeletta", "preesistuta", "prefabbricata", "prefata", "prefatta", "prefazionata", "preferita", "prefigurata", "prefinanziata", "prefissata", "prefissa", "preformata", "pregata", "pregiata", "pregiudicata", "pregustata", "preimpregnata", "prelevata", "premeditata", "premescolata", "premessa", "premiata", "premonita", "premunita", "premurata", "premuta", "prenotata", "preoccupata", "preordinata", "preparata", "prepensionata", "prepigmentata", "preposta", "preprogrammata", "preraffreddata", "prerefrigerata", "preregistrata", "preregolata", "preriscaldata", "presa", "presagita", "presaputa", "presasela", "prescelta", "prescritta", "preseduta", "presegnalata", "preselezionata", "presentata", "presentita", "preservata", "presidiata", "presieduta", "presa", "pressata", "pressa", "pressurizzata", "prestabilita", "prestampata", "prestata", "prestigiata", "presunta", "presupposta", "pretermessa", "pretesa", "pretrattata", "prevaricata", "preveduta", "prevenduta", "preventivata", "prevenuta", "prevista", "prezzata", "prezzolata", "principiata", "privatizzata", "privata", "privilegiata", "problematizzata", "procacciata", "processata", "proclamata", "procrastinata", "procreata", "procurata", "prodigata", "prodotta", "profanata", "proferita", "professata", "professionalizzata", "profetata", "profetizzata", "profferita", "profilata", "profondata", "profumata", "profusa", "progettata", "prognosticata", "programmata", "proibita", "proiettata", "proletarizzata", "prolungata", "promanata", "promessa", "promossa", "promozionata", "promulgata", "pronosticata", "pronunciata", "pronunziata", "propagandata", "propagata", "propagginata", "propalata", "propinata", "propiziata", "proporzionata", "proposta", "propugnata", "propulsa", "prorogata", "prosciolta", "prosciugata", "proscritta", "proseguita", "prospettata", "prosternata", "prostesa", "prostituita", "prostrata", "prosunta", "protesa", "protestata", "protetta", "protocollata", "protonata", "protratta", "protrusa", "provata", "proveduta", "provincializzata", "provista", "provocata", "provveduta", "provvista", "psicanalizzata", "psichiatrizzata", "psicoanalizzata", "psicologizzata", "pubblicata", "pubblicizzata", "puddellata", "pugnalata", "pulita", "pungolata", "punita", "puntata", "punteggiata", "puntellata", "punta", "puntualizzata", "punzecchiata", "punzonata", "purgata", "purificata", "putita", "putrefatta", "putrita", "quadrata", "quadrettata", "quadriennalizzata", "quadruplicata", "qualificata", "quantificata", "quantizzata", "querelata", "questuata", "quetata", "quietanzata", "quietata", "quintessenziata", "quintuplicata", "quotata", "quotizzata", "rabberciata", "rabboccata", "rabbonita", "rabbuffata", "rabuffata", "raccapezzata", "raccapricciata", "raccattata", "raccerchiata", "raccesa", "racchetata", "racchiusa", "raccolta", "raccolta", "raccomandata", "raccomodata", "raccontata", "raccorciata", "raccorcita", "raccordata", "raccostata", "raccozzata", "racemizzata", "racimolata", "radazzata", "raddensata", "raddobbata", "raddolcita", "raddoppiata", "raddotta", "raddrizzata", "radiata", "radicalizzata", "radioassistita", "radioattivata", "radiocomandata", "radiodiffusa", "radiografata", "radioguidata", "radiolocalizzata", "radiomarcata", "radiotelegrafata", "radiotrasmessa", "radunata", "raffazzonata", "raffermata", "raffigurata", "raffilata", "raffinata", "rafforzata", "raffreddata", "raffrenata", "raffrescata", "raffrontata", "raggelata", "raggentilita", "ragghiata", "raggirata", "raggiunta", "raggiustata", "raggomitolata", "raggranchiata", "raggranchita", "raggranellata", "raggrinzata", "raggrinzita", "raggrumata", "raggruppata", "raggruzzolata", "ragguagliata", "ralingata", "rallegrata", "rallentata", "ramata", "ramazzata", "rammagliata", "rammaricata", "rammemorata", "rammendata", "rammentata", "rammodernata", "rammollita", "rammorbidita", "rampognata", "randellata", "randomizzata", "rannicchiata", "rannuvolata", "ranzata", "rapata", "rapinata", "rapita", "rappacificata", "rappata", "rappattumata", "rappezzata", "rapportata", "rappresantata", "rappresentata", "rappresa", "rarefatta", "rasata", "raschiata", "raschiettata", "rasentata", "rasa", "raspata", "rassegnata", "rasserenata", "rassettata", "rassicurata", "rassodata", "rassomigliata", "rassottigliata", "rassunta", "rastrellata", "rastremata", "rateata", "rateizzata", "ratificata", "ratinata", "rattizzata", "rattoppata", "rattorta", "rattrappita", "rattristata", "rattristita", "raunata", "ravvalorata", "ravveduta", "ravviata", "ravvicinata", "ravviluppata", "ravvisata", "ravvista", "ravvivata", "ravvolta", "ravvoltolata", "razionalizzata", "razionata", "razziata", "razzolata", "realizzata", "reassunta", "recapitata", "recata", "receduta", "recensita", "recepita", "recidivata", "recintata", "recinta", "reciprocata", "recisa", "recitata", "reclamata", "reclamizzata", "reclinata", "reclusa", "reclutata", "recuperata", "redarguita", "redatta", "redazzata", "redduta", "redenta", "redistribuita", "redotta", "referenziata", "refertata", "refilata", "reflessa", "reflettuta", "refranta", "refrigerata", "regalata", "regimata", "regimentata", "regionalizzata", "registrata", "regolamentata", "regolarizzata", "regolata", "reidratata", "reificata", "reimbarcata", "reimmersa", "reimmessa", "reimparata", "reimpastata", "reimpiantata", "reimpiegata", "reimportata", "reimpostata", "reincarcerata", "reincaricata", "reincarnata", "reincisa", "reincontrata", "reindirizzata", "reindustrializzata", "reinfettata", "reingaggiata", "reinizializzata", "reinnestata", "reinoltrata", "reinscritta", "reinsediata", "reinserita", "reinstallata", "reinstaurata", "reintegrata", "reinterpretata", "reintitolata", "reintrodotta", "reinventata", "reinvestita", "reiterata", "relativizzata", "relazionata", "relegata", "remixata", "remunerata", "renderizzata", "reperita", "repertata", "replicata", "repressa", "repulsa", "reputata", "requisita", "rescissa", "resecata", "resettata", "residuata", "resinificata", "resa", "resolata", "resolta", "respinta", "respirata", "responsabilizzata", "resposta", "restaurata", "restituita", "resunta", "resuscitata", "reticolata", "retinata", "retribuita", "retroceduta", "retrocessa", "retrodatata", "rettificata", "retta", "reumatizzata", "revisionata", "revocata", "riabbassata", "riabbellita", "riabbonata", "riabbottonata", "riabbracciata", "riabilitata", "riabitata", "riabituata", "riaccaduta", "riaccasata", "riaccesa", "riaccettata", "riacchiappata", "riacciuffata", "riaccolta", "riaccomodata", "riaccompagnata", "riaccordata", "riaccostata", "riaccreditata", "riacquisita", "riacquistata", "riacutizzata", "riadattata", "riaddestrata", "riaddormentata", "riadoperata", "riaffacciata", "riaffermata", "riafferrata", "riaffiorata", "riaffittata", "riaffrontata", "riagganciata", "riaggiornata", "riaggiustata", "riaggravata", "riaggregata", "riagguantata", "rialimentata", "riallacciata", "riallargata", "riallineata", "riallocata", "riallungata", "rialzata", "riamata", "riambientata", "riammalata", "riammessa", "riammodernata", "riammogliata", "rianimata", "riannessa", "riannodata", "riannunciata", "riaperta", "riappacificata", "riappaltata", "riapparecchiata", "riapparita", "riappesa", "riappiccicata", "riapplicata", "riappresa", "riapprodata", "riappropriata", "riapprovata", "riarmata", "riarrangiata", "riarredata", "riascoltata", "riasfaltata", "riassalita", "riassaporata", "riassegnata", "riassemblata", "riassestata", "riassettata", "riassicurata", "riassociata", "riassopita", "riassorbita", "riassunta", "riattaccata", "riattata", "riattesa", "riattinta", "riattivata", "riattizzata", "riattraversata", "riaumentata", "riavuta", "riavventata", "riavvertita", "riavviata", "riavvicinata", "riavvinta", "riavvisata", "riavvistata", "riavvolta", "riazzuffata", "ribaciata", "ribadita", "ribaltata", "ribassata", "ribattezzata", "ribattuta", "ribellata", "ribenedetta", "ribevuta", "ributtata", "ricacciata", "ricalata", "ricalcata", "ricalcificata", "ricalcitrata", "ricalcolata", "ricalibrata", "ricamata", "ricambiata", "ricanalizzata", "ricandidata", "ricantata", "ricapitalizzata", "ricapitolata", "ricaricata", "ricategorizzata", "ricattata", "ricavata", "ricelebrata", "ricercata", "ricetrasmessa", "ricettata", "ricevuta", "richiamata", "richiesta", "richiusa", "riciclata", "ricinta", "ricircolata", "riclassificata", "ricodificata", "ricollegata", "ricollocata", "ricolmata", "ricolonizzata", "ricolorata", "ricolorita", "ricoltivata", "ricombinata", "ricominciata", "ricommessa", "ricomparita", "ricompattata", "ricompensata", "ricomperata", "ricompilata", "ricompiuta", "ricomposta", "ricomprata", "ricompressa", "ricomunicata", "riconceduta", "riconcessa", "riconciliata", "ricondizionata", "ricondotta", "riconfermata", "riconfezionata", "riconfigurata", "riconfortata", "riconfusa", "ricongelata", "ricongiunta", "riconnessa", "riconosciuta", "riconquistata", "riconsacrata", "riconsegnata", "riconsiderata", "riconsigliata", "riconsolata", "ricontata", "ricontattata", "ricontrattata", "ricontratta", "ricontrollata", "riconvalidata", "riconvenuta", "riconvertita", "riconvinta", "riconvocata", "riconvogliata", "ricoperta", "ricopiata", "ricordata", "ricoricata", "ricorretta", "ricosparsa", "ricostituita", "ricostretta", "ricostruita", "ricotta", "ricoverata", "ricreata", "ricristallizzata", "ricrocifissa", "ricucita", "ricuperata", "ricusata", "ridata", "ridecorata", "ridefinita", "ridenominata", "ridestata", "rideterminata", "ridetta", "ridicolizzata", "ridigitata", "ridimensionata", "ridipinta", "ridiscesa", "ridisciolta", "ridisciplinata", "ridiscussa", "ridisegnata", "ridisfatta", "ridisposta", "ridistesa", "ridistinta", "ridistribuita", "ridivisa", "ridomandata", "ridonata", "ridondata", "ridorata", "ridotata", "ridotta", "ridovuta", "riecheggiata", "riedificata", "rieducata", "rielaborata", "rieletta", "riemessa", "riempita", "riempiuta", "rientrata", "riepilogata", "riequilibrata", "riequipaggiata", "riesaminata", "rieseguita", "riesercitata", "riesplosa", "riesportata", "riesposta", "riespressa", "riespulsa", "riestesa", "riesumata", "rietichettata", "rievaporata", "rievocata", "rifabbricata", "rifasciata", "rifatta", "rifenduta", "riferita", "rifermata", "rifermentata", "rifessa", "rificcata", "rifilata", "rifiltrata", "rifinanziata", "rifinita", "rifirmata", "rifischiata", "rifissa", "rifiutata", "riflessa", "riflettuta", "rifocillata", "rifoderata", "rifondata", "riforestata", "riforgiata", "riformata", "riformattata", "riformulata", "rifornita", "rifranta", "rifritta", "rifrugata", "rifuggita", "rifugiata", "rifusa", "rigassificata", "rigata", "rigelata", "rigenerata", "rigettata", "righettata", "rigiocata", "rigirata", "rigiudicata", "rigiunta", "rigoduta", "rigonfiata", "rigovernata", "riguadagnata", "riguardata", "rigurgitata", "rilanciata", "rilasciata", "rilassata", "rilavata", "rilavorata", "rilegata", "riletta", "rilevata", "rilocalizzata", "rimagliata", "rimandata", "rimaneggiata", "rimangiata", "rimappata", "rimarcata", "rimarchiata", "rimarginata", "rimaritata", "rimasticata", "rimata", "rimbacuccata", "rimbaldanzita", "rimbarcata", "rimbeccata", "rimbecillita", "rimbellita", "rimbiancata", "rimbiondita", "rimboccata", "rimbombata", "rimborsata", "rimboscata", "rimboschita", "rimbrottata", "rimediata", "rimembrata", "rimemorata", "rimenata", "rimeritata", "rimescolata", "rimessa", "rimestata", "rimilitarizzata", "rimirata", "rimischiata", "rimisurata", "rimodellata", "rimodernata", "rimodulata", "rimondata", "rimontata", "rimorchiata", "rimorsa", "rimossa", "rimostrata", "rimotivata", "rimpacchettata", "rimpadronita", "rimpaginata", "rimpagliata", "rimpannucciata", "rimpastata", "rimpatriata", "rimpiallacciata", "rimpianta", "rimpiattata", "rimpiazzata", "rimpicciolita", "rimpiccolita", "rimpiegata", "rimpinguata", "rimpinzata", "rimpolpata", "rimpossessata", "rimpressa", "rimproverata", "rimuginata", "rimunerata", "rimunta", "rimusicata", "rimutata", "rinarrata", "rinascosta", "rincalcata", "rincalzata", "rincamminata", "rincantucciata", "rincarata", "rincarcerata", "rincarnata", "rincentrata", "rinchiesta", "rinchiodata", "rinchiusa", "rincitrullita", "rincivilita", "rincoglionita", "rincollata", "rincominciata", "rincontrata", "rincoraggiata", "rincorata", "rincorporata", "rincorsa", "rincretinita", "rincrudita", "rinculcata", "rincuorata", "rindossata", "rindurita", "rinegoziata", "rinfacciata", "rinfagottata", "rinfiammata", "rinfiancata", "rinfilata", "rinfittita", "rinfocolata", "rinfoderata", "rinforzata", "rinfrancata", "rinfranta", "rinfrescata", "rinfusa", "ringagliardita", "ringalluzzita", "ringiovanita", "ringiovenita", "ringoiata", "ringorgata", "ringraziata", "ringuainata", "rinnamorata", "rinnegata", "rinnestata", "rinnovata", "rinnovellata", "rinociuta", "rinomata", "rinominata", "rinormalizzata", "rinquadrata", "rinsaccata", "rinsaldata", "rinsanguata", "rinselvatichita", "rinselvata", "rinserrata", "rintanata", "rintasata", "rintascata", "rintavolata", "rintenerita", "rinterrata", "rinterrogata", "rintesa", "rintiepidita", "rintoccata", "rintonacata", "rintontita", "rintorpidita", "rintracciata", "rintrodotta", "rintronata", "rintuzzata", "rinunciata", "rinunziata", "rinutrita", "rinvangata", "rinvasata", "rinvenuta", "rinverdita", "rinvestita", "rinviata", "rinvigorita", "rinvilita", "rinvitata", "rinvoltata", "rinvolta", "rinvoltolata", "rinzaffata", "rinzeppata", "riobbligata", "rioccupata", "riofferta", "rioffesa", "rioperata", "riordinata", "riorganizzata", "riorientata", "riosservata", "riottenuta", "riottimizzata", "riotturata", "ripagata", "riparametrizzata", "riparata", "ripartita", "ripassata", "ripercorsa", "ripercossa", "riperduta", "ripersa", "ripesata", "ripescata", "ripestata", "ripetuta", "ripianata", "ripianificata", "ripiantata", "ripianta", "ripicchiata", "ripiegata", "ripigliata", "ripinta", "ripiovuta", "ripitturata", "riplasmata", "ripolarizzata", "ripopolata", "riportata", "riporta", "riposata", "riposizionata", "riposseduta", "riposta", "ripotuta", "ripresentata", "ripresa", "riprestata", "ripretesa", "riprincipiata", "ripristinata", "riprivatizzata", "riprodotta", "riprogettata", "riprogrammata", "ripromessa", "riproposta", "riprotetta", "riprovata", "riprovveduta", "riprovvista", "ripubblicata", "ripudiata", "ripugnata", "ripulita", "ripuntata", "ripunta", "ripurgata", "riputata", "riquadrata", "riqualificata", "riresa", "rirotta", "risaldata", "risalita", "risaltata", "risalutata", "risanata", "risaputa", "risarcita", "riscalata", "riscaldata", "riscattata", "riscelta", "riscesa", "rischiarata", "rischiata", "risciacquata", "risciolta", "riscommessa", "riscontata", "riscontrata", "risconvolta", "riscoperta", "riscoppiata", "riscorsa", "riscossa", "riscritta", "risecata", "riseduta", "risegata", "risegnata", "riselciata", "riselezionata", "riseminata", "risentita", "riseppellita", "riserbata", "riservata", "risicata", "risigillata", "risistemata", "risa", "risoffiata", "risoggiunta", "risolata", "risolidificata", "risollevata", "risolta", "risommata", "risommersa", "risonata", "risorpassata", "risospesa", "risospinta", "risottomessa", "risparmiata", "risparsa", "rispecchiata", "rispedita", "rispenta", "rispersa", "rispettata", "rispiegata", "rispinta", "rispolverata", "risposata", "risposta", "rissata", "ristabilita", "ristagnata", "ristampata", "ristaurata", "ristesa", "ristilizzata", "ristorata", "ristretta", "ristrutta", "ristrutturata", "ristuccata", "ristudiata", "risucchiata", "risultata", "risuolata", "risuonata", "risuscitata", "risvegliata", "risvolta", "ritagliata", "ritarata", "ritardata", "ritemprata", "ritentata", "ritenuta", "ritersa", "ritesa", "ritinta", "ritirata", "ritoccata", "ritolta", "ritorta", "ritracciata", "ritradotta", "ritrascorsa", "ritrascritta", "ritrasferita", "ritrasformata", "ritrasmessa", "ritrasposta", "ritrattata", "ritratta", "ritrovata", "ritualizzata", "rituffata", "riudita", "riunificata", "riunita", "riusata", "riutilizzata", "rivaccinata", "rivaleggiata", "rivalorizzata", "rivalsa", "rivalutata", "rivangata", "riveduta", "rivelata", "rivendicata", "rivenduta", "riverberata", "riverita", "riverniciata", "riversata", "rivestita", "rivettata", "rivinta", "rivisitata", "rivissuta", "rivista", "rivitalizzata", "rivivificata", "rivoltata", "rivolta", "rivoltolata", "rivoluta", "rivoluzionata", "rizappata", "rizzata", "robotizzata", "rodata", "rogata", "rollata", "romanizzata", "romanticizzata", "romanzata", "roncolata", "rosicata", "rosicchiata", "rosa", "rosolata", "rotacizzata", "rotata", "roteata", "rotolata", "rottamata", "rotta", "rovesciata", "rovinata", "rovistata", "rubacchiata", "rubata", "rullata", "ruminata", "ruotata", "russificata", "ruzzolata", "sabbiata", "sabotata", "saccarificata", "saccheggiata", "sacralizzata", "sacramentata", "sacrificata", "saettata", "saggiata", "sagginata", "sagomata", "salamoiata", "salariata", "salassata", "salata", "saldata", "salificata", "salinizzata", "salita", "salmeggiata", "salmistrata", "salpata", "saltata", "salutata", "salvaguardata", "salvata", "sanata", "sancita", "sanforizzata", "sanificata", "sanitizzata", "santificata", "sanzionata", "saponificata", "saputa", "sarchiata", "sarchiellata", "sartiata", "satellizzata", "satinata", "satireggiata", "satisfatta", "satollata", "saturata", "saziata", "sbaccellata", "sbaciucchiata", "sbafata", "sbaffata", "sbalestrata", "sballata", "sballottata", "sballottolata", "sbalordita", "sbalzata", "sbancata", "sbandata", "sbandierata", "sbandita", "sbaraccata", "sbaragliata", "sbarazzata", "sbarbata", "sbarcata", "sbardata", "sbarrata", "sbassata", "sbastita", "sbatacchiata", "sbattezzata", "sbattuta", "sbeccata", "sbeffeggiata", "sbellicata", "sbendata", "sbertucciata", "sbiadita", "sbiancata", "sbianchita", "sbiellata", "sbiettata", "sbigottita", "sbilanciata", "sbirbata", "sbirciata", "sbizzarrita", "sbloccata", "sbobinata", "sboccata", "sbocconcellata", "sbollentata", "sbolognata", "sborniata", "sborsata", "sboscata", "sbottonata", "sbozzata", "sbozzimata", "sbozzolata", "sbracata", "sbracciata", "sbraciata", "sbraitata", "sbranata", "sbrancata", "sbrattata", "sbreccata", "sbriciolata", "sbrigata", "sbrigliata", "sbrinata", "sbrindellata", "sbrodolata", "sbrogliata", "sbronzata", "sbruffata", "sbucciata", "sbudellata", "sbuffata", "sbugiardata", "sbullettata", "sbullonata", "sburrata", "scacazzata", "scacchiata", "scacciata", "scaccolata", "scadenzata", "scafata", "scaffalata", "scagionata", "scagliata", "scaglionata", "scalata", "scalcata", "scalcinata", "scaldata", "scalettata", "scalfata", "scalfita", "scalmanata", "scaloppata", "scalpata", "scalpellata", "scalpellinata", "scaltrita", "scalzata", "scambiata", "scamiciata", "scamosciata", "scamozzata", "scampata", "scampatala", "scampata", "scamuffata", "scanalata", "scancellata", "scandagliata", "scandalizzata", "scandita", "scannata", "scannellata", "scannerata", "scannerizata", "scannerizzata", "scansata", "scansionata", "scapecchiata", "scapezzata", "scapicollata", "scapigliata", "scapitozzata", "scapocchiata", "scappata", "scappellata", "scappottata", "scapricciata", "scapsulata", "scarabocchiata", "scaracchiata", "scaraventata", "scarcerata", "scardassata", "scardata", "scardinata", "scaricata", "scarificata", "scarmigliata", "scarnata", "scarnificata", "scarnita", "scarrellata", "scarrocciata", "scarrozzata", "scarruffata", "scartabellata", "scartata", "scartavetrata", "scartinata", "scartocciata", "scassata", "scassinata", "scatenata", "scattata", "scavalcata", "scavallata", "scavata", "scavezzata", "scazzottata", "scekerata", "scelta", "scempiata", "sceneggiata", "scernuta", "scervellata", "scesa", "sceverata", "schedata", "schedulata", "scheggiata", "scheletrita", "schematizzata", "schermata", "schermita", "schermografata", "schernita", "schiacciata", "schiaffata", "schiaffeggiata", "schiantata", "schiarita", "schiavardata", "schiavizzata", "schiccherata", "schierata", "schifata", "schinciata", "schioccata", "schiodata", "schiumata", "schiusa", "schivata", "schizzata", "schizzettata", "sciabolata", "sciabordata", "sciacquata", "scialacquata", "sciamanizzata", "sciamannata", "sciancata", "sciancrata", "scimmieggiata", "scimmiottata", "scinta", "scioccata", "sciolinata", "sciolta", "sciorinata", "scippata", "sciroppata", "scissa", "sciupacchiata", "sciupata", "sclamata", "sclerosata", "sclerotizzata", "scoccata", "scocciata", "scodata", "scodellata", "scoiata", "scolarizzata", "scolata", "scollacciata", "scollata", "scollegata", "scolorata", "scolorita", "scolpata", "scolpita", "scombaciata", "scombinata", "scombussolata", "scommessa", "scomodata", "scompaginata", "scompagnata", "scompartita", "scompattata", "scompensata", "scompiacuta", "scompigliata", "scomposta", "scomputata", "scomunicata", "sconcertata", "sconciata", "sconclusa", "sconfessata", "sconficcata", "sconﬁtta", "sconfortata", "sconfusa", "scongelata", "scongiurata", "sconnessa", "sconosciuta", "sconquassata", "sconsacrata", "sconsigliata", "sconsolata", "scontata", "scontentata", "scontornata", "scontorta", "scontrata", "sconvolta", "scopata", "scoperchiata", "scoperta", "scopiazzata", "scoraggiata", "scoraggita", "scorata", "scorazzata", "scorciata", "scorcita", "scordata", "scoreggiata", "scorificata", "scornata", "scorniciata", "scoronata", "scorporata", "scorrazzata", "scorreggiata", "scorretta", "scorsa", "scortata", "scortecciata", "scorticata", "scorta", "scorzata", "scoscesa", "scosciata", "scossa", "scostata", "scostolata", "scotennata", "scoticata", "scotolata", "scotomizzata", "scottata", "scotta", "scovata", "scoverta", "scozzata", "scozzonata", "screditata", "scremata", "screpolata", "screziata", "scribacchiata", "scriminata", "scristianizzata", "scritta", "scritturata", "scroccata", "scrocchiata", "scrollata", "scrostata", "scrutata", "scrutinata", "scucita", "scudisciata", "scuffiata", "sculacciata", "sculettata", "scuoiata", "scuriosata", "scurita", "scusata", "sdaziata", "sdebitata", "sdegnata", "sdemanializzata", "sdentata", "sdilinquita", "sdoganata", "sdoluta", "sdoppiata", "sdraiata", "sdrammatizzata", "sdrucita", "secata", "seccata", "secernuta", "secolarizzata", "secondata", "secretata", "secreta", "sedata", "sedentarizzata", "sedotta", "segata", "seghettata", "segmentata", "segnalata", "segnata", "segnoreggiata", "segregata", "segretata", "seguitata", "seguita", "selciata", "selezionata", "sellata", "sembrata", "sementata", "semicinta", "seminata", "semplificata", "senilizzata", "sensibilizzata", "sensorizzata", "sentenziata", "sentita", "sentitasela", "sentita", "sentita", "separata", "sepolta", "seppellita", "sequenziata", "sequestrata", "serbata", "serrata", "servita", "servoassistita", "sessualizzata", "sestuplicata", "setacciata", "setificata", "settata", "settorializzata", "settuplicata", "seviziata", "sezionata", "sfaccettata", "sfagliata", "sfaldata", "sfalsata", "sfamata", "sfanalata", "sfangata", "sfarinata", "sfasata", "sfasciata", "sfatata", "sfatta", "sfavillata", "sfavorita", "sfegatata", "sfeltrata", "sfenduta", "sferragliata", "sferrata", "sferzata", "sfessa", "sfiancata", "sfiatata", "sfiata", "sfibbiata", "sfibrata", "sfidata", "sfiduciata", "sfigurata", "sfilata", "sfilettata", "sfinita", "sfioccata", "sfiorata", "sfittata", "sfocata", "sfociata", "sfoderata", "sfogata", "sfoggiata", "sfogliata", "sfollata", "sfoltita", "sfondata", "sforacchiata", "sforata", "sforbiciata", "sformata", "sfornaciata", "sfornata", "sfornita", "sforzata", "sfottuta", "sfracellata", "sfrangiata", "sfrascata", "sfratata", "sfrattata", "sfrecciata", "sfregata", "sfregiata", "sfrenata", "sfrisata", "sfrondata", "sfrucugliata", "sfruculiata", "sfruttata", "sfumata", "sfuocata", "sgamata", "sganasciata", "sganciata", "sgarbugliata", "sgattaiolata", "sgelata", "sghiacciata", "sgocciolata", "sgolata", "sgomberata", "sgombrata", "sgomentata", "sgominata", "sgomitata", "sgomitolata", "sgonfiata", "sgorbiata", "sgottata", "sgovernata", "sgozzata", "sgraffiata", "sgraffignata", "sgranata", "sgranchita", "sgranellata", "sgrassata", "sgravata", "sgretolata", "sgridata", "sgrommata", "sgrondata", "sgroppata", "sgrossata", "sgrovigliata", "sgrugnata", "sguainata", "sgualcita", "sguanciata", "sguarnita", "sguinzagliata", "sgusciata", "shakerata", "shoccata", "shuntata", "sigillata", "siglata", "significata", "signoreggiata", "silenziata", "silicizzata", "sillabata", "sillogizzata", "silurata", "simboleggiata", "simbolizzata", "simmetrizzata", "simpatizzata", "simulata", "sincerata", "sincopata", "sincretizzata", "sincronizzata", "sindacalizzata", "sindacata", "singolarizzata", "sinistrata", "sinizzata", "sinterizzata", "sintetizzata", "sintonizzata", "siringata", "sistematizzata", "sistemata", "situata", "slabbrata", "slacciata", "slamata", "slanciata", "slappolata", "slargata", "slavizzata", "slegata", "slentata", "slinguata", "slogata", "sloggata", "sloggiata", "slombata", "slungata", "smaccata", "smacchiata", "smagliata", "smagnetizzata", "smagrita", "smaliziata", "smallata", "smaltata", "smaltita", "smammata", "smanacciata", "smangiata", "smantellata", "smarcata", "smarginata", "smarrita", "smascellata", "smascherata", "smaterializzata", "smattonata", "smembrata", "smentita", "smerciata", "smerdata", "smerigliata", "smerlata", "smerlettata", "smessala", "smessa", "smezzata", "smidollata", "smielata", "smilitarizzata", "sminata", "sminuita", "sminuzzata", "smistata", "smitizzata", "smobiliata", "smobilitata", "smobilizzata", "smoccolata", "smollicata", "smonacata", "smontata", "smorbata", "smorzata", "smossa", "smozzicata", "smunta", "smurata", "smussata", "smutandata", "snaturata", "snazionalizzata", "snebbiata", "snellita", "snervata", "snidata", "sniffata", "snobbata", "snocciolata", "snodata", "snudata", "sobbarcata", "sobbollita", "sobillata", "socchiusa", "soccorsa", "soddisfatta", "sodisfatta", "sodomizzata", "sofferita", "soffermata", "sofferta", "soffiata", "soffocata", "soffregata", "soffritta", "soffusa", "sofisticata", "soggettivata", "soggettivizzata", "sogghignata", "soggiogata", "soggiunta", "sogguardata", "sognata", "solarizzata", "solcata", "soleggiata", "solennizzata", "solfeggiata", "solfitata", "solfonata", "solforata", "solidificata", "solita", "sollazzata", "sollecitata", "solleticata", "sollevata", "solta", "solubilizzata", "soluta", "soluzionata", "solvatata", "somatizzata", "someggiata", "somigliata", "sommata", "sommersa", "sommessa", "somministrata", "sommossa", "sonata", "sondata", "sonorizzata", "sopita", "soppalcata", "soppesata", "soppiantata", "sopportata", "sopposta", "soppressa", "sopraddotata", "sopraeccitata", "sopraedificata", "sopraelevata", "sopraffata", "sopraffatta", "sopraggiunta", "sopraintesa", "soprammessa", "soprannominata", "sopraposta", "soprappresa", "soprascritta", "sopraspesa", "soprassaturata", "soprasseduta", "sopravanzata", "sopravvalutata", "sopravveduta", "sopravvinta", "sopravvista", "sopreccitata", "sopredificata", "soprelevata", "soprintesa", "sorbettata", "sorbita", "sorgiunta", "sormontata", "sorpassata", "sorpresa", "sorrasa", "sorretta", "sorseggiata", "sorteggiata", "sortita", "sorvegliata", "sorvolata", "soscritta", "sospesa", "sospettata", "sospinta", "sospirata", "sostantivata", "sostanziata", "sostentata", "sostenuta", "sostituita", "sottaciuta", "sotterrata", "sottesa", "sottintesa", "sottoalimentata", "sottocapitalizzata", "sottodivisa", "sottoesposta", "sottofirmata", "sottolineata", "sottomessa", "sottomurata", "sottopagata", "sottopassata", "sottoposta", "sottorappresentata", "sottorisa", "sottoscritta", "sottostimata", "sottosviluppata", "sottotitolata", "sottovalutata", "sottratta", "soverchiata", "sovesciata", "sovietizzata", "sovracapitalizzata", "sovraccaricata", "sovradimensionata", "sovraeccitata", "sovraesposta", "sovraffaticata", "sovraffollata", "sovraggiunta", "sovraimposta", "sovraintesa", "sovralimentata", "sovramodulata", "sovrappopolata", "sovrapposta", "sovrariscaldata", "sovrasaturata", "sovrascritta", "sovrastampata", "sovrastata", "sovrastimata", "sovrautilizzata", "sovreccitata", "sovresposta", "sovrimposta", "sovrintesa", "sovvenuta", "sovvenzionata", "sovvertita", "spaccata", "spacchettata", "spacciata", "spaginata", "spaiata", "spalancata", "spalata", "spalcata", "spalleggiata", "spalmata", "spammata", "spampanata", "spampinata", "spanata", "spanciata", "spanduta", "spannata", "spannocchiata", "spansa", "spantanata", "spanta", "spaparacchiata", "spaparanzata", "spappolata", "sparata", "sparecchiata", "sparigliata", "sparita", "sparlata", "sparpagliata", "spartita", "spassata", "spassatosela", "spastoiata", "spaurata", "spaurita", "spaventata", "spazializzata", "spaziata", "spazieggiata", "spazientita", "spazzata", "spazzolata", "specchiata", "specializzata", "specificata", "specillata", "specolata", "spedita", "spegnata", "spelacchiata", "spelata", "spellata", "spennacchiata", "spennata", "spennellata", "spenta", "spenzolata", "sperata", "sperimentata", "spernacchiata", "speronata", "sperperata", "spersonalizzata", "sperticata", "spesata", "spesa", "spessita", "spettacolarizzata", "spettinata", "spezzata", "spezzettata", "spezziata", "spezzonata", "spiaccicata", "spianata", "spiantata", "spiata", "spiattellata", "spiazzata", "spiccata", "spicciata", "spiccicata", "spicciolata", "spicconata", "spidocchiata", "spiegata", "spiegazzata", "spietrata", "spifferata", "spigionata", "spignorata", "spigolata", "spigrita", "spillata", "spilluzzicata", "spiluccata", "spinta", "spintonata", "spiombata", "spiralizzata", "spirantizzata", "spirata", "spiritualizzata", "spiumata", "spizzicata", "spodestata", "spoetizzata", "spogliata", "spolettata", "spoliata", "spoliticizzata", "spollonata", "spolmonata", "spolpata", "spoltronita", "spolverata", "spolverizzata", "spompata", "spompinata", "sponsorizzata", "spopolata", "spoppata", "sporcata", "sportata", "sporta", "sposata", "sposseduta", "spossessata", "spostata", "sposta", "sprangata", "sprecata", "spregiata", "spremuta", "spretata", "sprezzata", "sprigionata", "sprimacciata", "spromessa", "spronata", "sprotetta", "sprovincializzata", "sprovveduta", "sprovvista", "spruzzata", "spugnata", "spulata", "spulciata", "spuntata", "spuntellata", "spupazzata", "spurgata", "sputacchiata", "sputata", "sputtanata", "squadernata", "squadrata", "squagliata", "squagliatasela", "squagliata", "squalificata", "squamata", "squarciata", "squartata", "squassata", "squattrinata", "squilibrata", "squinternata", "sradicata", "srotolata", "srugginita", "stabbiata", "stabilita", "stabilizzata", "stabulata", "staccata", "stacciata", "staffata", "staffilata", "staggiata", "staggita", "stagionata", "stagliata", "stagnata", "stamburata", "stampata", "stampigliata", "stanata", "stancata", "standardizzata", "stangata", "stanziata", "stappata", "starata", "starnazzata", "stasata", "statalizzata", "statizzata", "statoca", "statosena", "statuita", "stazzata", "stazzonata", "steccacciata", "steccata", "stecchita", "stecconata", "stemperata", "stempiata", "stenografata", "stereotipata", "sterilita", "sterilizzata", "sterpata", "sterrata", "sterzata", "stesa", "stigliata", "stigmatizzata", "stilata", "stilettata", "stilizzata", "stillata", "stimata", "stimolata", "stinta", "stipata", "stipendiata", "stipulata", "stiracchiata", "stirata", "stivata", "stizzita", "stoccata", "stolta", "stomacata", "stonata", "stondata", "stoppata", "stordita", "storicizzata", "stornata", "storpiata", "stortata", "storta", "stozzata", "strabenedetta", "strabuzzata", "stracannata", "straccata", "stracciata", "stracotta", "strafogata", "stragoduta", "stralciata", "stralodata", "stralunata", "stramaledetta", "stramortita", "strangolata", "straniata", "stranita", "straorzata", "strapagata", "strapazzata", "straperduta", "strapersa", "strappata", "strasaputa", "strascicata", "strascinata", "strasformata", "stratificata", "strattonata", "stravaccata", "stravinta", "stravolta", "stravoluta", "straziata", "stregata", "stremata", "stressata", "striata", "stridulata", "strigata", "strigliata", "strillata", "striminzita", "strimpellata", "strinata", "stringata", "strisciata", "stritolata", "strizzata", "strofinata", "strombata", "strombazzata", "stroncata", "stronzata", "stropicciata", "stroppata", "stroppiata", "strozzata", "struccata", "strumentalizzata", "strumentata", "strusciata", "strutta", "strutturalizzata", "strutturata", "stuccata", "studiacchiata", "studiata", "stuellata", "stufata", "stupefatta", "stupita", "stuprata", "sturata", "stutata", "stuzzicata", "suasa", "subaffittata", "subappaltata", "subbiata", "subdelegata", "subissata", "subita", "sublicenziata", "sublimata", "sublocata", "subodorata", "subordinata", "subornata", "suburbanizzata", "sucata", "succhiata", "succhiellata", "succiata", "succinta", "succisa", "suddistinta", "suddivisa", "suffissata", "suffissa", "suffragata", "suffumicata", "suffusa", "suggellata", "suggerita", "suggestionata", "suicidata", "sunteggiata", "sunta", "suolata", "suonata", "superata", "superpagata", "superraffreddata", "supervalutata", "supervisionata", "supplicata", "supplita", "supportata", "supposta", "suppurata", "surclassata", "surfata", "surgelata", "surraffreddata", "surriscaldata", "surrogata", "survoltata", "suscitata", "susseguita", "sussidiata", "sussunta", "sussurrata", "suturata", "svaccata", "svagata", "svaligiata", "svalutata", "svapata", "svariata", "svasata", "svecchiata", "svegliata", "svelata", "svelenita", "sveltita", "svelta", "svenata", "svenduta", "sventagliata", "sventata", "sventolata", "sventrata", "sverginata", "svergognata", "svergolata", "sverminata", "sverniciata", "svestita", "svettata", "svezzata", "sviata", "svignatosela", "svigorita", "svilita", "svillaneggiata", "sviluppata", "svinata", "svincolata", "sviolinata", "svirgolata", "svirilizzata", "svisata", "sviscerata", "svitata", "sviticchiata", "svolata", "svolazzata", "svolta", "svoluta", "svuotata", "tabuizzata", "tabulata", "taccata", "taccheggiata", "tacciata", "tacitata", "taciuta", "tagliata", "taglieggiata", "tagliuzzata", "talebanizzata", "tallonata", "tampinata", "tamponata", "tanguta", "tannata", "tappata", "tappezzata", "tarata", "tardata", "targata", "tariffata", "tarlata", "tarmata", "taroccata", "tarpata", "tartagliata", "tartassata", "tartufata", "tassata", "tassellata", "tastata", "tasteggiata", "tatuata", "tecnicizzata", "tecnologizzata", "tedeschizzata", "tediata", "teflonata", "telecomandata", "telecontrollata", "telediffusa", "telefonata", "telegrafata", "teleguidata", "telematizzata", "telemetrata", "teleradiotrasmessa", "teletrasmessa", "teletrasportata", "tematizzata", "temperata", "tempestata", "tempificata", "templatizzata", "temporizzata", "temprata", "temuta", "tentata", "tenuta", "teologizzata", "teorizzata", "tepefatta", "terebrata", "terminata", "termostatata", "terrazzata", "terrificata", "terrorizzata", "tersa", "terzarolata", "terziarizzata", "terziata", "tesata", "tesaurizzata", "tesa", "tesserata", "testata", "testificata", "testimoniata", "timbrata", "tindalizzata", "tinteggiata", "tinta", "tipicizzata", "tipizzata", "tippata", "tiranneggiata", "tirata", "titillata", "titolata", "toccata", "toelettata", "tollerata", "tolta", "tonalizzata", "tonificata", "tonneggiata", "tonsurata", "torchiata", "tormentata", "tornatosena", "tornita", "torrefatta", "torta", "tortoreggiata", "torturata", "tosata", "toscaneggiata", "toscanizzata", "tostata", "totalizzata", "traboccata", "trabuccata", "tracannata", "tracciata", "tradita", "tradotta", "trafficata", "trafilata", "trafitta", "traforata", "trafugata", "traghettata", "traguardata", "trainata", "tralasciata", "tralignata", "tramandata", "tramata", "trambasciata", "tramessa", "tramestata", "tramezzata", "tramortita", "tramutata", "tranciata", "trangugiata", "tranquillata", "tranquillizzata", "transatta", "transcesa", "transcodificata", "transcorsa", "transcritta", "transennata", "transfluita", "transfusa", "transistorizzata", "translitterata", "transposta", "transricevuta", "transustanziata", "transveduta", "transvista", "trapanata", "trapassata", "trapiantata", "traportata", "traposta", "trapposta", "trapuntata", "trapunta", "trarotta", "trasandata", "trasbordata", "trascelta", "trascesa", "trascinata", "trascorsa", "trascritta", "trascurata", "trasdotta", "trasferita", "trasfigurata", "trasformata", "trasfusa", "trasgredita", "traslata", "traslitterata", "traslocata", "trasmessa", "trasmutata", "trasparita", "traspirata", "trasportata", "trasposta", "trastullata", "trasudata", "trasvolata", "trasvolta", "trattata", "tratteggiata", "trattenuta", "tratta", "traumatizzata", "travagliata", "travalicata", "travasata", "traveduta", "traversata", "travestita", "traviata", "travisata", "travista", "travolta", "trebbiata", "triangolata", "tribbiata", "tribolata", "tributata", "triennalizzata", "trimestralizzata", "trincata", "trincerata", "trinciata", "tripartita", "triplicata", "trisecata", "trisezionata", "tritata", "triturata", "trivellata", "trollata", "trombata", "troncata", "tropicalizzata", "trovata", "truccata", "trucidata", "truffata", "tuffata", "tumefatta", "tumulata", "turata", "turbata", "turlupinata", "tutelata", "ubbligata", "ubicata", "ubidita", "ubiquitinata", "ubriacata", "uccellata", "uccellinata", "uccisa", "udita", "ufficializzata", "uggita", "ugnata", "uguagliata", "ulcerata", "ulita", "ulolata", "ultimata", "ultracentrifugata", "ululata", "umanata", "umanizzata", "umettata", "umidificata", "umidita", "umiliata", "uncinata", "unguentata", "unificata", "uniformata", "unita", "univerbata", "universaleggiata", "universalizzata", "untata", "unta", "uperizzata", "urbanizzata", "urgenzata", "urlata", "urtacchiata", "urtata", "urticchiata", "usata", "usciolata", "usolata", "ustionata", "usucapita", "usurata", "usurpata", "utilitata", "utilizzata", "vaccinata", "vagabondeggiata", "vagellata", "vagheggiata", "vagillata", "vagliata", "valcata", "valicata", "validata", "valorizzata", "valsa", "valutata", "vanagloriata", "vanata", "vandalizzata", "vangata", "vangelizzata", "vanificata", "vanita", "vantaggiata", "vantata", "vaporata", "vaporizzata", "varata", "varcata", "variata", "vasectomizzata", "vaticinata", "vedovata", "veduta", "vegetata", "veggiata", "vegliata", "veicolata", "velarizzata", "velata", "velettata", "velinata", "vellicata", "vellutata", "velocizzata", "vendemmiata", "vendicata", "vendicchiata", "venducchiata", "venduta", "venerata", "vengiata", "ventagliata", "ventilata", "ventolata", "verbalizzata", "vergata", "vergheggiata", "vergognata", "vergolata", "verificata", "verminata", "vernalizzata", "verniciata", "verrinata", "versata", "verseggiata", "versificata", "verticalizzata", "vessata", "vestita", "vestita", "vetrificata", "vetrinata", "vetrioleggiata", "vettovagliata", "vezzeggiata", "viaggiata", "vicinata", "vicitata", "videochattata", "videochiamata", "videocomunicata", "videoregistrata", "videotrasmessa", "vidimata", "vigilata", "vigliata", "vigoreggiata", "vigorita", "vilificata", "vilipesa", "villaneggiata", "vincolata", "vinta", "violata", "violentata", "violinata", "virgolata", "virgoleggiata", "virgolettata", "virilizzata", "virtualizzata", "visionata", "visitata", "vissuta", "vistata", "vista", "visualizzata", "vitaliziata", "vitalizzata", "vitaminizzata", "vittimizzata", "vituperata", "vivacizzata", "vivandata", "vivificata", "vivisezionata", "viziata", "vocabolarizzata", "vocalizzata", "vocata", "vociferata", "volantinata", "volatilizzata", "volgarizzata", "volicchiata", "volpeggiata", "voltata", "volta", "voltolata", "volturata", "voluminizzata", "voluta", "volutoca", "vomitata", "vorata", "votata", "vulcanizzata", "vuotata", "wappata", "wikificata", "xerocopiata", "zaffata", "zampata", "zampettata", "zampillata", "zannata", "zappata", "zappettata", "zapponata", "zavorrata", "zeppata", "zigrinata", "zigzagata", "zimbellata", "zincata", "zinnata", "zipolata", "zippata", "zirlata", "zittita", "zizzagata", "zoccolata", "zollata", "zombata", "zonata", "zonizzata", "zoppata", "zoppeggiata", "zoppicata", "zucconata", "zufolata", "zumata", "zuppata", "abalienate", "abbacchiate", "abbacinate", "abbadate", "abbagliate", "abbaiate", "abballate", "abbambinate", "abbancate", "abbandonate", "abbarbagliate", "abbarbate", "abbarcate", "abbaruffate", "abbassate", "abbatacchiate", "abbattute", "abbatuffolate", "abbelite", "abbellate", "abbellite", "abbendate", "abbeverate", "abbiadate", "abbicate", "abbigliate", "abbinate", "abbindolate", "abbioccate", "abbiosciate", "abbisciate", "abbittate", "abboccate", "abboffate", "abbominate", "abbonacciate", "abbonate", "abbonite", "abbordate", "abborracciate", "abborrate", "abborrite", "abbottinate", "abbottonate", "abbozzacchiate", "abbozzate", "abbozzolate", "abbracciate", "abbraciate", "abbrancate", "abbreviate", "abbriccate", "abbrigliate", "abbrivate", "abbriviate", "abbrividite", "abbronzate", "abbrostolate", "abbrostolite", "abbruciacchiate", "abbruciate", "abbrunate", "abbrunite", "abbruscate", "abbrusciate", "abbrustiate", "abbrustolate", "abbrustolite", "abbrutite", "abbruttite", "abbuffate", "abbuiate", "abbuonate", "abburattate", "abbuzzite", "abdicate", "abdotte", "abiettate", "abilitate", "abissate", "abitate", "abituate", "abiurate", "abolite", "abominate", "abondate", "aborrite", "abrase", "abrogate", "abusate", "accaffate", "accagionate", "accagliate", "accalappiate", "accalcate", "accaldate", "accallate", "accalorate", "accalorite", "accambiate", "accampate", "accampionate", "accanalate", "accanate", "accaneggiate", "accanite", "accantonate", "accaparrate", "accapezzate", "accapigliate", "accapottate", "accappiate", "accappiettate", "accapponate", "accappucciate", "accaprettate", "accareggiate", "accarezzate", "accarnate", "accarpionate", "accartocciate", "accasate", "accasciate", "accasellate", "accasermate", "accastellate", "accastellinate", "accatarrate", "accatastate", "accattate", "accattivate", "accavalcate", "accavalciate", "accavallate", "accavezzate", "accecate", "acceffate", "accelerate", "accellerate", "accennate", "accensate", "accentate", "accentrate", "accentuate", "acceppate", "accerchiate", "accercinate", "accertate", "accese", "accessoriate", "accettate", "acchetate", "acchiappate", "acchiocciolate", "acchitate", "acchiudute", "acciabattate", "acciaiate", "acciambellate", "acciarpate", "acciecate", "accigliate", "acciglionate", "accignute", "accincignate", "accinte", "acciocchite", "acciottolate", "accipigliate", "accismate", "accise", "acciucchite", "acciuffate", "accivettate", "acclamate", "acclarate", "acclimatate", "accluse", "accoccate", "accoccolate", "accoccovate", "accodate", "accollate", "accoltellate", "accolte", "accomandate", "accomiatate", "accommiatate", "accomodate", "accompagnate", "accomunate", "acconciate", "acconigliate", "accontate", "accontentate", "accoppate", "accoppiate", "accorate", "accorciate", "accorcite", "accordate", "accordellate", "accorpate", "accorte", "accosciate", "accostate", "accostumate", "accotonate", "accottimate", "accovacciate", "accovate", "accovonate", "accozzate", "accreditate", "accresciute", "accrespate", "accucciate", "accucciolate", "accudite", "acculate", "acculturate", "accumulate", "accumunate", "accusate", "acetificate", "acetilate", "acetite", "acidate", "acidificate", "acidulate", "acquadernate", "acquarellate", "acquartierate", "acquate", "acquattate", "acquerellate", "acquetate", "acquietate", "acquisite", "acquistate", "acromatizzate", "acuite", "acuminate", "acutizzate", "adacquate", "adagiate", "adattate", "addaziate", "addebbiate", "addebitate", "addecimate", "addensate", "addentate", "addentellate", "addentrate", "addestrate", "addette", "addiacciate", "addimandate", "addimesticate", "addimorate", "addimostrate", "addipanate", "addirizzate", "additate", "additivate", "addizionate", "addobbate", "addocilite", "addogliate", "addolcate", "addolciate", "addolcite", "addolorate", "addomandate", "addomesticate", "addoppiate", "addormentate", "addossate", "addotte", "addottorate", "addottrinate", "addrizzate", "adduate", "addugliate", "adeguate", "adempite", "adempiute", "adequate", "aderizzate", "adescate", "adibite", "adirate", "adite", "adiuvate", "adizzate", "adocchiate", "adombrate", "adonate", "adonestate", "adontate", "adoperate", "adoprate", "adorate", "adornate", "adottate", "adsorbite", "aduggiate", "adugnate", "adulate", "adulterate", "adunate", "adunghiate", "adusate", "aerate", "aereate", "aerotrainate", "aerotrasportate", "affabulate", "affaccendate", "affacchinate", "affacciate", "affagottate", "affaldate", "affamate", "affamigliate", "affannate", "affardellate", "affascinate", "affastellate", "affaticate", "affattucchiate", "affatturate", "affermate", "afferrate", "affettate", "affezionate", "affiancate", "affiatate", "affibbiate", "affidate", "affienate", "affievolite", "affigliate", "affigurate", "affilate", "affilettate", "affiliate", "affinate", "affiochite", "affiorate", "affisate", "affissate", "affisse", "affittate", "affittite", "afflitte", "afflosciate", "affocate", "affogate", "affogliate", "affollate", "affoltate", "affondate", "afforcate", "afforestate", "afforzate", "affossate", "affralite", "affrancate", "affrante", "affratellate", "affrenate", "affrenellate", "affrescate", "affrettate", "affrittellate", "affrontate", "affumate", "affumicate", "affumigate", "affuocate", "affusolate", "africanizzate", "ageminate", "agevolate", "aggallate", "agganciate", "aggangherate", "aggarbate", "aggattonate", "aggavignate", "aggelate", "aggettivate", "agghiacciate", "agghiadate", "agghiaiate", "agghindate", "aggiaccate", "aggiogate", "aggiornate", "aggirate", "aggiucchite", "aggiudicate", "aggiuntate", "aggiunte", "aggiustate", "agglomerate", "agglutinate", "aggomitolate", "aggottate", "aggradite", "aggraffate", "aggranchiate", "aggranchite", "aggrandite", "aggrappate", "aggraticciate", "aggravate", "aggredite", "aggregate", "aggrevate", "aggricciate", "aggrinzate", "aggrinzite", "aggrommate", "aggrondate", "aggroppate", "aggrottate", "aggrovigliate", "aggrumate", "aggruppate", "aggruzzolate", "agguagliate", "agguantate", "agguardate", "agguatate", "aggueffate", "agitate", "agognate", "agrarizzate", "aguatate", "agucchiate", "agunate", "agurate", "aguzzate", "aitate", "aiutate", "aizzate", "alate", "alberate", "albergate", "alcalinizzate", "alchilate", "alchimiate", "alchimizzate", "alcolizzate", "alcoolizzate", "alenate", "alesate", "alettate", "alfabetate", "alfabetizzate", "alidite", "alienate", "alimentate", "allacciate", "allagate", "allappate", "allargate", "allascate", "allattate", "alleate", "allegate", "alleggerite", "alleggiate", "allegorizzate", "alleluiate", "allenate", "allenite", "allentate", "allertate", "allessate", "allestite", "allettate", "allevate", "alleviate", "allibate", "allibite", "allibrate", "allicciate", "allietate", "allindate", "allineate", "allise", "allocate", "allogate", "alloggiate", "allontanate", "allottate", "allucchettate", "allucciolate", "allucinate", "allumate", "alluminate", "alluminiate", "allungate", "allupate", "alluse", "alluzzate", "alogenate", "alonate", "alpeggiate", "alterate", "alternate", "alzate", "amalgamate", "amareggiate", "amaricate", "amate", "ambientate", "ambiguate", "ambite", "americanizzate", "amicate", "ammaccate", "ammaestrate", "ammainate", "ammalate", "ammaliate", "ammalinconite", "ammaltate", "ammanettate", "ammanicate", "ammanierate", "ammanigliate", "ammannate", "ammannellate", "ammannite", "ammansate", "ammansite", "ammantate", "ammantellate", "ammarate", "ammarezzate", "ammassate", "ammassellate", "ammassicciate", "ammatassate", "ammattonate", "ammazzate", "ammelmate", "ammencite", "ammendate", "ammennicolate", "ammesse", "ammetate", "ammezzite", "amministrate", "amminutate", "ammirate", "ammiserite", "ammobiliate", "ammodernate", "ammodernizzate", "ammogliate", "ammoinate", "ammollate", "ammollite", "ammonite", "ammonticchiate", "ammonticellate", "ammorbate", "ammorbidate", "ammorbidite", "ammorsate", "ammortate", "ammortite", "ammortizzate", "ammorzate", "ammosciate", "ammoscite", "ammostate", "ammotinate", "ammucchiate", "ammulinate", "ammusate", "ammutate", "ammutinate", "amnistiate", "amoracciate", "ampiate", "ampliate", "amplificate", "amputate", "anagrammate", "analizzate", "anamorfizzate", "anastomizzate", "anatematizzate", "anatomizzate", "anchilosate", "ancise", "ancorate", "andatosene", "andicappate", "anellate", "anemizzate", "anestetizzate", "angariate", "anglicizzate", "angolate", "angosciate", "angustiate", "animate", "annacquate", "annaffiate", "annasate", "annaspate", "annaspicate", "annebbiate", "annegate", "annerate", "annerite", "annesse", "annestate", "annichilate", "annichilite", "annidate", "annientate", "annitrite", "annobilite", "annodate", "annodicchiate", "annoiate", "annotate", "annottate", "annottolate", "annoverate", "annullate", "annunciate", "annunziate", "annusate", "annuvolate", "anodizzate", "anonimizzate", "antecedute", "anteposte", "antergate", "anticheggiate", "antichizzate", "anticipate", "anticonosciute", "antidatate", "antivedute", "antiviste", "antologizzate", "antropizzate", "antropomorfizzate", "aocchiate", "aombrate", "aonestate", "aontate", "aperte", "apocopate", "apologizzate", "apostrofate", "appaciate", "appacificate", "appagate", "appaiate", "appalesate", "appallottolate", "appaltate", "appanettate", "appannate", "apparate", "apparecchiate", "apparentate", "apparigliate", "apparite", "appartate", "appassionate", "appastate", "appastellate", "appellate", "appennellate", "appercepite", "appertizzate", "appesantite", "appesite", "appese", "appestate", "appetite", "appezzate", "appiacevolite", "appianate", "appiastrate", "appiatate", "appiattate", "appiattite", "appiccate", "appiccicate", "appiccolite", "appiedate", "appigionate", "appigliate", "appinzate", "appiombate", "appioppate", "appisolate", "applaudite", "applicate", "appoderate", "appoggiate", "appollaiate", "appoppate", "apportate", "appostate", "apposte", "appratite", "appresentate", "apprese", "appressate", "apprestate", "apprettate", "apprezzate", "approcciate", "approfittate", "approfondate", "approfondite", "approntate", "appropinquate", "appropriate", "approssimate", "approvate", "approvisionate", "approvvigionate", "appruate", "appulcrate", "appuntate", "appuntellate", "appuntite", "appurate", "appuzzate", "arabescate", "arabizzate", "arate", "arbitrate", "arborate", "arcaizzate", "arcate", "architettate", "archiviate", "arcuate", "ardite", "areate", "argentate", "arginate", "argomentate", "arguite", "arianizzate", "arieggiate", "armate", "armonizzate", "aromatizzate", "arpeggiate", "arpionate", "arponate", "arrabattate", "arraffate", "arraffiate", "arrandellate", "arrangiate", "arrapate", "arrapinate", "arrappate", "arrazzate", "arrecate", "arredate", "arreggimentate", "arrembate", "arrenate", "arresise", "arrese", "arrestate", "arretrate", "arricchite", "arricciate", "arricciolate", "arriffate", "arringate", "arrischiate", "arrisicate", "arrise", "arrocate", "arroccate", "arrochite", "arrogate", "arrolate", "arroncate", "arronzate", "arrosate", "arrossate", "arrostate", "arrostite", "arrotate", "arrotolate", "arrotondate", "arrovellate", "arroventate", "arroventite", "arrovesciate", "arrubinate", "arruffate", "arruffianate", "arrugginite", "arruncigliate", "arruolate", "arruvidite", "arsicciate", "arse", "artefatte", "articolate", "artigliate", "ascese", "asciate", "asciolvute", "asciugate", "ascoltate", "ascose", "ascoste", "ascritte", "asfaltate", "asfissiate", "asperse", "aspettate", "aspirate", "asportate", "aspreggiate", "assaettate", "assaggiate", "assalite", "assaltate", "assaporate", "assaporite", "assassinate", "assecondate", "assecurate", "assediate", "asseggiate", "assegnate", "assembiate", "assemblate", "assembrate", "assemprate", "assentate", "asserite", "asserragliate", "asservite", "assestate", "assetate", "assettate", "asseverate", "assibilate", "assicurate", "assiderate", "assiemate", "assiepate", "assillate", "assimigliate", "assimilate", "assiomatizzate", "assise", "assistite", "associate", "assodate", "assoggettate", "assolcate", "assoldate", "assolte", "assolutizzate", "assomate", "assommate", "assonate", "assonnate", "assopite", "assorbite", "assordate", "assordite", "assortite", "assottigliate", "assuefatte", "assunte", "asteggiate", "astenute", "asterse", "astratte", "astrette", "atomizzate", "atrofizzate", "atrovate", "attaccate", "attagliate", "attanagliate", "attardate", "attediate", "atteggiate", "attempate", "attendate", "attentate", "attenuate", "attenute", "attergate", "atterrate", "atterrite", "atterzate", "attese", "attestate", "atticizzate", "attillate", "attinte", "attirate", "attivate", "attivizzate", "attizzate", "attorcigliate", "attorniate", "attorte", "attoscate", "attossicate", "attraccate", "attrappite", "attratte", "attraversate", "attrezzate", "attribuite", "attristate", "attristite", "attruppate", "attualizzate", "attuate", "attuffate", "attutate", "attutite", "auggiate", "augumentate", "augurate", "aulite", "aumentate", "aunghiate", "ausate", "auscultate", "auspicate", "autenticate", "autentificate", "autoaccusate", "autoaffondate", "autoalimentate", "autoassolte", "autocandidate", "autocensurate", "autocitate", "autocommiserate", "autoconsumate", "autoconvinte", "autodefinite", "autodenunciate", "autodistrutte", "autofinanziate", "autogestite", "autogovernate", "autografate", "autoincensate", "autointersecate", "autoinvitate", "autolesionate", "autolimitate", "automaticizzate", "automatizzate", "automotivate", "autonominate", "autoproclamate", "autoprodotte", "autoprotette", "autopubblicate", "autopubblicizzate", "autoregolamentate", "autoregolate", "autoridotte", "autoriparate", "autorizzate", "autosomministrate", "autosostenute", "autosuggestionate", "autotassate", "autotrapiantate", "autotrasportate", "autovalutate", "avallate", "avampate", "avanzate", "avariate", "avinte", "aviolanciate", "aviotrasportate", "avocate", "avolterate", "avulse", "avutacele", "avute", "avvalorate", "avvalse", "avvantaggiate", "avvelate", "avvelenate", "avventate", "avventurate", "avverate", "avversate", "avvertite", "avvezzate", "avviate", "avvicendate", "avvicinate", "avvignate", "avvilite", "avviluppate", "avvinate", "avvinchiate", "avvinghiate", "avvinte", "avvisate", "avvistate", "avvitate", "avviticchiate", "avvitite", "avvivate", "avvolte", "avvoltolate", "aziendalizzate", "azionate", "azotate", "azzannate", "azzardate", "azzeccate", "azzerate", "azzimate", "azzittate", "azzittite", "azzoppate", "azzoppite", "azzuffate", "azzurrate", "bacate", "baccagliate", "bacchettate", "bacchiate", "baciate", "badate", "bagnate", "baipassate", "balbettate", "balcanizzate", "ballate", "baloccate", "balzate", "banalizzate", "bancate", "bandite", "bannate", "baraccate", "barattate", "barbarizzate", "barcamenate", "bardate", "barellate", "barrate", "barricate", "basate", "basciate", "basculate", "bassate", "bastate", "bastionate", "bastite", "bastonate", "battezzate", "battute", "bazzicate", "beatificate", "beate", "beccate", "beccheggiate", "becchettate", "beffate", "beffeggiate", "bendate", "benedette", "beneficate", "benvolute", "berlusconizzate", "bersagliate", "bestemmiate", "bevute", "biadate", "bianchettate", "bianchite", "biascicate", "biasimate", "biasmate", "bidonate", "biennalizzate", "biforcate", "bigiate", "bilanciate", "binate", "bindolate", "biodegradate", "biografate", "bipartite", "bisbigliate", "biscottate", "bisecate", "bisellate", "bisognate", "bissate", "bistrate", "bistrattate", "bitumate", "bituminate", "blandite", "bleffate", "blindate", "bloccate", "bobinate", "boccheggiate", "bocciate", "boicottate", "bollate", "bollite", "bombardate", "bombate", "bonderizzate", "bonificate", "bootate", "borbottate", "bordate", "boriate", "borrate", "borseggiate", "braccate", "bracciate", "bramate", "bramite", "brancicate", "brandeggiate", "brandite", "brasate", "bravate", "brevettate", "breviate", "brillantate", "brillate", "brinate", "broccate", "brocciate", "broccolate", "brontolate", "bronzate", "brucate", "bruciacchiate", "bruciate", "brunite", "bruscate", "bruschinate", "brutalizzate", "bruttate", "bucate", "bucherellate", "bufate", "buffate", "bufferizzate", "buggerate", "bugnate", "bulicate", "bulinate", "bullettate", "bullonate", "burattate", "burlate", "burocratizzate", "burrificate", "buscate", "buttate", "butterate", "bypassate", "cablate", "cabrate", "cacate", "cacciate", "cadenzate", "cadmiate", "caducate", "cagate", "caggiate", "cagionate", "cagliate", "calafatate", "calamitate", "calandrate", "calate", "calcate", "calciate", "calcificate", "calcolate", "caldeggiate", "calettate", "calibrate", "calmate", "calmierate", "calpestate", "calumate", "calunniate", "calzate", "cambiate", "camerate", "campionate", "campite", "camuffate", "canalizzate", "cancellate", "cancerizzate", "candeggiate", "candidate", "candite", "canforate", "cangiate", "cannate", "canneggiate", "cannibalizzate", "cannoneggiate", "canonizzate", "cantate", "canterellate", "canticchiate", "cantilenate", "canzonate", "caolinizzate", "capacitate", "capeggiate", "capillarizzate", "capitalizzate", "capitanate", "capitaneggiate", "capite", "capitozzate", "capivolte", "caponate", "capotate", "capottate", "capovolte", "capponate", "captate", "caramellate", "caramellizzate", "caratate", "caratterizzate", "carbonizzate", "carbossilate", "carburate", "carcate", "carcerate", "cardate", "carenate", "carezzate", "cariate", "caricate", "caricaturate", "caricaturizzate", "carotate", "carpionate", "carpite", "carreggiate", "carrozzate", "cartavetrate", "carteggiate", "cartellinate", "cartografate", "cartolarizzate", "cartonate", "cascolate", "cassate", "casse", "castigate", "castrate", "casualizzate", "catabolizzate", "catalizzate", "catalogate", "catapultate", "catechizzate", "categorizzate", "cateterizzate", "catramate", "cattolicizzate", "catturate", "causate", "cautelate", "cauterizzate", "cauzionate", "cavalcate", "cavatasele", "cavate", "cazzate", "cazziate", "cazzottate", "cedrate", "cedute", "celate", "celebrate", "cellofanate", "cementate", "cementificate", "cennate", "censite", "censurate", "centellate", "centellinate", "centimetrate", "centinate", "centralizzate", "centrate", "centrifugate", "centuplicate", "cerate", "cercate", "cerchiate", "cernute", "certificate", "cesellate", "cessate", "cestinate", "cheratinizzate", "chetate", "chiamate", "chiappate", "chiarificate", "chiarite", "chiaroscurate", "chiavate", "chiazzate", "chieste", "chilificate", "chilometrate", "chimificate", "chinate", "chinizzate", "chiodate", "chiosate", "chiuse", "choccate", "ciancicate", "cianfrinate", "cianfrugliate", "ciangottate", "ciattate", "cibate", "cicatrizzate", "ciccate", "cicchettate", "ciclizzate", "ciclostilate", "cifrate", "cilindrate", "cimate", "cimentate", "cincischiate", "cinematografate", "cintate", "cinte", "cioncate", "ciondolate", "circolate", "circoncinte", "circoncise", "circondate", "circondotte", "circonflesse", "circonfluite", "circonfuse", "circonscritte", "circonvenute", "circoscritte", "circostanziate", "circuite", "circumcinte", "circumnavigate", "citate", "ciucciate", "ciurmate", "civettate", "civilizzate", "clamate", "classate", "classicizzate", "classificate", "cliccate", "climatizzate", "clivate", "clonate", "cloroformizzate", "clorurate", "clusterizzate", "co-dirette", "coacervate", "coadiuvate", "coagulate", "coalizzate", "coartate", "coccolate", "codificate", "coeditate", "coesistite", "cofinanziate", "cofirmate", "cofondate", "cogestite", "cogitate", "coglionate", "cognosciute", "coibentate", "coincise", "cointeressate", "cointestate", "coinvolte", "cokificate", "colate", "colettate", "collassate", "collaudate", "collazionate", "collegate", "collettivizzate", "collezionate", "collimate", "colliquate", "collise", "collocate", "colluttate", "colmate", "colonizzate", "colorate", "colorite", "colorizzate", "colpevolizzate", "colpite", "coltellate", "coltivate", "colte", "coltrate", "comandate", "combattute", "combinate", "comburute", "comicizzate", "cominciate", "commemorate", "commendate", "commensurate", "commentate", "commercializzate", "commesse", "comminate", "commiserate", "commissariate", "commissionate", "commisurate", "commosse", "commutate", "comodate", "compaginate", "comparite", "compartimentalizzate", "compartite", "compassionate", "compatibilizzate", "compatite", "compattate", "compendiate", "compenetrate", "compensate", "comperate", "compiaciute", "compiante", "compilate", "compitate", "compiute", "complessate", "complessificate", "complesse", "completate", "complicate", "complimentate", "comportate", "compostate", "composte", "comprate", "compravendute", "comprese", "compresse", "compromesse", "comprovate", "compulsate", "compunte", "computate", "computerizzate", "comunicate", "comunistizzate", "concatenate", "concedute", "concelebrate", "concentrate", "concepite", "concertate", "concesse", "concettate", "concettualizzate", "conchiuse", "conciate", "conciliate", "concimate", "concitate", "conclamate", "concluse", "concordate", "concotte", "concretate", "concretizzate", "conculcate", "concupite", "condannate", "condensate", "condite", "condivise", "condizionate", "condolute", "condonate", "condotte", "confatte", "confederate", "conferite", "confermate", "confessate", "confettate", "confezionate", "conficcate", "confidate", "configurate", "confinate", "confinte", "confiscate", "confitte", "conformate", "confortate", "confricate", "confrontate", "confuse", "confutate", "congedate", "congegnate", "congelate", "congestionate", "congetturate", "congiunte", "conglobate", "conglomerate", "conglutinate", "congratulate", "congregate", "conguagliate", "coniate", "coniugate", "connaturate", "connesse", "connotate", "connumerate", "conosciute", "conquistate", "consacrate", "consapevolizzate", "consegnate", "conseguite", "consentite", "conservate", "considerate", "consigliate", "consistite", "consociate", "consolate", "consolidate", "consorziate", "consparse", "consperse", "constatate", "constrette", "construite", "consultate", "consumate", "consunte", "contabilizzate", "contagiate", "containerizzate", "contaminate", "contate", "contattate", "conteggiate", "contemperate", "contemplate", "contentate", "contenute", "contese", "contestate", "contestualizzate", "contingentate", "continuate", "contornate", "contorte", "contrabbandate", "contraccambiate", "contraddette", "contraddistinte", "contradette", "contraffatte", "contrappesate", "contrapposte", "contrappuntate", "contrariate", "contrassegnate", "contrastate", "contrate", "contrattaccate", "contrattate", "contratte", "contravvalse", "contristate", "controbattute", "controbilanciate", "controdatate", "controfirmate", "controindicate", "controllate", "controminate", "contronotate", "controproposte", "controprovate", "controquerelate", "controsoffittate", "controstampate", "controventate", "conturbate", "contuse", "convalidate", "convenute", "convenzionate", "convertite", "convinte", "convitate", "convocate", "convogliate", "convolte", "coobate", "cooptate", "coordinate", "coperchiate", "coperte", "copiaincollate", "copiate", "copolimerizzate", "coppellate", "coprodotte", "corazzate", "corbellate", "corcate", "cordonate", "coreografate", "coricate", "cornificate", "coronate", "corredate", "correlate", "corresponsabilizzate", "corrette", "corricchiate", "corrisposte", "corroborate", "corrose", "corrotte", "corrucciate", "corrugate", "corse", "corteate", "corteggiate", "cortocircuitate", "coruscate", "cosate", "coscritte", "cosparse", "cosperse", "costatate", "costeggiate", "costellate", "costernate", "costicchiate", "costipate", "costituite", "costituzionalizzate", "costrette", "costruite", "costudite", "cotonate", "cotte", "covate", "coventrizzate", "coverchiate", "craccate", "create", "credute", "cremate", "crepate", "cresciute", "cresimate", "crespate", "criminalizzate", "crioconcentrate", "criptate", "cristallizzate", "cristianizzate", "criticate", "crittate", "crittografate", "crivellate", "crocchiate", "crocefisse", "crocefitte", "crocifisse", "crocifitte", "crogiolate", "cromate", "cronicizzate", "cronometrate", "crostate", "crucciate", "crucifisse", "crucifitte", "cuccate", "cucinate", "cucite", "cullate", "cumulate", "cuntate", "curate", "curvate", "curvate", "custodite", "customizzate", "damascate", "damaschinate", "damate", "dannate", "danneggiate", "danzate", "dardeggiate", "datate", "date", "dattilografate", "dattiloscritte", "daziate", "deacidificate", "deattivate", "debbiate", "debellate", "debilitate", "decaffeinate", "decaffeinizzate", "decalcate", "decalcificate", "decantate", "decapate", "decapitate", "decappottate", "decarbossilate", "decarburate", "decatizzate", "decelerate", "decentralizzate", "decentrate", "decerebrate", "decernute", "decespugliate", "deciferate", "decifrate", "decimalizzate", "decimate", "decise", "declamate", "declassate", "declassificate", "declinate", "declorate", "decodificate", "decolonizzate", "decolorate", "decompartimentate", "decompilate", "decomposte", "decompresse", "deconcentrate", "decondizionate", "decongelate", "decongestionate", "decontaminate", "decontestualizzate", "decontratte", "decorate", "decorticate", "decostruite", "decrementate", "decretate", "decriminalizzate", "decriptate", "decrittate", "decuplicate", "decurtate", "dedicate", "dedotte", "defacciate", "defalcate", "defascistizzate", "defecate", "defenestrate", "deferite", "defilate", "definite", "defiscalizzate", "defitte", "deflazionate", "deflemmate", "deflorate", "defogliate", "defoliate", "deforestate", "deformate", "defosforate", "defosforilate", "deframmentate", "defraudate", "degassate", "degassificate", "deglutite", "degnate", "degradate", "degustate", "deidratate", "deidrogenate", "deificate", "deindicizzate", "deindustrializzate", "deionizzate", "delegate", "delegificate", "delegittimate", "delibate", "deliberate", "delimitate", "delineate", "delirate", "deliziate", "delocalizzate", "delucidate", "deluse", "demagnetizzate", "demandate", "demanializzate", "demarcate", "demeritate", "demerse", "demetallizzate", "demilitarizzate", "demineralizzate", "demistificate", "demitizzate", "democratizzate", "demodulate", "demolite", "demoltiplicate", "demonetate", "demonetizzate", "demonizzate", "demoralizzate", "demorse", "demotivate", "denaturalizzate", "denaturate", "denazificate", "denazionalizzate", "denicotinizzate", "denigrate", "denitrificate", "denocciolate", "denominate", "denotate", "dentellate", "denuclearizzate", "denudate", "denunciate", "denunziate", "deodorate", "deossidate", "deossigenate", "deostruite", "depauperate", "depenalizzate", "depennate", "depilate", "depinte", "depistate", "deplorate", "depolarizzate", "depolimerizzate", "depoliticizzate", "depolverizzate", "deportate", "depositate", "deposte", "depotenziate", "depravate", "deprecate", "depredate", "depresse", "depressurizzate", "deprezzate", "deprivate", "deprotonate", "depulse", "depurate", "dequalificate", "deratizzate", "derattizzate", "dereferenziate", "deregolamentate", "deregolate", "derequisite", "deresponsabilizzate", "derise", "derubate", "derubricate", "desacralizzate", "desalate", "desalinizzate", "descolarizzate", "descritte", "desecretate", "desegretate", "deselezionate", "desensibilizzate", "desessualizzate", "desiate", "desiderate", "designate", "desinate", "desirate", "desolate", "desolforate", "desonorizzate", "desorbite", "desossidate", "desquamate", "destabilizzate", "destagionalizzate", "destalinizzate", "destatalizzate", "destatizzate", "destate", "destinate", "destituite", "destoricizzate", "destreggiate", "destrutte", "destrutturate", "desunte", "detassate", "detenute", "deteriorate", "determinate", "deterse", "detestate", "detonate", "detorte", "detossificate", "detratte", "detronizzate", "dettagliate", "dettate", "dette", "deturpate", "deumidificate", "devastate", "deventate", "deviate", "deviscerate", "devitalizzate", "devitaminizzate", "devolute", "dezippate", "diaframmate", "diagnosticate", "diagonalizzate", "diagrammate", "dializzate", "dialogate", "dialogizzate", "diazotate", "dibattute", "diboscate", "dichiarate", "diesate", "diesizzate", "difese", "diffamate", "differite", "diffidate", "diffrante", "diffratte", "diffuse", "digerite", "digitalizzate", "digitate", "digiunte", "digrassate", "digrignate", "digrossate", "dilacerate", "dilaniate", "dilapidate", "dilatate", "dilavate", "dilazionate", "dileggiate", "dileguate", "dilettate", "dilette", "diliscate", "dilucidate", "diluite", "dilungate", "dimagrate", "dimandate", "dimenate", "dimensionate", "dimenticate", "dimerizzate", "dimesse", "dimezzate", "diminuite", "dimissionate", "dimostrate", "dimunte", "dinamizzate", "dinoccate", "dipanate", "dipelate", "dipinte", "diplomate", "diposte", "diradate", "diramate", "dirette", "direzionate", "dirimute", "diroccate", "dirottate", "dirotte", "dirozzate", "disabilitate", "disabituate", "disaccentate", "disaccoppiate", "disaccordate", "disacerbate", "disacidate", "disacidificate", "disacidite", "disaerate", "disaffezionate", "disaggregate", "disalberate", "disallineate", "disamate", "disambiguate", "disaminate", "disamorate", "disancorate", "disanimate", "disappannate", "disapplicate", "disapprese", "disapprovate", "disarcionate", "disarmate", "disarticolate", "disascoste", "disassemblate", "disassuefatte", "disatomizzate", "disattese", "disattivate", "disattrezzate", "disavvezzate", "disboscate", "disbrigate", "discacciate", "discalzate", "discantate", "discaricate", "discernute", "discese", "disceverate", "dischieste", "dischiuse", "discinte", "disciolte", "disciplinate", "discolorate", "discolpate", "discommesse", "discompagnate", "discomposte", "disconcluse", "disconfitte", "discongiunte", "disconnesse", "disconosciute", "discoperte", "discordate", "discoscese", "discostate", "discreditate", "discresciute", "discriminate", "discritte", "discucite", "discuoiate", "discusse", "disdegnate", "disdettate", "disdette", "diseccate", "diseccitate", "diseducate", "disegnate", "diserbate", "diseredate", "disertate", "diserte", "disfatte", "disgelate", "disgiunte", "disgraziate", "disgregate", "disgustate", "disidentificate", "disiderate", "disidratate", "disilluse", "disimballate", "disimparate", "disimpegnate", "disimpresse", "disincagliate", "disincantate", "disincentivate", "disincrostate", "disindustrializzate", "disinfestate", "disinfettate", "disinflazionate", "disinformate", "disingannate", "disingranate", "disinibite", "disinnamorate", "disinnescate", "disinnestate", "disinquinate", "disinserite", "disinstallate", "disintasate", "disintegrate", "disinteressate", "disintese", "disintossicate", "disinvestite", "disinvolte", "disistimate", "dislocate", "dismesse", "disobbedite", "disobbligate", "disonorate", "disordinate", "disorganizzate", "disorientate", "disormeggiate", "disossate", "disossidate", "disostruite", "disotterrate", "disparite", "dispensate", "dispente", "disperdute", "disperse", "dispese", "dispiegate", "dispinte", "dispogliate", "disposte", "dispregiate", "disprezzate", "dispromesse", "disproporzionate", "disputate", "disqualificate", "disrotte", "dissacrate", "dissalate", "dissaldate", "dissanguate", "dissecate", "disseccate", "disselciate", "dissellate", "disseminate", "dissepolte", "disseppellite", "dissequestrate", "disserrate", "dissestate", "dissetate", "dissezionate", "dissigillate", "dissimulate", "dissipate", "dissociate", "dissodate", "dissolte", "dissomigliate", "dissotterrate", "dissuase", "dissuggellate", "distaccate", "distanziate", "distese", "distillate", "distinte", "distolte", "distorte", "distratte", "distrette", "distribuite", "districate", "distrigate", "distrutte", "disturbate", "disubbidite", "disumanate", "disumanizzate", "disunite", "disusate", "disvedute", "disvelate", "disvestite", "disviate", "disviste", "disvolte", "disvolute", "dittongate", "divallate", "divaricate", "divelte", "diversificate", "divertite", "divezzate", "divinate", "divincolate", "divinizzate", "divise", "divolte", "divorate", "divorziate", "divulgate", "documentate", "dogate", "dogmatizzate", "dolcificate", "dollarizzate", "dolorate", "dolute", "domandate", "domate", "domesticate", "domiciliate", "dominate", "donate", "dondolate", "dopate", "doppiate", "dorate", "dormitoce", "dosate", "dotate", "dovute", "dragate", "drammatizzate", "drappeggiate", "drenate", "dribblate", "drizzate", "drogate", "dugliate", "duplicate", "duramificate", "ebraizzate", "eccedute", "eccepite", "eccettuate", "eccitate", "echeggiate", "eclissate", "economizzate", "edificate", "editate", "edotte", "educate", "edulcorate", "effettuate", "efficientate", "effigiate", "effinte", "effluite", "effuse", "egemonizzate", "eguagliate", "eiettate", "elaborate", "elargite", "elasticizzate", "elementarizzate", "elemosinate", "elencate", "elette", "elettrificate", "elettrizzate", "elettrocoagulate", "elettrolizzate", "elevate", "eliminate", "elise", "elitrasportate", "ellenizzate", "elogiate", "elucidate", "elucubrate", "eluite", "eluse", "emanate", "emancipate", "emarginate", "embricate", "emendate", "emesse", "emozionate", "empite", "empiute", "emulate", "emulsionate", "emunte", "encomiate", "endocitate", "energizzate", "enfatizzate", "enfiate", "entusiasmate", "enucleate", "enumerate", "enunciate", "epicureggiate", "epurate", "equalizzate", "equilibrate", "equipaggiate", "equiparate", "eradicate", "erase", "ereditate", "erette", "erogate", "eroicizzate", "erose", "erotizzate", "erpicate", "erse", "erudite", "eruttate", "esacerbate", "esagerate", "esagitate", "esalate", "esaltate", "esaminate", "esasperate", "esaudite", "esaurite", "esautorate", "esborsate", "escluse", "escogitate", "escomiate", "escoriate", "escosse", "escusse", "esecrate", "esecutate", "eseguite", "esemplificate", "esentate", "esercitate", "esfoliate", "esibite", "esilarate", "esiliate", "esimute", "esitate", "esonerate", "esorbitate", "esorcizzate", "esortate", "espanse", "esparse", "esperimentate", "esperite", "espettorate", "espiantate", "espiate", "espirate", "espletate", "esplicate", "esplicitate", "esplorate", "esplose", "esportate", "esposte", "espresse", "espropriate", "espugnate", "espulse", "espunte", "espurgate", "essiccate", "essute", "estasiate", "estenuate", "esterificate", "esteriorizzate", "esterminate", "esternalizzate", "esternate", "estese", "estimate", "estinte", "estirpate", "estivate", "estorte", "estradate", "estraniate", "estrapolate", "estratte", "estremizzate", "estrinsecate", "estromesse", "estruse", "estubate", "esulcerate", "esultate", "esumate", "eterificate", "eterizzate", "eternate", "eternizzate", "etichettate", "etossilate", "euforizzate", "europeizzate", "evacuate", "evangelizzate", "evase", "evete", "evidenziate", "evinte", "evirate", "eviscerate", "evitate", "evocate", "evolte", "evolute", "evulse", "fabbricate", "faccettate", "facilitate", "fagocitate", "falciate", "falcidiate", "fallite", "falsate", "falsificate", "familiarizzate", "fanatizzate", "fantasticate", "farcite", "farfugliate", "fasciate", "fascicolate", "fascistizzate", "fattacele", "fatte", "fattorizzate", "fatturate", "favellate", "favoreggiate", "favorite", "faxate", "fecondate", "fedecommesse", "federalizzate", "federate", "felicitate", "felpate", "feltrate", "femminilizzate", "fendute", "ferite", "fermate", "fermentate", "ferrate", "fertilizzate", "fesse", "fessurate", "festeggiate", "festonate", "feudalizzate", "fiaccate", "fiammeggiate", "fiancheggiate", "ficcate", "fidanzate", "fidate", "fidecommesse", "fidelizzate", "figliate", "figurate", "filate", "filettate", "filmate", "filosofate", "filtrate", "finalizzate", "finanziate", "finitale", "finite", "finlandizzate", "fintate", "finte", "fiocinate", "fiondate", "fiorettate", "firmate", "fiscalizzate", "fischiate", "fischiettate", "fissate", "fissionate", "fitte", "fiutate", "flagellate", "flaggate", "flambate", "flangiate", "flemmatizzate", "flesse", "flippate", "flottate", "fluidificate", "fluidizzate", "fluorizzate", "fluorurate", "focalizzate", "focheggiate", "foderate", "foggiate", "fognate", "folgorate", "follate", "fomentate", "fonate", "fondate", "foracchiate", "foraggiate", "forate", "forestate", "forfettizzate", "forgiate", "formalizzate", "formate", "formattate", "formilate", "formulate", "fornite", "fortificate", "forviate", "forwardate", "forzate", "fosfatate", "fosforate", "fosforilate", "fossilizzate", "fotocomposte", "fotocopiate", "fotografate", "fottute", "fracassate", "fraintese", "framesse", "frammentate", "frammesse", "frammezzate", "frammischiate", "franceseggiate", "francesizzate", "frangiate", "frante", "frantumate", "frappate", "frapposte", "fraseggiate", "frastagliate", "frastornate", "fratturate", "frazionate", "freddate", "fregate", "fregiate", "frenate", "frequentate", "fresate", "frettate", "friendzonate", "fritte", "frizionate", "frodate", "frollate", "fronteggiate", "frugate", "fruite", "frullate", "frusciate", "frustate", "frustrate", "fruttate", "fucilate", "fucinate", "fugate", "fuggite", "fulminate", "fumate", "fumigate", "funestate", "funte", "funzionate", "fuoriuscite", "fuorviate", "fuse", "fustellate", "fustigate", "gabbate", "gabellate", "gallate", "gallicizzate", "gallonate", "galvanizzate", "gambizzate", "garantite", "garnettate", "garrotate", "garzate", "gasate", "gassate", "gassificate", "gazate", "gelatinizzate", "gelate", "gelificate", "gemellate", "gemicate", "geminate", "generalizzate", "generate", "gentrificate", "genuflesse", "geometrizzate", "georeferenziate", "gerarchizzate", "germanizzate", "gestite", "gettate", "gettonate", "ghermite", "ghettizzate", "ghigliottinate", "ghindate", "gibollate", "gingillate", "ginnate", "giocate", "gioite", "gionglate", "giovaneggiate", "girandolate", "girate", "giudicate", "giulebbate", "giuntate", "giunte", "giuracchiate", "giurate", "giustapposte", "giustificate", "giustiziate", "glamourizzate", "glassate", "glissate", "globalizzate", "gloriate", "glorificate", "glossate", "godronate", "godute", "goffrate", "gommate", "gonfiate", "googlate", "gottate", "governate", "gradinate", "gradite", "gradualizzate", "graduate", "graffate", "graffiate", "graffite", "graficate", "grafitate", "gramolate", "granagliate", "grandinate", "granellate", "granite", "granulate", "graticciate", "graticolate", "gratificate", "gratinate", "grattate", "grattugiate", "gravate", "graziate", "grecheggiate", "grecizzate", "gremite", "gridate", "griffate", "grigliate", "grippate", "groccate", "grondate", "grugate", "grugnite", "guadagnate", "gualcite", "guardate", "guarite", "guarnite", "guastate", "guatate", "guerreggiate", "gufate", "guidate", "gustate", "hackerate", "handicappate", "ibridate", "idealizzate", "ideate", "identificate", "ideologizzate", "idolatrate", "idoleggiate", "idratate", "idrogenate", "idrolizzate", "iettate", "igienizzate", "ignifugate", "ignorate", "illanguidite", "illeggiadrite", "illividite", "illuminate", "illuse", "illustrate", "imbacuccate", "imbaldanzite", "imballate", "imbalsamate", "imbambolate", "imbandierate", "imbandite", "imbarbarite", "imbarcate", "imbarilate", "imbastardite", "imbastite", "imbattute", "imbavagliate", "imbeccate", "imbellettate", "imbellite", "imbestialite", "imbestiate", "imbevute", "imbiaccate", "imbiancate", "imbianchite", "imbibite", "imbiettate", "imbiondite", "imbizzarrite", "imboccate", "imbonite", "imborghesite", "imboscate", "imboschite", "imbottate", "imbottigliate", "imbottite", "imbozzimate", "imbracate", "imbracciate", "imbragate", "imbrancate", "imbrattate", "imbrecciate", "imbrigliate", "imbrillantinate", "imbroccate", "imbrodate", "imbrogliate", "imbronciate", "imbruttite", "imbucate", "imbudellate", "imbullettate", "imbullonate", "imburrate", "imbussolate", "imbustate", "imbutite", "imitate", "immagazzinate", "immaginate", "immalinconite", "immatricolate", "immedesimate", "immerse", "immesse", "immischiate", "immiserite", "immobilizzate", "immolate", "immortalate", "immunizzate", "immusonite", "impaccate", "impacchettate", "impacciate", "impadronite", "impaginate", "impagliate", "impalate", "impalcate", "impallate", "impallinate", "impalmate", "impaludate", "impanate", "impaniate", "impannate", "impantanate", "impaperate", "impapocchiate", "impappinate", "imparentate", "imparruccate", "impartite", "impastate", "impasticcate", "impasticciate", "impastocchiate", "impastoiate", "impataccate", "impattate", "impaurite", "impavesate", "impeciate", "impedicate", "impedite", "impegnate", "impegolate", "impelagate", "impellicciate", "impennacchiate", "impennate", "impensierite", "impepate", "imperlate", "impermalite", "impermeabilizzate", "imperniate", "impersonate", "impersonificate", "impestate", "impetrate", "impiallacciate", "impiantate", "impiastrate", "impiastricciate", "impiccate", "impicciate", "impicciolite", "impiccolite", "impidocchiate", "impiegate", "impietosite", "impietrite", "impigliate", "impigrite", "impilate", "impillaccherate", "impinguate", "impinte", "impinzate", "impiombate", "impipate", "impiumate", "implementate", "implicate", "implorate", "impollinate", "impolpate", "impoltronite", "impolverate", "impomatate", "imporcate", "imporporate", "importate", "importunate", "impossessate", "impossibilitate", "impostate", "imposte", "impratichite", "impregnate", "imprese", "impressionate", "impresse", "imprestate", "impreziosite", "imprigionate", "impromesse", "improntate", "improsciuttite", "impugnate", "impuntite", "impunturate", "impupate", "imputate", "impuzzolentite", "inabilitate", "inabissate", "inacerbite", "inacetite", "inacidite", "inacutite", "inaffiate", "inalate", "inalberate", "inalveate", "inalzate", "inamidate", "inanellate", "inarcate", "inargentate", "inaridite", "inasprite", "inastate", "inattivate", "inaugurate", "incacchiate", "incalcinate", "incalorite", "incalzate", "incamerate", "incamiciate", "incamminate", "incanaglite", "incanalate", "incannate", "incannucciate", "incaponite", "incappottate", "incappucciate", "incaprettate", "incapricciate", "incapsulate", "incarcerate", "incardinate", "incaricate", "incarnate", "incarrozzate", "incartate", "incartocciate", "incartonate", "incasellate", "incasinate", "incassate", "incastellate", "incastonate", "incastrate", "incatenate", "incatramate", "incattivite", "incavate", "incavigliate", "incavolate", "incazzate", "incellofanate", "incendiate", "incenerite", "incensate", "incentivate", "incentrate", "inceppate", "incerate", "incernierate", "incerottate", "incese", "incettate", "inchiappettate", "inchiavardate", "inchieste", "inchinate", "inchiodate", "inchiostrate", "incipriate", "incise", "incistate", "incitate", "inciuccate", "incivilite", "inclinate", "incluse", "incoccate", "incocciate", "incoiate", "incollate", "incolonnate", "incolpate", "incominciate", "incomodate", "incontrate", "incoraggiate", "incordate", "incornate", "incorniciate", "incoronate", "incorporate", "incotte", "incravattate", "incrementate", "increspate", "incretinite", "incriminate", "incrinate", "incrociate", "incrostate", "incrudelite", "incrudite", "incruscate", "incubate", "inculate", "inculcate", "incuneate", "incuoiate", "incuorate", "incupite", "incuriosite", "incurvate", "incusse", "indagate", "indebitate", "indebolite", "indemaniate", "indennizzate", "indette", "indicate", "indicizzate", "indignate", "indirette", "indirizzate", "indispettite", "indisposte", "individualizzate", "individuate", "indolenzite", "indorate", "indossate", "indotte", "indottome", "indottrinate", "indovinate", "indugiate", "indulte", "indurate", "indurite", "industrializzate", "industriate", "inebetite", "inebriate", "inerite", "inerpicate", "infagottate", "infamate", "infangate", "infarcite", "infarinate", "infastidite", "infatuate", "infeltrite", "inferite", "inferocite", "inferte", "infervorate", "infestate", "infettate", "infeudate", "infiacchite", "infialate", "infialettate", "infiammate", "infiascate", "infibulate", "inficiate", "infilate", "infiltrate", "infilzate", "infingardite", "infinocchiate", "infinte", "infioccate", "infiocchettate", "infiochite", "infiorate", "infirmate", "infischiate", "infisse", "infittite", "inflazionate", "inflesse", "inflitte", "influenzate", "infocate", "infoderate", "infognate", "infoibate", "infoltite", "inforcate", "informatizzate", "informate", "informicolate", "informicolite", "infornaciate", "infornate", "infortunate", "infoscate", "infossate", "infradiciate", "inframesse", "inframezzate", "inframmesse", "inframmezzate", "infrancesate", "infrapposte", "infrascate", "infrattate", "infreddate", "infronzolate", "infuocate", "infurbite", "infuriate", "ingabbiate", "ingaggiate", "ingagliardite", "ingannate", "ingarbugliate", "ingavonate", "ingegnate", "ingegnerizzate", "ingelosite", "ingemmate", "ingenerate", "ingentilite", "ingerite", "ingessate", "inghiaiate", "inghiottite", "inghirlandate", "ingiallite", "ingigantite", "inginocchiate", "ingioiellate", "ingiunte", "ingiuriate", "inglesizzate", "inglobate", "ingoffite", "ingoiate", "ingolfate", "ingollate", "ingolosite", "ingombrate", "ingommate", "ingorgate", "ingozzate", "ingranate", "ingrandite", "ingrassate", "ingraticciate", "ingraticolate", "ingravidate", "ingraziate", "ingraziosite", "ingrigite", "ingrommate", "ingrossate", "ingrullite", "inguaiate", "inguainate", "ingualdrappate", "inguantate", "ingurgitate", "inibite", "iniettate", "inimicate", "inizializzate", "iniziate", "inmillate", "innacquate", "innaffiate", "innalzate", "innamorate", "innastate", "innervate", "innervosite", "innescate", "innestate", "innevate", "innocentate", "innocuizzate", "innovate", "inoculate", "inoltrate", "inondate", "inorgoglite", "inorpellate", "inorridite", "inquadrate", "inquietate", "inquisite", "insabbiate", "insacchettate", "insalate", "insaldate", "insalivate", "insanguinate", "insaponate", "insaporite", "inscatolate", "inscenate", "inscritte", "insecchite", "insediate", "insegnate", "inseguite", "insellate", "inselvatichite", "inserite", "insidiate", "insignite", "insilate", "insinuate", "insolentite", "insonnolite", "insonorizzate", "insordite", "insospettite", "insozzate", "inspessite", "inspirate", "installate", "instaurate", "insterilite", "instillate", "instituite", "instradate", "insudiciate", "insufflate", "insultate", "insuperbite", "intabaccate", "intabarrate", "intaccate", "intagliate", "intarsiate", "intasate", "intascate", "intavolate", "integrate", "intelaiate", "intelate", "intellettualizzate", "intenebrate", "intenerite", "intensificate", "intentate", "intepidite", "intercalate", "intercambiate", "intercettate", "intercise", "intercluse", "intercollegate", "interconnesse", "interconvertite", "interdette", "interessate", "interfacciate", "interfogliate", "interfoliate", "interiorizzate", "interlacciate", "interlineate", "intermesse", "intermezzate", "internalizzate", "internate", "internazionalizzate", "interpellate", "interpenetrate", "interpolate", "interposte", "interpretate", "interpunte", "interrate", "interrogate", "interrotte", "intersecate", "intervallate", "intervistate", "intese", "intessute", "intestardite", "intestate", "intiepidite", "intimate", "intimidite", "intimorite", "intinte", "intirizzite", "intitolate", "intonacate", "intonate", "intontite", "intorbidate", "intorbidite", "intorpidite", "intortate", "intossicate", "intralciate", "intramesse", "intramezzate", "intrappolate", "intraprese", "intrattenute", "intravedute", "intraviste", "intravvedute", "intravviste", "intrecciate", "intricate", "intrigate", "intrinsecate", "intrippate", "intrise", "introdotte", "introflesse", "introiettate", "introitate", "intromesse", "intronate", "intronizzate", "intrudute", "intrufolate", "intrugliate", "intruppate", "intruse", "intubate", "intubettate", "intuite", "inumate", "inumidite", "inurbate", "inutilizzate", "invaghite", "invaginate", "invalidate", "invasate", "invase", "invelenite", "inventariate", "inventate", "invenute", "inverdite", "invergate", "inverniciate", "investigate", "investite", "invetriate", "inviate", "invidiate", "invigorite", "inviluppate", "invischiate", "invitate", "invocate", "invogliate", "involate", "involgarite", "involtate", "involte", "inzaccherate", "inzeppate", "inzigate", "inzolfate", "inzuccate", "inzuccherate", "inzuppate", "iodurate", "ionizzate", "ipertrofizzate", "ipnotizzate", "ipostatizzate", "ipotecate", "ipotizzate", "iridate", "irradiate", "irraggiate", "irreggimentate", "irretite", "irrigate", "irrigidite", "irrise", "irritate", "irrobustite", "irrogate", "irrorate", "irrugginite", "irruvidite", "ischeletrite", "iscritte", "islamizzate", "isolate", "isomerizzate", "ispanizzate", "ispessite", "ispezionate", "ispirate", "issate", "istallate", "istanziate", "istaurate", "isterilite", "istigate", "istillate", "istituite", "istituzionalizzate", "istoriate", "istradate", "istruite", "istupidite", "italianeggiate", "italianizzate", "iterate", "iudicate", "killerate", "labbreggiate", "labializzate", "laccate", "lacerate", "laconizzate", "lacrimate", "ladroneggiate", "lagnate", "lagrimate", "laicizzate", "lambiccate", "lambite", "lamentate", "laminate", "lanciate", "lapidate", "lappate", "lardate", "lardellate", "largite", "larvate", "lascate", "lasciate", "lastricate", "latinizzate", "laudate", "laureate", "lavate", "lavorate", "leccate", "legalizzate", "legate", "leggicchiate", "leggiucchiate", "legittimate", "legittimizzate", "legnate", "lemmatizzate", "lenite", "lesinate", "lesionate", "lese", "lessate", "lette", "levate", "levigate", "liberalizzate", "liberate", "licenziate", "lievitate", "liftate", "lignificate", "limate", "limitate", "linciate", "linearizzate", "lineate", "linkate", "liofilizzate", "liquefatte", "liquidate", "lisate", "lisciate", "lisciviate", "listate", "litografate", "livellate", "lizzate", "lobotomizzate", "localizzate", "locate", "lodate", "logorate", "lordate", "lottate", "lottizzate", "lubrificate", "lucchettate", "lucidate", "lucrate", "lumeggiate", "luppolizzate", "lusingate", "lussate", "lustrate", "macadamizzate", "macchiate", "macchinate", "macellate", "macerate", "maciullate", "maggesate", "maggiorate", "magnate", "magnetizzate", "magnificate", "maiolicate", "maledette", "malfatte", "malignate", "malmenate", "malmesse", "maltate", "maltrattate", "malvedute", "malversate", "malviste", "malvolute", "mandate", "mandrinate", "manducate", "maneggiate", "manganate", "manganellate", "mangiate", "mangiucchiate", "manifatturate", "manifestate", "manimesse", "manipolate", "manlevate", "manomesse", "manoscritte", "manovrate", "mansuefatte", "mantecate", "mantenutase", "mantenute", "manualizzate", "manutenute", "mappate", "marcate", "marchiate", "marcite", "marezzate", "marginalizzate", "marginate", "margottate", "marimesse", "marinate", "maritate", "marmorizzate", "marnate", "marocchinate", "martellate", "martellinate", "martirizzate", "martoriate", "mascherate", "maschiate", "maschiettate", "mascolinizzate", "massacrate", "massaggiate", "massellate", "massicciate", "massificate", "massimate", "massimizzate", "mastectomizzate", "masterizzate", "masticate", "masturbate", "matematizzate", "materializzate", "matricolate", "mattonate", "maturate", "mazziate", "mazzolate", "meccanizzate", "medagliate", "mediate", "medicalizzate", "medicate", "meditate", "membrate", "memorizzate", "menate", "mendicate", "menomate", "mentovate", "menzionate", "meravigliate", "mercanteggiate", "mercerizzate", "mercificate", "meriate", "meridionalizzate", "meritate", "merlate", "merlettate", "merse", "mesciate", "mesciute", "mescolate", "mescute", "mesmerizzate", "messaggiate", "messe", "messoce", "mestate", "mesticate", "mestruate", "metabolizzate", "metaforeggiate", "metaforizzate", "metallizzate", "metamorfizzate", "metamorfosate", "metanizzate", "metilate", "metodizzate", "microfilmate", "microfonate", "microminiaturizzate", "micronizzate", "mietute", "migliorate", "militarizzate", "millantate", "millimetrate", "mimate", "mimeografate", "mimetizzate", "minacciate", "minate", "minchionate", "mineralizzate", "miniate", "miniaturizzate", "minimizzate", "minuite", "minuzzate", "miracolate", "miscelate", "mischiate", "misconosciute", "missate", "mistificate", "misturate", "misurate", "miticizzate", "mitigate", "mitizzate", "mitragliate", "mitrate", "mixate", "mobiliate", "mobilitate", "mobilizzate", "modanate", "modellate", "modellizzate", "moderate", "modernizzate", "modificate", "modulate", "molate", "molestate", "mollate", "molleggiate", "moltiplicate", "monacate", "mondate", "mondializzate", "monetarizzate", "monetate", "monetizzate", "monitorate", "monitorizzate", "monocromatizzate", "monopolizzate", "monottongate", "montate", "monumentalizzate", "mordenzate", "mordicchiate", "mormorate", "morphate", "morsicate", "morsicchiate", "morse", "mortasate", "mortificate", "mosse", "mostrate", "motivate", "motorizzate", "motteggiate", "movimentate", "mozzate", "mugolate", "mulcite", "multate", "multiplexate", "mummificate", "municipalizzate", "munite", "munte", "murate", "musate", "musicate", "mussate", "mutate", "mutilate", "mutizzate", "mutuate", "nappate", "narcotizzate", "narrativizzate", "narrate", "nasalizzate", "nascose", "nascoste", "nastrate", "naturaleggiate", "naturalizzate", "nauseate", "naverate", "navicate", "navigate", "nazificate", "nazionalizzate", "nebulizzate", "necessitate", "necrosate", "necrotizzate", "negativizzate", "negate", "neglette", "negoziate", "negreggiate", "neologizzate", "nerbate", "nericate", "nettate", "neutralizzate", "nevate", "nevicate", "nevischiate", "nevrotizzate", "nichelate", "niellate", "ninfeggiate", "ninnate", "ninnolate", "nitratate", "nitrificate", "nobilitate", "noiate", "noleggiate", "nomate", "nominalizzate", "nominate", "normalizzate", "normate", "notate", "notificate", "notiziate", "notricate", "noverate", "nuclearizzate", "nudricate", "nullificate", "numerate", "numerizzate", "nuotate", "nutrite", "obbiettate", "obbliate", "obbligate", "oberate", "obiettate", "obiettivate", "obiettivizzate", "obiurgate", "obliate", "obliterate", "obnubilate", "occasionate", "occhieggiate", "occidentalizzate", "occise", "occluse", "occultate", "occupate", "ocheggiate", "odiate", "odorate", "odorizzate", "offerite", "offerte", "offese", "officiate", "offiziate", "offuscate", "ofiziate", "oggettivate", "oggettivizzate", "oggettualizzate", "oliate", "olite", "olografate", "oltraggiate", "oltrapassate", "oltrepassate", "omaggiate", "ombrate", "ombreggiate", "omesse", "omogeneizzate", "omogenizzate", "omologate", "ondate", "ondulate", "onestate", "onnubilate", "onorate", "opacate", "opacizzate", "operate", "opinate", "oppiate", "oppignorate", "oppilate", "opposte", "oppresse", "oppugnate", "oprate", "opsonizzate", "optate", "opzionate", "orbitate", "orchestrate", "ordinate", "ordite", "orecchiate", "organate", "organicate", "organizzate", "orgasmate", "orientalizzate", "orientate", "originate", "origliate", "orizzontate", "orlate", "orlettate", "ormate", "ormeggiate", "ornate", "orpellate", "orrate", "orripilate", "ortogonalizzate", "osannate", "osate", "osculate", "oscurate", "ospedalizzate", "ospitate", "ossedute", "ossequiate", "osservate", "ossessionate", "ossidate", "ossificate", "ossitonizzate", "ostacolate", "osteggiate", "ostentate", "ostinate", "ostracizzate", "ostruite", "ottemperate", "ottenebrate", "ottenute", "ottimalizzate", "ottimate", "ottimizzate", "ottonate", "ottriate", "ottuplicate", "otturate", "ottuse", "ottusse", "ovalizzate", "ovariectomizzate", "ovattate", "overcloccate", "ovrate", "ovviate", "ozieggiate", "ozonizzate", "pacate", "pacciamate", "pacificate", "padroneggiate", "paganizzate", "pagate", "paginate", "palafittate", "palatalizzate", "palate", "palesate", "palettate", "palettizzate", "palificate", "palleggiate", "pallettizzate", "palpate", "palpeggiate", "panate", "panneggiate", "panoramicate", "pappate", "paracadutate", "parafate", "paraffinate", "parafrasate", "paragonate", "paragrafate", "paralizzate", "parallelizzate", "parametrate", "parametrizzate", "parassitate", "parate", "parcate", "parcellizzate", "parcheggiate", "pareggiate", "parificate", "parkerizzate", "parlate", "parlucchiate", "parodiate", "partecipate", "particolareggiate", "particolarizzate", "partizionate", "partorite", "parzializzate", "pasciute", "pascolate", "passate", "passeggiate", "passionate", "passivate", "pasticciate", "pastorizzate", "pasturate", "patinate", "patite", "patrocinate", "patteggiate", "pattugliate", "pattuite", "paventate", "pavesate", "pavimentate", "pavoneggiate", "pazziate", "pedinate", "pedonalizzate", "peggiorate", "pelate", "pellettizzate", "penalizzate", "penetrate", "pennellate", "pensate", "pensionate", "pentite", "pepate", "peptonizzate", "peragrate", "percentualizzate", "percepite", "percolate", "percorse", "percosse", "perdonate", "perdotte", "perdute", "perequate", "perfatte", "perfezionate", "perforate", "performate", "perite", "periziate", "perlustrate", "permeate", "permesse", "perorate", "perpetrate", "perpetuate", "perplimute", "perquisite", "perscrutate", "perseguitate", "perseguite", "perse", "personalizzate", "personificate", "persuase", "perturbate", "pervase", "pervertite", "pesate", "pescate", "pestate", "petrarcheggiate", "pettegolate", "pettinate", "piagate", "piaggiate", "piallate", "pianeggiate", "pianificate", "piantate", "piantatale", "piantate", "piante", "piantonate", "piantumate", "piastrellate", "piatite", "piazzate", "picchettate", "picchiate", "picchierellate", "picchiettate", "picconate", "piegate", "pieghettate", "pietrificate", "pigiate", "pigliate", "pigmentate", "pignorate", "pigolate", "pilotate", "pimentate", "pinte", "pinzate", "piombate", "piovigginate", "piovute", "pipate", "pippate", "piratate", "pirogenate", "pisciate", "pitoccate", "pittate", "pitturate", "pizzicate", "pizzicottate", "placate", "placcate", "plagiate", "plasmate", "plasticate", "plastificate", "platinate", "plissettate", "pluralizzate", "poetate", "poeticizzate", "poggiate", "polarizzate", "poligrafate", "polimerizzate", "politicizzate", "polverizzate", "pomiciate", "pompate", "ponderate", "ponzate", "popolarizzate", "popolate", "poppate", "porcellanate", "porfirizzate", "portate", "portese", "porte", "porzionate", "posate", "posdatate", "positivizzate", "posizionate", "posposte", "possedute", "postate", "postdatate", "posteggiate", "posticipate", "postillate", "poste", "postsincronizzate", "postulate", "potabilizzate", "potate", "potenziate", "potute", "pralinate", "praticate", "preaccennate", "preannunciate", "preannunziate", "preavvertite", "preavvisate", "precaricate", "precedute", "precettate", "precinte", "precisate", "precluse", "precompilate", "precompresse", "preconfezionate", "preconizzate", "preconosciute", "precorse", "precostituite", "predate", "predefinite", "predestinate", "predeterminate", "predette", "predicate", "predigerite", "predilette", "predisposte", "preelette", "preesistute", "prefabbricate", "prefate", "prefatte", "prefazionate", "preferite", "prefigurate", "prefinanziate", "prefissate", "prefisse", "preformate", "pregate", "pregiate", "pregiudicate", "pregustate", "preimpregnate", "prelevate", "premeditate", "premescolate", "premesse", "premiate", "premonite", "premunite", "premurate", "premute", "prenotate", "preoccupate", "preordinate", "preparate", "prepensionate", "prepigmentate", "preposte", "preprogrammate", "preraffreddate", "prerefrigerate", "preregistrate", "preregolate", "preriscaldate", "prese", "presagite", "presapute", "presasele", "prescelte", "prescritte", "presedute", "presegnalate", "preselezionate", "presentate", "presentite", "preservate", "presidiate", "presiedute", "prese", "pressate", "presse", "pressurizzate", "prestabilite", "prestampate", "prestate", "prestigiate", "presunte", "presupposte", "pretermesse", "pretese", "pretrattate", "prevaricate", "prevedute", "prevendute", "preventivate", "prevenute", "previste", "prezzate", "prezzolate", "principiate", "privatizzate", "private", "privilegiate", "problematizzate", "procacciate", "processate", "proclamate", "procrastinate", "procreate", "procurate", "prodigate", "prodotte", "profanate", "proferite", "professate", "professionalizzate", "profetate", "profetizzate", "profferite", "profilate", "profondate", "profumate", "profuse", "progettate", "prognosticate", "programmate", "proibite", "proiettate", "proletarizzate", "prolungate", "promanate", "promesse", "promosse", "promozionate", "promulgate", "pronosticate", "pronunciate", "pronunziate", "propagandate", "propagate", "propagginate", "propalate", "propinate", "propiziate", "proporzionate", "proposte", "propugnate", "propulse", "prorogate", "prosciolte", "prosciugate", "proscritte", "proseguite", "prospettate", "prosternate", "prostese", "prostituite", "prostrate", "prosunte", "protese", "protestate", "protette", "protocollate", "protonate", "protratte", "protruse", "provate", "provedute", "provincializzate", "proviste", "provocate", "provvedute", "provviste", "psicanalizzate", "psichiatrizzate", "psicoanalizzate", "psicologizzate", "pubblicate", "pubblicizzate", "puddellate", "pugnalate", "pulite", "pungolate", "punite", "puntate", "punteggiate", "puntellate", "punte", "puntualizzate", "punzecchiate", "punzonate", "purgate", "purificate", "putite", "putrefatte", "putrite", "quadrate", "quadrettate", "quadriennalizzate", "quadruplicate", "qualificate", "quantificate", "quantizzate", "querelate", "questuate", "quetate", "quietanzate", "quietate", "quintessenziate", "quintuplicate", "quotate", "quotizzate", "rabberciate", "rabboccate", "rabbonite", "rabbuffate", "rabuffate", "raccapezzate", "raccapricciate", "raccattate", "raccerchiate", "raccese", "racchetate", "racchiuse", "raccolte", "raccolte", "raccomandate", "raccomodate", "raccontate", "raccorciate", "raccorcite", "raccordate", "raccostate", "raccozzate", "racemizzate", "racimolate", "radazzate", "raddensate", "raddobbate", "raddolcite", "raddoppiate", "raddotte", "raddrizzate", "radiate", "radicalizzate", "radioassistite", "radioattivate", "radiocomandate", "radiodiffuse", "radiografate", "radioguidate", "radiolocalizzate", "radiomarcate", "radiotelegrafate", "radiotrasmesse", "radunate", "raffazzonate", "raffermate", "raffigurate", "raffilate", "raffinate", "rafforzate", "raffreddate", "raffrenate", "raffrescate", "raffrontate", "raggelate", "raggentilite", "ragghiate", "raggirate", "raggiunte", "raggiustate", "raggomitolate", "raggranchiate", "raggranchite", "raggranellate", "raggrinzate", "raggrinzite", "raggrumate", "raggruppate", "raggruzzolate", "ragguagliate", "ralingate", "rallegrate", "rallentate", "ramate", "ramazzate", "rammagliate", "rammaricate", "rammemorate", "rammendate", "rammentate", "rammodernate", "rammollite", "rammorbidite", "rampognate", "randellate", "randomizzate", "rannicchiate", "rannuvolate", "ranzate", "rapate", "rapinate", "rapite", "rappacificate", "rappate", "rappattumate", "rappezzate", "rapportate", "rappresantate", "rappresentate", "rapprese", "rarefatte", "rasate", "raschiate", "raschiettate", "rasentate", "rase", "raspate", "rassegnate", "rasserenate", "rassettate", "rassicurate", "rassodate", "rassomigliate", "rassottigliate", "rassunte", "rastrellate", "rastremate", "rateate", "rateizzate", "ratificate", "ratinate", "rattizzate", "rattoppate", "rattorte", "rattrappite", "rattristate", "rattristite", "raunate", "ravvalorate", "ravvedute", "ravviate", "ravvicinate", "ravviluppate", "ravvisate", "ravviste", "ravvivate", "ravvolte", "ravvoltolate", "razionalizzate", "razionate", "razziate", "razzolate", "realizzate", "reassunte", "recapitate", "recate", "recedute", "recensite", "recepite", "recidivate", "recintate", "recinte", "reciprocate", "recise", "recitate", "reclamate", "reclamizzate", "reclinate", "recluse", "reclutate", "recuperate", "redarguite", "redatte", "redazzate", "reddute", "redente", "redistribuite", "redotte", "referenziate", "refertate", "refilate", "reflesse", "reflettute", "refrante", "refrigerate", "regalate", "regimate", "regimentate", "regionalizzate", "registrate", "regolamentate", "regolarizzate", "regolate", "reidratate", "reificate", "reimbarcate", "reimmerse", "reimmesse", "reimparate", "reimpastate", "reimpiantate", "reimpiegate", "reimportate", "reimpostate", "reincarcerate", "reincaricate", "reincarnate", "reincise", "reincontrate", "reindirizzate", "reindustrializzate", "reinfettate", "reingaggiate", "reinizializzate", "reinnestate", "reinoltrate", "reinscritte", "reinsediate", "reinserite", "reinstallate", "reinstaurate", "reintegrate", "reinterpretate", "reintitolate", "reintrodotte", "reinventate", "reinvestite", "reiterate", "relativizzate", "relazionate", "relegate", "remixate", "remunerate", "renderizzate", "reperite", "repertate", "replicate", "represse", "repulse", "reputate", "requisite", "rescisse", "resecate", "resettate", "residuate", "resinificate", "rese", "resolate", "resolte", "respinte", "respirate", "responsabilizzate", "resposte", "restaurate", "restituite", "resunte", "resuscitate", "reticolate", "retinate", "retribuite", "retrocedute", "retrocesse", "retrodatate", "rettificate", "rette", "reumatizzate", "revisionate", "revocate", "riabbassate", "riabbellite", "riabbonate", "riabbottonate", "riabbracciate", "riabilitate", "riabitate", "riabituate", "riaccadute", "riaccasate", "riaccese", "riaccettate", "riacchiappate", "riacciuffate", "riaccolte", "riaccomodate", "riaccompagnate", "riaccordate", "riaccostate", "riaccreditate", "riacquisite", "riacquistate", "riacutizzate", "riadattate", "riaddestrate", "riaddormentate", "riadoperate", "riaffacciate", "riaffermate", "riafferrate", "riaffiorate", "riaffittate", "riaffrontate", "riagganciate", "riaggiornate", "riaggiustate", "riaggravate", "riaggregate", "riagguantate", "rialimentate", "riallacciate", "riallargate", "riallineate", "riallocate", "riallungate", "rialzate", "riamate", "riambientate", "riammalate", "riammesse", "riammodernate", "riammogliate", "rianimate", "riannesse", "riannodate", "riannunciate", "riaperte", "riappacificate", "riappaltate", "riapparecchiate", "riapparite", "riappese", "riappiccicate", "riapplicate", "riapprese", "riapprodate", "riappropriate", "riapprovate", "riarmate", "riarrangiate", "riarredate", "riascoltate", "riasfaltate", "riassalite", "riassaporate", "riassegnate", "riassemblate", "riassestate", "riassettate", "riassicurate", "riassociate", "riassopite", "riassorbite", "riassunte", "riattaccate", "riattate", "riattese", "riattinte", "riattivate", "riattizzate", "riattraversate", "riaumentate", "riavute", "riavventate", "riavvertite", "riavviate", "riavvicinate", "riavvinte", "riavvisate", "riavvistate", "riavvolte", "riazzuffate", "ribaciate", "ribadite", "ribaltate", "ribassate", "ribattezzate", "ribattute", "ribellate", "ribenedette", "ribevute", "ributtate", "ricacciate", "ricalate", "ricalcate", "ricalcificate", "ricalcitrate", "ricalcolate", "ricalibrate", "ricamate", "ricambiate", "ricanalizzate", "ricandidate", "ricantate", "ricapitalizzate", "ricapitolate", "ricaricate", "ricategorizzate", "ricattate", "ricavate", "ricelebrate", "ricercate", "ricetrasmesse", "ricettate", "ricevute", "richiamate", "richieste", "richiuse", "riciclate", "ricinte", "ricircolate", "riclassificate", "ricodificate", "ricollegate", "ricollocate", "ricolmate", "ricolonizzate", "ricolorate", "ricolorite", "ricoltivate", "ricombinate", "ricominciate", "ricommesse", "ricomparite", "ricompattate", "ricompensate", "ricomperate", "ricompilate", "ricompiute", "ricomposte", "ricomprate", "ricompresse", "ricomunicate", "riconcedute", "riconcesse", "riconciliate", "ricondizionate", "ricondotte", "riconfermate", "riconfezionate", "riconfigurate", "riconfortate", "riconfuse", "ricongelate", "ricongiunte", "riconnesse", "riconosciute", "riconquistate", "riconsacrate", "riconsegnate", "riconsiderate", "riconsigliate", "riconsolate", "ricontate", "ricontattate", "ricontrattate", "ricontratte", "ricontrollate", "riconvalidate", "riconvenute", "riconvertite", "riconvinte", "riconvocate", "riconvogliate", "ricoperte", "ricopiate", "ricordate", "ricoricate", "ricorrette", "ricosparse", "ricostituite", "ricostrette", "ricostruite", "ricotte", "ricoverate", "ricreate", "ricristallizzate", "ricrocifisse", "ricucite", "ricuperate", "ricusate", "ridate", "ridecorate", "ridefinite", "ridenominate", "ridestate", "rideterminate", "ridette", "ridicolizzate", "ridigitate", "ridimensionate", "ridipinte", "ridiscese", "ridisciolte", "ridisciplinate", "ridiscusse", "ridisegnate", "ridisfatte", "ridisposte", "ridistese", "ridistinte", "ridistribuite", "ridivise", "ridomandate", "ridonate", "ridondate", "ridorate", "ridotate", "ridotte", "ridovute", "riecheggiate", "riedificate", "rieducate", "rielaborate", "rielette", "riemesse", "riempite", "riempiute", "rientrate", "riepilogate", "riequilibrate", "riequipaggiate", "riesaminate", "rieseguite", "riesercitate", "riesplose", "riesportate", "riesposte", "riespresse", "riespulse", "riestese", "riesumate", "rietichettate", "rievaporate", "rievocate", "rifabbricate", "rifasciate", "rifatte", "rifendute", "riferite", "rifermate", "rifermentate", "rifesse", "rificcate", "rifilate", "rifiltrate", "rifinanziate", "rifinite", "rifirmate", "rifischiate", "rifisse", "rifiutate", "riflesse", "riflettute", "rifocillate", "rifoderate", "rifondate", "riforestate", "riforgiate", "riformate", "riformattate", "riformulate", "rifornite", "rifrante", "rifritte", "rifrugate", "rifuggite", "rifugiate", "rifuse", "rigassificate", "rigate", "rigelate", "rigenerate", "rigettate", "righettate", "rigiocate", "rigirate", "rigiudicate", "rigiunte", "rigodute", "rigonfiate", "rigovernate", "riguadagnate", "riguardate", "rigurgitate", "rilanciate", "rilasciate", "rilassate", "rilavate", "rilavorate", "rilegate", "rilette", "rilevate", "rilocalizzate", "rimagliate", "rimandate", "rimaneggiate", "rimangiate", "rimappate", "rimarcate", "rimarchiate", "rimarginate", "rimaritate", "rimasticate", "rimate", "rimbacuccate", "rimbaldanzite", "rimbarcate", "rimbeccate", "rimbecillite", "rimbellite", "rimbiancate", "rimbiondite", "rimboccate", "rimbombate", "rimborsate", "rimboscate", "rimboschite", "rimbrottate", "rimediate", "rimembrate", "rimemorate", "rimenate", "rimeritate", "rimescolate", "rimesse", "rimestate", "rimilitarizzate", "rimirate", "rimischiate", "rimisurate", "rimodellate", "rimodernate", "rimodulate", "rimondate", "rimontate", "rimorchiate", "rimorse", "rimosse", "rimostrate", "rimotivate", "rimpacchettate", "rimpadronite", "rimpaginate", "rimpagliate", "rimpannucciate", "rimpastate", "rimpatriate", "rimpiallacciate", "rimpiante", "rimpiattate", "rimpiazzate", "rimpicciolite", "rimpiccolite", "rimpiegate", "rimpinguate", "rimpinzate", "rimpolpate", "rimpossessate", "rimpresse", "rimproverate", "rimuginate", "rimunerate", "rimunte", "rimusicate", "rimutate", "rinarrate", "rinascoste", "rincalcate", "rincalzate", "rincamminate", "rincantucciate", "rincarate", "rincarcerate", "rincarnate", "rincentrate", "rinchieste", "rinchiodate", "rinchiuse", "rincitrullite", "rincivilite", "rincoglionite", "rincollate", "rincominciate", "rincontrate", "rincoraggiate", "rincorate", "rincorporate", "rincorse", "rincretinite", "rincrudite", "rinculcate", "rincuorate", "rindossate", "rindurite", "rinegoziate", "rinfacciate", "rinfagottate", "rinfiammate", "rinfiancate", "rinfilate", "rinfittite", "rinfocolate", "rinfoderate", "rinforzate", "rinfrancate", "rinfrante", "rinfrescate", "rinfuse", "ringagliardite", "ringalluzzite", "ringiovanite", "ringiovenite", "ringoiate", "ringorgate", "ringraziate", "ringuainate", "rinnamorate", "rinnegate", "rinnestate", "rinnovate", "rinnovellate", "rinociute", "rinomate", "rinominate", "rinormalizzate", "rinquadrate", "rinsaccate", "rinsaldate", "rinsanguate", "rinselvatichite", "rinselvate", "rinserrate", "rintanate", "rintasate", "rintascate", "rintavolate", "rintenerite", "rinterrate", "rinterrogate", "rintese", "rintiepidite", "rintoccate", "rintonacate", "rintontite", "rintorpidite", "rintracciate", "rintrodotte", "rintronate", "rintuzzate", "rinunciate", "rinunziate", "rinutrite", "rinvangate", "rinvasate", "rinvenute", "rinverdite", "rinvestite", "rinviate", "rinvigorite", "rinvilite", "rinvitate", "rinvoltate", "rinvolte", "rinvoltolate", "rinzaffate", "rinzeppate", "riobbligate", "rioccupate", "riofferte", "rioffese", "rioperate", "riordinate", "riorganizzate", "riorientate", "riosservate", "riottenute", "riottimizzate", "riotturate", "ripagate", "riparametrizzate", "riparate", "ripartite", "ripassate", "ripercorse", "ripercosse", "riperdute", "riperse", "ripesate", "ripescate", "ripestate", "ripetute", "ripianate", "ripianificate", "ripiantate", "ripiante", "ripicchiate", "ripiegate", "ripigliate", "ripinte", "ripiovute", "ripitturate", "riplasmate", "ripolarizzate", "ripopolate", "riportate", "riporte", "riposate", "riposizionate", "ripossedute", "riposte", "ripotute", "ripresentate", "riprese", "riprestate", "ripretese", "riprincipiate", "ripristinate", "riprivatizzate", "riprodotte", "riprogettate", "riprogrammate", "ripromesse", "riproposte", "riprotette", "riprovate", "riprovvedute", "riprovviste", "ripubblicate", "ripudiate", "ripugnate", "ripulite", "ripuntate", "ripunte", "ripurgate", "riputate", "riquadrate", "riqualificate", "rirese", "rirotte", "risaldate", "risalite", "risaltate", "risalutate", "risanate", "risapute", "risarcite", "riscalate", "riscaldate", "riscattate", "riscelte", "riscese", "rischiarate", "rischiate", "risciacquate", "risciolte", "riscommesse", "riscontate", "riscontrate", "risconvolte", "riscoperte", "riscoppiate", "riscorse", "riscosse", "riscritte", "risecate", "risedute", "risegate", "risegnate", "riselciate", "riselezionate", "riseminate", "risentite", "riseppellite", "riserbate", "riservate", "risicate", "risigillate", "risistemate", "rise", "risoffiate", "risoggiunte", "risolate", "risolidificate", "risollevate", "risolte", "risommate", "risommerse", "risonate", "risorpassate", "risospese", "risospinte", "risottomesse", "risparmiate", "risparse", "rispecchiate", "rispedite", "rispente", "risperse", "rispettate", "rispiegate", "rispinte", "rispolverate", "risposate", "risposte", "rissate", "ristabilite", "ristagnate", "ristampate", "ristaurate", "ristese", "ristilizzate", "ristorate", "ristrette", "ristrutte", "ristrutturate", "ristuccate", "ristudiate", "risucchiate", "risultate", "risuolate", "risuonate", "risuscitate", "risvegliate", "risvolte", "ritagliate", "ritarate", "ritardate", "ritemprate", "ritentate", "ritenute", "riterse", "ritese", "ritinte", "ritirate", "ritoccate", "ritolte", "ritorte", "ritracciate", "ritradotte", "ritrascorse", "ritrascritte", "ritrasferite", "ritrasformate", "ritrasmesse", "ritrasposte", "ritrattate", "ritratte", "ritrovate", "ritualizzate", "rituffate", "riudite", "riunificate", "riunite", "riusate", "riutilizzate", "rivaccinate", "rivaleggiate", "rivalorizzate", "rivalse", "rivalutate", "rivangate", "rivedute", "rivelate", "rivendicate", "rivendute", "riverberate", "riverite", "riverniciate", "riversate", "rivestite", "rivettate", "rivinte", "rivisitate", "rivissute", "riviste", "rivitalizzate", "rivivificate", "rivoltate", "rivolte", "rivoltolate", "rivolute", "rivoluzionate", "rizappate", "rizzate", "robotizzate", "rodate", "rogate", "rollate", "romanizzate", "romanticizzate", "romanzate", "roncolate", "rosicate", "rosicchiate", "rose", "rosolate", "rotacizzate", "rotate", "roteate", "rotolate", "rottamate", "rotte", "rovesciate", "rovinate", "rovistate", "rubacchiate", "rubate", "rullate", "ruminate", "ruotate", "russificate", "ruzzolate", "sabbiate", "sabotate", "saccarificate", "saccheggiate", "sacralizzate", "sacramentate", "sacrificate", "saettate", "saggiate", "sagginate", "sagomate", "salamoiate", "salariate", "salassate", "salate", "saldate", "salificate", "salinizzate", "salite", "salmeggiate", "salmistrate", "salpate", "saltate", "salutate", "salvaguardate", "salvate", "sanate", "sancite", "sanforizzate", "sanificate", "sanitizzate", "santificate", "sanzionate", "saponificate", "sapute", "sarchiate", "sarchiellate", "sartiate", "satellizzate", "satinate", "satireggiate", "satisfatte", "satollate", "saturate", "saziate", "sbaccellate", "sbaciucchiate", "sbafate", "sbaffate", "sbalestrate", "sballate", "sballottate", "sballottolate", "sbalordite", "sbalzate", "sbancate", "sbandate", "sbandierate", "sbandite", "sbaraccate", "sbaragliate", "sbarazzate", "sbarbate", "sbarcate", "sbardate", "sbarrate", "sbassate", "sbastite", "sbatacchiate", "sbattezzate", "sbattute", "sbeccate", "sbeffeggiate", "sbellicate", "sbendate", "sbertucciate", "sbiadite", "sbiancate", "sbianchite", "sbiellate", "sbiettate", "sbigottite", "sbilanciate", "sbirbate", "sbirciate", "sbizzarrite", "sbloccate", "sbobinate", "sboccate", "sbocconcellate", "sbollentate", "sbolognate", "sborniate", "sborsate", "sboscate", "sbottonate", "sbozzate", "sbozzimate", "sbozzolate", "sbracate", "sbracciate", "sbraciate", "sbraitate", "sbranate", "sbrancate", "sbrattate", "sbreccate", "sbriciolate", "sbrigate", "sbrigliate", "sbrinate", "sbrindellate", "sbrodolate", "sbrogliate", "sbronzate", "sbruffate", "sbucciate", "sbudellate", "sbuffate", "sbugiardate", "sbullettate", "sbullonate", "sburrate", "scacazzate", "scacchiate", "scacciate", "scaccolate", "scadenzate", "scafate", "scaffalate", "scagionate", "scagliate", "scaglionate", "scalate", "scalcate", "scalcinate", "scaldate", "scalettate", "scalfate", "scalfite", "scalmanate", "scaloppate", "scalpate", "scalpellate", "scalpellinate", "scaltrite", "scalzate", "scambiate", "scamiciate", "scamosciate", "scamozzate", "scampate", "scampatale", "scampate", "scamuffate", "scanalate", "scancellate", "scandagliate", "scandalizzate", "scandite", "scannate", "scannellate", "scannerate", "scannerizate", "scannerizzate", "scansate", "scansionate", "scapecchiate", "scapezzate", "scapicollate", "scapigliate", "scapitozzate", "scapocchiate", "scappate", "scappellate", "scappottate", "scapricciate", "scapsulate", "scarabocchiate", "scaracchiate", "scaraventate", "scarcerate", "scardassate", "scardate", "scardinate", "scaricate", "scarificate", "scarmigliate", "scarnate", "scarnificate", "scarnite", "scarrellate", "scarrocciate", "scarrozzate", "scarruffate", "scartabellate", "scartate", "scartavetrate", "scartinate", "scartocciate", "scassate", "scassinate", "scatenate", "scattate", "scavalcate", "scavallate", "scavate", "scavezzate", "scazzottate", "scekerate", "scelte", "scempiate", "sceneggiate", "scernute", "scervellate", "scese", "sceverate", "schedate", "schedulate", "scheggiate", "scheletrite", "schematizzate", "schermate", "schermite", "schermografate", "schernite", "schiacciate", "schiaffate", "schiaffeggiate", "schiantate", "schiarite", "schiavardate", "schiavizzate", "schiccherate", "schierate", "schifate", "schinciate", "schioccate", "schiodate", "schiumate", "schiuse", "schivate", "schizzate", "schizzettate", "sciabolate", "sciabordate", "sciacquate", "scialacquate", "sciamanizzate", "sciamannate", "sciancate", "sciancrate", "scimmieggiate", "scimmiottate", "scinte", "scioccate", "sciolinate", "sciolte", "sciorinate", "scippate", "sciroppate", "scisse", "sciupacchiate", "sciupate", "sclamate", "sclerosate", "sclerotizzate", "scoccate", "scocciate", "scodate", "scodellate", "scoiate", "scolarizzate", "scolate", "scollacciate", "scollate", "scollegate", "scolorate", "scolorite", "scolpate", "scolpite", "scombaciate", "scombinate", "scombussolate", "scommesse", "scomodate", "scompaginate", "scompagnate", "scompartite", "scompattate", "scompensate", "scompiacute", "scompigliate", "scomposte", "scomputate", "scomunicate", "sconcertate", "sconciate", "sconcluse", "sconfessate", "sconficcate", "sconﬁtte", "sconfortate", "sconfuse", "scongelate", "scongiurate", "sconnesse", "sconosciute", "sconquassate", "sconsacrate", "sconsigliate", "sconsolate", "scontate", "scontentate", "scontornate", "scontorte", "scontrate", "sconvolte", "scopate", "scoperchiate", "scoperte", "scopiazzate", "scoraggiate", "scoraggite", "scorate", "scorazzate", "scorciate", "scorcite", "scordate", "scoreggiate", "scorificate", "scornate", "scorniciate", "scoronate", "scorporate", "scorrazzate", "scorreggiate", "scorrette", "scorse", "scortate", "scortecciate", "scorticate", "scorte", "scorzate", "scoscese", "scosciate", "scosse", "scostate", "scostolate", "scotennate", "scoticate", "scotolate", "scotomizzate", "scottate", "scotte", "scovate", "scoverte", "scozzate", "scozzonate", "screditate", "scremate", "screpolate", "screziate", "scribacchiate", "scriminate", "scristianizzate", "scritte", "scritturate", "scroccate", "scrocchiate", "scrollate", "scrostate", "scrutate", "scrutinate", "scucite", "scudisciate", "scuffiate", "sculacciate", "sculettate", "scuoiate", "scuriosate", "scurite", "scusate", "sdaziate", "sdebitate", "sdegnate", "sdemanializzate", "sdentate", "sdilinquite", "sdoganate", "sdolute", "sdoppiate", "sdraiate", "sdrammatizzate", "sdrucite", "secate", "seccate", "secernute", "secolarizzate", "secondate", "secretate", "secrete", "sedate", "sedentarizzate", "sedotte", "segate", "seghettate", "segmentate", "segnalate", "segnate", "segnoreggiate", "segregate", "segretate", "seguitate", "seguite", "selciate", "selezionate", "sellate", "sembrate", "sementate", "semicinte", "seminate", "semplificate", "senilizzate", "sensibilizzate", "sensorizzate", "sentenziate", "sentite", "sentitasele", "sentite", "sentite", "separate", "sepolte", "seppellite", "sequenziate", "sequestrate", "serbate", "serrate", "servite", "servoassistite", "sessualizzate", "sestuplicate", "setacciate", "setificate", "settate", "settorializzate", "settuplicate", "seviziate", "sezionate", "sfaccettate", "sfagliate", "sfaldate", "sfalsate", "sfamate", "sfanalate", "sfangate", "sfarinate", "sfasate", "sfasciate", "sfatate", "sfatte", "sfavillate", "sfavorite", "sfegatate", "sfeltrate", "sfendute", "sferragliate", "sferrate", "sferzate", "sfesse", "sfiancate", "sfiatate", "sfiate", "sfibbiate", "sfibrate", "sfidate", "sfiduciate", "sfigurate", "sfilate", "sfilettate", "sfinite", "sfioccate", "sfiorate", "sfittate", "sfocate", "sfociate", "sfoderate", "sfogate", "sfoggiate", "sfogliate", "sfollate", "sfoltite", "sfondate", "sforacchiate", "sforate", "sforbiciate", "sformate", "sfornaciate", "sfornate", "sfornite", "sforzate", "sfottute", "sfracellate", "sfrangiate", "sfrascate", "sfratate", "sfrattate", "sfrecciate", "sfregate", "sfregiate", "sfrenate", "sfrisate", "sfrondate", "sfrucugliate", "sfruculiate", "sfruttate", "sfumate", "sfuocate", "sgamate", "sganasciate", "sganciate", "sgarbugliate", "sgattaiolate", "sgelate", "sghiacciate", "sgocciolate", "sgolate", "sgomberate", "sgombrate", "sgomentate", "sgominate", "sgomitate", "sgomitolate", "sgonfiate", "sgorbiate", "sgottate", "sgovernate", "sgozzate", "sgraffiate", "sgraffignate", "sgranate", "sgranchite", "sgranellate", "sgrassate", "sgravate", "sgretolate", "sgridate", "sgrommate", "sgrondate", "sgroppate", "sgrossate", "sgrovigliate", "sgrugnate", "sguainate", "sgualcite", "sguanciate", "sguarnite", "sguinzagliate", "sgusciate", "shakerate", "shoccate", "shuntate", "sigillate", "siglate", "significate", "signoreggiate", "silenziate", "silicizzate", "sillabate", "sillogizzate", "silurate", "simboleggiate", "simbolizzate", "simmetrizzate", "simpatizzate", "simulate", "sincerate", "sincopate", "sincretizzate", "sincronizzate", "sindacalizzate", "sindacate", "singolarizzate", "sinistrate", "sinizzate", "sinterizzate", "sintetizzate", "sintonizzate", "siringate", "sistematizzate", "sistemate", "situate", "slabbrate", "slacciate", "slamate", "slanciate", "slappolate", "slargate", "slavizzate", "slegate", "slentate", "slinguate", "slogate", "sloggate", "sloggiate", "slombate", "slungate", "smaccate", "smacchiate", "smagliate", "smagnetizzate", "smagrite", "smaliziate", "smallate", "smaltate", "smaltite", "smammate", "smanacciate", "smangiate", "smantellate", "smarcate", "smarginate", "smarrite", "smascellate", "smascherate", "smaterializzate", "smattonate", "smembrate", "smentite", "smerciate", "smerdate", "smerigliate", "smerlate", "smerlettate", "smessale", "smesse", "smezzate", "smidollate", "smielate", "smilitarizzate", "sminate", "sminuite", "sminuzzate", "smistate", "smitizzate", "smobiliate", "smobilitate", "smobilizzate", "smoccolate", "smollicate", "smonacate", "smontate", "smorbate", "smorzate", "smosse", "smozzicate", "smunte", "smurate", "smussate", "smutandate", "snaturate", "snazionalizzate", "snebbiate", "snellite", "snervate", "snidate", "sniffate", "snobbate", "snocciolate", "snodate", "snudate", "sobbarcate", "sobbollite", "sobillate", "socchiuse", "soccorse", "soddisfatte", "sodisfatte", "sodomizzate", "sofferite", "soffermate", "sofferte", "soffiate", "soffocate", "soffregate", "soffritte", "soffuse", "sofisticate", "soggettivate", "soggettivizzate", "sogghignate", "soggiogate", "soggiunte", "sogguardate", "sognate", "solarizzate", "solcate", "soleggiate", "solennizzate", "solfeggiate", "solfitate", "solfonate", "solforate", "solidificate", "solite", "sollazzate", "sollecitate", "solleticate", "sollevate", "solte", "solubilizzate", "solute", "soluzionate", "solvatate", "somatizzate", "someggiate", "somigliate", "sommate", "sommerse", "sommesse", "somministrate", "sommosse", "sonate", "sondate", "sonorizzate", "sopite", "soppalcate", "soppesate", "soppiantate", "sopportate", "sopposte", "soppresse", "sopraddotate", "sopraeccitate", "sopraedificate", "sopraelevate", "sopraffate", "sopraffatte", "sopraggiunte", "sopraintese", "soprammesse", "soprannominate", "sopraposte", "soprapprese", "soprascritte", "sopraspese", "soprassaturate", "soprassedute", "sopravanzate", "sopravvalutate", "sopravvedute", "sopravvinte", "sopravviste", "sopreccitate", "sopredificate", "soprelevate", "soprintese", "sorbettate", "sorbite", "sorgiunte", "sormontate", "sorpassate", "sorprese", "sorrase", "sorrette", "sorseggiate", "sorteggiate", "sortite", "sorvegliate", "sorvolate", "soscritte", "sospese", "sospettate", "sospinte", "sospirate", "sostantivate", "sostanziate", "sostentate", "sostenute", "sostituite", "sottaciute", "sotterrate", "sottese", "sottintese", "sottoalimentate", "sottocapitalizzate", "sottodivise", "sottoesposte", "sottofirmate", "sottolineate", "sottomesse", "sottomurate", "sottopagate", "sottopassate", "sottoposte", "sottorappresentate", "sottorise", "sottoscritte", "sottostimate", "sottosviluppate", "sottotitolate", "sottovalutate", "sottratte", "soverchiate", "sovesciate", "sovietizzate", "sovracapitalizzate", "sovraccaricate", "sovradimensionate", "sovraeccitate", "sovraesposte", "sovraffaticate", "sovraffollate", "sovraggiunte", "sovraimposte", "sovraintese", "sovralimentate", "sovramodulate", "sovrappopolate", "sovrapposte", "sovrariscaldate", "sovrasaturate", "sovrascritte", "sovrastampate", "sovrastate", "sovrastimate", "sovrautilizzate", "sovreccitate", "sovresposte", "sovrimposte", "sovrintese", "sovvenute", "sovvenzionate", "sovvertite", "spaccate", "spacchettate", "spacciate", "spaginate", "spaiate", "spalancate", "spalate", "spalcate", "spalleggiate", "spalmate", "spammate", "spampanate", "spampinate", "spanate", "spanciate", "spandute", "spannate", "spannocchiate", "spanse", "spantanate", "spante", "spaparacchiate", "spaparanzate", "spappolate", "sparate", "sparecchiate", "sparigliate", "sparite", "sparlate", "sparpagliate", "spartite", "spassate", "spassatosele", "spastoiate", "spaurate", "spaurite", "spaventate", "spazializzate", "spaziate", "spazieggiate", "spazientite", "spazzate", "spazzolate", "specchiate", "specializzate", "specificate", "specillate", "specolate", "spedite", "spegnate", "spelacchiate", "spelate", "spellate", "spennacchiate", "spennate", "spennellate", "spente", "spenzolate", "sperate", "sperimentate", "spernacchiate", "speronate", "sperperate", "spersonalizzate", "sperticate", "spesate", "spese", "spessite", "spettacolarizzate", "spettinate", "spezzate", "spezzettate", "spezziate", "spezzonate", "spiaccicate", "spianate", "spiantate", "spiate", "spiattellate", "spiazzate", "spiccate", "spicciate", "spiccicate", "spicciolate", "spicconate", "spidocchiate", "spiegate", "spiegazzate", "spietrate", "spifferate", "spigionate", "spignorate", "spigolate", "spigrite", "spillate", "spilluzzicate", "spiluccate", "spinte", "spintonate", "spiombate", "spiralizzate", "spirantizzate", "spirate", "spiritualizzate", "spiumate", "spizzicate", "spodestate", "spoetizzate", "spogliate", "spolettate", "spoliate", "spoliticizzate", "spollonate", "spolmonate", "spolpate", "spoltronite", "spolverate", "spolverizzate", "spompate", "spompinate", "sponsorizzate", "spopolate", "spoppate", "sporcate", "sportate", "sporte", "sposate", "spossedute", "spossessate", "spostate", "sposte", "sprangate", "sprecate", "spregiate", "spremute", "spretate", "sprezzate", "sprigionate", "sprimacciate", "spromesse", "spronate", "sprotette", "sprovincializzate", "sprovvedute", "sprovviste", "spruzzate", "spugnate", "spulate", "spulciate", "spuntate", "spuntellate", "spupazzate", "spurgate", "sputacchiate", "sputate", "sputtanate", "squadernate", "squadrate", "squagliate", "squagliatasele", "squagliate", "squalificate", "squamate", "squarciate", "squartate", "squassate", "squattrinate", "squilibrate", "squinternate", "sradicate", "srotolate", "srugginite", "stabbiate", "stabilite", "stabilizzate", "stabulate", "staccate", "stacciate", "staffate", "staffilate", "staggiate", "staggite", "stagionate", "stagliate", "stagnate", "stamburate", "stampate", "stampigliate", "stanate", "stancate", "standardizzate", "stangate", "stanziate", "stappate", "starate", "starnazzate", "stasate", "statalizzate", "statizzate", "statoce", "statosene", "statuite", "stazzate", "stazzonate", "steccacciate", "steccate", "stecchite", "stecconate", "stemperate", "stempiate", "stenografate", "stereotipate", "sterilite", "sterilizzate", "sterpate", "sterrate", "sterzate", "stese", "stigliate", "stigmatizzate", "stilate", "stilettate", "stilizzate", "stillate", "stimate", "stimolate", "stinte", "stipate", "stipendiate", "stipulate", "stiracchiate", "stirate", "stivate", "stizzite", "stoccate", "stolte", "stomacate", "stonate", "stondate", "stoppate", "stordite", "storicizzate", "stornate", "storpiate", "stortate", "storte", "stozzate", "strabenedette", "strabuzzate", "stracannate", "straccate", "stracciate", "stracotte", "strafogate", "stragodute", "stralciate", "stralodate", "stralunate", "stramaledette", "stramortite", "strangolate", "straniate", "stranite", "straorzate", "strapagate", "strapazzate", "straperdute", "straperse", "strappate", "strasapute", "strascicate", "strascinate", "strasformate", "stratificate", "strattonate", "stravaccate", "stravinte", "stravolte", "stravolute", "straziate", "stregate", "stremate", "stressate", "striate", "stridulate", "strigate", "strigliate", "strillate", "striminzite", "strimpellate", "strinate", "stringate", "strisciate", "stritolate", "strizzate", "strofinate", "strombate", "strombazzate", "stroncate", "stronzate", "stropicciate", "stroppate", "stroppiate", "strozzate", "struccate", "strumentalizzate", "strumentate", "strusciate", "strutte", "strutturalizzate", "strutturate", "stuccate", "studiacchiate", "studiate", "stuellate", "stufate", "stupefatte", "stupite", "stuprate", "sturate", "stutate", "stuzzicate", "suase", "subaffittate", "subappaltate", "subbiate", "subdelegate", "subissate", "subite", "sublicenziate", "sublimate", "sublocate", "subodorate", "subordinate", "subornate", "suburbanizzate", "sucate", "succhiate", "succhiellate", "succiate", "succinte", "succise", "suddistinte", "suddivise", "suffissate", "suffisse", "suffragate", "suffumicate", "suffuse", "suggellate", "suggerite", "suggestionate", "suicidate", "sunteggiate", "sunte", "suolate", "suonate", "superate", "superpagate", "superraffreddate", "supervalutate", "supervisionate", "supplicate", "supplite", "supportate", "supposte", "suppurate", "surclassate", "surfate", "surgelate", "surraffreddate", "surriscaldate", "surrogate", "survoltate", "suscitate", "susseguite", "sussidiate", "sussunte", "sussurrate", "suturate", "svaccate", "svagate", "svaligiate", "svalutate", "svapate", "svariate", "svasate", "svecchiate", "svegliate", "svelate", "svelenite", "sveltite", "svelte", "svenate", "svendute", "sventagliate", "sventate", "sventolate", "sventrate", "sverginate", "svergognate", "svergolate", "sverminate", "sverniciate", "svestite", "svettate", "svezzate", "sviate", "svignatosele", "svigorite", "svilite", "svillaneggiate", "sviluppate", "svinate", "svincolate", "sviolinate", "svirgolate", "svirilizzate", "svisate", "sviscerate", "svitate", "sviticchiate", "svolate", "svolazzate", "svolte", "svolute", "svuotate", "tabuizzate", "tabulate", "taccate", "taccheggiate", "tacciate", "tacitate", "taciute", "tagliate", "taglieggiate", "tagliuzzate", "talebanizzate", "tallonate", "tampinate", "tamponate", "tangute", "tannate", "tappate", "tappezzate", "tarate", "tardate", "targate", "tariffate", "tarlate", "tarmate", "taroccate", "tarpate", "tartagliate", "tartassate", "tartufate", "tassate", "tassellate", "tastate", "tasteggiate", "tatuate", "tecnicizzate", "tecnologizzate", "tedeschizzate", "tediate", "teflonate", "telecomandate", "telecontrollate", "telediffuse", "telefonate", "telegrafate", "teleguidate", "telematizzate", "telemetrate", "teleradiotrasmesse", "teletrasmesse", "teletrasportate", "tematizzate", "temperate", "tempestate", "tempificate", "templatizzate", "temporizzate", "temprate", "temute", "tentate", "tenute", "teologizzate", "teorizzate", "tepefatte", "terebrate", "terminate", "termostatate", "terrazzate", "terrificate", "terrorizzate", "terse", "terzarolate", "terziarizzate", "terziate", "tesate", "tesaurizzate", "tese", "tesserate", "testate", "testificate", "testimoniate", "timbrate", "tindalizzate", "tinteggiate", "tinte", "tipicizzate", "tipizzate", "tippate", "tiranneggiate", "tirate", "titillate", "titolate", "toccate", "toelettate", "tollerate", "tolte", "tonalizzate", "tonificate", "tonneggiate", "tonsurate", "torchiate", "tormentate", "tornatosene", "tornite", "torrefatte", "torte", "tortoreggiate", "torturate", "tosate", "toscaneggiate", "toscanizzate", "tostate", "totalizzate", "traboccate", "trabuccate", "tracannate", "tracciate", "tradite", "tradotte", "trafficate", "trafilate", "trafitte", "traforate", "trafugate", "traghettate", "traguardate", "trainate", "tralasciate", "tralignate", "tramandate", "tramate", "trambasciate", "tramesse", "tramestate", "tramezzate", "tramortite", "tramutate", "tranciate", "trangugiate", "tranquillate", "tranquillizzate", "transatte", "transcese", "transcodificate", "transcorse", "transcritte", "transennate", "transfluite", "transfuse", "transistorizzate", "translitterate", "transposte", "transricevute", "transustanziate", "transvedute", "transviste", "trapanate", "trapassate", "trapiantate", "traportate", "traposte", "trapposte", "trapuntate", "trapunte", "trarotte", "trasandate", "trasbordate", "trascelte", "trascese", "trascinate", "trascorse", "trascritte", "trascurate", "trasdotte", "trasferite", "trasfigurate", "trasformate", "trasfuse", "trasgredite", "traslate", "traslitterate", "traslocate", "trasmesse", "trasmutate", "trasparite", "traspirate", "trasportate", "trasposte", "trastullate", "trasudate", "trasvolate", "trasvolte", "trattate", "tratteggiate", "trattenute", "tratte", "traumatizzate", "travagliate", "travalicate", "travasate", "travedute", "traversate", "travestite", "traviate", "travisate", "traviste", "travolte", "trebbiate", "triangolate", "tribbiate", "tribolate", "tributate", "triennalizzate", "trimestralizzate", "trincate", "trincerate", "trinciate", "tripartite", "triplicate", "trisecate", "trisezionate", "tritate", "triturate", "trivellate", "trollate", "trombate", "troncate", "tropicalizzate", "trovate", "truccate", "trucidate", "truffate", "tuffate", "tumefatte", "tumulate", "turate", "turbate", "turlupinate", "tutelate", "ubbligate", "ubicate", "ubidite", "ubiquitinate", "ubriacate", "uccellate", "uccellinate", "uccise", "udite", "ufficializzate", "uggite", "ugnate", "uguagliate", "ulcerate", "ulite", "ulolate", "ultimate", "ultracentrifugate", "ululate", "umanate", "umanizzate", "umettate", "umidificate", "umidite", "umiliate", "uncinate", "unguentate", "unificate", "uniformate", "unite", "univerbate", "universaleggiate", "universalizzate", "untate", "unte", "uperizzate", "urbanizzate", "urgenzate", "urlate", "urtacchiate", "urtate", "urticchiate", "usate", "usciolate", "usolate", "ustionate", "usucapite", "usurate", "usurpate", "utilitate", "utilizzate", "vaccinate", "vagabondeggiate", "vagellate", "vagheggiate", "vagillate", "vagliate", "valcate", "valicate", "validate", "valorizzate", "valse", "valutate", "vanagloriate", "vanate", "vandalizzate", "vangate", "vangelizzate", "vanificate", "vanite", "vantaggiate", "vantate", "vaporate", "vaporizzate", "varate", "varcate", "variate", "vasectomizzate", "vaticinate", "vedovate", "vedute", "vegetate", "veggiate", "vegliate", "veicolate", "velarizzate", "velate", "velettate", "velinate", "vellicate", "vellutate", "velocizzate", "vendemmiate", "vendicate", "vendicchiate", "venducchiate", "vendute", "venerate", "vengiate", "ventagliate", "ventilate", "ventolate", "verbalizzate", "vergate", "vergheggiate", "vergognate", "vergolate", "verificate", "verminate", "vernalizzate", "verniciate", "verrinate", "versate", "verseggiate", "versificate", "verticalizzate", "vessate", "vestite", "vestite", "vetrificate", "vetrinate", "vetrioleggiate", "vettovagliate", "vezzeggiate", "viaggiate", "vicinate", "vicitate", "videochattate", "videochiamate", "videocomunicate", "videoregistrate", "videotrasmesse", "vidimate", "vigilate", "vigliate", "vigoreggiate", "vigorite", "vilificate", "vilipese", "villaneggiate", "vincolate", "vinte", "violate", "violentate", "violinate", "virgolate", "virgoleggiate", "virgolettate", "virilizzate", "virtualizzate", "visionate", "visitate", "vissute", "vistate", "viste", "visualizzate", "vitaliziate", "vitalizzate", "vitaminizzate", "vittimizzate", "vituperate", "vivacizzate", "vivandate", "vivificate", "vivisezionate", "viziate", "vocabolarizzate", "vocalizzate", "vocate", "vociferate", "volantinate", "volatilizzate", "volgarizzate", "volicchiate", "volpeggiate", "voltate", "volte", "voltolate", "volturate", "voluminizzate", "volute", "volutoce", "vomitate", "vorate", "votate", "vulcanizzate", "vuotate", "wappate", "wikificate", "xerocopiate", "zaffate", "zampate", "zampettate", "zampillate", "zannate", "zappate", "zappettate", "zapponate", "zavorrate", "zeppate", "zigrinate", "zigzagate", "zimbellate", "zincate", "zinnate", "zipolate", "zippate", "zirlate", "zittite", "zizzagate", "zoccolate", "zollate", "zombate", "zonate", "zonizzate", "zoppate", "zoppeggiate", "zoppicate", "zucconate", "zufolate", "zumate", "zuppate", "abalienati", "abbacchiati", "abbacinati", "abbadati", "abbagliati", "abbaiati", "abballati", "abbambinati", "abbancati", "abbandonati", "abbarbagliati", "abbarbati", "abbarcati", "abbaruffati", "abbassati", "abbatacchiati", "abbattuti", "abbatuffolati", "abbeliti", "abbellati", "abbelliti", "abbendati", "abbeverati", "abbiadati", "abbicati", "abbigliati", "abbinati", "abbindolati", "abbioccati", "abbiosciati", "abbisciati", "abbittati", "abboccati", "abboffati", "abbominati", "abbonacciati", "abbonati", "abboniti", "abbordati", "abborracciati", "abborrati", "abborriti", "abbottinati", "abbottonati", "abbozzacchiati", "abbozzati", "abbozzolati", "abbracciati", "abbraciati", "abbrancati", "abbreviati", "abbriccati", "abbrigliati", "abbrivati", "abbriviati", "abbrividiti", "abbronzati", "abbrostolati", "abbrostoliti", "abbruciacchiati", "abbruciati", "abbrunati", "abbruniti", "abbruscati", "abbrusciati", "abbrustiati", "abbrustolati", "abbrustoliti", "abbrutiti", "abbruttiti", "abbuffati", "abbuiati", "abbuonati", "abburattati", "abbuzziti", "abdicati", "abdotti", "abiettati", "abilitati", "abissati", "abitati", "abituati", "abiurati", "aboliti", "abominati", "abondati", "aborriti", "abrasi", "abrogati", "abusati", "accaffati", "accagionati", "accagliati", "accalappiati", "accalcati", "accaldati", "accallati", "accalorati", "accaloriti", "accambiati", "accampati", "accampionati", "accanalati", "accanati", "accaneggiati", "accaniti", "accantonati", "accaparrati", "accapezzati", "accapigliati", "accapottati", "accappiati", "accappiettati", "accapponati", "accappucciati", "accaprettati", "accareggiati", "accarezzati", "accarnati", "accarpionati", "accartocciati", "accasati", "accasciati", "accasellati", "accasermati", "accastellati", "accastellinati", "accatarrati", "accatastati", "accattati", "accattivati", "accavalcati", "accavalciati", "accavallati", "accavezzati", "accecati", "acceffati", "accelerati", "accellerati", "accennati", "accensati", "accentati", "accentrati", "accentuati", "acceppati", "accerchiati", "accercinati", "accertati", "accesi", "accessoriati", "accettati", "acchetati", "acchiappati", "acchiocciolati", "acchitati", "acchiuduti", "acciabattati", "acciaiati", "acciambellati", "acciarpati", "acciecati", "accigliati", "acciglionati", "accignuti", "accincignati", "accinti", "acciocchiti", "acciottolati", "accipigliati", "accismati", "accisi", "acciucchiti", "acciuffati", "accivettati", "acclamati", "acclarati", "acclimatati", "acclusi", "accoccati", "accoccolati", "accoccovati", "accodati", "accollati", "accoltellati", "accolti", "accomandati", "accomiatati", "accommiatati", "accomodati", "accompagnati", "accomunati", "acconciati", "acconigliati", "accontati", "accontentati", "accoppati", "accoppiati", "accorati", "accorciati", "accorciti", "accordati", "accordellati", "accorpati", "accorti", "accosciati", "accostati", "accostumati", "accotonati", "accottimati", "accovacciati", "accovati", "accovonati", "accozzati", "accreditati", "accresciuti", "accrespati", "accucciati", "accucciolati", "accuditi", "acculati", "acculturati", "accumulati", "accumunati", "accusati", "acetificati", "acetilati", "acetiti", "acidati", "acidificati", "acidulati", "acquadernati", "acquarellati", "acquartierati", "acquati", "acquattati", "acquerellati", "acquetati", "acquietati", "acquisiti", "acquistati", "acromatizzati", "acuiti", "acuminati", "acutizzati", "adacquati", "adagiati", "adattati", "addaziati", "addebbiati", "addebitati", "addecimati", "addensati", "addentati", "addentellati", "addentrati", "addestrati", "addetti", "addiacciati", "addimandati", "addimesticati", "addimorati", "addimostrati", "addipanati", "addirizzati", "additati", "additivati", "addizionati", "addobbati", "addociliti", "addogliati", "addolcati", "addolciati", "addolciti", "addolorati", "addomandati", "addomesticati", "addoppiati", "addormentati", "addossati", "addotti", "addottorati", "addottrinati", "addrizzati", "adduati", "addugliati", "adeguati", "adempiti", "adempiuti", "adequati", "aderizzati", "adescati", "adibiti", "adirati", "aditi", "adiuvati", "adizzati", "adocchiati", "adombrati", "adonati", "adonestati", "adontati", "adoperati", "adoprati", "adorati", "adornati", "adottati", "adsorbiti", "aduggiati", "adugnati", "adulati", "adulterati", "adunati", "adunghiati", "adusati", "aerati", "aereati", "aerotrainati", "aerotrasportati", "affabulati", "affaccendati", "affacchinati", "affacciati", "affagottati", "affaldati", "affamati", "affamigliati", "affannati", "affardellati", "affascinati", "affastellati", "affaticati", "affattucchiati", "affatturati", "affermati", "afferrati", "affettati", "affezionati", "affiancati", "affiatati", "affibbiati", "affidati", "affienati", "affievoliti", "affigliati", "affigurati", "affilati", "affilettati", "affiliati", "affinati", "affiochiti", "affiorati", "affisati", "affissati", "affissi", "affittati", "affittiti", "afflitti", "afflosciati", "affocati", "affogati", "affogliati", "affollati", "affoltati", "affondati", "afforcati", "afforestati", "afforzati", "affossati", "affraliti", "affrancati", "affranti", "affratellati", "affrenati", "affrenellati", "affrescati", "affrettati", "affrittellati", "affrontati", "affumati", "affumicati", "affumigati", "affuocati", "affusolati", "africanizzati", "ageminati", "agevolati", "aggallati", "agganciati", "aggangherati", "aggarbati", "aggattonati", "aggavignati", "aggelati", "aggettivati", "agghiacciati", "agghiadati", "agghiaiati", "agghindati", "aggiaccati", "aggiogati", "aggiornati", "aggirati", "aggiucchiti", "aggiudicati", "aggiuntati", "aggiunti", "aggiustati", "agglomerati", "agglutinati", "aggomitolati", "aggottati", "aggraditi", "aggraffati", "aggranchiati", "aggranchiti", "aggranditi", "aggrappati", "aggraticciati", "aggravati", "aggrediti", "aggregati", "aggrevati", "aggricciati", "aggrinzati", "aggrinziti", "aggrommati", "aggrondati", "aggroppati", "aggrottati", "aggrovigliati", "aggrumati", "aggruppati", "aggruzzolati", "agguagliati", "agguantati", "agguardati", "agguatati", "aggueffati", "agitati", "agognati", "agrarizzati", "aguatati", "agucchiati", "agunati", "agurati", "aguzzati", "aitati", "aiutati", "aizzati", "alati", "alberati", "albergati", "alcalinizzati", "alchilati", "alchimiati", "alchimizzati", "alcolizzati", "alcoolizzati", "alenati", "alesati", "alettati", "alfabetati", "alfabetizzati", "aliditi", "alienati", "alimentati", "allacciati", "allagati", "allappati", "allargati", "allascati", "allattati", "alleati", "allegati", "alleggeriti", "alleggiati", "allegorizzati", "alleluiati", "allenati", "alleniti", "allentati", "allertati", "allessati", "allestiti", "allettati", "allevati", "alleviati", "allibati", "allibiti", "allibrati", "allicciati", "allietati", "allindati", "allineati", "allisi", "allocati", "allogati", "alloggiati", "allontanati", "allottati", "allucchettati", "allucciolati", "allucinati", "allumati", "alluminati", "alluminiati", "allungati", "allupati", "allusi", "alluzzati", "alogenati", "alonati", "alpeggiati", "alterati", "alternati", "alzati", "amalgamati", "amareggiati", "amaricati", "amati", "ambientati", "ambiguati", "ambiti", "americanizzati", "amicati", "ammaccati", "ammaestrati", "ammainati", "ammalati", "ammaliati", "ammalinconiti", "ammaltati", "ammanettati", "ammanicati", "ammanierati", "ammanigliati", "ammannati", "ammannellati", "ammanniti", "ammansati", "ammansiti", "ammantati", "ammantellati", "ammarati", "ammarezzati", "ammassati", "ammassellati", "ammassicciati", "ammatassati", "ammattonati", "ammazzati", "ammelmati", "ammenciti", "ammendati", "ammennicolati", "ammessi", "ammetati", "ammezziti", "amministrati", "amminutati", "ammirati", "ammiseriti", "ammobiliati", "ammodernati", "ammodernizzati", "ammogliati", "ammoinati", "ammollati", "ammolliti", "ammoniti", "ammonticchiati", "ammonticellati", "ammorbati", "ammorbidati", "ammorbiditi", "ammorsati", "ammortati", "ammortiti", "ammortizzati", "ammorzati", "ammosciati", "ammosciti", "ammostati", "ammotinati", "ammucchiati", "ammulinati", "ammusati", "ammutati", "ammutinati", "amnistiati", "amoracciati", "ampiati", "ampliati", "amplificati", "amputati", "anagrammati", "analizzati", "anamorfizzati", "anastomizzati", "anatematizzati", "anatomizzati", "anchilosati", "ancisi", "ancorati", "andatoseni", "andicappati", "anellati", "anemizzati", "anestetizzati", "angariati", "anglicizzati", "angolati", "angosciati", "angustiati", "animati", "annacquati", "annaffiati", "annasati", "annaspati", "annaspicati", "annebbiati", "annegati", "annerati", "anneriti", "annessi", "annestati", "annichilati", "annichiliti", "annidati", "annientati", "annitriti", "annobiliti", "annodati", "annodicchiati", "annoiati", "annotati", "annottati", "annottolati", "annoverati", "annullati", "annunciati", "annunziati", "annusati", "annuvolati", "anodizzati", "anonimizzati", "anteceduti", "anteposti", "antergati", "anticheggiati", "antichizzati", "anticipati", "anticonosciuti", "antidatati", "antiveduti", "antivisti", "antologizzati", "antropizzati", "antropomorfizzati", "aocchiati", "aombrati", "aonestati", "aontati", "aperti", "apocopati", "apologizzati", "apostrofati", "appaciati", "appacificati", "appagati", "appaiati", "appalesati", "appallottolati", "appaltati", "appanettati", "appannati", "apparati", "apparecchiati", "apparentati", "apparigliati", "appariti", "appartati", "appassionati", "appastati", "appastellati", "appellati", "appennellati", "appercepiti", "appertizzati", "appesantiti", "appesiti", "appesi", "appestati", "appetiti", "appezzati", "appiacevoliti", "appianati", "appiastrati", "appiatati", "appiattati", "appiattiti", "appiccati", "appiccicati", "appiccoliti", "appiedati", "appigionati", "appigliati", "appinzati", "appiombati", "appioppati", "appisolati", "applauditi", "applicati", "appoderati", "appoggiati", "appollaiati", "appoppati", "apportati", "appostati", "apposti", "appratiti", "appresentati", "appresi", "appressati", "apprestati", "apprettati", "apprezzati", "approcciati", "approfittati", "approfondati", "approfonditi", "approntati", "appropinquati", "appropriati", "approssimati", "approvati", "approvisionati", "approvvigionati", "appruati", "appulcrati", "appuntati", "appuntellati", "appuntiti", "appurati", "appuzzati", "arabescati", "arabizzati", "arati", "arbitrati", "arborati", "arcaizzati", "arcati", "architettati", "archiviati", "arcuati", "arditi", "areati", "argentati", "arginati", "argomentati", "arguiti", "arianizzati", "arieggiati", "armati", "armonizzati", "aromatizzati", "arpeggiati", "arpionati", "arponati", "arrabattati", "arraffati", "arraffiati", "arrandellati", "arrangiati", "arrapati", "arrapinati", "arrappati", "arrazzati", "arrecati", "arredati", "arreggimentati", "arrembati", "arrenati", "arresisi", "arresi", "arrestati", "arretrati", "arricchiti", "arricciati", "arricciolati", "arriffati", "arringati", "arrischiati", "arrisicati", "arrisi", "arrocati", "arroccati", "arrochiti", "arrogati", "arrolati", "arroncati", "arronzati", "arrosati", "arrossati", "arrostati", "arrostiti", "arrotati", "arrotolati", "arrotondati", "arrovellati", "arroventati", "arroventiti", "arrovesciati", "arrubinati", "arruffati", "arruffianati", "arrugginiti", "arruncigliati", "arruolati", "arruviditi", "arsicciati", "arsi", "artefatti", "articolati", "artigliati", "ascesi", "asciati", "asciolvuti", "asciugati", "ascoltati", "ascosi", "ascosti", "ascritti", "asfaltati", "asfissiati", "aspersi", "aspettati", "aspirati", "asportati", "aspreggiati", "assaettati", "assaggiati", "assaliti", "assaltati", "assaporati", "assaporiti", "assassinati", "assecondati", "assecurati", "assediati", "asseggiati", "assegnati", "assembiati", "assemblati", "assembrati", "assemprati", "assentati", "asseriti", "asserragliati", "asserviti", "assestati", "assetati", "assettati", "asseverati", "assibilati", "assicurati", "assiderati", "assiemati", "assiepati", "assillati", "assimigliati", "assimilati", "assiomatizzati", "assisi", "assistiti", "associati", "assodati", "assoggettati", "assolcati", "assoldati", "assolti", "assolutizzati", "assomati", "assommati", "assonati", "assonnati", "assopiti", "assorbiti", "assordati", "assorditi", "assortiti", "assottigliati", "assuefatti", "assunti", "asteggiati", "astenuti", "astersi", "astratti", "astretti", "atomizzati", "atrofizzati", "atrovati", "attaccati", "attagliati", "attanagliati", "attardati", "attediati", "atteggiati", "attempati", "attendati", "attentati", "attenuati", "attenuti", "attergati", "atterrati", "atterriti", "atterzati", "attesi", "attestati", "atticizzati", "attillati", "attinti", "attirati", "attivati", "attivizzati", "attizzati", "attorcigliati", "attorniati", "attorti", "attoscati", "attossicati", "attraccati", "attrappiti", "attratti", "attraversati", "attrezzati", "attribuiti", "attristati", "attristiti", "attruppati", "attualizzati", "attuati", "attuffati", "attutati", "attutiti", "auggiati", "augumentati", "augurati", "auliti", "aumentati", "aunghiati", "ausati", "auscultati", "auspicati", "autenticati", "autentificati", "autoaccusati", "autoaffondati", "autoalimentati", "autoassolti", "autocandidati", "autocensurati", "autocitati", "autocommiserati", "autoconsumati", "autoconvinti", "autodefiniti", "autodenunciati", "autodistrutti", "autofinanziati", "autogestiti", "autogovernati", "autografati", "autoincensati", "autointersecati", "autoinvitati", "autolesionati", "autolimitati", "automaticizzati", "automatizzati", "automotivati", "autonominati", "autoproclamati", "autoprodotti", "autoprotetti", "autopubblicati", "autopubblicizzati", "autoregolamentati", "autoregolati", "autoridotti", "autoriparati", "autorizzati", "autosomministrati", "autosostenuti", "autosuggestionati", "autotassati", "autotrapiantati", "autotrasportati", "autovalutati", "avallati", "avampati", "avanzati", "avariati", "avinti", "aviolanciati", "aviotrasportati", "avocati", "avolterati", "avulsi", "avutaceli", "avuti", "avvalorati", "avvalsi", "avvantaggiati", "avvelati", "avvelenati", "avventati", "avventurati", "avverati", "avversati", "avvertiti", "avvezzati", "avviati", "avvicendati", "avvicinati", "avvignati", "avviliti", "avviluppati", "avvinati", "avvinchiati", "avvinghiati", "avvinti", "avvisati", "avvistati", "avvitati", "avviticchiati", "avvititi", "avvivati", "avvolti", "avvoltolati", "aziendalizzati", "azionati", "azotati", "azzannati", "azzardati", "azzeccati", "azzerati", "azzimati", "azzittati", "azzittiti", "azzoppati", "azzoppiti", "azzuffati", "azzurrati", "bacati", "baccagliati", "bacchettati", "bacchiati", "baciati", "badati", "bagnati", "baipassati", "balbettati", "balcanizzati", "ballati", "baloccati", "balzati", "banalizzati", "bancati", "banditi", "bannati", "baraccati", "barattati", "barbarizzati", "barcamenati", "bardati", "barellati", "barrati", "barricati", "basati", "basciati", "basculati", "bassati", "bastati", "bastionati", "bastiti", "bastonati", "battezzati", "battuti", "bazzicati", "beatificati", "beati", "beccati", "beccheggiati", "becchettati", "beffati", "beffeggiati", "bendati", "benedetti", "beneficati", "benvoluti", "berlusconizzati", "bersagliati", "bestemmiati", "bevuti", "biadati", "bianchettati", "bianchiti", "biascicati", "biasimati", "biasmati", "bidonati", "biennalizzati", "biforcati", "bigiati", "bilanciati", "binati", "bindolati", "biodegradati", "biografati", "bipartiti", "bisbigliati", "biscottati", "bisecati", "bisellati", "bisognati", "bissati", "bistrati", "bistrattati", "bitumati", "bituminati", "blanditi", "bleffati", "blindati", "bloccati", "bobinati", "boccheggiati", "bocciati", "boicottati", "bollati", "bolliti", "bombardati", "bombati", "bonderizzati", "bonificati", "bootati", "borbottati", "bordati", "boriati", "borrati", "borseggiati", "braccati", "bracciati", "bramati", "bramiti", "brancicati", "brandeggiati", "branditi", "brasati", "bravati", "brevettati", "breviati", "brillantati", "brillati", "brinati", "broccati", "brocciati", "broccolati", "brontolati", "bronzati", "brucati", "bruciacchiati", "bruciati", "bruniti", "bruscati", "bruschinati", "brutalizzati", "bruttati", "bucati", "bucherellati", "bufati", "buffati", "bufferizzati", "buggerati", "bugnati", "bulicati", "bulinati", "bullettati", "bullonati", "burattati", "burlati", "burocratizzati", "burrificati", "buscati", "buttati", "butterati", "bypassati", "cablati", "cabrati", "cacati", "cacciati", "cadenzati", "cadmiati", "caducati", "cagati", "caggiati", "cagionati", "cagliati", "calafatati", "calamitati", "calandrati", "calati", "calcati", "calciati", "calcificati", "calcolati", "caldeggiati", "calettati", "calibrati", "calmati", "calmierati", "calpestati", "calumati", "calunniati", "calzati", "cambiati", "camerati", "campionati", "campiti", "camuffati", "canalizzati", "cancellati", "cancerizzati", "candeggiati", "candidati", "canditi", "canforati", "cangiati", "cannati", "canneggiati", "cannibalizzati", "cannoneggiati", "canonizzati", "cantati", "canterellati", "canticchiati", "cantilenati", "canzonati", "caolinizzati", "capacitati", "capeggiati", "capillarizzati", "capitalizzati", "capitanati", "capitaneggiati", "capiti", "capitozzati", "capivolti", "caponati", "capotati", "capottati", "capovolti", "capponati", "captati", "caramellati", "caramellizzati", "caratati", "caratterizzati", "carbonizzati", "carbossilati", "carburati", "carcati", "carcerati", "cardati", "carenati", "carezzati", "cariati", "caricati", "caricaturati", "caricaturizzati", "carotati", "carpionati", "carpiti", "carreggiati", "carrozzati", "cartavetrati", "carteggiati", "cartellinati", "cartografati", "cartolarizzati", "cartonati", "cascolati", "cassati", "cassi", "castigati", "castrati", "casualizzati", "catabolizzati", "catalizzati", "catalogati", "catapultati", "catechizzati", "categorizzati", "cateterizzati", "catramati", "cattolicizzati", "catturati", "causati", "cautelati", "cauterizzati", "cauzionati", "cavalcati", "cavataseli", "cavati", "cazzati", "cazziati", "cazzottati", "cedrati", "ceduti", "celati", "celebrati", "cellofanati", "cementati", "cementificati", "cennati", "censiti", "censurati", "centellati", "centellinati", "centimetrati", "centinati", "centralizzati", "centrati", "centrifugati", "centuplicati", "cerati", "cercati", "cerchiati", "cernuti", "certificati", "cesellati", "cessati", "cestinati", "cheratinizzati", "chetati", "chiamati", "chiappati", "chiarificati", "chiariti", "chiaroscurati", "chiavati", "chiazzati", "chiesti", "chilificati", "chilometrati", "chimificati", "chinati", "chinizzati", "chiodati", "chiosati", "chiusi", "choccati", "ciancicati", "cianfrinati", "cianfrugliati", "ciangottati", "ciattati", "cibati", "cicatrizzati", "ciccati", "cicchettati", "ciclizzati", "ciclostilati", "cifrati", "cilindrati", "cimati", "cimentati", "cincischiati", "cinematografati", "cintati", "cinti", "cioncati", "ciondolati", "circolati", "circoncinti", "circoncisi", "circondati", "circondotti", "circonflessi", "circonfluiti", "circonfusi", "circonscritti", "circonvenuti", "circoscritti", "circostanziati", "circuiti", "circumcinti", "circumnavigati", "citati", "ciucciati", "ciurmati", "civettati", "civilizzati", "clamati", "classati", "classicizzati", "classificati", "cliccati", "climatizzati", "clivati", "clonati", "cloroformizzati", "clorurati", "clusterizzati", "co-diretti", "coacervati", "coadiuvati", "coagulati", "coalizzati", "coartati", "coccolati", "codificati", "coeditati", "coesistiti", "cofinanziati", "cofirmati", "cofondati", "cogestiti", "cogitati", "coglionati", "cognosciuti", "coibentati", "coincisi", "cointeressati", "cointestati", "coinvolti", "cokificati", "colati", "colettati", "collassati", "collaudati", "collazionati", "collegati", "collettivizzati", "collezionati", "collimati", "colliquati", "collisi", "collocati", "colluttati", "colmati", "colonizzati", "colorati", "coloriti", "colorizzati", "colpevolizzati", "colpiti", "coltellati", "coltivati", "colti", "coltrati", "comandati", "combattuti", "combinati", "comburuti", "comicizzati", "cominciati", "commemorati", "commendati", "commensurati", "commentati", "commercializzati", "commessi", "comminati", "commiserati", "commissariati", "commissionati", "commisurati", "commossi", "commutati", "comodati", "compaginati", "compariti", "compartimentalizzati", "compartiti", "compassionati", "compatibilizzati", "compatiti", "compattati", "compendiati", "compenetrati", "compensati", "comperati", "compiaciuti", "compianti", "compilati", "compitati", "compiuti", "complessati", "complessificati", "complessi", "completati", "complicati", "complimentati", "comportati", "compostati", "composti", "comprati", "compravenduti", "compresi", "compressi", "compromessi", "comprovati", "compulsati", "compunti", "computati", "computerizzati", "comunicati", "comunistizzati", "concatenati", "conceduti", "concelebrati", "concentrati", "concepiti", "concertati", "concessi", "concettati", "concettualizzati", "conchiusi", "conciati", "conciliati", "concimati", "concitati", "conclamati", "conclusi", "concordati", "concotti", "concretati", "concretizzati", "conculcati", "concupiti", "condannati", "condensati", "conditi", "condivisi", "condizionati", "condoluti", "condonati", "condotti", "confatti", "confederati", "conferiti", "confermati", "confessati", "confettati", "confezionati", "conficcati", "confidati", "configurati", "confinati", "confinti", "confiscati", "confitti", "conformati", "confortati", "confricati", "confrontati", "confusi", "confutati", "congedati", "congegnati", "congelati", "congestionati", "congetturati", "congiunti", "conglobati", "conglomerati", "conglutinati", "congratulati", "congregati", "conguagliati", "coniati", "coniugati", "connaturati", "connessi", "connotati", "connumerati", "conosciuti", "conquistati", "consacrati", "consapevolizzati", "consegnati", "conseguiti", "consentiti", "conservati", "considerati", "consigliati", "consistiti", "consociati", "consolati", "consolidati", "consorziati", "consparsi", "conspersi", "constatati", "constretti", "construiti", "consultati", "consumati", "consunti", "contabilizzati", "contagiati", "containerizzati", "contaminati", "contati", "contattati", "conteggiati", "contemperati", "contemplati", "contentati", "contenuti", "contesi", "contestati", "contestualizzati", "contingentati", "continuati", "contornati", "contorti", "contrabbandati", "contraccambiati", "contraddetti", "contraddistinti", "contradetti", "contraffatti", "contrappesati", "contrapposti", "contrappuntati", "contrariati", "contrassegnati", "contrastati", "contrati", "contrattaccati", "contrattati", "contratti", "contravvalsi", "contristati", "controbattuti", "controbilanciati", "controdatati", "controfirmati", "controindicati", "controllati", "controminati", "contronotati", "controproposti", "controprovati", "controquerelati", "controsoffittati", "controstampati", "controventati", "conturbati", "contusi", "convalidati", "convenuti", "convenzionati", "convertiti", "convinti", "convitati", "convocati", "convogliati", "convolti", "coobati", "cooptati", "coordinati", "coperchiati", "coperti", "copiaincollati", "copiati", "copolimerizzati", "coppellati", "coprodotti", "corazzati", "corbellati", "corcati", "cordonati", "coreografati", "coricati", "cornificati", "coronati", "corredati", "correlati", "corresponsabilizzati", "corretti", "corricchiati", "corrisposti", "corroborati", "corrosi", "corrotti", "corrucciati", "corrugati", "corsi", "corteati", "corteggiati", "cortocircuitati", "coruscati", "cosati", "coscritti", "cosparsi", "cospersi", "costatati", "costeggiati", "costellati", "costernati", "costicchiati", "costipati", "costituiti", "costituzionalizzati", "costretti", "costruiti", "costuditi", "cotonati", "cotti", "covati", "coventrizzati", "coverchiati", "craccati", "creati", "creduti", "cremati", "crepati", "cresciuti", "cresimati", "crespati", "criminalizzati", "crioconcentrati", "criptati", "cristallizzati", "cristianizzati", "criticati", "crittati", "crittografati", "crivellati", "crocchiati", "crocefissi", "crocefitti", "crocifissi", "crocifitti", "crogiolati", "cromati", "cronicizzati", "cronometrati", "crostati", "crucciati", "crucifissi", "crucifitti", "cuccati", "cucinati", "cuciti", "cullati", "cumulati", "cuntati", "curati", "curvati", "curvati", "custoditi", "customizzati", "damascati", "damaschinati", "damati", "dannati", "danneggiati", "danzati", "dardeggiati", "datati", "dati", "dattilografati", "dattiloscritti", "daziati", "deacidificati", "deattivati", "debbiati", "debellati", "debilitati", "decaffeinati", "decaffeinizzati", "decalcati", "decalcificati", "decantati", "decapati", "decapitati", "decappottati", "decarbossilati", "decarburati", "decatizzati", "decelerati", "decentralizzati", "decentrati", "decerebrati", "decernuti", "decespugliati", "deciferati", "decifrati", "decimalizzati", "decimati", "decisi", "declamati", "declassati", "declassificati", "declinati", "declorati", "decodificati", "decolonizzati", "decolorati", "decompartimentati", "decompilati", "decomposti", "decompressi", "deconcentrati", "decondizionati", "decongelati", "decongestionati", "decontaminati", "decontestualizzati", "decontratti", "decorati", "decorticati", "decostruiti", "decrementati", "decretati", "decriminalizzati", "decriptati", "decrittati", "decuplicati", "decurtati", "dedicati", "dedotti", "defacciati", "defalcati", "defascistizzati", "defecati", "defenestrati", "deferiti", "defilati", "definiti", "defiscalizzati", "defitti", "deflazionati", "deflemmati", "deflorati", "defogliati", "defoliati", "deforestati", "deformati", "defosforati", "defosforilati", "deframmentati", "defraudati", "degassati", "degassificati", "deglutiti", "degnati", "degradati", "degustati", "deidratati", "deidrogenati", "deificati", "deindicizzati", "deindustrializzati", "deionizzati", "delegati", "delegificati", "delegittimati", "delibati", "deliberati", "delimitati", "delineati", "delirati", "deliziati", "delocalizzati", "delucidati", "delusi", "demagnetizzati", "demandati", "demanializzati", "demarcati", "demeritati", "demersi", "demetallizzati", "demilitarizzati", "demineralizzati", "demistificati", "demitizzati", "democratizzati", "demodulati", "demoliti", "demoltiplicati", "demonetati", "demonetizzati", "demonizzati", "demoralizzati", "demorsi", "demotivati", "denaturalizzati", "denaturati", "denazificati", "denazionalizzati", "denicotinizzati", "denigrati", "denitrificati", "denocciolati", "denominati", "denotati", "dentellati", "denuclearizzati", "denudati", "denunciati", "denunziati", "deodorati", "deossidati", "deossigenati", "deostruiti", "depauperati", "depenalizzati", "depennati", "depilati", "depinti", "depistati", "deplorati", "depolarizzati", "depolimerizzati", "depoliticizzati", "depolverizzati", "deportati", "depositati", "deposti", "depotenziati", "depravati", "deprecati", "depredati", "depressi", "depressurizzati", "deprezzati", "deprivati", "deprotonati", "depulsi", "depurati", "dequalificati", "deratizzati", "derattizzati", "dereferenziati", "deregolamentati", "deregolati", "derequisiti", "deresponsabilizzati", "derisi", "derubati", "derubricati", "desacralizzati", "desalati", "desalinizzati", "descolarizzati", "descritti", "desecretati", "desegretati", "deselezionati", "desensibilizzati", "desessualizzati", "desiati", "desiderati", "designati", "desinati", "desirati", "desolati", "desolforati", "desonorizzati", "desorbiti", "desossidati", "desquamati", "destabilizzati", "destagionalizzati", "destalinizzati", "destatalizzati", "destatizzati", "destati", "destinati", "destituiti", "destoricizzati", "destreggiati", "destrutti", "destrutturati", "desunti", "detassati", "detenuti", "deteriorati", "determinati", "detersi", "detestati", "detonati", "detorti", "detossificati", "detratti", "detronizzati", "dettagliati", "dettati", "detti", "deturpati", "deumidificati", "devastati", "deventati", "deviati", "deviscerati", "devitalizzati", "devitaminizzati", "devoluti", "dezippati", "diaframmati", "diagnosticati", "diagonalizzati", "diagrammati", "dializzati", "dialogati", "dialogizzati", "diazotati", "dibattuti", "diboscati", "dichiarati", "diesati", "diesizzati", "difesi", "diffamati", "differiti", "diffidati", "diffranti", "diffratti", "diffusi", "digeriti", "digitalizzati", "digitati", "digiunti", "digrassati", "digrignati", "digrossati", "dilacerati", "dilaniati", "dilapidati", "dilatati", "dilavati", "dilazionati", "dileggiati", "dileguati", "dilettati", "diletti", "diliscati", "dilucidati", "diluiti", "dilungati", "dimagrati", "dimandati", "dimenati", "dimensionati", "dimenticati", "dimerizzati", "dimessi", "dimezzati", "diminuiti", "dimissionati", "dimostrati", "dimunti", "dinamizzati", "dinoccati", "dipanati", "dipelati", "dipinti", "diplomati", "diposti", "diradati", "diramati", "diretti", "direzionati", "dirimuti", "diroccati", "dirottati", "dirotti", "dirozzati", "disabilitati", "disabituati", "disaccentati", "disaccoppiati", "disaccordati", "disacerbati", "disacidati", "disacidificati", "disaciditi", "disaerati", "disaffezionati", "disaggregati", "disalberati", "disallineati", "disamati", "disambiguati", "disaminati", "disamorati", "disancorati", "disanimati", "disappannati", "disapplicati", "disappresi", "disapprovati", "disarcionati", "disarmati", "disarticolati", "disascosti", "disassemblati", "disassuefatti", "disatomizzati", "disattesi", "disattivati", "disattrezzati", "disavvezzati", "disboscati", "disbrigati", "discacciati", "discalzati", "discantati", "discaricati", "discernuti", "discesi", "disceverati", "dischiesti", "dischiusi", "discinti", "disciolti", "disciplinati", "discolorati", "discolpati", "discommessi", "discompagnati", "discomposti", "disconclusi", "disconfitti", "discongiunti", "disconnessi", "disconosciuti", "discoperti", "discordati", "discoscesi", "discostati", "discreditati", "discresciuti", "discriminati", "discritti", "discuciti", "discuoiati", "discussi", "disdegnati", "disdettati", "disdetti", "diseccati", "diseccitati", "diseducati", "disegnati", "diserbati", "diseredati", "disertati", "diserti", "disfatti", "disgelati", "disgiunti", "disgraziati", "disgregati", "disgustati", "disidentificati", "disiderati", "disidratati", "disillusi", "disimballati", "disimparati", "disimpegnati", "disimpressi", "disincagliati", "disincantati", "disincentivati", "disincrostati", "disindustrializzati", "disinfestati", "disinfettati", "disinflazionati", "disinformati", "disingannati", "disingranati", "disinibiti", "disinnamorati", "disinnescati", "disinnestati", "disinquinati", "disinseriti", "disinstallati", "disintasati", "disintegrati", "disinteressati", "disintesi", "disintossicati", "disinvestiti", "disinvolti", "disistimati", "dislocati", "dismessi", "disobbediti", "disobbligati", "disonorati", "disordinati", "disorganizzati", "disorientati", "disormeggiati", "disossati", "disossidati", "disostruiti", "disotterrati", "dispariti", "dispensati", "dispenti", "disperduti", "dispersi", "dispesi", "dispiegati", "dispinti", "dispogliati", "disposti", "dispregiati", "disprezzati", "dispromessi", "disproporzionati", "disputati", "disqualificati", "disrotti", "dissacrati", "dissalati", "dissaldati", "dissanguati", "dissecati", "disseccati", "disselciati", "dissellati", "disseminati", "dissepolti", "disseppelliti", "dissequestrati", "disserrati", "dissestati", "dissetati", "dissezionati", "dissigillati", "dissimulati", "dissipati", "dissociati", "dissodati", "dissolti", "dissomigliati", "dissotterrati", "dissuasi", "dissuggellati", "distaccati", "distanziati", "distesi", "distillati", "distinti", "distolti", "distorti", "distratti", "distretti", "distribuiti", "districati", "distrigati", "distrutti", "disturbati", "disubbiditi", "disumanati", "disumanizzati", "disuniti", "disusati", "disveduti", "disvelati", "disvestiti", "disviati", "disvisti", "disvolti", "disvoluti", "dittongati", "divallati", "divaricati", "divelti", "diversificati", "divertiti", "divezzati", "divinati", "divincolati", "divinizzati", "divisi", "divolti", "divorati", "divorziati", "divulgati", "documentati", "dogati", "dogmatizzati", "dolcificati", "dollarizzati", "dolorati", "doluti", "domandati", "domati", "domesticati", "domiciliati", "dominati", "donati", "dondolati", "dopati", "doppiati", "dorati", "dormitoci", "dosati", "dotati", "dovuti", "dragati", "drammatizzati", "drappeggiati", "drenati", "dribblati", "drizzati", "drogati", "dugliati", "duplicati", "duramificati", "ebraizzati", "ecceduti", "eccepiti", "eccettuati", "eccitati", "echeggiati", "eclissati", "economizzati", "edificati", "editati", "edotti", "educati", "edulcorati", "effettuati", "efficientati", "effigiati", "effinti", "effluiti", "effusi", "egemonizzati", "eguagliati", "eiettati", "elaborati", "elargiti", "elasticizzati", "elementarizzati", "elemosinati", "elencati", "eletti", "elettrificati", "elettrizzati", "elettrocoagulati", "elettrolizzati", "elevati", "eliminati", "elisi", "elitrasportati", "ellenizzati", "elogiati", "elucidati", "elucubrati", "eluiti", "elusi", "emanati", "emancipati", "emarginati", "embricati", "emendati", "emessi", "emozionati", "empiti", "empiuti", "emulati", "emulsionati", "emunti", "encomiati", "endocitati", "energizzati", "enfatizzati", "enfiati", "entusiasmati", "enucleati", "enumerati", "enunciati", "epicureggiati", "epurati", "equalizzati", "equilibrati", "equipaggiati", "equiparati", "eradicati", "erasi", "ereditati", "eretti", "erogati", "eroicizzati", "erosi", "erotizzati", "erpicati", "ersi", "eruditi", "eruttati", "esacerbati", "esagerati", "esagitati", "esalati", "esaltati", "esaminati", "esasperati", "esauditi", "esauriti", "esautorati", "esborsati", "esclusi", "escogitati", "escomiati", "escoriati", "escossi", "escussi", "esecrati", "esecutati", "eseguiti", "esemplificati", "esentati", "esercitati", "esfoliati", "esibiti", "esilarati", "esiliati", "esimuti", "esitati", "esonerati", "esorbitati", "esorcizzati", "esortati", "espansi", "esparsi", "esperimentati", "esperiti", "espettorati", "espiantati", "espiati", "espirati", "espletati", "esplicati", "esplicitati", "esplorati", "esplosi", "esportati", "esposti", "espressi", "espropriati", "espugnati", "espulsi", "espunti", "espurgati", "essiccati", "essuti", "estasiati", "estenuati", "esterificati", "esteriorizzati", "esterminati", "esternalizzati", "esternati", "estesi", "estimati", "estinti", "estirpati", "estivati", "estorti", "estradati", "estraniati", "estrapolati", "estratti", "estremizzati", "estrinsecati", "estromessi", "estrusi", "estubati", "esulcerati", "esultati", "esumati", "eterificati", "eterizzati", "eternati", "eternizzati", "etichettati", "etossilati", "euforizzati", "europeizzati", "evacuati", "evangelizzati", "evasi", "eveti", "evidenziati", "evinti", "evirati", "eviscerati", "evitati", "evocati", "evolti", "evoluti", "evulsi", "fabbricati", "faccettati", "facilitati", "fagocitati", "falciati", "falcidiati", "falliti", "falsati", "falsificati", "familiarizzati", "fanatizzati", "fantasticati", "farciti", "farfugliati", "fasciati", "fascicolati", "fascistizzati", "fattaceli", "fatti", "fattorizzati", "fatturati", "favellati", "favoreggiati", "favoriti", "faxati", "fecondati", "fedecommessi", "federalizzati", "federati", "felicitati", "felpati", "feltrati", "femminilizzati", "fenduti", "feriti", "fermati", "fermentati", "ferrati", "fertilizzati", "fessi", "fessurati", "festeggiati", "festonati", "feudalizzati", "fiaccati", "fiammeggiati", "fiancheggiati", "ficcati", "fidanzati", "fidati", "fidecommessi", "fidelizzati", "figliati", "figurati", "filati", "filettati", "filmati", "filosofati", "filtrati", "finalizzati", "finanziati", "finitali", "finiti", "finlandizzati", "fintati", "finti", "fiocinati", "fiondati", "fiorettati", "firmati", "fiscalizzati", "fischiati", "fischiettati", "fissati", "fissionati", "fitti", "fiutati", "flagellati", "flaggati", "flambati", "flangiati", "flemmatizzati", "flessi", "flippati", "flottati", "fluidificati", "fluidizzati", "fluorizzati", "fluorurati", "focalizzati", "focheggiati", "foderati", "foggiati", "fognati", "folgorati", "follati", "fomentati", "fonati", "fondati", "foracchiati", "foraggiati", "forati", "forestati", "forfettizzati", "forgiati", "formalizzati", "formati", "formattati", "formilati", "formulati", "forniti", "fortificati", "forviati", "forwardati", "forzati", "fosfatati", "fosforati", "fosforilati", "fossilizzati", "fotocomposti", "fotocopiati", "fotografati", "fottuti", "fracassati", "fraintesi", "framessi", "frammentati", "frammessi", "frammezzati", "frammischiati", "franceseggiati", "francesizzati", "frangiati", "franti", "frantumati", "frappati", "frapposti", "fraseggiati", "frastagliati", "frastornati", "fratturati", "frazionati", "freddati", "fregati", "fregiati", "frenati", "frequentati", "fresati", "frettati", "friendzonati", "fritti", "frizionati", "frodati", "frollati", "fronteggiati", "frugati", "fruiti", "frullati", "frusciati", "frustati", "frustrati", "fruttati", "fucilati", "fucinati", "fugati", "fuggiti", "fulminati", "fumati", "fumigati", "funestati", "funti", "funzionati", "fuoriusciti", "fuorviati", "fusi", "fustellati", "fustigati", "gabbati", "gabellati", "gallati", "gallicizzati", "gallonati", "galvanizzati", "gambizzati", "garantiti", "garnettati", "garrotati", "garzati", "gasati", "gassati", "gassificati", "gazati", "gelatinizzati", "gelati", "gelificati", "gemellati", "gemicati", "geminati", "generalizzati", "generati", "gentrificati", "genuflessi", "geometrizzati", "georeferenziati", "gerarchizzati", "germanizzati", "gestiti", "gettati", "gettonati", "ghermiti", "ghettizzati", "ghigliottinati", "ghindati", "gibollati", "gingillati", "ginnati", "giocati", "gioiti", "gionglati", "giovaneggiati", "girandolati", "girati", "giudicati", "giulebbati", "giuntati", "giunti", "giuracchiati", "giurati", "giustapposti", "giustificati", "giustiziati", "glamourizzati", "glassati", "glissati", "globalizzati", "gloriati", "glorificati", "glossati", "godronati", "goduti", "goffrati", "gommati", "gonfiati", "googlati", "gottati", "governati", "gradinati", "graditi", "gradualizzati", "graduati", "graffati", "graffiati", "graffiti", "graficati", "grafitati", "gramolati", "granagliati", "grandinati", "granellati", "graniti", "granulati", "graticciati", "graticolati", "gratificati", "gratinati", "grattati", "grattugiati", "gravati", "graziati", "grecheggiati", "grecizzati", "gremiti", "gridati", "griffati", "grigliati", "grippati", "groccati", "grondati", "grugati", "grugniti", "guadagnati", "gualciti", "guardati", "guariti", "guarniti", "guastati", "guatati", "guerreggiati", "gufati", "guidati", "gustati", "hackerati", "handicappati", "ibridati", "idealizzati", "ideati", "identificati", "ideologizzati", "idolatrati", "idoleggiati", "idratati", "idrogenati", "idrolizzati", "iettati", "igienizzati", "ignifugati", "ignorati", "illanguiditi", "illeggiadriti", "illividiti", "illuminati", "illusi", "illustrati", "imbacuccati", "imbaldanziti", "imballati", "imbalsamati", "imbambolati", "imbandierati", "imbanditi", "imbarbariti", "imbarcati", "imbarilati", "imbastarditi", "imbastiti", "imbattuti", "imbavagliati", "imbeccati", "imbellettati", "imbelliti", "imbestialiti", "imbestiati", "imbevuti", "imbiaccati", "imbiancati", "imbianchiti", "imbibiti", "imbiettati", "imbionditi", "imbizzarriti", "imboccati", "imboniti", "imborghesiti", "imboscati", "imboschiti", "imbottati", "imbottigliati", "imbottiti", "imbozzimati", "imbracati", "imbracciati", "imbragati", "imbrancati", "imbrattati", "imbrecciati", "imbrigliati", "imbrillantinati", "imbroccati", "imbrodati", "imbrogliati", "imbronciati", "imbruttiti", "imbucati", "imbudellati", "imbullettati", "imbullonati", "imburrati", "imbussolati", "imbustati", "imbutiti", "imitati", "immagazzinati", "immaginati", "immalinconiti", "immatricolati", "immedesimati", "immersi", "immessi", "immischiati", "immiseriti", "immobilizzati", "immolati", "immortalati", "immunizzati", "immusoniti", "impaccati", "impacchettati", "impacciati", "impadroniti", "impaginati", "impagliati", "impalati", "impalcati", "impallati", "impallinati", "impalmati", "impaludati", "impanati", "impaniati", "impannati", "impantanati", "impaperati", "impapocchiati", "impappinati", "imparentati", "imparruccati", "impartiti", "impastati", "impasticcati", "impasticciati", "impastocchiati", "impastoiati", "impataccati", "impattati", "impauriti", "impavesati", "impeciati", "impedicati", "impediti", "impegnati", "impegolati", "impelagati", "impellicciati", "impennacchiati", "impennati", "impensieriti", "impepati", "imperlati", "impermaliti", "impermeabilizzati", "imperniati", "impersonati", "impersonificati", "impestati", "impetrati", "impiallacciati", "impiantati", "impiastrati", "impiastricciati", "impiccati", "impicciati", "impiccioliti", "impiccoliti", "impidocchiati", "impiegati", "impietositi", "impietriti", "impigliati", "impigriti", "impilati", "impillaccherati", "impinguati", "impinti", "impinzati", "impiombati", "impipati", "impiumati", "implementati", "implicati", "implorati", "impollinati", "impolpati", "impoltroniti", "impolverati", "impomatati", "imporcati", "imporporati", "importati", "importunati", "impossessati", "impossibilitati", "impostati", "imposti", "impratichiti", "impregnati", "impresi", "impressionati", "impressi", "imprestati", "impreziositi", "imprigionati", "impromessi", "improntati", "improsciuttiti", "impugnati", "impuntiti", "impunturati", "impupati", "imputati", "impuzzolentiti", "inabilitati", "inabissati", "inacerbiti", "inacetiti", "inaciditi", "inacutiti", "inaffiati", "inalati", "inalberati", "inalveati", "inalzati", "inamidati", "inanellati", "inarcati", "inargentati", "inariditi", "inaspriti", "inastati", "inattivati", "inaugurati", "incacchiati", "incalcinati", "incaloriti", "incalzati", "incamerati", "incamiciati", "incamminati", "incanagliti", "incanalati", "incannati", "incannucciati", "incaponiti", "incappottati", "incappucciati", "incaprettati", "incapricciati", "incapsulati", "incarcerati", "incardinati", "incaricati", "incarnati", "incarrozzati", "incartati", "incartocciati", "incartonati", "incasellati", "incasinati", "incassati", "incastellati", "incastonati", "incastrati", "incatenati", "incatramati", "incattiviti", "incavati", "incavigliati", "incavolati", "incazzati", "incellofanati", "incendiati", "inceneriti", "incensati", "incentivati", "incentrati", "inceppati", "incerati", "incernierati", "incerottati", "incesi", "incettati", "inchiappettati", "inchiavardati", "inchiesti", "inchinati", "inchiodati", "inchiostrati", "incipriati", "incisi", "incistati", "incitati", "inciuccati", "inciviliti", "inclinati", "inclusi", "incoccati", "incocciati", "incoiati", "incollati", "incolonnati", "incolpati", "incominciati", "incomodati", "incontrati", "incoraggiati", "incordati", "incornati", "incorniciati", "incoronati", "incorporati", "incotti", "incravattati", "incrementati", "increspati", "incretiniti", "incriminati", "incrinati", "incrociati", "incrostati", "incrudeliti", "incruditi", "incruscati", "incubati", "inculati", "inculcati", "incuneati", "incuoiati", "incuorati", "incupiti", "incuriositi", "incurvati", "incussi", "indagati", "indebitati", "indeboliti", "indemaniati", "indennizzati", "indetti", "indicati", "indicizzati", "indignati", "indiretti", "indirizzati", "indispettiti", "indisposti", "individualizzati", "individuati", "indolenziti", "indorati", "indossati", "indotti", "indottomi", "indottrinati", "indovinati", "indugiati", "indulti", "indurati", "induriti", "industrializzati", "industriati", "inebetiti", "inebriati", "ineriti", "inerpicati", "infagottati", "infamati", "infangati", "infarciti", "infarinati", "infastiditi", "infatuati", "infeltriti", "inferiti", "inferociti", "inferti", "infervorati", "infestati", "infettati", "infeudati", "infiacchiti", "infialati", "infialettati", "infiammati", "infiascati", "infibulati", "inficiati", "infilati", "infiltrati", "infilzati", "infingarditi", "infinocchiati", "infinti", "infioccati", "infiocchettati", "infiochiti", "infiorati", "infirmati", "infischiati", "infissi", "infittiti", "inflazionati", "inflessi", "inflitti", "influenzati", "infocati", "infoderati", "infognati", "infoibati", "infoltiti", "inforcati", "informatizzati", "informati", "informicolati", "informicoliti", "infornaciati", "infornati", "infortunati", "infoscati", "infossati", "infradiciati", "inframessi", "inframezzati", "inframmessi", "inframmezzati", "infrancesati", "infrapposti", "infrascati", "infrattati", "infreddati", "infronzolati", "infuocati", "infurbiti", "infuriati", "ingabbiati", "ingaggiati", "ingagliarditi", "ingannati", "ingarbugliati", "ingavonati", "ingegnati", "ingegnerizzati", "ingelositi", "ingemmati", "ingenerati", "ingentiliti", "ingeriti", "ingessati", "inghiaiati", "inghiottiti", "inghirlandati", "ingialliti", "ingigantiti", "inginocchiati", "ingioiellati", "ingiunti", "ingiuriati", "inglesizzati", "inglobati", "ingoffiti", "ingoiati", "ingolfati", "ingollati", "ingolositi", "ingombrati", "ingommati", "ingorgati", "ingozzati", "ingranati", "ingranditi", "ingrassati", "ingraticciati", "ingraticolati", "ingravidati", "ingraziati", "ingraziositi", "ingrigiti", "ingrommati", "ingrossati", "ingrulliti", "inguaiati", "inguainati", "ingualdrappati", "inguantati", "ingurgitati", "inibiti", "iniettati", "inimicati", "inizializzati", "iniziati", "inmillati", "innacquati", "innaffiati", "innalzati", "innamorati", "innastati", "innervati", "innervositi", "innescati", "innestati", "innevati", "innocentati", "innocuizzati", "innovati", "inoculati", "inoltrati", "inondati", "inorgogliti", "inorpellati", "inorriditi", "inquadrati", "inquietati", "inquisiti", "insabbiati", "insacchettati", "insalati", "insaldati", "insalivati", "insanguinati", "insaponati", "insaporiti", "inscatolati", "inscenati", "inscritti", "insecchiti", "insediati", "insegnati", "inseguiti", "insellati", "inselvatichiti", "inseriti", "insidiati", "insigniti", "insilati", "insinuati", "insolentiti", "insonnoliti", "insonorizzati", "insorditi", "insospettiti", "insozzati", "inspessiti", "inspirati", "installati", "instaurati", "insteriliti", "instillati", "instituiti", "instradati", "insudiciati", "insufflati", "insultati", "insuperbiti", "intabaccati", "intabarrati", "intaccati", "intagliati", "intarsiati", "intasati", "intascati", "intavolati", "integrati", "intelaiati", "intelati", "intellettualizzati", "intenebrati", "inteneriti", "intensificati", "intentati", "intepiditi", "intercalati", "intercambiati", "intercettati", "intercisi", "interclusi", "intercollegati", "interconnessi", "interconvertiti", "interdetti", "interessati", "interfacciati", "interfogliati", "interfoliati", "interiorizzati", "interlacciati", "interlineati", "intermessi", "intermezzati", "internalizzati", "internati", "internazionalizzati", "interpellati", "interpenetrati", "interpolati", "interposti", "interpretati", "interpunti", "interrati", "interrogati", "interrotti", "intersecati", "intervallati", "intervistati", "intesi", "intessuti", "intestarditi", "intestati", "intiepiditi", "intimati", "intimiditi", "intimoriti", "intinti", "intirizziti", "intitolati", "intonacati", "intonati", "intontiti", "intorbidati", "intorbiditi", "intorpiditi", "intortati", "intossicati", "intralciati", "intramessi", "intramezzati", "intrappolati", "intrapresi", "intrattenuti", "intraveduti", "intravisti", "intravveduti", "intravvisti", "intrecciati", "intricati", "intrigati", "intrinsecati", "intrippati", "intrisi", "introdotti", "introflessi", "introiettati", "introitati", "intromessi", "intronati", "intronizzati", "intruduti", "intrufolati", "intrugliati", "intruppati", "intrusi", "intubati", "intubettati", "intuiti", "inumati", "inumiditi", "inurbati", "inutilizzati", "invaghiti", "invaginati", "invalidati", "invasati", "invasi", "inveleniti", "inventariati", "inventati", "invenuti", "inverditi", "invergati", "inverniciati", "investigati", "investiti", "invetriati", "inviati", "invidiati", "invigoriti", "inviluppati", "invischiati", "invitati", "invocati", "invogliati", "involati", "involgariti", "involtati", "involti", "inzaccherati", "inzeppati", "inzigati", "inzolfati", "inzuccati", "inzuccherati", "inzuppati", "iodurati", "ionizzati", "ipertrofizzati", "ipnotizzati", "ipostatizzati", "ipotecati", "ipotizzati", "iridati", "irradiati", "irraggiati", "irreggimentati", "irretiti", "irrigati", "irrigiditi", "irrisi", "irritati", "irrobustiti", "irrogati", "irrorati", "irrugginiti", "irruviditi", "ischeletriti", "iscritti", "islamizzati", "isolati", "isomerizzati", "ispanizzati", "ispessiti", "ispezionati", "ispirati", "issati", "istallati", "istanziati", "istaurati", "isteriliti", "istigati", "istillati", "istituiti", "istituzionalizzati", "istoriati", "istradati", "istruiti", "istupiditi", "italianeggiati", "italianizzati", "iterati", "iudicati", "killerati", "labbreggiati", "labializzati", "laccati", "lacerati", "laconizzati", "lacrimati", "ladroneggiati", "lagnati", "lagrimati", "laicizzati", "lambiccati", "lambiti", "lamentati", "laminati", "lanciati", "lapidati", "lappati", "lardati", "lardellati", "largiti", "larvati", "lascati", "lasciati", "lastricati", "latinizzati", "laudati", "laureati", "lavati", "lavorati", "leccati", "legalizzati", "legati", "leggicchiati", "leggiucchiati", "legittimati", "legittimizzati", "legnati", "lemmatizzati", "leniti", "lesinati", "lesionati", "lesi", "lessati", "letti", "levati", "levigati", "liberalizzati", "liberati", "licenziati", "lievitati", "liftati", "lignificati", "limati", "limitati", "linciati", "linearizzati", "lineati", "linkati", "liofilizzati", "liquefatti", "liquidati", "lisati", "lisciati", "lisciviati", "listati", "litografati", "livellati", "lizzati", "lobotomizzati", "localizzati", "locati", "lodati", "logorati", "lordati", "lottati", "lottizzati", "lubrificati", "lucchettati", "lucidati", "lucrati", "lumeggiati", "luppolizzati", "lusingati", "lussati", "lustrati", "macadamizzati", "macchiati", "macchinati", "macellati", "macerati", "maciullati", "maggesati", "maggiorati", "magnati", "magnetizzati", "magnificati", "maiolicati", "maledetti", "malfatti", "malignati", "malmenati", "malmessi", "maltati", "maltrattati", "malveduti", "malversati", "malvisti", "malvoluti", "mandati", "mandrinati", "manducati", "maneggiati", "manganati", "manganellati", "mangiati", "mangiucchiati", "manifatturati", "manifestati", "manimessi", "manipolati", "manlevati", "manomessi", "manoscritti", "manovrati", "mansuefatti", "mantecati", "mantenutasi", "mantenuti", "manualizzati", "manutenuti", "mappati", "marcati", "marchiati", "marciti", "marezzati", "marginalizzati", "marginati", "margottati", "marimessi", "marinati", "maritati", "marmorizzati", "marnati", "marocchinati", "martellati", "martellinati", "martirizzati", "martoriati", "mascherati", "maschiati", "maschiettati", "mascolinizzati", "massacrati", "massaggiati", "massellati", "massicciati", "massificati", "massimati", "massimizzati", "mastectomizzati", "masterizzati", "masticati", "masturbati", "matematizzati", "materializzati", "matricolati", "mattonati", "maturati", "mazziati", "mazzolati", "meccanizzati", "medagliati", "mediati", "medicalizzati", "medicati", "meditati", "membrati", "memorizzati", "menati", "mendicati", "menomati", "mentovati", "menzionati", "meravigliati", "mercanteggiati", "mercerizzati", "mercificati", "meriati", "meridionalizzati", "meritati", "merlati", "merlettati", "mersi", "mesciati", "mesciuti", "mescolati", "mescuti", "mesmerizzati", "messaggiati", "messi", "messoci", "mestati", "mesticati", "mestruati", "metabolizzati", "metaforeggiati", "metaforizzati", "metallizzati", "metamorfizzati", "metamorfosati", "metanizzati", "metilati", "metodizzati", "microfilmati", "microfonati", "microminiaturizzati", "micronizzati", "mietuti", "migliorati", "militarizzati", "millantati", "millimetrati", "mimati", "mimeografati", "mimetizzati", "minacciati", "minati", "minchionati", "mineralizzati", "miniati", "miniaturizzati", "minimizzati", "minuiti", "minuzzati", "miracolati", "miscelati", "mischiati", "misconosciuti", "missati", "mistificati", "misturati", "misurati", "miticizzati", "mitigati", "mitizzati", "mitragliati", "mitrati", "mixati", "mobiliati", "mobilitati", "mobilizzati", "modanati", "modellati", "modellizzati", "moderati", "modernizzati", "modificati", "modulati", "molati", "molestati", "mollati", "molleggiati", "moltiplicati", "monacati", "mondati", "mondializzati", "monetarizzati", "monetati", "monetizzati", "monitorati", "monitorizzati", "monocromatizzati", "monopolizzati", "monottongati", "montati", "monumentalizzati", "mordenzati", "mordicchiati", "mormorati", "morphati", "morsicati", "morsicchiati", "morsi", "mortasati", "mortificati", "mossi", "mostrati", "motivati", "motorizzati", "motteggiati", "movimentati", "mozzati", "mugolati", "mulciti", "multati", "multiplexati", "mummificati", "municipalizzati", "muniti", "munti", "murati", "musati", "musicati", "mussati", "mutati", "mutilati", "mutizzati", "mutuati", "nappati", "narcotizzati", "narrativizzati", "narrati", "nasalizzati", "nascosi", "nascosti", "nastrati", "naturaleggiati", "naturalizzati", "nauseati", "naverati", "navicati", "navigati", "nazificati", "nazionalizzati", "nebulizzati", "necessitati", "necrosati", "necrotizzati", "negativizzati", "negati", "negletti", "negoziati", "negreggiati", "neologizzati", "nerbati", "nericati", "nettati", "neutralizzati", "nevati", "nevicati", "nevischiati", "nevrotizzati", "nichelati", "niellati", "ninfeggiati", "ninnati", "ninnolati", "nitratati", "nitrificati", "nobilitati", "noiati", "noleggiati", "nomati", "nominalizzati", "nominati", "normalizzati", "normati", "notati", "notificati", "notiziati", "notricati", "noverati", "nuclearizzati", "nudricati", "nullificati", "numerati", "numerizzati", "nuotati", "nutriti", "obbiettati", "obbliati", "obbligati", "oberati", "obiettati", "obiettivati", "obiettivizzati", "obiurgati", "obliati", "obliterati", "obnubilati", "occasionati", "occhieggiati", "occidentalizzati", "occisi", "occlusi", "occultati", "occupati", "ocheggiati", "odiati", "odorati", "odorizzati", "offeriti", "offerti", "offesi", "officiati", "offiziati", "offuscati", "ofiziati", "oggettivati", "oggettivizzati", "oggettualizzati", "oliati", "oliti", "olografati", "oltraggiati", "oltrapassati", "oltrepassati", "omaggiati", "ombrati", "ombreggiati", "omessi", "omogeneizzati", "omogenizzati", "omologati", "ondati", "ondulati", "onestati", "onnubilati", "onorati", "opacati", "opacizzati", "operati", "opinati", "oppiati", "oppignorati", "oppilati", "opposti", "oppressi", "oppugnati", "oprati", "opsonizzati", "optati", "opzionati", "orbitati", "orchestrati", "ordinati", "orditi", "orecchiati", "organati", "organicati", "organizzati", "orgasmati", "orientalizzati", "orientati", "originati", "origliati", "orizzontati", "orlati", "orlettati", "ormati", "ormeggiati", "ornati", "orpellati", "orrati", "orripilati", "ortogonalizzati", "osannati", "osati", "osculati", "oscurati", "ospedalizzati", "ospitati", "osseduti", "ossequiati", "osservati", "ossessionati", "ossidati", "ossificati", "ossitonizzati", "ostacolati", "osteggiati", "ostentati", "ostinati", "ostracizzati", "ostruiti", "ottemperati", "ottenebrati", "ottenuti", "ottimalizzati", "ottimati", "ottimizzati", "ottonati", "ottriati", "ottuplicati", "otturati", "ottusi", "ottussi", "ovalizzati", "ovariectomizzati", "ovattati", "overcloccati", "ovrati", "ovviati", "ozieggiati", "ozonizzati", "pacati", "pacciamati", "pacificati", "padroneggiati", "paganizzati", "pagati", "paginati", "palafittati", "palatalizzati", "palati", "palesati", "palettati", "palettizzati", "palificati", "palleggiati", "pallettizzati", "palpati", "palpeggiati", "panati", "panneggiati", "panoramicati", "pappati", "paracadutati", "parafati", "paraffinati", "parafrasati", "paragonati", "paragrafati", "paralizzati", "parallelizzati", "parametrati", "parametrizzati", "parassitati", "parati", "parcati", "parcellizzati", "parcheggiati", "pareggiati", "parificati", "parkerizzati", "parlati", "parlucchiati", "parodiati", "partecipati", "particolareggiati", "particolarizzati", "partizionati", "partoriti", "parzializzati", "pasciuti", "pascolati", "passati", "passeggiati", "passionati", "passivati", "pasticciati", "pastorizzati", "pasturati", "patinati", "patiti", "patrocinati", "patteggiati", "pattugliati", "pattuiti", "paventati", "pavesati", "pavimentati", "pavoneggiati", "pazziati", "pedinati", "pedonalizzati", "peggiorati", "pelati", "pellettizzati", "penalizzati", "penetrati", "pennellati", "pensati", "pensionati", "pentiti", "pepati", "peptonizzati", "peragrati", "percentualizzati", "percepiti", "percolati", "percorsi", "percossi", "perdonati", "perdotti", "perduti", "perequati", "perfatti", "perfezionati", "perforati", "performati", "periti", "periziati", "perlustrati", "permeati", "permessi", "perorati", "perpetrati", "perpetuati", "perplimuti", "perquisiti", "perscrutati", "perseguitati", "perseguiti", "persi", "personalizzati", "personificati", "persuasi", "perturbati", "pervasi", "pervertiti", "pesati", "pescati", "pestati", "petrarcheggiati", "pettegolati", "pettinati", "piagati", "piaggiati", "piallati", "pianeggiati", "pianificati", "piantati", "piantatali", "piantati", "pianti", "piantonati", "piantumati", "piastrellati", "piatiti", "piazzati", "picchettati", "picchiati", "picchierellati", "picchiettati", "picconati", "piegati", "pieghettati", "pietrificati", "pigiati", "pigliati", "pigmentati", "pignorati", "pigolati", "pilotati", "pimentati", "pinti", "pinzati", "piombati", "piovigginati", "piovuti", "pipati", "pippati", "piratati", "pirogenati", "pisciati", "pitoccati", "pittati", "pitturati", "pizzicati", "pizzicottati", "placati", "placcati", "plagiati", "plasmati", "plasticati", "plastificati", "platinati", "plissettati", "pluralizzati", "poetati", "poeticizzati", "poggiati", "polarizzati", "poligrafati", "polimerizzati", "politicizzati", "polverizzati", "pomiciati", "pompati", "ponderati", "ponzati", "popolarizzati", "popolati", "poppati", "porcellanati", "porfirizzati", "portati", "portesi", "porti", "porzionati", "posati", "posdatati", "positivizzati", "posizionati", "posposti", "posseduti", "postati", "postdatati", "posteggiati", "posticipati", "postillati", "posti", "postsincronizzati", "postulati", "potabilizzati", "potati", "potenziati", "potuti", "pralinati", "praticati", "preaccennati", "preannunciati", "preannunziati", "preavvertiti", "preavvisati", "precaricati", "preceduti", "precettati", "precinti", "precisati", "preclusi", "precompilati", "precompressi", "preconfezionati", "preconizzati", "preconosciuti", "precorsi", "precostituiti", "predati", "predefiniti", "predestinati", "predeterminati", "predetti", "predicati", "predigeriti", "prediletti", "predisposti", "preeletti", "preesistuti", "prefabbricati", "prefati", "prefatti", "prefazionati", "preferiti", "prefigurati", "prefinanziati", "prefissati", "prefissi", "preformati", "pregati", "pregiati", "pregiudicati", "pregustati", "preimpregnati", "prelevati", "premeditati", "premescolati", "premessi", "premiati", "premoniti", "premuniti", "premurati", "premuti", "prenotati", "preoccupati", "preordinati", "preparati", "prepensionati", "prepigmentati", "preposti", "preprogrammati", "preraffreddati", "prerefrigerati", "preregistrati", "preregolati", "preriscaldati", "presi", "presagiti", "presaputi", "presaseli", "prescelti", "prescritti", "preseduti", "presegnalati", "preselezionati", "presentati", "presentiti", "preservati", "presidiati", "presieduti", "presi", "pressati", "pressi", "pressurizzati", "prestabiliti", "prestampati", "prestati", "prestigiati", "presunti", "presupposti", "pretermessi", "pretesi", "pretrattati", "prevaricati", "preveduti", "prevenduti", "preventivati", "prevenuti", "previsti", "prezzati", "prezzolati", "principiati", "privatizzati", "privati", "privilegiati", "problematizzati", "procacciati", "processati", "proclamati", "procrastinati", "procreati", "procurati", "prodigati", "prodotti", "profanati", "proferiti", "professati", "professionalizzati", "profetati", "profetizzati", "profferiti", "profilati", "profondati", "profumati", "profusi", "progettati", "prognosticati", "programmati", "proibiti", "proiettati", "proletarizzati", "prolungati", "promanati", "promessi", "promossi", "promozionati", "promulgati", "pronosticati", "pronunciati", "pronunziati", "propagandati", "propagati", "propagginati", "propalati", "propinati", "propiziati", "proporzionati", "proposti", "propugnati", "propulsi", "prorogati", "prosciolti", "prosciugati", "proscritti", "proseguiti", "prospettati", "prosternati", "prostesi", "prostituiti", "prostrati", "prosunti", "protesi", "protestati", "protetti", "protocollati", "protonati", "protratti", "protrusi", "provati", "proveduti", "provincializzati", "provisti", "provocati", "provveduti", "provvisti", "psicanalizzati", "psichiatrizzati", "psicoanalizzati", "psicologizzati", "pubblicati", "pubblicizzati", "puddellati", "pugnalati", "puliti", "pungolati", "puniti", "puntati", "punteggiati", "puntellati", "punti", "puntualizzati", "punzecchiati", "punzonati", "purgati", "purificati", "putiti", "putrefatti", "putriti", "quadrati", "quadrettati", "quadriennalizzati", "quadruplicati", "qualificati", "quantificati", "quantizzati", "querelati", "questuati", "quetati", "quietanzati", "quietati", "quintessenziati", "quintuplicati", "quotati", "quotizzati", "rabberciati", "rabboccati", "rabboniti", "rabbuffati", "rabuffati", "raccapezzati", "raccapricciati", "raccattati", "raccerchiati", "raccesi", "racchetati", "racchiusi", "raccolti", "raccolti", "raccomandati", "raccomodati", "raccontati", "raccorciati", "raccorciti", "raccordati", "raccostati", "raccozzati", "racemizzati", "racimolati", "radazzati", "raddensati", "raddobbati", "raddolciti", "raddoppiati", "raddotti", "raddrizzati", "radiati", "radicalizzati", "radioassistiti", "radioattivati", "radiocomandati", "radiodiffusi", "radiografati", "radioguidati", "radiolocalizzati", "radiomarcati", "radiotelegrafati", "radiotrasmessi", "radunati", "raffazzonati", "raffermati", "raffigurati", "raffilati", "raffinati", "rafforzati", "raffreddati", "raffrenati", "raffrescati", "raffrontati", "raggelati", "raggentiliti", "ragghiati", "raggirati", "raggiunti", "raggiustati", "raggomitolati", "raggranchiati", "raggranchiti", "raggranellati", "raggrinzati", "raggrinziti", "raggrumati", "raggruppati", "raggruzzolati", "ragguagliati", "ralingati", "rallegrati", "rallentati", "ramati", "ramazzati", "rammagliati", "rammaricati", "rammemorati", "rammendati", "rammentati", "rammodernati", "rammolliti", "rammorbiditi", "rampognati", "randellati", "randomizzati", "rannicchiati", "rannuvolati", "ranzati", "rapati", "rapinati", "rapiti", "rappacificati", "rappati", "rappattumati", "rappezzati", "rapportati", "rappresantati", "rappresentati", "rappresi", "rarefatti", "rasati", "raschiati", "raschiettati", "rasentati", "rasi", "raspati", "rassegnati", "rasserenati", "rassettati", "rassicurati", "rassodati", "rassomigliati", "rassottigliati", "rassunti", "rastrellati", "rastremati", "rateati", "rateizzati", "ratificati", "ratinati", "rattizzati", "rattoppati", "rattorti", "rattrappiti", "rattristati", "rattristiti", "raunati", "ravvalorati", "ravveduti", "ravviati", "ravvicinati", "ravviluppati", "ravvisati", "ravvisti", "ravvivati", "ravvolti", "ravvoltolati", "razionalizzati", "razionati", "razziati", "razzolati", "realizzati", "reassunti", "recapitati", "recati", "receduti", "recensiti", "recepiti", "recidivati", "recintati", "recinti", "reciprocati", "recisi", "recitati", "reclamati", "reclamizzati", "reclinati", "reclusi", "reclutati", "recuperati", "redarguiti", "redatti", "redazzati", "redduti", "redenti", "redistribuiti", "redotti", "referenziati", "refertati", "refilati", "reflessi", "reflettuti", "refranti", "refrigerati", "regalati", "regimati", "regimentati", "regionalizzati", "registrati", "regolamentati", "regolarizzati", "regolati", "reidratati", "reificati", "reimbarcati", "reimmersi", "reimmessi", "reimparati", "reimpastati", "reimpiantati", "reimpiegati", "reimportati", "reimpostati", "reincarcerati", "reincaricati", "reincarnati", "reincisi", "reincontrati", "reindirizzati", "reindustrializzati", "reinfettati", "reingaggiati", "reinizializzati", "reinnestati", "reinoltrati", "reinscritti", "reinsediati", "reinseriti", "reinstallati", "reinstaurati", "reintegrati", "reinterpretati", "reintitolati", "reintrodotti", "reinventati", "reinvestiti", "reiterati", "relativizzati", "relazionati", "relegati", "remixati", "remunerati", "renderizzati", "reperiti", "repertati", "replicati", "repressi", "repulsi", "reputati", "requisiti", "rescissi", "resecati", "resettati", "residuati", "resinificati", "resi", "resolati", "resolti", "respinti", "respirati", "responsabilizzati", "resposti", "restaurati", "restituiti", "resunti", "resuscitati", "reticolati", "retinati", "retribuiti", "retroceduti", "retrocessi", "retrodatati", "rettificati", "retti", "reumatizzati", "revisionati", "revocati", "riabbassati", "riabbelliti", "riabbonati", "riabbottonati", "riabbracciati", "riabilitati", "riabitati", "riabituati", "riaccaduti", "riaccasati", "riaccesi", "riaccettati", "riacchiappati", "riacciuffati", "riaccolti", "riaccomodati", "riaccompagnati", "riaccordati", "riaccostati", "riaccreditati", "riacquisiti", "riacquistati", "riacutizzati", "riadattati", "riaddestrati", "riaddormentati", "riadoperati", "riaffacciati", "riaffermati", "riafferrati", "riaffiorati", "riaffittati", "riaffrontati", "riagganciati", "riaggiornati", "riaggiustati", "riaggravati", "riaggregati", "riagguantati", "rialimentati", "riallacciati", "riallargati", "riallineati", "riallocati", "riallungati", "rialzati", "riamati", "riambientati", "riammalati", "riammessi", "riammodernati", "riammogliati", "rianimati", "riannessi", "riannodati", "riannunciati", "riaperti", "riappacificati", "riappaltati", "riapparecchiati", "riappariti", "riappesi", "riappiccicati", "riapplicati", "riappresi", "riapprodati", "riappropriati", "riapprovati", "riarmati", "riarrangiati", "riarredati", "riascoltati", "riasfaltati", "riassaliti", "riassaporati", "riassegnati", "riassemblati", "riassestati", "riassettati", "riassicurati", "riassociati", "riassopiti", "riassorbiti", "riassunti", "riattaccati", "riattati", "riattesi", "riattinti", "riattivati", "riattizzati", "riattraversati", "riaumentati", "riavuti", "riavventati", "riavvertiti", "riavviati", "riavvicinati", "riavvinti", "riavvisati", "riavvistati", "riavvolti", "riazzuffati", "ribaciati", "ribaditi", "ribaltati", "ribassati", "ribattezzati", "ribattuti", "ribellati", "ribenedetti", "ribevuti", "ributtati", "ricacciati", "ricalati", "ricalcati", "ricalcificati", "ricalcitrati", "ricalcolati", "ricalibrati", "ricamati", "ricambiati", "ricanalizzati", "ricandidati", "ricantati", "ricapitalizzati", "ricapitolati", "ricaricati", "ricategorizzati", "ricattati", "ricavati", "ricelebrati", "ricercati", "ricetrasmessi", "ricettati", "ricevuti", "richiamati", "richiesti", "richiusi", "riciclati", "ricinti", "ricircolati", "riclassificati", "ricodificati", "ricollegati", "ricollocati", "ricolmati", "ricolonizzati", "ricolorati", "ricoloriti", "ricoltivati", "ricombinati", "ricominciati", "ricommessi", "ricompariti", "ricompattati", "ricompensati", "ricomperati", "ricompilati", "ricompiuti", "ricomposti", "ricomprati", "ricompressi", "ricomunicati", "riconceduti", "riconcessi", "riconciliati", "ricondizionati", "ricondotti", "riconfermati", "riconfezionati", "riconfigurati", "riconfortati", "riconfusi", "ricongelati", "ricongiunti", "riconnessi", "riconosciuti", "riconquistati", "riconsacrati", "riconsegnati", "riconsiderati", "riconsigliati", "riconsolati", "ricontati", "ricontattati", "ricontrattati", "ricontratti", "ricontrollati", "riconvalidati", "riconvenuti", "riconvertiti", "riconvinti", "riconvocati", "riconvogliati", "ricoperti", "ricopiati", "ricordati", "ricoricati", "ricorretti", "ricosparsi", "ricostituiti", "ricostretti", "ricostruiti", "ricotti", "ricoverati", "ricreati", "ricristallizzati", "ricrocifissi", "ricuciti", "ricuperati", "ricusati", "ridati", "ridecorati", "ridefiniti", "ridenominati", "ridestati", "rideterminati", "ridetti", "ridicolizzati", "ridigitati", "ridimensionati", "ridipinti", "ridiscesi", "ridisciolti", "ridisciplinati", "ridiscussi", "ridisegnati", "ridisfatti", "ridisposti", "ridistesi", "ridistinti", "ridistribuiti", "ridivisi", "ridomandati", "ridonati", "ridondati", "ridorati", "ridotati", "ridotti", "ridovuti", "riecheggiati", "riedificati", "rieducati", "rielaborati", "rieletti", "riemessi", "riempiti", "riempiuti", "rientrati", "riepilogati", "riequilibrati", "riequipaggiati", "riesaminati", "rieseguiti", "riesercitati", "riesplosi", "riesportati", "riesposti", "riespressi", "riespulsi", "riestesi", "riesumati", "rietichettati", "rievaporati", "rievocati", "rifabbricati", "rifasciati", "rifatti", "rifenduti", "riferiti", "rifermati", "rifermentati", "rifessi", "rificcati", "rifilati", "rifiltrati", "rifinanziati", "rifiniti", "rifirmati", "rifischiati", "rifissi", "rifiutati", "riflessi", "riflettuti", "rifocillati", "rifoderati", "rifondati", "riforestati", "riforgiati", "riformati", "riformattati", "riformulati", "riforniti", "rifranti", "rifritti", "rifrugati", "rifuggiti", "rifugiati", "rifusi", "rigassificati", "rigati", "rigelati", "rigenerati", "rigettati", "righettati", "rigiocati", "rigirati", "rigiudicati", "rigiunti", "rigoduti", "rigonfiati", "rigovernati", "riguadagnati", "riguardati", "rigurgitati", "rilanciati", "rilasciati", "rilassati", "rilavati", "rilavorati", "rilegati", "riletti", "rilevati", "rilocalizzati", "rimagliati", "rimandati", "rimaneggiati", "rimangiati", "rimappati", "rimarcati", "rimarchiati", "rimarginati", "rimaritati", "rimasticati", "rimati", "rimbacuccati", "rimbaldanziti", "rimbarcati", "rimbeccati", "rimbecilliti", "rimbelliti", "rimbiancati", "rimbionditi", "rimboccati", "rimbombati", "rimborsati", "rimboscati", "rimboschiti", "rimbrottati", "rimediati", "rimembrati", "rimemorati", "rimenati", "rimeritati", "rimescolati", "rimessi", "rimestati", "rimilitarizzati", "rimirati", "rimischiati", "rimisurati", "rimodellati", "rimodernati", "rimodulati", "rimondati", "rimontati", "rimorchiati", "rimorsi", "rimossi", "rimostrati", "rimotivati", "rimpacchettati", "rimpadroniti", "rimpaginati", "rimpagliati", "rimpannucciati", "rimpastati", "rimpatriati", "rimpiallacciati", "rimpianti", "rimpiattati", "rimpiazzati", "rimpiccioliti", "rimpiccoliti", "rimpiegati", "rimpinguati", "rimpinzati", "rimpolpati", "rimpossessati", "rimpressi", "rimproverati", "rimuginati", "rimunerati", "rimunti", "rimusicati", "rimutati", "rinarrati", "rinascosti", "rincalcati", "rincalzati", "rincamminati", "rincantucciati", "rincarati", "rincarcerati", "rincarnati", "rincentrati", "rinchiesti", "rinchiodati", "rinchiusi", "rincitrulliti", "rinciviliti", "rincoglioniti", "rincollati", "rincominciati", "rincontrati", "rincoraggiati", "rincorati", "rincorporati", "rincorsi", "rincretiniti", "rincruditi", "rinculcati", "rincuorati", "rindossati", "rinduriti", "rinegoziati", "rinfacciati", "rinfagottati", "rinfiammati", "rinfiancati", "rinfilati", "rinfittiti", "rinfocolati", "rinfoderati", "rinforzati", "rinfrancati", "rinfranti", "rinfrescati", "rinfusi", "ringagliarditi", "ringalluzziti", "ringiovaniti", "ringioveniti", "ringoiati", "ringorgati", "ringraziati", "ringuainati", "rinnamorati", "rinnegati", "rinnestati", "rinnovati", "rinnovellati", "rinociuti", "rinomati", "rinominati", "rinormalizzati", "rinquadrati", "rinsaccati", "rinsaldati", "rinsanguati", "rinselvatichiti", "rinselvati", "rinserrati", "rintanati", "rintasati", "rintascati", "rintavolati", "rinteneriti", "rinterrati", "rinterrogati", "rintesi", "rintiepiditi", "rintoccati", "rintonacati", "rintontiti", "rintorpiditi", "rintracciati", "rintrodotti", "rintronati", "rintuzzati", "rinunciati", "rinunziati", "rinutriti", "rinvangati", "rinvasati", "rinvenuti", "rinverditi", "rinvestiti", "rinviati", "rinvigoriti", "rinviliti", "rinvitati", "rinvoltati", "rinvolti", "rinvoltolati", "rinzaffati", "rinzeppati", "riobbligati", "rioccupati", "riofferti", "rioffesi", "rioperati", "riordinati", "riorganizzati", "riorientati", "riosservati", "riottenuti", "riottimizzati", "riotturati", "ripagati", "riparametrizzati", "riparati", "ripartiti", "ripassati", "ripercorsi", "ripercossi", "riperduti", "ripersi", "ripesati", "ripescati", "ripestati", "ripetuti", "ripianati", "ripianificati", "ripiantati", "ripianti", "ripicchiati", "ripiegati", "ripigliati", "ripinti", "ripiovuti", "ripitturati", "riplasmati", "ripolarizzati", "ripopolati", "riportati", "riporti", "riposati", "riposizionati", "riposseduti", "riposti", "ripotuti", "ripresentati", "ripresi", "riprestati", "ripretesi", "riprincipiati", "ripristinati", "riprivatizzati", "riprodotti", "riprogettati", "riprogrammati", "ripromessi", "riproposti", "riprotetti", "riprovati", "riprovveduti", "riprovvisti", "ripubblicati", "ripudiati", "ripugnati", "ripuliti", "ripuntati", "ripunti", "ripurgati", "riputati", "riquadrati", "riqualificati", "riresi", "rirotti", "risaldati", "risaliti", "risaltati", "risalutati", "risanati", "risaputi", "risarciti", "riscalati", "riscaldati", "riscattati", "riscelti", "riscesi", "rischiarati", "rischiati", "risciacquati", "risciolti", "riscommessi", "riscontati", "riscontrati", "risconvolti", "riscoperti", "riscoppiati", "riscorsi", "riscossi", "riscritti", "risecati", "riseduti", "risegati", "risegnati", "riselciati", "riselezionati", "riseminati", "risentiti", "riseppelliti", "riserbati", "riservati", "risicati", "risigillati", "risistemati", "risi", "risoffiati", "risoggiunti", "risolati", "risolidificati", "risollevati", "risolti", "risommati", "risommersi", "risonati", "risorpassati", "risospesi", "risospinti", "risottomessi", "risparmiati", "risparsi", "rispecchiati", "rispediti", "rispenti", "rispersi", "rispettati", "rispiegati", "rispinti", "rispolverati", "risposati", "risposti", "rissati", "ristabiliti", "ristagnati", "ristampati", "ristaurati", "ristesi", "ristilizzati", "ristorati", "ristretti", "ristrutti", "ristrutturati", "ristuccati", "ristudiati", "risucchiati", "risultati", "risuolati", "risuonati", "risuscitati", "risvegliati", "risvolti", "ritagliati", "ritarati", "ritardati", "ritemprati", "ritentati", "ritenuti", "ritersi", "ritesi", "ritinti", "ritirati", "ritoccati", "ritolti", "ritorti", "ritracciati", "ritradotti", "ritrascorsi", "ritrascritti", "ritrasferiti", "ritrasformati", "ritrasmessi", "ritrasposti", "ritrattati", "ritratti", "ritrovati", "ritualizzati", "rituffati", "riuditi", "riunificati", "riuniti", "riusati", "riutilizzati", "rivaccinati", "rivaleggiati", "rivalorizzati", "rivalsi", "rivalutati", "rivangati", "riveduti", "rivelati", "rivendicati", "rivenduti", "riverberati", "riveriti", "riverniciati", "riversati", "rivestiti", "rivettati", "rivinti", "rivisitati", "rivissuti", "rivisti", "rivitalizzati", "rivivificati", "rivoltati", "rivolti", "rivoltolati", "rivoluti", "rivoluzionati", "rizappati", "rizzati", "robotizzati", "rodati", "rogati", "rollati", "romanizzati", "romanticizzati", "romanzati", "roncolati", "rosicati", "rosicchiati", "rosi", "rosolati", "rotacizzati", "rotati", "roteati", "rotolati", "rottamati", "rotti", "rovesciati", "rovinati", "rovistati", "rubacchiati", "rubati", "rullati", "ruminati", "ruotati", "russificati", "ruzzolati", "sabbiati", "sabotati", "saccarificati", "saccheggiati", "sacralizzati", "sacramentati", "sacrificati", "saettati", "saggiati", "sagginati", "sagomati", "salamoiati", "salariati", "salassati", "salati", "saldati", "salificati", "salinizzati", "saliti", "salmeggiati", "salmistrati", "salpati", "saltati", "salutati", "salvaguardati", "salvati", "sanati", "sanciti", "sanforizzati", "sanificati", "sanitizzati", "santificati", "sanzionati", "saponificati", "saputi", "sarchiati", "sarchiellati", "sartiati", "satellizzati", "satinati", "satireggiati", "satisfatti", "satollati", "saturati", "saziati", "sbaccellati", "sbaciucchiati", "sbafati", "sbaffati", "sbalestrati", "sballati", "sballottati", "sballottolati", "sbalorditi", "sbalzati", "sbancati", "sbandati", "sbandierati", "sbanditi", "sbaraccati", "sbaragliati", "sbarazzati", "sbarbati", "sbarcati", "sbardati", "sbarrati", "sbassati", "sbastiti", "sbatacchiati", "sbattezzati", "sbattuti", "sbeccati", "sbeffeggiati", "sbellicati", "sbendati", "sbertucciati", "sbiaditi", "sbiancati", "sbianchiti", "sbiellati", "sbiettati", "sbigottiti", "sbilanciati", "sbirbati", "sbirciati", "sbizzarriti", "sbloccati", "sbobinati", "sboccati", "sbocconcellati", "sbollentati", "sbolognati", "sborniati", "sborsati", "sboscati", "sbottonati", "sbozzati", "sbozzimati", "sbozzolati", "sbracati", "sbracciati", "sbraciati", "sbraitati", "sbranati", "sbrancati", "sbrattati", "sbreccati", "sbriciolati", "sbrigati", "sbrigliati", "sbrinati", "sbrindellati", "sbrodolati", "sbrogliati", "sbronzati", "sbruffati", "sbucciati", "sbudellati", "sbuffati", "sbugiardati", "sbullettati", "sbullonati", "sburrati", "scacazzati", "scacchiati", "scacciati", "scaccolati", "scadenzati", "scafati", "scaffalati", "scagionati", "scagliati", "scaglionati", "scalati", "scalcati", "scalcinati", "scaldati", "scalettati", "scalfati", "scalfiti", "scalmanati", "scaloppati", "scalpati", "scalpellati", "scalpellinati", "scaltriti", "scalzati", "scambiati", "scamiciati", "scamosciati", "scamozzati", "scampati", "scampatali", "scampati", "scamuffati", "scanalati", "scancellati", "scandagliati", "scandalizzati", "scanditi", "scannati", "scannellati", "scannerati", "scannerizati", "scannerizzati", "scansati", "scansionati", "scapecchiati", "scapezzati", "scapicollati", "scapigliati", "scapitozzati", "scapocchiati", "scappati", "scappellati", "scappottati", "scapricciati", "scapsulati", "scarabocchiati", "scaracchiati", "scaraventati", "scarcerati", "scardassati", "scardati", "scardinati", "scaricati", "scarificati", "scarmigliati", "scarnati", "scarnificati", "scarniti", "scarrellati", "scarrocciati", "scarrozzati", "scarruffati", "scartabellati", "scartati", "scartavetrati", "scartinati", "scartocciati", "scassati", "scassinati", "scatenati", "scattati", "scavalcati", "scavallati", "scavati", "scavezzati", "scazzottati", "scekerati", "scelti", "scempiati", "sceneggiati", "scernuti", "scervellati", "scesi", "sceverati", "schedati", "schedulati", "scheggiati", "scheletriti", "schematizzati", "schermati", "schermiti", "schermografati", "scherniti", "schiacciati", "schiaffati", "schiaffeggiati", "schiantati", "schiariti", "schiavardati", "schiavizzati", "schiccherati", "schierati", "schifati", "schinciati", "schioccati", "schiodati", "schiumati", "schiusi", "schivati", "schizzati", "schizzettati", "sciabolati", "sciabordati", "sciacquati", "scialacquati", "sciamanizzati", "sciamannati", "sciancati", "sciancrati", "scimmieggiati", "scimmiottati", "scinti", "scioccati", "sciolinati", "sciolti", "sciorinati", "scippati", "sciroppati", "scissi", "sciupacchiati", "sciupati", "sclamati", "sclerosati", "sclerotizzati", "scoccati", "scocciati", "scodati", "scodellati", "scoiati", "scolarizzati", "scolati", "scollacciati", "scollati", "scollegati", "scolorati", "scoloriti", "scolpati", "scolpiti", "scombaciati", "scombinati", "scombussolati", "scommessi", "scomodati", "scompaginati", "scompagnati", "scompartiti", "scompattati", "scompensati", "scompiacuti", "scompigliati", "scomposti", "scomputati", "scomunicati", "sconcertati", "sconciati", "sconclusi", "sconfessati", "sconficcati", "sconﬁtti", "sconfortati", "sconfusi", "scongelati", "scongiurati", "sconnessi", "sconosciuti", "sconquassati", "sconsacrati", "sconsigliati", "sconsolati", "scontati", "scontentati", "scontornati", "scontorti", "scontrati", "sconvolti", "scopati", "scoperchiati", "scoperti", "scopiazzati", "scoraggiati", "scoraggiti", "scorati", "scorazzati", "scorciati", "scorciti", "scordati", "scoreggiati", "scorificati", "scornati", "scorniciati", "scoronati", "scorporati", "scorrazzati", "scorreggiati", "scorretti", "scorsi", "scortati", "scortecciati", "scorticati", "scorti", "scorzati", "scoscesi", "scosciati", "scossi", "scostati", "scostolati", "scotennati", "scoticati", "scotolati", "scotomizzati", "scottati", "scotti", "scovati", "scoverti", "scozzati", "scozzonati", "screditati", "scremati", "screpolati", "screziati", "scribacchiati", "scriminati", "scristianizzati", "scritti", "scritturati", "scroccati", "scrocchiati", "scrollati", "scrostati", "scrutati", "scrutinati", "scuciti", "scudisciati", "scuffiati", "sculacciati", "sculettati", "scuoiati", "scuriosati", "scuriti", "scusati", "sdaziati", "sdebitati", "sdegnati", "sdemanializzati", "sdentati", "sdilinquiti", "sdoganati", "sdoluti", "sdoppiati", "sdraiati", "sdrammatizzati", "sdruciti", "secati", "seccati", "secernuti", "secolarizzati", "secondati", "secretati", "secreti", "sedati", "sedentarizzati", "sedotti", "segati", "seghettati", "segmentati", "segnalati", "segnati", "segnoreggiati", "segregati", "segretati", "seguitati", "seguiti", "selciati", "selezionati", "sellati", "sembrati", "sementati", "semicinti", "seminati", "semplificati", "senilizzati", "sensibilizzati", "sensorizzati", "sentenziati", "sentiti", "sentitaseli", "sentiti", "sentiti", "separati", "sepolti", "seppelliti", "sequenziati", "sequestrati", "serbati", "serrati", "serviti", "servoassistiti", "sessualizzati", "sestuplicati", "setacciati", "setificati", "settati", "settorializzati", "settuplicati", "seviziati", "sezionati", "sfaccettati", "sfagliati", "sfaldati", "sfalsati", "sfamati", "sfanalati", "sfangati", "sfarinati", "sfasati", "sfasciati", "sfatati", "sfatti", "sfavillati", "sfavoriti", "sfegatati", "sfeltrati", "sfenduti", "sferragliati", "sferrati", "sferzati", "sfessi", "sfiancati", "sfiatati", "sfiati", "sfibbiati", "sfibrati", "sfidati", "sfiduciati", "sfigurati", "sfilati", "sfilettati", "sfiniti", "sfioccati", "sfiorati", "sfittati", "sfocati", "sfociati", "sfoderati", "sfogati", "sfoggiati", "sfogliati", "sfollati", "sfoltiti", "sfondati", "sforacchiati", "sforati", "sforbiciati", "sformati", "sfornaciati", "sfornati", "sforniti", "sforzati", "sfottuti", "sfracellati", "sfrangiati", "sfrascati", "sfratati", "sfrattati", "sfrecciati", "sfregati", "sfregiati", "sfrenati", "sfrisati", "sfrondati", "sfrucugliati", "sfruculiati", "sfruttati", "sfumati", "sfuocati", "sgamati", "sganasciati", "sganciati", "sgarbugliati", "sgattaiolati", "sgelati", "sghiacciati", "sgocciolati", "sgolati", "sgomberati", "sgombrati", "sgomentati", "sgominati", "sgomitati", "sgomitolati", "sgonfiati", "sgorbiati", "sgottati", "sgovernati", "sgozzati", "sgraffiati", "sgraffignati", "sgranati", "sgranchiti", "sgranellati", "sgrassati", "sgravati", "sgretolati", "sgridati", "sgrommati", "sgrondati", "sgroppati", "sgrossati", "sgrovigliati", "sgrugnati", "sguainati", "sgualciti", "sguanciati", "sguarniti", "sguinzagliati", "sgusciati", "shakerati", "shoccati", "shuntati", "sigillati", "siglati", "significati", "signoreggiati", "silenziati", "silicizzati", "sillabati", "sillogizzati", "silurati", "simboleggiati", "simbolizzati", "simmetrizzati", "simpatizzati", "simulati", "sincerati", "sincopati", "sincretizzati", "sincronizzati", "sindacalizzati", "sindacati", "singolarizzati", "sinistrati", "sinizzati", "sinterizzati", "sintetizzati", "sintonizzati", "siringati", "sistematizzati", "sistemati", "situati", "slabbrati", "slacciati", "slamati", "slanciati", "slappolati", "slargati", "slavizzati", "slegati", "slentati", "slinguati", "slogati", "sloggati", "sloggiati", "slombati", "slungati", "smaccati", "smacchiati", "smagliati", "smagnetizzati", "smagriti", "smaliziati", "smallati", "smaltati", "smaltiti", "smammati", "smanacciati", "smangiati", "smantellati", "smarcati", "smarginati", "smarriti", "smascellati", "smascherati", "smaterializzati", "smattonati", "smembrati", "smentiti", "smerciati", "smerdati", "smerigliati", "smerlati", "smerlettati", "smessali", "smessi", "smezzati", "smidollati", "smielati", "smilitarizzati", "sminati", "sminuiti", "sminuzzati", "smistati", "smitizzati", "smobiliati", "smobilitati", "smobilizzati", "smoccolati", "smollicati", "smonacati", "smontati", "smorbati", "smorzati", "smossi", "smozzicati", "smunti", "smurati", "smussati", "smutandati", "snaturati", "snazionalizzati", "snebbiati", "snelliti", "snervati", "snidati", "sniffati", "snobbati", "snocciolati", "snodati", "snudati", "sobbarcati", "sobbolliti", "sobillati", "socchiusi", "soccorsi", "soddisfatti", "sodisfatti", "sodomizzati", "sofferiti", "soffermati", "sofferti", "soffiati", "soffocati", "soffregati", "soffritti", "soffusi", "sofisticati", "soggettivati", "soggettivizzati", "sogghignati", "soggiogati", "soggiunti", "sogguardati", "sognati", "solarizzati", "solcati", "soleggiati", "solennizzati", "solfeggiati", "solfitati", "solfonati", "solforati", "solidificati", "soliti", "sollazzati", "sollecitati", "solleticati", "sollevati", "solti", "solubilizzati", "soluti", "soluzionati", "solvatati", "somatizzati", "someggiati", "somigliati", "sommati", "sommersi", "sommessi", "somministrati", "sommossi", "sonati", "sondati", "sonorizzati", "sopiti", "soppalcati", "soppesati", "soppiantati", "sopportati", "sopposti", "soppressi", "sopraddotati", "sopraeccitati", "sopraedificati", "sopraelevati", "sopraffati", "sopraffatti", "sopraggiunti", "sopraintesi", "soprammessi", "soprannominati", "sopraposti", "soprappresi", "soprascritti", "sopraspesi", "soprassaturati", "soprasseduti", "sopravanzati", "sopravvalutati", "sopravveduti", "sopravvinti", "sopravvisti", "sopreccitati", "sopredificati", "soprelevati", "soprintesi", "sorbettati", "sorbiti", "sorgiunti", "sormontati", "sorpassati", "sorpresi", "sorrasi", "sorretti", "sorseggiati", "sorteggiati", "sortiti", "sorvegliati", "sorvolati", "soscritti", "sospesi", "sospettati", "sospinti", "sospirati", "sostantivati", "sostanziati", "sostentati", "sostenuti", "sostituiti", "sottaciuti", "sotterrati", "sottesi", "sottintesi", "sottoalimentati", "sottocapitalizzati", "sottodivisi", "sottoesposti", "sottofirmati", "sottolineati", "sottomessi", "sottomurati", "sottopagati", "sottopassati", "sottoposti", "sottorappresentati", "sottorisi", "sottoscritti", "sottostimati", "sottosviluppati", "sottotitolati", "sottovalutati", "sottratti", "soverchiati", "sovesciati", "sovietizzati", "sovracapitalizzati", "sovraccaricati", "sovradimensionati", "sovraeccitati", "sovraesposti", "sovraffaticati", "sovraffollati", "sovraggiunti", "sovraimposti", "sovraintesi", "sovralimentati", "sovramodulati", "sovrappopolati", "sovrapposti", "sovrariscaldati", "sovrasaturati", "sovrascritti", "sovrastampati", "sovrastati", "sovrastimati", "sovrautilizzati", "sovreccitati", "sovresposti", "sovrimposti", "sovrintesi", "sovvenuti", "sovvenzionati", "sovvertiti", "spaccati", "spacchettati", "spacciati", "spaginati", "spaiati", "spalancati", "spalati", "spalcati", "spalleggiati", "spalmati", "spammati", "spampanati", "spampinati", "spanati", "spanciati", "spanduti", "spannati", "spannocchiati", "spansi", "spantanati", "spanti", "spaparacchiati", "spaparanzati", "spappolati", "sparati", "sparecchiati", "sparigliati", "spariti", "sparlati", "sparpagliati", "spartiti", "spassati", "spassatoseli", "spastoiati", "spaurati", "spauriti", "spaventati", "spazializzati", "spaziati", "spazieggiati", "spazientiti", "spazzati", "spazzolati", "specchiati", "specializzati", "specificati", "specillati", "specolati", "spediti", "spegnati", "spelacchiati", "spelati", "spellati", "spennacchiati", "spennati", "spennellati", "spenti", "spenzolati", "sperati", "sperimentati", "spernacchiati", "speronati", "sperperati", "spersonalizzati", "sperticati", "spesati", "spesi", "spessiti", "spettacolarizzati", "spettinati", "spezzati", "spezzettati", "spezziati", "spezzonati", "spiaccicati", "spianati", "spiantati", "spiati", "spiattellati", "spiazzati", "spiccati", "spicciati", "spiccicati", "spicciolati", "spicconati", "spidocchiati", "spiegati", "spiegazzati", "spietrati", "spifferati", "spigionati", "spignorati", "spigolati", "spigriti", "spillati", "spilluzzicati", "spiluccati", "spinti", "spintonati", "spiombati", "spiralizzati", "spirantizzati", "spirati", "spiritualizzati", "spiumati", "spizzicati", "spodestati", "spoetizzati", "spogliati", "spolettati", "spoliati", "spoliticizzati", "spollonati", "spolmonati", "spolpati", "spoltroniti", "spolverati", "spolverizzati", "spompati", "spompinati", "sponsorizzati", "spopolati", "spoppati", "sporcati", "sportati", "sporti", "sposati", "sposseduti", "spossessati", "spostati", "sposti", "sprangati", "sprecati", "spregiati", "spremuti", "spretati", "sprezzati", "sprigionati", "sprimacciati", "spromessi", "spronati", "sprotetti", "sprovincializzati", "sprovveduti", "sprovvisti", "spruzzati", "spugnati", "spulati", "spulciati", "spuntati", "spuntellati", "spupazzati", "spurgati", "sputacchiati", "sputati", "sputtanati", "squadernati", "squadrati", "squagliati", "squagliataseli", "squagliati", "squalificati", "squamati", "squarciati", "squartati", "squassati", "squattrinati", "squilibrati", "squinternati", "sradicati", "srotolati", "srugginiti", "stabbiati", "stabiliti", "stabilizzati", "stabulati", "staccati", "stacciati", "staffati", "staffilati", "staggiati", "staggiti", "stagionati", "stagliati", "stagnati", "stamburati", "stampati", "stampigliati", "stanati", "stancati", "standardizzati", "stangati", "stanziati", "stappati", "starati", "starnazzati", "stasati", "statalizzati", "statizzati", "statoci", "statoseni", "statuiti", "stazzati", "stazzonati", "steccacciati", "steccati", "stecchiti", "stecconati", "stemperati", "stempiati", "stenografati", "stereotipati", "steriliti", "sterilizzati", "sterpati", "sterrati", "sterzati", "stesi", "stigliati", "stigmatizzati", "stilati", "stilettati", "stilizzati", "stillati", "stimati", "stimolati", "stinti", "stipati", "stipendiati", "stipulati", "stiracchiati", "stirati", "stivati", "stizziti", "stoccati", "stolti", "stomacati", "stonati", "stondati", "stoppati", "storditi", "storicizzati", "stornati", "storpiati", "stortati", "storti", "stozzati", "strabenedetti", "strabuzzati", "stracannati", "straccati", "stracciati", "stracotti", "strafogati", "stragoduti", "stralciati", "stralodati", "stralunati", "stramaledetti", "stramortiti", "strangolati", "straniati", "straniti", "straorzati", "strapagati", "strapazzati", "straperduti", "strapersi", "strappati", "strasaputi", "strascicati", "strascinati", "strasformati", "stratificati", "strattonati", "stravaccati", "stravinti", "stravolti", "stravoluti", "straziati", "stregati", "stremati", "stressati", "striati", "stridulati", "strigati", "strigliati", "strillati", "striminziti", "strimpellati", "strinati", "stringati", "strisciati", "stritolati", "strizzati", "strofinati", "strombati", "strombazzati", "stroncati", "stronzati", "stropicciati", "stroppati", "stroppiati", "strozzati", "struccati", "strumentalizzati", "strumentati", "strusciati", "strutti", "strutturalizzati", "strutturati", "stuccati", "studiacchiati", "studiati", "stuellati", "stufati", "stupefatti", "stupiti", "stuprati", "sturati", "stutati", "stuzzicati", "suasi", "subaffittati", "subappaltati", "subbiati", "subdelegati", "subissati", "subiti", "sublicenziati", "sublimati", "sublocati", "subodorati", "subordinati", "subornati", "suburbanizzati", "sucati", "succhiati", "succhiellati", "succiati", "succinti", "succisi", "suddistinti", "suddivisi", "suffissati", "suffissi", "suffragati", "suffumicati", "suffusi", "suggellati", "suggeriti", "suggestionati", "suicidati", "sunteggiati", "sunti", "suolati", "suonati", "superati", "superpagati", "superraffreddati", "supervalutati", "supervisionati", "supplicati", "suppliti", "supportati", "supposti", "suppurati", "surclassati", "surfati", "surgelati", "surraffreddati", "surriscaldati", "surrogati", "survoltati", "suscitati", "susseguiti", "sussidiati", "sussunti", "sussurrati", "suturati", "svaccati", "svagati", "svaligiati", "svalutati", "svapati", "svariati", "svasati", "svecchiati", "svegliati", "svelati", "sveleniti", "sveltiti", "svelti", "svenati", "svenduti", "sventagliati", "sventati", "sventolati", "sventrati", "sverginati", "svergognati", "svergolati", "sverminati", "sverniciati", "svestiti", "svettati", "svezzati", "sviati", "svignatoseli", "svigoriti", "sviliti", "svillaneggiati", "sviluppati", "svinati", "svincolati", "sviolinati", "svirgolati", "svirilizzati", "svisati", "sviscerati", "svitati", "sviticchiati", "svolati", "svolazzati", "svolti", "svoluti", "svuotati", "tabuizzati", "tabulati", "taccati", "taccheggiati", "tacciati", "tacitati", "taciuti", "tagliati", "taglieggiati", "tagliuzzati", "talebanizzati", "tallonati", "tampinati", "tamponati", "tanguti", "tannati", "tappati", "tappezzati", "tarati", "tardati", "targati", "tariffati", "tarlati", "tarmati", "taroccati", "tarpati", "tartagliati", "tartassati", "tartufati", "tassati", "tassellati", "tastati", "tasteggiati", "tatuati", "tecnicizzati", "tecnologizzati", "tedeschizzati", "tediati", "teflonati", "telecomandati", "telecontrollati", "telediffusi", "telefonati", "telegrafati", "teleguidati", "telematizzati", "telemetrati", "teleradiotrasmessi", "teletrasmessi", "teletrasportati", "tematizzati", "temperati", "tempestati", "tempificati", "templatizzati", "temporizzati", "temprati", "temuti", "tentati", "tenuti", "teologizzati", "teorizzati", "tepefatti", "terebrati", "terminati", "termostatati", "terrazzati", "terrificati", "terrorizzati", "tersi", "terzarolati", "terziarizzati", "terziati", "tesati", "tesaurizzati", "tesi", "tesserati", "testati", "testificati", "testimoniati", "timbrati", "tindalizzati", "tinteggiati", "tinti", "tipicizzati", "tipizzati", "tippati", "tiranneggiati", "tirati", "titillati", "titolati", "toccati", "toelettati", "tollerati", "tolti", "tonalizzati", "tonificati", "tonneggiati", "tonsurati", "torchiati", "tormentati", "tornatoseni", "torniti", "torrefatti", "torti", "tortoreggiati", "torturati", "tosati", "toscaneggiati", "toscanizzati", "tostati", "totalizzati", "traboccati", "trabuccati", "tracannati", "tracciati", "traditi", "tradotti", "trafficati", "trafilati", "trafitti", "traforati", "trafugati", "traghettati", "traguardati", "trainati", "tralasciati", "tralignati", "tramandati", "tramati", "trambasciati", "tramessi", "tramestati", "tramezzati", "tramortiti", "tramutati", "tranciati", "trangugiati", "tranquillati", "tranquillizzati", "transatti", "transcesi", "transcodificati", "transcorsi", "transcritti", "transennati", "transfluiti", "transfusi", "transistorizzati", "translitterati", "transposti", "transricevuti", "transustanziati", "transveduti", "transvisti", "trapanati", "trapassati", "trapiantati", "traportati", "traposti", "trapposti", "trapuntati", "trapunti", "trarotti", "trasandati", "trasbordati", "trascelti", "trascesi", "trascinati", "trascorsi", "trascritti", "trascurati", "trasdotti", "trasferiti", "trasfigurati", "trasformati", "trasfusi", "trasgrediti", "traslati", "traslitterati", "traslocati", "trasmessi", "trasmutati", "traspariti", "traspirati", "trasportati", "trasposti", "trastullati", "trasudati", "trasvolati", "trasvolti", "trattati", "tratteggiati", "trattenuti", "tratti", "traumatizzati", "travagliati", "travalicati", "travasati", "traveduti", "traversati", "travestiti", "traviati", "travisati", "travisti", "travolti", "trebbiati", "triangolati", "tribbiati", "tribolati", "tributati", "triennalizzati", "trimestralizzati", "trincati", "trincerati", "trinciati", "tripartiti", "triplicati", "trisecati", "trisezionati", "tritati", "triturati", "trivellati", "trollati", "trombati", "troncati", "tropicalizzati", "trovati", "truccati", "trucidati", "truffati", "tuffati", "tumefatti", "tumulati", "turati", "turbati", "turlupinati", "tutelati", "ubbligati", "ubicati", "ubiditi", "ubiquitinati", "ubriacati", "uccellati", "uccellinati", "uccisi", "uditi", "ufficializzati", "uggiti", "ugnati", "uguagliati", "ulcerati", "uliti", "ulolati", "ultimati", "ultracentrifugati", "ululati", "umanati", "umanizzati", "umettati", "umidificati", "umiditi", "umiliati", "uncinati", "unguentati", "unificati", "uniformati", "uniti", "univerbati", "universaleggiati", "universalizzati", "untati", "unti", "uperizzati", "urbanizzati", "urgenzati", "urlati", "urtacchiati", "urtati", "urticchiati", "usati", "usciolati", "usolati", "ustionati", "usucapiti", "usurati", "usurpati", "utilitati", "utilizzati", "vaccinati", "vagabondeggiati", "vagellati", "vagheggiati", "vagillati", "vagliati", "valcati", "valicati", "validati", "valorizzati", "valsi", "valutati", "vanagloriati", "vanati", "vandalizzati", "vangati", "vangelizzati", "vanificati", "vaniti", "vantaggiati", "vantati", "vaporati", "vaporizzati", "varati", "varcati", "variati", "vasectomizzati", "vaticinati", "vedovati", "veduti", "vegetati", "veggiati", "vegliati", "veicolati", "velarizzati", "velati", "velettati", "velinati", "vellicati", "vellutati", "velocizzati", "vendemmiati", "vendicati", "vendicchiati", "venducchiati", "venduti", "venerati", "vengiati", "ventagliati", "ventilati", "ventolati", "verbalizzati", "vergati", "vergheggiati", "vergognati", "vergolati", "verificati", "verminati", "vernalizzati", "verniciati", "verrinati", "versati", "verseggiati", "versificati", "verticalizzati", "vessati", "vestiti", "vestiti", "vetrificati", "vetrinati", "vetrioleggiati", "vettovagliati", "vezzeggiati", "viaggiati", "vicinati", "vicitati", "videochattati", "videochiamati", "videocomunicati", "videoregistrati", "videotrasmessi", "vidimati", "vigilati", "vigliati", "vigoreggiati", "vigoriti", "vilificati", "vilipesi", "villaneggiati", "vincolati", "vinti", "violati", "violentati", "violinati", "virgolati", "virgoleggiati", "virgolettati", "virilizzati", "virtualizzati", "visionati", "visitati", "vissuti", "vistati", "visti", "visualizzati", "vitaliziati", "vitalizzati", "vitaminizzati", "vittimizzati", "vituperati", "vivacizzati", "vivandati", "vivificati", "vivisezionati", "viziati", "vocabolarizzati", "vocalizzati", "vocati", "vociferati", "volantinati", "volatilizzati", "volgarizzati", "volicchiati", "volpeggiati", "voltati", "volti", "voltolati", "volturati", "voluminizzati", "voluti", "volutoci", "vomitati", "vorati", "votati", "vulcanizzati", "vuotati", "wappati", "wikificati", "xerocopiati", "zaffati", "zampati", "zampettati", "zampillati", "zannati", "zappati", "zappettati", "zapponati", "zavorrati", "zeppati", "zigrinati", "zigzagati", "zimbellati", "zincati", "zinnati", "zipolati", "zippati", "zirlati", "zittiti", "zizzagati", "zoccolati", "zollati", "zombati", "zonati", "zonizzati", "zoppati", "zoppeggiati", "zoppicati", "zucconati", "zufolati", "zumati", "zuppati"];
};
var Kv = {};
Object.defineProperty(Kv, "__esModule", {
  value: !0
});
Kv.default = function() {
  return ["aaneengedraaid", "aaneengeschakeld", "aanschouwd", "aanvaard", "achtergebleven", "achtergelaten", "achterhaald", "achteromgekeken", "achteropgekomen", "achteruitgegaan", "achtervolgd", "ademgehaald", "bedolven", "bedongen", "bedorven", "bedragen", "bedreven", "bedrogen", "bedropen", "bedwongen", "beetgenomen", "begeven", "begonnen", "begraven", "begrepen", "behangen", "behouden", "bekeken", "beklommen", "bekomen", "bekropen", "beleden", "belezen", "benomen", "beraden", "beschenen", "beschoten", "beschreven", "beslagen", "beslopen", "besloten", "besneden", "besproken", "besprongen", "bestegen", "bestolen", "bestorven", "bestreden", "bestreken", "betreden", "betroffen", "betrokken", "bevallen", "bevochten", "bevolen", "bevonden", "bevroren", "bewezen", "bewogen", "bezeten", "bezien", "beziggehouden", "bezonnen", "bezweken", "bezworen", "bijeengehouden", "bijeengeroepen", "blootgelegd", "blootgesteld", "bovengehaald", "brandgesticht", "buitengesloten", "buitgemaakt", "deelgenomen", "dichtgebonden", "dichtgedaan", "diepgevroren", "doodgegaan", "doorbladerd", "doorboord", "doorbroken", "doordacht", "doordrongen", "doorgrond", "doorkruist", "doorlopen", "doorsneden", "doorstaan", "doorverteld", "doorzien", "doorzocht", "drooggelegd", "dwarsgezeten", "ervaren", "flauwgevallen", "gebakken", "gebannen", "gebarsten", "gebeden", "gebersten", "gebeten", "geblazen", "gebleken", "gebleven", "geblonken", "geboden", "gebogen", "gebonden", "geboren", "geborgen", "geborsten", "gebraden", "gebroken", "gebrouwen", "gedaan", "gedoken", "gedolven", "gedongen", "gedragen", "gedreten", "gedreven", "gedrongen", "gedronken", "gedropen", "gedwongen", "gefloten", "gegeten", "gegeven", "gegleden", "geglommen", "gegolden", "gegoten", "gegraven", "gegrepen", "gehangen", "gehesen", "geheven", "geholpen", "gehouden", "gehouwen", "gekeken", "geklommen", "geklonken", "gekloven", "geknepen", "gekomen", "gekorven", "gekozen", "gekregen", "gekresen", "gekreten", "gekrompen", "gekrooien", "gekropen", "gekunnen", "gekweten", "gelachen", "geladen", "gelaten", "geleden", "gelegen", "geleken", "gelezen", "gelogen", "geloken", "gelopen", "gemalen", "gemeden", "gemeten", "gemoeten", "gemogen", "gemolken", "genegen", "genezen", "genomen", "genoten", "geprezen", "geraden", "gereden", "geregen", "gereten", "gerezen", "geroepen", "geroken", "geschapen", "gescheiden", "geschenen", "gescheten", "gescholden", "gescholen", "geschonden", "geschonken", "geschoren", "geschoten", "geschoven", "geschreden", "geschreven", "geschrokken", "geslagen", "geslapen", "geslepen", "gesleten", "geslonken", "geslopen", "gesloten", "gesmeten", "gesmolten", "gesneden", "gesnoten", "gesnoven", "gespannen", "gespeten", "gespleten", "gesponnen", "gespoten", "gesproken", "gesprongen", "gesproten", "gestegen", "gestoken", "gestolen", "gestonken", "gestoten", "gestoven", "gestreden", "gestreken", "getreden", "getroffen", "getrokken", "gevallen", "gevangen", "gevangengenomen", "gevaren", "gevezen", "gevlochten", "gevloden", "gevlogen", "gevloten", "gevochten", "gevonden", "gevouwen", "gevreten", "gevroren", "gewassen", "geweken", "geweten", "geweven", "gewezen", "gewogen", "gewonden", "gewonnen", "geworden", "geworpen", "geworven", "gewoven", "gewreten", "gewreven", "gewrongen", "gezegen", "gezeken", "gezeten", "gezien", "gezoden", "gezogen", "gezonden", "gezongen", "gezonken", "gezonnen", "gezopen", "gezouten", "gezwegen", "gezwolgen", "gezwollen", "gezwommen", "gezwonden", "gezworen", "gezworven", "hardgelopen", "herladen", "hernomen", "herwonnen", "herzien", "huisgehouden", "kennisgemaakt", "klaargekomen", "kortgesloten", "kwaadgesproken", "kwijtgeraakt", "kwijtgescholden", "langsgekomen", "leeggelopen", "leeggemaakt", "lesgegeven", "liefgehad", "lipgelezen", "meebetaald", "misbruikt", "misleid", "mislukt", "misprezen", "nabewerkt", "nedergedaald", "omarmd", "omfloerst", "omhelsd", "omkleed", "omklemd", "ommuurd", "omringd", "omschreven", "omsingeld", "omsloten", "omvat", "omvergeworpen", "omwikkeld", "omwonden", "omzeild", "omzoomd", "omzworven", "onderbouwd", "onderbroken", "onderdrukt", "ondergaan", "ondergraven", "onderhandeld", "onderhouden", "onderkend", "ondermijnd", "ondernomen", "onderscheiden", "onderschept", "ondersteund", "onderstreept", "ondertekend", "onderverdeeld", "ondervonden", "ondervraagd", "onderwezen", "onderworpen", "onderzocht", "ontbeten", "ontboden", "ontbonden", "ontbroken", "ontdoken", "ontgonnen", "onthouden", "ontkomen", "ontladen", "ontloken", "ontlopen", "ontnomen", "ontraden", "ontslagen", "ontsloten", "ontspannen", "ontsprongen", "ontsproten", "ontstoken", "onttrokken", "ontvangen", "ontweken", "schoongemaakt", "schoongewassen", "stilgestaan", "tandengepoetst", "tegemoetgekomen", "teleurgesteld", "teloorgegaan", "terechtgekomen", "terechtgesteld", "teweeggebracht", "thuisbezorgd", "thuisgekomen", "toebehoord", "toevertrouwd", "tussengekomen", "tussengeworpen", "uitbesteed", "uitbetaald", "uitvergroot", "uitverkocht", "valsgespeeld", "verbannen", "verbleven", "verboden", "verbogen", "verbonden", "verborgen", "verbroken", "verdragen", "verdreven", "verdrongen", "verdronken", "verdroten", "verdwenen", "vergeleken", "vergeten", "vergeven", "vergleden", "vergolden", "vergoten", "vergrepen", "verhangen", "verheven", "verholpen", "verhouden", "verkozen", "verkregen", "verladen", "verlaten", "verlopen", "verloren", "vermeden", "vermogen", "vernomen", "verraden", "verrezen", "verscheiden", "verschenen", "verscholen", "verschoten", "verschoven", "verschreven", "verschrokken", "verslagen", "verslapen", "versleten", "verslonden", "versmolten", "verstoten", "verstreken", "vertrokken", "vervallen", "vervangen", "vervlogen", "verweten", "verweven", "verwezen", "verworpen", "verworven", "verwrongen", "verzonden", "verzonken", "verzonnen", "verzopen", "verzouten", "verzwonden", "volbracht", "voldaan", "voleindigd", "volhard", "volmaakt", "volstaan", "voltooid", "voltrokken", "voorbehouden", "voorkomen", "voorspeld", "voorzien", "wederhaald", "weergalmd", "weerhouden", "weerkaatst", "weerlegd", "weerstaan"];
};
var Gv = {};
Object.defineProperty(Gv, "__esModule", {
  value: !0
});
Gv.default = function() {
  return ["abdykowany", "absorbowany", "adaptowany", "administrowany", "adoptowany", "adorowany", "adresowany", "afiszowany", "agitowany", "akcentowany", "akceptowany", "aklimatyzowany", "akompaniowany", "aktualizowany", "aktywowany", "akumulowany", "alaromowany", "alienowany", "amerykanizowany", "amortyzowany", "amputowany", "analizowany", "angażowany", "anihilowany", "animowany", "anonsowany", "antropomorfizowany", "antydatowany", "anulowany", "apelowany", "aportowany", "aranżowany", "archiwizowany", "aresztowany", "argumentowany", "artykułowany", "ascendowany", "asekurowany", "asymilowany", "asystowany", "atakowany", "autoryzowany", "awanturowany", "babrany", "baczony", "badany", "bagatelizowany", "bajerowany", "bałamucony", "balangowany", "balansowany", "banalizowany", "bandażowany", "bankrutowany", "baraszkowany", "barwiony", "bawiony", "bazgrany", "bazowany", "bębniony", "bełkotany", "besztany", "biadolony", "biczowany", "bity", "błagany", "błaznowany", "blefowany", "błogosławiony", "blokowany", "bluzgany", "błyskany", "błyszczący", "boczony", "bogacony", "bojkotowany", "boksowany", "bombardowany", "bopowany", "borowany", "brandzlowany", "brany", "brasowany", "bratany", "bredzony", "brnięty", "brodzony", "broniony", "brudzony", "brylowany", "budowany", "budzony", "bujany", "bulony", "bulwersowany", "bumelowany", "burzony", "butelkowany", "bywany", "cackany", "całowany", "capnięty", "cechowany", "celebrowany", "celowany", "ceniony", "cenzurowany", "chciany", "chlany", "chlapany", "chlapnięty", "chlastany", "chłodzony", "chlostany", "chlubiony", "chodowany", "chomikowany", "chorowany", "chowany", "chroniony", "chrupany", "chrzczony", "chuty", "chwalony", "chwycony", "chwytany", "chybotany", "chylony", "ciachnięty", "ciągany", "ciągnięty", "ciemiężony", "cierpiany", "cieszony", "cięty", "ciskany", "ciśnięty", "ciułany", "cmokany", "cmoknięty", "cofany", "cofnięty", "ćpany", "cucony", "cudzołożony", "cumowany", "ćwiartowany", "ćwiczony", "cykany", "cytowany", "czajony", "czarowany", "czczony", "czepiany", "czepiony", "czerpany", "czesany", "częstowany", "czochrany", "czołgany", "czuty", "czytany", "czyty", "darowany", "darty", "darzony", "datowany", "dawany", "dbany", "deaktywowany", "debatowany", "dedukowany", "dedykowany", "defibrylowany", "defilowany", "definiowany", "defraudowany", "degradowany", "degustowany", "deklamowany", "deklarowany", "dekodowany", "dekompresowany", "dekorowany", "dekretowany", "delegowany", "delektowany", "deliberowany", "demaskowany", "dementowany", "demolowany", "demonizowany", "demonstrowany", "demoralizowany", "denerwowany", "denuncjowany", "depeszowany", "depilowany", "deportowany", "deprawowany", "deptany", "deratyzowany", "destabilizowany", "destylowany", "desygnowany", "determinowany", "detonowany", "dewastowany", "dewaulowany", "dezaktywowany", "dezorientowany", "dezynfekowany", "diagnozowany", "dilowany", "dłubany", "dłużony", "dmuchany", "dmuchnięty", "dobiegany", "dobierany", "dobijany", "dobity", "dobrany", "dobudzony", "dobyty", "doceniany", "doceniony", "dochodzony", "dochowany", "dochowywany", "dociągnięty", "dociekany", "docięty", "docinany", "dociskany", "dociśnięty", "doczekany", "doczepiony", "doczołgany", "doczyszczony", "doczytany", "dodany", "dodawany", "dodrukowany", "dodrukowywany", "dofinansowany", "dofinansowywany", "dogadany", "dogadywany", "dogadzany", "doganiany", "doglądany", "doglądnięty", "dognany", "dogodzony", "dogoniony", "dograny", "dogryzany", "dogryziony", "dogrzany", "dogrzebany", "doinformowany", "dojeżdżany", "dojony", "dojrzany", "dojrzewany", "dokańczany", "dokarmiany", "dokarmiony", "dokazany", "dokazywany", "dokładany", "doklejony", "dokonany", "dokończony", "dokonywany", "dokopany", "dokopywany", "dokowany", "dokręcany", "dokręcony", "dokształcany", "dokształcony", "dokuczany", "dokumentowany", "dokupiony", "dołączany", "dołączony", "doładowany", "dolany", "dolewany", "doliczony", "dołowany", "dołożony", "domagany", "domalowany", "domknięty", "domniewywany", "domówiony", "domyślany", "domyślony", "domyty", "doniesiony", "donoszony", "dopadany", "dopadnięty", "dopakowany", "dopalony", "dopasowany", "dopasowywany", "dopatrywany", "dopatrzony", "dopchany", "dopchnięty", "dopełniany", "dopełniony", "dopieszczony", "dopięty", "dopijany", "dopilnowany", "dopingowany", "dopisany", "dopisywany", "dopity", "dopłacany", "dopłacony", "dopłynięty", "dopolerowany", "dopompowany", "dopowiedziany", "dopracowany", "dopracowywany", "doprany", "doprawiony", "doprecyzowany", "doproszony", "doprowadzany", "doprowadzony", "dopucowany", "dopuszczany", "dopuszczony", "dopytywany", "dorabiany", "doradzany", "doradzony", "doręczany", "doręczony", "dorobiony", "dorównany", "dorównywany", "dorwany", "dorysowany", "dorzucany", "dorzucony", "doścignięty", "dosiadany", "dosięgnięty", "doskoczony", "doskonalony", "dosładzany", "dosłany", "dosłyszany", "dosolony", "dośrodkowany", "dossany", "dostany", "dostąpiony", "dostarczany", "dostarczony", "dostawany", "dostawiany", "dostawiony", "dostosowany", "dostosowywany", "dostrajany", "dostrojony", "dostrzegany", "dosunięty", "dosuwany", "doświadczany", "Doświetlony", "dosypany", "dosypywany", "doszkolony", "doszlifowany", "doszorowany", "doszukany", "doszukiwany", "doszyty", "dotankowany", "dotankowywany", "dotargany", "dotaszczony", "dotknięty", "dotleniony", "dotłumaczony", "dotowany", "dotrwany", "dotrzymany", "dotrzymywany", "dotykany", "douczany", "douczony", "dowalony", "dowieziony", "dowodzony", "dowożony", "doznany", "doznawany", "dozorowany", "dozowany", "dożyty", "dożywiony", "dramatyzowany", "drapany", "drapnięty", "draśnięty", "drażniony", "drążony", "dręczony", "drenowany", "drgany", "drgnięty", "drukowany", "dryblowany", "dryfowany", "drzemany", "dubbingowany", "dublowany", "duplikowany", "duszony", "dworowany", "dygotany", "dyktowany", "dymany", "dymiony", "dyrygowany", "dyscyplinowany", "dyskredytowany", "dyskryminowany", "dyskutowany", "dyskwalifikowany", "dysponowany", "dystansowany", "dystrybuowany", "dywagowany", "dźgany", "dźgnięty", "dziabnięty", "dziedziczony", "dziękowany", "dzielony", "dziergany", "dzierżony", "dziobany", "dziurawiony", "dziurkowany", "dźwigany", "dźwignięty", "edukowany", "edytowany", "egzaminowany", "egzekutowany", "egzekwowany", "ekscytowany", "ekshumowany", "ekskomunikowany", "eksmitowany", "ekspandowany", "eksperymentowany", "eksploatowany", "eksplorowany", "eksponowany", "eksportowany", "eksterminowany", "ekstradowany", "ekstrapolowany", "eliminowany", "emancypowany", "emanoway", "emigrowany", "emitowany", "energetyzowany", "eskortowany", "etykietowany", "ewakuowany", "ewaluowany", "fabrykowany", "falowany", "fałszowany", "farbowany", "faszerowany", "faulowany", "faworyzowany", "fechtowany", "fermentowany", "ferowany", "figurowany", "filetowany", "filmowany", "filtrowany", "finalizowany", "finansowany", "firmowany", "fleszowany", "folgowany", "formułowany", "forsowany", "fotografowany", "fundowany", "gadany", "ganiany", "garbiony", "gardzony", "garnirowany", "gaszony", "gawędzony", "gaworzony", "gazowany", "gdakany", "gderany", "generalizowany", "generowany", "gięty", "gilgotany", "gładzony", "głaskany", "głodowany", "głodzony", "gloryfikowany", "głosowany", "głoszony", "głowiony", "gmatwany", "gmerany", "gnany", "gnębiony", "gnieciony", "gnity", "gnojony", "godzony", "gojony", "golnięty", "golony", "goniony", "googlowany", "gospodarowany", "goszczony", "gotowany", "grabiony", "grany", "grasowany", "gratulowany", "grillowany", "grilowany", "gromadzony", "gromiony", "grożony", "gruchany", "gruchnięty", "grupowany", "grywany", "gryziony", "grzany", "grzechotany", "gubiony", "gustowany", "gwałcony", "gwarantowany", "gwizdany", "gwizdnięty", "hackowany", "haftowany", "hajtnięty", "hamowany", "hańbiony", "handlowany", "harcowany", "harmonizowany", "harowany", "hartowany", "hibernowany", "hipnotyzowany", "hodowany", "holowany", "hołubiony", "honorowany", "hospitalizowany", "huknięty", "hulany", "huśtany", "idealizowany", "identyfikowany", "ignorowany", "igrany", "ilustrowany", "imitowany", "implantowany", "implodowany", "imponowany", "importowany", "improwizowany", "indokrynowany", "indukowany", "infekowany", "infiltrowany", "informowany", "ingerowany", "inhalowany", "inscenizowany", "inspirowany", "instalowany", "instruowany", "insynuowany", "integrowany", "interpretowany", "interweniowany", "intonowany", "intubowany", "inwestowany", "inwigilowany", "irytowany", "iskrzony", "izolowany", "jadany", "jawiony", "jazgotany", "jednoczony", "jedzony", "kablowany", "kadzony", "kalany", "kaleczony", "kalkulowany", "kamerowany", "kamienowany", "kamuflowany", "kanalizowany", "kantowanty", "kąpany", "kapitulowany", "kapowany", "karany", "karbonizowany", "karcony", "karczowany", "karmiony", "kartkowany", "kąsany", "kasowany", "kastrowany", "katalogowany", "katapultowany", "katowany", "katrupiony", "kierowany", "kimany", "kiszony", "kiwany", "kiwnięty", "kłaniany", "klapany", "klapnięty", "klarowany", "klasyfikowany", "klębiony", "klejony", "klepany", "klepnięty", "klikany", "kliknięty", "klonowany", "kłopotany", "kłuty", "knocony", "knuty", "kochany", "koczowany", "kodowany", "kojarzony", "kojfnięty", "kojony", "kolekcjonowany", "kolektywizowany", "kolidowany", "kolonizowany", "kolorowany", "koloryzowany", "kołowany", "kołysany", "kombinowany", "komenderowany", "komentowany", "komercjalizowany", "kompensowany", "komplementowany", "komplikowany", "komponowany", "kompromitowany", "komunikowany", "konany", "koncentrowany", "kończony", "konfabulowany", "konfiskowany", "konfrontowany", "konserwowany", "konspirowany", "konstruowany", "konsultowany", "konsumowany", "kontaktowany", "kontestowany", "kontrastowany", "kontrolowany", "kontrowany", "kontynuowany", "kontynuuowany", "konwertowany", "konwojowany", "koordynowany", "kopany", "kopcony", "kopiowany", "kopnięty", "kopulowany", "korelowany", "korkowany", "koronowany", "korygowany", "korzony", "korzystany", "koszony", "kotwiczony", "kozaczony", "kozłowany", "kpity", "kradziony", "krajany", "krążony", "kręcony", "kremowany", "kreowany", "krochmalony", "krojony", "kropiony", "kruszony", "krystalizowany", "kryty", "krytykowany", "krzepnięty", "krzyczany", "krzyknięty", "krzywdzony", "krzywiony", "krzyżowany", "kserowany", "księgowany", "kształcony", "kształtowany", "kulony", "kultywowany", "kumulowany", "kupczony", "kupiony", "kupowany", "kupywany", "kurczony", "kurowany", "kursowany", "kurzony", "kuszony", "kuty", "kwalifikowany", "kwestionowany", "łączony", "ładowany", "łagodzony", "łajdaczony", "lakierowany", "łamany", "lamentowany", "lansowany", "lany", "łapany", "łaskotany", "łaszony", "latany", "łatany", "lawirowany", "leczony", "legalizowany", "legitymowany", "lekceważony", "lepiony", "lewitowany", "liberowany", "licencjonowany", "licytowany", "liczony", "likwidowany", "linczowany", "liniowany", "literowany", "litowany", "lizany", "liznięty", "lobbowany", "lokalizowany", "losowany", "łowiony", "łożony", "lubiany", "łudzony", "lunatykowany", "łupany", "łupiony", "łuskany", "lustrowany", "łuszczony", "luzowany", "łykany", "łyknięty", "łyżeczkowany", "macany", "machany", "machnięty", "mącony", "maczany", "maganyzowany", "maglowany", "majaczony", "majsterkowany", "majtany", "maksymalizowany", "malowany", "maltretowany", "mamiony", "mamrotany", "manewrowany", "manifestowany", "manipulowany", "markowany", "marnotrawiony", "marnowany", "marszczony", "marynowany", "marznięty", "masakrowany", "maskowany", "masowany", "masturbowany", "mataczony", "materializowany", "mawiany", "mazany", "maznięty", "męczony", "meldowany", "merdany", "metabolizowany", "miażdżony", "mielony", "mierzony", "mierzwiony", "mieszany", "miętolony", "migany", "migdalony", "migotany", "mijany", "miksowany", "milowany", "minięty", "minimalizowany", "miotany", "mistyfikowany", "mitygowany", "mizdrzony", "mlany", "mniemany", "mnożony", "mobilizowany", "mocowany", "moczony", "modelowany", "modernizowany", "modlony", "modulowany", "modyfikowany", "molestowany", "monitorowany", "monopolizowany", "montowany", "mordowany", "motywowany", "mówiony", "mrożony", "mrugany", "mrużony", "muskany", "mutowany", "mydlony", "mylony", "myszkowany", "myty", "nabazgrany", "nabiegany", "nabierany", "nabity", "nabrany", "nabrojony", "nabrudzony", "nabyty", "nabywany", "nacelowany", "nachapany", "nachodzony", "nachwalony", "nachylony", "naciągany", "naciągnięty", "nacierany", "nacięty", "nacinany", "naciskany", "naciśnięty", "nacjonalizowany", "naczepiony", "nadany", "nadawany", "nadchodzony", "nadciągany", "nadciągnięty", "nadcięty", "nadesłany", "nadgoniony", "nadgryzany", "nadgryziony", "nadinterpretowany", "nadłożony", "nadmieniany", "nadmieniony", "nadmuchany", "nadrabiany", "nadrobiony", "nadskakiwany", "nadsłuchiwany", "nadstawiany", "nadstawiony", "nadszarpnięty", "naduszony", "nadużyty", "nadużywany", "nadwerężany", "nadwyrężany", "nadwyrężony", "nadziany", "nadzorowany", "naelektryzowany", "nafaszerowany", "nagabywany", "nagadany", "nagięty", "naginany", "nagłaszany", "nagłośniony", "nagoniony", "nagradzany", "nagrany", "nagrodzony", "nagromadzony", "nagrywany", "nagryzmolony", "nagrzany", "nagrzebany", "nagrzewany", "nagwizdany", "naigrywany", "najechany", "najęty", "najmowany", "nakarmiany", "nakarmiony", "nakazany", "nakazywany", "nakierowany", "nakierowywany", "nakładany", "nakłamany", "nakłaniany", "naklejany", "naklejony", "naklepany", "nakłoniony", "nakłuty", "nakłuwany", "nakopany", "nakręcany", "nakręcony", "nakreślany", "nakreślony", "nakruszony", "nakryty", "nakrywany", "nakrzyczany", "nakupiony", "naładowany", "nalany", "nałapany", "nalepiony", "nalewany", "naliczony", "nałowiony", "nałożony", "namaczany", "namagnetyzowany", "namalowany", "namaszczany", "namaszczony", "namawiany", "namęczony", "namierzany", "namieszany", "namoczony", "namówiony", "namydlany", "namyślony", "naniesiony", "naoliwiany", "naoliwiony", "naopowiadany", "naostrzony", "napadany", "napadnięty", "napakowany", "napalony", "naparzany", "napastowany", "napawany", "napchany", "napędzany", "napełniany", "napełniony", "napierany", "napiętnowany", "napięty", "napinany", "napisany", "napluty", "napływany", "napoczęty", "napojony", "napompowany", "napotkany", "napotykany", "napraszany", "naprawiany", "naprawiony", "naprężany", "naprężony", "napromieniowany", "naprostowany", "naprowadzany", "naprowadzony", "napsuty", "napuszczany", "napuszczony", "napychany", "napytany", "narąbany", "naradzany", "naradzony", "narastany", "narażany", "narażony", "nareperowany", "narkotyzowany", "narodzony", "naruszany", "naruszony", "narwany", "narysowany", "narzucany", "narzucony", "nasączany", "nasączony", "nasadzony", "nasiąkany", "nasilany", "nasilony", "naskakiwany", "naskoczony", "naskrobany", "naśladowany", "nasłany", "nasłuchany", "nasłuchiwany", "nasmarowany", "nastąpiony", "nastawiany", "nastawiony", "nastraszany", "nastrojony", "nastukany", "nasunięty", "nasuwany", "naświetlany", "nasycony", "nasyłany", "nasypany", "naszczany", "naszkicowany", "naszpikowany", "naszprycowany", "naszykowany", "naszyty", "naszywany", "natarty", "natchnięty", "natknięty", "natleniony", "natłuszczony", "natrafiony", "natrząsany", "natrząsnięty", "nauczany", "nauczony", "nawadniany", "nawalony", "nawiązany", "nawiązywany", "nawiedzany", "nawiedzony", "nawiercony", "nawiewany", "nawieziony", "nawigowany", "nawijany", "nawilżany", "nawilżony", "nawinięty", "nawlekany", "nawodniony", "nawoływany", "nawoskowany", "nawożony", "nawpychany", "nawracany", "nawrócony", "nawrzucany", "nawtykany", "nawymyślany", "nazbierany", "nazmyślany", "naznaczany", "naznaczony", "nazrywany", "nazwany", "nazywany", "nęcony", "negocjowany", "negowany", "nękany", "neutralizowany", "niańczony", "niecierpliwiony", "niedoceniany", "niedowidziany", "nienawidzony", "niesiony", "nikolony", "niszczony", "nitkowany", "niuchany", "niweczony", "niwelowany", "nokautowany", "nominowany", "notowany", "nucony", "numerowany", "nurtowany", "obaczony", "obadany", "obalany", "obalony", "obandażowany", "obarczany", "obarczony", "obawiany", "obchodzony", "obciągnięty", "obciążony", "obcięty", "obcinany", "obcyndalany", "obczajany", "obczajony", "obdarowany", "obdarty", "obdarzany", "obdarzony", "obdzielony", "obdzierany", "obdzwaniany", "obdzwoniony", "obejmowany", "oberwany", "obessany", "obezwładniany", "obezwładniony", "obfotografowany", "obfotografowywany", "obgadany", "obgadywany", "obgryzany", "obgryziony", "obiecany", "obiecywany", "obierany", "obijany", "obity", "objadany", "objaśniany", "objawiany", "objawiony", "objechany", "objęty", "objeżdżany", "obkręcany", "oblany", "obłapiany", "obłapywany", "obłaskawiany", "obłaskawiony", "obleciany", "obleganu", "oblewany", "obliczany", "obliczony", "oblizany", "obłowiony", "obłożony", "obluzowany", "obluzowywany", "obmacany", "obmacywany", "obmawiany", "obmyślany", "obmyślony", "obmyty", "obmywany", "obnażany", "obniżany", "obniżony", "obnoszony", "obowiązywany", "obozowany", "obrabiany", "obrabowany", "obracany", "obradowany", "obramowany", "obraniany", "obrany", "obrastany", "obrażany", "obrażony", "obrobiony", "obrócony", "obrodzony", "obroniony", "obrysowany", "obrywany", "obryzgany", "obrzezany", "obrzucany", "obrzucony", "obrzygany", "obsadzany", "obsadzony", "obściskiwany", "obserwowany", "obsiany", "obsikany", "obsikiwany", "obskakiwany", "obskoczony", "obskubany", "obskubywany", "obśliniany", "obśliniony", "obsługiwany", "obsłużony", "obsmarowany", "obstawiany", "obstawiony", "obstrzeliwany", "obsunięty", "obsuwany", "obsypany", "obsypywany", "obszukany", "obszukiwany", "obtaczany", "obtarty", "obtoczony", "obudzony", "obwąchany", "obwąchiwany", "obwiązany", "obwiązywany", "obwieszany", "obwieszczany", "obwieszczony", "obwieszony", "obwijany", "obwiniany", "obwinięty", "obwołany", "obyty", "obżerany", "ocalany", "ocalony", "ocechowany", "oceniany", "oceniony", "ocenzurowany", "ochładzany", "ochlapany", "ochlapywany", "ochłodzony", "ochłonięty", "ochraniany", "ochroniony", "ochrzaniany", "ochrzczony", "ociągany", "ocielony", "ocieplany", "ocieplony", "ocierany", "ocknięty", "ocucony", "ocuty", "oczarowywany", "oczekiwany", "oczerniany", "oczerniony", "oczyszczany", "oczyszczony", "odarty", "odbębniony", "odbetonowany", "odbezpieczany", "odbezpieczony", "odbijany", "odbity", "odblokowany", "odbudowany", "odbudowywany", "odbutowany", "odbyty", "odcedzany", "odchorowany", "odchowany", "odchudzany", "odchudzony", "odchylany", "odchylony", "odciągany", "odciągnięty", "odciążony", "odcierpiony", "odcięty", "odcinany", "odcisnięty", "odcumowany", "odcyfrowany", "odcyfrowywany", "odczarowany", "odczekany", "odczepiany", "odczepiony", "odczuty", "odczuwany", "odczyniony", "odczytany", "odczytywany", "oddalany", "oddany", "oddawany", "oddelegowany", "oddychany", "oddzielany", "oddzielony", "odebrany", "odegnany", "odegrany", "odejmowany", "odepchnięty", "oderwany", "odeskortowany", "odesłany", "odespany", "odessany", "odetkany", "odetnięty", "odezwany", "odfiltrowany", "odgadnięty", "odgadywany", "odganiany", "odgarniany", "odgarnięty", "odgięty", "odgniatany", "odgoniony", "odgradzany", "odgrażany", "odgrodzony", "odgruzowany", "odgrywany", "odgryzany", "odgryziony", "odgrzany", "odgrzebany", "odgrzebywany", "odgrzewany", "odgwizdany", "odhaczony", "odholowany", "odinstalowany", "odizolowany", "odjedzony", "odjęty", "odjonizowany", "odkażany", "odkażony", "odkładany", "odklejony", "odkochany", "odkodowany", "odkodowywany", "odkopany", "odkopywany", "odkorkowany", "odkręcany", "odkręcony", "odkrojony", "odkryty", "odkrywany", "odkupiony", "odkupywany", "odkurzany", "odkurzony", "odkuty", "odłączany", "odłączony", "odłamywany", "odlany", "odlatywany", "odlepiany", "odlewany", "odliczany", "odliczony", "odłożony", "odłupany", "odmachany", "odmachiwany", "odmalowany", "odmarszczony", "odmawiany", "odmeldowany", "odmieniany", "odmieniony", "odmierzany", "odmierzony", "odmieszany", "odmontowany", "odmówiony", "odmrażany", "odmrożony", "odnajdowany", "odnaleziony", "odnawiany", "odniesiony", "odnoszony", "odnotowany", "odnotowywany", "odnowiony", "odpakowany", "odpakowywany", "odpalany", "odpalony", "odpałzowany", "odparowany", "odparty", "odpędzany", "odpicowany", "odpieczętowany", "odpierany", "odpięty", "odpiłowany", "odpiłowywany", "odpinany", "odpisany", "odpisywany", "odpłacany", "odplamiony", "odplątany", "odpłynięty", "odpowietrzony", "odpracowany", "odpracowywany", "odprasowany", "odprawiany", "odprawiony", "odprężany", "odprostowany", "odprowadzany", "odprowadzony", "odpruty", "odpryskany", "odpukany", "odpukiwany", "odpuszczany", "odpuszczony", "odpychany", "odrąbany", "odrabiany", "odrąbywany", "odradzany", "odradzony", "odrapany", "odrastany", "odratowany", "odreagowany", "odremontowany", "odrestaurowany", "odrestaurowywany", "odrobaczany", "odrobiony", "odroczony", "odrodzony", "odrośnięty", "odróżniany", "odróżniony", "odrysowany", "odrywany", "odrzucany", "odrzucony", "odsączany", "odsączony", "odsadzony", "odseparowany", "odsiadywany", "odsiany", "odsiewany", "odsłaniany", "odsłonięty", "odsłuchany", "odsłuchiwany", "odsłużony", "odśnieżany", "odśnieżony", "odsolony", "odśpiewany", "odsprzedany", "odsprzedawany", "odstąpiony", "odstawiany", "odstawiony", "odstępowany", "odstraszany", "odstręczony", "odstresowany", "odstrzeliwany", "odstrzelony", "odsunięty", "odsuwany", "odświeżany", "odświeżony", "odsyłany", "odsypywany", "odsysany", "odszczekany", "odszczekiwany", "odsztafirowany", "odszukany", "odszyfrowany", "odszyfrowywany", "odszykowany", "odtrąbiony", "odtrącony", "odtruty", "odtwarzany", "odtworzony", "oduczony", "odurzony", "odwalany", "odwalony", "odwiązany", "odwiązywany", "odwiedzany", "odwiedzony", "odwieszony", "odwieziony", "odwijany", "odwinięty", "odwlekany", "odwodniony", "odwodzony", "odwołany", "odwoływany", "odwożony", "odwracany", "odwrócony", "odwzajemniony", "odwzorowany", "odżegnany", "odziany", "odziedziczony", "odznaczany", "odznaczony", "odzwieciedlony", "odzwierciedlany", "odzwoniony", "odzwyczajony", "odzyskany", "odzyskiwany", "odżyty", "odzywiany", "odżywiony", "oferowany", "ofiarowany", "ofiarowywany", "ogarniany", "ogarnięty", "oglądany", "ogłaszany", "ogłoszony", "ogłupiany", "ogłupiony", "ogłuszony", "ogołocony", "ogolony", "ograbiany", "ograbiony", "ograniczany", "ograniczony", "ograny", "ogrodzony", "ogryziony", "ogrzany", "ogrzewany", "okablowany", "okaleczony", "okantowany", "okąpany", "okazany", "okazywany", "okiełznany", "okładany", "okłamany", "okłamywany", "oklaskiwany", "oklejony", "oklepany", "okopany", "okopywany", "okpiony", "okradany", "okradziony", "okraszony", "okrążany", "okrążony", "okręcany", "okręcony", "określany", "określony", "okrojony", "okryty", "okrywany", "okrzyknięty", "okulawiony", "okupiony", "okupowany", "olany", "olewany", "olśnięty", "omamiony", "omawiany", "omdlewany", "omijany", "ominięty", "omotany", "omówiony", "onanizowany", "onieśmielany", "onieśmielony", "opadnięty", "opakowany", "opalany", "opalony", "opancerzony", "opanowany", "opanowywany", "oparty", "oparzony", "opasany", "opatentowany", "opatrywany", "opatrzony", "opatulony", "opchnięty", "opędzany", "opędzony", "operowany", "opętany", "opętywany", "opieczętowany", "opiekowany", "opierany", "opijany", "opisany", "opisywany", "opity", "opłacany", "opłacony", "opłakany", "opłakiwany", "opłukany", "opluty", "opluwany", "opływany", "opodatkowany", "opodatkowywany", "oponowany", "oporządzany", "oporządzony", "opowiadany", "opowiedziany", "opóźniany", "opóźniony", "opracowany", "opracowywany", "oprawiany", "oprawiony", "oprowadzany", "oprowadzony", "opróżniany", "opróżniony", "opryskany", "opryskiwany", "opublikowany", "opukany", "opuszczany", "opuszczony", "opychany", "opylony", "orany", "orbowany", "organizowany", "orientowany", "oroszony", "orzekany", "orżnięty", "osaczany", "osaczony", "osadzany", "osądzany", "osadzony", "osądzony", "oscylowany", "osiadany", "osiągany", "osiągnięty", "osiedlany", "osiedlony", "osiedzony", "osierocony", "osiodłany", "oskalpowany", "oskarżony", "oskrobany", "oskrzydlany", "oskrzydlony", "oskubany", "oskubywany", "osłabiany", "osłabiony", "oślepiany", "oślepiony", "oślepnięty", "ośliniany", "osłodzony", "osłoniony", "osłuchany", "osmalony", "ośmielony", "ośmieszany", "ośmieszony", "ostrzegany", "ostrzelany", "ostrzelity", "ostrzony", "ostudzony", "osunięty", "osuszany", "osuszony", "osuwany", "oswajany", "oświadczany", "oświadczony", "oświecany", "oświeciony", "oświetlany", "oświetlony", "oswobadzany", "oswobodzony", "oswojony", "oszacowany", "oszałamiany", "oszczany", "oszczędzany", "oszczędzony", "oszklony", "oszlifowany", "oszołomiony", "oszpecony", "oszukany", "oszukiwany", "oszwabiony", "otaczany", "otarty", "otoczony", "otruty", "otruwany", "otrząsany", "otrząśnięty", "otrzepany", "otrzeźwiony", "otrzymany", "otrzymywany", "otulony", "otumaniony", "otwierany", "otworzony", "otwarty", "owany", "owdowiony", "owiany", "owijany", "owinięty", "ozdabiany", "ozdobiony", "ozdrowiony", "ożeniony", "oznaczany", "oznaczony", "oznajmiany", "oznajmiony", "oznakowany", "ożyty", "ożywany", "ożywiany", "ożywiony", "pachnący", "pacnąty", "pakowany", "paktowany", "pałany", "pałaszowany", "palnięty", "palony", "pamiętany", "panoszony", "paprany", "parafrazowany", "paraliżowany", "parkowany", "parowany", "partaczony", "parzony", "pastowany", "paszony", "patrolowany", "patroszony", "patrzony", "pauzowany", "pchany", "pchnięty", "pdholowany", "pedałowany", "pękany", "pęknięty", "pełniony", "penetrowany", "perforowany", "perfumowany", "perswadowany", "piastowany", "pichcony", "pielęgnowany", "pielony", "pieniony", "pieszczony", "piętnowany", "pięty", "pijany", "pikietowany", "piknikowany", "pikowany", "pilnowany", "pilotowany", "piłowany", "pisany", "pisywany", "pity", "płacony", "plądrowany", "plamiony", "planowany", "płaszczony", "plątany", "płatany", "pławiony", "plewiony", "płonący", "płoszony", "plotkowany", "plugawiony", "płukany", "pluskany", "pluty", "pobaraszkowany", "pobierany", "pobity", "pobłażany", "pobłogosławiony", "pobrany", "pobrudzony", "pobudzany", "pobudzony", "pobujany", "pocałowany", "pocerowany", "pochłaniany", "pochlapany", "pochlebiany", "pochłonięty", "pochowany", "pochwalany", "pochwalony", "pochwycony", "pochylany", "pochylony", "pociachany", "pociągany", "pociągnięty", "pocierany", "pocieszany", "pocieszony", "pocięty", "pocony", "pocukrowany", "poćwiartowany", "poczesany", "poczęstowany", "poczęty", "poczochrany", "poczuty", "poczytany", "poczytywany", "podany", "podarowany", "podarty", "podawany", "podążony", "podbierany", "podbijany", "podbity", "podbudowany", "podbudowywany", "podburzany", "podburzony", "podchwycony", "podciągany", "podciągnięty", "podcierany", "podcięty", "podcinany", "podczepiony", "poddany", "poddawany", "podebrany", "podejmowany", "podejrzany", "podejrzewany", "podelektowany", "podeptany", "poderwany", "podesłany", "podglądany", "podgolony", "podgoniony", "podgryzany", "podgrzany", "podgrzewany", "podjadany", "podjedzony", "podjęty", "podkablowany", "podkarmiony", "podkładany", "podklejony", "podkolorowany", "podkołowany", "podkopany", "podkopywany", "podkradany", "podkradnięty", "podkręcany", "podkręcony", "podkreślany", "podkreślony", "podkształcony", "podkulony", "podkupiony", "podkurzony", "podkuty", "podłączany", "podłączony", "podładowany", "podłamany", "podlany", "podłapany", "podleczony", "podlegany", "podlewany", "podliczany", "podliczony", "podlizany", "podlizywany", "podłożony", "podmalowany", "podmieniany", "podmieniony", "podmuchany", "podmyty", "podnajęty", "podniecany", "podniecony", "podniesiony", "podnoszony", "podołany", "podopingowany", "podostrzony", "podotykany", "podpadnięty", "podpalany", "podpalony", "podparty", "podpatrywany", "podpatrzony", "podpieczętowany", "podpiekany", "podpierany", "podpięty", "podpiłowany", "podpinany", "podpisany", "podpisywany", "podpłacony", "podpłynięty", "podpompowany", "podporządkowany", "podporządkowywany", "podpowiadany", "podpowiedziany", "podprowadzany", "podpuszczany", "podpuszczony", "podpychany", "podpytany", "podrabiany", "podrapany", "podrasowany", "podratowany", "podrażniony", "podręczony", "podregulowany", "podreperowany", "podretuszowany", "podrobiony", "podroczony", "podróżowany", "podrygiwany", "podrywany", "podrzucany", "podrzucony", "podrzynany", "podsadzony", "podskubywany", "podsłuchany", "podsłuchiwany", "podsmażany", "podsmażony", "podśpiewywany", "podstawiany", "podstawiony", "podstemplowany", "podstrojony", "podsumowany", "podsumowywany", "podsunięty", "podsuwany", "podświetlany", "podsycany", "podsycony", "podsyłany", "podsypany", "podszczypywany", "podszkolony", "podszlifowany", "podszykowany", "podszyty", "podszywany", "podtapiany", "podtarty", "podtopiony", "podtrzymany", "podtrzymywany", "podtuczony", "poduczany", "podupadany", "poduszony", "podwajany", "podwalany", "podważany", "podwędzony", "podwiązany", "podwieszany", "podwieziony", "podwijany", "podwinięty", "podwojony", "podwożony", "podwyżany", "podwyższany", "podwyższony", "podyktowany", "podyskutowany", "podziabany", "podziałany", "podziałkowany", "podziękowany", "podzielony", "podziurawiony", "podziwiany", "podźwignięty", "poeksperymentowany", "pofarbowany", "pofatygowany", "pofilmowany", "poganiany", "pogardzany", "pogardzony", "pogarszany", "pogaszony", "pogładzony", "pogłaskany", "pogłębiany", "pogłębiony", "pogłośniony", "pogmatwany", "pognębiony", "pognieciony", "pogodzony", "pogoniony", "pogorszony", "pogotowany", "pograbiony", "pogrążany", "pogrążony", "pogrożony", "pogrubiany", "pogrubiony", "pogruchany", "pogruchotany", "pogrupowany", "pogrywany", "pogryzany", "pogryziony", "pogrzany", "pogrzebany", "pogubiony", "pogwałcany", "pohamowany", "pohandlowany", "poharatowany", "pohuśtany", "poinformowany", "poinstruowany", "pojednany", "pojęty", "pojmięty", "pojmowany", "pojony", "pokajany", "pokaleczony", "pokarany", "pokarmiony", "pokąsany", "pokatalogowany", "pokazany", "pokazywany", "pokiereszowany", "pokierowany", "pokiwany", "pokładany", "poklepany", "poklepywany", "pokłoniony", "pokłuty", "pokochany", "pokolorowany", "pokoloryzowany", "pokołysany", "pokombinowany", "pokomplikowany", "pokonany", "pokończony", "pokonywany", "pokopany", "pokrajany", "pokrążony", "pokręcony", "pokrojony", "pokruszony", "pokryty", "pokrywany", "pokrzepiany", "pokrzepiony", "pokrzyżowany", "pokuszony", "pokutowany", "połączony", "polakierowany", "połamany", "polany", "połapany", "połaskotany", "połatany", "polecany", "połechtany", "polecony", "poleczony", "polegany", "polemizowany", "polepszany", "polepszony", "polerowany", "polewany", "policzkowany", "policzony", "polimeryzowany", "polizany", "połknięty", "polowany", "połowiony", "położony", "polubiony", "poluźniony", "poluzowany", "połykany", "pomacany", "pomachany", "pomagany", "pomalowany", "pomarynowany", "pomasowany", "pomazany", "pomęczony", "pomiatany", "pomieszany", "pomieszczony", "pomijany", "pominięty", "pomiziany", "pomknięty", "pomnażany", "pomniejszany", "pomniejszony", "pomnożony", "pomoczony", "pompowany", "pomydlony", "pomylony", "pomyszkowany", "pomywany", "ponabijany", "ponaciskany", "ponadziewany", "ponaglany", "ponaglony", "ponagrywany", "ponaklejany", "ponakłuwany", "ponakrywany", "ponaprawiany", "ponawiany", "poniańczony", "poniechany", "ponieiwerany", "poniesiony", "poniszczony", "poniżany", "poniżony", "ponoszony", "ponowiony", "ponudzony", "poobcinany", "poobcowany", "poobczajany", "poobijany", "poobmacywany", "poobracany", "poobserwowany", "poodbijany", "poodcinany", "poodgryzany", "poodkurzany", "poodprawiany", "poodsuwany", "poodwalany", "pooglądany", "poograniczany", "poopalany", "poopiekany", "poopwiadany", "pootwierany", "popadany", "popakowany", "popalony", "poparty", "poparzony", "popchany", "popchnięty", "popędzany", "popędzony", "popękany", "popełniany", "popełniony", "poperfumowany", "popierany", "popieszczony", "popijany", "popilnowany", "popisany", "popity", "popłacony", "popłakiwany", "poplamiony", "poplątany", "popluskany", "popodcinany", "popodziwiany", "popoprawiany", "poprany", "poprasowany", "poprawiany", "poprawiony", "poproszony", "poprowadzony", "popryskany", "poprzebierany", "poprzeciągany", "poprzecinany", "poprzedzany", "poprzeglądany", "poprzeklinany", "poprzekopywany", "poprzemieszczany", "poprzenoszony", "poprzesadzany", "poprześladowany", "poprzestawiany", "poprzesuwany", "poprzewieszany", "poprzewracany", "poprzycinany", "poprzymierzany", "poprzytulany", "poprzywiązywany", "popsuty", "popudrowany", "popukany", "popularyzowany", "popuszczany", "popuszczony", "popychany", "popykany", "popytany", "porabiany", "porachowany", "poraniony", "poratowany", "porażony", "poręczony", "porównany", "porozbierany", "porozbijany", "porozciągany", "porozcinany", "porozdawany", "porozdzielany", "porozmieszczany", "poróżniony", "porozpędzany", "porozpieszczany", "porozprowadzany", "porozpruwany", "porozrzucany", "porozstawiany", "porozsyłany", "porozumiewany", "porozwalany", "porozwiązywany", "porozwieszany", "porozwożony", "portretowany", "poruszany", "poruszony", "porwany", "porysowany", "porywany", "porządkowany", "porządzony", "porzucany", "porzucony", "posądzany", "posadzony", "posądzony", "pościągany", "pościelony", "pościerany", "pościgany", "pościnany", "pościskany", "posegregowany", "posiadany", "posiany", "posiekany", "posilany", "posiłkowany", "posilony", "posiłowany", "posiniaczony", "posiorbany", "poskąpiony", "poskładany", "posklejany", "poskramiany", "poskręcany", "poskrobany", "poskromiony", "poskubany", "posłany", "posłodzony", "poślubiany", "poślubiony", "posługiwany", "posmakowany", "posmarowany", "posolony", "posortowany", "pospekulowany", "pospieszany", "pośpieszany", "pośpiewany", "pospinany", "pospłacany", "posprawdzany", "posprzątany", "posprzedawany", "pośredniczony", "possany", "postanowiony", "postany", "postarany", "postawiony", "postemplowany", "posterowany", "postradany", "postraszony", "postrugany", "postrzegany", "postrzelany", "postrzelony", "postukany", "postymulowany", "posunięty", "posuwany", "poświącany", "poświadczony", "poświecony", "poświęcony", "poświętowany", "poświntuszony", "posyłany", "posypany", "posypywany", "poszarpany", "poszastany", "poszatkowany", "poszczuty", "poszczycony", "poszczypany", "poszerzany", "poszerzony", "poszorowany", "poszpiegowany", "poszturchany", "poszukany", "poszukiwany", "poszwędany", "poszybowany", "potakiwany", "potarmoszony", "potarty", "potasowany", "potęgowany", "potępiany", "potępiony", "potknięty", "potoczony", "potopiony", "potorturowany", "potrącany", "potrącony", "potraktowany", "potrojony", "potruty", "potrząsany", "potrzaskany", "potrząsnięty", "potrząśnięty", "potrzymany", "Poturbowany", "poturlany", "potwierdzony", "potykany", "poucinany", "pouczany", "pouczony", "poudawany", "poukładany", "pouprawiany", "poupychany", "pourywany", "poustawiany", "poużywany", "powąchany", "powachlowany", "powalany", "powalony", "poważany", "powbijany", "powciągany", "powciskany", "powdychany", "powęszony", "powetowany", "powiadamiany", "powiadomiony", "powiązany", "powiedziany", "powiedzony", "powiększany", "powielany", "powielony", "powierzany", "powierzony", "powieszony", "powiewany", "powinszowany", "powitany", "powity", "powkładany", "powlekany", "powłóczony", "powodowany", "powołany", "powoływany", "powożony", "powpychany", "powrócony", "powrzucany", "powsadzany", "powściągnięty", "powspominany", "powstrzymany", "powtarzany", "powtórzony", "powybierany", "powybijany", "powycierany", "powycinany", "powyciskany", "powydawany", "powyganiany", "powyginany", "powyjaśniany", "powyjmowany", "powyłączany", "powymiatany", "powymieniany", "powynoszony", "powypełniany", "powypisywany", "powyrywany", "powyrzucany", "powystrzelany", "powysyłany", "powywalany", "powywieszany", "powywracany", "powzięty", "pozabawiany", "pozabijany", "pozacierany", "pożądany", "pożądlony", "pozadzierany", "pozakładany", "pozaklinany", "pozałatwiany", "pozamiatany", "pozamieniany", "pozamrażany", "pozamykany", "pozapalany", "pozapinany", "pozapisywany", "pozapraszany", "pożarty", "pozasłaniany", "pozastrzelany", "pozatykany", "pozbawiany", "pozbawiony", "pozbierany", "pozbyty", "pozbywany", "pozdejmowany", "pozdrawiany", "pozdrowiony", "pożegnany", "pożerany", "pozmiatany", "pozmieniany", "pozmywany", "poznaczony", "poznany", "poznawany", "poznęcany", "pozorowany", "pozostawiany", "pozostawiony", "pozowany", "pozrywany", "pozszywany", "pożuty", "pozwalniany", "pozwany", "pozwiązywany", "pozwiedzany", "pozwolony", "pożyczany", "pożyczony", "pozyskany", "pożyty", "pozywany", "pożywiany", "pożywiony", "praktykowany", "prany", "prasowany", "prawiony", "prażony", "precyzowany", "preferowany", "prenumerowany", "prezentowany", "próbowany", "procesowany", "produkowany", "profanowany", "profilowany", "prognozowany", "programowany", "projektowany", "proklamowany", "prolongowany", "promieniowany", "promowany", "propagowany", "proponowany", "prosperowany", "prostowany", "proszkowany", "proszony", "protestowany", "protokołowany", "prowadzony", "prowokowany", "pruty", "pryskany", "pryśnięty", "przeanalizowany", "przearanżowany", "przebaczany", "przebaczony", "przebadany", "przebiegnięty", "przebierany", "przebijany", "przebity", "przebolony", "przebrany", "przebudowany", "przebudowywany", "przebudzany", "przebudzony", "przebukowany", "przebyty", "przebywany", "przeceniany", "przeceniony", "przechlapany", "przechodzony", "przechowany", "przechowywany", "przechrzcony", "przechwycony", "przechwytywany", "przechylany", "przechylony", "przechytrzany", "przechytrzony", "przeciągany", "przeciągnięty", "przeciążany", "przeciążony", "przeciekany", "przecierany", "przecierpiany", "przecięty", "przecinany", "przeciskany", "przeciśnięty", "przeciwstawiany", "przećwiczony", "przeczekany", "przeczesany", "przeczesywany", "przeczołgany", "przeczuty", "przeczuwany", "przeczyszczony", "przeczytany", "przedarty", "przedawkowany", "przedawkowywany", "przedekorowany", "przedłożony", "przedłużany", "przedłużony", "przedmuchany", "przedobrzony", "przedostany", "przedostawany", "przedsiewzięty", "przedstawiany", "przedstawiony", "przedymany", "przedyskutowany", "przedzierany", "przedziurawiony", "przedziurkowany", "przeegzaminowany", "przefaksowany", "przefarbowany", "przefasonowany", "przefasowany", "przefaxowany", "przefiltrowany", "przeformowany", "przeforsowany", "przegadany", "przeganany", "przeganiany", "przegapiany", "przegapiony", "przegięty", "przeginany", "przeglądany", "przeglądnięty", "przegłodzony", "przegłosowany", "przegoniony", "przegotowany", "przegotowywany", "przegrabiony", "przegradzany", "przegrany", "przegrupowany", "przegrupowywany", "przegrywany", "przegryzany", "przegryziony", "przegrzany", "przegrzebany", "przegrzewany", "przehandlowany", "przeholowany", "przeinstalowany", "przeistoczony", "przejadany", "przejaskrawiany", "przejaśniony", "przejawiany", "przejawiony", "przejechany", "przejęty", "przejeżdżany", "przejmowany", "przejrzany", "przekabacany", "przekabacony", "przekablowany", "przekalibrowany", "przekalkulowany", "przekarmiany", "przekąszony", "przekazywany", "przekierowany", "przekierowywany", "przekimany", "przekładany", "przeklejony", "przeklęty", "przeklinany", "przeklnięty", "przekłuty", "przekonany", "przekonfigurowany", "przekonstruowany", "przekonwertowany", "przekonywany", "przekopany", "przekopywany", "przekoziołkowany", "przekraczany", "przekręcany", "przekręcony", "przekreślany", "przekreślony", "przekroczony", "przekrojony", "przekrzyczony", "przekrzywiony", "przekształcany", "przekształcony", "przekupiony", "przekupywany", "przekuty", "przekwalifikowany", "przełączany", "przełączony", "przeładowany", "przeładowywany", "przełamany", "przełamywany", "przelany", "przelatywany", "przeleciany", "przelewany", "przeleżany", "przelicytowany", "przeliczany", "przeliczony", "przeliterowany", "przełknięty", "przełożony", "przełykany", "przełyknięty", "przemalowany", "przemalowywany", "przemaszerowany", "przemawiany", "przemeblowany", "przemęczony", "przemielony", "przemieniany", "przemierzony", "przemieszczany", "przemieszczony", "przemijany", "przemilczany", "przemilczony", "przeminięty", "przemknięty", "przemodelowany", "przemusztrowany", "przemycany", "przemycony", "przemyślany", "przemyślony", "przemyty", "przemywany", "przenegocjowany", "przeniesiony", "przenikany", "przeniknięty", "przenoszony", "przeobrażany", "przeobrażony", "przeoczany", "przeoczony", "przeorany", "przeorganizowany", "przeorientowany", "przepadany", "przepakowany", "przepalony", "przeparkowany", "przepchany", "przepchnięty", "przepędzany", "przepędzony", "przepełniany", "przepełniony", "przepijany", "przepiłowany", "przepisany", "przepisywany", "przepity", "przepłacany", "przepłacony", "przepłakany", "przeplanowany", "przepłoszony", "przepłukany", "przepłukiwany", "przepłynięty", "przepływany", "przepompowany", "przepompowywany", "przepowiadany", "przepowiedziany", "przepracowany", "przepracowywany", "przeprany", "przeprawiany", "przeprawiony", "przeprogramowany", "przeprojektowany", "przeprowadzany", "przeprowadzony", "przepuszczany", "przepuszczony", "przepychany", "przepytany", "przepytywany", "przerąbany", "przerabiany", "przeradzany", "przerastany", "przerażony", "przeredagowany", "przerejestrowany", "przerobiony", "przerodzony", "przerośnięty", "przerwany", "przerysowany", "przerywany", "przerzedzany", "przerzucany", "przerzucony", "przesączony", "przesadzany", "przesądzany", "przesadzony", "przesądzony", "prześcigany", "prześcignięty", "przesiadany", "przesiadywany", "przesiany", "przesiedlany", "przesiedlony", "przesiedziany", "przesiewany", "przesilony", "przeskakiwany", "przeskalowany", "przeskanowany", "przeskoczony", "przeskrobany", "prześladowany", "przesłaniany", "przesłany", "prześledzony", "prześlizgnięty", "przesłodzony", "przesłonięty", "przesłuchany", "przesłuchiwany", "przesmarowany", "przesolony", "przesortowany", "przespany", "prześpiewany", "przessany", "przestawiany", "przestawiony", "przestemplowany", "przestraszony", "przestrojony", "przestrzegany", "przestrzelony", "przestudiowany", "przesunięty", "przesuwany", "prześwietlany", "prześwietlony", "przesyłany", "przesypany", "przesypiany", "przesypywany", "przeszarżowany", "przeszczepiany", "przeszczepiony", "przeszkadzany", "przeszkolony", "przeszmuglowany", "przeszukany", "przeszukiwany", "przeszyty", "przeszywany", "przetaczany", "przetańczony", "przetapetowany", "przetarty", "przetestowany", "przetkany", "przetoczony", "przetopiony", "przetrącony", "przetransformowany", "przetransmitowany", "przetransponowany", "przetransportowany", "przetrawiony", "przetrwany", "przetrząsany", "przetrząśnięty", "przetrzepany", "przetrzymany", "przetrzymywany", "przetwarzany", "przetworzony", "przewalany", "przewalczony", "przewaletowany", "przewalony", "przeważany", "przeważony", "przewertowany", "przewiązany", "przewiązywany", "przewidywany", "przewidziany", "przewiercany", "przewiercony", "przewieszany", "przewieszony", "przewietrzony", "przewieziony", "przewijany", "przewinięty", "przewitany", "przewodniczony", "przewodzony", "przewożony", "przewracany", "przewrócony", "przewyższany", "przeymierzany", "przeżarty", "przeżeglowany", "przeżegnany", "przeziębiony", "przezimowany", "przeznaczany", "przeznaczony", "przeżuty", "przezwyciężany", "przezwyciężony", "przeżyty", "przezywany", "przeżywany", "przodowany", "przpochlebiony", "przwdziewany", "przybastowany", "przybierany", "przybijany", "przybity", "przybliżany", "przybliżony", "przybrany", "przycelowany", "przycepiony", "przychylony", "przyciągany", "przyciągnięty", "przyciemniony", "przycięty", "przycinany", "przyciskany", "przyciśnięty", "przyciszony", "przyćmiewany", "przyćmiony", "przycumowany", "przyczepiany", "przyczesany", "przyczołgany", "przyczyniony", "przydepnięty", "przydeptany", "przyduszony", "przydzielany", "przydzielony", "przygarnięty", "przygaszony", "przygazowany", "przygładzany", "przygnębiany", "przygniatany", "przygnieciony", "przygotowany", "przygruchany", "przygrywany", "przygryzany", "przygryziony", "przygrzany", "przygwożdżony", "przyhamowany", "przyholowany", "przyjany", "przyjęty", "przyjmowany", "przyjrzany", "przykładany", "przyklejony", "przyklepany", "przykopany", "przykręcany", "przykręcony", "przykrócony", "przykryty", "przykrywany", "przykurzony", "przykuty", "przykuwany", "przyłączany", "przyłączony", "przylany", "przyłapany", "przylegany", "przylepiany", "przylepiony", "przyłożony", "przymierzony", "przymilany", "przymknięty", "przymocowany", "przymuszany", "przynależony", "przyniesiony", "przynoszony", "przynudzany", "przyostrzony", "przyozdabiany", "przyozdobiony", "przypadnięty", "przypakowany", "przypakowywany", "przypalany", "przypalony", "przyparty", "przypasowany", "przypatrywany", "przypatrzony", "przypieczętowany", "przypiekany", "przypierany", "przypięty", "przypilnowany", "przypiłowany", "przypinany", "przypisany", "przypisywany", "przypłacony", "przyplątany", "przypłynięty", "przypodobany", "przypominany", "przypomniany", "przyporządkowany", "przyprawiany", "przyprawiony", "przyprowadzony", "przypucowany", "przypudrowany", "przypuszczany", "przypuszczony", "przyrównany", "przyrządzany", "przyrządzony", "przysiadany", "przysiągnięty", "przyskrzydlony", "przyskrzyniany", "przyskrzyniony", "przysłaniany", "przysłany", "przysłodzony", "przysłoniony", "przysłuchiwany", "przysługiwany", "przysłużony", "przysmażany", "przysmażony", "przyspieszany", "przyspieszony", "przysporzony", "przysposobiony", "przyśrubowywany", "przyssany", "przystąpiony", "przystawiany", "przystawiony", "przystemplowany", "przystopowany", "przystosowany", "przystrojony", "przysunięty", "przysuwany", "przyswajany", "przyświecany", "przyświęcony", "przyswojony", "przysyłany", "przysypany", "przyszpilony", "przyszykowany", "przyszyty", "przyszywany", "przytaczany", "przytargany", "przytarty", "przytaszczany", "przytępiany", "przytępiony", "przytkany", "przytłaczany", "przytłoczony", "przytłumiony", "przytoczony", "przytrafiony", "przytroczony", "przytruwany", "przytrzasnięty", "przytrzymany", "przytrzymywany", "przytulany", "przytulony", "przytwierdzany", "przytwierdzony", "przytykany", "przyuczony", "przyuważony", "przywabiony", "przywalany", "przywalony", "przywarowany", "przywarty", "przywdziany", "przywiązany", "przywiązywany", "przywidziany", "przywieziony", "przywitany", "przywłaszczany", "przywłaszczony", "przywołany", "przywoływany", "przywożony", "przywracany", "przywrócony", "przyznaczony", "przyznany", "przyznawany", "przyzwalany", "przyzwany", "przyzwyczajany", "przyzwyczajony", "przyzywany", "psiamany", "pstrykany", "pstryknięty", "psuty", "publikowany", "puchnięty", "pucowany", "pudłowany", "pudrowany", "puknięty", "punktowany", "pustoszony", "puszczany", "puszczony", "puszkowany", "puszony", "pykany", "pytany", "rabowany", "rachowany", "racjonalizowany", "racjonowany", "raczony", "radowany", "raniony", "raportowany", "ratowany", "ratyfikowany", "reaktywowany", "realizowany", "reanimowany", "recytowany", "ręczony", "redagowany", "redukowany", "reformowany", "refowany", "regenerowany", "regionalizowany", "regulowany", "reinkarnowany", "rejestrowany", "reklamowany", "rekomendowany", "rekompensowany", "rekonstruowany", "rekreowany", "rekrutowany", "rekwirowany", "relacjonowany", "relaksowany", "remodulowany", "remontowany", "renegocjowany", "reorganizowany", "reperowany", "replikowany", "represejonowany", "reprezentowany", "reprodukowany", "resetowany", "resocjalizowany", "respektowany", "resuscytowany", "retuszowany", "rewanżowany", "rewidowany", "rezerwowany", "rezonowany", "rezygnowany", "reżyserowany", "robiony", "rodzony", "rojony", "rolowany", "romansowany", "roniony", "rozbawiany", "rozbawiony", "rozbierany", "rozbijany", "rozbity", "rozbłyśnięty", "rozbrajany", "rozbrojony", "rozbudowany", "rozbudowywany", "rozbudzany", "rozbudzony", "rozbujany", "rozcapierzony", "rozchmurzony", "rozchodzony", "rozchylany", "rozchylony", "rozciągany", "rozciągnięty", "rozcieńczany", "rozcieńczony", "rozcierany", "rozcięty", "rozcinany", "rozczarowany", "rozczarowywany", "rozczesany", "rozczłonkowany", "rozczulany", "rozczytany", "rozdany", "rozdawany", "rozdeptany", "rozdmuchany", "rozdmuchiwany", "rozdrabniany", "rozdrapany", "rozdrapywany", "rozdrażniany", "rozdrażniony", "rozduszony", "rozdwojony", "rozdysponowany", "rozdzielany", "rozdzielony", "rozdzierany", "rozdziewiczony", "rozebrany", "rozedrany", "rozegrany", "rozegrywany", "rozepchany", "rozerwany", "rozesłany", "rozgarnięty", "rozgaszczany", "rozgięty", "rozglaszany", "rozgłoszony", "rozgniatany", "rozgnieciony", "rozgniewany", "rozgoniony", "rozgraniczony", "rozgrany", "rozgromiony", "rozgrywany", "rozgryzany", "rozgryziony", "rozgrzany", "rozgrzebywany", "rozgrzeszony", "rozgrzewany", "rozhuśtany", "rozjaśniany", "rozjaśniony", "rozjechany", "rozjedzony", "rozjuszany", "rozjuszony", "rozkazany", "rozkazywany", "rozkładany", "rozklejany", "rozklejony", "rozkołysany", "rozkopany", "rozkopywany", "rozkoszowany", "rozkręcany", "rozkręcony", "rozkrojony", "rozkruszony", "rozkuty", "rozkuwany", "rozkwaszony", "rozkwaterowany", "rozkwitany", "rozkwitnięty", "rozłączony", "rozładowany", "rozładowywany", "rozłamany", "rozlany", "rozlewany", "rozliczany", "rozliczony", "rozlokowany", "rozłożony", "rozłupany", "rozluźniany", "rozmanażany", "rozmasowany", "rozmawiany", "rozmazany", "rozmazywany", "rozmiękczony", "rozmieniany", "rozmieniony", "rozmieszczany", "rozmieszczony", "rozminięty", "rozmnożony", "rozmontowany", "rozmówiony", "rozmrażany", "rozmrożony", "rozmyślany", "rozmyty", "różnicowany", "rozniecany", "roznieciony", "rozniesiony", "różniony", "roznoszony", "rozochocony", "rozpaczany", "rozpakowany", "rozpakowywany", "rozpalany", "rozpalony", "rozpamiętywany", "rozpaskudzany", "rozpatrywany", "rozpatrzony", "rozpędzany", "rozpędzony", "rozpętany", "rozpieszczany", "rozpieszczony", "rozpięty", "rozpiłowany", "rozpinany", "rozpisany", "rozpisywany", "rozplanowany", "rozpłaszczany", "rozpłaszczony", "rozplątany", "rozplątywany", "rozpłynięty", "rozpoczęty", "rozpoczynany", "rozpogodzony", "rozporządzany", "rozporządzony", "rozpościerany", "rozpostrzony", "rozpowiadany", "rozpowiedziany", "rozpowszechniany", "rozpowszechniony", "rozpoznany", "rozpoznawany", "rozpracowany", "rozpraszany", "rozprawiany", "rozprawiczony", "rozprawiony", "rozprostowany", "rozproszony", "rozprowadzany", "rozprowadzony", "rozpruty", "rozpruwany", "rozprzestrzeniany", "rozprzestrzeniony", "rozpuszczany", "rozpuszczony", "rozpychany", "rozpylany", "rozpylony", "rozpytany", "rozpytywany", "rozrastany", "rozreklamowany", "rozrobiony", "rozrośnięty", "rozróżniany", "rozróżniony", "rozruszany", "rozrysowany", "rozrywany", "rozrzucany", "rozsadzany", "rozsadzony", "rozsądzony", "rozścielony", "rozsiany", "rozsiekany", "rozsiewany", "rozsiodłany", "rozsławiany", "rozsławiony", "rozsmarowany", "rozsmarowywany", "rozśmieszany", "rozstany", "rozstąpiony", "rozstawany", "rozstawiany", "rozstawiony", "rozstrojony", "rozstrząsany", "rozstrzeliwany", "rozstrzelony", "rozstrzygany", "rozstrzygnięty", "rozsunięty", "rozsupłany", "rozświetlany", "rozświetlony", "rozsyłany", "rozsypany", "rozsypywany", "rozszarpany", "rozszarpywany", "rozszczepiany", "rozszczepiony", "rozszerzany", "rozszerzony", "rozszyfrowany", "roztaczany", "roztapiany", "roztarty", "roztoczony", "roztopiony", "roztrwoniony", "roztrząsany", "roztrzaskany", "rozumiany", "rozumowany", "rozwalany", "rozwalony", "rozwarty", "rozważany", "rozważony", "rozweselany", "rozweselony", "rozwiany", "rozwiązany", "rozwiązywany", "rozwidniany", "rozwiedziony", "rozwierany", "rozwiercony", "rozwieszany", "rozwieszony", "rozwiewany", "rozwieziony", "rozwikłany", "rozwinięty", "rozwlekany", "rozwodzony", "rozwścieczany", "rozwścieczony", "rozzłoszczony", "rugany", "ruinowany", "rujnowany", "runięty", "ruszany", "ruszony", "rwany", "ryczany", "ryglowany", "rymowany", "rysowany", "ryty", "ryzykowany", "rządzony", "rzeźbiony", "rżnięty", "rzucany", "rzucony", "rzygany", "sabotażowany", "sączony", "sadzany", "sadzony", "sądzony", "salutowany", "salwowany", "sankcjonowany", "satysfakcjonowany", "scalony", "scementowany", "scentrowany", "scharakteryzowany", "schładzany", "schlany", "schlapany", "schlebiony", "schłodzony", "schowany", "schroniony", "schrupany", "schrzaniony", "schwytany", "schylany", "ściągnięty", "ścielony", "ściemniany", "ściemniony", "ścierany", "ścierpiony", "ścięty", "ścigany", "ścinany", "ściskany", "ściśnięty", "ściszany", "ściszony", "sędziowany", "segregowany", "selekcjonowany", "separowany", "sępiony", "serwowany", "sfabrykowany", "sfajczony", "sfałszowany", "sfaulowany", "sfilmowany", "sfinalizowany", "sfinansowany", "sfingowany", "sformalizowany", "sformatowany", "sformowany", "sformułowany", "sforsowany", "sfotografowany", "shimmerowany", "siany", "siekany", "siorbany", "skadrowany", "skakany", "skalany", "skaleczony", "skalibrowany", "skalkulowany", "skalpowany", "skanalizowany", "skandowany", "skanowany", "skapitulowany", "skarcony", "skarżony", "skasowany", "skatalogowany", "skazany", "skażony", "skazywany", "skierowany", "składany", "składowany", "skłaniany", "sklasyfikowany", "skleciony", "sklejany", "sklejony", "sklepany", "skłócony", "skłoniony", "sklonowany", "sknocony", "skojarzony", "skolonizowany", "skołowany", "skombinowany", "skomentowany", "skompensowany", "skompletowany", "skomplikowany", "skomponowany", "skompresowany", "skompromitowany", "skomunikowany", "skonany", "skoncentrowany", "skończony", "skondensowany", "skonfigurowany", "skonfiskowany", "skonfrontowany", "skonkretyzowany", "skonsolidowany", "skonstruowany", "skonsultowany", "skonsumowany", "skontaktowany", "skontrolowany", "skoordynowany", "skopany", "skopiowany", "skorektowany", "skorumpowany", "skorygowany", "skorzystany", "skoszony", "skracany", "skradziony", "skręcany", "skręcony", "skremowany", "skreślany", "skreślony", "skrobany", "skrobnięty", "skrócony", "skrojony", "skropiony", "skruszony", "skrystalizowany", "skryty", "skrytykowany", "skrywany", "skrzecowany", "skrzepnięty", "skrzyczany", "skrzyty", "skrzywdzony", "skrzyżowany", "skserowany", "skubany", "skubnięty", "skulony", "skumulowany", "skupiany", "skupiony", "skupowany", "skurczony", "skuszony", "skuty", "skuwany", "skwitowany", "słany", "sławiony", "śledzony", "śliniony", "ślizgany", "słodzony", "słuchany", "słyszany", "smagany", "smarowany", "smażony", "śmiecony", "smuty", "smyrany", "snuty", "sondowany", "sortowany", "spafycikowany", "spakowany", "spalany", "spałaszowany", "spalony", "spałowany", "spamiętany", "spaprany", "sparafrazowany", "sparaliżowany", "sparowany", "spartaczony", "spartolony", "sparzony", "spasowany", "spatałaszony", "spauzowany", "spawany", "spawiony", "specjalizowany", "spędzany", "spędzony", "spekulowany", "spełniany", "spełniony", "spenetrowany", "spętany", "spierany", "spięty", "śpiewany", "spiłowany", "spinany", "spisany", "spiskowany", "spisywany", "spity", "spłacany", "spłacony", "splądrowany", "splajtowany", "splamiony", "spłaszczony", "splatany", "splątany", "spłatany", "spławiany", "spławiony", "spłodzony", "spłonięty", "spłoszony", "spłukany", "spłukiwany", "spluwany", "spływany", "spoczęty", "spoczywany", "spodziewany", "spojony", "spolaryzowany", "spoliczkowany", "sponiewierany", "sponsorowany", "spopielany", "spopielony", "spopularyzowany", "sportretowany", "sporządzany", "sporządzony", "spostrzegany", "spotęgowany", "spotkany", "spotykany", "spoufalany", "spowalniany", "spowiadany", "spowodowany", "spowolniony", "spoźniony", "spóźniony", "spożytkowany", "spożyty", "spożywany", "sprany", "sprasowany", "spraszany", "sprawdzony", "sprawiony", "sprawowany", "sprecyzowany", "spreparowany", "sprężany", "sprężony", "spróbowany", "sprofanowany", "sprofilowany", "sprostowany", "sproszkowany", "sproszony", "sprowadzany", "sprowadzony", "sprowokowany", "spryskany", "spryskiwany", "sprywatyzowany", "sprzątany", "sprzątnięty", "sprzeczany", "sprzedany", "sprzedawany", "sprzeniewierzony", "spudłowany", "spustoszony", "spuszczany", "spuszczony", "spychany", "ssany", "stabilizowany", "stacjonowany", "staczany", "staranowany", "starczany", "stargowany", "startowany", "stawiany", "stawiony", "stemplowany", "stenografowany", "stepowany", "sterowany", "sterroryzowany", "sterylizowany", "stłamszony", "stłumiony", "stnięty", "stoczony", "stołowany", "stonowany", "stopiony", "stopniowany", "storpedowany", "stosowany", "strącany", "stracony", "strącony", "strajkowany", "straszony", "stratowany", "strawiony", "streamowany", "stresowany", "streszczany", "streszczony", "strofowany", "strojony", "stroszony", "strugany", "struty", "strymowany", "strząsany", "strzaskany", "strząśnięty", "strzelony", "strzepany", "strzępiony", "strzepnięty", "strzepywany", "studiowany", "studzony", "stukany", "stuknięty", "stulony", "stwardniony", "stwarzany", "stwierdzany", "stwierdzony", "stworzony", "stykany", "stylizowany", "stymulowany", "sugerowany", "sumowany", "sunięty", "swatany", "swawolony", "świadczony", "świecony", "święcony", "świerzbiony", "świętowany", "świntuszony", "sycony", "sygnalizowany", "symulowany", "synchronizowany", "sypany", "sypnięty", "szachrowany", "szacowany", "szafowany", "szamotany", "szanowany", "szargany", "szarpany", "szarpnięty", "szarżowany", "szasowany", "szastany", "szatkowany", "szczędzony", "szczepiony", "szczerzony", "szczuty", "szczycony", "szczypany", "szczytowany", "szefowany", "szemrany", "szepnięty", "szeptany", "szerzony", "szkalowany", "szkicowany", "szklony", "szkodzony", "szkolony", "szlachtowany", "szlifowany", "szmuglowany", "szokowany", "szorowany", "szpachlowany", "szpanowany", "szperany", "szprycowany", "sztachnięty", "szturchany", "szturchnięty", "szturmowany", "szufladkowany", "szuflowany", "szukany", "szulerowany", "szwankowany", "szydełkowany", "szydzony", "szyfrowany", "szykanowany", "szykowany", "szyty", "taktowany", "tamowany", "tankowany", "tapetowany", "taplany", "taranowany", "targany", "targnięty", "targowany", "tarmoszony", "tarty", "tarzany", "tasowany", "taszczony", "tatuowany", "tchnięty", "telefonowany", "telegrfowany", "teleportowany", "temperowany", "teoretyzowany", "tępiony", "terroryzowany", "testowany", "tkany", "tknięty", "tłamszony", "tłoczony", "tłumaczony", "tłumiony", "toczony", "tolerowany", "tonowany", "topiony", "torowany", "torturowany", "towarzyszony", "trąbiony", "trącany", "tracony", "trącony", "trafiany", "trafiony", "tragizowany", "traktowany", "transferowany", "transformowany", "transmitowany", "transportowany", "tratowany", "trawiony", "trenowany", "tresowany", "triumfowany", "tropiony", "troszczony", "truty", "trwoniony", "trymowany", "tryskany", "tryśnięty", "tryumfowany", "trywializowany", "trzaskany", "trzasnięty", "trzepany", "trzepnięty", "trzepotany", "trzęsiony", "trzymany", "tuczony", "tułany", "tulony", "turlany", "tuszowany", "twistowany", "tworzony", "tykany", "tyranizowany", "tyrany", "tytułowany", "uaktualniany", "uaktualniony", "uaktywniany", "uaktywniony", "uargumentowany", "uatrakcyjniony", "ubabrany", "ubarwiany", "ubarwiony", "ubawiony", "ubezpieczany", "ubezpieczony", "ubezwłasnowolniony", "ubiczowany", "ubiegany", "ubierany", "ubijany", "ubity", "ubłagany", "ubliżany", "ubliżony", "ubolewany", "ubóstwiany", "ubrany", "ubroczony", "ubrudzony", "ucałowany", "ucharakteryzowany", "uchowany", "uchroniony", "uchwalany", "uchwalony", "uchwycony", "uchylany", "uchylony", "uciągnięty", "ucieleśniany", "ucierany", "ucierpiany", "ucięty", "ucinany", "uciskany", "uciśnięty", "uciszany", "uciszony", "uciułany", "ucywilizowany", "uczczony", "uczepiony", "uczesany", "uczęszczany", "uczony", "ucztowany", "uczuty", "uczyniony", "udany", "udaremniony", "udawany", "udekorowany", "udeptywany", "uderzany", "uderzony", "udobruchany", "udokumentowany", "udomawiany", "udomowiony", "udoskonalany", "udoskonalony", "udostępniany", "udostępniony", "udowadniany", "udowodniony", "Udramatyzowany", "udręczony", "udrożniony", "udupiony", "uduszony", "udzielany", "udzielony", "udźwignięty", "ueiwarygodniony", "ufany", "ufarbowany", "uformowany", "ufortyfikowany", "ufundowany", "ugadany", "uganiany", "ugaszany", "ugaszony", "ugięty", "uginany", "ugłaskany", "ugniatany", "ugodzony", "ugoszczony", "ugotowany", "ugrany", "ugruntowany", "ugryziony", "ugrzęznięty", "uhistoryzowany", "uhonorowany", "uiścity", "ujadany", "ujarzmiany", "ujarzmiony", "ujawniany", "ujawniony", "ujęty", "ujeżdżany", "ujeżdżony", "ujmowany", "ujrzany", "ukamieniowany", "ukarany", "ukartowany", "ukąszony", "ukatrupiony", "ukazany", "ukazywany", "ukierowany", "ukierunkowany", "układany", "uklepany", "ukłoniony", "ukłuty", "uknuty", "ukojony", "ukołysany", "ukończony", "ukonkretniony", "ukoronowany", "ukradziony", "ukręcany", "ukręcony", "ukrojony", "ukryty", "ukrywany", "ukrzyżowany", "ukształtowany", "ukuty", "ułagodzony", "ułaskawiany", "ułaskawiony", "ulatniany", "ułatwiany", "ułatwiony", "uleczany", "uleczony", "ulegany", "ulepiony", "ulepszany", "ulepszony", "ulokowany", "ulotniony", "ułożony", "umacniany", "umalowany", "umartwiany", "umawiany", "umazany", "umeblowany", "umiejscowiony", "umieszczany", "umieszczony", "umilany", "umilony", "umknięty", "umniejszany", "umniejszony", "umocniony", "umocowany", "umoczony", "umodelowany", "umorzony", "umotywowany", "umówiony", "umożliwiany", "umożliwiony", "umroczniony", "umyty", "unaoczniony", "unicestwiany", "unicestwiony", "uniemożliwainy", "uniemożliwiony", "unierochomiony", "uniesiony", "unieszczęśliwiany", "unieszczęśliwiony", "unieszkodliwiany", "unieszkodliwiony", "unieważniany", "unieważniony", "uniewinniony", "uniezależniony", "unikany", "uniknięty", "unormowany", "unoszony", "unowoczesniany", "unowocześniany", "uodporniony", "uogólniany", "upakowany", "upalany", "upalony", "upamiętniany", "upamiętniony", "upaństwowiony", "upaprany", "uparty", "upaskudzony", "upchany", "upchnięty", "upewniany", "upewniony", "upgradowany", "upichcony", "upiększany", "upiększony", "upierany", "upierdolony", "upięty", "upijany", "upilnowany", "upinany", "upity", "uplastyczniony", "upłynięty", "upodabniany", "upodobniony", "upojony", "upokorzany", "upokorzony", "upolowany", "upominany", "uporządkowany", "upowszechniony", "upozorowany", "upozowany", "uprany", "uprasowany", "upraszczany", "uprawdopodobniony", "uprawiany", "uproszczony", "uproszony", "uprowadzany", "uprowadzony", "uprzątany", "uprzątnięty", "uprzedony", "uprzedzany", "uprzyjemniany", "uprzyjemniony", "uprzykrzany", "uprzytomniony", "upubliczniany", "upubliczniony", "upudrowany", "upuszczany", "upuszczony", "upychany", "urabiany", "uraczany", "uradowany", "Urągany", "uratowany", "urażany", "urażony", "uregulowany", "urobiony", "uroniony", "urośnięty", "urozmaicany", "urozmaicony", "uruchamiany", "uruchomiony", "urwany", "urywany", "urządzany", "urządzony", "urzeczywistniany", "urzeczywistniony", "urżnięty", "usadowiony", "usadzony", "usamowolniony", "usankcjonowany", "usatyfakcjonowany", "uschnięty", "uściskany", "uścislony", "uściśnięty", "usidlony", "usiedzony", "uskładany", "uskoczony", "uskuteczniany", "uskuteczniony", "usłuchany", "usługiwany", "usłużony", "usłyszany", "usmażony", "uśmiany", "uśmiercany", "uśmiercony", "uśmierzony", "uspany", "uśpiony", "uspokajany", "uspokojony", "uspołeczniany", "usprawiedliwiany", "usprawiedliwiony", "usprawniony", "usprzątany", "ustabilizowany", "ustalany", "ustalony", "ustanawiany", "ustanowiony", "ustąpiony", "ustatkowany", "ustawiany", "ustawiony", "ustępowany", "ustosunkowany", "ustrojony", "ustrzegany", "ustrzelony", "usunięty", "ususzony", "usuwany", "uświadamiany", "uświadczony", "uświadomiony", "uświęcony", "uświniony", "usychany", "usypany", "usypiany", "usystematyzowany", "usytuowany", "uszanowany", "uszczelniany", "uszczęśliwiany", "uszczęśliwiony", "uszczuplony", "uszczypnięty", "uszkadzany", "uszkodzony", "uszlachetniany", "uszlachetniony", "usztywniony", "uszykowany", "uszyty", "utajniony", "utargowany", "utarty", "utemperowany", "utkany", "utknięty", "utkwiony", "utoczony", "utopiony", "utorowany", "utożsamiany", "utożsamiony", "utracony", "utrącony", "utrudniany", "utrudniony", "utrwalany", "utrwalony", "utrzymywany", "utuczony", "utulony", "utwierdzany", "utwierdzony", "utworzony", "utylizowany", "uwalniany", "uwalony", "uwarunkowany", "uważany", "uwiązany", "uwiązywany", "uwidoczniony", "uwieczniany", "uwieczniony", "uwielbiany", "uwielbiony", "uwieńczony", "uwierany", "uwierzony", "uwieszony", "uwieziony", "uwięziony", "uwijany", "uwikłany", "uwinięty", "uwity", "uwłaczany", "uwłaszczony", "uwodzony", "uwolniony", "uwsteczniany", "uwsteczniony", "uwydatniany", "uwypiklony", "uwzględniany", "uwzględniony", "użądlony", "uzależniany", "uzależniony", "uzasadniany", "uzasadniony", "uzbierany", "uzbrajany", "uzbrojony", "uzdrawiany", "uzdrowiony", "użerany", "uzewnętrzniany", "uzewnętrzniony", "uzgadniany", "uzgodniony", "uziemiony", "uzmysłowiony", "uznany", "uznawany", "uzupełniany", "uzupełniony", "uzurpowany", "użyczany", "użyczony", "uzyskany", "uzyskiwany", "użyty", "używany", "wabiony", "wąchany", "wachlowany", "wahany", "walczony", "wałkowany", "walnięty", "walony", "ważony", "wbijany", "wbity", "wcelowany", "wchłonięty", "wciągany", "wciągnięty", "wcielany", "wcielony", "wcierany", "wcięty", "wcinany", "wciskany", "wciśnięty", "wczepiony", "wczołgany", "wczuty", "wczytany", "wczytywany", "wdany", "wdarty", "wdawany", "wdepnięty", "wdeptany", "wdetonowany", "wdmuchiwany", "wdrapany", "wdrapywany", "wdrażany", "wdrążony", "wdrożony", "wduszony", "wdychany", "wdzierany", "wędkowany", "wentylowany", "wepchany", "wepchnięty", "werbowany", "weryfikowany", "wessany", "wetkany", "wetknięty", "wezwany", "wgłębiany", "wgniatany", "wgnieciony", "wgrany", "wgryzany", "wgryziony", "wiązany", "wibrowany", "widywany", "widziany", "wiedzony", "wielbiony", "wiercony", "wierzgany", "wierzony", "wieszany", "wietrzony", "więżony", "wikłany", "windowany", "winszowany", "wiosłowany", "wirowany", "witany", "wity", "wizualizowany", "wjeżdżany", "wkalkulowany", "wkładany", "wklejany", "wklejony", "wklepany", "wkłuty", "wkomponowany", "wkopany", "wkopywany", "wkraczany", "wkradany", "wkradziony", "wkręcany", "wkręcony", "wkupiony", "wkurwiany", "wkuty", "wkuwany", "włączany", "włączony", "władany", "władowany", "włamany", "włamywany", "wlany", "wlepiany", "wlepiony", "wlewany", "wliczany", "wliczony", "włożony", "wmanewrowany", "wmanipulowany", "wmawiany", "wmieszany", "wmówiony", "wmurowany", "wmuszony", "wnerwiany", "wnerwiony", "wniesiony", "wnikany", "wniknięty", "wnioskowany", "wnoszony", "wodowany", "wojowany", "wołany", "woskowany", "wożony", "wpajany", "wpakowany", "wparowany", "wpasowany", "wpatrywany", "wpędzany", "wpędzony", "wperswadowany", "wpieniony", "wpięty", "wpisany", "wpisywany", "wpłacany", "wpłacony", "wplatany", "wplątany", "wplątywany", "wpojony", "wpompowany", "wpraszany", "wprawiany", "wproszony", "wprowadzany", "wprowadzony", "wpuszczony", "wpychany", "wrabiany", "wręczany", "wrobiony", "wróżony", "wryty", "wrzucany", "wrzucony", "wrzynany", "wsadzany", "wsadzony", "wskazany", "wskazywany", "wskórany", "wskrzeszany", "wskrzeszony", "wślizgiwany", "wślizgnięty", "wsłuchany", "wsparty", "wspierany", "wspięty", "współczuty", "współodczuwany", "współtworzony", "współżyty", "wspomagany", "wspominany", "wspomniany", "wstąpiony", "wstawiany", "wstawiony", "wstrząsany", "wstrząśnięty", "wstrzelony", "wstrzykiwany", "wstrzyknięty", "wstrzymany", "wstrzymywany", "wstukany", "wsunięty", "wsuwany", "wsypany", "wszamany", "wszczepiany", "wszczepiony", "wszczęty", "wszczynany", "wszyty", "wtajemniczany", "wtajemniczony", "wtapiany", "wtargnięty", "wtarty", "wtaszczony", "wtłoczony", "wtopiony", "wtrącony", "wtryniany", "wtulany", "wtulony", "wtykany", "wwalony", "wwiercany", "wwiercony", "wwieziony", "wwożony", "wyartykułowany", "wyautowany", "wybaczany", "wybaczony", "wybadany", "wybatożony", "wybawiony", "wybebeszony", "wybełkotany", "wybiczowany", "wybielany", "wybielony", "wybierany", "wybijany", "wybity", "wybłagany", "wyblaknięty", "wybrandzlowany", "wybrany", "wybroniony", "wybrzydzany", "wybuchany", "wybuchnięty", "wybudowany", "wybudzany", "wybudzony", "wyburzany", "wyburzony", "wycackany", "wycałowany", "wyceniany", "wyceniony", "wychlany", "wychłostany", "wychodowany", "wychowany", "wychowywany", "wychrobotany", "wychwalany", "wychwycony", "wychylany", "wychylony", "wyciągany", "wyciągnięty", "wyciekany", "wycieniowany", "wycierany", "wycięty", "wycinany", "wyciskany", "wyciśnięty", "wyciszany", "wyciszony", "wycofany", "wyćwiczony", "wycyckany", "wycyganiony", "wyczarowany", "wyczarterowany", "wyczekany", "wyczekiwany", "wyczerpany", "wyczesany", "wyczołgany", "wyczołgiwany", "wyczuty", "wyczuwany", "wyczyniany", "wyczyszczony", "wyczytany", "wyczytywany", "wydalany", "wydalony", "wydany", "wydębiony", "wydedukowany", "wydelegowany", "wydepilowany", "wydeptywany", "wydłubany", "wydłubywany", "wydłużany", "wydłużony", "wydmuchany", "wydmuchiwany", "wydobyty", "wydobywany", "wydojony", "wydoroślany", "wydostany", "wydrany", "wydrapany", "wydrapywany", "wydrążony", "wydrukowany", "wydukany", "wyduszony", "wydychany", "wydziedziczony", "wydzielany", "wydzielony", "wydzierany", "wydzierżawiony", "wydziobany", "wydziwiany", "wydzwaniany", "wyedukowany", "wyedytowany", "wyeeliminowany", "wyegzekwowany", "wyeksmitowany", "wyekspediowany", "wyeksploatowany", "wyeksponowany", "wyeksportowany", "wyeliminowany", "wyemigrowany", "wyemitowany", "wyewoluowany", "wyfrunięty", "wygadany", "wygadywany", "wyganiany", "wygarbowany", "wygarniany", "wygarnięty", "wygasany", "wygaśnięty", "wygaszany", "wygaszony", "wygenerowany", "wygięty", "wyginany", "wygładzany", "wygładzony", "wygłaszany", "wygłodzony", "wygłosowany", "wygłoszony", "wygłówkowany", "wygnany", "wygolony", "wygoniony", "wygooglowany", "wygospodarowany", "wygotowany", "wygrany", "wygrawerowany", "wygrażany", "wygrywany", "wygryziony", "wygrzany", "wygrzebany", "wygrzebywany", "wygrzewany", "wygubiony", "wyhaczony", "wyhaftowany", "wyhamowany", "wyhodowany", "wyizolowany", "wyjadany", "wyjaśniany", "wyjaśniony", "wyjawiany", "wyjawiony", "wyjedzony", "wyjęty", "wyjmowany", "wykadrowany", "wykalibrowany", "wykalkulowany", "wykańczany", "wykantowany", "wykąpany", "wykaraskany", "wykarczowany", "wykarmiany", "wykasowany", "wykastrowany", "wykazany", "wykazywany", "wykierowany", "wykitowany", "wykiwany", "wykładany", "wyklarowany", "wyklepany", "wyklinany", "wykłócany", "wykluczany", "wykluczony", "wykluty", "wykłuty", "wykminiony", "wykolejony", "wykołowany", "wykombinowany", "wykonany", "wykończony", "wykonywany", "wykopany", "wykopnięty", "wykopywany", "wykorkowany", "wykorzeniany", "wykorzeniony", "wykorzystany", "wykorzystywany", "wykoszony", "wykpity", "wykradany", "wykradnięty", "wykręcany", "wykręcony", "wykreowany", "wykreślany", "wykreślony", "wykrochmalony", "wykrojony", "wykrwawiany", "wykrwawiony", "wykryty", "wykrywany", "wykrzesany", "wykrztuszony", "wykrzyczony", "wykrzykiwany", "wykrzyknięty", "wykrzywiany", "wykształcony", "wyksztuszony", "wykupiony", "wykupywany", "wykuty", "wykuwany", "wyłączany", "wyłączony", "wylądowany", "wyładowany", "wyładowywany", "wyłajany", "wyłamany", "wyłamywany", "wyłaniany", "wylansowany", "wylany", "wyłapany", "wyłapywany", "wyławiany", "wyleasingowany", "wyleczony", "wylęgany", "wylegimytowany", "wylewany", "wyłgany", "wylicytowany", "wyliczany", "wyliczony", "wylizany", "wylizywany", "wylogowany", "wyłoniony", "wylosowany", "wyłowiony", "wyłożony", "wyłudzany", "wyłudzony", "wyłupany", "wyłuskany", "wyłuskiwany", "wyłuszczony", "wyluzowany", "wymacany", "wymachiwany", "wymagany", "wymahiwany", "wymalowany", "wymamrotany", "wymanewrowany", "wymarzony", "wymasowany", "wymawiany", "wymazany", "wymazywany", "wymeldowany", "wymeldowywany", "wymiatany", "wymieciony", "wymieniany", "wymieniony", "wymierzany", "wymieszany", "wymigany", "wymigiwany", "wymijany", "wyminięty", "wymknięty", "wymoczony", "wymodelowany", "wymontowany", "wymordowany", "wymsknięty", "wymuszany", "wymyślany", "wymyślony", "wymyty", "wynagradzany", "wynagrodzony", "wynajdowany", "wynajdywany", "wynajęty", "wynajmowany", "wynaleziony", "wynarodowiony", "wynegocjowany", "wyniesiony", "wyniknięty", "wyniszczany", "wyniszczony", "wyniuchany", "wynoszony", "wynurzany", "wyobrażany", "wyobrażony", "wyodrębniony", "wyolbrzymiany", "wyolbrzymiony", "wyorbowany", "wyosiowany", "wyostrzany", "wyostrzony", "wypaczany", "wypakowany", "wypakowywany", "wypalany", "wypalony", "wypałowany", "wyparowany", "wyparty", "wypasany", "wypastowany", "wypatroszony", "wypatrywany", "wypatrzony", "wypchany", "wypchnięty", "wypędzany", "wypędzlowany", "wypełniany", "wypełniony", "wypersfadowany", "wyperswadowany", "wypierany", "wypięty", "wypijany", "wypinany", "wypisany", "wypisywany", "wypity", "wypłacany", "wypłacony", "wypłakany", "wypłakiwany", "wypłaszczony", "wyplatany", "wyplątany", "wypleniony", "wyplewiony", "wypłoszony", "wypłukany", "wypłukiwany", "wypluty", "wypluwany", "wypocony", "wypoczęty", "wypolerowany", "wypominany", "wypomniany", "wypompowany", "wypompowywany", "wyposażony", "wypowiadany", "wypowiedziany", "wypoziomowany", "wypożyczany", "wypracowany", "wypracowywany", "wyprany", "wyprasowany", "wypraszany", "wyprawiany", "wyprawiony", "wypróbowany", "wyprodukowany", "wyprojektowany", "wypromieniowany", "wypromowany", "wyprostowany", "wyprostowywany", "wyproszony", "wyprowadzany", "wyprowadzony", "wypróżniany", "wypróżniony", "wypruty", "wypruwany", "wyprzedany", "wyprzedawany", "wyprzedzany", "wyprzedzony", "wyprzęgany", "wypstrykany", "wypucowany", "wypuszczany", "wypuszczony", "wypychany", "wypytany", "wypytywany", "wyrąbany", "wyrabiany", "wyrąbywany", "wyratowany", "wyrażany", "wyrażony", "wyrecytowany", "wyręczany", "wyręczony", "wyregulowany", "wyrejestrowany", "wyremontowany", "wyreżyserowany", "wyrobiony", "wyrolowany", "wyrośnięty", "wyrównany", "wyrównywany", "wyróżniany", "wyróżniony", "wyrugowany", "wyruszany", "wyrwany", "wyrypany", "wyrysowany", "wyryty", "wyrywany", "wyrządzony", "wyrzeźbiony", "wyrżnięty", "wyrzucany", "wyrzucony", "wyrzygany", "wyrzynany", "wyrzywany", "wysączony", "wysadzany", "wysadzony", "wyschnięty", "wyściskany", "wyselekcjonowany", "wysępiony", "wysiadywany", "wysiedzony", "wysilany", "wysilony", "wyskakiwany", "wyskalowany", "wyskoczony", "wyskrobany", "wyskubywany", "wysłany", "wyśledzony", "wyślizgiwany", "wyślizgnięty", "wysłowiony", "wysłuchany", "wysłuchiwany", "wysmagany", "wysmarkany", "wysmarowany", "wysmażany", "wysmażony", "wyśmiany", "wyśmiewany", "wysmołowany", "wysmyrany", "wyśniony", "wysnuty", "wysnuwany", "wysondowany", "wyspecjalizowany", "wyśpiewany", "wyśpiewywany", "wyspowiadany", "wysprzątany", "wysprzedany", "wyssany", "wystartowany", "wystawiony", "wysterelizowany", "wysterylizowany", "wystosowany", "wystosowywany", "wystraszony", "wystrojony", "wystrugany", "wystrychnięty", "wystrzegany", "wystrzelany", "wystrzeliwany", "wystrzelony", "wystudzony", "wystukany", "wystukiwany", "wystygnięty", "wysunięty", "wysuszany", "wysuwany", "wyswatany", "wyświadczany", "wyświadczony", "wyświetlany", "wyświetlony", "wyswobodzony", "wysyłany", "wysypany", "wysypywany", "wysysany", "wyszabrowany", "wyszalany", "wyszarpany", "wyszarpnięty", "wyszasowany", "wyszczotkowany", "wyszczuplony", "wyszeptany", "wyszkolony", "wyszlifowany", "wyszorowany", "wyszperany", "wyszukany", "wyszukiwany", "wyszumiony", "wyszykowany", "wyszyty", "wytapetowany", "wytargany", "wytargowany", "wytarty", "wytarzany", "wytaszczony", "wytatuowany", "wytchnięty", "wytępiony", "wytknięty", "wytłoczony", "wytłumaczony", "wytłumiony", "wytoczony", "wytrąbiony", "wytrącany", "wytrącony", "wytransmitowany", "wytransportowany", "wytrenowany", "wytresowany", "wytriangulowany", "wytropiony", "wytruty", "wytrząsany", "wytrzasnięty", "wytrząśnięty", "wytrzebiony", "wytrzepany", "wytrzeszczany", "wytrzeźwiany", "wytrzymany", "wytrzymywany", "wytwarzany", "wytworzony", "wytyczony", "wytykany", "wytypowany", "wyuczony", "wywabiany", "wywabiony", "wywąchany", "wywalany", "wywalczony", "wywalony", "wywarty", "wywarzany", "wyważany", "wyważony", "wywęszany", "wywężykowany", "wywiany", "wywiązany", "wywiązywany", "wywierany", "wywiercony", "wywieszany", "wywieszony", "wywietrzony", "wywieziony", "wywijany", "wywindowany", "wywinięty", "wywłaszczony", "wywlekany", "wywnętrzniony", "wywnioskowany", "wywodzony", "wywolany", "wywoływany", "wywoskowany", "wywożony", "wywracany", "wywrócony", "wywróżony", "wywyższany", "wyżalony", "wyzbyty", "wyzdrowiony", "wyżebrany", "wyżerany", "wyzerowany", "wyzionięty", "wyznaczany", "wyznaczony", "wyznany", "wyznawany", "wyzwalany", "wyzwany", "wyzwolony", "wyzygzakowany", "wyżynany", "wyzyskany", "wyzyskiwany", "wyżyty", "wyzywany", "wyżywany", "wyżywiony", "wzbijany", "wzbity", "wzbogacany", "wzbogacony", "wzbraniany", "wzbudzany", "wzbudzony", "wzburzany", "wzburzony", "wżeniony", "wzięty", "wzmacniony", "wzmagany", "wzmocniony", "wznawiany", "wzniecany", "wznieciony", "wzniesięty", "wznoszony", "wznowiony", "wzorowany", "wzrośnięty", "wzruszony", "wzwyżany", "wzywany", "zaabordowany", "zaadaptowany", "zaadoptowany", "zaadresowany", "zaakcentowany", "zaakceptowany", "zaaklimatyzowany", "zaalarmowany", "zaanektowany", "zaangażowany", "zaanonsowany", "zaapelowany", "zaaplikowany", "zaaportowany", "zaaprobowany", "zaaranżowany", "zaaresztowany", "zaatakowany", "zabaczony", "zabalowany", "zabandażowany", "zabarwiony", "zabarykadowany", "zabawiany", "zabawiony", "zabepieczany", "zabetonowany", "zabezpieczony", "zabierany", "zabity", "zabłądzony", "zablefowany", "zabłocony", "zablokowany", "zabraniany", "zabrany", "zabrnięty", "zabroniony", "zabrudzony", "zabudowany", "zabukowany", "zabulony", "zaburzony", "zabutelkowany", "zacementowany", "zacerowany", "zachciany", "zachęcany", "zachęcony", "zachlapany", "zachodzony", "zachomikowany", "zachorowany", "zachowany", "zachowywany", "zachwalany", "zachwalony", "zachwiany", "zachwycony", "zaciągany", "zaciągnięty", "zaciążony", "zaciekawiony", "zaciemniany", "zaciemniony", "zacierany", "zacieśniony", "zacięty", "zacinany", "zaciskany", "zaciśnięty", "zaćmiony", "zacumowany", "zacytowany", "zaczadzony", "zaczarowany", "Zaczepiany", "zaczepiony", "zaczerpany", "zaczesany", "zaczęty", "zaczołgany", "zaczynany", "zadarty", "zadawalany", "zadawany", "zadbany", "zadebiutowany", "zadedykowany", "zadeklamowany", "zadeklarowany", "zademonstrowany", "zadenucjowany", "zadepeszowany", "zadeptany", "zadeptywany", "zadęty", "zadławiony", "żądlony", "zadłużany", "zadłużony", "zadokowany", "zadomowiony", "zadowalany", "zadrapany", "zadraśnięty", "zadręczany", "zadręczony", "zadrutowany", "zadurzany", "zadurzony", "zaduszony", "zadymiony", "zadźgany", "zadziobany", "zadziwiany", "zadziwiony", "zafakturowany", "zafałszowany", "zafarbowany", "zafiksowany", "zafundowany", "zagadany", "zagadnięty", "zagadywany", "zagajony", "zaganiany", "zagapiony", "zagarażowany", "zagarniany", "zagarnięty", "zagaszony", "zagazowany", "zagęszczony", "zagięty", "zaginany", "zaginięty", "zagłębiany", "zagłębiony", "zagłodzony", "zagłuszany", "zagłuszony", "zagmatwany", "zagnany", "zagnieżdżony", "zagojony", "zagoniony", "zagospodarowany", "zagotowany", "zagrabiony", "zagradzany", "zagrażany", "zagrodzony", "zagrywany", "zagryzany", "zagryziony", "zagrzany", "zagrzebany", "zagrzewany", "zagubiony", "zagwarantowany", "zahaczony", "zahamowany", "zahandlowany", "zaharowany", "zahartowany", "zahipnotyzowany", "zaholowany", "zaimitowany", "zaimplantowany", "zaimplementowany", "zaimprowizowany", "zainaugurowany", "zainfekowany", "zainicjowany", "zainkasowany", "zainscenizowany", "zainspirowany", "zainstalowany", "zainteresowany", "zaintrygowany", "zaintubowany", "zainwestowany", "zaizolowany", "zajadany", "zajany", "zajarany", "zajechany", "zajęty", "zajmowany", "zakablowany", "zakamuflowany", "zakasany", "zakasowany", "zakąszany", "zakatalogowany", "zakatowany", "zakatrupiony", "zakazany", "zakażany", "zakazywany", "zakiszony", "zakładany", "zaklasyfikowany", "zaklejany", "zaklejony", "zaklepany", "zaklepywany", "zaklinany", "zaklinowany", "zakłócany", "zakłócony", "zaklopotany", "zakłuty", "zakneblowany", "zakodowany", "zakolczykowany", "zakolorowany", "zakołysany", "zakomunikowany", "zakończony", "zakonserwowany", "zakopany", "zakopywany", "zakorzeniany", "zakorzeniony", "zakoszony", "zakosztowany", "zakotwiczany", "zakotwiczony", "zakpiony", "zakradany", "zakręcany", "zakręcony", "zakreślany", "zakreślony", "zakrwawiony", "zakryty", "zakrywany", "zakrzyczany", "zakrzyknięty", "zakrzywiany", "zakrzywiony", "zaksięgowany", "zaktualizowany", "zaktywizowany", "zaktywowany", "zakumany", "zakupiony", "zakurzony", "zakuty", "zakuwany", "zakwaterowany", "zakwestionować", "zakwitnięty", "załączony", "załadowany", "załagodzony", "zalamany", "zalaminowany", "załamywany", "zalany", "załapany", "załatany", "załatwiany", "załatwiony", "zalatywany", "zalecany", "zalecony", "zaleczony", "zalegalizowany", "zalegany", "zalepiany", "zalepiony", "zalewany", "zaliczany", "zaliczony", "załkany", "zalogowany", "żałowany", "założony", "zaludniony", "zamacany", "zamachnięty", "zamącony", "zamalowany", "zamanewrowany", "zamanifestowany", "zamarkowany", "zamartwiany", "zamarynowany", "zamarzany", "zamarznięty", "zamaskowany", "zamawiany", "zamazany", "zamazywany", "zamęczany", "zamęczony", "zameldowany", "zamelinowany", "zamerykanizowany", "zamiatany", "zamieniany", "zamieniony", "zamieszany", "zamieszczany", "zamieszczony", "zamieszkany", "zamieszkiwany", "zaminowany", "zamknięty", "zamocowany", "zamoczony", "zamontowany", "zamordowany", "zamortyzowany", "zamotany", "zamówiony", "zamrażany", "zamroczony", "zamrożony", "zamulany", "zamurowany", "zamydlony", "zamykany", "zanalizowany", "zanegowany", "zaniechany", "zanieczyszczany", "zanieczyszczony", "zaniedbany", "zaniedbywany", "zaniepokojony", "zaniesiony", "zanihilowany", "zanikany", "zaniknięty", "zaniżany", "zaniżony", "zanoszony", "zanotowany", "zanucony", "zanudzany", "zanudzony", "zanurzany", "zanurzony", "zanużony", "zaobaczony", "zaobserwowany", "zaoferowany", "zaofiarowany", "zaogniany", "zaogniony", "zaokrąglany", "zaokrąglony", "zaokrętowany", "zaopatrywany", "zaopatrzony", "zaopiekowany", "zaorany", "zaostrzany", "zaostrzony", "zaoszczędzony", "zapadany", "zapakowany", "zapalany", "zapalony", "zapamiętany", "zapamiętywany", "zapanowany", "zaparkowany", "zaparowywany", "zaparzany", "zaparzony", "zapaskudzony", "zapauzowany", "zapchany", "zapędzany", "zapełniany", "zapełniony", "zaperfumowany", "zapeszany", "zapewniany", "zapewniony", "zapieczętowany", "zapierany", "zapięty", "zapijany", "zapinany", "zapisany", "zapisuwany", "zapity", "zapłacony", "zapładniany", "zaplamiony", "zaplanowany", "zaplątany", "zapłodniony", "zaplombowany", "zapobiegany", "zapodany", "zapodawany", "zapodziany", "zapokojony", "zapolowany", "zapominany", "zapomniany", "zapowiadany", "zapowiedziany", "zapoznany", "zapoznawany", "zapożyczony", "zapracowywany", "zaprany", "zaprasowywany", "zapraszany", "zaprawiony", "zaprenumerowany", "zaprezentowany", "Zaprogramowany", "zaprojektowany", "zaproponowany", "zaproszony", "zaprotokołowany", "zaprowadzany", "zaprowadzony", "zaprzątany", "zaprzeczany", "zaprzeczony", "zaprzedany", "zaprzedawany", "zaprzęgany", "zaprzepaszczany", "zaprzestany", "zaprzestawany", "zaprzyjaźniony", "zapudłowany", "zapunktowany", "zapuszczany", "zapuszczony", "zapuszkowany", "zapychany", "zapylany", "zapylony", "zapytany", "zarabiany", "zaranżowany", "zarażany", "zarażony", "zarecytowany", "zaręczany", "zaręczony", "zarejestrowany", "zareklamowany", "zarekomendowany", "zarekomondowany", "zarekwirowany", "zarezerwowany", "zarobiony", "żartowany", "zarwany", "zaryglowany", "zarymowany", "zarysowany", "zarywany", "zaryzykowany", "zarządzany", "zarżnięty", "zarzucany", "zarzynany", "zasadzony", "zaścielony", "zasegurowany", "zaserwowany", "zasiadany", "zasiany", "zasiedlony", "zasięgany", "zasięgnięty", "zasiewany", "zasilany", "zasilony", "zaskakiwany", "zaskarbiony", "zaskoczony", "zaskrobany", "zasłaniany", "zaślepiany", "zaślepiony", "zasłodzony", "zasłoniony", "zasłużony", "zasmakowany", "zaśmiecany", "zaśmiecony", "zasmradzany", "zasmrodzony", "zasmucany", "zasmucony", "zasolony", "zaspakajany", "zaśpiewany", "zaspokajany", "zaspokojony", "zasponsorowany", "zaśrubowywany", "zassany", "zastany", "zastąpiony", "zastawiany", "zastawiony", "zastępowany", "zastopowany", "zastosowany", "zastraszany", "zastraszony", "zastrzelony", "zasugerowany", "zasunięty", "zasuwany", "zaświadczony", "zaświecony", "zaświoniony", "zasyfiony", "zasygnalizowany", "zasymilowany", "zasymulowany", "zasypany", "zasypywany", "zasysany", "zaszachowany", "zaszantażowany", "zaszargany", "zaszczepiany", "zaszczepiony", "zaszczuty", "zaszczycany", "zaszczycony", "zaszeptany", "zaszeregowany", "zaszlachtowany", "zasznurowany", "zaszpachlowany", "zasztyletowany", "zaszufladkowany", "zaszyfrowany", "zaszyty", "zaszywany", "zataczany", "zatajany", "zatajony", "zatamowany", "zatankowany", "zatapiany", "zatargany", "zatarty", "zatelegrafowany", "zatemperowany", "zatęskniony", "zatkany", "zatknięty", "zatoczony", "zatonięty", "zatopiony", "zatracany", "zatracony", "zatriumfowany", "zatrudniany", "zatrudniony", "zatruty", "zatruwany", "zatrzaskiwany", "zatrzaśnięty", "zatrząśnięty", "zatrzymany", "zatrzymywany", "zatuszowany", "zatwierdzany", "zatwierdzony", "zatykany", "zatynkowany", "zatytułowany", "zauploadowany", "zauroczony", "zautomatyzowany", "zauważany", "zauważony", "zawadzany", "zawalany", "zawalczony", "zawalony", "zawarty", "zaważony", "zawdzięczany", "zawetowany", "zawężony", "zawiadamiany", "zawiadomiony", "zawiązany", "zawiązywany", "zawiedzony", "zawierany", "zawierzony", "zawieszany", "zawieszony", "zawieziony", "zawijany", "zawinięty", "zawiniony", "zawiśnięty", "zawitany", "zawładnięty", "zawłaszczony", "zawodzony", "zawojowany", "zawołany", "zawoskowany", "zawożony", "zawracany", "zawrócony", "zawstydzany", "zażądany", "zażartowany", "zazdroszczony", "zażegnany", "zażenowany", "zaznaczany", "zaznajomiony", "zaznany", "zaznawany", "zażyczony", "zażyty", "zażywany", "zbaczany", "zbadany", "zbagatelizowany", "zbajerowany", "zbałamucony", "zbalansowany", "zbalsamowany", "zbankrutowany", "zbawiany", "zbawiony", "zbesztany", "zbezczeszczony", "zbierany", "zbijany", "zbity", "zbliżony", "zbluzgany", "zbojkotowany", "zbrojony", "zbrukany", "zbszczecony", "zbudowany", "zbudzony", "zbuntowany", "zburzony", "zbyty", "zbywany", "zchwytany", "zcięty", "zciszony", "zdany", "zdarty", "zdeaktywowany", "zdecydowany", "zdefiniowany", "zdeflorowany", "zdegradowany", "zdejmowany", "zdeklarowany", "zdekodowany", "zdekompresowany", "zdekoncentrowany", "zdekonstruowany", "zdelegalizowany", "zdemaskowany", "zdementowany", "zdemolowany", "zdemontowany", "zdemoralizowany", "zdenerwowany", "zdeponowany", "zdeprymowany", "zdeptany", "zderzany", "zderzony", "zdestabilizowany", "Zdetonowany", "zdetronizowany", "zdewastowany", "zdewaulowany", "zdezerterowany", "zdezintegrowany", "zdezorientowany", "zdezynfektowany", "zdiagnozowany", "zdjęty", "zdławiony", "zdmuchiwany", "zdmuchnięty", "zdobyty", "zdobywany", "zdołowany", "zdominowany", "zdopingowany", "zdrabniany", "zdradzany", "zdradzony", "zdrapany", "zdrapywany", "zdrutowany", "zdruzgotany", "zduplikowany", "zduszony", "zdwojony", "zdyscyplinowany", "zdyskredytowany", "zdyskwalifikowany", "zdystansowany", "zdzielony", "zdzierany", "zdzierżony", "zdziesiątkowany", "Zdzwoniony", "zebrany", "zechciany", "zedytowany", "żegnany", "żeniony", "zepchnięty", "zepsuty", "żerowany", "zerwany", "zerżnięty", "zeskakiwany", "zeskanowany", "zeskrobywany", "zesłany", "ześlizgiwany", "ześlizgnięty", "zesmolony", "zespawiany", "zespolony", "zessany", "zestawiany", "zestawiony", "zestresowany", "zestrzeliwany", "zestrzelony", "zeswatany", "zeszklony", "zeszlifowany", "zetknięty", "zezłoszczony", "zeznany", "zeznawany", "zezwalany", "zezwolony", "zfinansowany", "zgadany", "zgadywany", "zgajany", "zganiony", "zgarnięty", "zgaśnięty", "zgaszony", "zgięty", "zginany", "zgładzony", "zgłaszany", "zgłębiany", "zgłębiony", "zgłośniony", "zgłoszony", "zgłuszony", "zgniatany", "zgnieciony", "zgnity", "zgnojony", "zgodzony", "zgolony", "zgoniony", "zgotowany", "zgrabiony", "zgrillowany", "zgromadzany", "zgromadzony", "zgrupowany", "zgrzeszony", "zgrzytany", "zgubiony", "zgwałcony", "zhackowany", "zhakowany", "zhańbiony", "zhandlowany", "zharmonizowany", "zidentyfikowany", "ziewany", "zignorowany", "zilustrowany", "zinfiltrowany", "zintegrowany", "zintensyfikowany", "zinterpretowany", "zinwentaryzowany", "zirytowany", "zjadany", "zjawiany", "zjednany", "zjednoczony", "zjedzony", "zjeżdżony", "zkontaktowany", "zkserowany", "złączony", "złagodzony", "złajany", "złamany", "zlany", "złapany", "zlecany", "zlecony", "zlekceważony", "zlepiany", "zlepiony", "zlewany", "zlicytowany", "zliczany", "zliczony", "zlikwidowany", "zlinczowany", "zlitowany", "zlizany", "zlizywany", "złoity", "zlokalizowany", "złomowany", "żłopany", "złowiony", "złożony", "złupiony", "złuszczany", "zluzowany", "zmacany", "zmącony", "zmagany", "zmagazynowany", "zmajstrowany", "zmaksylizowany", "zmanipulowany", "zmarnowany", "zmartwychwstany", "zmarznięty", "zmasakrowany", "zmaterializowany", "zmawiany", "zmazany", "zmazywany", "zmbobardowany", "zmiatany", "zmiażdżony", "zmiękczony", "zmielony", "zmieniany", "zmieniony", "zmierzany", "zmierzony", "zmierzwiony", "zmieszany", "zmieszczony", "zmiksowany", "zminiaturyzowany", "zminimalizowany", "zmniejszany", "zmniejszony", "zmobilizowany", "zmoczony", "zmodernizowany", "zmodyfikowany", "zmoknięty", "zmonopolizowany", "zmontowany", "zmostkowany", "zmotywowany", "zmówiony", "zmrożony", "zmrużony", "zmumifikowany", "zmuszany", "zmuszony", "zmutowany", "zmyślany", "zmyty", "zmywany", "znacjonalizowany", "znajdowany", "znajdywany", "znakowany", "znaleziony", "znany", "znęcany", "zneutralizowany", "zniechęcony", "znieczulony", "zniekształcany", "zniekształcony", "znienawidzony", "znieprawiony", "zniesiony", "zniesławiany", "zniesławiony", "zniewalany", "znieważany", "znieważony", "zniewolony", "zniszczony", "zniweczony", "zniwelowany", "zniżany", "zniżony", "znokautowany", "znormalniony", "znoszony", "znudzony", "zobaczony", "zobowiązany", "zobrazowany", "zogniskowany", "żonglowany", "zoomowany", "zoperowany", "zoptymalizowany", "zorbity", "zorganizowany", "zorientowany", "zostawiany", "zostawiony", "zpłacony", "zprowokowany", "zrabowany", "zrachowany", "zracjonalizowany", "zraniony", "zraportowany", "zrażany", "zrażony", "zrealizowany", "zrecenzowany", "zredagowany", "zredukowany", "zreferowany", "zreformowany", "zrefowany", "zrefundowany", "zregenerowany", "zrehabilitowany", "zreinkarnowany", "zreintegrowany", "zrekonfigurowany", "zrekonstruowany", "zrekrutowany", "zrekrystalizowany", "zrelacjonowany", "zrelaksowany", "zremiksowany", "zremisowany", "zreorganizowany", "zreperowany", "zreplikowany", "zresetowany", "zresocjalizowany", "zrestartowany", "zrestrukturyzowany", "zrewanżowany", "zrewidowany", "zrewolucjonizowany", "zrezygnowany", "zrobiony", "zrolowany", "zroszony", "zrównany", "zrównoważony", "zrównywany", "zróżnicowany", "zrozumiany", "zrugany", "zruinowany", "zrujnowany", "zrymowany", "zrywany", "zrzędzony", "zrzeszony", "zrzucany", "zrzucony", "zsumowany", "zsunięty", "zsuwany", "zsynchronizowany", "zsyntetyzowany", "zsypywany", "zszargany", "zszokowany", "zszyty", "zszywany", "ztarty", "żuty", "zutylizowany", "zużyty", "zużywany", "zwabiany", "zwabiony", "zwalany", "zwalczony", "zwalniany", "zwalony", "zwany", "zwaporyzowany", "zwątpiony", "zważany", "zważony", "zwędzony", "zwerbalizowany", "zwerbowany", "zweryfikowany", "zwęszony", "zwężony", "zwiastowany", "związany", "związywany", "zwichnięty", "zwiedzany", "zwiedzony", "zwiększony", "zwieńczony", "zwierzany", "zwieszany", "zwieszony", "zwietrzony", "zwijany", "zwilżony", "zwinięty", "zwizualizowany", "zwlekany", "zwodowany", "zwodzony", "zwołany", "zwolniony", "zwoływany", "zwożony", "zwracany", "zwrócony", "zwyciężany", "zwymiotowany", "życzony", "żygany", "zygzakowany", "zyskany", "zyskiwany", "żyty", "zżarty", "zżerany", "zżynany", "zżyty", "abdykowana", "absorbowana", "adaptowana", "administrowana", "adoptowana", "adorowana", "adresowana", "afiszowana", "agitowana", "akcentowana", "akceptowana", "aklimatyzowana", "akompaniowana", "aktualizowana", "aktywowana", "akumulowana", "alaromowana", "alienowana", "amerykanizowana", "amortyzowana", "amputowana", "analizowana", "angażowana", "anihilowana", "animowana", "anonsowana", "antropomorfizowana", "antydatowana", "anulowana", "apelowana", "aportowana", "aranżowana", "archiwizowana", "aresztowana", "argumentowana", "artykułowana", "ascendowana", "asekurowana", "asymilowana", "asystowana", "atakowana", "autoryzowana", "awanturowana", "babrana", "baczona", "badana", "bagatelizowana", "bajerowana", "bałamucona", "balangowana", "balansowana", "banalizowana", "bandażowana", "bankrutowana", "baraszkowana", "barwiona", "bawiona", "bazgrana", "bazowana", "bębniona", "bełkotana", "besztana", "biadolona", "biczowana", "bita", "błagana", "błaznowana", "blefowana", "błogosławiona", "blokowana", "bluzgana", "błyskana", "błyszcząca", "boczona", "bogacona", "bojkotowana", "boksowana", "bombardowana", "bopowana", "borowana", "brandzlowana", "brana", "brasowana", "bratana", "bredzona", "brnięta", "brodzona", "broniona", "brudzona", "brylowana", "budowana", "budzona", "bujana", "bulona", "bulwersowana", "bumelowana", "burzona", "butelkowana", "bywana", "cackana", "całowana", "capnięta", "cechowana", "celebrowana", "celowana", "ceniona", "cenzurowana", "chciana", "chlana", "chlapana", "chlapnięta", "chlastana", "chłodzona", "chlostana", "chlubiona", "chodowana", "chomikowana", "chorowana", "chowana", "chroniona", "chrupana", "chrzczona", "chuta", "chwalona", "chwycona", "chwytana", "chybotana", "chylona", "ciachnięta", "ciągana", "ciągnięta", "ciemiężona", "cierpiana", "cieszona", "cięta", "ciskana", "ciśnięta", "ciułana", "cmokana", "cmoknięta", "cofana", "cofnięta", "ćpana", "cucona", "cudzołożona", "cumowana", "ćwiartowana", "ćwiczona", "cykana", "cytowana", "czajona", "czarowana", "czczona", "czepiana", "czepiona", "czerpana", "czesana", "częstowana", "czochrana", "czołgana", "czuta", "czytana", "czyta", "darowana", "darta", "darzona", "datowana", "dawana", "dbana", "deaktywowana", "debatowana", "dedukowana", "dedykowana", "defibrylowana", "defilowana", "definiowana", "defraudowana", "degradowana", "degustowana", "deklamowana", "deklarowana", "dekodowana", "dekompresowana", "dekorowana", "dekretowana", "delegowana", "delektowana", "deliberowana", "demaskowana", "dementowana", "demolowana", "demonizowana", "demonstrowana", "demoralizowana", "denerwowana", "denuncjowana", "depeszowana", "depilowana", "deportowana", "deprawowana", "deptana", "deratyzowana", "destabilizowana", "destylowana", "desygnowana", "determinowana", "detonowana", "dewastowana", "dewaulowana", "dezaktywowana", "dezorientowana", "dezynfekowana", "diagnozowana", "dilowana", "dłubana", "dłużona", "dmuchana", "dmuchnięta", "dobiegana", "dobierana", "dobijana", "dobita", "dobrana", "dobudzona", "dobyta", "doceniana", "doceniona", "dochodzona", "dochowana", "dochowywana", "dociągnięta", "dociekana", "docięta", "docinana", "dociskana", "dociśnięta", "doczekana", "doczepiona", "doczołgana", "doczyszczona", "doczytana", "dodana", "dodawana", "dodrukowana", "dodrukowywana", "dofinansowana", "dofinansowywana", "dogadana", "dogadywana", "dogadzana", "doganiana", "doglądana", "doglądnięta", "dognana", "dogodzona", "dogoniona", "dograna", "dogryzana", "dogryziona", "dogrzana", "dogrzebana", "doinformowana", "dojeżdżana", "dojona", "dojrzana", "dojrzewana", "dokańczana", "dokarmiana", "dokarmiona", "dokazana", "dokazywana", "dokładana", "doklejona", "dokonana", "dokończona", "dokonywana", "dokopana", "dokopywana", "dokowana", "dokręcana", "dokręcona", "dokształcana", "dokształcona", "dokuczana", "dokumentowana", "dokupiona", "dołączana", "dołączona", "doładowana", "dolana", "dolewana", "doliczona", "dołowana", "dołożona", "domagana", "domalowana", "domknięta", "domniewywana", "domówiona", "domyślana", "domyślona", "domyta", "doniesiona", "donoszona", "dopadana", "dopadnięta", "dopakowana", "dopalona", "dopasowana", "dopasowywana", "dopatrywana", "dopatrzona", "dopchana", "dopchnięta", "dopełniana", "dopełniona", "dopieszczona", "dopięta", "dopijana", "dopilnowana", "dopingowana", "dopisana", "dopisywana", "dopita", "dopłacana", "dopłacona", "dopłynięta", "dopolerowana", "dopompowana", "dopowiedziana", "dopracowana", "dopracowywana", "doprana", "doprawiona", "doprecyzowana", "doproszona", "doprowadzana", "doprowadzona", "dopucowana", "dopuszczana", "dopuszczona", "dopytywana", "dorabiana", "doradzana", "doradzona", "doręczana", "doręczona", "dorobiona", "dorównana", "dorównywana", "dorwana", "dorysowana", "dorzucana", "dorzucona", "doścignięta", "dosiadana", "dosięgnięta", "doskoczona", "doskonalona", "dosładzana", "dosłana", "dosłyszana", "dosolona", "dośrodkowana", "dossana", "dostana", "dostąpiona", "dostarczana", "dostarczona", "dostawana", "dostawiana", "dostawiona", "dostosowana", "dostosowywana", "dostrajana", "dostrojona", "dostrzegana", "dosunięta", "dosuwana", "doświadczana", "doświetlona", "dosypana", "dosypywana", "doszkolona", "doszlifowana", "doszorowana", "doszukana", "doszukiwana", "doszyta", "dotankowana", "dotankowywana", "dotargana", "dotaszczona", "dotknięta", "dotleniona", "dotłumaczona", "dotowana", "dotrwana", "dotrzymana", "dotrzymywana", "dotykana", "douczana", "douczona", "dowalona", "dowieziona", "dowodzona", "dowożona", "doznana", "doznawana", "dozorowana", "dozowana", "dożyta", "dożywiona", "dramatyzowana", "drapana", "drapnięta", "draśnięta", "drażniona", "drążona", "dręczona", "drenowana", "drgana", "drgnięta", "drukowana", "dryblowana", "dryfowana", "drzemana", "dubbingowana", "dublowana", "duplikowana", "duszona", "dworowana", "dygotana", "dyktowana", "dymana", "dymiona", "dyrygowana", "dyscyplinowana", "dyskredytowana", "dyskryminowana", "dyskutowana", "dyskwalifikowana", "dysponowana", "dystansowana", "dystrybuowana", "dywagowana", "dźgana", "dźgnięta", "dziabnięta", "dziedziczona", "dziękowana", "dzielona", "dziergana", "dzierżona", "dziobana", "dziurawiona", "dziurkowana", "dźwigana", "dźwignięta", "edukowana", "edytowana", "egzaminowana", "egzekutowana", "egzekwowana", "ekscytowana", "ekshumowana", "ekskomunikowana", "eksmitowana", "ekspandowana", "eksperymentowana", "eksploatowana", "eksplorowana", "eksponowana", "eksportowana", "eksterminowana", "ekstradowana", "ekstrapolowana", "eliminowana", "emancypowana", "emanowaa", "emigrowana", "emitowana", "energetyzowana", "eskortowana", "etykietowana", "ewakuowana", "ewaluowana", "fabrykowana", "falowana", "fałszowana", "farbowana", "faszerowana", "faulowana", "faworyzowana", "fechtowana", "fermentowana", "ferowana", "figurowana", "filetowana", "filmowana", "filtrowana", "finalizowana", "finansowana", "firmowana", "fleszowana", "folgowana", "formułowana", "forsowana", "fotografowana", "fundowana", "gadana", "ganiana", "garbiona", "gardzona", "garnirowana", "gaszona", "gawędzona", "gaworzona", "gazowana", "gdakana", "gderana", "generalizowana", "generowana", "gięta", "gilgotana", "gładzona", "głaskana", "głodowana", "głodzona", "gloryfikowana", "głosowana", "głoszona", "głowiona", "gmatwana", "gmerana", "gnana", "gnębiona", "gnieciona", "gnita", "gnojona", "godzona", "gojona", "golnięta", "golona", "goniona", "googlowana", "gospodarowana", "goszczona", "gotowana", "grabiona", "grana", "grasowana", "gratulowana", "grillowana", "grilowana", "gromadzona", "gromiona", "grożona", "gruchana", "gruchnięta", "grupowana", "grywana", "gryziona", "grzana", "grzechotana", "gubiona", "gustowana", "gwałcona", "gwarantowana", "gwizdana", "gwizdnięta", "hackowana", "haftowana", "hajtnięta", "hamowana", "hańbiona", "handlowana", "harcowana", "harmonizowana", "harowana", "hartowana", "hibernowana", "hipnotyzowana", "hodowana", "holowana", "hołubiona", "honorowana", "hospitalizowana", "huknięta", "hulana", "huśtana", "idealizowana", "identyfikowana", "ignorowana", "igrana", "ilustrowana", "imitowana", "implantowana", "implodowana", "imponowana", "importowana", "improwizowana", "indokrynowana", "indukowana", "infekowana", "infiltrowana", "informowana", "ingerowana", "inhalowana", "inscenizowana", "inspirowana", "instalowana", "instruowana", "insynuowana", "integrowana", "interpretowana", "interweniowana", "intonowana", "intubowana", "inwestowana", "inwigilowana", "irytowana", "iskrzona", "izolowana", "jadana", "jawiona", "jazgotana", "jednoczona", "jedzona", "kablowana", "kadzona", "kalana", "kaleczona", "kalkulowana", "kamerowana", "kamienowana", "kamuflowana", "kanalizowana", "kantowanta", "kąpana", "kapitulowana", "kapowana", "karana", "karbonizowana", "karcona", "karczowana", "karmiona", "kartkowana", "kąsana", "kasowana", "kastrowana", "katalogowana", "katapultowana", "katowana", "katrupiona", "kierowana", "kimana", "kiszona", "kiwana", "kiwnięta", "kłaniana", "klapana", "klapnięta", "klarowana", "klasyfikowana", "klębiona", "klejona", "klepana", "klepnięta", "klikana", "kliknięta", "klonowana", "kłopotana", "kłuta", "knocona", "knuta", "kochana", "koczowana", "kodowana", "kojarzona", "kojfnięta", "kojona", "kolekcjonowana", "kolektywizowana", "kolidowana", "kolonizowana", "kolorowana", "koloryzowana", "kołowana", "kołysana", "kombinowana", "komenderowana", "komentowana", "komercjalizowana", "kompensowana", "komplementowana", "komplikowana", "komponowana", "kompromitowana", "komunikowana", "konana", "koncentrowana", "kończona", "konfabulowana", "konfiskowana", "konfrontowana", "konserwowana", "konspirowana", "konstruowana", "konsultowana", "konsumowana", "kontaktowana", "kontestowana", "kontrastowana", "kontrolowana", "kontrowana", "kontynuowana", "konwertowana", "konwojowana", "koordynowana", "kopana", "kopcona", "kopiowana", "kopnięta", "kopulowana", "korelowana", "korkowana", "koronowana", "korygowana", "korzona", "korzystana", "koszona", "kotwiczona", "kozaczona", "kozłowana", "kpita", "kradziona", "krajana", "krążona", "kręcona", "kremowana", "kreowana", "krochmalona", "krojona", "kropiona", "kruszona", "krystalizowana", "kryta", "krytykowana", "krzepnięta", "krzyczana", "krzyknięta", "krzywdzona", "krzywiona", "krzyżowana", "kserowana", "księgowana", "kształcona", "kształtowana", "kulona", "kultywowana", "kumulowana", "kupczona", "kupiona", "kupowana", "kupywana", "kurczona", "kurowana", "kursowana", "kurzona", "kuszona", "kuta", "kwalifikowana", "kwestionowana", "łączona", "ładowana", "łagodzona", "łajdaczona", "lakierowana", "łamana", "lamentowana", "lansowana", "lana", "łapana", "łaskotana", "łaszona", "latana", "łatana", "lawirowana", "leczona", "legalizowana", "legitymowana", "lekceważona", "lepiona", "lewitowana", "liberowana", "licencjonowana", "licytowana", "liczona", "likwidowana", "linczowana", "liniowana", "literowana", "litowana", "lizana", "liznięta", "lobbowana", "lokalizowana", "losowana", "łowiona", "łożona", "lubiana", "łudzona", "lunatykowana", "łupana", "łupiona", "łuskana", "lustrowana", "łuszczona", "luzowana", "łykana", "łyknięta", "łyżeczkowana", "macana", "machana", "machnięta", "mącona", "maczana", "maganyzowana", "maglowana", "majaczona", "majsterkowana", "majtana", "maksymalizowana", "malowana", "maltretowana", "mamiona", "mamrotana", "manewrowana", "manifestowana", "manipulowana", "markowana", "marnotrawiona", "marnowana", "marszczona", "marynowana", "marznięta", "masakrowana", "maskowana", "masowana", "masturbowana", "mataczona", "materializowana", "mawiana", "mazana", "maznięta", "męczona", "meldowana", "merdana", "metabolizowana", "miażdżona", "mielona", "mierzona", "mierzwiona", "mieszana", "miętolona", "migana", "migdalona", "migotana", "mijana", "miksowana", "milowana", "minięta", "minimalizowana", "miotana", "mistyfikowana", "mitygowana", "mizdrzona", "mlana", "mniemana", "mnożona", "mobilizowana", "mocowana", "moczona", "modelowana", "modernizowana", "modlona", "modulowana", "modyfikowana", "molestowana", "monitorowana", "monopolizowana", "montowana", "mordowana", "motywowana", "mówiona", "mrożona", "mrugana", "mrużona", "muskana", "mutowana", "mydlona", "mylona", "myszkowana", "myta", "nabazgrana", "nabiegana", "nabierana", "nabita", "nabrana", "nabrojona", "nabrudzona", "nabyta", "nabywana", "nacelowana", "nachapana", "nachodzona", "nachwalona", "nachylona", "naciągana", "naciągnięta", "nacierana", "nacięta", "nacinana", "naciskana", "naciśnięta", "nacjonalizowana", "naczepiona", "nadana", "nadawana", "nadchodzona", "nadciągana", "nadciągnięta", "nadcięta", "nadesłana", "nadgoniona", "nadgryzana", "nadgryziona", "nadinterpretowana", "nadłożona", "nadmieniana", "nadmieniona", "nadmuchana", "nadrabiana", "nadrobiona", "nadskakiwana", "nadsłuchiwana", "nadstawiana", "nadstawiona", "nadszarpnięta", "naduszona", "nadużyta", "nadużywana", "nadwerężana", "nadwyrężana", "nadwyrężona", "nadziana", "nadzorowana", "naelektryzowana", "nafaszerowana", "nagabywana", "nagadana", "nagięta", "naginana", "nagłaszana", "nagłośniona", "nagoniona", "nagradzana", "nagrana", "nagrodzona", "nagromadzona", "nagrywana", "nagryzmolona", "nagrzana", "nagrzebana", "nagrzewana", "nagwizdana", "naigrywana", "najechana", "najęta", "najmowana", "nakarmiana", "nakarmiona", "nakazana", "nakazywana", "nakierowana", "nakierowywana", "nakładana", "nakłamana", "nakłaniana", "naklejana", "naklejona", "naklepana", "nakłoniona", "nakłuta", "nakłuwana", "nakopana", "nakręcana", "nakręcona", "nakreślana", "nakreślona", "nakruszona", "nakryta", "nakrywana", "nakrzyczana", "nakupiona", "naładowana", "nalana", "nałapana", "nalepiona", "nalewana", "naliczona", "nałowiona", "nałożona", "namaczana", "namagnetyzowana", "namalowana", "namaszczana", "namaszczona", "namawiana", "namęczona", "namierzana", "namieszana", "namoczona", "namówiona", "namydlana", "namyślona", "naniesiona", "naoliwiana", "naoliwiona", "naopowiadana", "naostrzona", "napadana", "napadnięta", "napakowana", "napalona", "naparzana", "napastowana", "napawana", "napchana", "napędzana", "napełniana", "napełniona", "napierana", "napiętnowana", "napięta", "napinana", "napisana", "napluta", "napływana", "napoczęta", "napojona", "napompowana", "napotkana", "napotykana", "napraszana", "naprawiana", "naprawiona", "naprężana", "naprężona", "napromieniowana", "naprostowana", "naprowadzana", "naprowadzona", "napsuta", "napuszczana", "napuszczona", "napychana", "napytana", "narąbana", "naradzana", "naradzona", "narastana", "narażana", "narażona", "nareperowana", "narkotyzowana", "narodzona", "naruszana", "naruszona", "narwana", "narysowana", "narzucana", "narzucona", "nasączana", "nasączona", "nasadzona", "nasiąkana", "nasilana", "nasilona", "naskakiwana", "naskoczona", "naskrobana", "naśladowana", "nasłana", "nasłuchana", "nasłuchiwana", "nasmarowana", "nastąpiona", "nastawiana", "nastawiona", "nastraszana", "nastrojona", "nastukana", "nasunięta", "nasuwana", "naświetlana", "nasycona", "nasyłana", "nasypana", "naszczana", "naszkicowana", "naszpikowana", "naszprycowana", "naszykowana", "naszyta", "naszywana", "natarta", "natchnięta", "natknięta", "natleniona", "natłuszczona", "natrafiona", "natrząsana", "natrząsnięta", "nauczana", "nauczona", "nawadniana", "nawalona", "nawiązana", "nawiązywana", "nawiedzana", "nawiedzona", "nawiercona", "nawiewana", "nawieziona", "nawigowana", "nawijana", "nawilżana", "nawilżona", "nawinięta", "nawlekana", "nawodniona", "nawoływana", "nawoskowana", "nawożona", "nawpychana", "nawracana", "nawrócona", "nawrzucana", "nawtykana", "nawymyślana", "nazbierana", "nazmyślana", "naznaczana", "naznaczona", "nazrywana", "nazwana", "nazywana", "nęcona", "negocjowana", "negowana", "nękana", "neutralizowana", "niańczona", "niecierpliwiona", "niedoceniana", "niedowidziana", "nienawidzona", "niesiona", "nikolona", "niszczona", "nitkowana", "niuchana", "niweczona", "niwelowana", "nokautowana", "nominowana", "notowana", "nucona", "numerowana", "nurtowana", "obaczona", "obadana", "obalana", "obalona", "obandażowana", "obarczana", "obarczona", "obawiana", "obchodzona", "obciągnięta", "obciążona", "obcięta", "obcinana", "obcyndalana", "obczajana", "obczajona", "obdarowana", "obdarta", "obdarzana", "obdarzona", "obdzielona", "obdzierana", "obdzwaniana", "obdzwoniona", "obejmowana", "oberwana", "obessana", "obezwładniana", "obezwładniona", "obfotografowana", "obfotografowywana", "obgadana", "obgadywana", "obgryzana", "obgryziona", "obiecana", "obiecywana", "obierana", "obijana", "obita", "objadana", "objaśniana", "objawiana", "objawiona", "objechana", "objęta", "objeżdżana", "obkręcana", "oblana", "obłapiana", "obłapywana", "obłaskawiana", "obłaskawiona", "obleciana", "oblegana", "oblewana", "obliczana", "obliczona", "oblizana", "obłowiona", "obłożona", "obluzowana", "obluzowywana", "obmacana", "obmacywana", "obmawiana", "obmyślana", "obmyślona", "obmyta", "obmywana", "obnażana", "obniżana", "obniżona", "obnoszona", "obowiązywana", "obozowana", "obrabiana", "obrabowana", "obracana", "obradowana", "obramowana", "obraniana", "obrana", "obrastana", "obrażana", "obrażona", "obrobiona", "obrócona", "obrodzona", "obroniona", "obrysowana", "obrywana", "obryzgana", "obrzezana", "obrzucana", "obrzucona", "obrzygana", "obsadzana", "obsadzona", "obściskiwana", "obserwowana", "obsiana", "obsikana", "obsikiwana", "obskakiwana", "obskoczona", "obskubana", "obskubywana", "obśliniana", "obśliniona", "obsługiwana", "obsłużona", "obsmarowana", "obstawiana", "obstawiona", "obstrzeliwana", "obsunięta", "obsuwana", "obsypana", "obsypywana", "obszukana", "obszukiwana", "obtaczana", "obtarta", "obtoczona", "obudzona", "obwąchana", "obwąchiwana", "obwiązana", "obwiązywana", "obwieszana", "obwieszczana", "obwieszczona", "obwieszona", "obwijana", "obwiniana", "obwinięta", "obwołana", "obyta", "obżerana", "ocalana", "ocalona", "ocechowana", "oceniana", "oceniona", "ocenzurowana", "ochładzana", "ochlapana", "ochlapywana", "ochłodzona", "ochłonięta", "ochraniana", "ochroniona", "ochrzaniana", "ochrzczona", "ociągana", "ocielona", "ocieplana", "ocieplona", "ocierana", "ocknięta", "ocucona", "ocuta", "oczarowywana", "oczekiwana", "oczerniana", "oczerniona", "oczyszczana", "oczyszczona", "odarta", "odbębniona", "odbetonowana", "odbezpieczana", "odbezpieczona", "odbijana", "odbita", "odblokowana", "odbudowana", "odbudowywana", "odbutowana", "odbyta", "odcedzana", "odchorowana", "odchowana", "odchudzana", "odchudzona", "odchylana", "odchylona", "odciągana", "odciągnięta", "odciążona", "odcierpiona", "odcięta", "odcinana", "odcisnięta", "odcumowana", "odcyfrowana", "odcyfrowywana", "odczarowana", "odczekana", "odczepiana", "odczepiona", "odczuta", "odczuwana", "odczyniona", "odczytana", "odczytywana", "oddalana", "oddana", "oddawana", "oddelegowana", "oddychana", "oddzielana", "oddzielona", "odebrana", "odegnana", "odegrana", "odejmowana", "odepchnięta", "oderwana", "odeskortowana", "odesłana", "odespana", "odessana", "odetkana", "odetnięta", "odezwana", "odfiltrowana", "odgadnięta", "odgadywana", "odganiana", "odgarniana", "odgarnięta", "odgięta", "odgniatana", "odgoniona", "odgradzana", "odgrażana", "odgrodzona", "odgruzowana", "odgrywana", "odgryzana", "odgryziona", "odgrzana", "odgrzebana", "odgrzebywana", "odgrzewana", "odgwizdana", "odhaczona", "odholowana", "odinstalowana", "odizolowana", "odjedzona", "odjęta", "odjonizowana", "odkażana", "odkażona", "odkładana", "odklejona", "odkochana", "odkodowana", "odkodowywana", "odkopana", "odkopywana", "odkorkowana", "odkręcana", "odkręcona", "odkrojona", "odkryta", "odkrywana", "odkupiona", "odkupywana", "odkurzana", "odkurzona", "odkuta", "odłączana", "odłączona", "odłamywana", "odlana", "odlatywana", "odlepiana", "odlewana", "odliczana", "odliczona", "odłożona", "odłupana", "odmachana", "odmachiwana", "odmalowana", "odmarszczona", "odmawiana", "odmeldowana", "odmieniana", "odmieniona", "odmierzana", "odmierzona", "odmieszana", "odmontowana", "odmówiona", "odmrażana", "odmrożona", "odnajdowana", "odnaleziona", "odnawiana", "odniesiona", "odnoszona", "odnotowana", "odnotowywana", "odnowiona", "odpakowana", "odpakowywana", "odpalana", "odpalona", "odpałzowana", "odparowana", "odparta", "odpędzana", "odpicowana", "odpieczętowana", "odpierana", "odpięta", "odpiłowana", "odpiłowywana", "odpinana", "odpisana", "odpisywana", "odpłacana", "odplamiona", "odplątana", "odpłynięta", "odpowietrzona", "odpracowana", "odpracowywana", "odprasowana", "odprawiana", "odprawiona", "odprężana", "odprostowana", "odprowadzana", "odprowadzona", "odpruta", "odpryskana", "odpukana", "odpukiwana", "odpuszczana", "odpuszczona", "odpychana", "odrąbana", "odrabiana", "odrąbywana", "odradzana", "odradzona", "odrapana", "odrastana", "odratowana", "odreagowana", "odremontowana", "odrestaurowana", "odrestaurowywana", "odrobaczana", "odrobiona", "odroczona", "odrodzona", "odrośnięta", "odróżniana", "odróżniona", "odrysowana", "odrywana", "odrzucana", "odrzucona", "odsączana", "odsączona", "odsadzona", "odseparowana", "odsiadywana", "odsiana", "odsiewana", "odsłaniana", "odsłonięta", "odsłuchana", "odsłuchiwana", "odsłużona", "odśnieżana", "odśnieżona", "odsolona", "odśpiewana", "odsprzedana", "odsprzedawana", "odstąpiona", "odstawiana", "odstawiona", "odstępowana", "odstraszana", "odstręczona", "odstresowana", "odstrzeliwana", "odstrzelona", "odsunięta", "odsuwana", "odświeżana", "odświeżona", "odsyłana", "odsypywana", "odsysana", "odszczekana", "odszczekiwana", "odsztafirowana", "odszukana", "odszyfrowana", "odszyfrowywana", "odszykowana", "odtrąbiona", "odtrącona", "odtruta", "odtwarzana", "odtworzona", "oduczona", "odurzona", "odwalana", "odwalona", "odwiązana", "odwiązywana", "odwiedzana", "odwiedzona", "odwieszona", "odwieziona", "odwijana", "odwinięta", "odwlekana", "odwodniona", "odwodzona", "odwołana", "odwoływana", "odwożona", "odwracana", "odwrócona", "odwzajemniona", "odwzorowana", "odżegnana", "odziana", "odziedziczona", "odznaczana", "odznaczona", "odzwieciedlona", "odzwierciedlana", "odzwoniona", "odzwyczajona", "odzyskana", "odzyskiwana", "odżyta", "odzywiana", "odżywiona", "oferowana", "ofiarowana", "ofiarowywana", "ogarniana", "ogarnięta", "oglądana", "ogłaszana", "ogłoszona", "ogłupiana", "ogłupiona", "ogłuszona", "ogołocona", "ogolona", "ograbiana", "ograbiona", "ograniczana", "ograniczona", "ograna", "ogrodzona", "ogryziona", "ogrzana", "ogrzewana", "okablowana", "okaleczona", "okantowana", "okąpana", "okazana", "okazywana", "okiełznana", "okładana", "okłamana", "okłamywana", "oklaskiwana", "oklejona", "oklepana", "okopana", "okopywana", "okpiona", "okradana", "okradziona", "okraszona", "okrążana", "okrążona", "okręcana", "okręcona", "określana", "określona", "okrojona", "okryta", "okrywana", "okrzyknięta", "okulawiona", "okupiona", "okupowana", "olana", "olewana", "olśnięta", "omamiona", "omawiana", "omdlewana", "omijana", "ominięta", "omotana", "omówiona", "onanizowana", "onieśmielana", "onieśmielona", "opadnięta", "opakowana", "opalana", "opalona", "opancerzona", "opanowana", "opanowywana", "oparta", "oparzona", "opasana", "opatentowana", "opatrywana", "opatrzona", "opatulona", "opchnięta", "opędzana", "opędzona", "operowana", "opętana", "opętywana", "opieczętowana", "opiekowana", "opierana", "opijana", "opisana", "opisywana", "opita", "opłacana", "opłacona", "opłakana", "opłakiwana", "opłukana", "opluta", "opluwana", "opływana", "opodatkowana", "opodatkowywana", "oponowana", "oporządzana", "oporządzona", "opowiadana", "opowiedziana", "opóźniana", "opóźniona", "opracowana", "opracowywana", "oprawiana", "oprawiona", "oprowadzana", "oprowadzona", "opróżniana", "opróżniona", "opryskana", "opryskiwana", "opublikowana", "opukana", "opuszczana", "opuszczona", "opychana", "opylona", "orana", "orbowana", "organizowana", "orientowana", "oroszona", "orzekana", "orżnięta", "osaczana", "osaczona", "osadzana", "osądzana", "osadzona", "osądzona", "oscylowana", "osiadana", "osiągana", "osiągnięta", "osiedlana", "osiedlona", "osiedzona", "osierocona", "osiodłana", "oskalpowana", "oskarżona", "oskrobana", "oskrzydlana", "oskrzydlona", "oskubana", "oskubywana", "osłabiana", "osłabiona", "oślepiana", "oślepiona", "oślepnięta", "ośliniana", "osłodzona", "osłoniona", "osłuchana", "osmalona", "ośmielona", "ośmieszana", "ośmieszona", "ostrzegana", "ostrzelana", "ostrzelita", "ostrzona", "ostudzona", "osunięta", "osuszana", "osuszona", "osuwana", "oswajana", "oświadczana", "oświadczona", "oświecana", "oświeciona", "oświetlana", "oświetlona", "oswobadzana", "oswobodzona", "oswojona", "oszacowana", "oszałamiana", "oszczana", "oszczędzana", "oszczędzona", "oszklona", "oszlifowana", "oszołomiona", "oszpecona", "oszukana", "oszukiwana", "oszwabiona", "otaczana", "otarta", "otoczona", "otruta", "otruwana", "otrząsana", "otrząśnięta", "otrzepana", "otrzeźwiona", "otrzymana", "otrzymywana", "otulona", "otumaniona", "otwierana", "otworzona", "otwarta", "owana", "owdowiona", "owiana", "owijana", "owinięta", "ozdabiana", "ozdobiona", "ozdrowiona", "ożeniona", "oznaczana", "oznaczona", "oznajmiana", "oznajmiona", "oznakowana", "ożyta", "ożywana", "ożywiana", "ożywiona", "pachnąca", "pacnąta", "pakowana", "paktowana", "pałana", "pałaszowana", "palnięta", "palona", "pamiętana", "panoszona", "paprana", "parafrazowana", "paraliżowana", "parkowana", "parowana", "partaczona", "parta", "parzona", "pastowana", "paszona", "patrolowana", "patroszona", "patrzona", "pauzowana", "pchana", "pchnięta", "pdholowana", "pedałowana", "pękana", "pęknięta", "pełniona", "penetrowana", "perforowana", "perfumowana", "perswadowana", "piastowana", "pichcona", "pielęgnowana", "pielona", "pieniona", "pieszczona", "piętnowana", "pięta", "pijana", "pikietowana", "piknikowana", "pikowana", "pilnowana", "pilotowana", "piłowana", "pisana", "pisywana", "pita", "płacona", "plądrowana", "plamiona", "planowana", "płaszczona", "plątana", "płatana", "pławiona", "plewiona", "płonąca", "płoszona", "plotkowana", "plugawiona", "płukana", "pluskana", "pluta", "pobaraszkowana", "pobierana", "pobita", "pobłażana", "pobłogosławiona", "pobrana", "pobrudzona", "pobudzana", "pobudzona", "pobujana", "pocałowana", "pocerowana", "pochłaniana", "pochlapana", "pochlebiana", "pochłonięta", "pochowana", "pochwalana", "pochwalona", "pochwycona", "pochylana", "pochylona", "pociachana", "pociągana", "pociągnięta", "pocierana", "pocieszana", "pocieszona", "pocięta", "pocona", "pocukrowana", "poćwiartowana", "poczesana", "poczęstowana", "poczęta", "poczochrana", "poczuta", "poczytana", "poczytywana", "podana", "podarowana", "podarta", "podawana", "podążona", "podbierana", "podbijana", "podbita", "podbudowana", "podbudowywana", "podburzana", "podburzona", "podchwycona", "podciągana", "podciągnięta", "podcierana", "podcięta", "podcinana", "podczepiona", "poddana", "poddawana", "podebrana", "podejmowana", "podejrzana", "podejrzewana", "podelektowana", "podeptana", "poderwana", "podesłana", "podglądana", "podgolona", "podgoniona", "podgryzana", "podgrzana", "podgrzewana", "podjadana", "podjedzona", "podjęta", "podkablowana", "podkarmiona", "podkładana", "podklejona", "podkolorowana", "podkołowana", "podkopana", "podkopywana", "podkradana", "podkradnięta", "podkręcana", "podkręcona", "podkreślana", "podkreślona", "podkształcona", "podkulona", "podkupiona", "podkurzona", "podkuta", "podłączana", "podłączona", "podładowana", "podłamana", "podlana", "podłapana", "podleczona", "podlegana", "podlewana", "podliczana", "podliczona", "podlizana", "podlizywana", "podłożona", "podmalowana", "podmieniana", "podmieniona", "podmuchana", "podmyta", "podnajęta", "podniecana", "podniecona", "podniesiona", "podnoszona", "podołana", "podopingowana", "podostrzona", "podotykana", "podpadnięta", "podpalana", "podpalona", "podparta", "podpatrywana", "podpatrzona", "podpieczętowana", "podpiekana", "podpierana", "podpięta", "podpiłowana", "podpinana", "podpisana", "podpisywana", "podpłacona", "podpłynięta", "podpompowana", "podporządkowana", "podporządkowywana", "podpowiadana", "podpowiedziana", "podprowadzana", "podpuszczana", "podpuszczona", "podpychana", "podpytana", "podrabiana", "podrapana", "podrasowana", "podratowana", "podrażniona", "podręczona", "podregulowana", "podreperowana", "podretuszowana", "podrobiona", "podroczona", "podróżowana", "podrygiwana", "podrywana", "podrzucana", "podrzucona", "podrzynana", "podsadzona", "podskubywana", "podsłuchana", "podsłuchiwana", "podsmażana", "podsmażona", "podśpiewywana", "podstawiana", "podstawiona", "podstemplowana", "podstrojona", "podsumowana", "podsumowywana", "podsunięta", "podsuwana", "podświetlana", "podsycana", "podsycona", "podsyłana", "podsypana", "podszczypywana", "podszkolona", "podszlifowana", "podszykowana", "podszyta", "podszywana", "podtapiana", "podtarta", "podtopiona", "podtrzymana", "podtrzymywana", "podtuczona", "poduczana", "podupadana", "poduszona", "podwajana", "podwalana", "podważana", "podwędzona", "podwiązana", "podwieszana", "podwieziona", "podwijana", "podwinięta", "podwojona", "podwożona", "podwyżana", "podwyższana", "podwyższona", "podyktowana", "podyskutowana", "podziabana", "podziałana", "podziałkowana", "podziękowana", "podzielona", "podziurawiona", "podziwiana", "podźwignięta", "poeksperymentowana", "pofarbowana", "pofatygowana", "pofilmowana", "poganiana", "pogardzana", "pogardzona", "pogarszana", "pogaszona", "pogładzona", "pogłaskana", "pogłębiana", "pogłębiona", "pogłośniona", "pogmatwana", "pognębiona", "pognieciona", "pogodzona", "pogoniona", "pogorszona", "pogotowana", "pograbiona", "pogrążana", "pogrążona", "pogrożona", "pogrubiana", "pogrubiona", "pogruchana", "pogruchotana", "pogrupowana", "pogrywana", "pogryzana", "pogryziona", "pogrzana", "pogrzebana", "pogubiona", "pogwałcana", "pohamowana", "pohandlowana", "poharatowana", "pohuśtana", "poinformowana", "poinstruowana", "pojednana", "pojęta", "pojmięta", "pojmowana", "pojona", "pokajana", "pokaleczona", "pokarana", "pokarmiona", "pokąsana", "pokatalogowana", "pokazana", "pokazywana", "pokiereszowana", "pokierowana", "pokiwana", "pokładana", "poklepana", "poklepywana", "pokłoniona", "pokłuta", "pokochana", "pokolorowana", "pokoloryzowana", "pokołysana", "pokombinowana", "pokomplikowana", "pokonana", "pokończona", "pokonywana", "pokopana", "pokrajana", "pokrążona", "pokręcona", "pokrojona", "pokruszona", "pokryta", "pokrywana", "pokrzepiana", "pokrzepiona", "pokrzyżowana", "pokuszona", "pokutowana", "połączona", "polakierowana", "połamana", "polana", "połapana", "połaskotana", "połatana", "polecana", "połechtana", "polecona", "poleczona", "polegana", "polemizowana", "polepszana", "polepszona", "polerowana", "polewana", "policzkowana", "policzona", "polimeryzowana", "polizana", "połknięta", "polowana", "połowiona", "położona", "polubiona", "poluźniona", "poluzowana", "połykana", "pomacana", "pomachana", "pomagana", "pomalowana", "pomarynowana", "pomasowana", "pomazana", "pomęczona", "pomiatana", "pomieszana", "pomieszczona", "pomijana", "pominięta", "pomiziana", "pomknięta", "pomnażana", "pomniejszana", "pomniejszona", "pomnożona", "pomoczona", "pompowana", "pomydlona", "pomylona", "pomyszkowana", "pomywana", "ponabijana", "ponaciskana", "ponadziewana", "ponaglana", "ponaglona", "ponagrywana", "ponaklejana", "ponakłuwana", "ponakrywana", "ponaprawiana", "ponawiana", "poniańczona", "poniechana", "ponieiwerana", "poniesiona", "poniszczona", "poniżana", "poniżona", "ponoszona", "ponowiona", "ponudzona", "poobcinana", "poobcowana", "poobczajana", "poobijana", "poobmacywana", "poobracana", "poobserwowana", "poodbijana", "poodcinana", "poodgryzana", "poodkurzana", "poodprawiana", "poodsuwana", "poodwalana", "pooglądana", "poograniczana", "poopalana", "poopiekana", "poopwiadana", "pootwierana", "popadana", "popakowana", "popalona", "poparta", "poparzona", "popchana", "popchnięta", "popędzana", "popędzona", "popękana", "popełniana", "popełniona", "poperfumowana", "popierana", "popieszczona", "popijana", "popilnowana", "popisana", "popita", "popłacona", "popłakiwana", "poplamiona", "poplątana", "popluskana", "popodcinana", "popodziwiana", "popoprawiana", "poprana", "poprasowana", "poprawiana", "poprawiona", "poproszona", "poprowadzona", "popryskana", "poprzebierana", "poprzeciągana", "poprzecinana", "poprzedzana", "poprzeglądana", "poprzeklinana", "poprzekopywana", "poprzemieszczana", "poprzenoszona", "poprzesadzana", "poprześladowana", "poprzestawiana", "poprzesuwana", "poprzewieszana", "poprzewracana", "poprzycinana", "poprzymierzana", "poprzytulana", "poprzywiązywana", "popsuta", "popudrowana", "popukana", "popularyzowana", "popuszczana", "popuszczona", "popychana", "popykana", "popytana", "porabiana", "porachowana", "poraniona", "poratowana", "porażona", "poręczona", "porównana", "porozbierana", "porozbijana", "porozciągana", "porozcinana", "porozdawana", "porozdzielana", "porozmieszczana", "poróżniona", "porozpędzana", "porozpieszczana", "porozprowadzana", "porozpruwana", "porozrzucana", "porozstawiana", "porozsyłana", "porozumiewana", "porozwalana", "porozwiązywana", "porozwieszana", "porozwożona", "portretowana", "poruszana", "poruszona", "porwana", "porysowana", "porywana", "porządkowana", "porządzona", "porzucana", "porzucona", "posądzana", "posadzona", "posądzona", "pościągana", "pościelona", "pościerana", "pościgana", "pościnana", "pościskana", "posegregowana", "posiadana", "posiana", "posiekana", "posilana", "posiłkowana", "posilona", "posiłowana", "posiniaczona", "posiorbana", "poskąpiona", "poskładana", "posklejana", "poskramiana", "poskręcana", "poskrobana", "poskromiona", "poskubana", "posłana", "posłodzona", "poślubiana", "poślubiona", "posługiwana", "posmakowana", "posmarowana", "posolona", "posortowana", "pospekulowana", "pospieszana", "pośpieszana", "pośpiewana", "pospinana", "pospłacana", "posprawdzana", "posprzątana", "posprzedawana", "pośredniczona", "possana", "postanowiona", "postana", "postarana", "postawiona", "postemplowana", "posterowana", "postradana", "postraszona", "postrugana", "postrzegana", "postrzelana", "postrzelona", "postukana", "postymulowana", "posunięta", "posuwana", "poświącana", "poświadczona", "poświecona", "poświęcona", "poświętowana", "poświntuszona", "posyłana", "posypana", "posypywana", "poszarpana", "poszastana", "poszatkowana", "poszczuta", "poszczycona", "poszczypana", "poszerzana", "poszerzona", "poszorowana", "poszpiegowana", "poszturchana", "poszukana", "poszukiwana", "poszwędana", "poszybowana", "potakiwana", "potarmoszona", "potarta", "potasowana", "potęgowana", "potępiana", "potępiona", "potknięta", "potoczona", "potopiona", "potorturowana", "potrącana", "potrącona", "potraktowana", "potrojona", "potruta", "potrząsana", "potrzaskana", "potrząsnięta", "potrząśnięta", "potrzymana", "Poturbowana", "poturlana", "potwierdzona", "potykana", "poucinana", "pouczana", "pouczona", "poudawana", "poukładana", "pouprawiana", "poupychana", "pourywana", "poustawiana", "poużywana", "powąchana", "powachlowana", "powalana", "powalona", "poważana", "powbijana", "powciągana", "powciskana", "powdychana", "powęszona", "powetowana", "powiadamiana", "powiadomiona", "powiązana", "powiedziana", "powiedzona", "powiększana", "powielana", "powielona", "powierzana", "powierzona", "powieszona", "powiewana", "powinszowana", "powitana", "powita", "powkładana", "powlekana", "powłóczona", "powodowana", "powołana", "powoływana", "powożona", "powpychana", "powrócona", "powrzucana", "powsadzana", "powściągnięta", "powspominana", "powstrzymana", "powtarzana", "powtórzona", "powybierana", "powybijana", "powycierana", "powycinana", "powyciskana", "powydawana", "powyganiana", "powyginana", "powyjaśniana", "powyjmowana", "powyłączana", "powymiatana", "powymieniana", "powynoszona", "powypełniana", "powypisywana", "powyrywana", "powyrzucana", "powystrzelana", "powysyłana", "powywalana", "powywieszana", "powywracana", "powzięta", "pozabawiana", "pozabijana", "pozacierana", "pożądana", "pożądlona", "pozadzierana", "pozakładana", "pozaklinana", "pozałatwiana", "pozamiatana", "pozamieniana", "pozamrażana", "pozamykana", "pozapalana", "pozapinana", "pozapisywana", "pozapraszana", "pożarta", "pozasłaniana", "pozastrzelana", "pozatykana", "pozbawiana", "pozbawiona", "pozbierana", "pozbyta", "pozbywana", "pozdejmowana", "pozdrawiana", "pozdrowiona", "pożegnana", "pożerana", "pozmiatana", "pozmieniana", "pozmywana", "poznaczona", "poznana", "poznawana", "poznęcana", "pozorowana", "pozostawiana", "pozostawiona", "pozowana", "pozrywana", "pozszywana", "pożuta", "pozwalniana", "pozwana", "pozwiązywana", "pozwiedzana", "pozwolona", "pożyczana", "pożyczona", "pozyskana", "pożyta", "pozywana", "pożywiana", "pożywiona", "praktykowana", "prana", "prasowana", "prawiona", "prażona", "precyzowana", "preferowana", "prenumerowana", "prezentowana", "próbowana", "procesowana", "produkowana", "profanowana", "profilowana", "prognozowana", "programowana", "projektowana", "proklamowana", "prolongowana", "promieniowana", "promowana", "propagowana", "proponowana", "prosperowana", "prostowana", "proszkowana", "proszona", "protestowana", "protokołowana", "prowadzona", "prowokowana", "pruta", "pryskana", "pryśnięta", "przeanalizowana", "przearanżowana", "przebaczana", "przebaczona", "przebadana", "przebiegnięta", "przebierana", "przebijana", "przebita", "przebolona", "przebrana", "przebudowana", "przebudowywana", "przebudzana", "przebudzona", "przebukowana", "przebyta", "przebywana", "przeceniana", "przeceniona", "przechlapana", "przechodzona", "przechowana", "przechowywana", "przechrzcona", "przechwycona", "przechwytywana", "przechylana", "przechylona", "przechytrzana", "przechytrzona", "przeciągana", "przeciągnięta", "przeciążana", "przeciążona", "przeciekana", "przecierana", "przecierpiana", "przecięta", "przecinana", "przeciskana", "przeciśnięta", "przeciwstawiana", "przećwiczona", "przeczekana", "przeczesana", "przeczesywana", "przeczołgana", "przeczuta", "przeczuwana", "przeczyszczona", "przeczytana", "przedarta", "przedawkowana", "przedawkowywana", "przedekorowana", "przedłożona", "przedłużana", "przedłużona", "przedmuchana", "przedobrzona", "przedostana", "przedostawana", "przedsiewzięta", "przedstawiana", "przedstawiona", "przedymana", "przedyskutowana", "przedzierana", "przedziurawiona", "przedziurkowana", "przeegzaminowana", "przefaksowana", "przefarbowana", "przefasonowana", "przefasowana", "przefaxowana", "przefiltrowana", "przeformowana", "przeforsowana", "przegadana", "przeganana", "przeganiana", "przegapiana", "przegapiona", "przegięta", "przeginana", "przeglądana", "przeglądnięta", "przegłodzona", "przegłosowana", "przegoniona", "przegotowana", "przegotowywana", "przegrabiona", "przegradzana", "przegrana", "przegrupowana", "przegrupowywana", "przegrywana", "przegryzana", "przegryziona", "przegrzana", "przegrzebana", "przegrzewana", "przehandlowana", "przeholowana", "przeinstalowana", "przeistoczona", "przejadana", "przejaskrawiana", "przejaśniona", "przejawiana", "przejawiona", "przejechana", "przejęta", "przejeżdżana", "przejmowana", "przejrzana", "przekabacana", "przekabacona", "przekablowana", "przekalibrowana", "przekalkulowana", "przekarmiana", "przekąszona", "przekazywana", "przekierowana", "przekierowywana", "przekimana", "przekładana", "przeklejona", "przeklęta", "przeklinana", "przeklnięta", "przekłuta", "przekonana", "przekonfigurowana", "przekonstruowana", "przekonwertowana", "przekonywana", "przekopana", "przekopywana", "przekoziołkowana", "przekraczana", "przekręcana", "przekręcona", "przekreślana", "przekreślona", "przekroczona", "przekrojona", "przekrzyczona", "przekrzywiona", "przekształcana", "przekształcona", "przekupiona", "przekupywana", "przekuta", "przekwalifikowana", "przełączana", "przełączona", "przeładowana", "przeładowywana", "przełamana", "przełamywana", "przelana", "przelatywana", "przeleciana", "przelewana", "przeleżana", "przelicytowana", "przeliczana", "przeliczona", "przeliterowana", "przełknięta", "przełożona", "przełykana", "przełyknięta", "przemalowana", "przemalowywana", "przemaszerowana", "przemawiana", "przemeblowana", "przemęczona", "przemielona", "przemieniana", "przemierzona", "przemieszczana", "przemieszczona", "przemijana", "przemilczana", "przemilczona", "przeminięta", "przemknięta", "przemodelowana", "przemusztrowana", "przemycana", "przemycona", "przemyślana", "przemyślona", "przemyta", "przemywana", "przenegocjowana", "przeniesiona", "przenikana", "przeniknięta", "przenoszona", "przeobrażana", "przeobrażona", "przeoczana", "przeoczona", "przeorana", "przeorganizowana", "przeorientowana", "przepadana", "przepakowana", "przepalona", "przeparkowana", "przepchana", "przepchnięta", "przepędzana", "przepędzona", "przepełniana", "przepełniona", "przepijana", "przepiłowana", "przepisana", "przepisywana", "przepita", "przepłacana", "przepłacona", "przepłakana", "przeplanowana", "przepłoszona", "przepłukana", "przepłukiwana", "przepłynięta", "przepływana", "przepompowana", "przepompowywana", "przepowiadana", "przepowiedziana", "przepracowana", "przepracowywana", "przeprana", "przeprawiana", "przeprawiona", "przeprogramowana", "przeprojektowana", "przeprowadzana", "przeprowadzona", "przepuszczana", "przepuszczona", "przepychana", "przepytana", "przepytywana", "przerąbana", "przerabiana", "przeradzana", "przerastana", "przerażona", "przeredagowana", "przerejestrowana", "przerobiona", "przerodzona", "przerośnięta", "przerwana", "przerysowana", "przerywana", "przerzedzana", "przerzucana", "przerzucona", "przesączona", "przesadzana", "przesądzana", "przesadzona", "przesądzona", "prześcigana", "prześcignięta", "przesiadana", "przesiadywana", "przesiana", "przesiedlana", "przesiedlona", "przesiedziana", "przesiewana", "przesilona", "przeskakiwana", "przeskalowana", "przeskanowana", "przeskoczona", "przeskrobana", "prześladowana", "przesłaniana", "przesłana", "prześledziona", "prześlizgnięta", "przesłodzona", "przesłonięta", "przesłuchana", "przesłuchiwana", "przesmarowana", "przesolona", "przesortowana", "przespana", "prześpiewana", "przessana", "przestawiana", "przestawiona", "przestemplowana", "przestraszona", "przestrojona", "przestrzegana", "przestrzelona", "przestudiowana", "przesunięta", "przesuwana", "prześwietlana", "prześwietlona", "przesyłana", "przesypana", "przesypiana", "przesypywana", "przeszarżowana", "przeszczepiana", "przeszczepiona", "przeszkadzana", "przeszkolona", "przeszmuglowana", "przeszukana", "przeszukiwana", "przeszyta", "przeszywana", "przetaczana", "przetańczona", "przetapetowana", "przetarta", "przetestowana", "przetkana", "przetoczona", "przetopiona", "przetrącona", "przetransformowana", "przetransmitowana", "przetransponowana", "przetransportowana", "przetrawiona", "przetrwana", "przetrząsana", "przetrząśnięta", "przetrzepana", "przetrzymana", "przetrzymywana", "przetwarzana", "przetworzona", "przewalana", "przewalczona", "przewaletowana", "przewalona", "przeważana", "przeważona", "przewertowana", "przewiązana", "przewiązywana", "przewidywana", "przewidziana", "przewiercana", "przewiercona", "przewieszana", "przewieszona", "przewietrzona", "przewieziona", "przewijana", "przewinięta", "przewitana", "przewodniczona", "przewodzona", "przewożona", "przewracana", "przewrócona", "przewyższana", "przeymierzana", "przeżarta", "przeżeglowana", "przeżegnana", "przeziębiona", "przezimowana", "przeznaczana", "przeznaczona", "przeżuta", "przezwyciężana", "przezwyciężona", "przeżyta", "przezywana", "przeżywana", "przodowana", "przpochlebiona", "przwdziewana", "przybastowana", "przybierana", "przybijana", "przybita", "przybliżana", "przybliżona", "przybrana", "przycelowana", "przycepiona", "przychylona", "przyciągana", "przyciągnięta", "przyciemniona", "przycięta", "przycinana", "przyciskana", "przyciśnięta", "przyciszona", "przyćmiewana", "przyćmiona", "przycumowana", "przyczepiana", "przyczesana", "przyczołgana", "przyczyniona", "przydepnięta", "przydeptana", "przyduszona", "przydzielana", "przydzielona", "przygarnięta", "przygaszona", "przygazowana", "przygładzana", "przygnębiana", "przygniatana", "przygnieciona", "przygotowana", "przygruchana", "przygrywana", "przygryzana", "przygryziona", "przygrzana", "przygwożdżona", "przyhamowana", "przyholowana", "przyjana", "przyjęta", "przyjmowana", "przyjrzana", "przykładana", "przyklejona", "przyklepana", "przykopana", "przykręcana", "przykręcona", "przykrócona", "przykryta", "przykrywana", "przykurzona", "przykuta", "przykuwana", "przyłączana", "przyłączona", "przylana", "przyłapana", "przylegana", "przylepiana", "przylepiona", "przyłożona", "przymierzona", "przymilana", "przymknięta", "przymocowana", "przymuszana", "przynależona", "przyniesiona", "przynoszona", "przynudzana", "przyostrzona", "przyozdabiana", "przyozdobiona", "przypadnięta", "przypakowana", "przypakowywana", "przypalana", "przypalona", "przyparta", "przypasowana", "przypatrywana", "przypatrzona", "przypieczętowana", "przypiekana", "przypierana", "przypięta", "przypilnowana", "przypiłowana", "przypinana", "przypisana", "przypisywana", "przypłacona", "przyplątana", "przypłynięta", "przypodobana", "przypominana", "przypomniana", "przyporządkowana", "przyprawiana", "przyprawiona", "przyprowadzona", "przypucowana", "przypudrowana", "przypuszczana", "przypuszczona", "przyrównana", "przyrządzana", "przyrządzona", "przysiadana", "przysiągnięta", "przyskrzydlona", "przyskrzyniana", "przyskrzyniona", "przysłaniana", "przysłana", "przysłodzona", "przysłoniona", "przysłuchiwana", "przysługiwana", "przysłużona", "przysmażana", "przysmażona", "przyspieszana", "przyspieszona", "przysporzona", "przysposobiona", "przyśrubowywana", "przyssana", "przystąpiona", "przystawiana", "przystawiona", "przystemplowana", "przystopowana", "przystosowana", "przystrojona", "przysunięta", "przysuwana", "przyswajana", "przyświecana", "przyświęcona", "przyswojona", "przysyłana", "przysypana", "przyszpilona", "przyszykowana", "przyszyta", "przyszywana", "przytaczana", "przytargana", "przytarta", "przytaszczana", "przytępiana", "przytępiona", "przytkana", "przytłaczana", "przytłoczona", "przytłumiona", "przytoczona", "przytrafiona", "przytroczona", "przytruwana", "przytrzasnięta", "przytrzymana", "przytrzymywana", "przytulana", "przytulona", "przytwierdzana", "przytwierdzona", "przytykana", "przyuczona", "przyuważona", "przywabiona", "przywalana", "przywalona", "przywarowana", "przywarta", "przywdziana", "przywiązana", "przywiązywana", "przywidziana", "przywieziona", "przywitana", "przywłaszczana", "przywłaszczona", "przywołana", "przywoływana", "przywożona", "przywracana", "przywrócona", "przyznaczona", "przyznana", "przyznawana", "przyzwalana", "przyzwana", "przyzwyczajana", "przyzwyczajona", "przyzywana", "psiamana", "pstrykana", "pstryknięta", "psuta", "publikowana", "puchnięta", "pucowana", "pudłowana", "pudrowana", "puknięta", "punktowana", "pustoszona", "puszczana", "puszczona", "puszkowana", "puszona", "pykana", "pytana", "rabowana", "rachowana", "racjonalizowana", "racjonowana", "raczona", "radowana", "raniona", "raportowana", "ratowana", "ratyfikowana", "reaktywowana", "realizowana", "reanimowana", "recytowana", "ręczona", "redagowana", "redukowana", "reformowana", "refowana", "regenerowana", "regionalizowana", "regulowana", "reinkarnowana", "rejestrowana", "reklamowana", "rekomendowana", "rekompensowana", "rekonstruowana", "rekreowana", "rekrutowana", "rekwirowana", "relacjonowana", "relaksowana", "remodulowana", "remontowana", "renegocjowana", "reorganizowana", "reperowana", "replikowana", "represejonowana", "reprezentowana", "reprodukowana", "resetowana", "resocjalizowana", "respektowana", "resuscytowana", "retuszowana", "rewanżowana", "rewidowana", "rezerwowana", "rezonowana", "rezygnowana", "reżyserowana", "robiona", "rodzona", "rojona", "rolowana", "romansowana", "roniona", "rozbawiana", "rozbawiona", "rozbierana", "rozbijana", "rozbita", "rozbłyśnięta", "rozbrajana", "rozbrojona", "rozbudowana", "rozbudowywana", "rozbudzana", "rozbudzona", "rozbujana", "rozcapierzona", "rozchmurzona", "rozchodzona", "rozchylana", "rozchylona", "rozciągana", "rozciągnięta", "rozcieńczana", "rozcieńczona", "rozcierana", "rozcięta", "rozcinana", "rozczarowana", "rozczarowywana", "rozczesana", "rozczłonkowana", "rozczulana", "rozczytana", "rozdana", "rozdawana", "rozdeptana", "rozdmuchana", "rozdmuchiwana", "rozdrabniana", "rozdrapana", "rozdrapywana", "rozdrażniana", "rozdrażniona", "rozduszona", "rozdwojona", "rozdysponowana", "rozdzielana", "rozdzielona", "rozdzierana", "rozdziewiczona", "rozebrana", "rozedrana", "rozegrana", "rozegrywana", "rozepchana", "rozerwana", "rozesłana", "rozgarnięta", "rozgaszczana", "rozgięta", "rozglaszana", "rozgłoszona", "rozgniatana", "rozgnieciona", "rozgniewana", "rozgoniona", "rozgraniczona", "rozgrana", "rozgromiona", "rozgrywana", "rozgryzana", "rozgryziona", "rozgrzana", "rozgrzebywana", "rozgrzeszona", "rozgrzewana", "rozhuśtana", "rozjaśniana", "rozjaśniona", "rozjechana", "rozjedzona", "rozjuszana", "rozjuszona", "rozkazana", "rozkazywana", "rozkładana", "rozklejana", "rozklejona", "rozkołysana", "rozkopana", "rozkopywana", "rozkoszowana", "rozkręcana", "rozkręcona", "rozkrojona", "rozkruszona", "rozkuta", "rozkuwana", "rozkwaszona", "rozkwaterowana", "rozkwitana", "rozkwitnięta", "rozłączona", "rozładowana", "rozładowywana", "rozłamana", "rozlana", "rozlewana", "rozliczana", "rozliczona", "rozlokowana", "rozłożona", "rozłupana", "rozluźniana", "rozmanażana", "rozmasowana", "rozmawiana", "rozmazana", "rozmazywana", "rozmiękczona", "rozmieniana", "rozmieniona", "rozmieszczana", "rozmieszczona", "rozminięta", "rozmnożona", "rozmontowana", "rozmówiona", "rozmrażana", "rozmrożona", "rozmyślana", "rozmyta", "różnicowana", "rozniecana", "roznieciona", "rozniesiona", "różniona", "roznoszona", "rozochocona", "rozpaczana", "rozpakowana", "rozpakowywana", "rozpalana", "rozpalona", "rozpamiętywana", "rozpaskudzana", "rozpatrywana", "rozpatrzona", "rozpędzana", "rozpędzona", "rozpętana", "rozpieszczana", "rozpieszczona", "rozpięta", "rozpiłowana", "rozpinana", "rozpisana", "rozpisywana", "rozplanowana", "rozpłaszczana", "rozpłaszczona", "rozplątana", "rozplątywana", "rozpłynięta", "rozpoczęta", "rozpoczynana", "rozpogodzona", "rozporządzana", "rozporządzona", "rozpościerana", "rozpostrzona", "rozpowiadana", "rozpowiedziana", "rozpowszechniana", "rozpowszechniona", "rozpoznana", "rozpoznawana", "rozpracowana", "rozpraszana", "rozprawiana", "rozprawiczona", "rozprawiona", "rozprostowana", "rozproszona", "rozprowadzana", "rozprowadzona", "rozpruta", "rozpruwana", "rozprzestrzeniana", "rozprzestrzeniona", "rozpuszczana", "rozpuszczona", "rozpychana", "rozpylana", "rozpylona", "rozpytana", "rozpytywana", "rozrastana", "rozreklamowana", "rozrobiona", "rozrośnięta", "rozróżniana", "rozróżniona", "rozruszana", "rozrysowana", "rozrywana", "rozrzucana", "rozsadzana", "rozsadzona", "rozsądzona", "rozścielona", "rozsiana", "rozsiekana", "rozsiewana", "rozsiodłana", "rozsławiana", "rozsławiona", "rozsmarowana", "rozsmarowywana", "rozśmieszana", "rozstana", "rozstąpiona", "rozstawana", "rozstawiana", "rozstawiona", "rozstrojona", "rozstrząsana", "rozstrzeliwana", "rozstrzelona", "rozstrzygana", "rozstrzygnięta", "rozsunięta", "rozsupłana", "rozświetlana", "rozświetlona", "rozsyłana", "rozsypana", "rozsypywana", "rozszarpana", "rozszarpywana", "rozszczepiana", "rozszczepiona", "rozszerzana", "rozszerzona", "rozszyfrowana", "roztaczana", "roztapiana", "roztarta", "roztoczona", "roztopiona", "roztrwoniona", "roztrząsana", "roztrzaskana", "rozumiana", "rozumowana", "rozwalana", "rozwalona", "rozwarta", "rozważana", "rozważona", "rozweselana", "rozweselona", "rozwiana", "rozwiązana", "rozwiązywana", "rozwidniana", "rozwiedziona", "rozwierana", "rozwiercona", "rozwieszana", "rozwieszona", "rozwiewana", "rozwieziona", "rozwikłana", "rozwinięta", "rozwlekana", "rozwodzona", "rozwścieczana", "rozwścieczona", "rozzłoszczona", "rugana", "ruinowana", "rujnowana", "runięta", "ruszana", "ruszona", "rwana", "ryczana", "ryglowana", "rymowana", "rysowana", "ryta", "ryzykowana", "rządzona", "rzeźbiona", "rżnięta", "rzucana", "rzucona", "rzygana", "sabotażowana", "sączona", "sadzana", "sadzona", "sądzona", "salutowana", "salwowana", "sankcjonowana", "satysfakcjonowana", "scalona", "scementowana", "scentrowana", "scharakteryzowana", "schładzana", "schlana", "schlapana", "schlebiona", "schłodzona", "schowana", "schroniona", "schrupana", "schrzaniona", "schwytana", "schylana", "ściągnięta", "ścielona", "ściemniana", "ściemniona", "ścierana", "ścierpiona", "ścięta", "ścigana", "ścinana", "ściskana", "ściśnięta", "ściszana", "ściszona", "sędziowana", "segregowana", "selekcjonowana", "separowana", "sępiona", "serwowana", "sfabrykowana", "sfajczona", "sfałszowana", "sfaulowana", "sfilmowana", "sfinalizowana", "sfinansowana", "sfingowana", "sformalizowana", "sformatowana", "sformowana", "sformułowana", "sforsowana", "sfotografowana", "shimmerowana", "siana", "siekana", "siorbana", "skadrowana", "skakana", "skalana", "skaleczona", "skalibrowana", "skalkulowana", "skalpowana", "skanalizowana", "skandowana", "skanowana", "skapitulowana", "skarcona", "skarżona", "skasowana", "skatalogowana", "skazana", "skażona", "skazywana", "skierowana", "składana", "składowana", "skłaniana", "sklasyfikowana", "skleciona", "sklejana", "sklejona", "sklepana", "skłócona", "skłoniona", "sklonowana", "sknocona", "skojarzona", "skolonizowana", "skołowana", "skombinowana", "skomentowana", "skompensowana", "skompletowana", "skomplikowana", "skomponowana", "skompresowana", "skompromitowana", "skomunikowana", "skonana", "skoncentrowana", "skończona", "skondensowana", "skonfigurowana", "skonfiskowana", "skonfrontowana", "skonkretyzowana", "skonsolidowana", "skonstruowana", "skonsultowana", "skonsumowana", "skontaktowana", "skontrolowana", "skoordynowana", "skopana", "skopiowana", "skorektowana", "skorumpowana", "skorygowana", "skorzystana", "skoszona", "skracana", "skradziona", "skręcana", "skręcona", "skremowana", "skreślana", "skreślona", "skrobana", "skrobnięta", "skrócona", "skrojona", "skropiona", "skruszona", "skrystalizowana", "skryta", "skrytykowana", "skrywana", "skrzecowana", "skrzepnięta", "skrzyczana", "skrzyta", "skrzywdzona", "skrzyżowana", "skserowana", "skubana", "skubnięta", "skulona", "skumulowana", "skupiana", "skupiona", "skupowana", "skurczona", "skuszona", "skuta", "skuwana", "skwitowana", "słana", "sławiona", "śledzona", "śliniona", "ślizgana", "słodzona", "słuchana", "słyszana", "smagana", "smarowana", "smażona", "śmiecona", "smuta", "smyrana", "snuta", "sondowana", "sortowana", "spafycikowana", "spakowana", "spalana", "spałaszowana", "spalona", "spałowana", "spamiętana", "spaprana", "sparafrazowana", "sparaliżowana", "sparowana", "spartaczona", "spartolona", "sparzona", "spasowana", "spatałaszona", "spauzowana", "spawana", "spawiona", "specjalizowana", "spędzana", "spędzona", "spekulowana", "spełniana", "spełniona", "spenetrowana", "spętana", "spierana", "spięta", "śpiewana", "spiłowana", "spinana", "spisana", "spiskowana", "spisywana", "spita", "spłacana", "spłacona", "splądrowana", "splajtowana", "splamiona", "spłaszczona", "splatana", "splątana", "spłatana", "spławiana", "spławiona", "spłodzona", "spłonięta", "spłoszona", "spłukana", "spłukiwana", "spluwana", "spływana", "spoczęta", "spoczywana", "spodziewana", "spojona", "spolaryzowana", "spoliczkowana", "sponiewierana", "sponsorowana", "spopielana", "spopielona", "spopularyzowana", "sportretowana", "sporządzana", "sporządzona", "spostrzegana", "spotęgowana", "spotkana", "spotykana", "spoufalana", "spowalniana", "spowiadana", "spowodowana", "spowolniona", "spoźniona", "spóźniona", "spożytkowana", "spożyta", "spożywana", "sprana", "sprasowana", "spraszana", "sprawdzona", "sprawiona", "sprawowana", "sprecyzowana", "spreparowana", "sprężana", "sprężona", "spróbowana", "sprofanowana", "sprofilowana", "sprostowana", "sproszkowana", "sproszona", "sprowadzana", "sprowadzona", "sprowokowana", "spryskana", "spryskiwana", "sprywatyzowana", "sprzątana", "sprzątnięta", "sprzeczana", "sprzedana", "sprzedawana", "sprzeniewierzona", "spudłowana", "spustoszona", "spuszczana", "spuszczona", "spychana", "ssana", "stabilizowana", "stacjonowana", "staczana", "staranowana", "starczana", "stargowana", "startowana", "stawiana", "stawiona", "stemplowana", "stenografowana", "stepowana", "sterowana", "sterroryzowana", "sterylizowana", "stłamszona", "stłumiona", "stnięta", "stoczona", "stołowana", "stonowana", "stopiona", "stopniowana", "storpedowana", "stosowana", "strącana", "stracona", "strącona", "strajkowana", "straszona", "stratowana", "strawiona", "streamowana", "stresowana", "streszczana", "streszczona", "strofowana", "strojona", "stroszona", "strugana", "struta", "strymowana", "strząsana", "strzaskana", "strząśnięta", "strzelona", "strzepana", "strzępiona", "strzepnięta", "strzepywana", "studiowana", "studzona", "stukana", "stuknięta", "stulona", "stwardniona", "stwarzana", "stwierdzana", "stwierdzona", "stworzona", "stykana", "stylizowana", "stymulowana", "sugerowana", "sumowana", "sunięta", "swatana", "swawolona", "świadczona", "świecona", "święcona", "świerzbiona", "świętowana", "świntuszona", "sycona", "sygnalizowana", "symulowana", "synchronizowana", "sypana", "sypnięta", "szachrowana", "szacowana", "szafowana", "szamotana", "szanowana", "szargana", "szarpana", "szarpnięta", "szarżowana", "szasowana", "szastana", "szatkowana", "szczędzona", "szczepiona", "szczerzona", "szczuta", "szczycona", "szczypana", "szczytowana", "szefowana", "szemrana", "szepnięta", "szeptana", "szerzona", "szkalowana", "szkicowana", "szklona", "szkodzona", "szkolona", "szlachtowana", "szlifowana", "szmuglowana", "szokowana", "szorowana", "szpachlowana", "szpanowana", "szperana", "szprycowana", "sztachnięta", "szturchana", "szturchnięta", "szturmowana", "szufladkowana", "szuflowana", "szukana", "szulerowana", "szwankowana", "szydełkowana", "szydzona", "szyfrowana", "szykanowana", "szykowana", "szyta", "taktowana", "tamowana", "tankowana", "tapetowana", "taplana", "taranowana", "targana", "targnięta", "targowana", "tarmoszona", "tarta", "tarzana", "tasowana", "taszczona", "tatuowana", "tchnięta", "telefonowana", "telegrfowana", "teleportowana", "temperowana", "teoretyzowana", "tępiona", "terroryzowana", "testowana", "tkana", "tknięta", "tłamszona", "tłoczona", "tłumaczona", "tłumiona", "toczona", "tolerowana", "tonowana", "topiona", "torowana", "torturowana", "towarzyszona", "trąbiona", "trącana", "tracona", "trącona", "trafiana", "trafiona", "tragizowana", "traktowana", "transferowana", "transformowana", "transmitowana", "transportowana", "tratowana", "trawiona", "trenowana", "tresowana", "triumfowana", "tropiona", "troszczona", "truta", "trwoniona", "trymowana", "tryskana", "tryśnięta", "tryumfowana", "trywializowana", "trzaskana", "trzasnięta", "trzepana", "trzepnięta", "trzepotana", "trzęsiona", "trzymana", "tuczona", "tułana", "tulona", "turlana", "tuszowana", "twistowana", "tworzona", "tykana", "tyranizowana", "tyrana", "tytułowana", "uaktualniana", "uaktualniona", "uaktywniana", "uaktywniona", "uargumentowana", "uatrakcyjniona", "ubabrana", "ubarwiana", "ubarwiona", "ubawiona", "ubezpieczana", "ubezpieczona", "ubezwłasnowolniona", "ubiczowana", "ubiegana", "ubierana", "ubijana", "ubita", "ubłagana", "ubliżana", "ubliżona", "ubolewana", "ubóstwiana", "ubrana", "ubroczona", "ubrudzona", "ucałowana", "ucharakteryzowana", "uchowana", "uchroniona", "uchwalana", "uchwalona", "uchwycona", "uchylana", "uchylona", "uciągnięta", "ucieleśniana", "ucierana", "ucierpiana", "ucięta", "ucinana", "uciskana", "uciśnięta", "uciszana", "uciszona", "uciułana", "ucywilizowana", "uczczona", "uczepiona", "uczesana", "uczęszczana", "uczona", "ucztowana", "uczuta", "uczyniona", "udana", "udaremniona", "udawana", "udekorowana", "udeptywana", "uderzana", "uderzona", "udobruchana", "udokumentowana", "udomawiana", "udomowiona", "udoskonalana", "udoskonalona", "udostępniana", "udostępniona", "udowadniana", "udowodniona", "Udramatyzowana", "udręczona", "udrożniona", "udupiona", "uduszona", "udzielana", "udzielona", "udźwignięta", "ueiwarygodniona", "ufana", "ufarbowana", "uformowana", "ufortyfikowana", "ufundowana", "ugadana", "uganiana", "ugaszana", "ugaszona", "ugięta", "uginana", "ugłaskana", "ugniatana", "ugodzona", "ugoszczona", "ugotowana", "ugrana", "ugruntowana", "ugryziona", "ugrzęznięta", "uhistoryzowana", "uhonorowana", "uiścita", "ujadana", "ujarzmiana", "ujarzmiona", "ujawniana", "ujawniona", "ujęta", "ujeżdżana", "ujeżdżona", "ujmowana", "ujrzana", "ukamieniowana", "ukarana", "ukartowana", "ukąszona", "ukatrupiona", "ukazana", "ukazywana", "ukierowana", "ukierunkowana", "układana", "uklepana", "ukłoniona", "ukłuta", "uknuta", "ukojona", "ukołysana", "ukończona", "ukonkretniona", "ukoronowana", "ukradziona", "ukręcana", "ukręcona", "ukrojona", "ukryta", "ukrywana", "ukrzyżowana", "ukształtowana", "ukuta", "ułagodzona", "ułaskawiana", "ułaskawiona", "ulatniana", "ułatwiana", "ułatwiona", "uleczana", "uleczona", "ulegana", "ulepiona", "ulepszana", "ulepszona", "ulokowana", "ulotniona", "ułożona", "umacniana", "umalowana", "umartwiana", "umawiana", "umazana", "umeblowana", "umiejscowiona", "umieszczana", "umieszczona", "umilana", "umilona", "umknięta", "umniejszana", "umniejszona", "umocniona", "umocowana", "umoczona", "umodelowana", "umorzona", "umotywowana", "umówiona", "umożliwiana", "umożliwiona", "umroczniona", "umyta", "unaoczniona", "unicestwiana", "unicestwiona", "uniemożliwaina", "uniemożliwiona", "unierochomiona", "uniesiona", "unieszczęśliwiana", "unieszczęśliwiona", "unieszkodliwiana", "unieszkodliwiona", "unieważniana", "unieważniona", "uniewinniona", "uniezależniona", "unikana", "uniknięta", "unormowana", "unoszona", "unowoczesniana", "unowocześniana", "uodporniona", "uogólniana", "upakowana", "upalana", "upalona", "upamiętniana", "upamiętniona", "upaństwowiona", "upaprana", "uparta", "upaskudzona", "upchana", "upchnięta", "upewniana", "upewniona", "upgradowana", "upichcona", "upiększana", "upiększona", "upierana", "upierdolona", "upięta", "upijana", "upilnowana", "upinana", "upita", "uplastyczniona", "upłynięta", "upodabniana", "upodobniona", "upojona", "upokorzana", "upokorzona", "upolowana", "upominana", "uporządkowana", "upowszechniona", "upozorowana", "upozowana", "uprana", "uprasowana", "upraszczana", "uprawdopodobniona", "uprawiana", "uproszczona", "uproszona", "uprowadzana", "uprowadzona", "uprzątana", "uprzątnięta", "uprzedona", "uprzedzana", "uprzyjemniana", "uprzyjemniona", "uprzykrzana", "uprzytomniona", "upubliczniana", "upubliczniona", "upudrowana", "upuszczana", "upuszczona", "upychana", "urabiana", "uraczana", "uradowana", "Urągana", "uratowana", "urażana", "urażona", "uregulowana", "urobiona", "uroniona", "urośnięta", "urozmaicana", "urozmaicona", "uruchamiana", "uruchomiona", "urwana", "urywana", "urządzana", "urządzona", "urzeczywistniana", "urzeczywistniona", "urżnięta", "usadowiona", "usadzona", "usamowolniona", "usankcjonowana", "usatyfakcjonowana", "uschnięta", "uściskana", "uścislona", "uściśnięta", "usidlona", "usiedzona", "uskładana", "uskoczona", "uskuteczniana", "uskuteczniona", "usłuchana", "usługiwana", "usłużona", "usłyszana", "usmażona", "uśmiana", "uśmiercana", "uśmiercona", "uśmierzona", "uspana", "uśpiona", "uspokajana", "uspokojona", "uspołeczniana", "usprawiedliwiana", "usprawiedliwiona", "usprawniona", "usprzątana", "ustabilizowana", "ustalana", "ustalona", "ustanawiana", "ustanowiona", "ustąpiona", "ustatkowana", "ustawiana", "ustawiona", "ustępowana", "ustosunkowana", "ustrojona", "ustrzegana", "ustrzelona", "usunięta", "ususzona", "usuwana", "uświadamiana", "uświadczona", "uświadomiona", "uświęcona", "uświniona", "usychana", "usypana", "usypiana", "usystematyzowana", "usytuowana", "uszanowana", "uszczelniana", "uszczęśliwiana", "uszczęśliwiona", "uszczuplona", "uszczypnięta", "uszkadzana", "uszkodzona", "uszlachetniana", "uszlachetniona", "usztywniona", "uszykowana", "uszyta", "utajniona", "utargowana", "utarta", "utemperowana", "utkana", "utknięta", "utkwiona", "utoczona", "utopiona", "utorowana", "utożsamiana", "utożsamiona", "utracona", "utrącona", "utrudniana", "utrudniona", "utrwalana", "utrwalona", "utrzymywana", "utuczona", "utulona", "utwierdzana", "utwierdzona", "utworzona", "utylizowana", "uwalniana", "uwalona", "uwarunkowana", "uważana", "uwiązana", "uwiązywana", "uwidoczniona", "uwieczniana", "uwieczniona", "uwielbiana", "uwielbiona", "uwieńczona", "uwierana", "uwierzona", "uwieszona", "uwieziona", "uwięziona", "uwijana", "uwikłana", "uwinięta", "uwita", "uwłaczana", "uwłaszczona", "uwodzona", "uwolniona", "uwsteczniana", "uwsteczniona", "uwydatniana", "uwypiklona", "uwzględniana", "uwzględniona", "użądlona", "uzależniana", "uzależniona", "uzasadniana", "uzasadniona", "uzbierana", "uzbrajana", "uzbrojona", "uzdrawiana", "uzdrowiona", "użerana", "uzewnętrzniana", "uzewnętrzniona", "uzgadniana", "uzgodniona", "uziemiona", "uzmysłowiona", "uznana", "uznawana", "uzupełniana", "uzupełniona", "uzurpowana", "użyczana", "użyczona", "uzyskana", "uzyskiwana", "użyta", "używana", "wabiona", "wąchana", "wachlowana", "wahana", "walczona", "wałkowana", "walnięta", "walona", "ważona", "wbijana", "wbita", "wcelowana", "wchłonięta", "wciągana", "wciągnięta", "wcielana", "wcielona", "wcierana", "wcięta", "wcinana", "wciskana", "wciśnięta", "wczepiona", "wczołgana", "wczuta", "wczytana", "wczytywana", "wdana", "wdarta", "wdawana", "wdepnięta", "wdeptana", "wdetonowana", "wdmuchiwana", "wdrapana", "wdrapywana", "wdrażana", "wdrążona", "wdrożona", "wduszona", "wdychana", "wdzierana", "wędkowana", "wentylowana", "wepchana", "wepchnięta", "werbowana", "weryfikowana", "wessana", "wetkana", "wetknięta", "wezwana", "wgłębiana", "wgniatana", "wgnieciona", "wgrana", "wgryzana", "wgryziona", "wiązana", "wibrowana", "widywana", "widziana", "wiedzona", "wielbiona", "wiercona", "wierzgana", "wierzona", "wieszana", "wietrzona", "więżona", "wikłana", "windowana", "winszowana", "wiosłowana", "wirowana", "witana", "wita", "wizualizowana", "wjeżdżana", "wkalkulowana", "wkładana", "wklejana", "wklejona", "wklepana", "wkłuta", "wkomponowana", "wkopana", "wkopywana", "wkraczana", "wkradana", "wkradziona", "wkręcana", "wkręcona", "wkupiona", "wkurwiana", "wkuta", "wkuwana", "włączana", "włączona", "władana", "władowana", "włamana", "włamywana", "wlana", "wlepiana", "wlepiona", "wlewana", "wliczana", "wliczona", "włożona", "wmanewrowana", "wmanipulowana", "wmawiana", "wmieszana", "wmówiona", "wmurowana", "wmuszona", "wnerwiana", "wnerwiona", "wniesiona", "wnikana", "wniknięta", "wnioskowana", "wnoszona", "wodowana", "wojowana", "wołana", "woskowana", "wożona", "wpajana", "wpakowana", "wparowana", "wpasowana", "wpatrywana", "wpędzana", "wpędzona", "wperswadowana", "wpieniona", "wpięta", "wpisana", "wpisywana", "wpłacana", "wpłacona", "wplatana", "wplątana", "wplątywana", "wpojona", "wpompowana", "wpraszana", "wprawiana", "wproszona", "wprowadzana", "wprowadzona", "wpuszczona", "wpychana", "wrabiana", "wręczana", "wrobiona", "wróżona", "wryta", "wrzucana", "wrzucona", "wrzynana", "wsadzana", "wsadzona", "wskazana", "wskazywana", "wskórana", "wskrzeszana", "wskrzeszona", "wślizgiwana", "wślizgnięta", "wsłuchana", "wsparta", "wspierana", "wspięta", "współczuta", "współodczuwana", "współtworzona", "współżyta", "wspomagana", "wspominana", "wspomniana", "wstąpiona", "wstawiana", "wstawiona", "wstrząsana", "wstrząśnięta", "wstrzelona", "wstrzykiwana", "wstrzyknięta", "wstrzymana", "wstrzymywana", "wstukana", "wsunięta", "wsuwana", "wsypana", "wszamana", "wszczepiana", "wszczepiona", "wszczęta", "wszczynana", "wszyta", "wtajemniczana", "wtajemniczona", "wtapiana", "wtargnięta", "wtarta", "wtaszczona", "wtłoczona", "wtopiona", "wtrącona", "wtryniana", "wtulana", "wtulona", "wtykana", "wwalona", "wwiercana", "wwiercona", "wwieziona", "wwożona", "wyartykułowana", "wyautowana", "wybaczana", "wybaczona", "wybadana", "wybatożona", "wybawiona", "wybebeszona", "wybełkotana", "wybiczowana", "wybielana", "wybielona", "wybierana", "wybijana", "wybita", "wybłagana", "wyblaknięta", "wybrandzlowana", "wybrana", "wybroniona", "wybrzydzana", "wybuchana", "wybuchnięta", "wybudowana", "wybudzana", "wybudzona", "wyburzana", "wyburzona", "wycackana", "wycałowana", "wyceniana", "wyceniona", "wychlana", "wychłostana", "wychodowana", "wychowana", "wychowywana", "wychrobotana", "wychwalana", "wychwycona", "wychylana", "wychylona", "wyciągana", "wyciągnięta", "wyciekana", "wycieniowana", "wycierana", "wycięta", "wycinana", "wyciskana", "wyciśnięta", "wyciszana", "wyciszona", "wycofana", "wyćwiczona", "wycyckana", "wycyganiona", "wyczarowana", "wyczarterowana", "wyczekana", "wyczekiwana", "wyczerpana", "wyczesana", "wyczołgana", "wyczołgiwana", "wyczuta", "wyczuwana", "wyczyniana", "wyczyszczona", "wyczytana", "wyczytywana", "wydalana", "wydalona", "wydana", "wydębiona", "wydedukowana", "wydelegowana", "wydepilowana", "wydeptywana", "wydłubana", "wydłubywana", "wydłużana", "wydłużona", "wydmuchana", "wydmuchiwana", "wydobyta", "wydobywana", "wydojona", "wydoroślana", "wydostana", "wydrana", "wydrapana", "wydrapywana", "wydrążona", "wydrukowana", "wydukana", "wyduszona", "wydychana", "wydziedziczona", "wydzielana", "wydzielona", "wydzierana", "wydzierżawiona", "wydziobana", "wydziwiana", "wydzwaniana", "wyedukowana", "wyedytowana", "wyeeliminowana", "wyegzekwowana", "wyeksmitowana", "wyekspediowana", "wyeksploatowana", "wyeksponowana", "wyeksportowana", "wyeliminowana", "wyemigrowana", "wyemitowana", "wyewoluowana", "wyfrunięta", "wygadana", "wygadywana", "wyganiana", "wygarbowana", "wygarniana", "wygarnięta", "wygasana", "wygaśnięta", "wygaszana", "wygaszona", "wygenerowana", "wygięta", "wyginana", "wygładzana", "wygładzona", "wygłaszana", "wygłodzona", "wygłosowana", "wygłoszona", "wygłówkowana", "wygnana", "wygolona", "wygoniona", "wygooglowana", "wygospodarowana", "wygotowana", "wygrana", "wygrawerowana", "wygrażana", "wygrywana", "wygryziona", "wygrzana", "wygrzebana", "wygrzebywana", "wygrzewana", "wygubiona", "wyhaczona", "wyhaftowana", "wyhamowana", "wyhodowana", "wyizolowana", "wyjadana", "wyjaśniana", "wyjaśniona", "wyjawiana", "wyjawiona", "wyjedzona", "wyjęta", "wyjmowana", "wykadrowana", "wykalibrowana", "wykalkulowana", "wykańczana", "wykantowana", "wykąpana", "wykaraskana", "wykarczowana", "wykarmiana", "wykasowana", "wykastrowana", "wykazana", "wykazywana", "wykierowana", "wykitowana", "wykiwana", "wykładana", "wyklarowana", "wyklepana", "wyklinana", "wykłócana", "wykluczana", "wykluczona", "wykluta", "wykłuta", "wykminiona", "wykolejona", "wykołowana", "wykombinowana", "wykonana", "wykończona", "wykonywana", "wykopana", "wykopnięta", "wykopywana", "wykorkowana", "wykorzeniana", "wykorzeniona", "wykorzystana", "wykorzystywana", "wykoszona", "wykpita", "wykradana", "wykradnięta", "wykręcana", "wykręcona", "wykreowana", "wykreślana", "wykreślona", "wykrochmalona", "wykrojona", "wykrwawiana", "wykrwawiona", "wykryta", "wykrywana", "wykrzesana", "wykrztuszona", "wykrzyczona", "wykrzykiwana", "wykrzyknięta", "wykrzywiana", "wykształcona", "wyksztuszona", "wykupiona", "wykupywana", "wykuta", "wykuwana", "wyłączana", "wyłączona", "wylądowana", "wyładowana", "wyładowywana", "wyłajana", "wyłamana", "wyłamywana", "wyłaniana", "wylansowana", "wylana", "wyłapana", "wyłapywana", "wyławiana", "wyleasingowana", "wyleczona", "wylęgana", "wylegimytowana", "wylewana", "wyłgana", "wylicytowana", "wyliczana", "wyliczona", "wylizana", "wylizywana", "wylogowana", "wyłoniona", "wylosowana", "wyłowiona", "wyłożona", "wyłudzana", "wyłudzona", "wyłupana", "wyłuskana", "wyłuskiwana", "wyłuszczona", "wyluzowana", "wymacana", "wymachiwana", "wymagana", "wymahiwana", "wymalowana", "wymamrotana", "wymanewrowana", "wymarzona", "wymasowana", "wymawiana", "wymazana", "wymazywana", "wymeldowana", "wymeldowywana", "wymiatana", "wymieciona", "wymieniana", "wymieniona", "wymierzana", "wymieszana", "wymigana", "wymigiwana", "wymijana", "wyminięta", "wymknięta", "wymoczona", "wymodelowana", "wymontowana", "wymordowana", "wymsknięta", "wymuszana", "wymyślana", "wymyślona", "wymyta", "wynagradzana", "wynagrodzona", "wynajdowana", "wynajdywana", "wynajęta", "wynajmowana", "wynaleziona", "wynarodowiona", "wynegocjowana", "wyniesiona", "wyniknięta", "wyniszczana", "wyniszczona", "wyniuchana", "wynoszona", "wynurzana", "wyobrażana", "wyobrażona", "wyodrębniona", "wyolbrzymiana", "wyolbrzymiona", "wyorbowana", "wyosiowana", "wyostrzana", "wyostrzona", "wypaczana", "wypakowana", "wypakowywana", "wypalana", "wypalona", "wypałowana", "wyparowana", "wyparta", "wypasana", "wypastowana", "wypatroszona", "wypatrywana", "wypatrzona", "wypchana", "wypchnięta", "wypędzana", "wypędzlowana", "wypełniana", "wypełniona", "wypersfadowana", "wyperswadowana", "wypierana", "wypięta", "wypijana", "wypinana", "wypisana", "wypisywana", "wypita", "wypłacana", "wypłacona", "wypłakana", "wypłakiwana", "wypłaszczona", "wyplatana", "wyplątana", "wypleniona", "wyplewiona", "wypłoszona", "wypłukana", "wypłukiwana", "wypluta", "wypluwana", "wypocona", "wypoczęta", "wypolerowana", "wypominana", "wypomniana", "wypompowana", "wypompowywana", "wyposażona", "wypowiadana", "wypowiedziana", "wypoziomowana", "wypożyczana", "wypracowana", "wypracowywana", "wyprana", "wyprasowana", "wypraszana", "wyprawiana", "wyprawiona", "wypróbowana", "wyprodukowana", "wyprojektowana", "wypromieniowana", "wypromowana", "wyprostowana", "wyprostowywana", "wyproszona", "wyprowadzana", "wyprowadzona", "wypróżniana", "wypróżniona", "wypruta", "wypruwana", "wyprzedana", "wyprzedawana", "wyprzedzana", "wyprzedzona", "wyprzęgana", "wypstrykana", "wypucowana", "wypuszczana", "wypuszczona", "wypychana", "wypytana", "wypytywana", "wyrąbana", "wyrabiana", "wyrąbywana", "wyratowana", "wyrażana", "wyrażona", "wyrecytowana", "wyręczana", "wyręczona", "wyregulowana", "wyrejestrowana", "wyremontowana", "wyreżyserowana", "wyrobiona", "wyrolowana", "wyrośnięta", "wyrównana", "wyrównywana", "wyróżniana", "wyróżniona", "wyrugowana", "wyruszana", "wyrwana", "wyrypana", "wyrysowana", "wyryta", "wyrywana", "wyrządzona", "wyrzeźbiona", "wyrżnięta", "wyrzucana", "wyrzucona", "wyrzygana", "wyrzynana", "wyrzywana", "wysączona", "wysadzana", "wysadzona", "wyschnięta", "wyściskana", "wyselekcjonowana", "wysępiona", "wysiadywana", "wysiedzona", "wysilana", "wysilona", "wyskakiwana", "wyskalowana", "wyskoczona", "wyskrobana", "wyskubywana", "wysłana", "wyśledzona", "wyślizgiwana", "wyślizgnięta", "wysłowiona", "wysłuchana", "wysłuchiwana", "wysmagana", "wysmarkana", "wysmarowana", "wysmażana", "wysmażona", "wyśmiana", "wyśmiewana", "wysmołowana", "wysmyrana", "wyśniona", "wysnuta", "wysnuwana", "wysondowana", "wyspecjalizowana", "wyśpiewana", "wyśpiewywana", "wyspowiadana", "wysprzątana", "wysprzedana", "wyssana", "wystartowana", "wystawiona", "wysterelizowana", "wysterylizowana", "wystosowana", "wystosowywana", "wystraszona", "wystrojona", "wystrugana", "wystrychnięta", "wystrzegana", "wystrzelana", "wystrzeliwana", "wystrzelona", "wystudzona", "wystukana", "wystukiwana", "wystygnięta", "wysunięta", "wysuszana", "wysuwana", "wyswatana", "wyświadczana", "wyświadczona", "wyświetlana", "wyświetlona", "wyswobodzona", "wysyłana", "wysypana", "wysypywana", "wysysana", "wyszabrowana", "wyszalana", "wyszarpana", "wyszarpnięta", "wyszasowana", "wyszczotkowana", "wyszczuplona", "wyszeptana", "wyszkolona", "wyszlifowana", "wyszorowana", "wyszperana", "wyszukana", "wyszukiwana", "wyszumiona", "wyszykowana", "wyszyta", "wytapetowana", "wytargana", "wytargowana", "wytarta", "wytarzana", "wytaszczona", "wytatuowana", "wytchnięta", "wytępiona", "wytknięta", "wytłoczona", "wytłumaczona", "wytłumiona", "wytoczona", "wytrąbiona", "wytrącana", "wytrącona", "wytransmitowana", "wytransportowana", "wytrenowana", "wytresowana", "wytriangulowana", "wytropiona", "wytruta", "wytrząsana", "wytrzasnięta", "wytrząśnięta", "wytrzebiona", "wytrzepana", "wytrzeszczana", "wytrzeźwiana", "wytrzymana", "wytrzymywana", "wytwarzana", "wytworzona", "wytyczona", "wytykana", "wytypowana", "wyuczona", "wywabiana", "wywabiona", "wywąchana", "wywalana", "wywalczona", "wywalona", "wywarta", "wywarzana", "wyważana", "wyważona", "wywęszana", "wywężykowana", "wywiana", "wywiązana", "wywiązywana", "wywierana", "wywiercona", "wywieszana", "wywieszona", "wywietrzona", "wywieziona", "wywijana", "wywindowana", "wywinięta", "wywłaszczona", "wywlekana", "wywnętrzniona", "wywnioskowana", "wywodzona", "wywolana", "wywoływana", "wywoskowana", "wywożona", "wywracana", "wywrócona", "wywróżona", "wywyższana", "wyżalona", "wyzbyta", "wyzdrowiona", "wyżebrana", "wyżerana", "wyzerowana", "wyzionięta", "wyznaczana", "wyznaczona", "wyznana", "wyznawana", "wyzwalana", "wyzwana", "wyzwolona", "wyzygzakowana", "wyżynana", "wyzyskana", "wyzyskiwana", "wyżyta", "wyzywana", "wyżywana", "wyżywiona", "wzbijana", "wzbita", "wzbogacana", "wzbogacona", "wzbraniana", "wzbudzana", "wzbudzona", "wzburzana", "wzburzona", "wżeniona", "wzięta", "wzmacniona", "wzmagana", "wzmocniona", "wznawiana", "wzniecana", "wznieciona", "wzniesięta", "wznoszona", "wznowiona", "wzorowana", "wzrośnięta", "wzruszona", "wzwyżana", "wzywana", "zaabordowana", "zaadaptowana", "zaadoptowana", "zaadresowana", "zaakcentowana", "zaakceptowana", "zaaklimatyzowana", "zaalarmowana", "zaanektowana", "zaangażowana", "zaanonsowana", "zaapelowana", "zaaplikowana", "zaaportowana", "zaaprobowana", "zaaranżowana", "zaaresztowana", "zaatakowana", "zabaczona", "zabalowana", "zabandażowana", "zabarwiona", "zabarykadowana", "zabawiana", "zabawiona", "zabepieczana", "zabetonowana", "zabezpieczona", "zabierana", "zabita", "zabłądzona", "zablefowana", "zabłocona", "zablokowana", "zabraniana", "zabrana", "zabrnięta", "zabroniona", "zabrudzona", "zabudowana", "zabukowana", "zabulona", "zaburzona", "zabutelkowana", "zacementowana", "zacerowana", "zachciana", "zachęcana", "zachęcona", "zachlapana", "zachodzona", "zachomikowana", "zachorowana", "zachowana", "zachowywana", "zachwalana", "zachwalona", "zachwiana", "zachwycona", "zaciągana", "zaciągnięta", "zaciążona", "zaciekawiona", "zaciemniana", "zaciemniona", "zacierana", "zacieśniona", "zacięta", "zacinana", "zaciskana", "zaciśnięta", "zaćmiona", "zacumowana", "zacytowana", "zaczadzona", "zaczarowana", "Zaczepiana", "zaczepiona", "zaczerpana", "zaczesana", "zaczęta", "zaczołgana", "zaczynana", "zadarta", "zadawalana", "zadawana", "zadbana", "zadebiutowana", "zadedykowana", "zadeklamowana", "zadeklarowana", "zademonstrowana", "zadenucjowana", "zadepeszowana", "zadeptana", "zadeptywana", "zadęta", "zadławiona", "żądlona", "zadłużana", "zadłużona", "zadokowana", "zadomowiona", "zadowalana", "zadrapana", "zadraśnięta", "zadręczana", "zadręczona", "zadrutowana", "zadurzana", "zadurzona", "zaduszona", "zadymiona", "zadźgana", "zadziobana", "zadziwiana", "zadziwiona", "zafakturowana", "zafałszowana", "zafarbowana", "zafiksowana", "zafundowana", "zagadana", "zagadnięta", "zagadywana", "zagajona", "zaganiana", "zagapiona", "zagarażowana", "zagarniana", "zagarnięta", "zagaszona", "zagazowana", "zagęszczona", "zagięta", "zaginana", "zaginięta", "zagłębiana", "zagłębiona", "zagłodzona", "zagłuszana", "zagłuszona", "zagmatwana", "zagnana", "zagnieżdżona", "zagojona", "zagoniona", "zagospodarowana", "zagotowana", "zagrabiona", "zagradzana", "zagrażana", "zagrodzona", "zagrywana", "zagryzana", "zagryziona", "zagrzana", "zagrzebana", "zagrzewana", "zagubiona", "zagwarantowana", "zahaczona", "zahamowana", "zahandlowana", "zaharowana", "zahartowana", "zahipnotyzowana", "zaholowana", "zaimitowana", "zaimplantowana", "zaimplementowana", "zaimprowizowana", "zainaugurowana", "zainfekowana", "zainicjowana", "zainkasowana", "zainscenizowana", "zainspirowana", "zainstalowana", "zainteresowana", "zaintrygowana", "zaintubowana", "zainwestowana", "zaizolowana", "zajadana", "zajana", "zajarana", "zajechana", "zajęta", "zajmowana", "zakablowana", "zakamuflowana", "zakasana", "zakasowana", "zakąszana", "zakatalogowana", "zakatowana", "zakatrupiona", "zakazana", "zakażana", "zakazywana", "zakiszona", "zakładana", "zaklasyfikowana", "zaklejana", "zaklejona", "zaklepana", "zaklepywana", "zaklinana", "zaklinowana", "zakłócana", "zakłócona", "zaklopotana", "zakłuta", "zakneblowana", "zakodowana", "zakolczykowana", "zakolorowana", "zakołysana", "zakomunikowana", "zakończona", "zakonserwowana", "zakopana", "zakopywana", "zakorzeniana", "zakorzeniona", "zakoszona", "zakosztowana", "zakotwiczana", "zakotwiczona", "zakpiona", "zakradana", "zakręcana", "zakręcona", "zakreślana", "zakreślona", "zakrwawiona", "zakryta", "zakrywana", "zakrzyczana", "zakrzyknięta", "zakrzywiana", "zakrzywiona", "zaksięgowana", "zaktualizowana", "zaktywizowana", "zaktywowana", "zakumana", "zakupiona", "zakurzona", "zakuta", "zakuwana", "zakwaterowana", "zakwestionowaa", "zakwitnięta", "załączona", "załadowana", "załagodzona", "zalamana", "zalaminowana", "załamywana", "zalana", "załapana", "załatana", "załatwiana", "załatwiona", "zalatywana", "zalecana", "zalecona", "zaleczona", "zalegalizowana", "zalegana", "zalepiana", "zalepiona", "zalewana", "zaliczana", "zaliczona", "załkana", "zalogowana", "żałowana", "założona", "zaludniona", "zamacana", "zamachnięta", "zamącona", "zamalowana", "zamanewrowana", "zamanifestowana", "zamarkowana", "zamartwiana", "zamarynowana", "zamarzana", "zamarznięta", "zamaskowana", "zamawiana", "zamazana", "zamazywana", "zamęczana", "zamęczona", "zameldowana", "zamelinowana", "zamerykanizowana", "zamiatana", "zamieniana", "zamieniona", "zamieszana", "zamieszczana", "zamieszczona", "zamieszkana", "zamieszkiwana", "zaminowana", "zamknięta", "zamocowana", "zamoczona", "zamontowana", "zamordowana", "zamortyzowana", "zamotana", "zamówiona", "zamrażana", "zamroczona", "zamrożona", "zamulana", "zamurowana", "zamydlona", "zamykana", "zanalizowana", "zanegowana", "zaniechana", "zanieczyszczana", "zanieczyszczona", "zaniedbana", "zaniedbywana", "zaniepokojona", "zaniesiona", "zanihilowana", "zanikana", "zaniknięta", "zaniżana", "zaniżona", "zanoszona", "zanotowana", "zanucona", "zanudzana", "zanudzona", "zanurzana", "zanurzona", "zanużona", "zaobaczona", "zaobserwowana", "zaoferowana", "zaofiarowana", "zaogniana", "zaogniona", "zaokrąglana", "zaokrąglona", "zaokrętowana", "zaopatrywana", "zaopatrzona", "zaopiekowana", "zaorana", "zaostrzana", "zaostrzona", "zaoszczędzona", "zapadana", "zapakowana", "zapalana", "zapalona", "zapamiętana", "zapamiętywana", "zapanowana", "zaparkowana", "zaparowywana", "zaparzana", "zaparzona", "zapaskudzona", "zapauzowana", "zapchana", "zapędzana", "zapełniana", "zapełniona", "zaperfumowana", "zapeszana", "zapewniana", "zapewniona", "zapieczętowana", "zapierana", "zapięta", "zapijana", "zapinana", "zapisana", "zapisuwana", "zapita", "zapłacona", "zapładniana", "zaplamiona", "zaplanowana", "zaplątana", "zapłodniona", "zaplombowana", "zapobiegana", "zapodana", "zapodawana", "zapodziana", "zapokojona", "zapolowana", "zapominana", "zapomniana", "zapowiadana", "zapowiedziana", "zapoznana", "zapoznawana", "zapożyczona", "zapracowywana", "zaprana", "zaprasowywana", "zapraszana", "zaprawiona", "zaprenumerowana", "zaprezentowana", "Zaprogramowana", "zaprojektowana", "zaproponowana", "zaproszona", "zaprotokołowana", "zaprowadzana", "zaprowadzona", "zaprzątana", "zaprzeczana", "zaprzeczona", "zaprzedana", "zaprzedawana", "zaprzęgana", "zaprzepaszczana", "zaprzestana", "zaprzestawana", "zaprzyjaźniona", "zapudłowana", "zapunktowana", "zapuszczana", "zapuszczona", "zapuszkowana", "zapychana", "zapylana", "zapylona", "zapytana", "zarabiana", "zaranżowana", "zarażana", "zarażona", "zarecytowana", "zaręczana", "zaręczona", "zarejestrowana", "zareklamowana", "zarekomendowana", "zarekomondowana", "zarekwirowana", "zarezerwowana", "zarobiona", "żartowana", "zarwana", "zaryglowana", "zarymowana", "zarysowana", "zarywana", "zaryzykowana", "zarządzana", "zarżnięta", "zarzucana", "zarzynana", "zasadzona", "zaścielona", "zasegurowana", "zaserwowana", "zasiadana", "zasiana", "zasiedlona", "zasięgana", "zasięgnięta", "zasiewana", "zasilana", "zasilona", "zaskakiwana", "zaskarbiona", "zaskoczona", "zaskrobana", "zasłaniana", "zaślepiana", "zaślepiona", "zasłodzona", "zasłoniona", "zasłużona", "zasmakowana", "zaśmiecana", "zaśmiecona", "zasmradzana", "zasmrodzona", "zasmucana", "zasmucona", "zasolona", "zaspakajana", "zaśpiewana", "zaspokajana", "zaspokojona", "zasponsorowana", "zaśrubowywana", "zassana", "zastana", "zastąpiona", "zastawiana", "zastawiona", "zastępowana", "zastopowana", "zastosowana", "zastraszana", "zastraszona", "zastrzelona", "zasugerowana", "zasunięta", "zasuwana", "zaświadczona", "zaświecona", "zaświoniona", "zasyfiona", "zasygnalizowana", "zasymilowana", "zasymulowana", "zasypana", "zasypywana", "zasysana", "zaszachowana", "zaszantażowana", "zaszargana", "zaszczepiana", "zaszczepiona", "zaszczuta", "zaszczycana", "zaszczycona", "zaszeptana", "zaszeregowana", "zaszlachtowana", "zasznurowana", "zaszpachlowana", "zasztyletowana", "zaszufladkowana", "zaszyfrowana", "zaszyta", "zaszywana", "zataczana", "zatajana", "zatajona", "zatamowana", "zatankowana", "zatapiana", "zatargana", "zatarta", "zatelegrafowana", "zatemperowana", "zatęskniona", "zatkana", "zatknięta", "zatoczona", "zatonięta", "zatopiona", "zatracana", "zatracona", "zatriumfowana", "zatrudniana", "zatrudniona", "zatruta", "zatruwana", "zatrzaskiwana", "zatrzaśnięta", "zatrząśnięta", "zatrzymana", "zatrzymywana", "zatuszowana", "zatwierdzana", "zatwierdzona", "zatykana", "zatynkowana", "zatytułowana", "zauploadowana", "zauroczona", "zautomatyzowana", "zauważana", "zauważona", "zawadzana", "zawalana", "zawalczona", "zawalona", "zawarta", "zaważona", "zawdzięczana", "zawetowana", "zawężona", "zawiadamiana", "zawiadomiona", "zawiązana", "zawiązywana", "zawiedzona", "zawierana", "zawierzona", "zawieszana", "zawieszona", "zawieziona", "zawijana", "zawinięta", "zawiniona", "zawiśnięta", "zawitana", "zawładnięta", "zawłaszczona", "zawodzona", "zawojowana", "zawołana", "zawoskowana", "zawożona", "zawracana", "zawrócona", "zawstydzana", "zażądana", "zażartowana", "zazdroszczona", "zażegnana", "zażenowana", "zaznaczana", "zaznajomiona", "zaznana", "zaznawana", "zażyczona", "zażyta", "zażywana", "zbaczana", "zbadana", "zbagatelizowana", "zbajerowana", "zbałamucona", "zbalansowana", "zbalsamowana", "zbankrutowana", "zbawiana", "zbawiona", "zbesztana", "zbezczeszczona", "zbierana", "zbijana", "zbita", "zbliżona", "zbluzgana", "zbojkotowana", "zbrojona", "zbrukana", "zbszczecona", "zbudowana", "zbudzona", "zbuntowana", "zburzona", "zbyta", "zbywana", "zchwytana", "zcięta", "zciszona", "zdana", "zdarta", "zdeaktywowana", "zdecydowana", "zdefiniowana", "zdeflorowana", "zdegradowana", "zdejmowana", "zdeklarowana", "zdekodowana", "zdekompresowana", "zdekoncentrowana", "zdekonstruowana", "zdelegalizowana", "zdemaskowana", "zdementowana", "zdemolowana", "zdemontowana", "zdemoralizowana", "zdenerwowana", "zdeponowana", "zdeprymowana", "zdeptana", "zderzana", "zderzona", "zdestabilizowana", "Zdetonowana", "zdetronizowana", "zdewastowana", "zdewaulowana", "zdezerterowana", "zdezintegrowana", "zdezorientowana", "zdezynfektowana", "zdiagnozowana", "zdjęta", "zdławiona", "zdmuchiwana", "zdmuchnięta", "zdobyta", "zdobywana", "zdołowana", "zdominowana", "zdopingowana", "zdrabniana", "zdradzana", "zdradzona", "zdrapana", "zdrapywana", "zdrutowana", "zdruzgotana", "zduplikowana", "zduszona", "zdwojona", "zdyscyplinowana", "zdyskredytowana", "zdyskwalifikowana", "zdystansowana", "zdzielona", "zdzierana", "zdzierżona", "zdziesiątkowana", "Zdzwoniona", "zebrana", "zechciana", "zedytowana", "żegnana", "żeniona", "zepchnięta", "zepsuta", "żerowana", "zerwana", "zerżnięta", "zeskakiwana", "zeskanowana", "zeskrobywana", "zesłana", "ześlizgiwana", "ześlizgnięta", "zesmolona", "zespawiana", "zespolona", "zessana", "zestawiana", "zestawiona", "zestresowana", "zestrzeliwana", "zestrzelona", "zeswatana", "zeszklona", "zeszlifowana", "zetknięta", "zezłoszczona", "zeznana", "zeznawana", "zezwalana", "zezwolona", "zfinansowana", "zgadana", "zgadywana", "zgajana", "zganiona", "zgarnięta", "zgaśnięta", "zgaszona", "zgięta", "zginana", "zgładzona", "zgłaszana", "zgłębiana", "zgłębiona", "zgłośniona", "zgłoszona", "zgłuszona", "zgniatana", "zgnieciona", "zgnita", "zgnojona", "zgodzona", "zgolona", "zgoniona", "zgotowana", "zgrabiona", "zgrillowana", "zgromadzana", "zgromadzona", "zgrupowana", "zgrzeszona", "zgrzytana", "zgubiona", "zgwałcona", "zhackowana", "zhakowana", "zhańbiona", "zhandlowana", "zharmonizowana", "zidentyfikowana", "ziewana", "zignorowana", "zilustrowana", "zinfiltrowana", "zintegrowana", "zintensyfikowana", "zinterpretowana", "zinwentaryzowana", "zirytowana", "zjadana", "zjawiana", "zjednana", "zjednoczona", "zjedzona", "zjeżdżona", "zkontaktowana", "zkserowana", "złączona", "złagodzona", "złajana", "złamana", "zlana", "złapana", "zlecana", "zlecona", "zlekceważona", "zlepiana", "zlepiona", "zlewana", "zlicytowana", "zliczana", "zliczona", "zlikwidowana", "zlinczowana", "zlitowana", "zlizana", "zlizywana", "złoita", "zlokalizowana", "złomowana", "żłopana", "złowiona", "złożona", "złupiona", "złuszczana", "zluzowana", "zmacana", "zmącona", "zmagana", "zmagazynowana", "zmajstrowana", "zmaksylizowana", "zmanipulowana", "zmarnowana", "zmartwychwstana", "zmarznięta", "zmasakrowana", "zmaterializowana", "zmawiana", "zmazana", "zmazywana", "zmbobardowana", "zmiatana", "zmiażdżona", "zmiękczona", "zmielona", "zmieniana", "zmieniona", "zmierzana", "zmierzona", "zmierzwiona", "zmieszana", "zmieszczona", "zmiksowana", "zminiaturyzowana", "zminimalizowana", "zmniejszana", "zmniejszona", "zmobilizowana", "zmoczona", "zmodernizowana", "zmodyfikowana", "zmoknięta", "zmonopolizowana", "zmontowana", "zmostkowana", "zmotywowana", "zmówiona", "zmrożona", "zmrużona", "zmumifikowana", "zmuszana", "zmuszona", "zmutowana", "zmyślana", "zmyta", "zmywana", "znacjonalizowana", "znajdowana", "znajdywana", "znakowana", "znaleziona", "znana", "znęcana", "zneutralizowana", "zniechęcona", "znieczulona", "zniekształcana", "zniekształcona", "znienawidzona", "znieprawiona", "zniesiona", "zniesławiana", "zniesławiona", "zniewalana", "znieważana", "znieważona", "zniewolona", "zniszczona", "zniweczona", "zniwelowana", "zniżana", "zniżona", "znokautowana", "znormalniona", "znoszona", "znudzona", "zobaczona", "zobowiązana", "zobrazowana", "zogniskowana", "żonglowana", "zoomowana", "zoperowana", "zoptymalizowana", "zorbita", "zorganizowana", "zorientowana", "zostawiana", "zostawiona", "zpłacona", "zprowokowana", "zrabowana", "zrachowana", "zracjonalizowana", "zraniona", "zraportowana", "zrażana", "zrażona", "zrealizowana", "zrecenzowana", "zredagowana", "zredukowana", "zreferowana", "zreformowana", "zrefowana", "zrefundowana", "zregenerowana", "zrehabilitowana", "zreinkarnowana", "zreintegrowana", "zrekonfigurowana", "zrekonstruowana", "zrekrutowana", "zrekrystalizowana", "zrelacjonowana", "zrelaksowana", "zremiksowana", "zremisowana", "zreorganizowana", "zreperowana", "zreplikowana", "zresetowana", "zresocjalizowana", "zrestartowana", "zrestrukturyzowana", "zrewanżowana", "zrewidowana", "zrewolucjonizowana", "zrezygnowana", "zrobiona", "zrolowana", "zroszona", "zrównana", "zrównoważona", "zrównywana", "zróżnicowana", "zrozumiana", "zrugana", "zruinowana", "zrujnowana", "zrymowana", "zrywana", "zrzędzona", "zrzeszona", "zrzucana", "zrzucona", "zsumowana", "zsunięta", "zsuwana", "zsynchronizowana", "zsyntetyzowana", "zsypywana", "zszargana", "zszokowana", "zszyta", "zszywana", "ztarta", "żuta", "zutylizowana", "zużyta", "zużywana", "zwabiana", "zwabiona", "zwalana", "zwalczona", "zwalniana", "zwalona", "zwana", "zwaporyzowana", "zwątpiona", "zważana", "zważona", "zwędzona", "zwerbalizowana", "zwerbowana", "zweryfikowana", "zwęszona", "zwężona", "zwiastowana", "związana", "związywana", "zwichnięta", "zwiedzana", "zwiedzona", "zwiększona", "zwieńczona", "zwierzana", "zwieszana", "zwieszona", "zwietrzona", "zwijana", "zwilżona", "zwinięta", "zwizualizowana", "zwlekana", "zwodowana", "zwodzona", "zwołana", "zwolniona", "zwoływana", "zwożona", "zwracana", "zwrócona", "zwyciężana", "zwymiotowana", "życzona", "żygana", "zygzakowana", "zyskana", "zyskiwana", "żyta", "zżarta", "zżerana", "zżynana", "zżyta", "abdykowane", "absorbowane", "adaptowane", "administrowane", "adoptowane", "adorowane", "adresowane", "afiszowane", "agitowane", "akcentowane", "akceptowane", "aklimatyzowane", "akompaniowane", "aktualizowane", "aktywowane", "akumulowane", "alaromowane", "alienowane", "amerykanizowane", "amortyzowane", "amputowane", "analizowane", "angażowane", "anihilowane", "animowane", "anonsowane", "antropomorfizowane", "antydatowane", "anulowane", "apelowane", "aportowane", "aranżowane", "archiwizowane", "aresztowane", "argumentowane", "artykułowane", "ascendowane", "asekurowane", "asymilowane", "asystowane", "atakowane", "autoryzowane", "awanturowane", "babrane", "baczone", "badane", "bagatelizowane", "bajerowane", "bałamucone", "balangowane", "balansowane", "banalizowane", "bandażowane", "bankrutowane", "baraszkowane", "barwione", "bawione", "bazgrane", "bazowane", "bębnione", "bełkotane", "besztane", "biadolone", "biczowane", "bite", "błagane", "błaznowane", "blefowane", "błogosławione", "blokowane", "bluzgane", "błyskane", "błyszczące", "boczone", "bogacone", "bojkotowane", "boksowane", "bombardowane", "bopowane", "borowane", "brandzlowane", "brane", "brasowane", "bratane", "bredzone", "brnięte", "brodzone", "bronione", "brudzone", "brylowane", "budowane", "budzone", "bujane", "bulone", "bulwersowane", "bumelowane", "burzone", "butelkowane", "bywane", "cackane", "całowane", "capnięte", "cechowane", "celebrowane", "celowane", "cenione", "cenzurowane", "chciane", "chlane", "chlapane", "chlapnięte", "chlastane", "chłodzone", "chlostane", "chlubione", "chodowane", "chomikowane", "chorowane", "chowane", "chronione", "chrupane", "chrzczone", "chute", "chwalone", "chwycone", "chwytane", "chybotane", "chylone", "ciachnięte", "ciągane", "ciągnięte", "ciemiężone", "cierpiane", "cieszone", "cięte", "ciskane", "ciśnięte", "ciułane", "cmokane", "cmoknięte", "cofane", "cofnięte", "ćpane", "cucone", "cudzołożone", "cumowane", "ćwiartowane", "ćwiczone", "cykane", "cytowane", "czajone", "czarowane", "czczone", "czepiane", "czepione", "czerpane", "czesane", "częstowane", "czochrane", "czołgane", "czute", "czytane", "czyte", "darowane", "darte", "darzone", "datowane", "dawane", "dbane", "deaktywowane", "debatowane", "dedukowane", "dedykowane", "defibrylowane", "defilowane", "definiowane", "defraudowane", "degradowane", "degustowane", "deklamowane", "deklarowane", "dekodowane", "dekompresowane", "dekorowane", "dekretowane", "delegowane", "delektowane", "deliberowane", "demaskowane", "dementowane", "demolowane", "demonizowane", "demonstrowane", "demoralizowane", "denerwowane", "denuncjowane", "depeszowane", "depilowane", "deportowane", "deprawowane", "deptane", "deratyzowane", "destabilizowane", "destylowane", "desygnowane", "determinowane", "detonowane", "dewastowane", "dewaulowane", "dezaktywowane", "dezorientowane", "dezynfekowane", "diagnozowane", "dilowane", "dłubane", "dłużone", "dmuchane", "dmuchnięte", "dobiegane", "dobierane", "dobijane", "dobite", "dobrane", "dobudzone", "dobyte", "doceniane", "docenione", "dochodzone", "dochowane", "dochowywane", "dociągnięte", "dociekane", "docięte", "docinane", "dociskane", "dociśnięte", "doczekane", "doczepione", "doczołgane", "doczyszczone", "doczytane", "dodane", "dodawane", "dodrukowane", "dodrukowywane", "dofinansowane", "dofinansowywane", "dogadane", "dogadywane", "dogadzane", "doganiane", "doglądane", "doglądnięte", "dognane", "dogodzone", "dogonione", "dograne", "dogryzane", "dogryzione", "dogrzane", "dogrzebane", "doinformowane", "dojeżdżane", "dojone", "dojrzane", "dojrzewane", "dokańczane", "dokarmiane", "dokarmione", "dokazane", "dokazywane", "dokładane", "doklejone", "dokonane", "dokończone", "dokonywane", "dokopane", "dokopywane", "dokowane", "dokręcane", "dokręcone", "dokształcane", "dokształcone", "dokuczane", "dokumentowane", "dokupione", "dołączane", "dołączone", "doładowane", "dolane", "dolewane", "doliczone", "dołowane", "dołożone", "domagane", "domalowane", "domknięte", "domniewywane", "domówione", "domyślane", "domyślone", "domyte", "doniesione", "donoszone", "dopadane", "dopadnięte", "dopakowane", "dopalone", "dopasowane", "dopasowywane", "dopatrywane", "dopatrzone", "dopchane", "dopchnięte", "dopełniane", "dopełnione", "dopieszczone", "dopięte", "dopijane", "dopilnowane", "dopingowane", "dopisane", "dopisywane", "dopite", "dopłacane", "dopłacone", "dopłynięte", "dopolerowane", "dopompowane", "dopowiedziane", "dopracowane", "dopracowywane", "doprane", "doprawione", "doprecyzowane", "doproszone", "doprowadzane", "doprowadzone", "dopucowane", "dopuszczane", "dopuszczone", "dopytywane", "dorabiane", "doradzane", "doradzone", "doręczane", "doręczone", "dorobione", "dorównane", "dorównywane", "dorwane", "dorysowane", "dorzucane", "dorzucone", "doścignięte", "dosiadane", "dosięgnięte", "doskoczone", "doskonalone", "dosładzane", "dosłane", "dosłyszane", "dosolone", "dośrodkowane", "dossane", "dostane", "dostąpione", "dostarczane", "dostarczone", "dostawane", "dostawiane", "dostawione", "dostosowane", "dostosowywane", "dostrajane", "dostrojone", "dostrzegane", "dosunięte", "dosuwane", "doświadczane", "Doświetlone", "dosypane", "dosypywane", "doszkolone", "doszlifowane", "doszorowane", "doszukane", "doszukiwane", "doszyte", "dotankowane", "dotankowywane", "dotargane", "dotaszczone", "dotknięte", "dotlenione", "dotłumaczone", "dotowane", "dotrwane", "dotrzymane", "dotrzymywane", "dotykane", "douczane", "douczone", "dowalone", "dowiezione", "dowodzone", "dowożone", "doznane", "doznawane", "dozorowane", "dozowane", "dożyte", "dożywione", "dramatyzowane", "drapane", "drapnięte", "draśnięte", "drażnione", "drążone", "dręczone", "drenowane", "drgane", "drgnięte", "drukowane", "dryblowane", "dryfowane", "drzemane", "dubbingowane", "dublowane", "duplikowane", "duszone", "dworowane", "dygotane", "dyktowane", "dymane", "dymione", "dyrygowane", "dyscyplinowane", "dyskredytowane", "dyskryminowane", "dyskutowane", "dyskwalifikowane", "dysponowane", "dystansowane", "dystrybuowane", "dywagowane", "dźgane", "dźgnięte", "dziabnięte", "dziedziczone", "dziękowane", "dzielone", "dziergane", "dzierżone", "dziobane", "dziurawione", "dziurkowane", "dźwigane", "dźwignięte", "edukowane", "edytowane", "egzaminowane", "egzekutowane", "egzekwowane", "ekscytowane", "ekshumowane", "ekskomunikowane", "eksmitowane", "ekspandowane", "eksperymentowane", "eksploatowane", "eksplorowane", "eksponowane", "eksportowane", "eksterminowane", "ekstradowane", "ekstrapolowane", "eliminowane", "emancypowane", "emanowae", "emigrowane", "emitowane", "energetyzowane", "eskortowane", "etykietowane", "ewakuowane", "ewaluowane", "fabrykowane", "falowane", "fałszowane", "farbowane", "faszerowane", "faulowane", "faworyzowane", "fechtowane", "fermentowane", "ferowane", "figurowane", "filetowane", "filmowane", "filtrowane", "finalizowane", "finansowane", "firmowane", "fleszowane", "folgowane", "formułowane", "forsowane", "fotografowane", "fundowane", "gadane", "ganiane", "garbione", "gardzone", "garnirowane", "gaszone", "gawędzone", "gaworzone", "gazowane", "gdakane", "gderane", "generalizowane", "generowane", "gięte", "gilgotane", "gładzone", "głaskane", "głodowane", "głodzone", "gloryfikowane", "głosowane", "głoszone", "głowione", "gmatwane", "gmerane", "gnane", "gnębione", "gniecione", "gnite", "gnojone", "godzone", "gojone", "golnięte", "golone", "gonione", "googlowane", "gospodarowane", "goszczone", "gotowane", "grabione", "grane", "grasowane", "gratulowane", "grillowane", "grilowane", "gromadzone", "gromione", "grożone", "gruchane", "gruchnięte", "grupowane", "grywane", "gryzione", "grzane", "grzechotane", "gubione", "gustowane", "gwałcone", "gwarantowane", "gwizdane", "gwizdnięte", "hackowane", "haftowane", "hajtnięte", "hamowane", "hańbione", "handlowane", "harcowane", "harmonizowane", "harowane", "hartowane", "hibernowane", "hipnotyzowane", "hodowane", "holowane", "hołubione", "honorowane", "hospitalizowane", "huknięte", "hulane", "huśtane", "idealizowane", "identyfikowane", "ignorowane", "igrane", "ilustrowane", "imitowane", "implantowane", "implodowane", "imponowane", "importowane", "improwizowane", "indokrynowane", "indukowane", "infekowane", "infiltrowane", "informowane", "ingerowane", "inhalowane", "inscenizowane", "inspirowane", "instalowane", "instruowane", "insynuowane", "integrowane", "interpretowane", "interweniowane", "intonowane", "intubowane", "inwestowane", "inwigilowane", "irytowane", "iskrzone", "izolowane", "jadane", "jawione", "jazgotane", "jednoczone", "jedzone", "kablowane", "kadzone", "kalane", "kaleczone", "kalkulowane", "kamerowane", "kamienowane", "kamuflowane", "kanalizowane", "kantowante", "kąpane", "kapitulowane", "kapowane", "karane", "karbonizowane", "karcone", "karczowane", "karmione", "kartkowane", "kąsane", "kasowane", "kastrowane", "katalogowane", "katapultowane", "katowane", "katrupione", "kierowane", "kimane", "kiszone", "kiwane", "kiwnięte", "kłaniane", "klapane", "klapnięte", "klarowane", "klasyfikowane", "klębione", "klejone", "klepane", "klepnięte", "klikane", "kliknięte", "klonowane", "kłopotane", "kłute", "knocone", "knute", "kochane", "koczowane", "kodowane", "kojarzone", "kojfnięte", "kojone", "kolekcjonowane", "kolektywizowane", "kolidowane", "kolonizowane", "kolorowane", "koloryzowane", "kołowane", "kołysane", "kombinowane", "komenderowane", "komentowane", "komercjalizowane", "kompensowane", "komplementowane", "komplikowane", "komponowane", "kompromitowane", "komunikowane", "konane", "koncentrowane", "kończone", "konfabulowane", "konfiskowane", "konfrontowane", "konserwowane", "konspirowane", "konstruowane", "konsultowane", "konsumowane", "kontaktowane", "kontestowane", "kontrastowane", "kontrolowane", "kontrowane", "kontynuowane", "kontynuuowane", "konwertowane", "konwojowane", "koordynowane", "kopane", "kopcone", "kopiowane", "kopnięte", "kopulowane", "korelowane", "korkowane", "koronowane", "korygowane", "korzone", "korzystane", "koszone", "kotwiczone", "kozaczone", "kozłowane", "kpite", "kradzione", "krajane", "krążone", "kręcone", "kremowane", "kreowane", "krochmalone", "krojone", "kropione", "kruszone", "krystalizowane", "kryte", "krytykowane", "krzepnięte", "krzyczane", "krzyknięte", "krzywdzone", "krzywione", "krzyżowane", "kserowane", "księgowane", "kształcone", "kształtowane", "kulone", "kultywowane", "kumulowane", "kupczone", "kupione", "kupowane", "kupywane", "kurczone", "kurowane", "kursowane", "kurzone", "kuszone", "kute", "kwalifikowane", "kwestionowane", "łączone", "ładowane", "łagodzone", "łajdaczone", "lakierowane", "łamane", "lamentowane", "lansowane", "lane", "łapane", "łaskotane", "łaszone", "latane", "łatane", "lawirowane", "leczone", "legalizowane", "legitymowane", "lekceważone", "lepione", "lewitowane", "liberowane", "licencjonowane", "licytowane", "liczone", "likwidowane", "linczowane", "liniowane", "literowane", "litowane", "lizane", "liznięte", "lobbowane", "lokalizowane", "losowane", "łowione", "łożone", "lubiane", "łudzone", "lunatykowane", "łupane", "łupione", "łuskane", "lustrowane", "łuszczone", "luzowane", "łykane", "łyknięte", "łyżeczkowane", "macane", "machane", "machnięte", "mącone", "maczane", "maganyzowane", "maglowane", "majaczone", "majsterkowane", "majtane", "maksymalizowane", "malowane", "maltretowane", "mamione", "mamrotane", "manewrowane", "manifestowane", "manipulowane", "markowane", "marnotrawione", "marnowane", "marszczone", "marynowane", "marznięte", "masakrowane", "maskowane", "masowane", "masturbowane", "mataczone", "materializowane", "mawiane", "mazane", "maznięte", "męczone", "meldowane", "merdane", "metabolizowane", "miażdżone", "mielone", "mierzone", "mierzwione", "mieszane", "miętolone", "migane", "migdalone", "migotane", "mijane", "miksowane", "milowane", "minięte", "minimalizowane", "miotane", "mistyfikowane", "mitygowane", "mizdrzone", "mlane", "mniemane", "mnożone", "mobilizowane", "mocowane", "moczone", "modelowane", "modernizowane", "modlone", "modulowane", "modyfikowane", "molestowane", "monitorowane", "monopolizowane", "montowane", "mordowane", "motywowane", "mówione", "mrożone", "mrugane", "mrużone", "muskane", "mutowane", "mydlone", "mylone", "myszkowane", "myte", "nabazgrane", "nabiegane", "nabierane", "nabite", "nabrane", "nabrojone", "nabrudzone", "nabyte", "nabywane", "nacelowane", "nachapane", "nachodzone", "nachwalone", "nachylone", "naciągane", "naciągnięte", "nacierane", "nacięte", "nacinane", "naciskane", "naciśnięte", "nacjonalizowane", "naczepione", "nadane", "nadawane", "nadchodzone", "nadciągane", "nadciągnięte", "nadcięte", "nadesłane", "nadgonione", "nadgryzane", "nadgryzione", "nadinterpretowane", "nadłożone", "nadmieniane", "nadmienione", "nadmuchane", "nadrabiane", "nadrobione", "nadskakiwane", "nadsłuchiwane", "nadstawiane", "nadstawione", "nadszarpnięte", "naduszone", "nadużyte", "nadużywane", "nadwerężane", "nadwyrężane", "nadwyrężone", "nadziane", "nadzorowane", "naelektryzowane", "nafaszerowane", "nagabywane", "nagadane", "nagięte", "naginane", "nagłaszane", "nagłośnione", "nagonione", "nagradzane", "nagrane", "nagrodzone", "nagromadzone", "nagrywane", "nagryzmolone", "nagrzane", "nagrzebane", "nagrzewane", "nagwizdane", "naigrywane", "najechane", "najęte", "najmowane", "nakarmiane", "nakarmione", "nakazane", "nakazywane", "nakierowane", "nakierowywane", "nakładane", "nakłamane", "nakłaniane", "naklejane", "naklejone", "naklepane", "nakłonione", "nakłute", "nakłuwane", "nakopane", "nakręcane", "nakręcone", "nakreślane", "nakreślone", "nakruszone", "nakryte", "nakrywane", "nakrzyczane", "nakupione", "naładowane", "nalane", "nałapane", "nalepione", "nalewane", "naliczone", "nałowione", "nałożone", "namaczane", "namagnetyzowane", "namalowane", "namaszczane", "namaszczone", "namawiane", "namęczone", "namierzane", "namieszane", "namoczone", "namówione", "namydlane", "namyślone", "naniesione", "naoliwiane", "naoliwione", "naopowiadane", "naostrzone", "napadane", "napadnięte", "napakowane", "napalone", "naparzane", "napastowane", "napawane", "napchane", "napędzane", "napełniane", "napełnione", "napierane", "napiętnowane", "napięte", "napinane", "napisane", "naplute", "napływane", "napoczęte", "napojone", "napompowane", "napotkane", "napotykane", "napraszane", "naprawiane", "naprawione", "naprężane", "naprężone", "napromieniowane", "naprostowane", "naprowadzane", "naprowadzone", "napsute", "napuszczane", "napuszczone", "napychane", "napytane", "narąbane", "naradzane", "naradzone", "narastane", "narażane", "narażone", "nareperowane", "narkotyzowane", "narodzone", "naruszane", "naruszone", "narwane", "narysowane", "narzucane", "narzucone", "nasączane", "nasączone", "nasadzone", "nasiąkane", "nasilane", "nasilone", "naskakiwane", "naskoczone", "naskrobane", "naśladowane", "nasłane", "nasłuchane", "nasłuchiwane", "nasmarowane", "nastąpione", "nastawiane", "nastawione", "nastraszane", "nastrojone", "nastukane", "nasunięte", "nasuwane", "naświetlane", "nasycone", "nasyłane", "nasypane", "naszczane", "naszkicowane", "naszpikowane", "naszprycowane", "naszykowane", "naszyte", "naszywane", "natarte", "natchnięte", "natknięte", "natlenione", "natłuszczone", "natrafione", "natrząsane", "natrząsnięte", "nauczane", "nauczone", "nawadniane", "nawalone", "nawiązane", "nawiązywane", "nawiedzane", "nawiedzone", "nawiercone", "nawiewane", "nawiezione", "nawigowane", "nawijane", "nawilżane", "nawilżone", "nawinięte", "nawlekane", "nawodnione", "nawoływane", "nawoskowane", "nawożone", "nawpychane", "nawracane", "nawrócone", "nawrzucane", "nawtykane", "nawymyślane", "nazbierane", "nazmyślane", "naznaczane", "naznaczone", "nazrywane", "nazwane", "nazywane", "nęcone", "negocjowane", "negowane", "nękane", "neutralizowane", "niańczone", "niecierpliwione", "niedoceniane", "niedowidziane", "nienawidzone", "niesione", "nikolone", "niszczone", "nitkowane", "niuchane", "niweczone", "niwelowane", "nokautowane", "nominowane", "notowane", "nucone", "numerowane", "nurtowane", "obaczone", "obadane", "obalane", "obalone", "obandażowane", "obarczane", "obarczone", "obawiane", "obchodzone", "obciągnięte", "obciążone", "obcięte", "obcinane", "obcyndalane", "obczajane", "obczajone", "obdarowane", "obdarte", "obdarzane", "obdarzone", "obdzielone", "obdzierane", "obdzwaniane", "obdzwonione", "obejmowane", "oberwane", "obessane", "obezwładniane", "obezwładnione", "obfotografowane", "obfotografowywane", "obgadane", "obgadywane", "obgryzane", "obgryzione", "obiecane", "obiecywane", "obierane", "obijane", "obite", "objadane", "objaśniane", "objawiane", "objawione", "objechane", "objęte", "objeżdżane", "obkręcane", "oblane", "obłapiane", "obłapywane", "obłaskawiane", "obłaskawione", "obleciane", "oblegane", "oblewane", "obliczane", "obliczone", "oblizane", "obłowione", "obłożone", "obluzowane", "obluzowywane", "obmacane", "obmacywane", "obmawiane", "obmyślane", "obmyślone", "obmyte", "obmywane", "obnażane", "obniżane", "obniżone", "obnoszone", "obowiązywane", "obozowane", "obrabiane", "obrabowane", "obracane", "obradowane", "obramowane", "obraniane", "obrane", "obrastane", "obrażane", "obrażone", "obrobione", "obrócone", "obrodzone", "obronione", "obrysowane", "obrywane", "obryzgane", "obrzezane", "obrzucane", "obrzucone", "obrzygane", "obsadzane", "obsadzone", "obściskiwane", "obserwowane", "obsiane", "obsikane", "obsikiwane", "obskakiwane", "obskoczone", "obskubane", "obskubywane", "obśliniane", "obślinione", "obsługiwane", "obsłużone", "obsmarowane", "obstawiane", "obstawione", "obstrzeliwane", "obsunięte", "obsuwane", "obsypane", "obsypywane", "obszukane", "obszukiwane", "obtaczane", "obtarte", "obtoczone", "obudzone", "obwąchane", "obwąchiwane", "obwiązane", "obwiązywane", "obwieszane", "obwieszczane", "obwieszczone", "obwieszone", "obwijane", "obwiniane", "obwinięte", "obwołane", "obyte", "obżerane", "ocalane", "ocalone", "ocechowane", "oceniane", "ocenione", "ocenzurowane", "ochładzane", "ochlapane", "ochlapywane", "ochłodzone", "ochłonięte", "ochraniane", "ochronione", "ochrzaniane", "ochrzczone", "ociągane", "ocielone", "ocieplane", "ocieplone", "ocierane", "ocknięte", "ocucone", "ocute", "oczarowywane", "oczekiwane", "oczerniane", "oczernione", "oczyszczane", "oczyszczone", "odarte", "odbębnione", "odbetonowane", "odbezpieczane", "odbezpieczone", "odbijane", "odbite", "odblokowane", "odbudowane", "odbudowywane", "odbutowane", "odbyte", "odcedzane", "odchorowane", "odchowane", "odchudzane", "odchudzone", "odchylane", "odchylone", "odciągane", "odciągnięte", "odciążone", "odcierpione", "odcięte", "odcinane", "odcisnięte", "odcumowane", "odcyfrowane", "odcyfrowywane", "odczarowane", "odczekane", "odczepiane", "odczepione", "odczute", "odczuwane", "odczynione", "odczytane", "odczytywane", "oddalane", "oddane", "oddawane", "oddelegowane", "oddychane", "oddzielane", "oddzielone", "odebrane", "odegnane", "odegrane", "odejmowane", "odepchnięte", "oderwane", "odeskortowane", "odesłane", "odespane", "odessane", "odetkane", "odetnięte", "odezwane", "odfiltrowane", "odgadnięte", "odgadywane", "odganiane", "odgarniane", "odgarnięte", "odgięte", "odgniatane", "odgonione", "odgradzane", "odgrażane", "odgrodzone", "odgruzowane", "odgrywane", "odgryzane", "odgryzione", "odgrzane", "odgrzebane", "odgrzebywane", "odgrzewane", "odgwizdane", "odhaczone", "odholowane", "odinstalowane", "odizolowane", "odjedzone", "odjęte", "odjonizowane", "odkażane", "odkażone", "odkładane", "odklejone", "odkochane", "odkodowane", "odkodowywane", "odkopane", "odkopywane", "odkorkowane", "odkręcane", "odkręcone", "odkrojone", "odkryte", "odkrywane", "odkupione", "odkupywane", "odkurzane", "odkurzone", "odkute", "odłączane", "odłączone", "odłamywane", "odlane", "odlatywane", "odlepiane", "odlewane", "odliczane", "odliczone", "odłożone", "odłupane", "odmachane", "odmachiwane", "odmalowane", "odmarszczone", "odmawiane", "odmeldowane", "odmieniane", "odmienione", "odmierzane", "odmierzone", "odmieszane", "odmontowane", "odmówione", "odmrażane", "odmrożone", "odnajdowane", "odnalezione", "odnawiane", "odniesione", "odnoszone", "odnotowane", "odnotowywane", "odnowione", "odpakowane", "odpakowywane", "odpalane", "odpalone", "odpałzowane", "odparowane", "odparte", "odpędzane", "odpicowane", "odpieczętowane", "odpierane", "odpięte", "odpiłowane", "odpiłowywane", "odpinane", "odpisane", "odpisywane", "odpłacane", "odplamione", "odplątane", "odpłynięte", "odpowietrzone", "odpracowane", "odpracowywane", "odprasowane", "odprawiane", "odprawione", "odprężane", "odprostowane", "odprowadzane", "odprowadzone", "odprute", "odpryskane", "odpukane", "odpukiwane", "odpuszczane", "odpuszczone", "odpychane", "odrąbane", "odrabiane", "odrąbywane", "odradzane", "odradzone", "odrapane", "odrastane", "odratowane", "odreagowane", "odremontowane", "odrestaurowane", "odrestaurowywane", "odrobaczane", "odrobione", "odroczone", "odrodzone", "odrośnięte", "odróżniane", "odróżnione", "odrysowane", "odrywane", "odrzucane", "odrzucone", "odsączane", "odsączone", "odsadzone", "odseparowane", "odsiadywane", "odsiane", "odsiewane", "odsłaniane", "odsłonięte", "odsłuchane", "odsłuchiwane", "odsłużone", "odśnieżane", "odśnieżone", "odsolone", "odśpiewane", "odsprzedane", "odsprzedawane", "odstąpione", "odstawiane", "odstawione", "odstępowane", "odstraszane", "odstręczone", "odstresowane", "odstrzeliwane", "odstrzelone", "odsunięte", "odsuwane", "odświeżane", "odświeżone", "odsyłane", "odsypywane", "odsysane", "odszczekane", "odszczekiwane", "odsztafirowane", "odszukane", "odszyfrowane", "odszyfrowywane", "odszykowane", "odtrąbione", "odtrącone", "odtrute", "odtwarzane", "odtworzone", "oduczone", "odurzone", "odwalane", "odwalone", "odwiązane", "odwiązywane", "odwiedzane", "odwiedzone", "odwieszone", "odwiezione", "odwijane", "odwinięte", "odwlekane", "odwodnione", "odwodzone", "odwołane", "odwoływane", "odwożone", "odwracane", "odwrócone", "odwzajemnione", "odwzorowane", "odżegnane", "odziane", "odziedziczone", "odznaczane", "odznaczone", "odzwieciedlone", "odzwierciedlane", "odzwonione", "odzwyczajone", "odzyskane", "odzyskiwane", "odżyte", "odzywiane", "odżywione", "oferowane", "ofiarowane", "ofiarowywane", "ogarniane", "ogarnięte", "oglądane", "ogłaszane", "ogłoszone", "ogłupiane", "ogłupione", "ogłuszone", "ogołocone", "ogolone", "ograbiane", "ograbione", "ograniczane", "ograniczone", "ograne", "ogrodzone", "ogryzione", "ogrzane", "ogrzewane", "okablowane", "okaleczone", "okantowane", "okąpane", "okazane", "okazywane", "okiełznane", "okładane", "okłamane", "okłamywane", "oklaskiwane", "oklejone", "oklepane", "okopane", "okopywane", "okpione", "okradane", "okradzione", "okraszone", "okrążane", "okrążone", "okręcane", "okręcone", "określane", "określone", "okrojone", "okryte", "okrywane", "okrzyknięte", "okulawione", "okupione", "okupowane", "olane", "olewane", "olśnięte", "omamione", "omawiane", "omdlewane", "omijane", "ominięte", "omotane", "omówione", "onanizowane", "onieśmielane", "onieśmielone", "opadnięte", "opakowane", "opalane", "opalone", "opancerzone", "opanowane", "opanowywane", "oparte", "oparzone", "opasane", "opatentowane", "opatrywane", "opatrzone", "opatulone", "opchnięte", "opędzane", "opędzone", "operowane", "opętane", "opętywane", "opieczętowane", "opiekowane", "opierane", "opijane", "opisane", "opisywane", "opite", "opłacane", "opłacone", "opłakane", "opłakiwane", "opłukane", "oplute", "opluwane", "opływane", "opodatkowane", "opodatkowywane", "oponowane", "oporządzane", "oporządzone", "opowiadane", "opowiedziane", "opóźniane", "opóźnione", "opracowane", "opracowywane", "oprawiane", "oprawione", "oprowadzane", "oprowadzone", "opróżniane", "opróżnione", "opryskane", "opryskiwane", "opublikowane", "opukane", "opuszczane", "opuszczone", "opychane", "opylone", "orane", "orbowane", "organizowane", "orientowane", "oroszone", "orzekane", "orżnięte", "osaczane", "osaczone", "osadzane", "osądzane", "osadzone", "osądzone", "oscylowane", "osiadane", "osiągane", "osiągnięte", "osiedlane", "osiedlone", "osiedzone", "osierocone", "osiodłane", "oskalpowane", "oskarżone", "oskrobane", "oskrzydlane", "oskrzydlone", "oskubane", "oskubywane", "osłabiane", "osłabione", "oślepiane", "oślepione", "oślepnięte", "ośliniane", "osłodzone", "osłonione", "osłuchane", "osmalone", "ośmielone", "ośmieszane", "ośmieszone", "ostrzegane", "ostrzelane", "ostrzelite", "ostrzone", "ostudzone", "osunięte", "osuszane", "osuszone", "osuwane", "oswajane", "oświadczane", "oświadczone", "oświecane", "oświecione", "oświetlane", "oświetlone", "oswobadzane", "oswobodzone", "oswojone", "oszacowane", "oszałamiane", "oszczane", "oszczędzane", "oszczędzone", "oszklone", "oszlifowane", "oszołomione", "oszpecone", "oszukane", "oszukiwane", "oszwabione", "otaczane", "otarte", "otoczone", "otrute", "otruwane", "otrząsane", "otrząśnięte", "otrzepane", "otrzeźwione", "otrzymane", "otrzymywane", "otulone", "otumanione", "otwierane", "otworzone", "otwarte", "owane", "owdowione", "owiane", "owijane", "owinięte", "ozdabiane", "ozdobione", "ozdrowione", "ożenione", "oznaczane", "oznaczone", "oznajmiane", "oznajmione", "oznakowane", "ożyte", "ożywane", "ożywiane", "ożywione", "pachnące", "pacnąte", "pakowane", "paktowane", "pałane", "pałaszowane", "palnięte", "palone", "pamiętane", "panoszone", "paprane", "parafrazowane", "paraliżowane", "parkowane", "parowane", "partaczone", "parte", "parzone", "pastowane", "paszone", "patrolowane", "patroszone", "patrzone", "pauzowane", "pchane", "pchnięte", "pdholowane", "pedałowane", "pękane", "pęknięte", "pełnione", "penetrowane", "perforowane", "perfumowane", "perswadowane", "piastowane", "pichcone", "pielęgnowane", "pielone", "pienione", "pieszczone", "piętnowane", "pięte", "pijane", "pikietowane", "piknikowane", "pikowane", "pilnowane", "pilotowane", "piłowane", "pisane", "pisywane", "pite", "płacone", "plądrowane", "plamione", "planowane", "płaszczone", "plątane", "płatane", "pławione", "plewione", "płonące", "płoszone", "plotkowane", "plugawione", "płukane", "pluskane", "plute", "pobaraszkowane", "pobierane", "pobite", "pobłażane", "pobłogosławione", "pobrane", "pobrudzone", "pobudzane", "pobudzone", "pobujane", "pocałowane", "pocerowane", "pochłaniane", "pochlapane", "pochlebiane", "pochłonięte", "pochowane", "pochwalane", "pochwalone", "pochwycone", "pochylane", "pochylone", "pociachane", "pociągane", "pociągnięte", "pocierane", "pocieszane", "pocieszone", "pocięte", "pocone", "pocukrowane", "poćwiartowane", "poczesane", "poczęstowane", "poczęte", "poczochrane", "poczute", "poczytane", "poczytywane", "podane", "podarowane", "podarte", "podawane", "podążone", "podbierane", "podbijane", "podbite", "podbudowane", "podbudowywane", "podburzane", "podburzone", "podchwycone", "podciągane", "podciągnięte", "podcierane", "podcięte", "podcinane", "podczepione", "poddane", "poddawane", "podebrane", "podejmowane", "podejrzane", "podejrzewane", "podelektowane", "podeptane", "poderwane", "podesłane", "podglądane", "podgolone", "podgonione", "podgryzane", "podgrzane", "podgrzewane", "podjadane", "podjedzone", "podjęte", "podkablowane", "podkarmione", "podkładane", "podklejone", "podkolorowane", "podkołowane", "podkopane", "podkopywane", "podkradane", "podkradnięte", "podkręcane", "podkręcone", "podkreślane", "podkreślone", "podkształcone", "podkulone", "podkupione", "podkurzone", "podkute", "podłączane", "podłączone", "podładowane", "podłamane", "podlane", "podłapane", "podleczone", "podlegane", "podlewane", "podliczane", "podliczone", "podlizane", "podlizywane", "podłożone", "podmalowane", "podmieniane", "podmienione", "podmuchane", "podmyte", "podnajęte", "podniecane", "podniecone", "podniesione", "podnoszone", "podołane", "podopingowane", "podostrzone", "podotykane", "podpadnięte", "podpalane", "podpalone", "podparte", "podpatrywane", "podpatrzone", "podpieczętowane", "podpiekane", "podpierane", "podpięte", "podpiłowane", "podpinane", "podpisane", "podpisywane", "podpłacone", "podpłynięte", "podpompowane", "podporządkowane", "podporządkowywane", "podpowiadane", "podpowiedziane", "podprowadzane", "podpuszczane", "podpuszczone", "podpychane", "podpytane", "podrabiane", "podrapane", "podrasowane", "podratowane", "podrażnione", "podręczone", "podregulowane", "podreperowane", "podretuszowane", "podrobione", "podroczone", "podróżowane", "podrygiwane", "podrywane", "podrzucane", "podrzucone", "podrzynane", "podsadzone", "podskubywane", "podsłuchane", "podsłuchiwane", "podsmażane", "podsmażone", "podśpiewywane", "podstawiane", "podstawione", "podstemplowane", "podstrojone", "podsumowane", "podsumowywane", "podsunięte", "podsuwane", "podświetlane", "podsycane", "podsycone", "podsyłane", "podsypane", "podszczypywane", "podszkolone", "podszlifowane", "podszykowane", "podszyte", "podszywane", "podtapiane", "podtarte", "podtopione", "podtrzymane", "podtrzymywane", "podtuczone", "poduczane", "podupadane", "poduszone", "podwajane", "podwalane", "podważane", "podwędzone", "podwiązane", "podwieszane", "podwiezione", "podwijane", "podwinięte", "podwojone", "podwożone", "podwyżane", "podwyższane", "podwyższone", "podyktowane", "podyskutowane", "podziabane", "podziałane", "podziałkowane", "podziękowane", "podzielone", "podziurawione", "podziwiane", "podźwignięte", "poeksperymentowane", "pofarbowane", "pofatygowane", "pofilmowane", "poganiane", "pogardzane", "pogardzone", "pogarszane", "pogaszone", "pogładzone", "pogłaskane", "pogłębiane", "pogłębione", "pogłośnione", "pogmatwane", "pognębione", "pogniecione", "pogodzone", "pogonione", "pogorszone", "pogotowane", "pograbione", "pogrążane", "pogrążone", "pogrożone", "pogrubiane", "pogrubione", "pogruchane", "pogruchotane", "pogrupowane", "pogrywane", "pogryzane", "pogryzione", "pogrzane", "pogrzebane", "pogubione", "pogwałcane", "pohamowane", "pohandlowane", "poharatowane", "pohuśtane", "poinformowane", "poinstruowane", "pojednane", "pojęte", "pojmięte", "pojmowane", "pojone", "pokajane", "pokaleczone", "pokarane", "pokarmione", "pokąsane", "pokatalogowane", "pokazane", "pokazywane", "pokiereszowane", "pokierowane", "pokiwane", "pokładane", "poklepane", "poklepywane", "pokłonione", "pokłute", "pokochane", "pokolorowane", "pokoloryzowane", "pokołysane", "pokombinowane", "pokomplikowane", "pokonane", "pokończone", "pokonywane", "pokopane", "pokrajane", "pokrążone", "pokręcone", "pokrojone", "pokruszone", "pokryte", "pokrywane", "pokrzepiane", "pokrzepione", "pokrzyżowane", "pokuszone", "pokutowane", "połączone", "polakierowane", "połamane", "polane", "połapane", "połaskotane", "połatane", "polecane", "połechtane", "polecone", "poleczone", "polegane", "polemizowane", "polepszane", "polepszone", "polerowane", "polewane", "policzkowane", "policzone", "polimeryzowane", "polizane", "połknięte", "polowane", "połowione", "położone", "polubione", "poluźnione", "poluzowane", "połykane", "pomacane", "pomachane", "pomagane", "pomalowane", "pomarynowane", "pomasowane", "pomazane", "pomęczone", "pomiatane", "pomieszane", "pomieszczone", "pomijane", "pominięte", "pomiziane", "pomknięte", "pomnażane", "pomniejszane", "pomniejszone", "pomnożone", "pomoczone", "pompowane", "pomydlone", "pomylone", "pomyszkowane", "pomywane", "ponabijane", "ponaciskane", "ponadziewane", "ponaglane", "ponaglone", "ponagrywane", "ponaklejane", "ponakłuwane", "ponakrywane", "ponaprawiane", "ponawiane", "poniańczone", "poniechane", "ponieiwerane", "poniesione", "poniszczone", "poniżane", "poniżone", "ponoszone", "ponowione", "ponudzone", "poobcinane", "poobcowane", "poobczajane", "poobijane", "poobmacywane", "poobracane", "poobserwowane", "poodbijane", "poodcinane", "poodgryzane", "poodkurzane", "poodprawiane", "poodsuwane", "poodwalane", "pooglądane", "poograniczane", "poopalane", "poopiekane", "poopwiadane", "pootwierane", "popadane", "popakowane", "popalone", "poparte", "poparzone", "popchane", "popchnięte", "popędzane", "popędzone", "popękane", "popełniane", "popełnione", "poperfumowane", "popierane", "popieszczone", "popijane", "popilnowane", "popisane", "popite", "popłacone", "popłakiwane", "poplamione", "poplątane", "popluskane", "popodcinane", "popodziwiane", "popoprawiane", "poprane", "poprasowane", "poprawiane", "poprawione", "poproszone", "poprowadzone", "popryskane", "poprzebierane", "poprzeciągane", "poprzecinane", "poprzedzane", "poprzeglądane", "poprzeklinane", "poprzekopywane", "poprzemieszczane", "poprzenoszone", "poprzesadzane", "poprześladowane", "poprzestawiane", "poprzesuwane", "poprzewieszane", "poprzewracane", "poprzycinane", "poprzymierzane", "poprzytulane", "poprzywiązywane", "popsute", "popudrowane", "popukane", "popularyzowane", "popuszczane", "popuszczone", "popychane", "popykane", "popytane", "porabiane", "porachowane", "poranione", "poratowane", "porażone", "poręczone", "porównane", "porozbierane", "porozbijane", "porozciągane", "porozcinane", "porozdawane", "porozdzielane", "porozmieszczane", "poróżnione", "porozpędzane", "porozpieszczane", "porozprowadzane", "porozpruwane", "porozrzucane", "porozstawiane", "porozsyłane", "porozumiewane", "porozwalane", "porozwiązywane", "porozwieszane", "porozwożone", "portretowane", "poruszane", "poruszone", "porwane", "porysowane", "porywane", "porządkowane", "porządzone", "porzucane", "porzucone", "posądzane", "posadzone", "posądzone", "pościągane", "pościelone", "pościerane", "pościgane", "pościnane", "pościskane", "posegregowane", "posiadane", "posiane", "posiekane", "posilane", "posiłkowane", "posilone", "posiłowane", "posiniaczone", "posiorbane", "poskąpione", "poskładane", "posklejane", "poskramiane", "poskręcane", "poskrobane", "poskromione", "poskubane", "posłane", "posłodzone", "poślubiane", "poślubione", "posługiwane", "posmakowane", "posmarowane", "posolone", "posortowane", "pospekulowane", "pospieszane", "pośpieszane", "pośpiewane", "pospinane", "pospłacane", "posprawdzane", "posprzątane", "posprzedawane", "pośredniczone", "possane", "postanowione", "postane", "postarane", "postawione", "postemplowane", "posterowane", "postradane", "postraszone", "postrugane", "postrzegane", "postrzelane", "postrzelone", "postukane", "postymulowane", "posunięte", "posuwane", "poświącane", "poświadczone", "poświecone", "poświęcone", "poświętowane", "poświntuszone", "posyłane", "posypane", "posypywane", "poszarpane", "poszastane", "poszatkowane", "poszczute", "poszczycone", "poszczypane", "poszerzane", "poszerzone", "poszorowane", "poszpiegowane", "poszturchane", "poszukane", "poszukiwane", "poszwędane", "poszybowane", "potakiwane", "potarmoszone", "potarte", "potasowane", "potęgowane", "potępiane", "potępione", "potknięte", "potoczone", "potopione", "potorturowane", "potrącane", "potrącone", "potraktowane", "potrojone", "potrute", "potrząsane", "potrzaskane", "potrząsnięte", "potrząśnięte", "potrzymane", "Poturbowane", "poturlane", "potwierdzone", "potykane", "poucinane", "pouczane", "pouczone", "poudawane", "poukładane", "pouprawiane", "poupychane", "pourywane", "poustawiane", "poużywane", "powąchane", "powachlowane", "powalane", "powalone", "poważane", "powbijane", "powciągane", "powciskane", "powdychane", "powęszone", "powetowane", "powiadamiane", "powiadomione", "powiązane", "powiedziane", "powiedzone", "powiększane", "powielane", "powielone", "powierzane", "powierzone", "powieszone", "powiewane", "powinszowane", "powitane", "powite", "powkładane", "powlekane", "powłóczone", "powodowane", "powołane", "powoływane", "powożone", "powpychane", "powrócone", "powrzucane", "powsadzane", "powściągnięte", "powspominane", "powstrzymane", "powtarzane", "powtórzone", "powybierane", "powybijane", "powycierane", "powycinane", "powyciskane", "powydawane", "powyganiane", "powyginane", "powyjaśniane", "powyjmowane", "powyłączane", "powymiatane", "powymieniane", "powynoszone", "powypełniane", "powypisywane", "powyrywane", "powyrzucane", "powystrzelane", "powysyłane", "powywalane", "powywieszane", "powywracane", "powzięte", "pozabawiane", "pozabijane", "pozacierane", "pożądane", "pożądlone", "pozadzierane", "pozakładane", "pozaklinane", "pozałatwiane", "pozamiatane", "pozamieniane", "pozamrażane", "pozamykane", "pozapalane", "pozapinane", "pozapisywane", "pozapraszane", "pożarte", "pozasłaniane", "pozastrzelane", "pozatykane", "pozbawiane", "pozbawione", "pozbierane", "pozbyte", "pozbywane", "pozdejmowane", "pozdrawiane", "pozdrowione", "pożegnane", "pożerane", "pozmiatane", "pozmieniane", "pozmywane", "poznaczone", "poznane", "poznawane", "poznęcane", "pozorowane", "pozostawiane", "pozostawione", "pozowane", "pozrywane", "pozszywane", "pożute", "pozwalniane", "pozwane", "pozwiązywane", "pozwiedzane", "pozwolone", "pożyczane", "pożyczone", "pozyskane", "pożyte", "pozywane", "pożywiane", "pożywione", "praktykowane", "prane", "prasowane", "prawione", "prażone", "precyzowane", "preferowane", "prenumerowane", "prezentowane", "próbowane", "procesowane", "produkowane", "profanowane", "profilowane", "prognozowane", "programowane", "projektowane", "proklamowane", "prolongowane", "promieniowane", "promowane", "propagowane", "proponowane", "prosperowane", "prostowane", "proszkowane", "proszone", "protestowane", "protokołowane", "prowadzone", "prowokowane", "prute", "pryskane", "pryśnięte", "przeanalizowane", "przearanżowane", "przebaczane", "przebaczone", "przebadane", "przebiegnięte", "przebierane", "przebijane", "przebite", "przebolone", "przebrane", "przebudowane", "przebudowywane", "przebudzane", "przebudzone", "przebukowane", "przebyte", "przebywane", "przeceniane", "przecenione", "przechlapane", "przechodzone", "przechowane", "przechowywane", "przechrzcone", "przechwycone", "przechwytywane", "przechylane", "przechylone", "przechytrzane", "przechytrzone", "przeciągane", "przeciągnięte", "przeciążane", "przeciążone", "przeciekane", "przecierane", "przecierpiane", "przecięte", "przecinane", "przeciskane", "przeciśnięte", "przeciwstawiane", "przećwiczone", "przeczekane", "przeczesane", "przeczesywane", "przeczołgane", "przeczute", "przeczuwane", "przeczyszczone", "przeczytane", "przedarte", "przedawkowane", "przedawkowywane", "przedekorowane", "przedłożone", "przedłużane", "przedłużone", "przedmuchane", "przedobrzone", "przedostane", "przedostawane", "przedsiewzięte", "przedstawiane", "przedstawione", "przedymane", "przedyskutowane", "przedzierane", "przedziurawione", "przedziurkowane", "przeegzaminowane", "przefaksowane", "przefarbowane", "przefasonowane", "przefasowane", "przefaxowane", "przefiltrowane", "przeformowane", "przeforsowane", "przegadane", "przeganane", "przeganiane", "przegapiane", "przegapione", "przegięte", "przeginane", "przeglądane", "przeglądnięte", "przegłodzone", "przegłosowane", "przegonione", "przegotowane", "przegotowywane", "przegrabione", "przegradzane", "przegrane", "przegrupowane", "przegrupowywane", "przegrywane", "przegryzane", "przegryzione", "przegrzane", "przegrzebane", "przegrzewane", "przehandlowane", "przeholowane", "przeinstalowane", "przeistoczone", "przejadane", "przejaskrawiane", "przejaśnione", "przejawiane", "przejawione", "przejechane", "przejęte", "przejeżdżane", "przejmowane", "przejrzane", "przekabacane", "przekabacone", "przekablowane", "przekalibrowane", "przekalkulowane", "przekarmiane", "przekąszone", "przekazywane", "przekierowane", "przekierowywane", "przekimane", "przekładane", "przeklejone", "przeklęte", "przeklinane", "przeklnięte", "przekłute", "przekonane", "przekonfigurowane", "przekonstruowane", "przekonwertowane", "przekonywane", "przekopane", "przekopywane", "przekoziołkowane", "przekraczane", "przekręcane", "przekręcone", "przekreślane", "przekreślone", "przekroczone", "przekrojone", "przekrzyczone", "przekrzywione", "przekształcane", "przekształcone", "przekupione", "przekupywane", "przekute", "przekwalifikowane", "przełączane", "przełączone", "przeładowane", "przeładowywane", "przełamane", "przełamywane", "przelane", "przelatywane", "przeleciane", "przelewane", "przeleżane", "przelicytowane", "przeliczane", "przeliczone", "przeliterowane", "przełknięte", "przełożone", "przełykane", "przełyknięte", "przemalowane", "przemalowywane", "przemaszerowane", "przemawiane", "przemeblowane", "przemęczone", "przemielone", "przemieniane", "przemierzone", "przemieszczane", "przemieszczone", "przemijane", "przemilczane", "przemilczone", "przeminięte", "przemknięte", "przemodelowane", "przemusztrowane", "przemycane", "przemycone", "przemyślane", "przemyślone", "przemyte", "przemywane", "przenegocjowane", "przeniesione", "przenikane", "przeniknięte", "przenoszone", "przeobrażane", "przeobrażone", "przeoczane", "przeoczone", "przeorane", "przeorganizowane", "przeorientowane", "przepadane", "przepakowane", "przepalone", "przeparkowane", "przepchane", "przepchnięte", "przepędzane", "przepędzone", "przepełniane", "przepełnione", "przepijane", "przepiłowane", "przepisane", "przepisywane", "przepite", "przepłacane", "przepłacone", "przepłakane", "przeplanowane", "przepłoszone", "przepłukane", "przepłukiwane", "przepłynięte", "przepływane", "przepompowane", "przepompowywane", "przepowiadane", "przepowiedziane", "przepracowane", "przepracowywane", "przeprane", "przeprawiane", "przeprawione", "przeprogramowane", "przeprojektowane", "przeprowadzane", "przeprowadzone", "przepuszczane", "przepuszczone", "przepychane", "przepytane", "przepytywane", "przerąbane", "przerabiane", "przeradzane", "przerastane", "przerażone", "przeredagowane", "przerejestrowane", "przerobione", "przerodzone", "przerośnięte", "przerwane", "przerysowane", "przerywane", "przerzedzane", "przerzucane", "przerzucone", "przesączone", "przesadzane", "przesądzane", "przesadzone", "przesądzone", "prześcigane", "prześcignięte", "przesiadane", "przesiadywane", "przesiane", "przesiedlane", "przesiedlone", "przesiedziane", "przesiewane", "przesilone", "przeskakiwane", "przeskalowane", "przeskanowane", "przeskoczone", "przeskrobane", "prześladowane", "przesłaniane", "przesłane", "prześledzone", "prześlizgnięte", "przesłodzone", "przesłonięte", "przesłuchane", "przesłuchiwane", "przesmarowane", "przesolone", "przesortowane", "przespane", "prześpiewane", "przessane", "przestawiane", "przestawione", "przestemplowane", "przestraszone", "przestrojone", "przestrzegane", "przestrzelone", "przestudiowane", "przesunięte", "przesuwane", "prześwietlane", "prześwietlone", "przesyłane", "przesypane", "przesypiane", "przesypywane", "przeszarżowane", "przeszczepiane", "przeszczepione", "przeszkadzane", "przeszkolone", "przeszmuglowane", "przeszukane", "przeszukiwane", "przeszyte", "przeszywane", "przetaczane", "przetańczone", "przetapetowane", "przetarte", "przetestowane", "przetkane", "przetoczone", "przetopione", "przetrącone", "przetransformowane", "przetransmitowane", "przetransponowane", "przetransportowane", "przetrawione", "przetrwane", "przetrząsane", "przetrząśnięte", "przetrzepane", "przetrzymane", "przetrzymywane", "przetwarzane", "przetworzone", "przewalane", "przewalczone", "przewaletowane", "przewalone", "przeważane", "przeważone", "przewertowane", "przewiązane", "przewiązywane", "przewidywane", "przewidziane", "przewiercane", "przewiercone", "przewieszane", "przewieszone", "przewietrzone", "przewiezione", "przewijane", "przewinięte", "przewitane", "przewodniczone", "przewodzone", "przewożone", "przewracane", "przewrócone", "przewyższane", "przeymierzane", "przeżarte", "przeżeglowane", "przeżegnane", "przeziębione", "przezimowane", "przeznaczane", "przeznaczone", "przeżute", "przezwyciężane", "przezwyciężone", "przeżyte", "przezywane", "przeżywane", "przodowane", "przpochlebione", "przwdziewane", "przybastowane", "przybierane", "przybijane", "przybite", "przybliżane", "przybliżone", "przybrane", "przycelowane", "przycepione", "przychylone", "przyciągane", "przyciągnięte", "przyciemnione", "przycięte", "przycinane", "przyciskane", "przyciśnięte", "przyciszone", "przyćmiewane", "przyćmione", "przycumowane", "przyczepiane", "przyczesane", "przyczołgane", "przyczynione", "przydepnięte", "przydeptane", "przyduszone", "przydzielane", "przydzielone", "przygarnięte", "przygaszone", "przygazowane", "przygładzane", "przygnębiane", "przygniatane", "przygniecione", "przygotowane", "przygruchane", "przygrywane", "przygryzane", "przygryzione", "przygrzane", "przygwożdżone", "przyhamowane", "przyholowane", "przyjane", "przyjęte", "przyjmowane", "przyjrzane", "przykładane", "przyklejone", "przyklepane", "przykopane", "przykręcane", "przykręcone", "przykrócone", "przykryte", "przykrywane", "przykurzone", "przykute", "przykuwane", "przyłączane", "przyłączone", "przylane", "przyłapane", "przylegane", "przylepiane", "przylepione", "przyłożone", "przymierzone", "przymilane", "przymknięte", "przymocowane", "przymuszane", "przynależone", "przyniesione", "przynoszone", "przynudzane", "przyostrzone", "przyozdabiane", "przyozdobione", "przypadnięte", "przypakowane", "przypakowywane", "przypalane", "przypalone", "przyparte", "przypasowane", "przypatrywane", "przypatrzone", "przypieczętowane", "przypiekane", "przypierane", "przypięte", "przypilnowane", "przypiłowane", "przypinane", "przypisane", "przypisywane", "przypłacone", "przyplątane", "przypłynięte", "przypodobane", "przypominane", "przypomniane", "przyporządkowane", "przyprawiane", "przyprawione", "przyprowadzone", "przypucowane", "przypudrowane", "przypuszczane", "przypuszczone", "przyrównane", "przyrządzane", "przyrządzone", "przysiadane", "przysiągnięte", "przyskrzydlone", "przyskrzyniane", "przyskrzynione", "przysłaniane", "przysłane", "przysłodzone", "przysłonione", "przysłuchiwane", "przysługiwane", "przysłużone", "przysmażane", "przysmażone", "przyspieszane", "przyspieszone", "przysporzone", "przysposobione", "przyśrubowywane", "przyssane", "przystąpione", "przystawiane", "przystawione", "przystemplowane", "przystopowane", "przystosowane", "przystrojone", "przysunięte", "przysuwane", "przyswajane", "przyświecane", "przyświęcone", "przyswojone", "przysyłane", "przysypane", "przyszpilone", "przyszykowane", "przyszyte", "przyszywane", "przytaczane", "przytargane", "przytarte", "przytaszczane", "przytępiane", "przytępione", "przytkane", "przytłaczane", "przytłoczone", "przytłumione", "przytoczone", "przytrafione", "przytroczone", "przytruwane", "przytrzasnięte", "przytrzymane", "przytrzymywane", "przytulane", "przytulone", "przytwierdzane", "przytwierdzone", "przytykane", "przyuczone", "przyuważone", "przywabione", "przywalane", "przywalone", "przywarowane", "przywarte", "przywdziane", "przywiązane", "przywiązywane", "przywidziane", "przywiezione", "przywitane", "przywłaszczane", "przywłaszczone", "przywołane", "przywoływane", "przywożone", "przywracane", "przywrócone", "przyznaczone", "przyznane", "przyznawane", "przyzwalane", "przyzwane", "przyzwyczajane", "przyzwyczajone", "przyzywane", "psiamane", "pstrykane", "pstryknięte", "psute", "publikowane", "puchnięte", "pucowane", "pudłowane", "pudrowane", "puknięte", "punktowane", "pustoszone", "puszczane", "puszczone", "puszkowane", "puszone", "pykane", "pytane", "rabowane", "rachowane", "racjonalizowane", "racjonowane", "raczone", "radowane", "ranione", "raportowane", "ratowane", "ratyfikowane", "reaktywowane", "realizowane", "reanimowane", "recytowane", "ręczone", "redagowane", "redukowane", "reformowane", "refowane", "regenerowane", "regionalizowane", "regulowane", "reinkarnowane", "rejestrowane", "reklamowane", "rekomendowane", "rekompensowane", "rekonstruowane", "rekreowane", "rekrutowane", "rekwirowane", "relacjonowane", "relaksowane", "remodulowane", "remontowane", "renegocjowane", "reorganizowane", "reperowane", "replikowane", "represejonowane", "reprezentowane", "reprodukowane", "resetowane", "resocjalizowane", "respektowane", "resuscytowane", "retuszowane", "rewanżowane", "rewidowane", "rezerwowane", "rezonowane", "rezygnowane", "reżyserowane", "robione", "rodzone", "rojone", "rolowane", "romansowane", "ronione", "rozbawiane", "rozbawione", "rozbierane", "rozbijane", "rozbite", "rozbłyśnięte", "rozbrajane", "rozbrojone", "rozbudowane", "rozbudowywane", "rozbudzane", "rozbudzone", "rozbujane", "rozcapierzone", "rozchmurzone", "rozchodzone", "rozchylane", "rozchylone", "rozciągane", "rozciągnięte", "rozcieńczane", "rozcieńczone", "rozcierane", "rozcięte", "rozcinane", "rozczarowane", "rozczarowywane", "rozczesane", "rozczłonkowane", "rozczulane", "rozczytane", "rozdane", "rozdawane", "rozdeptane", "rozdmuchane", "rozdmuchiwane", "rozdrabniane", "rozdrapane", "rozdrapywane", "rozdrażniane", "rozdrażnione", "rozduszone", "rozdwojone", "rozdysponowane", "rozdzielane", "rozdzielone", "rozdzierane", "rozdziewiczone", "rozebrane", "rozedrane", "rozegrane", "rozegrywane", "rozepchane", "rozerwane", "rozesłane", "rozgarnięte", "rozgaszczane", "rozgięte", "rozglaszane", "rozgłoszone", "rozgniatane", "rozgniecione", "rozgniewane", "rozgonione", "rozgraniczone", "rozgrane", "rozgromione", "rozgrywane", "rozgryzane", "rozgryzione", "rozgrzane", "rozgrzebywane", "rozgrzeszone", "rozgrzewane", "rozhuśtane", "rozjaśniane", "rozjaśnione", "rozjechane", "rozjedzone", "rozjuszane", "rozjuszone", "rozkazane", "rozkazywane", "rozkładane", "rozklejane", "rozklejone", "rozkołysane", "rozkopane", "rozkopywane", "rozkoszowane", "rozkręcane", "rozkręcone", "rozkrojone", "rozkruszone", "rozkute", "rozkuwane", "rozkwaszone", "rozkwaterowane", "rozkwitane", "rozkwitnięte", "rozłączone", "rozładowane", "rozładowywane", "rozłamane", "rozlane", "rozlewane", "rozliczane", "rozliczone", "rozlokowane", "rozłożone", "rozłupane", "rozluźniane", "rozmanażane", "rozmasowane", "rozmawiane", "rozmazane", "rozmazywane", "rozmiękczone", "rozmieniane", "rozmienione", "rozmieszczane", "rozmieszczone", "rozminięte", "rozmnożone", "rozmontowane", "rozmówione", "rozmrażane", "rozmrożone", "rozmyślane", "rozmyte", "różnicowane", "rozniecane", "rozniecione", "rozniesione", "różnione", "roznoszone", "rozochocone", "rozpaczane", "rozpakowane", "rozpakowywane", "rozpalane", "rozpalone", "rozpamiętywane", "rozpaskudzane", "rozpatrywane", "rozpatrzone", "rozpędzane", "rozpędzone", "rozpętane", "rozpieszczane", "rozpieszczone", "rozpięte", "rozpiłowane", "rozpinane", "rozpisane", "rozpisywane", "rozplanowane", "rozpłaszczane", "rozpłaszczone", "rozplątane", "rozplątywane", "rozpłynięte", "rozpoczęte", "rozpoczynane", "rozpogodzone", "rozporządzane", "rozporządzone", "rozpościerane", "rozpostrzone", "rozpowiadane", "rozpowiedziane", "rozpowszechniane", "rozpowszechnione", "rozpoznane", "rozpoznawane", "rozpracowane", "rozpraszane", "rozprawiane", "rozprawiczone", "rozprawione", "rozprostowane", "rozproszone", "rozprowadzane", "rozprowadzone", "rozprute", "rozpruwane", "rozprzestrzeniane", "rozprzestrzenione", "rozpuszczane", "rozpuszczone", "rozpychane", "rozpylane", "rozpylone", "rozpytane", "rozpytywane", "rozrastane", "rozreklamowane", "rozrobione", "rozrośnięte", "rozróżniane", "rozróżnione", "rozruszane", "rozrysowane", "rozrywane", "rozrzucane", "rozsadzane", "rozsadzone", "rozsądzone", "rozścielone", "rozsiane", "rozsiekane", "rozsiewane", "rozsiodłane", "rozsławiane", "rozsławione", "rozsmarowane", "rozsmarowywane", "rozśmieszane", "rozstane", "rozstąpione", "rozstawane", "rozstawiane", "rozstawione", "rozstrojone", "rozstrząsane", "rozstrzeliwane", "rozstrzelone", "rozstrzygane", "rozstrzygnięte", "rozsunięte", "rozsupłane", "rozświetlane", "rozświetlone", "rozsyłane", "rozsypane", "rozsypywane", "rozszarpane", "rozszarpywane", "rozszczepiane", "rozszczepione", "rozszerzane", "rozszerzone", "rozszyfrowane", "roztaczane", "roztapiane", "roztarte", "roztoczone", "roztopione", "roztrwonione", "roztrząsane", "roztrzaskane", "rozumiane", "rozumowane", "rozwalane", "rozwalone", "rozwarte", "rozważane", "rozważone", "rozweselane", "rozweselone", "rozwiane", "rozwiązane", "rozwiązywane", "rozwidniane", "rozwiedzione", "rozwierane", "rozwiercone", "rozwieszane", "rozwieszone", "rozwiewane", "rozwiezione", "rozwikłane", "rozwinięte", "rozwlekane", "rozwodzone", "rozwścieczane", "rozwścieczone", "rozzłoszczone", "rugane", "ruinowane", "rujnowane", "runięte", "ruszane", "ruszone", "rwane", "ryczane", "ryglowane", "rymowane", "rysowane", "ryte", "ryzykowane", "rządzone", "rzeźbione", "rżnięte", "rzucane", "rzucone", "rzygane", "sabotażowane", "sączone", "sadzane", "sadzone", "sądzone", "salutowane", "salwowane", "sankcjonowane", "satysfakcjonowane", "scalone", "scementowane", "scentrowane", "scharakteryzowane", "schładzane", "schlane", "schlapane", "schlebione", "schłodzone", "schowane", "schronione", "schrupane", "schrzanione", "schwytane", "schylane", "ściągnięte", "ścielone", "ściemniane", "ściemnione", "ścierane", "ścierpione", "ścięte", "ścigane", "ścinane", "ściskane", "ściśnięte", "ściszane", "ściszone", "sędziowane", "segregowane", "selekcjonowane", "separowane", "sępione", "serwowane", "sfabrykowane", "sfajczone", "sfałszowane", "sfaulowane", "sfilmowane", "sfinalizowane", "sfinansowane", "sfingowane", "sformalizowane", "sformatowane", "sformowane", "sformułowane", "sforsowane", "sfotografowane", "shimmerowane", "siane", "siekane", "siorbane", "skadrowane", "skakane", "skalane", "skaleczone", "skalibrowane", "skalkulowane", "skalpowane", "skanalizowane", "skandowane", "skanowane", "skapitulowane", "skarcone", "skarżone", "skasowane", "skatalogowane", "skazane", "skażone", "skazywane", "skierowane", "składane", "składowane", "skłaniane", "sklasyfikowane", "sklecione", "sklejane", "sklejone", "sklepane", "skłócone", "skłonione", "sklonowane", "sknocone", "skojarzone", "skolonizowane", "skołowane", "skombinowane", "skomentowane", "skompensowane", "skompletowane", "skomplikowane", "skomponowane", "skompresowane", "skompromitowane", "skomunikowane", "skonane", "skoncentrowane", "skończone", "skondensowane", "skonfigurowane", "skonfiskowane", "skonfrontowane", "skonkretyzowane", "skonsolidowane", "skonstruowane", "skonsultowane", "skonsumowane", "skontaktowane", "skontrolowane", "skoordynowane", "skopane", "skopiowane", "skorektowane", "skorumpowane", "skorygowane", "skorzystane", "skoszone", "skracane", "skradzione", "skręcane", "skręcone", "skremowane", "skreślane", "skreślone", "skrobane", "skrobnięte", "skrócone", "skrojone", "skropione", "skruszone", "skrystalizowane", "skryte", "skrytykowane", "skrywane", "skrzecowane", "skrzepnięte", "skrzyczane", "skrzyte", "skrzywdzone", "skrzyżowane", "skserowane", "skubane", "skubnięte", "skulone", "skumulowane", "skupiane", "skupione", "skupowane", "skurczone", "skuszone", "skute", "skuwane", "skwitowane", "słane", "sławione", "śledzone", "ślinione", "ślizgane", "słodzone", "słuchane", "słyszane", "smagane", "smarowane", "smażone", "śmiecone", "smute", "smyrane", "snute", "sondowane", "sortowane", "spafycikowane", "spakowane", "spalane", "spałaszowane", "spalone", "spałowane", "spamiętane", "spaprane", "sparafrazowane", "sparaliżowane", "sparowane", "spartaczone", "spartolone", "sparzone", "spasowane", "spatałaszone", "spauzowane", "spawane", "spawione", "specjalizowane", "spędzane", "spędzone", "spekulowane", "spełniane", "spełnione", "spenetrowane", "spętane", "spierane", "spięte", "śpiewane", "spiłowane", "spinane", "spisane", "spiskowane", "spisywane", "spite", "spłacane", "spłacone", "splądrowane", "splajtowane", "splamione", "spłaszczone", "splatane", "splątane", "spłatane", "spławiane", "spławione", "spłodzone", "spłonięte", "spłoszone", "spłukane", "spłukiwane", "spluwane", "spływane", "spoczęte", "spoczywane", "spodziewane", "spojone", "spolaryzowane", "spoliczkowane", "sponiewierane", "sponsorowane", "spopielane", "spopielone", "spopularyzowane", "sportretowane", "sporządzane", "sporządzone", "spostrzegane", "spotęgowane", "spotkane", "spotykane", "spoufalane", "spowalniane", "spowiadane", "spowodowane", "spowolnione", "spoźnione", "spóźnione", "spożytkowane", "spożyte", "spożywane", "sprane", "sprasowane", "spraszane", "sprawdzone", "sprawione", "sprawowane", "sprecyzowane", "spreparowane", "sprężane", "sprężone", "spróbowane", "sprofanowane", "sprofilowane", "sprostowane", "sproszkowane", "sproszone", "sprowadzane", "sprowadzone", "sprowokowane", "spryskane", "spryskiwane", "sprywatyzowane", "sprzątane", "sprzątnięte", "sprzeczane", "sprzedane", "sprzedawane", "sprzeniewierzone", "spudłowane", "spustoszone", "spuszczane", "spuszczone", "spychane", "ssane", "stabilizowane", "stacjonowane", "staczane", "staranowane", "starczane", "stargowane", "startowane", "stawiane", "stawione", "stemplowane", "stenografowane", "stepowane", "sterowane", "sterroryzowane", "sterylizowane", "stłamszone", "stłumione", "stnięte", "stoczone", "stołowane", "stonowane", "stopione", "stopniowane", "storpedowane", "stosowane", "strącane", "stracone", "strącone", "strajkowane", "straszone", "stratowane", "strawione", "streamowane", "stresowane", "streszczane", "streszczone", "strofowane", "strojone", "stroszone", "strugane", "strute", "strymowane", "strząsane", "strzaskane", "strząśnięte", "strzelone", "strzepane", "strzępione", "strzepnięte", "strzepywane", "studiowane", "studzone", "stukane", "stuknięte", "stulone", "stwardnione", "stwarzane", "stwierdzane", "stwierdzone", "stworzone", "stykane", "stylizowane", "stymulowane", "sugerowane", "sumowane", "sunięte", "swatane", "swawolone", "świadczone", "świecone", "święcone", "świerzbione", "świętowane", "świntuszone", "sycone", "sygnalizowane", "symulowane", "synchronizowane", "sypane", "sypnięte", "szachrowane", "szacowane", "szafowane", "szamotane", "szanowane", "szargane", "szarpane", "szarpnięte", "szarżowane", "szasowane", "szastane", "szatkowane", "szczędzone", "szczepione", "szczerzone", "szczute", "szczycone", "szczypane", "szczytowane", "szefowane", "szemrane", "szepnięte", "szeptane", "szerzone", "szkalowane", "szkicowane", "szklone", "szkodzone", "szkolone", "szlachtowane", "szlifowane", "szmuglowane", "szokowane", "szorowane", "szpachlowane", "szpanowane", "szperane", "szprycowane", "sztachnięte", "szturchane", "szturchnięte", "szturmowane", "szufladkowane", "szuflowane", "szukane", "szulerowane", "szwankowane", "szydełkowane", "szydzone", "szyfrowane", "szykanowane", "szykowane", "szyte", "taktowane", "tamowane", "tankowane", "tapetowane", "taplane", "taranowane", "targane", "targnięte", "targowane", "tarmoszone", "tarte", "tarzane", "tasowane", "taszczone", "tatuowane", "tchnięte", "telefonowane", "telegrfowane", "teleportowane", "temperowane", "teoretyzowane", "tępione", "terroryzowane", "testowane", "tkane", "tknięte", "tłamszone", "tłoczone", "tłumaczone", "tłumione", "toczone", "tolerowane", "tonowane", "topione", "torowane", "torturowane", "towarzyszone", "trąbione", "trącane", "tracone", "trącone", "trafiane", "trafione", "tragizowane", "traktowane", "transferowane", "transformowane", "transmitowane", "transportowane", "tratowane", "trawione", "trenowane", "tresowane", "triumfowane", "tropione", "troszczone", "trute", "trwonione", "trymowane", "tryskane", "tryśnięte", "tryumfowane", "trywializowane", "trzaskane", "trzasnięte", "trzepane", "trzepnięte", "trzepotane", "trzęsione", "trzymane", "tuczone", "tułane", "tulone", "turlane", "tuszowane", "twistowane", "tworzone", "tykane", "tyranizowane", "tyrane", "tytułowane", "uaktualniane", "uaktualnione", "uaktywniane", "uaktywnione", "uargumentowane", "uatrakcyjnione", "ubabrane", "ubarwiane", "ubarwione", "ubawione", "ubezpieczane", "ubezpieczone", "ubezwłasnowolnione", "ubiczowane", "ubiegane", "ubierane", "ubijane", "ubite", "ubłagane", "ubliżane", "ubliżone", "ubolewane", "ubóstwiane", "ubrane", "ubroczone", "ubrudzone", "ucałowane", "ucharakteryzowane", "uchowane", "uchronione", "uchwalane", "uchwalone", "uchwycone", "uchylane", "uchylone", "uciągnięte", "ucieleśniane", "ucierane", "ucierpiane", "ucięte", "ucinane", "uciskane", "uciśnięte", "uciszane", "uciszone", "uciułane", "ucywilizowane", "uczczone", "uczepione", "uczesane", "uczęszczane", "uczone", "ucztowane", "uczute", "uczynione", "udane", "udaremnione", "udawane", "udekorowane", "udeptywane", "uderzane", "uderzone", "udobruchane", "udokumentowane", "udomawiane", "udomowione", "udoskonalane", "udoskonalone", "udostępniane", "udostępnione", "udowadniane", "udowodnione", "Udramatyzowane", "udręczone", "udrożnione", "udupione", "uduszone", "udzielane", "udzielone", "udźwignięte", "ueiwarygodnione", "ufane", "ufarbowane", "uformowane", "ufortyfikowane", "ufundowane", "ugadane", "uganiane", "ugaszane", "ugaszone", "ugięte", "uginane", "ugłaskane", "ugniatane", "ugodzone", "ugoszczone", "ugotowane", "ugrane", "ugruntowane", "ugryzione", "ugrzęznięte", "uhistoryzowane", "uhonorowane", "uiścite", "ujadane", "ujarzmiane", "ujarzmione", "ujawniane", "ujawnione", "ujęte", "ujeżdżane", "ujeżdżone", "ujmowane", "ujrzane", "ukamieniowane", "ukarane", "ukartowane", "ukąszone", "ukatrupione", "ukazane", "ukazywane", "ukierowane", "ukierunkowane", "układane", "uklepane", "ukłonione", "ukłute", "uknute", "ukojone", "ukołysane", "ukończone", "ukonkretnione", "ukoronowane", "ukradzione", "ukręcane", "ukręcone", "ukrojone", "ukryte", "ukrywane", "ukrzyżowane", "ukształtowane", "ukute", "ułagodzone", "ułaskawiane", "ułaskawione", "ulatniane", "ułatwiane", "ułatwione", "uleczane", "uleczone", "ulegane", "ulepione", "ulepszane", "ulepszone", "ulokowane", "ulotnione", "ułożone", "umacniane", "umalowane", "umartwiane", "umawiane", "umazane", "umeblowane", "umiejscowione", "umieszczane", "umieszczone", "umilane", "umilone", "umknięte", "umniejszane", "umniejszone", "umocnione", "umocowane", "umoczone", "umodelowane", "umorzone", "umotywowane", "umówione", "umożliwiane", "umożliwione", "umrocznione", "umyte", "unaocznione", "unicestwiane", "unicestwione", "uniemożliwaine", "uniemożliwione", "unierochomione", "uniesione", "unieszczęśliwiane", "unieszczęśliwione", "unieszkodliwiane", "unieszkodliwione", "unieważniane", "unieważnione", "uniewinnione", "uniezależnione", "unikane", "uniknięte", "unormowane", "unoszone", "unowoczesniane", "unowocześniane", "uodpornione", "uogólniane", "upakowane", "upalane", "upalone", "upamiętniane", "upamiętnione", "upaństwowione", "upaprane", "uparte", "upaskudzone", "upchane", "upchnięte", "upewniane", "upewnione", "upgradowane", "upichcone", "upiększane", "upiększone", "upierane", "upierdolone", "upięte", "upijane", "upilnowane", "upinane", "upite", "uplastycznione", "upłynięte", "upodabniane", "upodobnione", "upojone", "upokorzane", "upokorzone", "upolowane", "upominane", "uporządkowane", "upowszechnione", "upozorowane", "upozowane", "uprane", "uprasowane", "upraszczane", "uprawdopodobnione", "uprawiane", "uproszczone", "uproszone", "uprowadzane", "uprowadzone", "uprzątane", "uprzątnięte", "uprzedone", "uprzedzane", "uprzyjemniane", "uprzyjemnione", "uprzykrzane", "uprzytomnione", "upubliczniane", "upublicznione", "upudrowane", "upuszczane", "upuszczone", "upychane", "urabiane", "uraczane", "uradowane", "Urągane", "uratowane", "urażane", "urażone", "uregulowane", "urobione", "uronione", "urośnięte", "urozmaicane", "urozmaicone", "uruchamiane", "uruchomione", "urwane", "urywane", "urządzane", "urządzone", "urzeczywistniane", "urzeczywistnione", "urżnięte", "usadowione", "usadzone", "usamowolnione", "usankcjonowane", "usatyfakcjonowane", "uschnięte", "uściskane", "uścislone", "uściśnięte", "usidlone", "usiedzone", "uskładane", "uskoczone", "uskuteczniane", "uskutecznione", "usłuchane", "usługiwane", "usłużone", "usłyszane", "usmażone", "uśmiane", "uśmiercane", "uśmiercone", "uśmierzone", "uspane", "uśpione", "uspokajane", "uspokojone", "uspołeczniane", "usprawiedliwiane", "usprawiedliwione", "usprawnione", "usprzątane", "ustabilizowane", "ustalane", "ustalone", "ustanawiane", "ustanowione", "ustąpione", "ustatkowane", "ustawiane", "ustawione", "ustępowane", "ustosunkowane", "ustrojone", "ustrzegane", "ustrzelone", "usunięte", "ususzone", "usuwane", "uświadamiane", "uświadczone", "uświadomione", "uświęcone", "uświnione", "usychane", "usypane", "usypiane", "usystematyzowane", "usytuowane", "uszanowane", "uszczelniane", "uszczęśliwiane", "uszczęśliwione", "uszczuplone", "uszczypnięte", "uszkadzane", "uszkodzone", "uszlachetniane", "uszlachetnione", "usztywnione", "uszykowane", "uszyte", "utajnione", "utargowane", "utarte", "utemperowane", "utkane", "utknięte", "utkwione", "utoczone", "utopione", "utorowane", "utożsamiane", "utożsamione", "utracone", "utrącone", "utrudniane", "utrudnione", "utrwalane", "utrwalone", "utrzymywane", "utuczone", "utulone", "utwierdzane", "utwierdzone", "utworzone", "utylizowane", "uwalniane", "uwalone", "uwarunkowane", "uważane", "uwiązane", "uwiązywane", "uwidocznione", "uwieczniane", "uwiecznione", "uwielbiane", "uwielbione", "uwieńczone", "uwierane", "uwierzone", "uwieszone", "uwiezione", "uwięzione", "uwijane", "uwikłane", "uwinięte", "uwite", "uwłaczane", "uwłaszczone", "uwodzone", "uwolnione", "uwsteczniane", "uwstecznione", "uwydatniane", "uwypiklone", "uwzględniane", "uwzględnione", "użądlone", "uzależniane", "uzależnione", "uzasadniane", "uzasadnione", "uzbierane", "uzbrajane", "uzbrojone", "uzdrawiane", "uzdrowione", "użerane", "uzewnętrzniane", "uzewnętrznione", "uzgadniane", "uzgodnione", "uziemione", "uzmysłowione", "uznane", "uznawane", "uzupełniane", "uzupełnione", "uzurpowane", "użyczane", "użyczone", "uzyskane", "uzyskiwane", "użyte", "używane", "wabione", "wąchane", "wachlowane", "wahane", "walczone", "wałkowane", "walnięte", "walone", "ważone", "wbijane", "wbite", "wcelowane", "wchłonięte", "wciągane", "wciągnięte", "wcielane", "wcielone", "wcierane", "wcięte", "wcinane", "wciskane", "wciśnięte", "wczepione", "wczołgane", "wczute", "wczytane", "wczytywane", "wdane", "wdarte", "wdawane", "wdepnięte", "wdeptane", "wdetonowane", "wdmuchiwane", "wdrapane", "wdrapywane", "wdrażane", "wdrążone", "wdrożone", "wduszone", "wdychane", "wdzierane", "wędkowane", "wentylowane", "wepchane", "wepchnięte", "werbowane", "weryfikowane", "wessane", "wetkane", "wetknięte", "wezwane", "wgłębiane", "wgniatane", "wgniecione", "wgrane", "wgryzane", "wgryzione", "wiązane", "wibrowane", "widywane", "widziane", "wiedzone", "wielbione", "wiercone", "wierzgane", "wierzone", "wieszane", "wietrzone", "więżone", "wikłane", "windowane", "winszowane", "wiosłowane", "wirowane", "witane", "wite", "wizualizowane", "wjeżdżane", "wkalkulowane", "wkładane", "wklejane", "wklejone", "wklepane", "wkłute", "wkomponowane", "wkopane", "wkopywane", "wkraczane", "wkradane", "wkradzione", "wkręcane", "wkręcone", "wkupione", "wkurwiane", "wkute", "wkuwane", "włączane", "włączone", "władane", "władowane", "włamane", "włamywane", "wlane", "wlepiane", "wlepione", "wlewane", "wliczane", "wliczone", "włożone", "wmanewrowane", "wmanipulowane", "wmawiane", "wmieszane", "wmówione", "wmurowane", "wmuszone", "wnerwiane", "wnerwione", "wniesione", "wnikane", "wniknięte", "wnioskowane", "wnoszone", "wodowane", "wojowane", "wołane", "woskowane", "wożone", "wpajane", "wpakowane", "wparowane", "wpasowane", "wpatrywane", "wpędzane", "wpędzone", "wperswadowane", "wpienione", "wpięte", "wpisane", "wpisywane", "wpłacane", "wpłacone", "wplatane", "wplątane", "wplątywane", "wpojone", "wpompowane", "wpraszane", "wprawiane", "wproszone", "wprowadzane", "wprowadzone", "wpuszczone", "wpychane", "wrabiane", "wręczane", "wrobione", "wróżone", "wryte", "wrzucane", "wrzucone", "wrzynane", "wsadzane", "wsadzone", "wskazane", "wskazywane", "wskórane", "wskrzeszane", "wskrzeszone", "wślizgiwane", "wślizgnięte", "wsłuchane", "wsparte", "wspierane", "wspięte", "współczute", "współodczuwane", "współtworzone", "współżyte", "wspomagane", "wspominane", "wspomniane", "wstąpione", "wstawiane", "wstawione", "wstrząsane", "wstrząśnięte", "wstrzelone", "wstrzykiwane", "wstrzyknięte", "wstrzymane", "wstrzymywane", "wstukane", "wsunięte", "wsuwane", "wsypane", "wszamane", "wszczepiane", "wszczepione", "wszczęte", "wszczynane", "wszyte", "wtajemniczane", "wtajemniczone", "wtapiane", "wtargnięte", "wtarte", "wtaszczone", "wtłoczone", "wtopione", "wtrącone", "wtryniane", "wtulane", "wtulone", "wtykane", "wwalone", "wwiercane", "wwiercone", "wwiezione", "wwożone", "wyartykułowane", "wyautowane", "wybaczane", "wybaczone", "wybadane", "wybatożone", "wybawione", "wybebeszone", "wybełkotane", "wybiczowane", "wybielane", "wybielone", "wybierane", "wybijane", "wybite", "wybłagane", "wyblaknięte", "wybrandzlowane", "wybrane", "wybronione", "wybrzydzane", "wybuchane", "wybuchnięte", "wybudowane", "wybudzane", "wybudzone", "wyburzane", "wyburzone", "wycackane", "wycałowane", "wyceniane", "wycenione", "wychlane", "wychłostane", "wychodowane", "wychowane", "wychowywane", "wychrobotane", "wychwalane", "wychwycone", "wychylane", "wychylone", "wyciągane", "wyciągnięte", "wyciekane", "wycieniowane", "wycierane", "wycięte", "wycinane", "wyciskane", "wyciśnięte", "wyciszane", "wyciszone", "wycofane", "wyćwiczone", "wycyckane", "wycyganione", "wyczarowane", "wyczarterowane", "wyczekane", "wyczekiwane", "wyczerpane", "wyczesane", "wyczołgane", "wyczołgiwane", "wyczute", "wyczuwane", "wyczyniane", "wyczyszczone", "wyczytane", "wyczytywane", "wydalane", "wydalone", "wydane", "wydębione", "wydedukowane", "wydelegowane", "wydepilowane", "wydeptywane", "wydłubane", "wydłubywane", "wydłużane", "wydłużone", "wydmuchane", "wydmuchiwane", "wydobyte", "wydobywane", "wydojone", "wydoroślane", "wydostane", "wydrane", "wydrapane", "wydrapywane", "wydrążone", "wydrukowane", "wydukane", "wyduszone", "wydychane", "wydziedziczone", "wydzielane", "wydzielone", "wydzierane", "wydzierżawione", "wydziobane", "wydziwiane", "wydzwaniane", "wyedukowane", "wyedytowane", "wyeeliminowane", "wyegzekwowane", "wyeksmitowane", "wyekspediowane", "wyeksploatowane", "wyeksponowane", "wyeksportowane", "wyeliminowane", "wyemigrowane", "wyemitowane", "wyewoluowane", "wyfrunięte", "wygadane", "wygadywane", "wyganiane", "wygarbowane", "wygarniane", "wygarnięte", "wygasane", "wygaśnięte", "wygaszane", "wygaszone", "wygenerowane", "wygięte", "wyginane", "wygładzane", "wygładzone", "wygłaszane", "wygłodzone", "wygłosowane", "wygłoszone", "wygłówkowane", "wygnane", "wygolone", "wygonione", "wygooglowane", "wygospodarowane", "wygotowane", "wygrane", "wygrawerowane", "wygrażane", "wygrywane", "wygryzione", "wygrzane", "wygrzebane", "wygrzebywane", "wygrzewane", "wygubione", "wyhaczone", "wyhaftowane", "wyhamowane", "wyhodowane", "wyizolowane", "wyjadane", "wyjaśniane", "wyjaśnione", "wyjawiane", "wyjawione", "wyjedzone", "wyjęte", "wyjmowane", "wykadrowane", "wykalibrowane", "wykalkulowane", "wykańczane", "wykantowane", "wykąpane", "wykaraskane", "wykarczowane", "wykarmiane", "wykasowane", "wykastrowane", "wykazane", "wykazywane", "wykierowane", "wykitowane", "wykiwane", "wykładane", "wyklarowane", "wyklepane", "wyklinane", "wykłócane", "wykluczane", "wykluczone", "wyklute", "wykłute", "wykminione", "wykolejone", "wykołowane", "wykombinowane", "wykonane", "wykończone", "wykonywane", "wykopane", "wykopnięte", "wykopywane", "wykorkowane", "wykorzeniane", "wykorzenione", "wykorzystane", "wykorzystywane", "wykoszone", "wykpite", "wykradane", "wykradnięte", "wykręcane", "wykręcone", "wykreowane", "wykreślane", "wykreślone", "wykrochmalone", "wykrojone", "wykrwawiane", "wykrwawione", "wykryte", "wykrywane", "wykrzesane", "wykrztuszone", "wykrzyczone", "wykrzykiwane", "wykrzyknięte", "wykrzywiane", "wykształcone", "wyksztuszone", "wykupione", "wykupywane", "wykute", "wykuwane", "wyłączane", "wyłączone", "wylądowane", "wyładowane", "wyładowywane", "wyłajane", "wyłamane", "wyłamywane", "wyłaniane", "wylansowane", "wylane", "wyłapane", "wyłapywane", "wyławiane", "wyleasingowane", "wyleczone", "wylęgane", "wylegimytowane", "wylewane", "wyłgane", "wylicytowane", "wyliczane", "wyliczone", "wylizane", "wylizywane", "wylogowane", "wyłonione", "wylosowane", "wyłowione", "wyłożone", "wyłudzane", "wyłudzone", "wyłupane", "wyłuskane", "wyłuskiwane", "wyłuszczone", "wyluzowane", "wymacane", "wymachiwane", "wymagane", "wymahiwane", "wymalowane", "wymamrotane", "wymanewrowane", "wymarzone", "wymasowane", "wymawiane", "wymazane", "wymazywane", "wymeldowane", "wymeldowywane", "wymiatane", "wymiecione", "wymieniane", "wymienione", "wymierzane", "wymieszane", "wymigane", "wymigiwane", "wymijane", "wyminięte", "wymknięte", "wymoczone", "wymodelowane", "wymontowane", "wymordowane", "wymsknięte", "wymuszane", "wymyślane", "wymyślone", "wymyte", "wynagradzane", "wynagrodzone", "wynajdowane", "wynajdywane", "wynajęte", "wynajmowane", "wynalezione", "wynarodowione", "wynegocjowane", "wyniesione", "wyniknięte", "wyniszczane", "wyniszczone", "wyniuchane", "wynoszone", "wynurzane", "wyobrażane", "wyobrażone", "wyodrębnione", "wyolbrzymiane", "wyolbrzymione", "wyorbowane", "wyosiowane", "wyostrzane", "wyostrzone", "wypaczane", "wypakowane", "wypakowywane", "wypalane", "wypalone", "wypałowane", "wyparowane", "wyparte", "wypasane", "wypastowane", "wypatroszone", "wypatrywane", "wypatrzone", "wypchane", "wypchnięte", "wypędzane", "wypędzlowane", "wypełniane", "wypełnione", "wypersfadowane", "wyperswadowane", "wypierane", "wypięte", "wypijane", "wypinane", "wypisane", "wypisywane", "wypite", "wypłacane", "wypłacone", "wypłakane", "wypłakiwane", "wypłaszczone", "wyplatane", "wyplątane", "wyplenione", "wyplewione", "wypłoszone", "wypłukane", "wypłukiwane", "wyplute", "wypluwane", "wypocone", "wypoczęte", "wypolerowane", "wypominane", "wypomniane", "wypompowane", "wypompowywane", "wyposażone", "wypowiadane", "wypowiedziane", "wypoziomowane", "wypożyczane", "wypracowane", "wypracowywane", "wyprane", "wyprasowane", "wypraszane", "wyprawiane", "wyprawione", "wypróbowane", "wyprodukowane", "wyprojektowane", "wypromieniowane", "wypromowane", "wyprostowane", "wyprostowywane", "wyproszone", "wyprowadzane", "wyprowadzone", "wypróżniane", "wypróżnione", "wyprute", "wypruwane", "wyprzedane", "wyprzedawane", "wyprzedzane", "wyprzedzone", "wyprzęgane", "wypstrykane", "wypucowane", "wypuszczane", "wypuszczone", "wypychane", "wypytane", "wypytywane", "wyrąbane", "wyrabiane", "wyrąbywane", "wyratowane", "wyrażane", "wyrażone", "wyrecytowane", "wyręczane", "wyręczone", "wyregulowane", "wyrejestrowane", "wyremontowane", "wyreżyserowane", "wyrobione", "wyrolowane", "wyrośnięte", "wyrównane", "wyrównywane", "wyróżniane", "wyróżnione", "wyrugowane", "wyruszane", "wyrwane", "wyrypane", "wyrysowane", "wyryte", "wyrywane", "wyrządzone", "wyrzeźbione", "wyrżnięte", "wyrzucane", "wyrzucone", "wyrzygane", "wyrzynane", "wyrzywane", "wysączone", "wysadzane", "wysadzone", "wyschnięte", "wyściskane", "wyselekcjonowane", "wysępione", "wysiadywane", "wysiedzone", "wysilane", "wysilone", "wyskakiwane", "wyskalowane", "wyskoczone", "wyskrobane", "wyskubywane", "wysłane", "wyśledzone", "wyślizgiwane", "wyślizgnięte", "wysłowione", "wysłuchane", "wysłuchiwane", "wysmagane", "wysmarkane", "wysmarowane", "wysmażane", "wysmażone", "wyśmiane", "wyśmiewane", "wysmołowane", "wysmyrane", "wyśnione", "wysnute", "wysnuwane", "wysondowane", "wyspecjalizowane", "wyśpiewane", "wyśpiewywane", "wyspowiadane", "wysprzątane", "wysprzedane", "wyssane", "wystartowane", "wystawione", "wysterelizowane", "wysterylizowane", "wystosowane", "wystosowywane", "wystraszone", "wystrojone", "wystrugane", "wystrychnięte", "wystrzegane", "wystrzelane", "wystrzeliwane", "wystrzelone", "wystudzone", "wystukane", "wystukiwane", "wystygnięte", "wysunięte", "wysuszane", "wysuwane", "wyswatane", "wyświadczane", "wyświadczone", "wyświetlane", "wyświetlone", "wyswobodzone", "wysyłane", "wysypane", "wysypywane", "wysysane", "wyszabrowane", "wyszalane", "wyszarpane", "wyszarpnięte", "wyszasowane", "wyszczotkowane", "wyszczuplone", "wyszeptane", "wyszkolone", "wyszlifowane", "wyszorowane", "wyszperane", "wyszukane", "wyszukiwane", "wyszumione", "wyszykowane", "wyszyte", "wytapetowane", "wytargane", "wytargowane", "wytarte", "wytarzane", "wytaszczone", "wytatuowane", "wytchnięte", "wytępione", "wytknięte", "wytłoczone", "wytłumaczone", "wytłumione", "wytoczone", "wytrąbione", "wytrącane", "wytrącone", "wytransmitowane", "wytransportowane", "wytrenowane", "wytresowane", "wytriangulowane", "wytropione", "wytrute", "wytrząsane", "wytrzasnięte", "wytrząśnięte", "wytrzebione", "wytrzepane", "wytrzeszczane", "wytrzeźwiane", "wytrzymane", "wytrzymywane", "wytwarzane", "wytworzone", "wytyczone", "wytykane", "wytypowane", "wyuczone", "wywabiane", "wywabione", "wywąchane", "wywalane", "wywalczone", "wywalone", "wywarte", "wywarzane", "wyważane", "wyważone", "wywęszane", "wywężykowane", "wywiane", "wywiązane", "wywiązywane", "wywierane", "wywiercone", "wywieszane", "wywieszone", "wywietrzone", "wywiezione", "wywijane", "wywindowane", "wywinięte", "wywłaszczone", "wywlekane", "wywnętrznione", "wywnioskowane", "wywodzone", "wywolane", "wywoływane", "wywoskowane", "wywożone", "wywracane", "wywrócone", "wywróżone", "wywyższane", "wyżalone", "wyzbyte", "wyzdrowione", "wyżebrane", "wyżerane", "wyzerowane", "wyzionięte", "wyznaczane", "wyznaczone", "wyznane", "wyznawane", "wyzwalane", "wyzwane", "wyzwolone", "wyzygzakowane", "wyżynane", "wyzyskane", "wyzyskiwane", "wyżyte", "wyzywane", "wyżywane", "wyżywione", "wzbijane", "wzbite", "wzbogacane", "wzbogacone", "wzbraniane", "wzbudzane", "wzbudzone", "wzburzane", "wzburzone", "wżenione", "wzięte", "wzmacnione", "wzmagane", "wzmocnione", "wznawiane", "wzniecane", "wzniecione", "wzniesięte", "wznoszone", "wznowione", "wzorowane", "wzrośnięte", "wzruszone", "wzwyżane", "wzywane", "zaabordowane", "zaadaptowane", "zaadoptowane", "zaadresowane", "zaakcentowane", "zaakceptowane", "zaaklimatyzowane", "zaalarmowane", "zaanektowane", "zaangażowane", "zaanonsowane", "zaapelowane", "zaaplikowane", "zaaportowane", "zaaprobowane", "zaaranżowane", "zaaresztowane", "zaatakowane", "zabaczone", "zabalowane", "zabandażowane", "zabarwione", "zabarykadowane", "zabawiane", "zabawione", "zabepieczane", "zabetonowane", "zabezpieczone", "zabierane", "zabite", "zabłądzone", "zablefowane", "zabłocone", "zablokowane", "zabraniane", "zabrane", "zabrnięte", "zabronione", "zabrudzone", "zabudowane", "zabukowane", "zabulone", "zaburzone", "zabutelkowane", "zacementowane", "zacerowane", "zachciane", "zachęcane", "zachęcone", "zachlapane", "zachodzone", "zachomikowane", "zachorowane", "zachowane", "zachowywane", "zachwalane", "zachwalone", "zachwiane", "zachwycone", "zaciągane", "zaciągnięte", "zaciążone", "zaciekawione", "zaciemniane", "zaciemnione", "zacierane", "zacieśnione", "zacięte", "zacinane", "zaciskane", "zaciśnięte", "zaćmione", "zacumowane", "zacytowane", "zaczadzone", "zaczarowane", "Zaczepiane", "zaczepione", "zaczerpane", "zaczesane", "zaczęte", "zaczołgane", "zaczynane", "zadarte", "zadawalane", "zadawane", "zadbane", "zadebiutowane", "zadedykowane", "zadeklamowane", "zadeklarowane", "zademonstrowane", "zadenucjowane", "zadepeszowane", "zadeptane", "zadeptywane", "zadęte", "zadławione", "żądlone", "zadłużane", "zadłużone", "zadokowane", "zadomowione", "zadowalane", "zadrapane", "zadraśnięte", "zadręczane", "zadręczone", "zadrutowane", "zadurzane", "zadurzone", "zaduszone", "zadymione", "zadźgane", "zadziobane", "zadziwiane", "zadziwione", "zafakturowane", "zafałszowane", "zafarbowane", "zafiksowane", "zafundowane", "zagadane", "zagadnięte", "zagadywane", "zagajone", "zaganiane", "zagapione", "zagarażowane", "zagarniane", "zagarnięte", "zagaszone", "zagazowane", "zagęszczone", "zagięte", "zaginane", "zaginięte", "zagłębiane", "zagłębione", "zagłodzone", "zagłuszane", "zagłuszone", "zagmatwane", "zagnane", "zagnieżdżone", "zagojone", "zagonione", "zagospodarowane", "zagotowane", "zagrabione", "zagradzane", "zagrażane", "zagrodzone", "zagrywane", "zagryzane", "zagryzione", "zagrzane", "zagrzebane", "zagrzewane", "zagubione", "zagwarantowane", "zahaczone", "zahamowane", "zahandlowane", "zaharowane", "zahartowane", "zahipnotyzowane", "zaholowane", "zaimitowane", "zaimplantowane", "zaimplementowane", "zaimprowizowane", "zainaugurowane", "zainfekowane", "zainicjowane", "zainkasowane", "zainscenizowane", "zainspirowane", "zainstalowane", "zainteresowane", "zaintrygowane", "zaintubowane", "zainwestowane", "zaizolowane", "zajadane", "zajane", "zajarane", "zajechane", "zajęte", "zajmowane", "zakablowane", "zakamuflowane", "zakasane", "zakasowane", "zakąszane", "zakatalogowane", "zakatowane", "zakatrupione", "zakazane", "zakażane", "zakazywane", "zakiszone", "zakładane", "zaklasyfikowane", "zaklejane", "zaklejone", "zaklepane", "zaklepywane", "zaklinane", "zaklinowane", "zakłócane", "zakłócone", "zaklopotane", "zakłute", "zakneblowane", "zakodowane", "zakolczykowane", "zakolorowane", "zakołysane", "zakomunikowane", "zakończone", "zakonserwowane", "zakopane", "zakopywane", "zakorzeniane", "zakorzenione", "zakoszone", "zakosztowane", "zakotwiczane", "zakotwiczone", "zakpione", "zakradane", "zakręcane", "zakręcone", "zakreślane", "zakreślone", "zakrwawione", "zakryte", "zakrywane", "zakrzyczane", "zakrzyknięte", "zakrzywiane", "zakrzywione", "zaksięgowane", "zaktualizowane", "zaktywizowane", "zaktywowane", "zakumane", "zakupione", "zakurzone", "zakute", "zakuwane", "zakwaterowane", "zakwestionowae", "zakwitnięte", "załączone", "załadowane", "załagodzone", "zalamane", "zalaminowane", "załamywane", "zalane", "załapane", "załatane", "załatwiane", "załatwione", "zalatywane", "zalecane", "zalecone", "zaleczone", "zalegalizowane", "zalegane", "zalepiane", "zalepione", "zalewane", "zaliczane", "zaliczone", "załkane", "zalogowane", "żałowane", "założone", "zaludnione", "zamacane", "zamachnięte", "zamącone", "zamalowane", "zamanewrowane", "zamanifestowane", "zamarkowane", "zamartwiane", "zamarynowane", "zamarzane", "zamarznięte", "zamaskowane", "zamawiane", "zamazane", "zamazywane", "zamęczane", "zamęczone", "zameldowane", "zamelinowane", "zamerykanizowane", "zamiatane", "zamieniane", "zamienione", "zamieszane", "zamieszczane", "zamieszczone", "zamieszkane", "zamieszkiwane", "zaminowane", "zamknięte", "zamocowane", "zamoczone", "zamontowane", "zamordowane", "zamortyzowane", "zamotane", "zamówione", "zamrażane", "zamroczone", "zamrożone", "zamulane", "zamurowane", "zamydlone", "zamykane", "zanalizowane", "zanegowane", "zaniechane", "zanieczyszczane", "zanieczyszczone", "zaniedbane", "zaniedbywane", "zaniepokojone", "zaniesione", "zanihilowane", "zanikane", "zaniknięte", "zaniżane", "zaniżone", "zanoszone", "zanotowane", "zanucone", "zanudzane", "zanudzone", "zanurzane", "zanurzone", "zanużone", "zaobaczone", "zaobserwowane", "zaoferowane", "zaofiarowane", "zaogniane", "zaognione", "zaokrąglane", "zaokrąglone", "zaokrętowane", "zaopatrywane", "zaopatrzone", "zaopiekowane", "zaorane", "zaostrzane", "zaostrzone", "zaoszczędzone", "zapadane", "zapakowane", "zapalane", "zapalone", "zapamiętane", "zapamiętywane", "zapanowane", "zaparkowane", "zaparowywane", "zaparzane", "zaparzone", "zapaskudzone", "zapauzowane", "zapchane", "zapędzane", "zapełniane", "zapełnione", "zaperfumowane", "zapeszane", "zapewniane", "zapewnione", "zapieczętowane", "zapierane", "zapięte", "zapijane", "zapinane", "zapisane", "zapisuwane", "zapite", "zapłacone", "zapładniane", "zaplamione", "zaplanowane", "zaplątane", "zapłodnione", "zaplombowane", "zapobiegane", "zapodane", "zapodawane", "zapodziane", "zapokojone", "zapolowane", "zapominane", "zapomniane", "zapowiadane", "zapowiedziane", "zapoznane", "zapoznawane", "zapożyczone", "zapracowywane", "zaprane", "zaprasowywane", "zapraszane", "zaprawione", "zaprenumerowane", "zaprezentowane", "Zaprogramowane", "zaprojektowane", "zaproponowane", "zaproszone", "zaprotokołowane", "zaprowadzane", "zaprowadzone", "zaprzątane", "zaprzeczane", "zaprzeczone", "zaprzedane", "zaprzedawane", "zaprzęgane", "zaprzepaszczane", "zaprzestane", "zaprzestawane", "zaprzyjaźnione", "zapudłowane", "zapunktowane", "zapuszczane", "zapuszczone", "zapuszkowane", "zapychane", "zapylane", "zapylone", "zapytane", "zarabiane", "zaranżowane", "zarażane", "zarażone", "zarecytowane", "zaręczane", "zaręczone", "zarejestrowane", "zareklamowane", "zarekomendowane", "zarekomondowane", "zarekwirowane", "zarezerwowane", "zarobione", "żartowane", "zarwane", "zaryglowane", "zarymowane", "zarysowane", "zarywane", "zaryzykowane", "zarządzane", "zarżnięte", "zarzucane", "zarzynane", "zasadzone", "zaścielone", "zasegurowane", "zaserwowane", "zasiadane", "zasiane", "zasiedlone", "zasięgane", "zasięgnięte", "zasiewane", "zasilane", "zasilone", "zaskakiwane", "zaskarbione", "zaskoczone", "zaskrobane", "zasłaniane", "zaślepiane", "zaślepione", "zasłodzone", "zasłonione", "zasłużone", "zasmakowane", "zaśmiecane", "zaśmiecone", "zasmradzane", "zasmrodzone", "zasmucane", "zasmucone", "zasolone", "zaspakajane", "zaśpiewane", "zaspokajane", "zaspokojone", "zasponsorowane", "zaśrubowywane", "zassane", "zastane", "zastąpione", "zastawiane", "zastawione", "zastępowane", "zastopowane", "zastosowane", "zastraszane", "zastraszone", "zastrzelone", "zasugerowane", "zasunięte", "zasuwane", "zaświadczone", "zaświecone", "zaświonione", "zasyfione", "zasygnalizowane", "zasymilowane", "zasymulowane", "zasypane", "zasypywane", "zasysane", "zaszachowane", "zaszantażowane", "zaszargane", "zaszczepiane", "zaszczepione", "zaszczute", "zaszczycane", "zaszczycone", "zaszeptane", "zaszeregowane", "zaszlachtowane", "zasznurowane", "zaszpachlowane", "zasztyletowane", "zaszufladkowane", "zaszyfrowane", "zaszyte", "zaszywane", "zataczane", "zatajane", "zatajone", "zatamowane", "zatankowane", "zatapiane", "zatargane", "zatarte", "zatelegrafowane", "zatemperowane", "zatęsknione", "zatkane", "zatknięte", "zatoczone", "zatonięte", "zatopione", "zatracane", "zatracone", "zatriumfowane", "zatrudniane", "zatrudnione", "zatrute", "zatruwane", "zatrzaskiwane", "zatrzaśnięte", "zatrząśnięte", "zatrzymane", "zatrzymywane", "zatuszowane", "zatwierdzane", "zatwierdzone", "zatykane", "zatynkowane", "zatytułowane", "zauploadowane", "zauroczone", "zautomatyzowane", "zauważane", "zauważone", "zawadzane", "zawalane", "zawalczone", "zawalone", "zawarte", "zaważone", "zawdzięczane", "zawetowane", "zawężone", "zawiadamiane", "zawiadomione", "zawiązane", "zawiązywane", "zawiedzone", "zawierane", "zawierzone", "zawieszane", "zawieszone", "zawiezione", "zawijane", "zawinięte", "zawinione", "zawiśnięte", "zawitane", "zawładnięte", "zawłaszczone", "zawodzone", "zawojowane", "zawołane", "zawoskowane", "zawożone", "zawracane", "zawrócone", "zawstydzane", "zażądane", "zażartowane", "zazdroszczone", "zażegnane", "zażenowane", "zaznaczane", "zaznajomione", "zaznane", "zaznawane", "zażyczone", "zażyte", "zażywane", "zbaczane", "zbadane", "zbagatelizowane", "zbajerowane", "zbałamucone", "zbalansowane", "zbalsamowane", "zbankrutowane", "zbawiane", "zbawione", "zbesztane", "zbezczeszczone", "zbierane", "zbijane", "zbite", "zbliżone", "zbluzgane", "zbojkotowane", "zbrojone", "zbrukane", "zbszczecone", "zbudowane", "zbudzone", "zbuntowane", "zburzone", "zbyte", "zbywane", "zchwytane", "zcięte", "zciszone", "zdane", "zdarte", "zdeaktywowane", "zdecydowane", "zdefiniowane", "zdeflorowane", "zdegradowane", "zdejmowane", "zdeklarowane", "zdekodowane", "zdekompresowane", "zdekoncentrowane", "zdekonstruowane", "zdelegalizowane", "zdemaskowane", "zdementowane", "zdemolowane", "zdemontowane", "zdemoralizowane", "zdenerwowane", "zdeponowane", "zdeprymowane", "zdeptane", "zderzane", "zderzone", "zdestabilizowane", "Zdetonowane", "zdetronizowane", "zdewastowane", "zdewaulowane", "zdezerterowane", "zdezintegrowane", "zdezorientowane", "zdezynfektowane", "zdiagnozowane", "zdjęte", "zdławione", "zdmuchiwane", "zdmuchnięte", "zdobyte", "zdobywane", "zdołowane", "zdominowane", "zdopingowane", "zdrabniane", "zdradzane", "zdradzone", "zdrapane", "zdrapywane", "zdrutowane", "zdruzgotane", "zduplikowane", "zduszone", "zdwojone", "zdyscyplinowane", "zdyskredytowane", "zdyskwalifikowane", "zdystansowane", "zdzielone", "zdzierane", "zdzierżone", "zdziesiątkowane", "Zdzwonione", "zebrane", "zechciane", "zedytowane", "żegnane", "żenione", "zepchnięte", "zepsute", "żerowane", "zerwane", "zerżnięte", "zeskakiwane", "zeskanowane", "zeskrobywane", "zesłane", "ześlizgiwane", "ześlizgnięte", "zesmolone", "zespawiane", "zespolone", "zessane", "zestawiane", "zestawione", "zestresowane", "zestrzeliwane", "zestrzelone", "zeswatane", "zeszklone", "zeszlifowane", "zetknięte", "zezłoszczone", "zeznane", "zeznawane", "zezwalane", "zezwolone", "zfinansowane", "zgadane", "zgadywane", "zgajane", "zganione", "zgarnięte", "zgaśnięte", "zgaszone", "zgięte", "zginane", "zgładzone", "zgłaszane", "zgłębiane", "zgłębione", "zgłośnione", "zgłoszone", "zgłuszone", "zgniatane", "zgniecione", "zgnite", "zgnojone", "zgodzone", "zgolone", "zgonione", "zgotowane", "zgrabione", "zgrillowane", "zgromadzane", "zgromadzone", "zgrupowane", "zgrzeszone", "zgrzytane", "zgubione", "zgwałcone", "zhackowane", "zhakowane", "zhańbione", "zhandlowane", "zharmonizowane", "zidentyfikowane", "ziewane", "zignorowane", "zilustrowane", "zinfiltrowane", "zintegrowane", "zintensyfikowane", "zinterpretowane", "zinwentaryzowane", "zirytowane", "zjadane", "zjawiane", "zjednane", "zjednoczone", "zjedzone", "zjeżdżone", "zkontaktowane", "zkserowane", "złączone", "złagodzone", "złajane", "złamane", "zlane", "złapane", "zlecane", "zlecone", "zlekceważone", "zlepiane", "zlepione", "zlewane", "zlicytowane", "zliczane", "zliczone", "zlikwidowane", "zlinczowane", "zlitowane", "zlizane", "zlizywane", "złoite", "zlokalizowane", "złomowane", "żłopane", "złowione", "złożone", "złupione", "złuszczane", "zluzowane", "zmacane", "zmącone", "zmagane", "zmagazynowane", "zmajstrowane", "zmaksylizowane", "zmanipulowane", "zmarnowane", "zmartwychwstane", "zmarznięte", "zmasakrowane", "zmaterializowane", "zmawiane", "zmazane", "zmazywane", "zmbobardowane", "zmiatane", "zmiażdżone", "zmiękczone", "zmielone", "zmieniane", "zmienione", "zmierzane", "zmierzone", "zmierzwione", "zmieszane", "zmieszczone", "zmiksowane", "zminiaturyzowane", "zminimalizowane", "zmniejszane", "zmniejszone", "zmobilizowane", "zmoczone", "zmodernizowane", "zmodyfikowane", "zmoknięte", "zmonopolizowane", "zmontowane", "zmostkowane", "zmotywowane", "zmówione", "zmrożone", "zmrużone", "zmumifikowane", "zmuszane", "zmuszone", "zmutowane", "zmyślane", "zmyte", "zmywane", "znacjonalizowane", "znajdowane", "znajdywane", "znakowane", "znalezione", "znane", "znęcane", "zneutralizowane", "zniechęcone", "znieczulone", "zniekształcane", "zniekształcone", "znienawidzone", "znieprawione", "zniesione", "zniesławiane", "zniesławione", "zniewalane", "znieważane", "znieważone", "zniewolone", "zniszczone", "zniweczone", "zniwelowane", "zniżane", "zniżone", "znokautowane", "znormalnione", "znoszone", "znudzone", "zobaczone", "zobowiązane", "zobrazowane", "zogniskowane", "żonglowane", "zoomowane", "zoperowane", "zoptymalizowane", "zorbite", "zorganizowane", "zorientowane", "zostawiane", "zostawione", "zpłacone", "zprowokowane", "zrabowane", "zrachowane", "zracjonalizowane", "zranione", "zraportowane", "zrażane", "zrażone", "zrealizowane", "zrecenzowane", "zredagowane", "zredukowane", "zreferowane", "zreformowane", "zrefowane", "zrefundowane", "zregenerowane", "zrehabilitowane", "zreinkarnowane", "zreintegrowane", "zrekonfigurowane", "zrekonstruowane", "zrekrutowane", "zrekrystalizowane", "zrelacjonowane", "zrelaksowane", "zremiksowane", "zremisowane", "zreorganizowane", "zreperowane", "zreplikowane", "zresetowane", "zresocjalizowane", "zrestartowane", "zrestrukturyzowane", "zrewanżowane", "zrewidowane", "zrewolucjonizowane", "zrezygnowane", "zrobione", "zrolowane", "zroszone", "zrównane", "zrównoważone", "zrównywane", "zróżnicowane", "zrozumiane", "zrugane", "zruinowane", "zrujnowane", "zrymowane", "zrywane", "zrzędzone", "zrzeszone", "zrzucane", "zrzucone", "zsumowane", "zsunięte", "zsuwane", "zsynchronizowane", "zsyntetyzowane", "zsypywane", "zszargane", "zszokowane", "zszyte", "zszywane", "ztarte", "żute", "zutylizowane", "zużyte", "zużywane", "zwabiane", "zwabione", "zwalane", "zwalczone", "zwalniane", "zwalone", "zwane", "zwaporyzowane", "zwątpione", "zważane", "zważone", "zwędzone", "zwerbalizowane", "zwerbowane", "zweryfikowane", "zwęszone", "zwężone", "zwiastowane", "związane", "związywane", "zwichnięte", "zwiedzane", "zwiedzone", "zwiększone", "zwieńczone", "zwierzane", "zwieszane", "zwieszone", "zwietrzone", "zwijane", "zwilżone", "zwinięte", "zwizualizowane", "zwlekane", "zwodowane", "zwodzone", "zwołane", "zwolnione", "zwoływane", "zwożone", "zwracane", "zwrócone", "zwyciężane", "zwymiotowane", "życzone", "żygane", "zygzakowane", "zyskane", "zyskiwane", "żyte", "zżarte", "zżerane", "zżynane", "zżyte", "bici", "brnięci", "capnięci", "chlapnięci", "chuci", "ciachnięci", "ciągnięci", "cięci", "ciśnięci", "cmoknięci", "cofnięci", "czuci", "czyci", "darci", "dmuchnięci", "dobici", "dobyci", "dociągnięci", "docięci", "dociśnięci", "doglądnięci", "domknięci", "domyci", "dopadnięci", "dopchnięci", "dopięci", "dopici", "dopłynięci", "doścignięci", "dosięgnięci", "dosunięci", "doszyci", "dotknięci", "dożyci", "drapnięci", "draśnięci", "drgnięci", "dźgnięci", "dziabnięci", "dźwignięci", "gięci", "gnici", "golnięci", "gruchnięci", "gwizdnięci", "hajtnięci", "huknięci", "kantowanci", "kiwnięci", "klapnięci", "klepnięci", "kliknięci", "kłuci", "knuci", "kojfnięci", "kopnięci", "kpici", "kryci", "krzepnięci", "krzyknięci", "kuci", "liznięci", "łyknięci", "machnięci", "marznięci", "maznięci", "minięci", "myci", "nabici", "nabyci", "naciągnięci", "nacięci", "naciśnięci", "nadciągnięci", "nadcięci", "nadszarpnięci", "nadużyci", "nagięci", "najęci", "nakłuci", "nakryci", "napadnięci", "napięci", "napluci", "napoczęci", "napsuci", "nasunięci", "naszyci", "natarci", "natchnięci", "natknięci", "natrząsnięci", "nawinięci", "obciągnięci", "obcięci", "obdarci", "obici", "objęci", "obmyci", "obsunięci", "obtarci", "obwinięci", "obyci", "ochłonięci", "ocknięci", "ocuci", "odarci", "odbici", "odbyci", "odciągnięci", "odcięci", "odcisnięci", "odczuci", "odepchnięci", "odetnięci", "odgadnięci", "odgarnięci", "odgięci", "odjęci", "odkryci", "odkuci", "odparci", "odpięci", "odpłynięci", "odpruci", "odrośnięci", "odsłonięci", "odsunięci", "odtruci", "odwinięci", "odżyci", "ogarnięci", "okryci", "okrzyknięci", "olśnięci", "ominięci", "opadnięci", "oparci", "opchnięci", "opici", "opluci", "orżnięci", "osiągnięci", "oślepnięci", "ostrzelici", "osunięci", "otarci", "otruci", "otrząśnięci", "owinięci", "ożyci", "pacnąci", "palnięci", "parci", "pchnięci", "pęknięci", "pięci", "pici", "pluci", "pobici", "pochłonięci", "pociągnięci", "pocięci", "poczęci", "poczuci", "podarci", "podbici", "podciągnięci", "podcięci", "podjęci", "podkradnięci", "podkuci", "podmyci", "podnajęci", "podpadnięci", "podparci", "podpięci", "podpłynięci", "podsunięci", "podszyci", "podtarci", "podwinięci", "podźwignięci", "pojęci", "pojmięci", "pokłuci", "pokryci", "połknięci", "pominięci", "pomknięci", "poparci", "popchnięci", "popici", "popsuci", "posunięci", "poszczuci", "potarci", "potknięci", "potruci", "potrząsnięci", "potrząśnięci", "powici", "powściągnięci", "powzięci", "pożarci", "pozbyci", "pożuci", "pożyci", "pruci", "pryśnięci", "przebiegnięci", "przebici", "przebyci", "przeciągnięci", "przecięci", "przeciśnięci", "przeczuci", "przedarci", "przedsiewzięci", "przegięci", "przeglądnięci", "przejęci", "przeklęci", "przeklnięci", "przekłuci", "przekuci", "przełknięci", "przełyknięci", "przeminięci", "przemknięci", "przemyci", "przeniknięci", "przepchnięci", "przepici", "przepłynięci", "przerośnięci", "prześcignięci", "prześlizgnięci", "przesłonięci", "przesunięci", "przeszyci", "przetarci", "przetrząśnięci", "przewinięci", "przeżarci", "przeżuci", "przeżyci", "przybici", "przyciągnięci", "przycięci", "przyciśnięci", "przydepnięci", "przygarnięci", "przyjęci", "przykryci", "przykuci", "przymknięci", "przypadnięci", "przyparci", "przypięci", "przypłynięci", "przysiągnięci", "przysunięci", "przyszyci", "przytarci", "przytrzasnięci", "przywarci", "pstryknięci", "psuci", "puchnięci", "puknięci", "rozbici", "rozbłyśnięci", "rozciągnięci", "rozcięci", "rozgarnięci", "rozgięci", "rozkuci", "rozkwitnięci", "rozminięci", "rozmyci", "rozpięci", "rozpłynięci", "rozpoczęci", "rozpruci", "rozrośnięci", "rozstrzygnięci", "rozsunięci", "roztarci", "rozwarci", "rozwinięci", "runięci", "ryci", "rżnięci", "ściągnięci", "ścięci", "ściśnięci", "skrobnięci", "skryci", "skrzepnięci", "skrzyci", "skubnięci", "skuci", "smuci", "snuci", "spięci", "spici", "spłonięci", "spoczęci", "spożyci", "sprzątnięci", "stnięci", "struci", "strząśnięci", "strzepnięci", "stuknięci", "sunięci", "sypnięci", "szarpnięci", "szczuci", "szepnięci", "sztachnięci", "szturchnięci", "szyci", "targnięci", "tarci", "tchnięci", "tknięci", "truci", "tryśnięci", "trzasnięci", "trzepnięci", "ubici", "uciągnięci", "ucięci", "uciśnięci", "uczuci", "udźwignięci", "ugięci", "ugrzęznięci", "uiścici", "ujęci", "ukłuci", "uknuci", "ukryci", "ukuci", "umknięci", "umyci", "uniknięci", "uparci", "upchnięci", "upięci", "upici", "upłynięci", "uprzątnięci", "urośnięci", "urżnięci", "uschnięci", "uściśnięci", "usunięci", "uszczypnięci", "uszyci", "utarci", "utknięci", "uwinięci", "uwici", "użyci", "walnięci", "wbici", "wchłonięci", "wciągnięci", "wcięci", "wciśnięci", "wczuci", "wdarci", "wdepnięci", "wepchnięci", "wetknięci", "wici", "wkłuci", "wkuci", "wniknięci", "wpięci", "wryci", "wślizgnięci", "wsparci", "wspięci", "współczuci", "współżyci", "wstrząśnięci", "wstrzyknięci", "wsunięci", "wszczęci", "wszyci", "wtargnięci", "wtarci", "wybici", "wyblaknięci", "wybuchnięci", "wyciągnięci", "wycięci", "wyciśnięci", "wyczuci", "wydobyci", "wyfrunięci", "wygarnięci", "wygaśnięci", "wygięci", "wyjęci", "wykluci", "wykłuci", "wykopnięci", "wykpici", "wykradnięci", "wykryci", "wykrzyknięci", "wykuci", "wyminięci", "wymknięci", "wymsknięci", "wymyci", "wynajęci", "wyniknięci", "wyparci", "wypchnięci", "wypięci", "wypici", "wypluci", "wypoczęci", "wypruci", "wyrośnięci", "wyryci", "wyrżnięci", "wyschnięci", "wyślizgnięci", "wysnuci", "wystrychnięci", "wystygnięci", "wysunięci", "wyszarpnięci", "wyszyci", "wytarci", "wytchnięci", "wytknięci", "wytruci", "wytrzasnięci", "wytrząśnięci", "wywarci", "wywinięci", "wyzbyci", "wyzionięci", "wyżyci", "wzbici", "wzięci", "wzniesięci", "wzrośnięci", "zabici", "zabrnięci", "zaciągnięci", "zacięci", "zaciśnięci", "zaczęci", "zadarci", "zadęci", "zadraśnięci", "zagadnięci", "zagarnięci", "zagięci", "zaginięci", "zajęci", "zakłuci", "zakryci", "zakrzyknięci", "zakuci", "zakwitnięci", "zamachnięci", "zamarznięci", "zamknięci", "zaniknięci", "zapięci", "zapici", "zarżnięci", "zasięgnięci", "zasunięci", "zaszczuci", "zaszyci", "zatarci", "zatknięci", "zatonięci", "zatruci", "zatrzaśnięci", "zatrząśnięci", "zawarci", "zawinięci", "zawiśnięci", "zawładnięci", "zażyci", "zbici", "zbyci", "zcięci", "zdarci", "zdjęci", "zdmuchnięci", "zdobyci", "zepchnięci", "zepsuci", "zerżnięci", "ześlizgnięci", "zetknięci", "zgarnięci", "zgaśnięci", "zgięci", "zgnici", "złoici", "zmarznięci", "zmoknięci", "zmyci", "zorbici", "zsunięci", "zszyci", "ztarci", "żuci", "zużyci", "zwichnięci", "zwinięci", "życi", "zżarci", "zżyci", "abdykowani", "absorbowani", "adaptowani", "administrowani", "adoptowani", "adorowani", "adresowani", "afiszowani", "agitowani", "akcentowani", "akceptowani", "aklimatyzowani", "akompaniowani", "aktualizowani", "aktywowani", "akumulowani", "alaromowani", "alienowani", "amerykanizowani", "amortyzowani", "amputowani", "analizowani", "angażowani", "anihilowani", "animowani", "anonsowani", "antropomorfizowani", "antydatowani", "anulowani", "apelowani", "aportowani", "aranżowani", "archiwizowani", "aresztowani", "argumentowani", "artykułowani", "ascendowani", "asekurowani", "asymilowani", "asystowani", "atakowani", "autoryzowani", "awanturowani", "babrani", "baczeni", "badani", "bagatelizowani", "bajerowani", "bałamuceni", "balangowani", "balansowani", "banalizowani", "bandażowani", "bankrutowani", "baraszkowani", "barwieni", "bawieni", "bazgrani", "bazowani", "bębnieni", "bełkotani", "besztani", "biczowani", "błagani", "błaznowani", "blefowani", "błogosławieni", "blokowani", "bluzgani", "błyskani", "boczeni", "bogaceni", "bojkotowani", "boksowani", "bombardowani", "bopowani", "borowani", "brandzlowani", "brani", "brasowani", "bratani", "brodzeni", "bronieni", "brudzeni", "brylowani", "budowani", "budzeni", "bujani", "buleni", "bulwersowani", "bumelowani", "burzeni", "butelkowani", "bywani", "cackani", "całowani", "cechowani", "celebrowani", "celowani", "cenieni", "cenzurowani", "chciani", "chlani", "chlapani", "chlastani", "chłodzeni", "chlostani", "chlubieni", "chodowani", "chomikowani", "chorowani", "chowani", "chronieni", "chrupani", "chrzczeni", "chwaleni", "chwyceni", "chwytani", "chybotani", "chyleni", "ciągani", "ciemiężeni", "cierpiani", "cieszeni", "ciskani", "ciułani", "cmokani", "cofani", "ćpani", "cuceni", "cudzołożeni", "cumowani", "ćwiartowani", "ćwiczeni", "cykani", "cytowani", "czajeni", "czarowani", "czczeni", "czepiani", "czepieni", "czerpani", "czesani", "częstowani", "czochrani", "czołgani", "czytani", "darowani", "darzeni", "datowani", "dawani", "dbani", "deaktywowani", "debatowani", "dedukowani", "dedykowani", "defibrylowani", "defilowani", "definiowani", "defraudowani", "degradowani", "degustowani", "deklamowani", "deklarowani", "dekodowani", "dekompresowani", "dekorowani", "dekretowani", "delegowani", "delektowani", "deliberowani", "demaskowani", "dementowani", "demolowani", "demonizowani", "demonstrowani", "demoralizowani", "denerwowani", "denuncjowani", "depeszowani", "depilowani", "deportowani", "deprawowani", "deptani", "deratyzowani", "destabilizowani", "destylowani", "desygnowani", "determinowani", "detonowani", "dewastowani", "dewaulowani", "dezaktywowani", "dezorientowani", "dezynfekowani", "diagnozowani", "dilowani", "dłubani", "dłużeni", "dmuchani", "dobiegani", "dobierani", "dobijani", "dobrani", "dobudzeni", "doceniani", "docenieni", "dochodzeni", "dochowani", "dochowywani", "dociekani", "docinani", "dociskani", "doczekani", "doczepieni", "doczołgani", "doczyszczeni", "doczytani", "dodani", "dodawani", "dodrukowani", "dodrukowywani", "dofinansowani", "dofinansowywani", "dogadani", "dogadywani", "dogadzani", "doganiani", "doglądani", "dognani", "dogodzeni", "dogonieni", "dograni", "dogryzani", "dogryzioni", "dogrzani", "dogrzebani", "doinformowani", "dojeżdżani", "dojeni", "dojrzani", "dojrzewani", "dokańczani", "dokarmiani", "dokarmieni", "dokazani", "dokazywani", "dokładani", "doklejeni", "dokonani", "dokończeni", "dokonywani", "dokopani", "dokopywani", "dokowani", "dokręcani", "dokręceni", "dokształcani", "dokształceni", "dokuczani", "dokumentowani", "dokupieni", "dołączani", "dołączeni", "doładowani", "dolani", "dolewani", "doliczeni", "dołowani", "dołożeni", "domagani", "domalowani", "domniewywani", "domówieni", "domyślani", "domyśleni", "doniesieni", "donoszeni", "dopadani", "dopakowani", "dopaleni", "dopasowani", "dopasowywani", "dopatrywani", "dopatrzeni", "dopchani", "dopełniani", "dopełnieni", "dopieszczeni", "dopijani", "dopilnowani", "dopingowani", "dopisani", "dopisywani", "dopłacani", "dopłaceni", "dopolerowani", "dopompowani", "dopowiedziani", "dopracowani", "dopracowywani", "doprani", "doprawieni", "doprecyzowani", "doproszeni", "doprowadzani", "doprowadzeni", "dopucowani", "dopuszczani", "dopuszczeni", "dopytywani", "dorabiani", "doradzani", "doradzeni", "doręczani", "doręczeni", "dorobieni", "dorównani", "dorównywani", "dorwani", "dorysowani", "dorzucani", "dorzuceni", "dosiadani", "doskoczeni", "doskonaleni", "dosładzani", "dosłani", "dosłyszani", "dosoleni", "dośrodkowani", "dossani", "dostani", "dostąpieni", "dostarczani", "dostarczeni", "dostawani", "dostawiani", "dostawieni", "dostosowani", "dostosowywani", "dostrajani", "dostrojeni", "dostrzegani", "dosuwani", "doświadczani", "doświetleni", "dosypani", "dosypywani", "doszkoleni", "doszlifowani", "doszorowani", "doszukani", "doszukiwani", "dotankowani", "dotankowywani", "dotargani", "dotaszczeni", "dotlenieni", "dotłumaczeni", "dotowani", "dotrwani", "dotrzymani", "dotrzymywani", "dotykani", "douczani", "douczeni", "dowaleni", "dowiezieni", "dowodzeni", "dowożeni", "doznani", "doznawani", "dozorowani", "dozowani", "dożywieni", "dramatyzowani", "drapani", "drażnieni", "drążeni", "dręczeni", "drenowani", "drgani", "drukowani", "dryblowani", "dryfowani", "drzemani", "dubbingowani", "dublowani", "duplikowani", "duszeni", "dworowani", "dygotani", "dyktowani", "dymani", "dymieni", "dyrygowani", "dyscyplinowani", "dyskredytowani", "dyskryminowani", "dyskutowani", "dyskwalifikowani", "dysponowani", "dystansowani", "dystrybuowani", "dywagowani", "dźgani", "dziedziczeni", "dziękowani", "dzieleni", "dziergani", "dzierżeni", "dziobani", "dziurawieni", "dziurkowani", "dźwigani", "edukowani", "edytowani", "egzaminowani", "egzekutowani", "egzekwowani", "ekscytowani", "ekshumowani", "ekskomunikowani", "eksmitowani", "ekspandowani", "eksperymentowani", "eksploatowani", "eksplorowani", "eksponowani", "eksportowani", "eksterminowani", "ekstradowani", "ekstrapolowani", "eliminowani", "emancypowani", "emigrowani", "emitowani", "energetyzowani", "eskortowani", "etykietowani", "ewakuowani", "ewaluowani", "fabrykowani", "falowani", "fałszowani", "farbowani", "faszerowani", "faulowani", "faworyzowani", "fechtowani", "fermentowani", "ferowani", "figurowani", "filetowani", "filmowani", "filtrowani", "finalizowani", "finansowani", "firmowani", "fleszowani", "folgowani", "formułowani", "forsowani", "fotografowani", "fundowani", "gadani", "ganiani", "garbieni", "gardzeni", "garnirowani", "gaszeni", "gawędzeni", "gaworzeni", "gazowani", "gdakani", "gderani", "generalizowani", "generowani", "gilgotani", "gładzeni", "głaskani", "głodowani", "głodzeni", "gloryfikowani", "głosowani", "głoszeni", "głowieni", "gmatwani", "gmerani", "gnani", "gnębieni", "gnieceni", "gnojeni", "godzeni", "goleni", "gonieni", "googlowani", "gospodarowani", "goszczeni", "gotowani", "grabieni", "grani", "grasowani", "gratulowani", "grillowani", "grilowani", "gromadzeni", "gromieni", "grożeni", "gruchani", "grupowani", "grywani", "gryzieni", "grzani", "grzechotani", "gubieni", "gustowani", "gwałceni", "gwarantowani", "gwizdani", "hackowani", "haftowani", "hamowani", "hańbieni", "handlowani", "harcowani", "harmonizowani", "harowani", "hartowani", "hibernowani", "hipnotyzowani", "hodowani", "holowani", "hołubieni", "honorowani", "hospitalizowani", "hulani", "huśtani", "idealizowani", "identyfikowani", "ignorowani", "igrani", "ilustrowani", "imitowani", "implantowani", "implodowani", "imponowani", "importowani", "improwizowani", "indokrynowani", "indukowani", "infekowani", "infiltrowani", "informowani", "ingerowani", "inhalowani", "inscenizowani", "inspirowani", "instalowani", "instruowani", "insynuowani", "integrowani", "interpretowani", "interweniowani", "intonowani", "intubowani", "inwestowani", "inwigilowani", "irytowani", "iskrzeni", "izolowani", "jadani", "jawieni", "jazgotani", "jednoczeni", "jedzeni", "kablowani", "kadzeni", "kalani", "kaleczeni", "kalkulowani", "kamerowani", "kamienowani", "kamuflowani", "kanalizowani", "kąpani", "kapitulowani", "kapowani", "karani", "karbonizowani", "karceni", "karczowani", "karmieni", "kartkowani", "kąsani", "kasowani", "kastrowani", "katalogowani", "katapultowani", "katowani", "katrupieni", "kierowani", "kimani", "kiszeni", "kiwani", "kłaniani", "klapani", "klarowani", "klasyfikowani", "klębieni", "klejeni", "klepani", "klikani", "klonowani", "kłopotani", "knoceni", "kochani", "koczowani", "kodowani", "kojarzeni", "kojeni", "kolekcjonowani", "kolektywizowani", "kolidowani", "kolonizowani", "kolorowani", "koloryzowani", "kołowani", "kołysani", "kombinowani", "komenderowani", "komentowani", "komercjalizowani", "kompensowani", "komplementowani", "komplikowani", "komponowani", "kompromitowani", "komunikowani", "konani", "koncentrowani", "kończeni", "konfabulowani", "konfiskowani", "konfrontowani", "konserwowani", "konspirowani", "konstruowani", "konsultowani", "konsumowani", "kontaktowani", "kontestowani", "kontrastowani", "kontrolowani", "kontrowani", "kontynuowani", "kontynuuowani", "konwertowani", "konwojowani", "koordynowani", "kopani", "kopceni", "kopiowani", "kopulowani", "korelowani", "korkowani", "koronowani", "korygowani", "korzystani", "koszeni", "kotwiczeni", "kozaczeni", "kozłowani", "kradzieni", "krajani", "krążeni", "kręceni", "kremowani", "kreowani", "krochmaleni", "krojeni", "kropieni", "kruszeni", "krystalizowani", "krytykowani", "krzyczani", "krzywdzeni", "krzywieni", "krzyżowani", "kserowani", "księgowani", "kształceni", "kształtowani", "kuleni", "kultywowani", "kumulowani", "kupczeni", "kupieni", "kupowani", "kupywani", "kurczeni", "kurowani", "kursowani", "kurzeni", "kuszeni", "kwalifikowani", "kwestionowani", "łączeni", "ładowani", "łagodzeni", "łajdaczeni", "lakierowani", "łamani", "lamentowani", "lansowani", "lani", "łapani", "łaskotani", "łaszeni", "latani", "łatani", "lawirowani", "leczeni", "legalizowani", "legitymowani", "lekceważeni", "lepieni", "lewitowani", "liberowani", "licencjonowani", "licytowani", "liczeni", "likwidowani", "linczowani", "liniowani", "literowani", "litowani", "lizani", "lobbowani", "lokalizowani", "losowani", "łowieni", "łożeni", "lubiani", "łudzeni", "lunatykowani", "łupani", "łupieni", "łuskani", "lustrowani", "łuszczeni", "luzowani", "łykani", "łyżeczkowani", "macani", "machani", "mąceni", "maczani", "maganyzowani", "maglowani", "majaczeni", "majsterkowani", "majtani", "maksymalizowani", "malowani", "maltretowani", "mamieni", "mamrotani", "manewrowani", "manifestowani", "manipulowani", "markowani", "marnotrawieni", "marnowani", "marszczeni", "marynowani", "masakrowani", "maskowani", "masowani", "masturbowani", "mataczeni", "materializowani", "mawiani", "mazani", "męczeni", "meldowani", "merdani", "metabolizowani", "miażdżeni", "mieleni", "mierzeni", "mierzwieni", "mieszani", "miętoleni", "migani", "migdaleni", "migotani", "mijani", "miksowani", "milowani", "minimalizowani", "miotani", "mistyfikowani", "mitygowani", "mizdrzeni", "mlani", "mniemani", "mnożeni", "mobilizowani", "mocowani", "moczeni", "modelowani", "modernizowani", "modleni", "modulowani", "modyfikowani", "molestowani", "monitorowani", "monopolizowani", "montowani", "mordowani", "motywowani", "mrożeni", "mrugani", "mrużeni", "muskani", "mutowani", "mydleni", "myleni", "myszkowani", "nabazgrani", "nabiegani", "nabierani", "nabrani", "nabrojeni", "nabrudzeni", "nabywani", "nacelowani", "nachapani", "nachodzeni", "nachwaleni", "nachyleni", "naciągani", "nacierani", "nacinani", "naciskani", "nacjonalizowani", "naczepieni", "nadani", "nadawani", "nadchodzeni", "nadciągani", "nadesłani", "nadgonieni", "nadgryzani", "nadgryzieni", "nadinterpretowani", "nadłożeni", "nadmieniani", "nadmienieni", "nadmuchani", "nadrabiani", "nadrobieni", "nadskakiwani", "nadsłuchiwani", "nadstawiani", "nadstawieni", "naduszeni", "nadużywani", "nadwerężani", "nadwyrężani", "nadwyrężeni", "nadziani", "nadzorowani", "naelektryzowani", "nafaszerowani", "nagabywani", "nagadani", "naginani", "nagłaszani", "nagłośnieni", "nagonieni", "nagradzani", "nagrani", "nagrodzeni", "nagromadzeni", "nagrywani", "nagryzmoleni", "nagrzani", "nagrzebani", "nagrzewani", "nagwizdani", "naigrywani", "najechani", "najmowani", "nakarmiani", "nakarmieni", "nakazani", "nakazywani", "nakierowani", "nakierowywani", "nakładani", "nakłamani", "nakłaniani", "naklejani", "naklejeni", "naklepani", "nakłonieni", "nakłuwani", "nakopani", "nakręcani", "nakręceni", "nakreślani", "nakreśleni", "nakruszeni", "nakrywani", "nakrzyczani", "nakupieni", "naładowani", "nalani", "nałapani", "nalepieni", "nalewani", "naliczeni", "nałowieni", "nałożeni", "namaczani", "namagnetyzowani", "namalowani", "namaszczani", "namaszczeni", "namawiani", "namęczeni", "namierzani", "namieszani", "namoczeni", "namówieni", "namydlani", "namyśleni", "naniesieni", "naoliwiani", "naoliwieni", "naopowiadani", "naostrzeni", "napadani", "napakowani", "napaleni", "naparzani", "napastowani", "napawani", "napchani", "napędzani", "napełniani", "napełnieni", "napierani", "napiętnowani", "napinani", "napisani", "napływani", "napojeni", "napompowani", "napotkani", "napotykani", "napraszani", "naprawiani", "naprawieni", "naprężani", "naprężeni", "napromieniowani", "naprostowani", "naprowadzani", "naprowadzeni", "napuszczani", "napuszczeni", "napychani", "napytani", "narąbani", "naradzani", "naradzeni", "narastani", "narażani", "narażeni", "nareperowani", "narkotyzowani", "narodzeni", "naruszani", "naruszeni", "narwani", "narysowani", "narzucani", "narzuceni", "nasączani", "nasączeni", "nasadzeni", "nasiąkani", "nasilani", "nasileni", "naskakiwani", "naskoczeni", "naskrobani", "naśladowani", "nasłani", "nasłuchani", "nasłuchiwani", "nasmarowani", "nastąpieni", "nastawiani", "nastawieni", "nastraszani", "nastrojeni", "nastukani", "nasuwani", "naświetlani", "nasyceni", "nasyłani", "nasypani", "naszczani", "naszkicowani", "naszpikowani", "naszprycowani", "naszykowani", "naszywani", "natlenieni", "natłuszczeni", "natrafieni", "natrząsani", "nauczani", "nauczeni", "nawadniani", "nawaleni", "nawiązani", "nawiązywani", "nawiedzani", "nawiedzeni", "nawierceni", "nawiewani", "nawiezieni", "nawigowani", "nawijani", "nawilżani", "nawilżeni", "nawlekani", "nawodnieni", "nawoływani", "nawoskowani", "nawożeni", "nawpychani", "nawracani", "nawróceni", "nawrzucani", "nawtykani", "nawymyślani", "nazbierani", "nazmyślani", "naznaczani", "naznaczeni", "nazrywani", "nazwani", "nazywani", "nęceni", "negocjowani", "negowani", "nękani", "neutralizowani", "niańczeni", "niecierpliwieni", "niedoceniani", "niedowidziani", "nienawidzeni", "niesieni", "nikoleni", "niszczeni", "nitkowani", "niuchani", "niweczeni", "niwelowani", "nokautowani", "nominowani", "notowani", "nuceni", "numerowani", "nurtowani", "obaczeni", "obadani", "obalani", "obaleni", "obandażowani", "obarczani", "obarczeni", "obawiani", "obchodzeni", "obciążeni", "obcinani", "obcyndalani", "obczajani", "obczajeni", "obdarowani", "obdarzani", "obdarzeni", "obdzieleni", "obdzierani", "obdzwaniani", "obdzwonieni", "obejmowani", "oberwani", "obessani", "obezwładniani", "obezwładnieni", "obfotografowani", "obfotografowywani", "obgadani", "obgadywani", "obgryzani", "obgryzieni", "obiecani", "obiecywani", "obierani", "obijani", "objadani", "objaśniani", "objawiani", "objawieni", "objechani", "objeżdżani", "obkręcani", "oblani", "obłapiani", "obłapywani", "obłaskawiani", "obłaskawieni", "obleciani", "oblewani", "obliczani", "obliczeni", "oblizani", "obłowieni", "obłożeni", "obluzowani", "obluzowywani", "obmacani", "obmacywani", "obmawiani", "obmyślani", "obmyśleni", "obmywani", "obnażani", "obniżani", "obniżeni", "obnoszeni", "obowiązywani", "obozowani", "obrabiani", "obrabowani", "obracani", "obradowani", "obramowani", "obraniani", "obrani", "obrastani", "obrażani", "obrażeni", "obrobieni", "obróceni", "obrodzeni", "obronieni", "obrysowani", "obrywani", "obryzgani", "obrzezani", "obrzucani", "obrzuceni", "obrzygani", "obsadzani", "obsadzeni", "obściskiwani", "obserwowani", "obsiani", "obsikani", "obsikiwani", "obskakiwani", "obskoczeni", "obskubani", "obskubywani", "obśliniani", "obślinieni", "obsługiwani", "obsłużeni", "obsmarowani", "obstawiani", "obstawieni", "obstrzeliwani", "obsuwani", "obsypani", "obsypywani", "obszukani", "obszukiwani", "obtaczani", "obtoczeni", "obudzeni", "obwąchani", "obwąchiwani", "obwiązani", "obwiązywani", "obwieszani", "obwieszczani", "obwieszczeni", "obwieszeni", "obwijani", "obwiniani", "obwołani", "obżerani", "ocalani", "ocaleni", "ocechowani", "oceniani", "ocenieni", "ocenzurowani", "ochładzani", "ochlapani", "ochlapywani", "ochłodzeni", "ochraniani", "ochronieni", "ochrzaniani", "ochrzczeni", "ociągani", "ocieleni", "ocieplani", "ociepleni", "ocierani", "ocuceni", "oczarowywani", "oczekiwani", "oczerniani", "oczernieni", "oczyszczani", "oczyszczeni", "odbębnieni", "odbetonowani", "odbezpieczani", "odbezpieczeni", "odbijani", "odblokowani", "odbudowani", "odbudowywani", "odbutowani", "odcedzani", "odchorowani", "odchowani", "odchudzani", "odchudzeni", "odchylani", "odchyleni", "odciągani", "odciążeni", "odcierpieni", "odcinani", "odcumowani", "odcyfrowani", "odcyfrowywani", "odczarowani", "odczekani", "odczepiani", "odczepieni", "odczuwani", "odczynieni", "odczytani", "odczytywani", "oddalani", "oddani", "oddawani", "oddelegowani", "oddychani", "oddzielani", "oddzieleni", "odebrani", "odegnani", "odegrani", "odejmowani", "oderwani", "odeskortowani", "odesłani", "odespani", "odessani", "odetkani", "odezwani", "odfiltrowani", "odgadywani", "odganiani", "odgarniani", "odgniatani", "odgonieni", "odgradzani", "odgrażani", "odgrodzeni", "odgruzowani", "odgrywani", "odgryzani", "odgryzieni", "odgrzani", "odgrzebani", "odgrzebywani", "odgrzewani", "odgwizdani", "odhaczeni", "odholowani", "odinstalowani", "odizolowani", "odjedzeni", "odjonizowani", "odkażani", "odkażeni", "odkładani", "odklejeni", "odkochani", "odkodowani", "odkodowywani", "odkopani", "odkopywani", "odkorkowani", "odkręcani", "odkręceni", "odkrojeni", "odkrywani", "odkupieni", "odkupywani", "odkurzani", "odkurzeni", "odłączani", "odłączeni", "odłamywani", "odlani", "odlatywani", "odlepiani", "odlewani", "odliczani", "odliczeni", "odłożeni", "odłupani", "odmachani", "odmachiwani", "odmalowani", "odmarszczeni", "odmawiani", "odmeldowani", "odmieniani", "odmienieni", "odmierzani", "odmierzeni", "odmieszani", "odmontowani", "odmówieni", "odmrażani", "odmrożeni", "odnajdowani", "odnalezieni", "odnawiani", "odniesieni", "odnoszeni", "odnotowani", "odnotowywani", "odnowieni", "odpakowani", "odpakowywani", "odpalani", "odpaleni", "odpałzowani", "odparowani", "odpędzani", "odpicowani", "odpieczętowani", "odpierani", "odpiłowani", "odpiłowywani", "odpinani", "odpisani", "odpisywani", "odpłacani", "odplamieni", "odplątani", "odpowietrzeni", "odpracowani", "odpracowywani", "odprasowani", "odprawiani", "odprawieni", "odprężani", "odprostowani", "odprowadzani", "odprowadzeni", "odpryskani", "odpukani", "odpukiwani", "odpuszczani", "odpuszczeni", "odpychani", "odrąbani", "odrabiani", "odrąbywani", "odradzani", "odradzeni", "odrapani", "odrastani", "odratowani", "odreagowani", "odremontowani", "odrestaurowani", "odrestaurowywani", "odrobaczani", "odrobieni", "odroczeni", "odrodzeni", "odróżniani", "odróżnieni", "odrysowani", "odrywani", "odrzucani", "odrzuceni", "odsączani", "odsączeni", "odsadzeni", "odseparowani", "odsiadywani", "odsiani", "odsiewani", "odsłaniani", "odsłuchani", "odsłuchiwani", "odsłużeni", "odśnieżani", "odśnieżeni", "odsoleni", "odśpiewani", "odsprzedani", "odsprzedawani", "odstąpieni", "odstawiani", "odstawieni", "odstępowani", "odstraszani", "odstręczeni", "odstresowani", "odstrzeliwani", "odstrzeleni", "odsuwani", "odświeżani", "odświeżeni", "odsyłani", "odsypywani", "odsysani", "odszczekani", "odszczekiwani", "odsztafirowani", "odszukani", "odszyfrowani", "odszyfrowywani", "odszykowani", "odtrąbieni", "odtrąceni", "odtwarzani", "odtworzeni", "oduczeni", "odurzeni", "odwalani", "odwaleni", "odwiązani", "odwiązywani", "odwiedzani", "odwiedzeni", "odwieszeni", "odwiezieni", "odwijani", "odwlekani", "odwodnieni", "odwodzeni", "odwołani", "odwoływani", "odwożeni", "odwracani", "odwróceni", "odwzajemnieni", "odwzorowani", "odżegnani", "odziani", "odziedziczeni", "odznaczani", "odznaczeni", "odzwieciedleni", "odzwierciedlani", "odzwonieni", "odzwyczajeni", "odzyskani", "odzyskiwani", "odzywiani", "odżywieni", "oferowani", "ofiarowani", "ofiarowywani", "ogarniani", "oglądani", "ogłaszani", "ogłoszeni", "ogłupiani", "ogłupieni", "ogłuszeni", "ogołoceni", "ogoleni", "ograbiani", "ograbieni", "ograniczani", "ograniczni", "ograni", "ogrodzeni", "ogryzieni", "ogrzani", "ogrzewani", "okablowani", "okaleczeni", "okantowani", "okąpani", "okazani", "okazywani", "okiełznani", "okładani", "okłamani", "okłamywani", "oklaskiwani", "oklejeni", "oklepani", "okopani", "okopywani", "okpieni", "okradani", "okradzieni", "okraszeni", "okrążani", "okrążeni", "okręcani", "okręceni", "określani", "określeni", "okrojeni", "okrywani", "okulawieni", "okupieni", "okupowani", "olani", "olewani", "omamieni", "omawiani", "omdlewani", "omijani", "omotani", "omówieni", "onanizowani", "onieśmielani", "onieśmieleni", "opakowani", "opalani", "opaleni", "opancerzeni", "opanowani", "opanowywani", "oparzeni", "opasani", "opatentowani", "opatrywani", "opatrzeni", "opatuleni", "opędzani", "opędzeni", "operowani", "opętani", "opętywani", "opieczętowani", "opiekowani", "opierani", "opijani", "opisani", "opisywani", "opłacani", "opłaceni", "opłakani", "opłakiwani", "opłukani", "opluwani", "opływani", "opodatkowani", "opodatkowywani", "oponowani", "oporządzani", "oporządzeni", "opowiadani", "opowiedziani", "opóźniani", "opóźnieni", "opracowani", "opracowywani", "oprawiani", "oprawieni", "oprowadzani", "oprowadzeni", "opróżniani", "opróżnieni", "opryskani", "opryskiwani", "opublikowani", "opukani", "opuszczani", "opuszczeni", "opychani", "opyleni", "orani", "orbowani", "organizowani", "orientowani", "oroszeni", "orzekani", "osaczani", "osaczeni", "osadzani", "osądzani", "osadzeni", "osądzeni", "oscylowani", "osiadani", "osiągani", "osiedlani", "osiedleni", "osiedzeni", "osieroceni", "osiodłani", "oskalpowani", "oskarżeni", "oskrobani", "oskrzydlani", "oskrzydleni", "oskubani", "oskubywani", "osłabiani", "osłabieni", "oślepiani", "oślepieni", "ośliniani", "osłodzeni", "osłonieni", "osłuchani", "osmaleni", "ośmieleni", "ośmieszani", "ośmieszeni", "ostrzegani", "ostrzelani", "ostrzeni", "ostudzeni", "osuszani", "osuszeni", "osuwani", "oswajani", "oświadczani", "oświadczeni", "oświecani", "oświecieni", "oświetlani", "oświetleni", "oswobadzani", "oswobodzeni", "oswojeni", "oszacowani", "oszałamiani", "oszczani", "oszczędzani", "oszczędzeni", "oszkleni", "oszlifowani", "oszołomieni", "oszpeceni", "oszukani", "oszukiwani", "oszwabieni", "otaczani", "otoczeni", "otruwani", "otrząsani", "otrzepani", "otrzeźwieni", "otrzymani", "otrzymywani", "otuleni", "otumanieni", "otwierani", "otwarci", "owani", "owdowieni", "owiani", "owijani", "ozdabiani", "ozdobieni", "ozdrowieni", "ożenieni", "oznaczani", "oznaczeni", "oznajmiani", "oznajmieni", "oznakowani", "ożywani", "ożywiani", "ożywieni", "pakowani", "paktowani", "pałani", "pałaszowani", "paleni", "pamiętani", "panoszeni", "paprani", "parafrazowani", "paraliżowani", "parkowani", "parowani", "partaczeni", "parzeni", "pastowani", "paszeni", "patrolowani", "patroszeni", "pauzowani", "pchani", "pdholowani", "pedałowani", "pękani", "pełnieni", "penetrowani", "perforowani", "perfumowani", "perswadowani", "piastowani", "pichceni", "pielęgnowani", "pieleni", "pienieni", "pieszczeni", "piętnowani", "pijani", "pikietowani", "piknikowani", "pikowani", "pilnowani", "pilotowani", "piłowani", "pisani", "pisywani", "płaceni", "plądrowani", "planowani", "płaszczeni", "plątani", "płatani", "pławieni", "plewieni", "płoszeni", "plotkowani", "plugawieni", "płukani", "pluskani", "pobaraszkowani", "pobierani", "pobłażani", "pobłogosławieni", "pobrani", "pobrudzeni", "pobudzani", "pobudzeni", "pobujani", "pocałowani", "pocerowani", "pochłaniani", "pochlapani", "pochlebiani", "pochowani", "pochwalani", "pochwaleni", "pochwyceni", "pochylani", "pochyleni", "pociachani", "pociągani", "pocierani", "pocieszani", "pocieszeni", "poceni", "pocukrowani", "poćwiartowani", "poczesani", "poczęstowani", "poczochrani", "poczytani", "poczytywani", "podani", "podarowani", "podawani", "podążeni", "podbierani", "podbijani", "podbudowani", "podbudowywani", "podburzani", "podburzeni", "podchwyceni", "podciągani", "podcierani", "podcinani", "podczepieni", "poddani", "poddawani", "podebrani", "podejmowani", "podejrzani", "podejrzewani", "podelektowani", "podeptani", "poderwani", "podesłani", "podglądani", "podgoleni", "podgonieni", "podgryzani", "podgrzani", "podgrzewani", "podjadani", "podjedzeni", "podkablowani", "podkarmieni", "podkładani", "podklejeni", "podkolorowani", "podkołowani", "podkopani", "podkopywani", "podkradani", "podkręcani", "podkręceni", "podkreślani", "podkreśleni", "podkształceni", "podkuleni", "podkupieni", "podkurzeni", "podłączani", "podłączeni", "podładowani", "podłamani", "podlani", "podłapani", "podleczeni", "podlegani", "podlewani", "podliczani", "podliczeni", "podlizani", "podlizywani", "podłożeni", "podmalowani", "podmieniani", "podmienieni", "podmuchani", "podniecani", "podnieceni", "podniesieni", "podnoszeni", "podołani", "podopingowani", "podostrzeni", "podotykani", "podpalani", "podpaleni", "podpatrywani", "podpatrzeni", "podpieczętowani", "podpiekani", "podpierani", "podpiłowani", "podpinani", "podpisani", "podpisywani", "podpłaceni", "podpompowani", "podporządkowani", "podporządkowywani", "podpowiadani", "podpowiedziani", "podprowadzani", "podpuszczani", "podpuszczeni", "podpychani", "podpytani", "podrabiani", "podrapani", "podrasowani", "podratowani", "podrażnieni", "podręczeni", "podregulowani", "podreperowani", "podretuszowani", "podrobieni", "podroczeni", "podróżowani", "podrygiwani", "podrywani", "podrzucani", "podrzuceni", "podrzynani", "podsadzeni", "podskubywani", "podsłuchani", "podsłuchiwani", "podsmażani", "podsmażeni", "podśpiewywani", "podstawiani", "podstawieni", "podstemplowani", "podstrojeni", "podsumowani", "podsumowywani", "podsuwani", "podświetlani", "podsycani", "podsyceni", "podsyłani", "podsypani", "podszczypywani", "podszkoleni", "podszlifowani", "podszykowani", "podszywani", "podtapiani", "podtopieni", "podtrzymani", "podtrzymywani", "podtuczeni", "poduczani", "podupadani", "poduszeni", "podwajani", "podwalani", "podważani", "podwędzeni", "podwiązani", "podwieszani", "podwiezieni", "podwijani", "podwojeni", "podwożeni", "podwyżani", "podwyższani", "podwyższeni", "podyktowani", "podyskutowani", "podziabani", "podziałani", "podziałkowani", "podziękowani", "podzieleni", "podziurawieni", "podziwiani", "poeksperymentowani", "pofarbowani", "pofatygowani", "pofilmowani", "poganiani", "pogardzani", "pogardzeni", "pogarszani", "pogaszeni", "pogładzeni", "pogłaskani", "pogłębiani", "pogłębieni", "pogłośnieni", "pogmatwani", "pognębieni", "pogniecieni", "pogodzeni", "pogonieni", "pogorszeni", "pogotowani", "pograbieni", "pogrążani", "pogrążeni", "pogrożeni", "pogrubiani", "pogrubieni", "pogruchani", "pogruchotani", "pogrupowani", "pogrywani", "pogryzani", "pogryzieni", "pogrzani", "pogrzebani", "pogubieni", "pogwałcani", "pohamowani", "pohandlowani", "poharatowani", "pohuśtani", "poinformowani", "poinstruowani", "pojednani", "pojmowani", "pojeni", "pokajani", "pokaleczeni", "pokarani", "pokarmieni", "pokąsani", "pokatalogowani", "pokazani", "pokazywani", "pokiereszowani", "pokierowani", "pokiwani", "pokładani", "poklepani", "poklepywani", "pokłonieni", "pokochani", "pokolorowani", "pokoloryzowani", "pokołysani", "pokombinowani", "pokomplikowani", "pokonani", "pokończeni", "pokonywani", "pokopani", "pokrajani", "pokrążeni", "pokręceni", "pokrojeni", "pokruszeni", "pokrywani", "pokrzepiani", "pokrzepieni", "pokrzyżowani", "pokuszeni", "pokutowani", "połączeni", "polakierowani", "połamani", "polani", "połapani", "połaskotani", "połatani", "polecani", "połechtani", "poleceni", "poleczeni", "polegani", "polemizowani", "polepszani", "polepszeni", "polerowani", "polewani", "policzkowani", "policzeni", "polimeryzowani", "polizani", "polowani", "połowieni", "położeni", "polubieni", "poluźnieni", "poluzowani", "połykani", "pomacani", "pomachani", "pomagani", "pomalowani", "pomarynowani", "pomasowani", "pomazani", "pomęczeni", "pomiatani", "pomieszani", "pomieszczeni", "pomijani", "pomiziani", "pomnażani", "pomniejszani", "pomniejszeni", "pomnożeni", "pomoczeni", "pompowani", "pomydleni", "pomyleni", "pomyszkowani", "pomywani", "ponabijani", "ponaciskani", "ponadziewani", "ponaglani", "ponagleni", "ponagrywani", "ponaklejani", "ponakłuwani", "ponakrywani", "ponaprawiani", "ponawiani", "poniańczeni", "poniechani", "ponieiwerani", "poniesieni", "poniszczeni", "poniżani", "poniżeni", "ponoszeni", "ponowieni", "ponudzeni", "poobcinani", "poobcowani", "poobczajani", "poobijani", "poobmacywani", "poobracani", "poobserwowani", "poodbijani", "poodcinani", "poodgryzani", "poodkurzani", "poodprawiani", "poodsuwani", "poodwalani", "pooglądani", "poograniczani", "poopalani", "poopiekani", "poopwiadani", "pootwierani", "popadani", "popakowani", "popaleni", "poparzeni", "popchani", "popędzani", "popędzeni", "popękani", "popełniani", "popełnieni", "poperfumowani", "popierani", "popieszczeni", "popijani", "popilnowani", "popisani", "popłaceni", "popłakiwani", "poplamieni", "poplątani", "popluskani", "popodcinani", "popodziwiani", "popoprawiani", "poprani", "poprasowani", "poprawiani", "poprawieni", "poproszeni", "poprowadzeni", "popryskani", "poprzebierani", "poprzeciągani", "poprzecinani", "poprzedzani", "poprzeglądani", "poprzeklinani", "poprzekopywani", "poprzemieszczani", "poprzenoszeni", "poprzesadzani", "poprześladowani", "poprzestawiani", "poprzesuwani", "poprzewieszani", "poprzewracani", "poprzycinani", "poprzymierzani", "poprzytulani", "poprzywiązywani", "popudrowani", "popukani", "popularyzowani", "popuszczani", "popuszczeni", "popychani", "popykani", "popytani", "porabiani", "porachowani", "poranieni", "poratowani", "porażeni", "poręczeni", "porównani", "porozbierani", "porozbijani", "porozciągani", "porozcinani", "porozdawani", "porozdzielani", "porozmieszczani", "poróżnieni", "porozpędzani", "porozpieszczani", "porozprowadzani", "porozpruwani", "porozrzucani", "porozstawiani", "porozsyłani", "porozumiewani", "porozwalani", "porozwiązywani", "porozwieszani", "porozwożeni", "portretowani", "poruszani", "poruszeni", "porwani", "porysowani", "porywani", "porządkowani", "porządzeni", "porzucani", "porzuceni", "posądzani", "posadzeni", "posądzeni", "pościągani", "pościeleni", "pościerani", "pościgani", "pościnani", "pościskani", "posegregowani", "posiadani", "posiani", "posiekani", "posilani", "posiłkowani", "posileni", "posiłowani", "posiniaczeni", "posiorbani", "poskąpieni", "poskładani", "posklejani", "poskramiani", "poskręcani", "poskrobani", "poskromieni", "poskubani", "posłani", "posłodzeni", "poślubiani", "poślubieni", "posługiwani", "posmakowani", "posmarowani", "posoleni", "posortowani", "pospekulowani", "pospieszani", "pośpieszani", "pośpiewani", "pospinani", "pospłacani", "posprawdzani", "posprzątani", "posprzedawani", "pośredniczeni", "possani", "postanowieni", "postani", "postarani", "postawieni", "postemplowani", "posterowani", "postradani", "postraszeni", "postrugani", "postrzegani", "postrzelani", "postrzeleni", "postukani", "postymulowani", "posuwani", "poświącani", "poświadczeni", "poświeceni", "poświęceni", "poświętowani", "poświntuszeni", "posyłani", "posypani", "posypywani", "poszarpani", "poszastani", "poszatkowani", "poszczyceni", "poszczypani", "poszerzani", "poszerzeni", "poszorowani", "poszpiegowani", "poszturchani", "poszukani", "poszukiwani", "poszwędani", "poszybowani", "potakiwani", "potarmoszeni", "potasowani", "potęgowani", "potępiani", "potępieni", "potoczeni", "potopieni", "potorturowani", "potrącani", "potrąceni", "potraktowani", "potrojeni", "potrząsani", "potrzaskani", "potrzymani", "Poturbowani", "poturlani", "potwierdzeni", "potykani", "poucinani", "pouczani", "pouczeni", "poudawani", "poukładani", "pouprawiani", "poupychani", "pourywani", "poustawiani", "poużywani", "powąchani", "powachlowani", "powalani", "powaleni", "poważani", "powbijani", "powciągani", "powciskani", "powdychani", "powęszeni", "powetowani", "powiadamiani", "powiadomieni", "powiązani", "powiedziani", "powiedzeni", "powiększani", "powielani", "powieleni", "powierzani", "powierzeni", "powieszeni", "powiewani", "powinszowani", "powitani", "powkładani", "powlekani", "powłóczeni", "powodowani", "powołani", "powoływani", "powożeni", "powpychani", "powróceni", "powrzucani", "powsadzani", "powspominani", "powstrzymani", "powtarzani", "powtórzeni", "powybierani", "powybijani", "powycierani", "powycinani", "powyciskani", "powydawani", "powyganiani", "powyginani", "powyjaśniani", "powyjmowani", "powyłączani", "powymiatani", "powymieniani", "powynoszeni", "powypełniani", "powypisywani", "powyrywani", "powyrzucani", "powystrzelani", "powysyłani", "powywalani", "powywieszani", "powywracani", "pozabawiani", "pozabijani", "pozacierani", "pożądani", "pożądleni", "pozadzierani", "pozakładani", "pozaklinani", "pozałatwiani", "pozamiatani", "pozamieniani", "pozamrażani", "pozamykani", "pozapalani", "pozapinani", "pozapisywani", "pozapraszani", "pozasłaniani", "pozastrzelani", "pozatykani", "pozbawiani", "pozbawieni", "pozbierani", "pozbywani", "pozdejmowani", "pozdrawiani", "pozdrowieni", "pożegnani", "pożerani", "pozmiatani", "pozmieniani", "pozmywani", "poznaczeni", "poznani", "poznawani", "poznęcani", "pozorowani", "pozostawiani", "pozostawieni", "pozowani", "pozrywani", "pozszywani", "pozwalniani", "pozwani", "pozwiązywani", "pozwiedzani", "pozwoleni", "pożyczani", "pożyczeni", "pozyskani", "pozywani", "pożywiani", "pożywieni", "praktykowani", "prani", "prasowani", "prawieni", "prażeni", "precyzowani", "preferowani", "prenumerowani", "prezentowani", "próbowani", "procesowani", "produkowani", "profanowani", "profilowani", "prognozowani", "programowani", "projektowani", "proklamowani", "prolongowani", "promieniowani", "promowani", "propagowani", "proponowani", "prosperowani", "prostowani", "proszkowani", "proszeni", "protestowani", "protokołowani", "prowadzeni", "prowokowani", "pryskani", "przeanalizowani", "przearanżowani", "przebaczani", "przebaczeni", "przebadani", "przebierani", "przebijani", "przeboleni", "przebrani", "przebudowani", "przebudowywani", "przebudzani", "przebudzeni", "przebukowani", "przebywani", "przeceniani", "przecenieni", "przechlapani", "przechodzeni", "przechowani", "przechowywani", "przechrzceni", "przechwyceni", "przechwytywani", "przechylani", "przechyleni", "przechytrzani", "przechytrzeni", "przeciągani", "przeciążani", "przeciążeni", "przeciekani", "przecierani", "przecierpiani", "przecinani", "przeciskani", "przeciwstawiani", "przećwiczeni", "przeczekani", "przeczesani", "przeczesywani", "przeczołgani", "przeczuwani", "przeczyszczeni", "przeczytani", "przedawkowani", "przedawkowywani", "przedekorowani", "przedłożeni", "przedłużani", "przedłużeni", "przedmuchani", "przedobrzeni", "przedostani", "przedostawani", "przedstawiani", "przedstawieni", "przedymani", "przedyskutowani", "przedzierani", "przedziurawieni", "przedziurkowani", "przeegzaminowani", "przefaksowani", "przefarbowani", "przefasonowani", "przefasowani", "przefaxowani", "przefiltrowani", "przeformowani", "przeforsowani", "przegadani", "przeganani", "przeganiani", "przegapiani", "przegapieni", "przeginani", "przeglądani", "przegłodzeni", "przegłosowani", "przegonieni", "przegotowani", "przegotowywani", "przegrabieni", "przegradzani", "przegrani", "przegrupowani", "przegrupowywani", "przegrywani", "przegryzani", "przegryzieni", "przegrzani", "przegrzebani", "przegrzewani", "przehandlowani", "przeholowani", "przeinstalowani", "przeistoczeni", "przejadani", "przejaskrawiani", "przejaśnieni", "przejawiani", "przejawieni", "przejechani", "przejeżdżani", "przejmowani", "przejrzani", "przekabacani", "przekabaceni", "przekablowani", "przekalibrowani", "przekalkulowani", "przekarmiani", "przekąszeni", "przekazywani", "przekierowani", "przekierowywani", "przekimani", "przekładani", "przeklejeni", "przeklinani", "przekonani", "przekonfigurowani", "przekonstruowani", "przekonwertowani", "przekonywani", "przekopani", "przekopywani", "przekoziołkowani", "przekraczani", "przekręcani", "przekręceni", "przekreślani", "przekreśleni", "przekroczeni", "przekrojeni", "przekrzyczeni", "przekrzywieni", "przekształcani", "przekształceni", "przekupieni", "przekupywani", "przekwalifikowani", "przełączani", "przełączeni", "przeładowani", "przeładowywani", "przełamani", "przełamywani", "przelani", "przelatywani", "przeleciani", "przelewani", "przeleżani", "przelicytowani", "przeliczani", "przeliczeni", "przeliterowani", "przełożeni", "przełykani", "przemalowani", "przemalowywani", "przemaszerowani", "przemawiani", "przemeblowani", "przemęczeni", "przemieleni", "przemieniani", "przemierzeni", "przemieszczani", "przemieszczeni", "przemijani", "przemilczani", "przemilczeni", "przemodelowani", "przemusztrowani", "przemycani", "przemyceni", "przemyślani", "przemyśleni", "przemywani", "przenegocjowani", "przeniesieni", "przenikani", "przenoszeni", "przeobrażani", "przeobrażeni", "przeoczani", "przeoczeni", "przeorani", "przeorganizowani", "przeorientowani", "przepadani", "przepakowani", "przepaleni", "przeparkowani", "przepchani", "przepędzani", "przepędzeni", "przepełniani", "przepełnieni", "przepijani", "przepiłowani", "przepisani", "przepisywani", "przepłacani", "przepłaceni", "przepłakani", "przeplanowani", "przepłoszeni", "przepłukani", "przepłukiwani", "przepływani", "przepompowani", "przepompowywani", "przepowiadani", "przepowiedziani", "przepracowani", "przepracowywani", "przeprani", "przeprawiani", "przeprawieni", "przeprogramowani", "przeprojektowani", "przeprowadzani", "przeprowadzeni", "przepuszczani", "przepuszczeni", "przepychani", "przepytani", "przepytywani", "przerąbani", "przerabiani", "przeradzani", "przerastani", "przerażeni", "przeredagowani", "przerejestrowani", "przerobieni", "przerodzeni", "przerwani", "przerysowani", "przerywani", "przerzedzani", "przerzucani", "przerzuceni", "przesączeni", "przesadzani", "przesądzani", "przesadzeni", "przesądzeni", "prześcigani", "przesiadani", "przesiadywani", "przesiani", "przesiedlani", "przesiedleni", "przesiedziani", "przesiewani", "przesileni", "przeskakiwani", "przeskalowani", "przeskanowani", "przeskoczeni", "przeskrobani", "prześladowani", "przesłaniani", "przesłani", "prześledzeni", "przesłodzeni", "przesłuchani", "przesłuchiwani", "przesmarowani", "przesoleni", "przesortowani", "przespani", "prześpiewani", "przessani", "przestawiani", "przestawieni", "przestemplowani", "przestraszeni", "przestrojeni", "przestrzegani", "przestrzeleni", "przestudiowani", "przesuwani", "prześwietlani", "prześwietleni", "przesyłani", "przesypani", "przesypiani", "przesypywani", "przeszarżowani", "przeszczepiani", "przeszczepieni", "przeszkadzani", "przeszkoleni", "przeszmuglowani", "przeszukani", "przeszukiwani", "przeszywani", "przetaczani", "przetapetowani", "przetestowani", "przetkani", "przetoczeni", "przetopieni", "przetrąceni", "przetransformowani", "przetransmitowani", "przetransponowani", "przetransportowani", "przetrawieni", "przetrwani", "przetrząsani", "przetrzepani", "przetrzymani", "przetrzymywani", "przetwarzani", "przetworzeni", "przewalani", "przewalczeni", "przewaletowani", "przewaleni", "przeważani", "przeważeni", "przewertowani", "przewiązani", "przewiązywani", "przewidywani", "przewidziani", "przewiercani", "przewierceni", "przewieszani", "przewieszeni", "przewietrzeni", "przewiezieni", "przewijani", "przewitani", "przewodniczeni", "przewodzeni", "przewożeni", "przewracani", "przewróceni", "przewyższani", "przeymierzani", "przeżeglowani", "przeżegnani", "przeziębieni", "przezimowani", "przeznaczani", "przeznaczeni", "przezwyciężani", "przezwyciężeni", "przezywani", "przeżywani", "przodowani", "przpochlebieni", "przwdziewani", "przybastowani", "przybierani", "przybijani", "przybliżani", "przybliżeni", "przybrani", "przycelowani", "przycepieni", "przychyleni", "przyciągani", "przyciemnieni", "przycinani", "przyciskani", "przyciszeni", "przyćmiewani", "przyćmieni", "przycumowani", "przyczepiani", "przyczesani", "przyczołgani", "przyczynieni", "przydeptani", "przyduszeni", "przydzielani", "przydzieleni", "przygaszeni", "przygazowani", "przygładzani", "przygnębiani", "przygniatani", "przygniecieni", "przygotowani", "przygruchani", "przygrywani", "przygryzani", "przygryzieni", "przygrzani", "przygwożdżeni", "przyhamowani", "przyholowani", "przyjani", "przyjmowani", "przyjrzani", "przykładani", "przyklejeni", "przyklepani", "przykopani", "przykręcani", "przykręceni", "przykróceni", "przykrywani", "przykurzeni", "przykuwani", "przyłączani", "przyłączeni", "przylani", "przyłapani", "przylegani", "przylepiani", "przylepieni", "przyłożeni", "przymierzeni", "przymilani", "przymocowani", "przymuszani", "przynależeni", "przyniesieni", "przynoszeni", "przynudzani", "przyostrzeni", "przyozdabiani", "przyozdobieni", "przypakowani", "przypakowywani", "przypalani", "przypaleni", "przypasowani", "przypatrywani", "przypatrzeni", "przypieczętowani", "przypiekani", "przypierani", "przypilnowani", "przypiłowani", "przypinani", "przypisani", "przypisywani", "przypłaceni", "przyplątani", "przypodobani", "przypominani", "przypomniani", "przyporządkowani", "przyprawiani", "przyprawieni", "przyprowadzeni", "przypucowani", "przypudrowani", "przypuszczani", "przypuszczeni", "przyrównani", "przyrządzani", "przyrządzeni", "przysiadani", "przyskrzydleni", "przyskrzyniani", "przyskrzynieni", "przysłaniani", "przysłani", "przysłodzeni", "przysłonieni", "przysłuchiwani", "przysługiwani", "przysłużeni", "przysmażani", "przysmażeni", "przyspieszani", "przyspieszeni", "przysporzeni", "przysposobieni", "przyśrubowywani", "przyssani", "przystąpieni", "przystawiani", "przystawieni", "przystemplowani", "przystopowani", "przystosowani", "przystrojeni", "przysuwani", "przyswajani", "przyświecani", "przyświęceni", "przyswojeni", "przysyłani", "przysypani", "przyszpileni", "przyszykowani", "przyszywani", "przytaczani", "przytargani", "przytaszczani", "przytępiani", "przytępieni", "przytkani", "przytłaczani", "przytłoczeni", "przytłumieni", "przytoczeni", "przytrafieni", "przytroczeni", "przytruwani", "przytrzymani", "przytrzymywani", "przytulani", "przytuleni", "przytwierdzani", "przytwierdzeni", "przytykani", "przyuczeni", "przyuważeni", "przywabieni", "przywalani", "przywaleni", "przywarowani", "przywdziani", "przywiązani", "przywiązywani", "przywidziani", "przywiezieni", "przywitani", "przywłaszczani", "przywłaszczeni", "przywołani", "przywoływani", "przywożeni", "przywracani", "przywróceni", "przyznaczeni", "przyznani", "przyznawani", "przyzwalani", "przyzwani", "przyzwyczajani", "przyzwyczajeni", "przyzywani", "psiamani", "pstrykani", "publikowani", "pucowani", "pudłowani", "pudrowani", "punktowani", "pustoszeni", "puszczani", "puszczeni", "puszkowani", "puszeni", "pykani", "pytani", "rabowani", "rachowani", "racjonalizowani", "racjonowani", "raczeni", "radowani", "ranieni", "raportowani", "ratowani", "ratyfikowani", "reaktywowani", "realizowani", "reanimowani", "recytowani", "ręczeni", "redagowani", "redukowani", "reformowani", "refowani", "regenerowani", "regionalizowani", "regulowani", "reinkarnowani", "rejestrowani", "reklamowani", "rekomendowani", "rekompensowani", "rekonstruowani", "rekreowani", "rekrutowani", "rekwirowani", "relacjonowani", "relaksowani", "remodulowani", "remontowani", "renegocjowani", "reorganizowani", "reperowani", "replikowani", "represejonowani", "reprezentowani", "reprodukowani", "resetowani", "resocjalizowani", "respektowani", "resuscytowani", "retuszowani", "rewanżowani", "rewidowani", "rezerwowani", "rezonowani", "rezygnowani", "reżyserowani", "robieni", "rodzeni", "rojeni", "rolowani", "romansowani", "ronieni", "rozbawiani", "rozbawieni", "rozbierani", "rozbijani", "rozbrajani", "rozbrojeni", "rozbudowani", "rozbudowywani", "rozbudzani", "rozbudzeni", "rozbujani", "rozcapierzeni", "rozchmurzeni", "rozchodzeni", "rozchylani", "rozchyleni", "rozciągani", "rozcieńczani", "rozcieńczeni", "rozcierani", "rozcinani", "rozczarowani", "rozczarowywani", "rozczesani", "rozczłonkowani", "rozczulani", "rozczytani", "rozdani", "rozdawani", "rozdeptani", "rozdmuchani", "rozdmuchiwani", "rozdrabniani", "rozdrapani", "rozdrapywani", "rozdrażniani", "rozdrażnieni", "rozduszeni", "rozdwojeni", "rozdysponowani", "rozdzielani", "rozdzieleni", "rozdzierani", "rozdziewiczeni", "rozebrani", "rozedrani", "rozegrani", "rozegrywani", "rozepchani", "rozerwani", "rozesłani", "rozgaszczani", "rozglaszani", "rozgłoszeni", "rozgniatani", "rozgniecieni", "rozgniewani", "rozgonieni", "rozgraniczeni", "rozgrani", "rozgromieni", "rozgrywani", "rozgryzani", "rozgryzieni", "rozgrzani", "rozgrzebywani", "rozgrzeszeni", "rozgrzewani", "rozhuśtani", "rozjaśniani", "rozjaśnieni", "rozjechani", "rozjedzeni", "rozjuszani", "rozjuszeni", "rozkazani", "rozkazywani", "rozkładani", "rozklejani", "rozklejeni", "rozkołysani", "rozkopani", "rozkopywani", "rozkoszowani", "rozkręcani", "rozkręceni", "rozkrojeni", "rozkruszeni", "rozkuwani", "rozkwaszeni", "rozkwaterowani", "rozkwitani", "rozłączeni", "rozładowani", "rozładowywani", "rozłamani", "rozlani", "rozlewani", "rozliczani", "rozliczeni", "rozlokowani", "rozłożeni", "rozłupani", "rozluźniani", "rozmanażani", "rozmasowani", "rozmawiani", "rozmazani", "rozmazywani", "rozmiękczeni", "rozmieniani", "rozmienieni", "rozmieszczani", "rozmieszczeni", "rozmnożeni", "rozmontowani", "rozmówieni", "rozmrażani", "rozmrożeni", "rozmyślani", "różnicowani", "rozniecani", "rozniecieni", "rozniesieni", "różnieni", "roznoszeni", "rozochoceni", "rozpaczani", "rozpakowani", "rozpakowywani", "rozpalani", "rozpaleni", "rozpamiętywani", "rozpaskudzani", "rozpatrywani", "rozpatrzeni", "rozpędzani", "rozpędzeni", "rozpętani", "rozpieszczani", "rozpieszczeni", "rozpiłowani", "rozpinani", "rozpisani", "rozpisywani", "rozplanowani", "rozpłaszczani", "rozpłaszczeni", "rozplątani", "rozplątywani", "rozpoczynani", "rozpogodzeni", "rozporządzani", "rozporządzeni", "rozpościerani", "rozpostrzeni", "rozpowiadani", "rozpowiedziani", "rozpowszechniani", "rozpowszechnieni", "rozpoznani", "rozpoznawani", "rozpracowani", "rozpraszani", "rozprawiani", "rozprawiczeni", "rozprawieni", "rozprostowani", "rozproszeni", "rozprowadzani", "rozprowadzeni", "rozpruwani", "rozprzestrzeniani", "rozprzestrzenieni", "rozpuszczani", "rozpuszczeni", "rozpychani", "rozpylani", "rozpyleni", "rozpytani", "rozpytywani", "rozrastani", "rozreklamowani", "rozrobieni", "rozróżniani", "rozróżnieni", "rozruszani", "rozrysowani", "rozrywani", "rozrzucani", "rozsadzani", "rozsadzeni", "rozsądzeni", "rozścieleni", "rozsiani", "rozsiekani", "rozsiewani", "rozsiodłani", "rozsławiani", "rozsławieni", "rozsmarowani", "rozsmarowywani", "rozśmieszani", "rozstani", "rozstąpieni", "rozstawani", "rozstawiani", "rozstawieni", "rozstrojeni", "rozstrząsani", "rozstrzeliwani", "rozstrzeleni", "rozstrzygani", "rozsupłani", "rozświetlani", "rozświetleni", "rozsyłani", "rozsypani", "rozsypywani", "rozszarpani", "rozszarpywani", "rozszczepiani", "rozszczepieni", "rozszerzani", "rozszerzeni", "rozszyfrowani", "roztaczani", "roztapiani", "roztoczeni", "roztopieni", "roztrwonieni", "roztrząsani", "roztrzaskani", "rozumiani", "rozumowani", "rozwalani", "rozwaleni", "rozważani", "rozważeni", "rozweselani", "rozweseleni", "rozwiani", "rozwiązani", "rozwiązywani", "rozwidniani", "rozwiedzieni", "rozwierani", "rozwierceni", "rozwieszani", "rozwieszeni", "rozwiewani", "rozwiezieni", "rozwikłani", "rozwlekani", "rozwodzeni", "rozwścieczani", "rozwścieczeni", "rozzłoszczeni", "rugani", "ruinowani", "rujnowani", "ruszani", "ruszeni", "rwani", "ryczani", "ryglowani", "rymowani", "rysowani", "ryzykowani", "rządzeni", "rzeźbieni", "rzucani", "rzuceni", "rzygani", "sabotażowani", "sączeni", "sadzani", "sadzeni", "sądzeni", "salutowani", "salwowani", "sankcjonowani", "satysfakcjonowani", "scaleni", "scementowani", "scentrowani", "scharakteryzowani", "schładzani", "schlani", "schlapani", "schlebieni", "schłodzeni", "schowani", "schronieni", "schrupani", "schrzanieni", "schwytani", "schylani", "ścieleni", "ściemniani", "ściemnieni", "ścierani", "ścierpieni", "ścigani", "ścinani", "ściskani", "ściszani", "ściszeni", "sędziowani", "segregowani", "selekcjonowani", "separowani", "sępieni", "serwowani", "sfabrykowani", "sfajczeni", "sfałszowani", "sfaulowani", "sfilmowani", "sfinalizowani", "sfinansowani", "sfingowani", "sformalizowani", "sformatowani", "sformowani", "sformułowani", "sforsowani", "sfotografowani", "shimmerowani", "siani", "siekani", "siorbani", "skadrowani", "skakani", "skalani", "skaleczeni", "skalibrowani", "skalkulowani", "skalpowani", "skanalizowani", "skandowani", "skanowani", "skapitulowani", "skarceni", "skarżeni", "skasowani", "skatalogowani", "skazani", "skażeni", "skazywani", "skierowani", "składani", "składowani", "skłaniani", "sklasyfikowani", "sklecieni", "sklejani", "sklejeni", "sklepani", "skłóceni", "skłonieni", "sklonowani", "sknoceni", "skojarzeni", "skolonizowani", "skołowani", "skombinowani", "skomentowani", "skompensowani", "skompletowani", "skomplikowani", "skomponowani", "skompresowani", "skompromitowani", "skomunikowani", "skonani", "skoncentrowani", "skończeni", "skondensowani", "skonfigurowani", "skonfiskowani", "skonfrontowani", "skonkretyzowani", "skonsolidowani", "skonstruowani", "skonsultowani", "skonsumowani", "skontaktowani", "skontrolowani", "skoordynowani", "skopani", "skopiowani", "skorektowani", "skorumpowani", "skorygowani", "skorzystani", "skoszeni", "skracani", "skradzieni", "skręcani", "skręceni", "skremowani", "skreślani", "skreśleni", "skrobani", "skróceni", "skrojeni", "skropieni", "skruszeni", "skrystalizowani", "skrytykowani", "skrywani", "skrzecowani", "skrzyczani", "skrzywdzeni", "skrzyżowani", "skserowani", "skubani", "skuleni", "skumulowani", "skupiani", "skupieni", "skupowani", "skurczeni", "skuszeni", "skuwani", "skwitowani", "słani", "sławieni", "śledzeni", "ślinieni", "ślizgani", "słodzeni", "słuchani", "słyszani", "smagani", "smarowani", "smażeni", "śmieceni", "smyrani", "sondowani", "sortowani", "spafycikowani", "spakowani", "spalani", "spałaszowani", "spaleni", "spałowani", "spamiętani", "spaprani", "sparafrazowani", "sparaliżowani", "sparowani", "spartaczeni", "spartoleni", "sparzeni", "spasowani", "spatałaszeni", "spauzowani", "spawani", "spawieni", "specjalizowani", "spędzani", "spędzeni", "spekulowani", "spełniani", "spełnieni", "spenetrowani", "spętani", "spierani", "śpiewani", "spiłowani", "spinani", "spisani", "spiskowani", "spisywani", "spłacani", "spłaceni", "splądrowani", "splajtowani", "splamieni", "spłaszczeni", "splatani", "splątani", "spłatani", "spławiani", "spławieni", "spłodzeni", "spłoszeni", "spłukani", "spłukiwani", "spluwani", "spływani", "spoczywani", "spodziewani", "spojeni", "spolaryzowani", "spoliczkowani", "sponiewierani", "sponsorowani", "spopielani", "spopieleni", "spopularyzowani", "sportretowani", "sporządzani", "sporządzeni", "spostrzegani", "spotęgowani", "spotkani", "spotykani", "spoufalani", "spowalniani", "spowiadani", "spowodowani", "spowolnieni", "spoźnieni", "spóźnieni", "spożytkowani", "spożywani", "sprani", "sprasowani", "spraszani", "sprawdzeni", "sprawieni", "sprawowani", "sprecyzowani", "spreparowani", "sprężani", "sprężeni", "spróbowani", "sprofanowani", "sprofilowani", "sprostowani", "sproszkowani", "sproszeni", "sprowadzani", "sprowadzeni", "sprowokowani", "spryskani", "spryskiwani", "sprywatyzowani", "sprzątani", "sprzeczani", "sprzedani", "sprzedawani", "sprzeniewierzeni", "spudłowani", "spustoszeni", "spuszczani", "spuszczeni", "spychani", "ssani", "stabilizowani", "stacjonowani", "staczani", "staranowani", "starczani", "stargowani", "startowani", "stawiani", "stawieni", "stemplowani", "stenografowani", "stepowani", "sterowani", "sterroryzowani", "sterylizowani", "stłamszeni", "stłumieni", "stoczeni", "stołowani", "stonowani", "stopieni", "stopniowani", "storpedowani", "stosowani", "strącani", "straceni", "strąceni", "strajkowani", "straszeni", "stratowani", "strawieni", "streamowani", "stresowani", "streszczani", "streszczeni", "strofowani", "strojeni", "stroszeni", "strugani", "strymowani", "strząsani", "strzaskani", "strzeleni", "strzepani", "strzępieni", "strzepywani", "studiowani", "studzeni", "stukani", "stuleni", "stwardnieni", "stwarzani", "stwierdzani", "stwierdzeni", "stworzeni", "stykani", "stylizowani", "stymulowani", "sugerowani", "sumowani", "swatani", "swawoleni", "świadczeni", "świeceni", "święceni", "świerzbieni", "świętowani", "świntuszeni", "syceni", "sygnalizowani", "symulowani", "synchronizowani", "sypani", "szachrowani", "szacowani", "szafowani", "szamotani", "szanowani", "szargani", "szarpani", "szarżowani", "szasowani", "szastani", "szatkowani", "szczędzeni", "szczepieni", "szczerzeni", "szczyceni", "szczypani", "szczytowani", "szefowani", "szemrani", "szeptani", "szerzeni", "szkalowani", "szkicowani", "szkleni", "szkodzeni", "szkoleni", "szlachtowani", "szlifowani", "szmuglowani", "szokowani", "szorowani", "szpachlowani", "szpanowani", "szperani", "szprycowani", "szturchani", "szturmowani", "szufladkowani", "szuflowani", "szukani", "szulerowani", "szwankowani", "szydełkowani", "szydzeni", "szyfrowani", "szykanowani", "szykowani", "taktowani", "tamowani", "tankowani", "tapetowani", "taplani", "taranowani", "targani", "targowani", "tarmoszeni", "tarzani", "tasowani", "taszczeni", "tatuowani", "telefonowani", "telegrfowani", "teleportowani", "temperowani", "teoretyzowani", "tępieni", "terroryzowani", "testowani", "tkani", "tłamszeni", "tłoczeni", "tłumaczeni", "tłumieni", "toczeni", "tolerowani", "tonowani", "topieni", "torowani", "torturowani", "towarzyszeni", "trąbieni", "trącani", "traceni", "trąceni", "trafiani", "trafieni", "tragizowani", "traktowani", "transferowani", "transformowani", "transmitowani", "transportowani", "tratowani", "trawieni", "trenowani", "tresowani", "triumfowani", "tropieni", "troszczeni", "trwonieni", "trymowani", "tryskani", "tryumfowani", "trywializowani", "trzaskani", "trzepani", "trzepotani", "trzęsieni", "trzymani", "tuczeni", "tułani", "tuleni", "turlani", "tuszowani", "twistowani", "tworzeni", "tykani", "tyranizowani", "tyrani", "tytułowani", "uaktualniani", "uaktualnieni", "uaktywniani", "uaktywnieni", "uargumentowani", "uatrakcyjnieni", "ubabrani", "ubarwiani", "ubarwieni", "ubawieni", "ubezpieczani", "ubezpieczeni", "ubezwłasnowolnieni", "ubiczowani", "ubiegani", "ubierani", "ubijani", "ubłagani", "ubliżani", "ubliżeni", "ubolewani", "ubóstwiani", "ubrani", "ubroczeni", "ubrudzeni", "ucałowani", "ucharakteryzowani", "uchowani", "uchronieni", "uchwalani", "uchwaleni", "uchwyceni", "uchylani", "uchyleni", "ucieleśniani", "ucierani", "ucierpiani", "ucinani", "uciskani", "uciszani", "uciszeni", "uciułani", "ucywilizowani", "uczczeni", "uczepieni", "uczesani", "uczęszczani", "uczeni", "ucztowani", "uczynieni", "udani", "udaremnieni", "udawani", "udekorowani", "udeptywani", "uderzani", "uderzeni", "udobruchani", "udokumentowani", "udomawiani", "udomowieni", "udoskonalani", "udoskonaleni", "udostępniani", "udostępnieni", "udowadniani", "udowodnieni", "Udramatyzowani", "udręczeni", "udrożnieni", "udupieni", "uduszeni", "udzielani", "udzieleni", "ueiwarygodnieni", "ufani", "ufarbowani", "uformowani", "ufortyfikowani", "ufundowani", "ugadani", "uganiani", "ugaszani", "ugaszeni", "uginani", "ugłaskani", "ugniatani", "ugodzeni", "ugoszczeni", "ugotowani", "ugrani", "ugruntowani", "ugryzieni", "uhistoryzowani", "uhonorowani", "ujadani", "ujarzmiani", "ujarzmieni", "ujawniani", "ujawnieni", "ujeżdżani", "ujeżdżeni", "ujmowani", "ujrzani", "ukamieniowani", "ukarani", "ukartowani", "ukąszeni", "ukatrupieni", "ukazani", "ukazywani", "ukierowani", "ukierunkowani", "układani", "uklepani", "ukłonieni", "ukojeni", "ukołysani", "ukończeni", "ukonkretnieni", "ukoronowani", "ukradzieni", "ukręcani", "ukręceni", "ukrojeni", "ukrywani", "ukrzyżowani", "ukształtowani", "ułagodzeni", "ułaskawiani", "ułaskawieni", "ulatniani", "ułatwiani", "ułatwieni", "uleczani", "uleczeni", "ulegani", "ulepieni", "ulepszani", "ulepszeni", "ulokowani", "ulotnieni", "ułożeni", "umacniani", "umalowani", "umartwiani", "umawiani", "umazani", "umeblowani", "umiejscowieni", "umieszczani", "umieszczeni", "umilani", "umileni", "umniejszani", "umniejszeni", "umocnieni", "umocowani", "umoczeni", "umodelowani", "umorzeni", "umotywowani", "umówieni", "umożliwiani", "umożliwieni", "umrocznieni", "unaocznieni", "unicestwiani", "unicestwieni", "uniemożliwaini", "uniemożliwieni", "unierochomieni", "uniesieni", "unieszczęśliwiani", "unieszczęśliwieni", "unieszkodliwiani", "unieszkodliwieni", "unieważniani", "unieważnieni", "uniewinnieni", "uniezależnieni", "unikani", "unormowani", "unoszeni", "unowoczesniani", "unowocześniani", "uodpornieni", "uogólniani", "upakowani", "upalani", "upaleni", "upamiętniani", "upamiętnieni", "upaństwowieni", "upaprani", "upaskudzeni", "upchani", "upewniani", "upewnieni", "upgradowani", "upiększani", "upiększeni", "upierani", "upierdoleni", "upijani", "upilnowani", "upinani", "uplastycznieni", "upodabniani", "upodobnieni", "upojeni", "upokorzani", "upokorzeni", "upolowani", "upominani", "uporządkowani", "upowszechnieni", "upozorowani", "upozowani", "uprani", "uprasowani", "upraszczani", "uprawdopodobnieni", "uprawiani", "uproszczeni", "uproszeni", "uprowadzani", "uprowadzeni", "uprzątani", "uprzedeni", "uprzedzani", "uprzyjemniani", "uprzyjemnieni", "uprzykrzani", "uprzytomnieni", "upubliczniani", "upublicznieni", "upudrowani", "upuszczani", "upuszczeni", "upychani", "urabiani", "uraczani", "uradowani", "Urągani", "uratowani", "urażani", "urażeni", "uregulowani", "urobieni", "uronieni", "urozmaicani", "urozmaiceni", "uruchamiani", "uruchomieni", "urwani", "urywani", "urządzani", "urządzeni", "urzeczywistniani", "urzeczywistnieni", "usadowieni", "usadzeni", "usamowolnieni", "usankcjonowani", "usatyfakcjonowani", "uściskani", "uścisleni", "usidleni", "usiedzeni", "uskładani", "uskoczeni", "uskuteczniani", "uskutecznieni", "usłuchani", "usługiwani", "usłużeni", "usłyszani", "usmażeni", "uśmiani", "uśmiercani", "uśmierceni", "uśmierzeni", "uspani", "uśpieni", "uspokajani", "uspokojeni", "uspołeczniani", "usprawiedliwiani", "usprawiedliwieni", "usprawnieni", "usprzątani", "ustabilizowani", "ustalani", "ustaleni", "ustanawiani", "ustanowieni", "ustąpieni", "ustatkowani", "ustawiani", "ustawieni", "ustępowani", "ustosunkowani", "ustrojeni", "ustrzegani", "ustrzeleni", "ususzeni", "usuwani", "uświadamiani", "uświadczeni", "uświadomieni", "uświęceni", "uświnieni", "usychani", "usypani", "usypiani", "usystematyzowani", "usytuowani", "uszanowani", "uszczelniani", "uszczęśliwiani", "uszczęśliwieni", "uszczupleni", "uszkadzani", "uszkodzeni", "uszlachetniani", "uszlachetnieni", "usztywnieni", "uszykowani", "utajnieni", "utargowani", "utemperowani", "utkani", "utkwieni", "utoczeni", "utopieni", "utorowani", "utożsamiani", "utożsamieni", "utraceni", "utrąceni", "utrudniani", "utrudnieni", "utrwalani", "utrwaleni", "utrzymywani", "utuczeni", "utuleni", "utwierdzani", "utwierdzeni", "utworzeni", "utylizowani", "uwalniani", "uwaleni", "uwarunkowani", "uważani", "uwiązani", "uwiązywani", "uwidocznieni", "uwieczniani", "uwiecznieni", "uwielbiani", "uwielbieni", "uwieńczeni", "uwierani", "uwierzeni", "uwieszeni", "uwiezieni", "uwięzieni", "uwijani", "uwikłani", "uwłaczani", "uwłaszczeni", "uwodzeni", "uwolnieni", "uwsteczniani", "uwstecznieni", "uwydatniani", "uwypikleni", "uwzględniani", "uwzględnieni", "użądleni", "uzależniani", "uzależnieni", "uzasadniani", "uzasadnieni", "uzbierani", "uzbrajani", "uzbrojeni", "uzdrawiani", "uzdrowieni", "użerani", "uzewnętrzniani", "uzewnętrznieni", "uzgadniani", "uzgodnieni", "uziemieni", "uzmysłowieni", "uznani", "uznawani", "uzupełniani", "uzupełnieni", "uzurpowani", "użyczani", "użyczeni", "uzyskani", "uzyskiwani", "używani", "wabieni", "wąchani", "wachlowani", "wahani", "walczeni", "wałkowani", "waleni", "ważeni", "wbijani", "wcelowani", "wciągani", "wcielani", "wcieleni", "wcierani", "wcinani", "wciskani", "wczepieni", "wczołgani", "wczytani", "wczytywani", "wdani", "wdawani", "wdeptani", "wdetonowani", "wdmuchiwani", "wdrapani", "wdrapywani", "wdrażani", "wdrążeni", "wdrożeni", "wduszeni", "wdychani", "wdzierani", "wędkowani", "wentylowani", "wepchani", "werbowani", "weryfikowani", "wessani", "wetkani", "wezwani", "wgłębiani", "wgniatani", "wgniecieni", "wgrani", "wgryzani", "wgryzieni", "wiązani", "wibrowani", "widywani", "widziani", "wiedzeni", "wielbieni", "wierceni", "wierzgani", "wierzeni", "wieszani", "wietrzeni", "więżeni", "wikłani", "windowani", "winszowani", "wiosłowani", "wirowani", "witani", "wizualizowani", "wjeżdżani", "wkalkulowani", "wkładani", "wklejani", "wklejeni", "wklepani", "wkomponowani", "wkopani", "wkopywani", "wkraczani", "wkradani", "wkradzieni", "wkręcani", "wkręceni", "wkupieni", "wkurwiani", "wkuwani", "włączani", "włączeni", "władani", "władowani", "włamani", "włamywani", "wlani", "wlepiani", "wlepieni", "wlewani", "wliczani", "wliczeni", "włożeni", "wmanewrowani", "wmanipulowani", "wmawiani", "wmieszani", "wmówieni", "wmurowani", "wmuszeni", "wnerwiani", "wnerwieni", "wniesieni", "wnikani", "wnioskowani", "wnoszeni", "wodowani", "wojowani", "wołani", "woskowani", "wożeni", "wpajani", "wpakowani", "wparowani", "wpasowani", "wpatrywani", "wpędzani", "wpędzeni", "wperswadowani", "wpienieni", "wpisani", "wpisywani", "wpłacani", "wpłaceni", "wplatani", "wplątani", "wplątywani", "wpojeni", "wpompowani", "wpraszani", "wprawiani", "wproszeni", "wprowadzani", "wprowadzeni", "wpuszczeni", "wpychani", "wrabiani", "wręczani", "wrobieni", "wróżeni", "wrzucani", "wrzuceni", "wrzynani", "wsadzani", "wsadzeni", "wskazani", "wskazywani", "wskórani", "wskrzeszani", "wskrzeszeni", "wślizgiwani", "wsłuchani", "wspierani", "współodczuwani", "współtworzeni", "wspomagani", "wspominani", "wspomniani", "wstąpieni", "wstawiani", "wstawieni", "wstrząsani", "wstrzeleni", "wstrzykiwani", "wstrzymani", "wstrzymywani", "wstukani", "wsuwani", "wsypani", "wszamani", "wszczepiani", "wszczepieni", "wszczynani", "wtajemniczani", "wtajemniczeni", "wtapiani", "wtaszczeni", "wtłoczeni", "wtopieni", "wtrąceni", "wtryniani", "wtulani", "wtuleni", "wtykani", "wwaleni", "wwiercani", "wwierceni", "wwiezieni", "wwożeni", "wyartykułowani", "wyautowani", "wybaczani", "wybaczeni", "wybadani", "wybatożeni", "wybawieni", "wybebeszeni", "wybełkotani", "wybiczowani", "wybielani", "wybieleni", "wybierani", "wybijani", "wybłagani", "wybrandzlowani", "wybrani", "wybronieni", "wybrzydzani", "wybuchani", "wybudowani", "wybudzani", "wybudzeni", "wyburzani", "wyburzeni", "wycackani", "wycałowani", "wyceniani", "wycenieni", "wychlani", "wychłostani", "wychodowani", "wychowani", "wychowywani", "wychrobotani", "wychwalani", "wychwyceni", "wychylani", "wychyleni", "wyciągani", "wyciekani", "wycieniowani", "wycierani", "wycinani", "wyciskani", "wyciszani", "wyciszeni", "wycofani", "wyćwiczeni", "wycyckani", "wycyganieni", "wyczarowani", "wyczarterowani", "wyczekani", "wyczekiwani", "wyczerpani", "wyczesani", "wyczołgani", "wyczołgiwani", "wyczuwani", "wyczyniani", "wyczyszczeni", "wyczytani", "wyczytywani", "wydalani", "wydaleni", "wydani", "wydębieni", "wydedukowani", "wydelegowani", "wydepilowani", "wydeptywani", "wydłubani", "wydłubywani", "wydłużani", "wydłużeni", "wydmuchani", "wydmuchiwani", "wydobywani", "wydojeni", "wydoroślani", "wydostani", "wydrani", "wydrapani", "wydrapywani", "wydrążeni", "wydrukowani", "wydukani", "wyduszeni", "wydychani", "wydziedziczeni", "wydzielani", "wydzieleni", "wydzierani", "wydzierżawieni", "wydziobani", "wydziwiani", "wydzwaniani", "wyedukowani", "wyedytowani", "wyeeliminowani", "wyegzekwowani", "wyeksmitowani", "wyekspediowani", "wyeksploatowani", "wyeksponowani", "wyeksportowani", "wyeliminowani", "wyemigrowani", "wyemitowani", "wyewoluowani", "wygadani", "wygadywani", "wyganiani", "wygarbowani", "wygarniani", "wygasani", "wygaszani", "wygaszeni", "wygenerowani", "wyginani", "wygładzani", "wygładzeni", "wygłaszani", "wygłodzeni", "wygłosowani", "wygłoszeni", "wygłówkowani", "wygnani", "wygoleni", "wygonieni", "wygooglowani", "wygospodarowani", "wygotowani", "wygrani", "wygrawerowani", "wygrażani", "wygrywani", "wygryzieni", "wygrzani", "wygrzebani", "wygrzebywani", "wygrzewani", "wygubieni", "wyhaczeni", "wyhaftowani", "wyhamowani", "wyhodowani", "wyizolowani", "wyjadani", "wyjaśniani", "wyjaśnieni", "wyjawiani", "wyjawieni", "wyjedzeni", "wyjmowani", "wykadrowani", "wykalibrowani", "wykalkulowani", "wykańczani", "wykantowani", "wykąpani", "wykaraskani", "wykarczowani", "wykarmiani", "wykasowani", "wykastrowani", "wykazani", "wykazywani", "wykierowani", "wykitowani", "wykiwani", "wykładani", "wyklarowani", "wyklepani", "wyklinani", "wykłócani", "wykluczani", "wykluczeni", "wykminieni", "wykolejeni", "wykołowani", "wykombinowani", "wykonani", "wykończeni", "wykonywani", "wykopani", "wykopywani", "wykorkowani", "wykorzeniani", "wykorzenieni", "wykorzystani", "wykorzystywani", "wykoszeni", "wykradani", "wykręcani", "wykręceni", "wykreowani", "wykreślani", "wykreśleni", "wykrochmaleni", "wykrojeni", "wykrwawiani", "wykrwawieni", "wykrywani", "wykrzesani", "wykrztuszeni", "wykrzyczeni", "wykrzykiwani", "wykrzywiani", "wykształceni", "wyksztuszeni", "wykupieni", "wykupywani", "wykuwani", "wyłączani", "wyłączeni", "wylądowani", "wyładowani", "wyładowywani", "wyłajani", "wyłamani", "wyłamywani", "wyłaniani", "wylansowani", "wylani", "wyłapani", "wyłapywani", "wyławiani", "wyleasingowani", "wyleczeni", "wylęgani", "wylegimytowani", "wylewani", "wyłgani", "wylicytowani", "wyliczani", "wyliczeni", "wylizani", "wylizywani", "wylogowani", "wyłonieni", "wylosowani", "wyłowieni", "wyłożeni", "wyłudzani", "wyłudzeni", "wyłupani", "wyłuskani", "wyłuskiwani", "wyłuszczeni", "wyluzowani", "wymacani", "wymachiwani", "wymagani", "wymahiwani", "wymalowani", "wymamrotani", "wymanewrowani", "wymarzeni", "wymasowani", "wymawiani", "wymazani", "wymazywani", "wymeldowani", "wymeldowywani", "wymiatani", "wymiecieni", "wymieniani", "wymienieni", "wymierzani", "wymieszani", "wymigani", "wymigiwani", "wymijani", "wymoczeni", "wymodelowani", "wymontowani", "wymordowani", "wymuszani", "wymyślani", "wymyśleni", "wynagradzani", "wynagrodzeni", "wynajdowani", "wynajdywani", "wynajmowani", "wynalezieni", "wynarodowieni", "wynegocjowani", "wyniesieni", "wyniszczani", "wyniszczeni", "wyniuchani", "wynoszeni", "wynurzani", "wyobrażani", "wyobrażeni", "wyodrębnieni", "wyolbrzymiani", "wyolbrzymieni", "wyorbowani", "wyosiowani", "wyostrzani", "wyostrzeni", "wypaczani", "wypakowani", "wypakowywani", "wypalani", "wypaleni", "wypałowani", "wyparowani", "wypasani", "wypastowani", "wypatroszeni", "wypatrywani", "wypatrzeni", "wypchani", "wypędzani", "wypędzlowani", "wypełniani", "wypełnieni", "wypersfadowani", "wyperswadowani", "wypierani", "wypijani", "wypinani", "wypisani", "wypisywani", "wypłacani", "wypłaceni", "wypłakani", "wypłakiwani", "wypłaszczeni", "wyplatani", "wyplątani", "wyplenieni", "wyplewieni", "wypłoszeni", "wypłukani", "wypłukiwani", "wypluwani", "wypoceni", "wypolerowani", "wypominani", "wypomniani", "wypompowani", "wypompowywani", "wyposażeni", "wypowiadani", "wypowiedziani", "wypoziomowani", "wypożyczani", "wypracowani", "wypracowywani", "wyprani", "wyprasowani", "wypraszani", "wyprawiani", "wyprawieni", "wypróbowani", "wyprodukowani", "wyprojektowani", "wypromieniowani", "wypromowani", "wyprostowani", "wyprostowywani", "wyproszeni", "wyprowadzani", "wyprowadzeni", "wypróżniani", "wypróżnieni", "wypruwani", "wyprzedani", "wyprzedawani", "wyprzedzani", "wyprzedzeni", "wyprzęgani", "wypstrykani", "wypucowani", "wypuszczani", "wypuszczeni", "wypychani", "wypytani", "wypytywani", "wyrąbani", "wyrabiani", "wyrąbywani", "wyratowani", "wyrażani", "wyrażeni", "wyrecytowani", "wyręczani", "wyręczeni", "wyregulowani", "wyrejestrowani", "wyremontowani", "wyreżyserowani", "wyrobieni", "wyrolowani", "wyrównani", "wyrównywani", "wyróżniani", "wyróżnieni", "wyrugowani", "wyruszani", "wyrwani", "wyrypani", "wyrysowani", "wyrywani", "wyrządzeni", "wyrzeźbieni", "wyrzucani", "wyrzuceni", "wyrzygani", "wyrzynani", "wyrzywani", "wysączeni", "wysadzani", "wysadzeni", "wyściskani", "wyselekcjonowani", "wysępieni", "wysiadywani", "wysiedzeni", "wysilani", "wysileni", "wyskakiwani", "wyskalowani", "wyskoczeni", "wyskrobani", "wyskubywani", "wysłani", "wyśledzeni", "wyślizgiwani", "wysłowieni", "wysłuchani", "wysłuchiwani", "wysmagani", "wysmarkani", "wysmarowani", "wysmażani", "wysmażeni", "wyśmiani", "wyśmiewani", "wysmołowani", "wysmyrani", "wyśnieni", "wysnuwani", "wysondowani", "wyspecjalizowani", "wyśpiewani", "wyśpiewywani", "wyspowiadani", "wysprzątani", "wysprzedani", "wyssani", "wystartowani", "wystawieni", "wysterelizowani", "wysterylizowani", "wystosowani", "wystosowywani", "wystraszeni", "wystrojeni", "wystrugani", "wystrzegani", "wystrzelani", "wystrzeliwani", "wystrzeleni", "wystudzeni", "wystukani", "wystukiwani", "wysuszani", "wysuwani", "wyswatani", "wyświadczani", "wyświadczeni", "wyświetlani", "wyświetleni", "wyswobodzeni", "wysyłani", "wysypani", "wysypywani", "wysysani", "wyszabrowani", "wyszalani", "wyszarpani", "wyszasowani", "wyszczotkowani", "wyszczupleni", "wyszeptani", "wyszkoleni", "wyszlifowani", "wyszorowani", "wyszperani", "wyszukani", "wyszukiwani", "wyszumieni", "wyszykowani", "wytapetowani", "wytargani", "wytargowani", "wytarzani", "wytaszczeni", "wytatuowani", "wytępieni", "wytłoczeni", "wytłumaczeni", "wytłumieni", "wytoczeni", "wytrąbieni", "wytrącani", "wytrąceni", "wytransmitowani", "wytransportowani", "wytrenowani", "wytresowani", "wytriangulowani", "wytropieni", "wytrząsani", "wytrzebieni", "wytrzepani", "wytrzeszczani", "wytrzeźwiani", "wytrzymani", "wytrzymywani", "wytwarzani", "wytworzeni", "wytyczeni", "wytykani", "wytypowani", "wyuczeni", "wywabiani", "wywabieni", "wywąchani", "wywalani", "wywalczeni", "wywaleni", "wywarzani", "wyważani", "wyważeni", "wywęszani", "wywężykowani", "wywiani", "wywiązani", "wywiązywani", "wywierani", "wywierceni", "wywieszani", "wywieszeni", "wywietrzeni", "wywiezieni", "wywijani", "wywindowani", "wywłaszczeni", "wywlekani", "wywnętrznieni", "wywnioskowani", "wywodzeni", "wywolani", "wywoływani", "wywoskowani", "wywożeni", "wywracani", "wywróceni", "wywróżeni", "wywyższani", "wyżaleni", "wyzdrowieni", "wyżebrani", "wyżerani", "wyzerowani", "wyznaczani", "wyznaczeni", "wyznani", "wyznawani", "wyzwalani", "wyzwani", "wyzwoleni", "wyzygzakowani", "wyżynani", "wyzyskani", "wyzyskiwani", "wyzywani", "wyżywani", "wyżywieni", "wzbijani", "wzbogacani", "wzbogaceni", "wzbraniani", "wzbudzani", "wzbudzeni", "wzburzani", "wzburzeni", "wżenieni", "wzmacnieni", "wzmagani", "wzmocnieni", "wznawiani", "wzniecani", "wzniecieni", "wznoszeni", "wznowieni", "wzorowani", "wzruszeni", "wzwyżani", "wzywani", "zaabordowani", "zaadaptowani", "zaadoptowani", "zaadresowani", "zaakcentowani", "zaakceptowani", "zaaklimatyzowani", "zaalarmowani", "zaanektowani", "zaangażowani", "zaanonsowani", "zaapelowani", "zaaplikowani", "zaaportowani", "zaaprobowani", "zaaranżowani", "zaaresztowani", "zaatakowani", "zabaczeni", "zabalowani", "zabandażowani", "zabarwieni", "zabarykadowani", "zabawiani", "zabawieni", "zabepieczani", "zabetonowani", "zabezpieczeni", "zabierani", "zabłądzeni", "zablefowani", "zabłoceni", "zablokowani", "zabraniani", "zabrani", "zabronieni", "zabrudzeni", "zabudowani", "zabukowani", "zabuleni", "zaburzeni", "zabutelkowani", "zacementowani", "zacerowani", "zachciani", "zachęcani", "zachęceni", "zachlapani", "zachodzeni", "zachomikowani", "zachorowani", "zachowani", "zachowywani", "zachwalani", "zachwaleni", "zachwiani", "zachwyceni", "zaciągani", "zaciążeni", "zaciekawieni", "zaciemniani", "zaciemnieni", "zacierani", "zacieśnieni", "zacinani", "zaciskani", "zaćmieni", "zacumowani", "zacytowani", "zaczadzeni", "zaczarowani", "zaczepiani", "zaczepieni", "zaczerpani", "zaczesani", "zaczołgani", "zaczynani", "zadawalani", "zadawani", "zadbani", "zadebiutowani", "zadedykowani", "zadeklamowani", "zadeklarowani", "zademonstrowani", "zadenucjowani", "zadepeszowani", "zadeptani", "zadeptywani", "zadławieni", "żądleni", "zadłużani", "zadłużeni", "zadokowani", "zadomowieni", "zadowalani", "zadrapani", "zadręczani", "zadręczeni", "zadrutowani", "zadurzani", "zadurzeni", "zaduszeni", "zadymieni", "zadźgani", "zadziobani", "zadziwiani", "zadziwieni", "zafakturowani", "zafałszowani", "zafarbowani", "zafiksowani", "zafundowani", "zagadani", "zagadywani", "zagajeni", "zaganiani", "zagapieni", "zagarażowani", "zagarniani", "zagaszeni", "zagazowani", "zagęszczeni", "zaginani", "zagłębiani", "zagłębieni", "zagłodzeni", "zagłuszani", "zagłuszeni", "zagmatwani", "zagnani", "zagnieżdżeni", "zagojeni", "zagonieni", "zagospodarowani", "zagotowani", "zagrabieni", "zagradzani", "zagrażani", "zagrodzeni", "zagrywani", "zagryzani", "zagryzieni", "zagrzani", "zagrzebani", "zagrzewani", "zagubieni", "zagwarantowani", "zahaczeni", "zahamowani", "zahandlowani", "zaharowani", "zahartowani", "zahipnotyzowani", "zaholowani", "zaimitowani", "zaimplantowani", "zaimplementowani", "zaimprowizowani", "zainaugurowani", "zainfekowani", "zainicjowani", "zainkasowani", "zainscenizowani", "zainspirowani", "zainstalowani", "zainteresowani", "zaintrygowani", "zaintubowani", "zainwestowani", "zaizolowani", "zajadani", "zajani", "zajarani", "zajechani", "zajmowani", "zakablowani", "zakamuflowani", "zakasani", "zakasowani", "zakąszani", "zakatalogowani", "zakatowani", "zakatrupieni", "zakazani", "zakażani", "zakazywani", "zakiszeni", "zakładani", "zaklasyfikowani", "zaklejani", "zaklejeni", "zaklepani", "zaklepywani", "zaklinani", "zaklinowani", "zakłócani", "zakłóceni", "zaklopotani", "zakneblowani", "zakodowani", "zakolczykowani", "zakolorowani", "zakołysani", "zakomunikowani", "zakończeni", "zakonserwowani", "zakopani", "zakopywani", "zakorzeniani", "zakorzenieni", "zakoszeni", "zakosztowani", "zakotwiczani", "zakotwiczeni", "zakpieni", "zakradani", "zakręcani", "zakręceni", "zakreślani", "zakreśleni", "zakrwawieni", "zakrywani", "zakrzyczani", "zakrzywiani", "zakrzywieni", "zaksięgowani", "zaktualizowani", "zaktywizowani", "zaktywowani", "zakumani", "zakupieni", "zakurzeni", "zakuwani", "zakwaterowani", "załączeni", "załadowani", "załagodzeni", "zalamani", "zalaminowani", "załamywani", "zalani", "załapani", "załatani", "załatwiani", "załatwieni", "zalatywani", "zalecani", "zaleceni", "zaleczeni", "zalegalizowani", "zalegani", "zalepiani", "zalepieni", "zalewani", "zaliczani", "zaliczeni", "załkani", "zalogowani", "żałowani", "założeni", "zaludnieni", "zamacani", "zamąceni", "zamalowani", "zamanewrowani", "zamanifestowani", "zamarkowani", "zamartwiani", "zamarynowani", "zamarzani", "zamaskowani", "zamawiani", "zamazani", "zamazywani", "zamęczani", "zamęczeni", "zameldowani", "zamelinowani", "zamerykanizowani", "zamiatani", "zamieniani", "zamienieni", "zamieszani", "zamieszczani", "zamieszczeni", "zamieszkani", "zamieszkiwani", "zaminowani", "zamocowani", "zamoczeni", "zamontowani", "zamordowani", "zamortyzowani", "zamotani", "zamówieni", "zamrażani", "zamroczeni", "zamrożeni", "zamulani", "zamurowani", "zamydleni", "zamykani", "zanalizowani", "zanegowani", "zaniechani", "zanieczyszczani", "zanieczyszczeni", "zaniedbani", "zaniedbywani", "zaniepokojeni", "zaniesieni", "zanihilowani", "zanikani", "zaniżani", "zaniżeni", "zanoszeni", "zanotowani", "zanuceni", "zanudzani", "zanudzeni", "zanurzani", "zanurzeni", "zanużeni", "zaobaczeni", "zaobserwowani", "zaoferowani", "zaofiarowani", "zaogniani", "zaognieni", "zaokrąglani", "zaokrągleni", "zaokrętowani", "zaopatrywani", "zaopatrzeni", "zaopiekowani", "zaorani", "zaostrzani", "zaostrzeni", "zaoszczędzeni", "zapadani", "zapakowani", "zapalani", "zapaleni", "zapamiętani", "zapamiętywani", "zapanowani", "zaparkowani", "zaparowywani", "zaparzani", "zaparzeni", "zapaskudzeni", "zapauzowani", "zapchani", "zapędzani", "zapełniani", "zapełnieni", "zaperfumowani", "zapeszani", "zapewniani", "zapewnieni", "zapieczętowani", "zapierani", "zapijani", "zapinani", "zapisani", "zapisuwani", "zapłaceni", "zapładniani", "zaplamieni", "zaplanowani", "zaplątani", "zapłodnieni", "zaplombowani", "zapobiegani", "zapodani", "zapodawani", "zapodziani", "zapokojeni", "zapolowani", "zapominani", "zapomniani", "zapowiadani", "zapowiedziani", "zapoznani", "zapoznawani", "zapożyczeni", "zapracowywani", "zaprani", "zaprasowywani", "zapraszani", "zaprawieni", "zaprenumerowani", "zaprezentowani", "Zaprogramowani", "zaprojektowani", "zaproponowani", "zaproszeni", "zaprotokołowani", "zaprowadzani", "zaprowadzeni", "zaprzątani", "zaprzeczani", "zaprzeczeni", "zaprzedani", "zaprzedawani", "zaprzęgani", "zaprzepaszczani", "zaprzestani", "zaprzestawani", "zaprzyjaźnieni", "zapudłowani", "zapunktowani", "zapuszczani", "zapuszczeni", "zapuszkowani", "zapychani", "zapylani", "zapyleni", "zapytani", "zarabiani", "zaranżowani", "zarażani", "zarażeni", "zarecytowani", "zaręczani", "zaręczeni", "zarejestrowani", "zareklamowani", "zarekomendowani", "zarekomondowani", "zarekwirowani", "zarezerwowani", "zarobieni", "żartowani", "zarwani", "zaryglowani", "zarymowani", "zarysowani", "zarywani", "zaryzykowani", "zarządzani", "zarzucani", "zarzynani", "zasadzeni", "zaścieleni", "zasegurowani", "zaserwowani", "zasiadani", "zasiani", "zasiedleni", "zasięgani", "zasiewani", "zasilani", "zasileni", "zaskakiwani", "zaskarbieni", "zaskoczeni", "zaskrobani", "zasłaniani", "zaślepiani", "zaślepieni", "zasłodzeni", "zasłonieni", "zasłużeni", "zasmakowani", "zaśmiecani", "zaśmieceni", "zasmradzani", "zasmrodzeni", "zasmucani", "zasmuceni", "zasoleni", "zaspakajani", "zaśpiewani", "zaspokajani", "zaspokojeni", "zasponsorowani", "zaśrubowywani", "zassani", "zastani", "zastąpieni", "zastawiani", "zastawieni", "zastępowani", "zastopowani", "zastosowani", "zastraszani", "zastraszeni", "zastrzeleni", "zasugerowani", "zasuwani", "zaświadczeni", "zaświeceni", "zaświonieni", "zasyfieni", "zasygnalizowani", "zasymilowani", "zasymulowani", "zasypani", "zasypywani", "zasysani", "zaszachowani", "zaszantażowani", "zaszargani", "zaszczepiani", "zaszczepieni", "zaszczycani", "zaszczyceni", "zaszeptani", "zaszeregowani", "zaszlachtowani", "zasznurowani", "zaszpachlowani", "zasztyletowani", "zaszufladkowani", "zaszyfrowani", "zaszywani", "zataczani", "zatajani", "zatajeni", "zatamowani", "zatankowani", "zatapiani", "zatargani", "zatelegrafowani", "zatemperowani", "zatęsknieni", "zatkani", "zatoczeni", "zatopieni", "zatracani", "zatraceni", "zatriumfowani", "zatrudniani", "zatrudnieni", "zatruwani", "zatrzaskiwani", "zatrzymani", "zatrzymywani", "zatuszowani", "zatwierdzani", "zatwierdzeni", "zatykani", "zatynkowani", "zatytułowani", "zauploadowani", "zauroczeni", "zautomatyzowani", "zauważani", "zauważeni", "zawadzani", "zawalani", "zawalczeni", "zawaleni", "zaważeni", "zawdzięczani", "zawetowani", "zawężeni", "zawiadamiani", "zawiadomieni", "zawiązani", "zawiązywani", "zawiedzeni", "zawierani", "zawierzeni", "zawieszani", "zawieszeni", "zawiezieni", "zawijani", "zawinieni", "zawitani", "zawłaszczeni", "zawodzeni", "zawojowani", "zawołani", "zawoskowani", "zawożeni", "zawracani", "zawróceni", "zawstydzani", "zażądani", "zażartowani", "zazdroszczeni", "zażegnani", "zażenowani", "zaznaczani", "zaznajomieni", "zaznani", "zaznawani", "zażyczeni", "zażywani", "zbaczani", "zbadani", "zbagatelizowani", "zbajerowani", "zbałamuceni", "zbalansowani", "zbalsamowani", "zbankrutowani", "zbawiani", "zbawieni", "zbesztani", "zbezczeszczeni", "zbierani", "zbijani", "zbliżeni", "zbluzgani", "zbojkotowani", "zbrojeni", "zbrukani", "zbszczeceni", "zbudowani", "zbudzeni", "zbuntowani", "zburzeni", "zbywani", "zchwytani", "zciszeni", "zdani", "zdeaktywowani", "zdecydowani", "zdefiniowani", "zdeflorowani", "zdegradowani", "zdejmowani", "zdeklarowani", "zdekodowani", "zdekompresowani", "zdekoncentrowani", "zdekonstruowani", "zdelegalizowani", "zdemaskowani", "zdementowani", "zdemolowani", "zdemontowani", "zdemoralizowani", "zdenerwowani", "zdeponowani", "zdeprymowani", "zdeptani", "zderzani", "zderzeni", "zdestabilizowani", "Zdetonowani", "zdetronizowani", "zdewastowani", "zdewaulowani", "zdezerterowani", "zdezintegrowani", "zdezorientowani", "zdezynfektowani", "zdiagnozowani", "zdławieni", "zdmuchiwani", "zdobywani", "zdołowani", "zdominowani", "zdopingowani", "zdrabniani", "zdradzani", "zdradzeni", "zdrapani", "zdrapywani", "zdrutowani", "zdruzgotani", "zduplikowani", "zduszeni", "zdwojeni", "zdyscyplinowani", "zdyskredytowani", "zdyskwalifikowani", "zdystansowani", "zdzieleni", "zdzierani", "zdzierżeni", "zdziesiątkowani", "zdzwonieni", "zebrani", "zechciani", "zedytowani", "żegnani", "żenieni", "żerowani", "zerwani", "zeskakiwani", "zeskanowani", "zeskrobywani", "zesłani", "ześlizgiwani", "zesmoleni", "zespawiani", "zespoleni", "zessani", "zestawiani", "zestawieni", "zestresowani", "zestrzeliwani", "zestrzeleni", "zeswatani", "zeszkleni", "zeszlifowani", "zezłoszczeni", "zeznani", "zeznawani", "zezwalani", "zezwoleni", "zfinansowani", "zgadani", "zgadywani", "zgajani", "zganieni", "zgaszeni", "zginani", "zgładzeni", "zgłaszani", "zgłębiani", "zgłębieni", "zgłośnieni", "zgłoszeni", "zgłuszeni", "zgniatani", "zgniecieni", "zgnojeni", "zgodzeni", "zgoleni", "zgonieni", "zgotowani", "zgrabieni", "zgrillowani", "zgromadzani", "zgromadzeni", "zgrupowani", "zgrzeszeni", "zgrzytani", "zgubieni", "zgwałceni", "zhackowani", "zhakowani", "zhańbieni", "zhandlowani", "zharmonizowani", "zidentyfikowani", "ziewani", "zignorowani", "zilustrowani", "zinfiltrowani", "zintegrowani", "zintensyfikowani", "zinterpretowani", "zinwentaryzowani", "zirytowani", "zjadani", "zjawiani", "zjednani", "zjednoczeni", "zjedzeni", "zjeżdżeni", "zkontaktowani", "zkserowani", "złączeni", "złagodzeni", "złajani", "złamani", "zlani", "złapani", "zlecani", "zleceni", "zlekceważeni", "zlepiani", "zlepieni", "zlewani", "zlicytowani", "zliczani", "zliczeni", "zlikwidowani", "zlinczowani", "zlitowani", "zlizani", "zlizywani", "zlokalizowani", "złomowani", "żłopani", "złowieni", "złożeni", "złupieni", "złuszczani", "zluzowani", "zmacani", "zmąceni", "zmagani", "zmagazynowani", "zmajstrowani", "zmaksylizowani", "zmanipulowani", "zmarnowani", "zmartwychwstani", "zmasakrowani", "zmaterializowani", "zmawiani", "zmazani", "zmazywani", "zmbobardowani", "zmiatani", "zmiażdżeni", "zmiękczeni", "zmieleni", "zmieniani", "zmienieni", "zmierzani", "zmierzeni", "zmierzwieni", "zmieszani", "zmieszczeni", "zmiksowani", "zminiaturyzowani", "zminimalizowani", "zmniejszani", "zmniejszeni", "zmobilizowani", "zmoczeni", "zmodernizowani", "zmodyfikowani", "zmonopolizowani", "zmontowani", "zmostkowani", "zmotywowani", "zmówieni", "zmrożeni", "zmrużeni", "zmumifikowani", "zmuszani", "zmuszeni", "zmutowani", "zmyślani", "zmywani", "znacjonalizowani", "znajdowani", "znajdywani", "znakowani", "znalezieni", "znani", "znęcani", "zneutralizowani", "zniechęceni", "znieczuleni", "zniekształcani", "zniekształceni", "znienawidzeni", "znieprawieni", "zniesieni", "zniesławiani", "zniesławieni", "zniewalani", "znieważani", "znieważeni", "zniewoleni", "zniszczeni", "zniweczeni", "zniwelowani", "zniżani", "zniżeni", "znokautowani", "znormalnieni", "znoszeni", "znudzeni", "zobaczeni", "zobowiązani", "zobrazowani", "zogniskowani", "żonglowani", "zoomowani", "zoperowani", "zoptymalizowani", "zorganizowani", "zorientowani", "zostawiani", "zostawieni", "zpłaceni", "zprowokowani", "zrabowani", "zrachowani", "zracjonalizowani", "zranieni", "zraportowani", "zrażani", "zrażeni", "zrealizowani", "zrecenzowani", "zredagowani", "zredukowani", "zreferowani", "zreformowani", "zrefowani", "zrefundowani", "zregenerowani", "zrehabilitowani", "zreinkarnowani", "zreintegrowani", "zrekonfigurowani", "zrekonstruowani", "zrekrutowani", "zrekrystalizowani", "zrelacjonowani", "zrelaksowani", "zremiksowani", "zremisowani", "zreorganizowani", "zreperowani", "zreplikowani", "zresetowani", "zresocjalizowani", "zrestartowani", "zrestrukturyzowani", "zrewanżowani", "zrewidowani", "zrewolucjenizowani", "zrezygnowani", "zrobieni", "zrolowani", "zroszeni", "zrównani", "zrównoważeni", "zrównywani", "zróżnicowani", "zrozumiani", "zrugani", "zruinowani", "zrujnowani", "zrymowani", "zrywani", "zrzędzeni", "zrzeszeni", "zrzucani", "zrzuceni", "zsumowani", "zsuwani", "zsynchronizowani", "zsyntetyzowani", "zsypywani", "zszargani", "zszokowani", "zszywani", "zutylizowani", "zużywani", "zwabiani", "zwabieni", "zwalani", "zwalczeni", "zwalniani", "zwaleni", "zwani", "zwaporyzowani", "zwątpieni", "zważani", "zważeni", "zwędzeni", "zwerbalizowani", "zwerbowani", "zweryfikowani", "zwęszeni", "zwężeni", "zwiastowani", "związani", "związywani", "zwiedzani", "zwiedzeni", "zwiększeni", "zwieńczeni", "zwierzani", "zwieszani", "zwieszeni", "zwietrzeni", "zwijani", "zwilżeni", "zwizualizowani", "zwlekani", "zwodowani", "zwodzeni", "zwołani", "zwolnieni", "zwoływani", "zwożeni", "zwracani", "zwróceni", "zwyciężani", "zwymiotowani", "życzeni", "żygani", "zygzakowani", "zyskani", "zyskiwani", "zżerani", "zżynani", "konsakrowany", "konsakrowana", "konsakrowane", "konsakrowani"];
};
Object.defineProperty(Dv, "__esModule", {
  value: !0
});
Dv.default = function() {
  return {
    regularParticiples: (0, Et.memoize)(fVe),
    irregularParticiples: (0, Et.memoize)(yVe)
  };
};
var Et = I, UHe = Bv, HHe = zr(UHe), VHe = Nv, KHe = zr(VHe), GHe = Uv, YHe = zr(GHe), ZHe = Hv, XHe = zr(ZHe), JHe = Vv, QHe = zr(JHe), aVe = Kv, eVe = zr(aVe), tVe = Gv, iVe = zr(tVe);
function zr(a) {
  return a && a.__esModule ? a : { default: a };
}
const nVe = (0, HHe.default)(), Yv = (0, KHe.default)(), rVe = Yv.irregularsRegular, sVe = Yv.irregularsIrregular, oVe = Yv.irregularsEndingInS, dVe = (0, YHe.default)(), lVe = (0, XHe.default)(), cVe = (0, QHe.default)(), uVe = (0, eVe.default)(), pVe = /^(ge|be|ont|ver|her|er)\S+(d|t)($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>])/ig, mVe = /^(aan|af|bij|binnen|los|mee|na|neer|om|onder|samen|terug|tegen|toe|uit|vast)(ge)\S+(d|t|n)($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>])/ig, gVe = (0, iVe.default)(), gT = {
  en: {
    regularParticiplesRegex: /\w+ed($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>])/ig
  },
  fr: {
    regularParticiplesRegex: /\S+(é|ée|és|ées)($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>])/ig
  },
  nl: {
    regularParticipleRegexPattern1: pVe,
    regularParticipleRegexPattern2: mVe
  }
}, zVe = ["es", "it", "pl", "pt"], fVe = function(e, t) {
  if (zVe.includes(t))
    return [];
  let i = [];
  return Object.keys(gT[t]).forEach(function(n) {
    const r = e.match(gT[t][n]);
    r !== null && i.push(r);
  }), i = (0, Et.flattenDeep)(i), i;
}, zT = function(e, t, i) {
  const n = [];
  return (0, Et.forEach)(t, function(r) {
    const s = new RegExp("^" + r + i + "?$", "ig"), o = e.match(s);
    o && n.push(o[0]);
  }), n;
}, yVe = function(e, t) {
  let i = [];
  switch (t) {
    case "fr":
      i = i.concat(zT(e, rVe, "(e|s|es)")), i = i.concat(zT(e, oVe, "(e|es)")), (0, Et.find)(sVe, function(n) {
        n === e && i.push(n);
      });
      break;
    case "es":
      (0, Et.includes)(dVe, e) && i.push(e);
      break;
    case "it":
      (0, Et.includes)(cVe, e) && i.push(e);
      break;
    case "nl":
      (0, Et.includes)(uVe, e) && i.push(e);
      break;
    case "pl":
      (0, Et.includes)(gVe, e) && i.push(e);
      break;
    case "pt":
      (0, Et.includes)(lVe, e) && i.push(e);
      break;
    case "en":
    default:
      (0, Et.find)(nVe, function(n) {
        n === e && i.push(n);
      });
      break;
  }
  return i;
};
var Zv = {}, $t = {}, qd = {};
Object.defineProperty(qd, "__esModule", {
  value: !0
});
var Xv = function(e) {
  return Array.isArray(e) ? "array" : typeof e;
}, K4 = function(e, t) {
  var i = Xv(e);
  return i === t;
};
qd.getType = Xv;
qd.isSameType = K4;
qd.default = {
  getType: Xv,
  isSameType: K4
};
Object.defineProperty($t, "__esModule", {
  value: !0
});
var Jv = I, co = qd, G4 = {
  auxiliaries: [],
  type: "",
  language: ""
}, wVe = function(e) {
  (0, Jv.forEach)(e, function(t, i) {
    var n = (0, co.getType)(G4[i]);
    if ((0, co.isSameType)(t, n) === !1)
      throw Error("Attribute " + i + " has invalid type. Expected " + n + ", got " + (0, co.getType)(t) + ".");
  });
}, lt = function(e, t, i) {
  this.setParticiple(e), this.setSentencePart(t), this._determinesSentencePartIsPassive = !1, i = i || {}, (0, Jv.defaults)(i, G4), wVe(i), this._attributes = i;
};
lt.prototype.setParticiple = function(a) {
  if (a === "")
    throw Error("The participle should not be empty.");
  if (!(0, Jv.isString)(a))
    throw Error("The participle should be a string.");
  this._participle = a;
};
lt.prototype.getParticiple = function() {
  return this._participle;
};
lt.prototype.setSentencePart = function(a) {
  if (a === "")
    throw Error("The sentence part should not be empty.");
  this._sentencePart = a;
};
lt.prototype.getSentencePart = function() {
  return this._sentencePart;
};
lt.prototype.getType = function() {
  return this._attributes.type;
};
lt.prototype.getAuxiliaries = function() {
  return this._attributes.auxiliaries;
};
lt.prototype.getLanguage = function() {
  return this._attributes.language;
};
lt.prototype.determinesSentencePartIsPassive = function() {
  return this._determinesSentencePartIsPassive;
};
lt.prototype.setSentencePartPassiveness = function(a) {
  if (!(0, co.isSameType)(a, "boolean"))
    throw Error("Passiveness had invalid type. Expected boolean, got " + (0, co.getType)(a) + ".");
  this._determinesSentencePartIsPassive = a;
};
lt.prototype.serialize = function() {
  return {
    _parseClass: "Participle",
    attributes: this._attributes,
    participle: this._participle,
    sentencePart: this._sentencePart,
    determinesSentencePartIsPassive: this._determinesSentencePartIsPassive
  };
};
lt.parse = function(a) {
  const e = new lt(a.participle, a.sentencePart, a.attributes);
  return e.setSentencePartPassiveness(a.determinesSentencePartIsPassive), e;
};
$t.default = lt;
var di = {};
Object.defineProperty(di, "__esModule", {
  value: !0
});
di.default = function() {
  if ((0, hVe.isEmpty)(this.getParticiple())) {
    this.setSentencePartPassiveness(!1);
    return;
  }
  this.setSentencePartPassiveness(this.isPassive());
};
var hVe = I, Qv = {};
Object.defineProperty(Qv, "__esModule", {
  value: !0
});
Qv.default = function() {
  return ["ablebodied", "abovementioned", "absentminded", "accoladed", "accompanied", "acculturized", "accursed", "acerated", "acerbated", "acetylized", "achromatised", "achromatized", "acidified", "acned", "actualised", "adrenalised", "adulated", "adversed", "aestheticised", "affectioned", "affined", "affricated", "aforementioned", "agerelated", "aggrieved", "airbed", "aircooled", "airspeed", "alcoholized", "alcoved", "alkalised", "allianced", "aluminized", "alveolated", "ambered", "ammonified", "amplified", "anagrammatised", "anagrammatized", "anathematised", "aniseed", "ankled", "annoyed", "annualized", "anonymised", "anthologized", "antlered", "anucleated", "anviled", "anvilshaped", "apostrophised", "apostrophized", "appliqued", "apprized", "arbitrated", "armored", "articled", "ashamed", "assented", "atomised", "atrophied", "auricled", "auriculated", "aurified", "autopsied", "axled", "babied", "backhoed", "badmannered", "badtempered", "balustered", "baned", "barcoded", "bareboned", "barefooted", "barelegged", "barnacled", "based", "bayoneted", "beadyeyed", "beaked", "beaned", "beatified", "beautified", "beavered", "bed", "bedamned", "bedecked", "behoved", "belated", "bellbottomed", "bellshaped", "benighted", "bequeathed", "berried", "bespectacled", "bewhiskered", "bighearted", "bigmouthed", "bigoted", "bindweed", "binucleated", "biopsied", "bioturbed", "biped", "bipinnated", "birdfeed", "birdseed", "bisegmented", "bitterhearted", "blabbermouthed", "blackhearted", "bladed", "blankminded", "blearyeyed", "bleed", "blissed", "blobbed", "blondhaired", "bloodied", "bloodred", "bloodshed", "blueblooded", "boatshaped", "bobsled", "bodied", "boldhearted", "boogied", "boosed", "bosomed", "bottlefed", "bottlefeed", "bottlenecked", "bouldered", "bowlegged", "bowlshaped", "brandied", "bravehearted", "breastfed", "breastfeed", "breed", "brighteyed", "brindled", "broadhearted", "broadleaved", "broadminded", "brokenhearted", "broomed", "broomweed", "buccaned", "buckskinned", "bucktoothed", "buddied", "buffaloed", "bugeyed", "bugleweed", "bugweed", "bulletined", "bunked", "busied", "butterfingered", "cabbed", "caddied", "cairned", "calcified", "canalized", "candied", "cannulated", "canoed", "canopied", "canvased", "caped", "capsulated", "cassocked", "castellated", "catabolised", "catheterised", "caudated", "cellmediated", "cellulosed", "certified", "chagrined", "chambered", "chested", "chevroned", "chickenfeed", "chickenhearted", "chickweed", "chilblained", "childbed", "chinned", "chromatographed", "ciliated", "cindered", "cingulated", "circumstanced", "cisgendered", "citrullinated", "clappered", "clarified", "classified", "clawshaped", "claysized", "cleanhearted", "clearminded", "clearsighted", "cliched", "clodded", "cloistered", "closefisted", "closehearted", "closelipped", "closemouthed", "closeted", "cloudseed", "clubfooted", "clubshaped", "clued", "cockeyed", "codified", "coed", "coevolved", "coffined", "coiffed", "coinfected", "coldblooded", "coldhearted", "collateralised", "colonialised", "colorcoded", "colorised", "colourised", "columned", "commoditized", "compactified", "companioned", "complexioned", "conceited", "concerned", "concussed", "coneshaped", "congested", "contented", "convexed", "coralled", "corymbed", "cottonseed", "countrified", "countrybred", "courtmartialled", "coved", "coveralled", "cowshed", "cozied", "cragged", "crayoned", "credentialed", "creed", "crenulated", "crescentshaped", "cressweed", "crewed", "cricked", "crispated", "crossbarred", "crossbed", "crossbred", "crossbreed", "crossclassified", "crosseyed", "crossfertilised", "crossfertilized", "crossindexed", "crosslegged", "crossshaped", "crossstratified", "crossstriated", "crotched", "crucified", "cruelhearted", "crutched", "cubeshaped", "cubified", "cuckolded", "cucumbershaped", "cumbered", "cuminseed", "cupshaped", "curated", "curded", "curfewed", "curlicued", "curlycued", "curried", "curtsied", "cyclized", "cylindershaped", "damed", "dandified", "dangered", "darkhearted", "daybed", "daylighted", "deacidified", "deacylated", "deadhearted", "deadlined", "deaminized", "deathbed", "decalcified", "decertified", "deckbed", "declassified", "declutched", "decolourated", "decreed", "deed", "deeprooted", "deepseated", "defensed", "defied", "deflexed", "deglamorised", "degunkified", "dehumidified", "deified", "deled", "delegitimised", "demoded", "demystified", "denasalized", "denazified", "denied", "denitrified", "denticulated", "depressed", "deseed", "desexualised", "desposited", "detoxified", "deuced", "devitrified", "dewlapped", "dezincified", "diagonalised", "dialogued", "died", "digitated", "dignified", "dilled", "dimwitted", "diphthonged", "disaffected", "disaggregated", "disappointed", "disarrayed", "discalced", "discolorated", "discolourated", "discshaped", "diseased", "disembodied", "disencumbered", "disfranchised", "diskshaped", "disproportionated", "disproportioned", "disqualified", "distempered", "districted", "diversified", "diverticulated", "divested", "divvied", "dizzied", "dogged", "dogsbodied", "dogsled", "domeshaped", "domiciled", "dormered", "doublebarrelled", "doublestranded", "doublewalled", "downhearted", "duckbilled", "eared", "echeloned", "eddied", "edified", "eggshaped", "elasticated", "electrified", "elegized", "embed", "embodied", "emceed", "empaneled", "empanelled", "emptyhearted", "emulsified", "engined", "ennobled", "envied", "enzymecatalysed", "enzymecatalyzed", "epitomised", "epoxidized", "epoxied", "etherised", "etherized", "evilhearted", "evilminded", "exceed", "excited", "exemplified", "exponentiated", "expurgated", "extravasated", "extraverted", "extroverted", "fabled", "facelifted", "facsimiled", "fainthearted", "falcated", "falsehearted", "falsified", "famed", "fancified", "fanged", "fanshaped", "fantasied", "farsighted", "fated", "fatted", "fazed", "featherbed", "fed", "federalized", "feeblehearted", "feebleminded", "feeblewitted", "feed", "fendered", "fenestrated", "ferried", "fevered", "fibered", "fibred", "ficklehearted", "fiercehearted", "figged", "filigreed", "filterfeed", "fireweed", "firmhearted", "fissured", "flanged", "flanneled", "flannelled", "flatbed", "flatfooted", "flatted", "flawed", "flaxenhaired", "flaxseed", "flaxweed", "flighted", "floodgenerated", "flowerbed", "fluidised", "fluidized", "flurried", "fobbed", "fonded", "forcefeed", "foreshortened", "foresighted", "forkshaped", "formfeed", "fortified", "fortressed", "foulmouthed", "foureyed", "foxtailed", "fractionalised", "fractionalized", "frankhearted", "freed", "freehearted", "freespirited", "frenzied", "friezed", "frontiered", "fructified", "frumped", "fullblooded", "fullbodied", "fullfledged", "fullhearted", "funnelshaped", "furnaced", "gaitered", "galleried", "gangliated", "ganglionated", "gangrened", "gargoyled", "gasified", "gaunted", "gauntleted", "gauzed", "gavelled", "gelatinised", "gemmed", "genderized", "gentled", "gentlehearted", "gerrymandered", "gladhearted", "glamored", "globed", "gloried", "glorified", "glycosylated", "goateed", "gobletshaped", "godspeed", "goodhearted", "goodhumored", "goodhumoured", "goodnatured", "goodtempered", "goosed", "goosenecked", "goutweed", "grainfed", "grammaticalized", "grapeseed", "gratified", "graved", "gravelbed", "grayhaired", "greathearted", "greed", "greenweed", "grommeted", "groundspeed", "groved", "gruffed", "guiled", "gulled", "gumshoed", "gunkholed", "gussied", "guyed", "gyrostabilized", "hackneyed", "hagged", "haired", "halfcivilized", "halfhearted", "halfwitted", "haloed", "handballed", "handfed", "handfeed", "hardcoded", "hardhearted", "hardnosed", "hared", "harelipped", "hasted", "hatred", "haunched", "hawkeyed", "hayseed", "hayweed", "hearsed", "hearted", "heartshaped", "heavenlyminded", "heavyfooted", "heavyhearted", "heed", "heired", "heisted", "helicoptered", "helmed", "helmeted", "hemagglutinated", "hemolyzed", "hempseed", "hempweed", "heparinised", "heparinized", "herbed", "highheeled", "highminded", "highpriced", "highspeed", "highspirited", "hilled", "hipped", "hispanicised", "hocked", "hoed", "hogweed", "holstered", "homaged", "hoodooed", "hoofed", "hooknosed", "hooved", "horned", "horrified", "horseshoed", "horseweed", "hotbed", "hotblooded", "hothearted", "hotted", "hottempered", "hued", "humansized", "humidified", "humped", "hundred", "hutched", "hyperinflated", "hyperpigmented", "hyperstimulated", "hypertrophied", "hyphened", "hypophysectomised", "hypophysectomized", "hypopigmented", "hypostatised", "hysterectomized", "iconified", "iconised", "iconized", "ideologised", "illbred", "illconceived", "illdefined", "illdisposed", "illequipped", "illfated", "illfavored", "illfavoured", "illflavored", "illfurnished", "illhumored", "illhumoured", "illimited", "illmannered", "illnatured", "illomened", "illproportioned", "illqualified", "illscented", "illtempered", "illumed", "illusioned", "imbed", "imbossed", "imbued", "immatured", "impassioned", "impenetrated", "imperfected", "imperialised", "imperturbed", "impowered", "imputed", "inarticulated", "inbred", "inbreed", "incapsulated", "incased", "incrustated", "incrusted", "indebted", "indeed", "indemnified", "indentured", "indigested", "indisposed", "inexperienced", "infrared", "intensified", "intentioned", "interbedded", "interbred", "interbreed", "interluded", "introverted", "inured", "inventoried", "iodinated", "iodised", "irked", "ironfisted", "ironweed", "itchweed", "ivied", "ivyweed", "jagged", "jellified", "jerseyed", "jetlagged", "jetpropelled", "jeweled", "jewelled", "jewelweed", "jiggered", "jimmyweed", "jimsonweed", "jointweed", "joyweed", "jungled", "juried", "justiceweed", "justified", "karstified", "kerchiefed", "kettleshaped", "kibbled", "kidneyshaped", "kimonoed", "kindhearted", "kindred", "kingsized", "kirtled", "knacked", "knapweed", "kneed", "knobbed", "knobweed", "knopweed", "knotweed", "lakebed", "lakeweed", "lamed", "lamellated", "lanceshaped", "lanceted", "landbased", "lapeled", "lapelled", "largehearted", "lariated", "lased", "latticed", "lauded", "lavaged", "lavendered", "lawned", "led", "lefteyed", "legitimatised", "legitimatized", "leisured", "lensshaped", "leveed", "levied", "lichened", "lichenized", "lidded", "lifesized", "lightfingered", "lightfooted", "lighthearted", "lightminded", "lightspeed", "lignified", "likeminded", "lilylivered", "limbed", "linearised", "linearized", "linefeed", "linseed", "lionhearted", "liquefied", "liquified", "lithified", "liveried", "lobbied", "located", "locoweed", "longarmed", "longhaired", "longhorned", "longlegged", "longnecked", "longsighted", "longwinded", "lopsided", "loudmouthed", "louvered", "louvred", "lowbred", "lowpriced", "lowspirited", "lozenged", "lunated", "lyrated", "lysinated", "maced", "macroaggregated", "macrodissected", "maculated", "madweed", "magnified", "maidenweed", "maladapted", "maladjusted", "malnourished", "malrotated", "maned", "mannered", "manuevered", "manyhued", "manyshaped", "manysided", "masted", "mealymouthed", "meanspirited", "membered", "membraned", "metaled", "metalized", "metallised", "metallized", "metamerized", "metathesized", "meted", "methylated", "mettled", "microbrecciated", "microminiaturized", "microstratified", "middleaged", "midsized", "miffed", "mildhearted", "milkweed", "miniskirted", "misactivated", "misaligned", "mischiefed", "misclassified", "misdeed", "misdemeaned", "mismannered", "misnomered", "misproportioned", "miswired", "mitred", "mitted", "mittened", "moneyed", "monocled", "mononucleated", "monospaced", "monotoned", "monounsaturated", "mortified", "moseyed", "motorised", "motorized", "moussed", "moustached", "muddied", "mugweed", "multiarmed", "multibarreled", "multibladed", "multicelled", "multichambered", "multichanneled", "multichannelled", "multicoated", "multidirected", "multiengined", "multifaceted", "multilaminated", "multilaned", "multilayered", "multilobed", "multilobulated", "multinucleated", "multipronged", "multisegmented", "multisided", "multispeed", "multistemmed", "multistoried", "multitalented", "multitoned", "multitowered", "multivalued", "mummied", "mummified", "mustached", "mustachioed", "mutinied", "myelinated", "mystified", "mythicised", "naked", "narcotised", "narrowminded", "natured", "neaped", "nearsighted", "necrosed", "nectared", "need", "needleshaped", "newfangled", "newlywed", "nibbed", "nimblewitted", "nippled", "nixed", "nobled", "noduled", "noised", "nonaccented", "nonactivated", "nonadsorbed", "nonadulterated", "nonaerated", "nonaffiliated", "nonaliased", "nonalienated", "nonaligned", "nonarchived", "nonarmored", "nonassociated", "nonattenuated", "nonblackened", "nonbreastfed", "nonbrecciated", "nonbuffered", "nonbuttered", "noncarbonated", "noncarbonized", "noncatalogued", "noncatalyzed", "noncategorized", "noncertified", "nonchlorinated", "nonciliated", "noncircumcised", "noncivilized", "nonclassified", "noncoated", "noncodified", "noncoerced", "noncommercialized", "noncommissioned", "noncompacted", "noncompiled", "noncomplicated", "noncomposed", "noncomputed", "noncomputerized", "nonconcerted", "nonconditioned", "nonconfirmed", "noncongested", "nonconjugated", "noncooled", "noncorrugated", "noncoupled", "noncreated", "noncrowded", "noncultured", "noncurated", "noncushioned", "nondecoded", "nondecomposed", "nondedicated", "nondeferred", "nondeflated", "nondegenerated", "nondegraded", "nondelegated", "nondelimited", "nondelineated", "nondemarcated", "nondeodorized", "nondeployed", "nonderivatized", "nonderived", "nondetached", "nondetailed", "nondifferentiated", "nondigested", "nondigitized", "nondilapidated", "nondilated", "nondimensionalised", "nondimensionalized", "nondirected", "nondisabled", "nondisciplined", "nondispersed", "nondisputed", "nondisqualified", "nondisrupted", "nondisseminated", "nondissipated", "nondissolved", "nondistressed", "nondistributed", "nondiversified", "nondiverted", "nondocumented", "nondomesticated", "nondoped", "nondrafted", "nondrugged", "nondubbed", "nonducted", "nonearthed", "noneclipsed", "nonedged", "nonedited", "nonelasticized", "nonelectrified", "nonelectroplated", "nonelectroporated", "nonelevated", "noneliminated", "nonelongated", "nonembedded", "nonembodied", "nonemphasized", "nonencapsulated", "nonencoded", "nonencrypted", "nonendangered", "nonengraved", "nonenlarged", "nonenriched", "nonentangled", "nonentrenched", "nonepithelized", "nonequilibrated", "nonestablished", "nonetched", "nonethoxylated", "nonethylated", "nonetiolated", "nonexaggerated", "nonexcavated", "nonexhausted", "nonexperienced", "nonexpired", "nonfabricated", "nonfalsified", "nonfeathered", "nonfeatured", "nonfed", "nonfederated", "nonfeed", "nonfenestrated", "nonfertilized", "nonfilamented", "nonfinanced", "nonfinished", "nonfinned", "nonfissured", "nonflagellated", "nonflagged", "nonflared", "nonflavored", "nonfluidized", "nonfluorinated", "nonfluted", "nonforested", "nonformalized", "nonformatted", "nonfragmented", "nonfragranced", "nonfranchised", "nonfreckled", "nonfueled", "nonfumigated", "nonfunctionalized", "nonfunded", "nongalvanized", "nongated", "nongelatinized", "nongendered", "nongeneralized", "nongenerated", "nongifted", "nonglazed", "nonglucosated", "nonglucosylated", "nonglycerinated", "nongraded", "nongrounded", "nonhalogenated", "nonhandicapped", "nonhospitalised", "nonhospitalized", "nonhydrated", "nonincorporated", "nonindexed", "noninfected", "noninfested", "noninitialized", "noninitiated", "noninoculated", "noninseminated", "noninstitutionalized", "noninsured", "nonintensified", "noninterlaced", "noninterpreted", "nonintroverted", "noninvestigated", "noninvolved", "nonirrigated", "nonisolated", "nonisomerized", "nonissued", "nonitalicized", "nonitemized", "noniterated", "nonjaded", "nonlabelled", "nonlaminated", "nonlateralized", "nonlayered", "nonlegalized", "nonlegislated", "nonlesioned", "nonlexicalized", "nonliberated", "nonlichenized", "nonlighted", "nonlignified", "nonlimited", "nonlinearized", "nonlinked", "nonlobed", "nonlobotomized", "nonlocalized", "nonlysed", "nonmachined", "nonmalnourished", "nonmandated", "nonmarginalized", "nonmassaged", "nonmatriculated", "nonmatted", "nonmatured", "nonmechanized", "nonmedicated", "nonmedullated", "nonmentioned", "nonmetabolized", "nonmetallized", "nonmetastasized", "nonmetered", "nonmethoxylated", "nonmilled", "nonmineralized", "nonmirrored", "nonmodeled", "nonmoderated", "nonmodified", "nonmonetized", "nonmonitored", "nonmortgaged", "nonmotorized", "nonmottled", "nonmounted", "nonmultithreaded", "nonmutilated", "nonmyelinated", "nonnormalized", "nonnucleated", "nonobjectified", "nonobligated", "nonoccupied", "nonoiled", "nonopinionated", "nonoxygenated", "nonpaginated", "nonpaired", "nonparalyzed", "nonparameterized", "nonparasitized", "nonpasteurized", "nonpatterned", "nonphased", "nonphosphatized", "nonphosphorized", "nonpierced", "nonpigmented", "nonpiloted", "nonpipelined", "nonpitted", "nonplussed", "nonpuffed", "nonrandomized", "nonrated", "nonrefined", "nonregistered", "nonregulated", "nonrelated", "nonretarded", "nonsacred", "nonsalaried", "nonsanctioned", "nonsaturated", "nonscented", "nonscheduled", "nonseasoned", "nonsecluded", "nonsegmented", "nonsegregated", "nonselected", "nonsolidified", "nonspecialized", "nonspored", "nonstandardised", "nonstandardized", "nonstratified", "nonstressed", "nonstriated", "nonstriped", "nonstructured", "nonstylised", "nonstylized", "nonsubmerged", "nonsubscripted", "nonsubsidised", "nonsubsidized", "nonsubstituted", "nonsyndicated", "nonsynthesised", "nontabulated", "nontalented", "nonthreaded", "nontinted", "nontolerated", "nontranslated", "nontunnelled", "nonunified", "nonunionised", "nonupholstered", "nonutilised", "nonutilized", "nonvalued", "nonvaried", "nonverbalized", "nonvitrified", "nonvolatilised", "nonvolatilized", "normed", "nosebleed", "notated", "notified", "nuanced", "nullified", "numerated", "oarweed", "objectified", "obliqued", "obtunded", "occupied", "octupled", "odored", "oilseed", "oinked", "oldfashioned", "onesided", "oophorectomized", "opaqued", "openhearted", "openminded", "openmouthed", "opiated", "opinionated", "oracled", "oreweed", "ossified", "outbreed", "outmoded", "outrigged", "outriggered", "outsized", "outskated", "outspeed", "outtopped", "outtrumped", "outvoiced", "outweed", "ovated", "overadorned", "overaged", "overalled", "overassured", "overbred", "overbreed", "overcomplicated", "overdamped", "overdetailed", "overdiversified", "overdyed", "overequipped", "overfatigued", "overfed", "overfeed", "overindebted", "overintensified", "overinventoried", "overmagnified", "overmodified", "overpreoccupied", "overprivileged", "overproportionated", "overqualified", "overseed", "oversexed", "oversimplified", "oversized", "oversophisticated", "overstudied", "oversulfated", "ovicelled", "ovoidshaped", "ozonated", "pacified", "packeted", "palatalized", "paled", "palsied", "paned", "panicled", "parabled", "parallelepiped", "parallelized", "parallelopiped", "parenthesised", "parodied", "parqueted", "passioned", "paunched", "pauperised", "pedigreed", "pedimented", "pedunculated", "pegged", "peglegged", "penanced", "pencilshaped", "permineralized", "personified", "petrified", "photodissociated", "photoduplicated", "photoed", "photoinduced", "photolysed", "photolyzed", "pied", "pigeoned", "pigtailed", "pigweed", "pilastered", "pillared", "pilloried", "pimpled", "pinealectomised", "pinealectomized", "pinfeathered", "pinnacled", "pinstriped", "pixellated", "pixilated", "pixillated", "plainclothed", "plantarflexed", "pled", "plumaged", "pocked", "pokeweed", "polychlorinated", "polyunsaturated", "ponytailed", "pooched", "poorspirited", "popeyed", "poppyseed", "porcelainized", "porched", "poshed", "pottered", "poxed", "preachified", "precertified", "preclassified", "preconized", "preinoculated", "premed", "prenotified", "preoccupied", "preposed", "prequalified", "preshaped", "presignified", "prespecified", "prettified", "pried", "principled", "proceed", "prophesied", "propounded", "prosed", "protonated", "proudhearted", "proxied", "pulpified", "pumpkinseed", "puppied", "purebred", "pured", "pureed", "purified", "pustuled", "putrefied", "pyjamaed", "quadruped", "qualified", "quantified", "quantised", "quantized", "quarried", "queried", "questoned", "quicktempered", "quickwitted", "quiesced", "quietened", "quizzified", "racemed", "radiosensitised", "ragweed", "raindrenched", "ramped", "rapeseed", "rarefied", "rarified", "ratified", "razoredged", "reaccelerated", "reaccompanied", "reachieved", "reacknowledged", "readdicted", "readied", "reamplified", "reannealed", "reassociated", "rebadged", "rebiopsied", "recabled", "recategorised", "receipted", "recentred", "recertified", "rechoreographed", "reclarified", "reclassified", "reconferred", "recrystalized", "rectified", "recursed", "red", "redblooded", "redefied", "redenied", "rednecked", "redshifted", "redweed", "redyed", "reed", "reembodied", "reenlighted", "refeed", "refereed", "reflexed", "refortified", "refronted", "refuged", "reglorified", "reimpregnated", "reinitialized", "rejustified", "related", "reliquefied", "remedied", "remodified", "remonetized", "remythologized", "renotified", "renullified", "renumerated", "reoccupied", "repacified", "repurified", "reputed", "requalified", "rescinded", "reseed", "reshoed", "resolidified", "resorbed", "respecified", "restudied", "retabulated", "reticulated", "retinted", "retreed", "retroacted", "reunified", "reverified", "revested", "revivified", "rewed", "ridgepoled", "riffled", "rightminded", "rigidified", "rinded", "riped", "rited", "ritualised", "riverbed", "rivered", "roached", "roadbed", "robotised", "robotized", "romanized", "rosetted", "rosined", "roughhearted", "rubied", "ruddied", "runcinated", "russeted", "sabled", "sabred", "sabretoothed", "sacheted", "sacred", "saddlebred", "sainted", "salaried", "samoyed", "sanctified", "satellited", "savvied", "sawtoothed", "scandalled", "scarified", "scarped", "sceptred", "scissored", "screed", "screwshaped", "scrupled", "sculked", "scurried", "scuttled", "seabed", "seaweed", "seed", "seedbed", "selfassured", "selforganized", "semicivilized", "semidetached", "semidisassembled", "semidomesticated", "semipetrified", "semipronated", "semirefined", "semivitrified", "sentineled", "sepaled", "sepalled", "sequinned", "sexed", "shagged", "shaggycoated", "shaggyhaired", "shaled", "shammed", "sharpangled", "sharpclawed", "sharpcornered", "sharpeared", "sharpedged", "sharpeyed", "sharpflavored", "sharplimbed", "sharpnosed", "sharpsighted", "sharptailed", "sharptongued", "sharptoothed", "sharpwitted", "sharpworded", "shed", "shellbed", "shieldshaped", "shimmied", "shinned", "shirted", "shirtsleeved", "shoed", "shortbeaked", "shortbilled", "shortbodied", "shorthaired", "shortlegged", "shortlimbed", "shortnecked", "shortnosed", "shortsighted", "shortsleeved", "shortsnouted", "shortstaffed", "shorttailed", "shorttempered", "shorttoed", "shorttongued", "shortwinded", "shortwinged", "shotted", "shred", "shrewsized", "shrined", "shrinkproofed", "sickbed", "sickleshaped", "sickleweed", "signalised", "signified", "silicified", "siliconized", "silkweed", "siltsized", "silvertongued", "simpleminded", "simplified", "singlebarreled", "singlebarrelled", "singlebed", "singlebladed", "singlebreasted", "singlecelled", "singlefooted", "singlelayered", "singleminded", "singleseeded", "singleshelled", "singlestranded", "singlevalued", "sissified", "sistered", "sixgilled", "sixmembered", "sixsided", "sixstoried", "skulled", "slickered", "slipcased", "slowpaced", "slowwitted", "slurried", "smallminded", "smoothened", "smoothtongued", "snaggletoothed", "snouted", "snowballed", "snowcapped", "snowshed", "snowshoed", "snubnosed", "so-called", "sofabed", "softhearted", "sogged", "soled", "solidified", "soliped", "sorbed", "souled", "spearshaped", "specified", "spectacled", "sped", "speeched", "speechified", "speed", "spied", "spiffied", "spindleshaped", "spiritualised", "spirted", "splayfooted", "spoonfed", "spoonfeed", "spoonshaped", "spreadeagled", "squarejawed", "squareshaped", "squareshouldered", "squaretoed", "squeegeed", "staled", "starshaped", "starspangled", "starstudded", "statechartered", "statesponsored", "statued", "steadied", "steampowered", "steed", "steelhearted", "steepled", "sterned", "stiffnecked", "stilettoed", "stimied", "stinkweed", "stirrupshaped", "stockinged", "storeyed", "storied", "stouthearted", "straitlaced", "stratified", "strawberryflavored", "streambed", "stressinduced", "stretchered", "strictured", "strongbodied", "strongboned", "strongflavored", "stronghearted", "stronglimbed", "strongminded", "strongscented", "strongwilled", "stubbled", "studied", "stultified", "stupefied", "styed", "stymied", "subclassified", "subcommissioned", "subminiaturised", "subsaturated", "subulated", "suburbanised", "suburbanized", "suburbed", "succeed", "sueded", "sugarrelated", "sulfurized", "sunbed", "superhardened", "superinfected", "supersimplified", "surefooted", "sweetscented", "swifted", "swordshaped", "syllabified", "syphilized", "tabularized", "talented", "tarpapered", "tautomerized", "teated", "teed", "teenaged", "teetotaled", "tenderhearted", "tentacled", "tenured", "termed", "ternated", "testbed", "testified", "theatricalised", "theatricalized", "themed", "thicketed", "thickskinned", "thickwalled", "thighed", "thimbled", "thimblewitted", "thonged", "thoroughbred", "thralled", "threated", "throated", "throughbred", "thyroidectomised", "thyroidectomized", "tiaraed", "ticktocked", "tidied", "tightassed", "tightfisted", "tightlipped", "timehonoured", "tindered", "tined", "tinselled", "tippytoed", "tiptoed", "titled", "toed", "tomahawked", "tonged", "toolshed", "toothplated", "toplighted", "torchlighted", "toughhearted", "traditionalized", "trajected", "tranced", "transgendered", "transliterated", "translocated", "transmogrified", "treadled", "treed", "treelined", "tressed", "trialled", "triangled", "trifoliated", "trifoliolated", "trilobed", "trucklebed", "truehearted", "trumpetshaped", "trumpetweed", "tuberculated", "tumbleweed", "tunnelshaped", "turbaned", "turreted", "turtlenecked", "tuskshaped", "tweed", "twigged", "typified", "ulcered", "ultracivilised", "ultracivilized", "ultracooled", "ultradignified", "ultradispersed", "ultrafiltered", "ultrared", "ultrasimplified", "ultrasophisticated", "unabandoned", "unabashed", "unabbreviated", "unabetted", "unabolished", "unaborted", "unabraded", "unabridged", "unabsolved", "unabsorbed", "unaccelerated", "unaccented", "unaccentuated", "unacclimatised", "unacclimatized", "unaccompanied", "unaccomplished", "unaccosted", "unaccredited", "unaccrued", "unaccumulated", "unaccustomed", "unacidulated", "unacquainted", "unacquitted", "unactivated", "unactuated", "unadapted", "unaddicted", "unadjourned", "unadjudicated", "unadjusted", "unadmonished", "unadopted", "unadored", "unadorned", "unadsorbed", "unadulterated", "unadvertised", "unaerated", "unaffiliated", "unaggregated", "unagitated", "unaimed", "unaired", "unaliased", "unalienated", "unaligned", "unallocated", "unalloyed", "unalphabetized", "unamassed", "unamortized", "unamplified", "unanaesthetised", "unanaesthetized", "unaneled", "unanesthetised", "unanesthetized", "unangered", "unannealed", "unannexed", "unannihilated", "unannotated", "unanointed", "unanticipated", "unappareled", "unappendaged", "unapportioned", "unapprenticed", "unapproached", "unappropriated", "unarbitrated", "unarched", "unarchived", "unarmored", "unarmoured", "unarticulated", "unascertained", "unashamed", "unaspirated", "unassembled", "unasserted", "unassessed", "unassociated", "unassorted", "unassuaged", "unastonished", "unastounded", "unatoned", "unattained", "unattainted", "unattenuated", "unattributed", "unauctioned", "unaudited", "unauthenticated", "unautographed", "unaverted", "unawaked", "unawakened", "unawarded", "unawed", "unbaffled", "unbaited", "unbalconied", "unbanded", "unbanished", "unbaptised", "unbaptized", "unbarreled", "unbarrelled", "unbattered", "unbeaded", "unbearded", "unbeneficed", "unbesotted", "unbetrayed", "unbetrothed", "unbiased", "unbiassed", "unbigoted", "unbilled", "unblackened", "unblanketed", "unblasphemed", "unblazoned", "unblistered", "unblockaded", "unbloodied", "unbodied", "unbonded", "unbothered", "unbounded", "unbracketed", "unbranded", "unbreaded", "unbrewed", "unbridged", "unbridled", "unbroached", "unbudgeted", "unbuffed", "unbuffered", "unburnished", "unbutchered", "unbuttered", "uncached", "uncaked", "uncalcified", "uncalibrated", "uncamouflaged", "uncamphorated", "uncanceled", "uncancelled", "uncapitalized", "uncarbonated", "uncarpeted", "uncased", "uncashed", "uncastrated", "uncatalogued", "uncatalysed", "uncatalyzed", "uncategorised", "uncatered", "uncaulked", "uncelebrated", "uncensored", "uncensured", "uncertified", "unchambered", "unchanneled", "unchannelled", "unchaperoned", "uncharacterized", "uncharted", "unchartered", "unchastened", "unchastised", "unchelated", "uncherished", "unchilled", "unchristened", "unchronicled", "uncircumcised", "uncircumscribed", "uncited", "uncivilised", "uncivilized", "unclarified", "unclassed", "unclassified", "uncleaved", "unclimbed", "unclustered", "uncluttered", "uncoagulated", "uncoded", "uncodified", "uncoerced", "uncoined", "uncollapsed", "uncollated", "uncolonised", "uncolonized", "uncolumned", "uncombined", "uncommented", "uncommercialised", "uncommercialized", "uncommissioned", "uncommitted", "uncompacted", "uncompartmentalized", "uncompartmented", "uncompensated", "uncompiled", "uncomplicated", "uncompounded", "uncomprehened", "uncomputed", "unconcealed", "unconceded", "unconcluded", "uncondensed", "unconditioned", "unconfined", "unconfirmed", "uncongested", "unconglomerated", "uncongratulated", "unconjugated", "unconquered", "unconsecrated", "unconsoled", "unconsolidated", "unconstipated", "unconstricted", "unconstructed", "unconsumed", "uncontacted", "uncontracted", "uncontradicted", "uncontrived", "unconverted", "unconveyed", "unconvicted", "uncooked", "uncooled", "uncoordinated", "uncopyrighted", "uncored", "uncorrelated", "uncorroborated", "uncosted", "uncounseled", "uncounselled", "uncounterfeited", "uncoveted", "uncrafted", "uncramped", "uncrannied", "uncrazed", "uncreamed", "uncreased", "uncreated", "uncredentialled", "uncredited", "uncrested", "uncrevassed", "uncrippled", "uncriticised", "uncriticized", "uncropped", "uncrosslinked", "uncrowded", "uncrucified", "uncrumbled", "uncrystalized", "uncrystallised", "uncrystallized", "uncubed", "uncuddled", "uncued", "unculled", "uncultivated", "uncultured", "uncupped", "uncurated", "uncurbed", "uncurried", "uncurtained", "uncushioned", "undamped", "undampened", "undappled", "undarkened", "undated", "undaubed", "undazzled", "undeadened", "undeafened", "undebated", "undebunked", "undeceased", "undecimalized", "undeciphered", "undecked", "undeclared", "undecomposed", "undeconstructed", "undedicated", "undefeated", "undeferred", "undefied", "undefined", "undeflected", "undefrauded", "undefrayed", "undegassed", "undejected", "undelegated", "undeleted", "undelimited", "undelineated", "undemented", "undemolished", "undemonstrated", "undenatured", "undenied", "undented", "undeodorized", "undepicted", "undeputized", "underaged", "underarmed", "underassessed", "underbred", "underbudgeted", "undercapitalised", "undercapitalized", "underdiagnosed", "underdocumented", "underequipped", "underexploited", "underexplored", "underfed", "underfeed", "underfurnished", "undergoverned", "undergrazed", "underinflated", "underinsured", "underinvested", "underived", "undermaintained", "undermentioned", "undermotivated", "underperceived", "underpowered", "underprivileged", "underqualified", "underrehearsed", "underresourced", "underripened", "undersaturated", "undersexed", "undersized", "underspecified", "understaffed", "understocked", "understressed", "understudied", "underutilised", "underventilated", "undescaled", "undesignated", "undetached", "undetailed", "undetained", "undeteriorated", "undeterred", "undetonated", "undevised", "undevoted", "undevoured", "undiagnosed", "undialed", "undialysed", "undialyzed", "undiapered", "undiffracted", "undigested", "undignified", "undiluted", "undiminished", "undimmed", "undipped", "undirected", "undisciplined", "undiscouraged", "undiscussed", "undisfigured", "undisguised", "undisinfected", "undismayed", "undisposed", "undisproved", "undisputed", "undisrupted", "undissembled", "undissipated", "undissociated", "undissolved", "undistilled", "undistorted", "undistracted", "undistributed", "undisturbed", "undiversified", "undiverted", "undivulged", "undoctored", "undocumented", "undomesticated", "undosed", "undramatised", "undrilled", "undrugged", "undubbed", "unduplicated", "uneclipsed", "unedged", "unedited", "unejaculated", "unejected", "unelaborated", "unelapsed", "unelected", "unelectrified", "unelevated", "unelongated", "unelucidated", "unemaciated", "unemancipated", "unemasculated", "unembalmed", "unembed", "unembellished", "unembodied", "unemboldened", "unemerged", "unenacted", "unencoded", "unencrypted", "unencumbered", "unendangered", "unendorsed", "unenergized", "unenfranchised", "unengraved", "unenhanced", "unenlarged", "unenlivened", "unenraptured", "unenriched", "unentangled", "unentitled", "unentombed", "unentranced", "unentwined", "unenumerated", "unenveloped", "unenvied", "unequaled", "unequalised", "unequalized", "unequalled", "unequipped", "unerased", "unerected", "uneroded", "unerupted", "unescorted", "unestablished", "unevaluated", "unexaggerated", "unexampled", "unexcavated", "unexceeded", "unexcelled", "unexecuted", "unexerted", "unexhausted", "unexpensed", "unexperienced", "unexpired", "unexploited", "unexplored", "unexposed", "unexpurgated", "unextinguished", "unfabricated", "unfaceted", "unfanned", "unfashioned", "unfathered", "unfathomed", "unfattened", "unfavored", "unfavoured", "unfazed", "unfeathered", "unfed", "unfeigned", "unfermented", "unfertilised", "unfertilized", "unfilleted", "unfiltered", "unfinished", "unflavored", "unflavoured", "unflawed", "unfledged", "unfleshed", "unflurried", "unflushed", "unflustered", "unfluted", "unfocussed", "unforested", "unformatted", "unformulated", "unfortified", "unfractionated", "unfractured", "unfragmented", "unfrequented", "unfretted", "unfrosted", "unfueled", "unfunded", "unfurnished", "ungarbed", "ungarmented", "ungarnished", "ungeared", "ungerminated", "ungifted", "unglazed", "ungoverned", "ungraded", "ungrasped", "ungratified", "ungroomed", "ungrounded", "ungrouped", "ungummed", "ungusseted", "unhabituated", "unhampered", "unhandicapped", "unhardened", "unharvested", "unhasped", "unhatched", "unheralded", "unhindered", "unhomogenised", "unhomogenized", "unhonored", "unhonoured", "unhooded", "unhusked", "unhyphenated", "unified", "unillustrated", "unimpacted", "unimpaired", "unimpassioned", "unimpeached", "unimpelled", "unimplemented", "unimpregnated", "unimprisoned", "unimpugned", "unincorporated", "unincubated", "unincumbered", "unindemnified", "unindexed", "unindicted", "unindorsed", "uninduced", "unindustrialised", "unindustrialized", "uninebriated", "uninfected", "uninflated", "uninflected", "uninhabited", "uninhibited", "uninitialised", "uninitialized", "uninitiated", "uninoculated", "uninseminated", "uninsulated", "uninsured", "uninterpreted", "unintimidated", "unintoxicated", "unintroverted", "uninucleated", "uninverted", "uninvested", "uninvolved", "unissued", "unjaundiced", "unjointed", "unjustified", "unkeyed", "unkindled", "unlabelled", "unlacquered", "unlamented", "unlaminated", "unlarded", "unlaureled", "unlaurelled", "unleaded", "unleavened", "unled", "unlettered", "unlicenced", "unlighted", "unlimbered", "unlimited", "unlined", "unlipped", "unliquidated", "unlithified", "unlittered", "unliveried", "unlobed", "unlocalised", "unlocalized", "unlocated", "unlogged", "unlubricated", "unmagnified", "unmailed", "unmaimed", "unmaintained", "unmalted", "unmangled", "unmanifested", "unmanipulated", "unmannered", "unmanufactured", "unmapped", "unmarred", "unmastered", "unmatriculated", "unmechanised", "unmechanized", "unmediated", "unmedicated", "unmentioned", "unmerged", "unmerited", "unmetabolised", "unmetabolized", "unmetamorphosed", "unmethylated", "unmineralized", "unmitigated", "unmoderated", "unmodernised", "unmodernized", "unmodified", "unmodulated", "unmolded", "unmolested", "unmonitored", "unmortgaged", "unmotivated", "unmotorised", "unmotorized", "unmounted", "unmutated", "unmutilated", "unmyelinated", "unnaturalised", "unnaturalized", "unnotched", "unnourished", "unobligated", "unobstructed", "unoccupied", "unoiled", "unopposed", "unoptimised", "unordained", "unorganised", "unorganized", "unoriented", "unoriginated", "unornamented", "unoxidized", "unoxygenated", "unpacified", "unpackaged", "unpaired", "unparalleled", "unparallelled", "unparasitized", "unpardoned", "unparodied", "unpartitioned", "unpasteurised", "unpasteurized", "unpatented", "unpaved", "unpedigreed", "unpenetrated", "unpenned", "unperfected", "unperjured", "unpersonalised", "unpersuaded", "unperturbed", "unperverted", "unpestered", "unphosphorylated", "unphotographed", "unpigmented", "unpiloted", "unpledged", "unploughed", "unplumbed", "unpoised", "unpolarized", "unpoliced", "unpolled", "unpopulated", "unposed", "unpowered", "unprecedented", "unpredicted", "unprejudiced", "unpremeditated", "unprescribed", "unpressurised", "unpressurized", "unpriced", "unprimed", "unprincipled", "unprivileged", "unprized", "unprocessed", "unprofaned", "unprofessed", "unprohibited", "unprompted", "unpronounced", "unproposed", "unprospected", "unproved", "unpruned", "unpublicised", "unpublicized", "unpublished", "unpuckered", "unpunctuated", "unpurified", "unqualified", "unquantified", "unquenched", "unquoted", "unranked", "unrated", "unratified", "unrebuked", "unreckoned", "unrecompensed", "unreconciled", "unreconstructed", "unrectified", "unredeemed", "unrefined", "unrefreshed", "unrefrigerated", "unregarded", "unregimented", "unregistered", "unregulated", "unrehearsed", "unrelated", "unrelieved", "unrelinquished", "unrenewed", "unrented", "unrepealed", "unreplicated", "unreprimanded", "unrequited", "unrespected", "unrestricted", "unretained", "unretarded", "unrevised", "unrevived", "unrevoked", "unrifled", "unripened", "unrivaled", "unrivalled", "unroasted", "unroofed", "unrounded", "unruffled", "unsalaried", "unsalted", "unsanctified", "unsanctioned", "unsanded", "unsaponified", "unsated", "unsatiated", "unsatisfied", "unsaturated", "unscaled", "unscarred", "unscathed", "unscented", "unscheduled", "unschooled", "unscreened", "unscripted", "unseamed", "unseared", "unseasoned", "unseeded", "unsegmented", "unsegregated", "unselected", "unserviced", "unsexed", "unshamed", "unshaped", "unsharpened", "unsheared", "unshielded", "unshifted", "unshirted", "unshoed", "unshuttered", "unsifted", "unsighted", "unsilenced", "unsimplified", "unsized", "unskewed", "unskinned", "unslaked", "unsliced", "unsloped", "unsmoothed", "unsoiled", "unsoldered", "unsolicited", "unsolved", "unsophisticated", "unsorted", "unsourced", "unsoured", "unspaced", "unspanned", "unspecialised", "unspecialized", "unspecified", "unspiced", "unstaged", "unstandardised", "unstandardized", "unstapled", "unstarched", "unstarred", "unstated", "unsteadied", "unstemmed", "unsterilised", "unsterilized", "unstickered", "unstiffened", "unstifled", "unstigmatised", "unstigmatized", "unstilted", "unstippled", "unstipulated", "unstirred", "unstocked", "unstoked", "unstoppered", "unstratified", "unstressed", "unstriped", "unstructured", "unstudied", "unstumped", "unsubdued", "unsubmitted", "unsubsidised", "unsubsidized", "unsubstantiated", "unsubstituted", "unsugared", "unsummarized", "unsupervised", "unsuprised", "unsurveyed", "unswayed", "unsweetened", "unsyllabled", "unsymmetrized", "unsynchronised", "unsynchronized", "unsyncopated", "unsyndicated", "unsynthesized", "unsystematized", "untagged", "untainted", "untalented", "untanned", "untaped", "untapered", "untargeted", "untarnished", "untattooed", "untelevised", "untempered", "untenanted", "unterminated", "untextured", "unthickened", "unthinned", "unthrashed", "unthreaded", "unthrottled", "unticketed", "untiled", "untilled", "untilted", "untimbered", "untinged", "untinned", "untinted", "untitled", "untoasted", "untoggled", "untoothed", "untopped", "untoughened", "untracked", "untrammeled", "untrammelled", "untranscribed", "untransduced", "untransferred", "untranslated", "untransmitted", "untraumatized", "untraversed", "untufted", "untuned", "untutored", "unupgraded", "unupholstered", "unutilised", "unutilized", "unuttered", "unvaccinated", "unvacuumed", "unvalidated", "unvalued", "unvandalized", "unvaned", "unvanquished", "unvapourised", "unvapourized", "unvaried", "unvariegated", "unvarnished", "unvented", "unventilated", "unverbalised", "unverbalized", "unverified", "unversed", "unvetted", "unvictimized", "unviolated", "unvitrified", "unvocalized", "unvoiced", "unwaged", "unwarped", "unwarranted", "unwaxed", "unweakened", "unweaned", "unwearied", "unweathered", "unwebbed", "unwed", "unwedded", "unweeded", "unweighted", "unwelded", "unwinterized", "unwired", "unwitnessed", "unwonted", "unwooded", "unworshipped", "unwounded", "unzoned", "uprated", "uprighted", "upset", "upsized", "upswelled", "vacuolated", "valanced", "valueoriented", "varied", "vascularised", "vascularized", "vasectomised", "vaunted", "vectorised", "vectorized", "vegged", "verdured", "verified", "vermiculated", "vernacularized", "versified", "verticillated", "vesiculated", "vied", "vilified", "virtualised", "vitrified", "vivified", "volumed", "vulcanised", "wabbled", "wafered", "waisted", "walleyed", "wared", "warmblooded", "warmhearted", "warted", "waterbased", "waterbed", "watercooled", "watersaturated", "watershed", "wavegenerated", "waxweed", "weakhearted", "weakkneed", "weakminded", "wearied", "weatherised", "weatherstriped", "webfooted", "wedgeshaped", "weed", "weeviled", "welladapted", "welladjusted", "wellbred", "wellconducted", "welldefined", "welldisposed", "welldocumented", "wellequipped", "wellestablished", "wellfavored", "wellfed", "wellgrounded", "wellintentioned", "wellmannered", "wellminded", "wellorganised", "wellrounded", "wellshaped", "wellstructured", "whinged", "whinnied", "whiplashed", "whiskered", "wholehearted", "whorled", "widebased", "wideeyed", "widemeshed", "widemouthed", "widenecked", "widespaced", "wilded", "wildered", "wildeyed", "willinghearted", "windspeed", "winterfed", "winterfeed", "winterised", "wirehaired", "wised", "witchweed", "woaded", "wombed", "wooded", "woodshed", "wooled", "woolled", "woollyhaired", "woollystemmed", "woolyhaired", "woolyminded", "wormholed", "wormshaped", "wrappered", "wretched", "wronghearted", "ycleped", "yolked", "zincified", "zinckified", "zinkified", "zombified"];
};
var Ui = {};
Object.defineProperty(Ui, "__esModule", {
  value: !0
});
Ui.default = function(a, e, t) {
  const i = (0, MVe.default)(a).map((o) => o.toLowerCase()), n = i.indexOf(e.toLowerCase());
  if (n < 1)
    return !1;
  const r = i[n - 1], s = (0, fT.get)(CVe, t, []);
  return (0, fT.includes)(s, r);
};
var fT = I, bVe = Xc, vVe = _n(bVe), kVe = Xo, _Ve = _n(kVe), $Ve = ad, jVe = _n($Ve), xVe = Qo, AVe = _n(xVe), EVe = ed, SVe = _n(EVe), qVe = Jo, PVe = _n(qVe), TVe = tu, RVe = _n(TVe), OVe = se, MVe = _n(OVe);
function _n(a) {
  return a && a.__esModule ? a : { default: a };
}
const CVe = {
  nl: (0, vVe.default)().cannotDirectlyPrecedePassiveParticiple,
  en: (0, _Ve.default)().cannotDirectlyPrecedePassiveParticiple,
  fr: (0, jVe.default)().cannotDirectlyPrecedePassiveParticiple,
  it: (0, AVe.default)().cannotDirectlyPrecedePassiveParticiple,
  pl: (0, SVe.default)().cannotDirectlyPrecedePassiveParticiple,
  es: (0, PVe.default)().cannotDirectlyPrecedePassiveParticiple,
  pt: (0, RVe.default)().cannotDirectlyPrecedePassiveParticiple
};
var fr = {};
Object.defineProperty(fr, "__esModule", {
  value: !0
});
fr.default = function(a, e, t) {
  const i = (0, VVe.default)(a).map((s) => s.toLowerCase()), n = i.indexOf(e.toLowerCase());
  if (n < 1)
    return !1;
  const r = (0, yT.get)(KVe, t, []);
  for (let s = 0; s < n; s++)
    if ((0, yT.includes)(r, i[s]))
      return !0;
  return !1;
};
var yT = I, LVe = Xo, IVe = Pd(LVe), WVe = ad, FVe = Pd(WVe), DVe = Qo, BVe = Pd(DVe), NVe = Jo, UVe = Pd(NVe), HVe = se, VVe = Pd(HVe);
function Pd(a) {
  return a && a.__esModule ? a : { default: a };
}
const KVe = {
  en: (0, IVe.default)().cannotBeBetweenPassiveAuxiliaryAndParticiple,
  fr: (0, FVe.default)().cannotBeBetweenPassiveAuxiliaryAndParticiple,
  it: (0, BVe.default)().cannotBeBetweenPassiveAuxiliaryAndParticiple,
  es: (0, UVe.default)().cannotBeBetweenPassiveAuxiliaryAndParticiple
};
Object.defineProperty(Zv, "__esModule", {
  value: !0
});
var GVe = $t, Y4 = Td(GVe), YVe = di, ZVe = Td(YVe), XVe = Qv, JVe = Td(XVe), QVe = Ui, aKe = Td(QVe), eKe = fr, tKe = Td(eKe), py = I;
function Td(a) {
  return a && a.__esModule ? a : { default: a };
}
const iKe = (0, JVe.default)();
var nKe = ["get", "gets", "getting", "got", "gotten"], yr = function(e, t, i) {
  Y4.default.call(this, e, t, i), ZVe.default.call(this);
};
Pa.inherits(yr, Y4.default);
yr.prototype.isPassive = function() {
  const a = this.getSentencePart(), e = this.getParticiple(), t = this.getLanguage();
  return !this.isNonVerbEndingEd() && !this.hasRidException() && !this.directPrecedenceException(a, e, t) && !this.precedenceException(a, e, t);
};
yr.prototype.isNonVerbEndingEd = function() {
  return this.getType() === "irregular" ? !1 : (0, py.includes)(iKe, this.getParticiple());
};
yr.prototype.hasRidException = function() {
  if (this.getParticiple() === "rid") {
    var a = this.getAuxiliaries();
    return !(0, py.isEmpty)((0, py.intersection)(nKe, a));
  }
  return !1;
};
yr.prototype.directPrecedenceException = aKe.default;
yr.prototype.precedenceException = tKe.default;
Zv.default = yr;
var ak = {}, ek = {};
Object.defineProperty(ek, "__esModule", {
  value: !0
});
ek.default = function() {
  return {
    adjectivesVerbs: rKe,
    nounsStartingWithVowel: sKe,
    nounsStartingWithConsonant: oKe,
    others: dKe
  };
};
var rKe = [
  // The following words are participles of verbs that cannot be passives.
  "allé",
  "arrivé",
  "décédé",
  "demeuré",
  "entré",
  "été",
  "né",
  "resté",
  "retombé",
  "tombé",
  // The following words are non-participles ending in é.
  "achalandé",
  "aéroporté",
  "affilé",
  "affixé",
  "âgé",
  "aîné",
  "aisé",
  "aligoté",
  "alizé",
  "alliacé",
  "alluré",
  "alphabétisé",
  "alvéolé",
  "aminé",
  "ammoniaqué",
  "ampoulé",
  "archi-prouvé",
  "archi-usé",
  "asexué",
  "autoguidé",
  "autopropulsé",
  "aviné",
  "baleiné",
  "barbelé",
  "baryté",
  "bien-aimé",
  "bisexué",
  "bouqueté",
  "brioché",
  "burkinabé",
  "cagoulé",
  "calamistré",
  "cannelé",
  "carabiné",
  "carboné",
  "caréné",
  "carié",
  "carminé",
  "carné",
  "carpé",
  "censé",
  "cérusé",
  "charançonné",
  "chenillé",
  "chocolaté",
  "chtarbé",
  "citronné",
  "cofondé",
  "contrecollé",
  "côtelé",
  "courbaturé",
  "crawlé",
  "crossé",
  "crustacé",
  "cutané",
  "damasquiné",
  "damassé",
  "débellé",
  "décavé",
  "déguenillé",
  "demi-paralysé",
  "denté",
  "dépenaillé",
  "désenchanté",
  "désodé",
  "diapré",
  "ébranché",
  "écervelé",
  "effréné",
  "effronté",
  "éhonté",
  "embourgeoisé",
  "embroussaillé",
  "embruiné",
  "émerillonné",
  "encalminé",
  "encaustiqué",
  "encorné",
  "endiablé",
  "endiamanté",
  "enfoiré",
  "enfouraillé",
  "ensellé",
  "entrelardé",
  "éploré",
  "ergoté",
  "erroné",
  "étagé",
  "éthéré",
  "éversé",
  "éwé",
  "ex-associé",
  "exorbité",
  "expansé",
  "famé",
  "férié",
  "fibré",
  "filoguidé",
  "flammé",
  "fleurdelisé",
  "fliqué",
  "flûté",
  "forcené",
  "fortuné",
  "foulbé",
  "frelaté",
  "friqué",
  "futé",
  "gazonné",
  "gracieusé",
  "gradé",
  "granulé",
  "herminé",
  "hiérarchisé",
  "huppé",
  "hydrogéné",
  "igné",
  "illettré",
  "illimité",
  "imbriqué",
  "immaculé",
  "immérité",
  "immodéré",
  "immunodéprimé",
  "impayé",
  "impensé",
  "impollué",
  "imprononcé",
  "inaccoutumé",
  "inachevé",
  "inactivé",
  "inadapté",
  "inaltéré",
  "inanimé",
  "inapproprié",
  "inarticulé",
  "inavoué",
  "inchangé",
  "inconditionné",
  "inconsidéré",
  "inconsolé",
  "incontesté",
  "incontrôlé",
  "incréé",
  "indéfriché",
  "indéterminé",
  "indifférencié",
  "indiscipliné",
  "indiscuté",
  "indivisé",
  "indompté",
  "inébranlé",
  "inemployé",
  "inentamé",
  "inespéré",
  "inexpérimenté",
  "inexpliqué",
  "inexploité",
  "inexploré",
  "inexprimé",
  "infondé",
  "informulé",
  "infortuné",
  "inhabité",
  "inimité",
  "injustifié",
  "inné",
  "innommé",
  "inoccupé",
  "inopiné",
  "inorganisé",
  "inoublié",
  "insensé",
  "insoupçonné",
  "instantané",
  "insubordonné",
  "insurpassé",
  "intentionné",
  "interallié",
  "intouché",
  "inusité",
  "inutilisé",
  "invertébré",
  "inviolé",
  "iodé",
  "irraisonné",
  "irréalisé",
  "lacté",
  "lamé",
  "lamifié",
  "larvé",
  "laryngé",
  "léopardé",
  "lettré",
  "lié",
  "lifté",
  "losangé",
  "luné",
  "lunetté",
  "madré",
  "maillé",
  "malaisé",
  "malavisé",
  "maléficié",
  "malfamé",
  "malformé",
  "malintentionné",
  "mendé",
  "ménopausé",
  "mentholé",
  "mi-accablé",
  "mi-allongé",
  "mi-café",
  "mi-consterné",
  "mi-enterré",
  "mi-étonné",
  "mi-pincé",
  "mi-terrorisé",
  "miellé",
  "millimétré",
  "miraculé",
  "momentané",
  "monoclé",
  "monté",
  "mordoré",
  "mort-né",
  "névrosé",
  "nitré",
  "non-initié",
  "nouveau-né",
  "olé-olé",
  "ongulé",
  "paillé",
  "palé",
  "papilionacé",
  "paqueté",
  "paraffiné",
  "passé",
  "pasteurisé",
  "patenté",
  "paysagé",
  "pédonculé",
  "pestiféré",
  "platiné",
  "pocheté",
  "polychromé",
  "poplité",
  "potelé",
  "pourpré",
  "praliné",
  "précité",
  "prédigéré",
  "préencollé",
  "préfabriqué",
  "prématuré",
  "premier-né",
  "préprogrammé",
  "prostré",
  "protéiné",
  "pyramidé",
  "quadrilobé",
  "racé",
  "re-café",
  "re-rêvé",
  "re-vérifié",
  "rebarré",
  "redécoré",
  "relargué",
  "remonté",
  "rentré",
  "résiné",
  "ressuscité",
  "réticulé",
  "retourné",
  "revérifié",
  "revivifié",
  "rose-thé",
  "safrané",
  "satiné",
  "saumoné",
  "sébacé",
  "sensé",
  "sexué",
  "sigillé",
  "silicosé",
  "simultané",
  "sinistré",
  "soufré",
  "sous-cutané",
  "sous-développé",
  "sous-qualifié",
  "soussigné",
  "spiralé",
  "spontané",
  "stratifié",
  "sulfaté",
  "sulfuré",
  "sulfurisé",
  "suractivé",
  "suranné",
  "surbooké",
  "surbrodé",
  "surdéveloppé",
  "surdimensionné",
  "surdoué",
  "surentraîné",
  "suroxygéné",
  "surpeuplé",
  "surqualifié",
  "susmentionné",
  "susnommé",
  "systématisé",
  "tarabiscoté",
  "taupé",
  "thrombosé",
  "tiercé",
  "timoré",
  "tiqueté",
  "transcutané",
  "triphasé",
  "usagé",
  "usité",
  "vallonné",
  "vanillé",
  "vascularisé",
  "veinulé",
  "venté",
  "vergé",
  "vert-de-grisé",
  "vertébré",
  "vitaminé",
  "vulcanisé",
  "zélé"
], sKe = ["à-côté", "abbé", "absurdité", "accessibilité", "acerbité", "acidité", "acmé", "acné", "âcreté", "activité", "actualité", "acuité", "adaptabilité", "adiposité", "admissibilité", "adversité", "affabilité", "affectivité", "affidé", "affinité", "agilité", "agressivité", "alacrité", "alcalinité", "altérité", "amabilité", "ambiguïté", "amé", "aménité", "américanité", "amirauté", "amitié", "amoralité", "ancestralité", "ancienneté", "anfractuosité", "angulosité", "animalité", "animosité", "anormalité", "anti-acné", "anti-cité", "anti-criminalité", "anti-gravité", "anti-intimité", "anti-société", "antigravité", "antiquité", "anxiété", "aparté", "applicabilité", "âpreté", "archevêché", "aridité", "artificialité", "asexualité", "asociabilité", "aspérité", "assiduité", "astarté", "atrocité", "austérité", "authenticité", "autodafé", "autorité", "avé", "aveugle-né", "avidité", "ébriété", "effectivité", "efficacité", "égalité", "élasticité", "électricité", "élément-clé", "élémentarité", "éligibilité", "émotivité", "empaffé", "énormité", "entièreté", "entité", "enviandé", "épitomé", "équanimité", "équité", "étanchéité", "éternité", "ethnicité", "étrangéité", "étrangeté", "euromarché", "évêché", "éventualité", "ex-abbé", "ex-fiancé", "excentricité", "exclusivité", "exemplarité", "exhaustivité", "exiguïté", "extériorité", "externalité", "exterritorialité", "extrémité", "idée-clé", "identité", "illégalité", "illégitimité", "imbécillité", "immatérialité", "immaturité", "immédiateté", "immensité", "immobilité", "immoralité", "immortalité", "immuabilité", "immunité", "immutabilité", "impalpabilité", "impartialité", "impassibilité", "impeccabilité", "impécuniosité", "impénétrabilité", "imperméabilité", "impersonnalité", "impétuosité", "impiété", "implacabilité", "impopularité", "impossibilité", "impraticabilité", "imprévisibilité", "improbabilité", "impudicité", "impulsivité", "impunité", "impureté", "inaccessibilité", "inactivité", "inanité", "inauthenticité", "incapacité", "incommodité", "incommunicabilité", "incompatibilité", "incongruité", "incorruptibilité", "incrédibilité", "incrédulité", "incuriosité", "indemnité", "indestructibilité", "indignité", "indisponibilité", "individualité", "indivisibilité", "indocilité", "industrie-clé", "inefficacité", "inégalité", "inéligibilité", "inéluctabilité", "inévitabilité", "inexorabilité", "infaillibilité", "infécondité", "infériorité", "infertilité", "infidélité", "infinité", "infirmité", "inflammabilité", "inflexibilité", "ingéniosité", "ingénuité", "inhospitalité", "inhumanité", "inimitié", "iniquité", "innocuité", "inopportunité", "insalubrité", "insanité", "insécurité", "insensibilité", "inséparabilité", "insincérité", "insipidité", "insonorité", "instabilité", "instantanéité", "insularité", "intangibilité", "intégralité", "intégrité", "intelligibilité", "intemporalité", "intensité", "intentionnalité", "interactivité", "intériorité", "intimité", "intrépidité", "inusabilité", "inutilité", "invalidité", "inventivité", "invincibilité", "inviolabilité", "invisibilité", "invulnérabilité", "irrationalité", "irréalité", "irrecevabilité", "irrégularité", "irréligiosité", "irresponsabilité", "irréversibilité", "irrévocabilité", "irritabilité", "obésité", "objectivité", "obliquité", "obscénité", "obscurité", "obséquiosité", "officialité", "oiseau-clé", "oisiveté", "okoumé", "onctuosité", "opacité", "opiniâtreté", "opportunité", "oralité", "originalité", "ubiquité", "ukulélé", "unanimité", "unicité", "uniformité", "unilatéralité", "unité", "universalité", "université", "urbanité", "utilité", "yé-yé", "yéyé", "achillée", "almée", "aménorrhée", "année", "anti-nausée", "apnée", "apogée", "araignée", "arrière-pensée", "assiettée", "athénée", "auloffée", "aveugle-née", "avrillée", "azalée", "échauffourée", "écuellée", "élysée", "embardée", "empyrée", "épée", "épopée", "étuvée", "ex-allée", "ex-dulcinée", "ex-fiancée", "ex-lycée", "idée", "ipomée", "odyssée", "onomatopée", "orchidée", "orée", "orphée", "urée"], oKe = ["banalité", "bas-côté", "beaupré", "beauté", "bébé", "bédé", "bénédicité", "bénignité", "bestialité", "bien-fondé", "biodiversité", "bipolarité", "bisexualité", "blé", "bonté", "bout-rimé", "bovidé", "brièveté", "brutalité", "caducité", "café", "callosité", "camélidé", "canapé", "capacité", "capillarité", "captivité", "carte-clé", "caté", "catholicité", "causalité", "causticité", "cavité", "cécité", "célébrité", "célérité", "cérébralité", "cétacé", "charité", "chassé-croisé", "chasteté", "cherté", "chétivité", "chimpanzé", "chrétienté", "ciné", "cinéma-vérité", "circularité", "citoyenneté", "civilité", "clandé", "clandestinité", "clarté", "clé", "clergé", "co-propriété", "coaccusé", "cochonceté", "code-clé", "collectivité", "collégialité", "combativité", "comestibilité", "comité", "commodité", "communauté", "communicabilité", "compacité", "comparabilité", "compatibilité", "compétitivité", "complémentarité", "complexité", "complicité", "comptabilité", "comté", "concavité", "condé", "conductibilité", "conductivité", "confidentialité", "conformité", "confraternité", "congé", "conjugalité", "connectivité", "consanguinité", "constitutionnalité", "contiguïté", "continuité", "contrariété", "contre-gré", "contre-plaqué", "contre-vérité", "contreplaqué", "contrevérité", "convexité", "convivialité", "coopé", "copropriété", "cordialité", "coré", "coriacité", "corporalité", "côté", "créativité", "crédibilité", "crédulité", "crétacé", "criminalité", "cruauté", "crudité", "culpabilité", "cupidité", "curiosité", "cybercafé", "cyprinidé", "dangerosité", "daphné", "dé", "débotté", "décimalité", "décision-clé", "déclivité", "déductibilité", "défectuosité", "degré", "déité", "déloyauté", "demi-clarté", "demi-degré", "demi-liberté", "demi-obscurité", "demi-vérité", "dénatalité", "densité", "député", "dératé", "dernier-né", "désirabilité", "dextérité", "difficulté", "difformité", "dignité", "discontinuité", "disparité", "disponibilité", "diversité", "divinité", "docilité", "domesticité", "doyenné", "dualité", "duché", "duplicité", "durabilité", "dureté", "faculté", "faillibilité", "faisabilité", "familiarité", "fatalité", "fatuité", "fausseté", "fébrilité", "fécondité", "félidé", "félinité", "féminité", "féodalité", "fermeté", "férocité", "ferté", "fertilité", "festivité", "fétidité", "fiabilité", "fibrillé", "fidélité", "fierté", "finalité", "fiscalité", "fixité", "flaccidité", "flatuosité", "flexibilité", "flexuosité", "flottabilité", "fluidité", "fonctionnalité", "formalité", "fossé", "fragilité", "francité", "fraternité", "friabilité", "frigidité", "frilosité", "fringillidé", "frivolité", "frugalité", "fugacité", "furtivité", "futilité", "gaieté", "gaîté", "gallinacé", "gémellité", "généralité", "générosité", "génialité", "génitalité", "germanité", "gibbosité", "globalité", "godemiché", "gracieuseté", "gracilité", "grand-duché", "granité", "gratuité", "gravidité", "gré", "grossièreté", "habileté", "habitabilité", "haute-fidélité", "henné", "hérédité", "hétérogénéité", "hétérosexualité", "hilarité", "histocompatibilité", "historicité", "homme-clé", "homogénéité", "homosexualité", "honnêteté", "honorabilité", "horizontalité", "hospitalité", "hostilité", "humanité", "humidité", "humilité", "hyperacidité", "hyperactivité", "hypercoagulabilité", "hyperémotivité", "hypermarché", "hyperréactivité", "hypersensibilité", "jovialité", "joyeuseté", "jubé", "judaïcité", "judaïté", "judéité", "juvénilité", "karaoké", "karaté", "karité", "kiné", "koré", "lâcheté", "laïcité", "lamedé", "lascivité", "latéralité", "latinité", "laubé", "laxité", "lé", "légalité", "légèreté", "légitimité", "lèse-majesté", "létalité", "lettre-clé", "libéralité", "liberté", "licéité", "limpidité", "liquidité", "lisibilité", "littéralité", "lividité", "localité", "longanimité", "longévité", "loquacité", "loyauté", "lubricité", "lucidité", "luminosité", "macramé", "magnanimité", "majesté", "majorité", "mal-aimé", "mal-baisé", "malhonnêteté", "malignité", "malinké", "malléabilité", "malpropreté", "maniabilité", "manoeuvrabilité", "marginalité", "masculinité", "maskinongé", "massivité", "matérialité", "maternité", "matité", "maturité", "mauvaiseté", "méchanceté", "médiocrité", "médiumnité", "mémé", "mémorabilité", "mendicité", "mensualité", "mentalité", "merveillosité", "méticulosité", "mi-capacité", "mi-été", "mi-meublé", "mi-porté", "mi-réalité", "mi-résigné", "miché", "microgravité", "minorité", "mitoyenneté", "mixité", "mobilité", "mocheté", "modalité", "modernité", "modicité", "moment-clé", "mondanité", "monstruosité", "mont-de-piété", "monumentalité", "mooré", "moralité", "morbidité", "morosité", "mortalité", "mot-clé", "motilité", "motricité", "mousmé", "mucosité", "multiplicité", "multipropriété", "municipalité", "musicalité", "mutabilité", "mutité", "mutualité", "naïveté", "narghilé", "narguilé", "natalité", "nationalité", "nativité", "navigabilité", "nébulosité", "négativité", "néné", "nervosité", "nescafé", "netteté", "neutralité", "névé", "niakoué", "niébé", "nocivité", "non-conformité", "non-culpabilité", "nordicité", "normalité", "notabilité", "notoriété", "nouveauté", "nouvelleté", "nubilité", "nudité", "nue-propriété", "nullité", "nuptialité", "papauté", "papé", "parenté", "parité", "partialité", "particularité", "passiveté", "passivité", "pâté", "paternité", "pause-café", "pauses-café", "pauvreté", "pédé", "pédégé", "pénalité", "pépé", "pérennité", "perfectibilité", "périodicité", "perméabilité", "permissivité", "péroné", "perpétuité", "perplexité", "perré", "personnage-clé", "personnalité", "perspicacité", "perversité", "pèse-bébé", "petit-salé", "photosensibilité", "phrase-clé", "pilosité", "pisé", "pitié", "placidité", "plasticité", "plausibilité", "pluralité", "pluviosité", "point-clé", "poiré", "poire-vérité", "polarité", "polycopié", "polytonalité", "ponctualité", "pongé", "popularité", "porosité", "portabilité", "porte-bébé", "porte-clé", "position-clé", "positivité", "possessivité", "possibilité", "poste-clé", "postérité", "potentialité", "pousse-café", "pré", "pré-salé", "précarité", "préciosité", "précocité", "prématurité", "prévisibilité", "prévôté", "prieuré", "primauté", "principauté", "priorité", "privauté", "probabilité", "probité", "prodigalité", "productivité", "profitabilité", "prolixité", "promiscuité", "proportionnalité", "propreté", "propriété", "prospérité", "proximité", "psyché", "puberté", "publicité", "pudicité", "puérilité", "pugnacité", "puîné", "pureté", "pusillanimité", "qualité", "quantité", "quarté", "quasi-impossibilité", "quasi-impunité", "quasi-nudité", "quasi-totalité", "quasi-unanimité", "question-clé", "quinté", "quotidienneté", "quotité", "radioactivité", "raisiné", "rapacité", "raphé", "rapidité", "rareté", "rationalité", "raucité", "ré", "réactivité", "réalité", "récépissé", "réceptivité", "recevabilité", "réciprocité", "récré", "régularité", "relativité", "religiosité", "rentabilité", "reportage-vérité", "respectabilité", "responsabilité", "réversibilité", "rigidité", "risibilité", "rivalité", "romanité", "rotondité", "roulé-boulé", "royauté", "rugosité", "rusticité", "sagacité", "saint-honoré", "sainteté", "saké", "salacité", "saleté", "salinité", "salmonidé", "salubrité", "santé", "sapidité", "satiété", "sauveté", "scène-clé", "scientificité", "scissiparité", "scolarité", "scrupulosité", "sécurité", "sédentarité", "sélectivité", "semi-liberté", "séné", "sénevé", "sénilité", "sensibilité", "sensorialité", "sensualité", "sentimentalité", "septicité", "sérénité", "sergé", "séropositivité", "sérosité", "serviabilité", "servilité", "sévérité", "sexualité", "similarité", "simplicité", "simultanéité", "sincérité", "singularité", "sinuosité", "sobriété", "sociabilité", "société", "solennité", "solidarité", "solidité", "solubilité", "soluté", "solvabilité", "sommité", "somptuosité", "sonorité", "sordidité", "sororité", "soudaineté", "sous-comité", "sous-humanité", "souveraineté", "spasticité", "spécialité", "spécificité", "sphéricité", "spiritualité", "spontanéité", "sportivité", "spumosité", "stabilité", "sténopé", "stérilité", "stupidité", "suavité", "subjectivité", "sublimité", "subtilité", "succédané", "suggestibilité", "suggestivité", "superficialité", "superfluité", "supériorité", "supermarché", "supraconductivité", "suractivité", "surcapacité", "surdité", "sûreté", "surgé", "surhumanité", "surintensité", "surréalité", "susceptibilité", "suzeraineté", "synthé", "taboulé", "taciturnité", "tamouré", "tangibilité", "tarpé", "technicité", "télé", "témérité", "témoin-clé", "temporalité", "ténacité", "tendreté", "ténébrionidé", "ténuité", "territorialité", "tévé", "thé", "théâtralité", "tiaré", "timidité", "tollé", "tonalité", "tonicité", "totalité", "toxicité", "traçabilité", "tranquillité", "translucidité", "transsexualité", "trinité", "trivialité", "tsé-tsé", "tubérosité", "turbé", "vacuité", "vahiné", "validité", "vanité", "variabilité", "variété", "vassalité", "vastité", "velléité", "vélocité", "vénalité", "vénusté", "véracité", "verbosité", "vérité", "versatilité", "verticalité", "vétusté", "viabilité", "vicinalité", "vicomté", "viduité", "virginité", "virilité", "virtualité", "virtuosité", "viscosité", "visibilité", "vitalité", "vivacité", "volatilité", "volonté", "volubilité", "volupté", "voracité", "vulgarité", "vulnérabilité", "batée", "becquée", "billevesée", "bolée", "bondrée", "borée", "bouée", "bougainvillée", "brouettée", "buée", "caducée", "canne-épée", "casserolée", "cavée", "centaurée", "cépée", "céphalée", "charretée", "chaudronnée", "chicorée", "chorée", "cochlée", "cochonnée", "colée", "contre-allée", "contre-plongée", "corvée", "coryphée", "cucurbitacée", "cuillerée", "culée", "cylindrée", "demi-journée", "demi-volée", "denrée", "dernière-née", "diarrhée", "diatomée", "dionée", "dragée", "dulcinée", "dysménorrhée", "dyspnée", "fée", "feuillée", "flopée", "fournée", "fricassée", "friselée", "galathée", "galée", "giboulée", "giroflée", "gonorrhée", "goulée", "graminée", "guinée", "gynécée", "haquenée", "hottée", "hyménée", "hyperborée", "hypogée", "journée", "lance-fusée", "litée", "logorrhée", "lycée", "macchabée", "mainlevée", "maisonnée", "mal-aimée", "mal-baisée", "maréchaussée", "marée", "mausolée", "mélopée", "mi-effrontée", "mi-journée", "miellée", "mijaurée", "mosquée", "moteur-fusée", "muflée", "nausée", "nuée", "nuitée", "panacée", "pâtée", "peignée", "pelletée", "pépée", "périgée", "périnée", "pharmacopée", "pipée", "platée", "pochetée", "pochetée", "poignée", "poirée", "poisson-épée", "porte-épée", "potée", "poupée", "première-née", "prérentrée", "presse-purée", "prytanée", "purée", "quasi-fiancée", "ramée", "raz-de-marée", "resucée", "rétrofusée", "rez-de-chaussée", "risée", "ruchée", "scarabée", "séborrhée", "sigisbée", "simagrée", "singe-araignée", "soirée", "solanacée", "tablée", "tinée", "trachée", "trâlée", "transfusée", "travée", "trépanée", "trochée", "trophée", "vallée", "ventrée", "vesprée"], dKe = ["bé", "cré", "crédié", "é", "loucedé", "eussé", "hé", "malgré", "moitié-moitié", "ohé", "olé", "ollé", "sacrédié", "d'emblée", "quasi-instantanée"];
Object.defineProperty(ak, "__esModule", {
  value: !0
});
var Vn = I, lKe = Ui, cKe = Rd(lKe), uKe = fr, pKe = Rd(uKe), mKe = $t, Z4 = Rd(mKe), gKe = di, zKe = Rd(gKe), fKe = ek, yKe = Rd(fKe);
function Rd(a) {
  return a && a.__esModule ? a : { default: a };
}
var zp = (0, yKe.default)();
const wKe = zp.adjectivesVerbs, hKe = zp.nounsStartingWithVowel, bKe = zp.nounsStartingWithConsonant, vKe = zp.others;
var $n = function(e, t, i) {
  Z4.default.call(this, e, t, i), zKe.default.call(this);
};
Pa.inherits($n, Z4.default);
var kKe = function() {
  if (this.getType() === "irregular")
    return !0;
};
$n.prototype.isPassive = function() {
  const a = this.getSentencePart(), e = this.getParticiple(), t = this.getLanguage();
  return kKe.call(this) ? !this.directPrecedenceException(a, e, t) && !this.precedenceException(a, e, t) : !this.isOnAdjectivesVerbsExceptionList() && !this.isOnNounsExceptionList() && !this.isOnOthersExceptionList() && !this.directPrecedenceException(a, e, t) && !this.precedenceException(a, e, t);
};
var _Ke = (0, Vn.memoize)(function() {
  const a = [];
  return (0, Vn.forEach)(wKe, function(e) {
    a.push(new RegExp("^" + e + "(e|s|es)?$", "ig"));
  }), a;
}), $Ke = (0, Vn.memoize)(function() {
  const a = [];
  return (0, Vn.forEach)(hKe, function(e) {
    a.push(new RegExp("^(l'|d')?" + e + "(s)?$", "ig"));
  }), (0, Vn.forEach)(bKe, function(e) {
    a.push(new RegExp("^" + e + "(s)?$", "ig"));
  }), a;
}), X4 = function(e) {
  var t = this.getParticiple(), i = [];
  return (0, Vn.forEach)(e, function(n) {
    var r = t.match(n);
    r && i.push(r[0]);
  }), i.length > 0;
};
$n.prototype.isOnAdjectivesVerbsExceptionList = function() {
  var a = _Ke();
  return X4.call(this, a);
};
$n.prototype.isOnNounsExceptionList = function() {
  var a = $Ke();
  return X4.call(this, a);
};
$n.prototype.isOnOthersExceptionList = function() {
  return (0, Vn.includes)(vKe, this.getParticiple());
};
$n.prototype.directPrecedenceException = cKe.default;
$n.prototype.precedenceException = pKe.default;
ak.default = $n;
var tk = {};
Object.defineProperty(tk, "__esModule", {
  value: !0
});
var jKe = $t, J4 = fp(jKe), xKe = di, AKe = fp(xKe), EKe = Ui, SKe = fp(EKe), qKe = fr, PKe = fp(qKe);
function fp(a) {
  return a && a.__esModule ? a : { default: a };
}
var Od = function(e, t, i) {
  J4.default.call(this, e, t, i), AKe.default.call(this);
};
Pa.inherits(Od, J4.default);
Od.prototype.isPassive = function() {
  const a = this.getSentencePart(), e = this.getParticiple(), t = this.getLanguage();
  return !this.directPrecedenceException(a, e, t) && !this.precedenceException(a, e, t);
};
Od.prototype.directPrecedenceException = SKe.default;
Od.prototype.precedenceException = PKe.default;
tk.default = Od;
var ik = {};
Object.defineProperty(ik, "__esModule", {
  value: !0
});
var TKe = $t, Q4 = yp(TKe), RKe = di, OKe = yp(RKe), MKe = Ui, CKe = yp(MKe), LKe = fr, IKe = yp(LKe);
function yp(a) {
  return a && a.__esModule ? a : { default: a };
}
var Md = function(e, t, i) {
  Q4.default.call(this, e, t, i), OKe.default.call(this);
};
Pa.inherits(Md, Q4.default);
Md.prototype.isPassive = function() {
  const a = this.getSentencePart(), e = this.getParticiple(), t = this.getLanguage();
  return !this.directPrecedenceException(a, e, t) && !this.precedenceException(a, e, t);
};
Md.prototype.directPrecedenceException = CKe.default;
Md.prototype.precedenceException = IKe.default;
ik.default = Md;
var nk = {};
Object.defineProperty(nk, "__esModule", {
  value: !0
});
var WKe = I, FKe = $t, aB = wp(FKe), DKe = di, BKe = wp(DKe), NKe = zu, UKe = wp(NKe), HKe = Ui, VKe = wp(HKe);
function wp(a) {
  return a && a.__esModule ? a : { default: a };
}
const Is = function(e, t, i) {
  aB.default.call(this, e, t, i), BKe.default.call(this);
};
Pa.inherits(Is, aB.default);
Is.prototype.isPassive = function() {
  const a = this.getSentencePart(), e = this.getParticiple(), t = this.getLanguage();
  return !this.isOnNonParticiplesList() && !this.hasNonParticipleEnding() && !this.directPrecedenceException(a, e, t);
};
Is.prototype.isOnNonParticiplesList = function() {
  return this.getType() === "irregular" ? !1 : (0, WKe.includes)((0, UKe.default)(), this.getParticiple());
};
Is.prototype.hasNonParticipleEnding = function() {
  return /\S+(heid|teit|tijd)($|[ \n\r\t.,'()"+\-;!?:/»«‹›<>])/ig.test(this.getParticiple());
};
Is.prototype.directPrecedenceException = VKe.default;
nk.default = Is;
var rk = {}, sk = {}, hp = {};
Object.defineProperty(hp, "__esModule", {
  value: !0
});
hp.default = function(a, e) {
  const t = [];
  for (let i = e.exec(a); i !== null; i = e.exec(a))
    t.push({
      match: i[0],
      index: i.index
    });
  return t;
};
var De = {};
Object.defineProperty(De, "__esModule", {
  value: !0
});
De.getIndicesByWordListSorted = De.sortIndices = De.filterIndices = De.getIndicesByWordList = De.getIndicesByWord = void 0;
var ok = I, KKe = be, eB = GKe(KKe), rc = sn;
function GKe(a) {
  return a && a.__esModule ? a : { default: a };
}
function bp(a, e) {
  for (var t = 0, i = a.length, n, r = []; (n = e.indexOf(a, t)) > -1; ) {
    var s = (0, rc.characterInBoundary)(e[n - 1]) || n === 0, o = (0, rc.characterInBoundary)(e[n + i]) || e.length === n + i;
    s && o && r.push({
      index: n,
      match: a
    }), t = n + i;
  }
  return r;
}
var tB = function(e, t) {
  var i = [];
  return (0, ok.forEach)(e, function(n) {
    n = (0, eB.default)(n), (0, rc.isWordInSentence)(n, t) && (i = i.concat(bp(n, t)));
  }), i;
}, dk = function(e) {
  return e.sort(function(t, i) {
    return t.index > i.index;
  });
}, iB = function(e) {
  e = dk(e);
  for (var t = [], i = 0; i < e.length; i++) {
    if (!(0, ok.isUndefined)(e[i + 1]) && e[i + 1].index < e[i].index + e[i].match.length) {
      t.push(e[i]), i++;
      continue;
    }
    t.push(e[i]);
  }
  return t;
}, nB = function(e, t) {
  var i = [];
  return (0, ok.forEach)(e, function(n) {
    if (n = (0, eB.default)(n), !(0, rc.isWordInSentence)(n, t))
      return i;
    i = i.concat(bp(n, t));
  }), i = i.sort(function(n, r) {
    return n.index < r.index ? -1 : n.index > r.index ? 1 : 0;
  }), i;
};
De.getIndicesByWord = bp;
De.getIndicesByWordList = tB;
De.filterIndices = iB;
De.sortIndices = dk;
De.getIndicesByWordListSorted = nB;
De.default = {
  getIndicesByWord: bp,
  getIndicesByWordList: tB,
  filterIndices: iB,
  sortIndices: dk,
  getIndicesByWordListSorted: nB
};
Object.defineProperty(sk, "__esModule", {
  value: !0
});
sk.default = function(a, e, t, i) {
  const n = (0, YKe.uniq)(t), r = (0, tGe.getIndicesByWordListSorted)(n, a), s = a.indexOf(e);
  let o;
  switch (i) {
    case "pl":
      o = (0, XKe.default)(iGe);
      break;
  }
  const d = r.filter((w) => w.index < s);
  if (d.length === 0)
    return !1;
  const c = d[d.length - 1];
  return (0, QKe.default)(a, o).filter((w) => w.index > c.index && w.index < s).length > 0;
};
var YKe = I, ZKe = Wi, XKe = lk(ZKe), JKe = hp, QKe = lk(JKe), aGe = ed, eGe = lk(aGe), tGe = De;
function lk(a) {
  return a && a.__esModule ? a : { default: a };
}
const iGe = (0, eGe.default)().cannotBeBetweenPassiveAuxiliaryAndParticiple;
Object.defineProperty(rk, "__esModule", {
  value: !0
});
var nGe = $t, rB = vp(nGe), rGe = di, sGe = vp(rGe), oGe = Ui, dGe = vp(oGe), lGe = sk, cGe = vp(lGe);
function vp(a) {
  return a && a.__esModule ? a : { default: a };
}
const Cd = function(e, t, i) {
  rB.default.call(this, e, t, i), sGe.default.call(this);
};
Pa.inherits(Cd, rB.default);
Cd.prototype.isPassive = function() {
  const a = this.getSentencePart(), e = this.getParticiple(), t = this.getAuxiliaries(), i = this.getLanguage();
  return !this.directPrecedenceException(a, e, i) && !this.nonDirectPrecedenceException(a, e, t, i);
};
Cd.prototype.directPrecedenceException = dGe.default;
Cd.prototype.nonDirectPrecedenceException = cGe.default;
rk.default = Cd;
var ck = {};
Object.defineProperty(ck, "__esModule", {
  value: !0
});
var uGe = $t, sB = kp(uGe), pGe = di, mGe = kp(pGe), gGe = Ui, zGe = kp(gGe), fGe = fr, yGe = kp(fGe);
function kp(a) {
  return a && a.__esModule ? a : { default: a };
}
const Ld = function(e, t, i) {
  sB.default.call(this, e, t, i), mGe.default.call(this);
};
Pa.inherits(Ld, sB.default);
Ld.prototype.isPassive = function() {
  const a = this.getSentencePart(), e = this.getParticiple(), t = this.getLanguage();
  return !this.directPrecedenceException(a, e, t) && !this.precedenceException(a, e, t);
};
Ld.prototype.directPrecedenceException = zGe.default;
Ld.prototype.precedenceException = yGe.default;
ck.default = Ld;
Object.defineProperty(oi, "__esModule", {
  value: !0
});
oi.default = function(a, e, t) {
  const i = (0, bGe.default)(a), n = [];
  return (0, wGe.forEach)(i, function(r) {
    let s = "";
    if (LGe(r, t).length !== 0 && (s = "regular"), IGe(r, t).length !== 0 && (s = "irregular"), s !== "")
      switch (t) {
        case "fr":
          n.push(new xGe.default(r, a, { auxiliaries: e, type: s, language: t }));
          break;
        case "es":
          n.push(new EGe.default(r, a, { auxiliaries: e, type: s, language: t }));
          break;
        case "it":
          n.push(new qGe.default(r, a, { auxiliaries: e, type: s, language: t }));
          break;
        case "nl":
          n.push(new TGe.default(r, a, { auxiliaries: e, type: s, language: t }));
          break;
        case "pl":
          n.push(new OGe.default(r, a, { auxiliaries: e, type: s, language: t }));
          break;
        case "pt":
          n.push(new CGe.default(r, a, { auxiliaries: e, type: s, language: t }));
          break;
        case "en":
        default:
          n.push(new $Ge.default(r, a, { auxiliaries: e, type: s, language: t }));
          break;
      }
  }), n;
};
var wGe = I, hGe = se, bGe = Hi(hGe), vGe = Dv, kGe = Hi(vGe), _Ge = Zv, $Ge = Hi(_Ge), jGe = ak, xGe = Hi(jGe), AGe = tk, EGe = Hi(AGe), SGe = ik, qGe = Hi(SGe), PGe = nk, TGe = Hi(PGe), RGe = rk, OGe = Hi(RGe), MGe = ck, CGe = Hi(MGe);
function Hi(a) {
  return a && a.__esModule ? a : { default: a };
}
const oB = (0, kGe.default)(), LGe = oB.regularParticiples, IGe = oB.irregularParticiples;
var _p = {}, uk = {};
Object.defineProperty(uk, "__esModule", {
  value: !0
});
uk.default = function() {
  return [
    "angefangen",
    "aufgerissen",
    "ausgesehen",
    "befohlen",
    "befunden",
    "begonnen",
    "bekommen",
    "bewiesen",
    "beworben",
    "empfohlen",
    "empfunden",
    "entschieden",
    "erschrocken",
    "erwogen",
    "gebacken",
    "gebeten",
    "gebissen",
    "geblasen",
    "geblieben",
    "gebogen",
    "geboren",
    "geborgen",
    "geboten",
    "gebraten",
    "gebrochen",
    "gebunden",
    "gediehen",
    "gedroschen",
    "gedrungen",
    "gefahren",
    "gefallen",
    "gefangen",
    "geflogen",
    "geflohen",
    "geflossen",
    "gefressen",
    "gefroren",
    "gefunden",
    "gegangen",
    "gegeben",
    "gegessen",
    "geglichen",
    "geglitten",
    "gelungen",
    "gegolten",
    "gegoren",
    "gegossen",
    "gegraben",
    "gegriffen",
    "gehalten",
    "gehangen",
    "gehauen",
    "geheissen",
    "geheißen",
    "gehoben",
    "geholfen",
    "geklungen",
    "gekniffen",
    "gekommen",
    "gekrochen",
    "geladen",
    "gelassen",
    "gelaufen",
    "gelegen",
    "gelesen",
    "geliehen",
    "gelitten",
    "gelogen",
    "gelungen",
    "gemessen",
    "gemieden",
    "genesen",
    "genommen",
    "genossen",
    "gepfiffen",
    "gepriesen",
    "gequollen",
    "geraten",
    "gerieben",
    "gerissen",
    "geritten",
    "gerochen",
    "geronnen",
    "gerufen",
    "gerungen",
    "geschaffen",
    "geschehen",
    "geschieden",
    "geschienen",
    "geschlafen",
    "geschlagen",
    "geschlichen",
    "geschliffen",
    "geschlossen",
    "geschlungen",
    "geschmissen",
    "geschmolzen",
    "geschnitten",
    "geschoben",
    "gescholten",
    "geschoren",
    "geschossen",
    "geschrieben",
    "geschrien",
    "geschritten",
    "geschunden",
    "geschwiegen",
    "geschwollen",
    "geschwommen",
    "geschworen",
    "geschwunden",
    "geschwungen",
    "gesehen",
    "gesessen",
    "gesoffen",
    "gesonnen",
    "gespien",
    "gesponnen",
    "gesprochen",
    "gesprossen",
    "gesprungen",
    "gestanden",
    "gestiegen",
    "gestochen",
    "gestohlen",
    "gestorben",
    "gestoßen",
    "gestossen",
    "gestrichen",
    "gestritten",
    "gesungen",
    "gesunken",
    "getan",
    "getragen",
    "getreten",
    "getrieben",
    "getroffen",
    "getrogen",
    "getrunken",
    "gewachsen",
    "gewaschen",
    "gewichen",
    "gewiesen",
    "gewoben",
    "gewogen",
    "gewonnen",
    "geworben",
    "geworfen",
    "gewrungen",
    "gezogen",
    "gezwungen",
    "misslungen",
    "überbacken",
    "ueberbacken",
    "überbehalten",
    "ueberbehalten",
    "überbekommen",
    "ueberbekommen",
    "überbelegen",
    "ueberbelegen",
    "überbezahlen",
    "ueberbezahlen",
    "überboten",
    "ueberboten",
    "übergebunden",
    "uebergebunden",
    "überbunden",
    "ueberbunden",
    "überblasen",
    "ueberblasen",
    "überbraten",
    "ueberbraten",
    "übergebraten",
    "uebergebraten",
    // Participles ending in -st are not found with the regex to avoid second person singular verbs.
    "überbremst",
    "ueberbremst",
    "übergeblieben",
    "uebergeblieben",
    "übereinandergelegen",
    "uebereinandergelegen",
    "übereinandergeschlagen",
    "uebereinandergeschlagen",
    "übereinandergesessen",
    "uebereinandergesessen",
    "übereinandergestanden",
    "uebereinandergestanden",
    "übereingefallen",
    "uebereingefallen",
    "übereingekommen",
    "uebereingekommen",
    "übereingetroffen",
    "uebereingetroffen",
    "übergefallen",
    "uebergefallen",
    "übergessen",
    "uebergessen",
    "überfahren",
    "ueberfahren",
    "übergefahren",
    "uebergefahren",
    "überfallen",
    "ueberfallen",
    "überfangen",
    "ueberfangen",
    "überflogen",
    "ueberflogen",
    "überflossen",
    "ueberflossen",
    "übergeflossen",
    "uebergeflossen",
    "überfressen",
    "ueberfressen",
    "überfroren",
    "ueberfroren",
    "übergegeben",
    "uebergegeben",
    "übergeben",
    "uebergeben",
    "übergegangen",
    "uebergegangen",
    "übergangen",
    "uebergangen",
    "übergangen",
    "uebergangen",
    "übergossen",
    "uebergossen",
    "übergriffen",
    "uebergriffen",
    "übergegriffen",
    "uebergegriffen",
    "übergehalten",
    "uebergehalten",
    "überhandgenommen",
    "ueberhandgenommen",
    "überhangen",
    "ueberhangen",
    "übergehangen",
    "uebergehangen",
    "übergehoben",
    "uebergehoben",
    "überhoben",
    "ueberhoben",
    "überkommen",
    "ueberkommen",
    "übergekommen",
    "uebergekommen",
    "überladen",
    "ueberladen",
    "übergeladen",
    "uebergeladen",
    "überlassen",
    "ueberlassen",
    "übergelassen",
    "uebergelassen",
    "überlaufen",
    "ueberlaufen",
    "übergelaufen",
    "uebergelaufen",
    "überlesen",
    "ueberlesen",
    "übergelegen",
    "uebergelegen",
    "übergenommen",
    "uebergenommen",
    "übernommen",
    "uebernommen",
    "übergequollen",
    "uebergequollen",
    "überrissen",
    "ueberrissen",
    "überritten",
    "ueberritten",
    "übergeschossen",
    "uebergeschossen",
    "überschlafen",
    "ueberschlafen",
    "überschlagen",
    "ueberschlagen",
    "übergeschlagen",
    "uebergeschlagen",
    "übergeschlossen",
    "uebergeschlossen",
    "überschnitten",
    "ueberschnitten",
    "überschrieben",
    "ueberschrieben",
    "überschrieen",
    "ueberschrieen",
    "überschrien",
    "ueberschrien",
    "überschritten",
    "ueberschritten",
    "überschwungen",
    "ueberschwungen",
    "übergesehen",
    "uebergesehen",
    "übersehen",
    "uebersehen",
    "übergesotten",
    "uebergesotten",
    "übergesotten",
    "uebergesotten",
    "übersponnen",
    "uebersponnen",
    "übersprochen",
    "uebersprochen",
    "übersprungen",
    "uebersprungen",
    "übergesprungen",
    "uebergesprungen",
    "überstochen",
    "ueberstochen",
    "übergestochen",
    "uebergestochen",
    "überstanden",
    "ueberstanden",
    "übergestanden",
    "uebergestanden",
    "überstiegen",
    "ueberstiegen",
    "übergestiegen",
    "uebergestiegen",
    "übergestrichen",
    "uebergestrichen",
    "überstrichen",
    "ueberstrichen",
    "übertragen",
    "uebertragen",
    "übertroffen",
    "uebertroffen",
    "übertrieben",
    "uebertrieben",
    "übertreten",
    "uebertreten",
    "übergetreten",
    "uebergetreten",
    "überwachsen",
    "ueberwachsen",
    "überwiesen",
    "ueberwiesen",
    "überworfen",
    "ueberworfen",
    "übergeworfen",
    "uebergeworfen",
    "überwogen",
    "ueberwogen",
    "überwunden",
    "ueberwunden",
    "überzogen",
    "ueberzogen",
    "übergezogen",
    "uebergezogen",
    "verdorben",
    "vergessen",
    "verglichen",
    "verloren",
    "verstanden",
    "verschwunden",
    "vorgeschlagen"
  ];
};
var pk = {};
Object.defineProperty(pk, "__esModule", {
  value: !0
});
var WGe = $t, dB = mk(WGe), wT = De, FGe = cu, DGe = mk(FGe), BGe = gs, NGe = mk(BGe), sc = I;
function mk(a) {
  return a && a.__esModule ? a : { default: a };
}
const UGe = (0, DGe.default)(), HGe = (0, NGe.default)().participleLike, VGe = /\S+(apparat|arbeit|dienst|haft|halt|keit|kraft|not|pflicht|schaft|schrift|tät|wert|zeit)($|[ \n\r\t.,'()"+-;!?:/»«‹›<>])/ig, wr = function(e, t, i) {
  dB.default.call(this, e, t, i), this.setSentencePartPassiveness(this.isPassive());
};
Pa.inherits(wr, dB.default);
wr.prototype.isPassive = function() {
  return !this.hasNounSuffix() && !this.isInExceptionList() && !this.hasHabenSeinException() && !this.isAuxiliary();
};
wr.prototype.isInExceptionList = function() {
  return (0, sc.includes)(UGe, this.getParticiple());
};
wr.prototype.hasNounSuffix = function() {
  return this.getParticiple().match(VGe) !== null;
};
wr.prototype.hasHabenSeinException = function() {
  const a = (0, wT.getIndicesByWord)(this.getParticiple(), this.getSentencePart());
  let e = (0, wT.getIndicesByWordList)(["haben", "sein"], this.getSentencePart());
  if (a.length === 0 || e.length === 0)
    return !1;
  e = (0, sc.map)(e, "index");
  const t = a[0];
  return (0, sc.includes)(e, t.index + t.match.length + 1);
};
wr.prototype.isAuxiliary = function() {
  return (0, sc.includes)(HGe, this.getParticiple());
};
pk.default = wr;
Object.defineProperty(_p, "__esModule", {
  value: !0
});
_p.default = function(a, e, t) {
  var i = (0, GGe.default)(a), n = [];
  return (0, hT.forEach)(i, function(r) {
    if (eYe(r).length !== 0) {
      n.push(new Sr.default(r, a, { auxiliaries: e, type: "ge at beginning", language: t }));
      return;
    }
    if (tYe(r).length !== 0) {
      n.push(new Sr.default(r, a, { auxiliaries: e, type: "ge in the middle", language: t }));
      return;
    }
    if (aYe(r).length !== 0) {
      n.push(new Sr.default(r, a, { auxiliaries: e, type: "er/ver/ent/be/zer/her at beginning", language: t }));
      return;
    }
    if (iYe(r).length !== 0) {
      n.push(new Sr.default(r, a, { auxiliaries: e, type: "er/ver/ent/be/zer/her in the middle", language: t }));
      return;
    }
    nYe(r).length !== 0 && n.push(new Sr.default(r, a, { auxiliaries: e, type: "iert at the end", language: t })), (0, hT.includes)(rYe, r) && n.push(new Sr.default(r, a, { auxiliaries: e, type: "irregular", language: t }));
  }), n;
};
var KGe = se, GGe = $p(KGe), YGe = td, ZGe = $p(YGe), XGe = uk, JGe = $p(XGe), QGe = pk, Sr = $p(QGe), hT = I;
function $p(a) {
  return a && a.__esModule ? a : { default: a };
}
const Id = (0, ZGe.default)();
var aYe = Id.verbsBeginningWithErVerEntBeZerHerUber, eYe = Id.verbsBeginningWithGe, tYe = Id.verbsWithGeInMiddle, iYe = Id.verbsWithErVerEntBeZerHerUberInMiddle, nYe = Id.verbsEndingWithIert;
const rYe = (0, JGe.default)();
var jp = {};
Object.defineProperty(jp, "__esModule", {
  value: !0
});
jp.default = function() {
  return ["word", "wordt", "worden", "werd", "werden", "wordend"];
};
var xp = {};
Object.defineProperty(xp, "__esModule", {
  value: !0
});
xp.default = function() {
  return ["być", "jestem", "jesteś", "jest", "jesteśmy", "jesteście", "są", "byłam", "byłem", "byłeś", "byłaś", "był", "była", "było", "byłoby", "byliśmy", "byłyśmy", "byliście", "byłyście", "byli", "były", "będę", "będziesz", "będzie", "będziemy", "będziecie", "będą", "byłabym", "byłbym", "byłbyś", "byłabyś", "byłaby", "byłby", "bylibyśmy", "byłybyśmy", "bylibyście", "byłybyście", "byłby", "byłaby", "byliby", "byłyby", "zostać", "zostaje", "zostajesz", "zostaję", "zostajecie", "zostajemy", "zostają", "zostanę", "zostaniesz", "zostanie", "zostaniemy", "zostaniecie", "zostaną", "zostałem", "zostałam", "zostałaś", "zostałeś", "został", "została", "zostało", "zostaliśmy", "zostałyśmy", "zostaliście", "zostałyście", "zostali", "zostały", "zostałbym", "zostałabym", "zostałbyś", "zostałabyś", "zostałby", "zostałaby", "zostałybyśmy", "zostalibyśmy", "zostalibyście", "zostałybyście", "zostaliby", "zostałyby"];
};
var Ap = {}, gk = {};
Object.defineProperty(gk, "__esModule", {
  value: !0
});
gk.default = [
  // Participles ending in -re.
  "megvételre",
  "megrendezésre",
  "képzésre",
  "kifejezésre",
  "következtetésre",
  "fejlesztésre",
  "bevezetésre",
  "kezelésre",
  "ellenőrzésre",
  "elhelyezésre",
  "értékesítésre",
  "cselekvésre",
  "beépítésre",
  "intézkedésre",
  "kifizetésre",
  "működésre",
  "értékelésre",
  "egyeztetésre",
  "rögzítésre",
  "megjelenésre",
  "meghirdetésre",
  "fizetésre",
  "megbeszélésre",
  "bejelentésre",
  "bekezdésre",
  "közreműködésre",
  "teljesítésre",
  "elküldésre",
  "kivitelezésre",
  "kihirdetésre",
  "korszerűsítésre",
  "előterjesztésre",
  "üzemeltetésre",
  "szerződéskötésre",
  "visszafizetésre",
  "befektetésre",
  "minősítésre",
  "telepítésre",
  "megfigyelésre",
  "berendezésre",
  "megerősítésre",
  "megtekintésre",
  "feltüntetésre",
  "megkülönböztetésre",
  "befizetésre",
  "megszüntetésre",
  "kinevezésre",
  "előkészítésre",
  "felmentésre",
  "megszervezésre",
  "gyógykezelésre",
  "mérlegelésre",
  "végkielégítésre",
  "engedélyezésre",
  "kihelyezésre",
  "megsemmisítésre",
  "előrelépésre",
  "tenyésztésre",
  "elnevezésre",
  "befejezésre",
  "ismétlésre",
  "egyesülésre",
  "közvetítésre",
  "lekérdezésre",
  "szervezésre",
  "csökkentésre",
  "területfejlesztésre",
  "költségtérítésre",
  "felfüggesztésre",
  "frissítésre",
  "vámfizetésre",
  "kifejlesztésre",
  "elhelyezkedésre",
  "teremtésre",
  "megjelölésre",
  "töltésre",
  "kiegyenlítésre",
  "kifejtésre",
  "megépítésre",
  "átszervezésre",
  "termesztésre",
  "felemelkedésre",
  "átépítésre",
  "áremelésre",
  "áthelyezésre",
  "újjáépítésre",
  "megbecsülésre",
  "átültetésre",
  "visszaigénylésre",
  "feljegyzésre",
  "törlesztésre",
  "helyettesítésre",
  "követelésre",
  "érvelésre",
  "elkülönítésre",
  "átképzésre",
  "kiértékelésre",
  "térítésre",
  "továbbfejlesztésre",
  "ösztönzésre",
  "szerkesztésre",
  "megítélésre",
  "letöltésre",
  "selejtezésre",
  "segélyezésre",
  "érintkezésre",
  "emelkedésre",
  "megküldésre",
  "erősítésre",
  "felderítésre",
  "védésre",
  "elbeszélgetésre",
  "megemlítésre",
  "felépítésre",
  "megfejtésre",
  "mentesítésre",
  "előfizetésre",
  "megtervezésre",
  "szakképesítésre",
  "hitelesítésre",
  "megnevezésre",
  "érvényesítésre",
  "számonkérésre",
  "terjeszkedésre",
  "beterjesztésre",
  "összevetésre",
  "jogsértésre",
  "véglegesítésre",
  "kiküldetésre",
  "megörökítésre",
  "kivégzésre",
  "költözésre",
  "megtérülésre",
  "kézbesítésre",
  "közmegegyezésre",
  "idézésre",
  "kirekesztésre",
  "visszaesésre",
  "beszerelésre",
  "beültetésre",
  "kiterjesztésre",
  "kifüggesztésre",
  "leépítésre",
  "megismerkedésre",
  "végzésre",
  "részletfizetésre",
  "megfizetésre",
  "kiürítésre",
  "ízesítésre",
  "méregtelenítésre",
  "rendszerezésre",
  "felterjesztésre",
  "szemléltetésre",
  "megtermékenyítésre",
  "lekötésre",
  "kiegyezésre",
  "előrejelzésre",
  "ellenvetésre",
  "növelésre",
  "képesítésre",
  "beszedésre",
  "ellenjegyzésre",
  "áttelepítésre",
  "egységesítésre",
  "akadálymentesítésre",
  "előtörlesztésre",
  // Participles ending in -ra.
  "azonosításra",
  "aktiválásra",
  "hasznosításra",
  "foglalkoztatásra",
  "finanszírozásra",
  "megfinanszírozásra",
  "benyújtásra",
  "pontosításra",
  "forgalmazásra",
  "beszállításra",
  "felzárkózásra",
  "továbbításra",
  "differenciálásra",
  "folyósításra",
  "kiszállításra",
  "átcsoportosításra",
  "kártalanításra",
  "továbbgondolásra",
  "felzárkóztatásra",
  "megválaszolásra",
  "átállásra",
  "számlázásra",
  "fotózásra",
  "megvásárlásra",
  "felszámításra",
  "kiszámlázásra",
  "lehívásra",
  "leszámlázásra",
  "továbbjutásra",
  "szaporításra",
  "raktározásra",
  "kinyomtatásra",
  "reklámozásra",
  "újrahasznosításra",
  "archiválásra",
  "elővásárlásra",
  "visszautalásra",
  "létrehozásra",
  "tanúsításra",
  "ártalmatlanításra",
  "adományozásra",
  "kisorsolásra",
  "utalványozásra",
  "átgondolásra",
  "azonosulásra",
  "postázásra",
  "televíziózásra",
  "átsorolásra",
  "finomításra",
  "privatizálásra",
  "dokumentálásra",
  "beiskolázásra",
  "digitalizálásra",
  "újragondolásra",
  "aktualizálásra",
  "delegálásra",
  "pályáztatásra",
  "voksolásra",
  "felhordásra",
  "moderálásra",
  "áthaladásra",
  "gyámolításra",
  "lajstromozásra",
  "sokszorosításra",
  "elsajátításra",
  "szigorításra",
  "klónozásra",
  "elhatárolódásra",
  "elbontásra",
  "kiaknázásra",
  "befolyásolásra",
  "renoválásra",
  "kivárásra",
  "feliratozásra",
  "akkreditálásra",
  "parkosításra",
  "szakosodásra",
  "legyártásra",
  "továbbgondolkodásra",
  "magánosításra",
  "összehangolásra",
  "megvilágosodásra",
  "titkosításra",
  "integrálásra",
  "visszaadásra",
  "rangsorolásra",
  "kilábalásra",
  "szponzorálásra",
  "szankcionálásra",
  "modernizálásra",
  "leltározásra",
  "koordinálásra",
  "apostolkodásra",
  "definiálásra",
  "komposztálásra",
  "elvándorlásra",
  "átváltásra",
  "kódolásra",
  "naplózásra",
  "adagolásra",
  "megtámadásra",
  "exportálásra",
  "betáplálásra",
  "kompenzálásra",
  "kapaszkodásra",
  "áthallgatásra",
  "dedikálásra",
  "beindításra",
  "kimunkálásra",
  "hamisításra",
  "megigazulásra",
  "újratárgyalásra",
  "visszaszállításra",
  "megalapításra",
  "szabványosításra",
  "tartósításra",
  "meditálásra",
  "palackozásra",
  "bírságolásra",
  "listázásra",
  "liberalizálásra",
  "iskoláztatásra",
  "auditálásra",
  "monitorozásra",
  "visszapótlásra",
  "sugalmazásra",
  "kipostázásra",
  "előrejutásra",
  "gyarapításra",
  "visszaosztásra",
  "konzerválásra",
  "adóztatásra",
  "decentralizálásra",
  "diagnosztizálásra",
  "harmonizálásra",
  "konszolidálásra",
  "átszállításra",
  "realizálásra",
  "beazonosításra",
  "szelektálásra",
  "újraszabályozásra",
  "kihúzásra",
  "optimalizálásra",
  "bevizsgálásra",
  "kiválogatásra",
  "leosztásra",
  "szállítmányozásra",
  "torzításra",
  "visszaigazolásra",
  "visszaszolgáltatásra",
  "rehabilitálásra",
  "továbbtartásra",
  "darabolásra",
  "felhasználásra",
  "bemutatásra",
  "ellátásra",
  "felújításra",
  "kialakításra",
  "átadásra",
  "kiállításra",
  "feldolgozásra",
  "módosításra",
  "változásra",
  "kiosztásra",
  "beavatkozásra",
  "megvalósításra",
  "megállapodásra",
  "jóváhagyásra",
  "szabályozásra",
  "változtatásra",
  "elszámolásra",
  "felhívásra",
  "meghallgatásra",
  "elbírálásra",
  "végrehajtásra",
  "lemondásra",
  "elhatározásra",
  "kiírásra",
  "megfogalmazásra",
  "népszavazásra",
  "kiválasztásra",
  "hozzájárulásra",
  "bemutatkozásra",
  "felszólalásra",
  "elutasításra",
  "megvitatásra",
  "levonásra",
  "átutalásra",
  "kizárásra",
  "előállításra",
  "bizonyításra",
  "kárpótlásra",
  "nyomtatásra",
  "felállításra",
  "beszámításra",
  "pótlásra",
  "publikálásra",
  "megbízásra",
  "felbontásra",
  "megválasztásra",
  "kibocsátásra",
  "kivizsgálásra",
  "lebontásra",
  "feltárásra",
  "felosztásra",
  "visszavonásra",
  "elosztásra",
  "felvásárlásra",
  "megbocsátásra",
  "szétosztásra",
  "megújításra",
  "megnyitásra",
  "korlátozásra",
  "bérbeadásra",
  "eltiltásra",
  "elbocsátásra",
  "meghosszabbításra",
  "bebocsátásra",
  "levágásra",
  "restaurálásra",
  "felajánlásra",
  "kivágásra",
  "kormányalakításra",
  "megmunkálásra",
  "osztályozásra",
  "sorozatgyártásra",
  "betakarításra",
  "leszámolásra"
];
var zk = {}, fk = {};
Object.defineProperty(fk, "__esModule", {
  value: !0
});
fk.default = [
  // Non passives ending in -va.
  "éva",
  "szava",
  "moszkva",
  "alternatíva",
  "normatíva",
  "java",
  "jelszava",
  "direktíva",
  "perspektíva",
  "dráva",
  "lova",
  "kurva",
  "szilva",
  "páva",
  "kollektíva",
  "lárva",
  "szarva",
  "tava",
  "láva",
  "díva",
  "ponyva",
  "hava",
  "offenzíva",
  "előszava",
  "borotva",
  "színe-java",
  "hamva",
  "káva",
  "legjava",
  "mályva",
  "murva",
  "olíva",
  "híre-hamva",
  "pelyva",
  "címszava",
  "dudva",
  "sava",
  "csóva",
  "golyva",
  "árva",
  "fénycsóva",
  "utószava",
  "antikva",
  "közjava",
  "aktíva",
  "hadiárva",
  "morotva",
  "gyomorsava",
  "villanyborotva",
  "alapszava",
  "szerva",
  "odva",
  "naiva",
  "szupernova",
  "félárva",
  "harangszava",
  "szlalomozva",
  "halastava",
  "vezényszava",
  "falova",
  "defenzíva",
  "lángcsóva",
  "varázsszava",
  "végszava",
  "hadova",
  "dzsuva",
  "pányva",
  "sátorponyva",
  "parancsszava",
  "vezérszava",
  "falva",
  "durva",
  "gyáva",
  "tétova",
  "zagyva",
  "mogorva",
  "morva",
  "híva",
  "báva",
  "hova",
  "fordítva",
  "ahova",
  "felváltva",
  "valahova",
  "kurva",
  "sehova",
  "kisvártatva",
  "játszva",
  "hivatva",
  "mindenhova",
  "tova",
  "bárhova",
  "lopva",
  "idestova",
  "elragadtatva",
  "lélekszakadva",
  "fejcsóválva",
  "akárhova",
  "fogcsikorgatva",
  "tárva-nyitva",
  "hagyatva",
  "szájtátva",
  "készakarva",
  "karonfogva",
  "szívdobogva",
  "lélegzet-visszafojtva",
  "szívszorongva",
  "orozva",
  "fogvacogva",
  "szívszakadva",
  "fogvicsorítva",
  "bélapátfalva",
  "albertfalva",
  // Non passives ending in -ve.
  "éve",
  "neve",
  "könyve",
  "szíve",
  "teve",
  "elve",
  "műve",
  "kedve",
  "terve",
  "nyelve",
  "szerve",
  "medve",
  "híve",
  "alapelve",
  "törvénykönyve",
  "életműve",
  "irányelve",
  "kézikönyve",
  "felhasználóneve",
  "jegyzőkönyve",
  "diáknyelve",
  "leve",
  "ismérve",
  "tanterve",
  "hírneve",
  "objektíve",
  "íve",
  "emlékműve",
  "anyanyelve",
  "beceneve",
  "forgatókönyve",
  "féléve",
  "orgonaműve",
  "tankönyve",
  "alapköve",
  "jókedve",
  "évkönyve",
  "járműve",
  "köve",
  "keresztneve",
  "ráckeve",
  "munkaterve",
  "vezetékneve",
  "remekműve",
  "túrkeve",
  "töve",
  "öve",
  "futóműve",
  "heve",
  "sarokköve",
  "életéve",
  "vendégkönyve",
  "negyedéve",
  "jegesmedve",
  "csöve",
  "szócsöve",
  "keve",
  "üdve",
  "nedve",
  "gyűjtőneve",
  "fedőneve",
  "mérföldköve",
  "kéve",
  "ütemterve",
  "próbaköve",
  "gépjárműve",
  "domborműve",
  "ékköve",
  "rokonszenve",
  "érzékszerve",
  "kollektíve",
  "életkedve",
  "örve",
  "sérve",
  "verseskönyve",
  "füve",
  "építőköve",
  "ellenszenve",
  "álneve",
  "tanulmányterve",
  "szakácskönyve",
  "erőműve",
  "sarkköve",
  "barnamedve",
  "hajtóműve",
  "mesterműve",
  "színműve",
  "törzskönyve",
  "utóneve",
  "családneve",
  "formanyelve",
  "távcsöve",
  "tanéve",
  "mosómedve",
  "talpköve",
  "szövegkönyve",
  "sírköve",
  "keserve",
  "boltíve",
  "márkaneve",
  "munkakedve",
  "kérdőíve",
  "rosszkedve",
  "emlékkönyve",
  "gúnyneve",
  "szakkönyve",
  "pályaműve",
  "olvasókönyve",
  "előneve",
  "csúcsszerve",
  "személyneve",
  "atomerőműve",
  "útikönyve",
  "cséve",
  "telefonkönyve",
  "képeskönyve",
  "szabálykönyve",
  "nyakörve",
  "cseppköve",
  "látószerve",
  "mozgásszerve",
  "daloskönyve",
  "halászleve",
  "heresérve",
  "jogelve",
  "köldöksérve",
  "utcaneve",
  "eleve",
  "közvetve",
  "elvétve",
  "relatíve",
  "karöltve",
  "együttvéve",
  "vállvetve"
];
Object.defineProperty(zk, "__esModule", {
  value: !0
});
var sYe = $t, lB = yk(sYe), oYe = di, dYe = yk(oYe), lYe = fk, cYe = yk(lYe);
function yk(a) {
  return a && a.__esModule ? a : { default: a };
}
const Ep = function(e, t, i) {
  lB.default.call(this, e, t, i), dYe.default.call(this);
};
Pa.inherits(Ep, lB.default);
Ep.prototype.isNonPassivesInVaAndVe = function() {
  return cYe.default.includes(this.getParticiple());
};
Ep.prototype.isPassive = function() {
  return !this.isNonPassivesInVaAndVe();
};
zk.default = Ep;
Object.defineProperty(Ap, "__esModule", {
  value: !0
});
Ap.default = function(a, e, t) {
  const i = (0, pYe.default)(a), n = [];
  return (0, fYe.forEach)(i, function(r) {
    if (r.endsWith("ve")) {
      n.push(new Js.default(r, a, { auxiliaries: e, type: "ve at the end", language: t }));
      return;
    }
    if (r.endsWith("va")) {
      n.push(new Js.default(r, a, { auxiliaries: e, type: "va at the end", language: t }));
      return;
    }
    if (r.endsWith("ódni")) {
      n.push(new Js.default(r, a, { auxiliaries: e, type: "ódni at the end", language: t }));
      return;
    }
    if (r.endsWith("ődni")) {
      n.push(new Js.default(r, a, { auxiliaries: e, type: "ődni at the end", language: t }));
      return;
    }
    gYe.default.includes(r) && n.push(new Js.default(r, a, { auxiliaries: e, type: "re/ra at the end", language: t }));
  }), n;
};
var uYe = se, pYe = wk(uYe), mYe = gk, gYe = wk(mYe), zYe = zk, Js = wk(zYe), fYe = I;
function wk(a) {
  return a && a.__esModule ? a : { default: a };
}
const bT = ["kerülök", "kerülsz", "kerül", "kerülünk", "kerültök", "kerülnek", "kerüljek", "kerülj", "kerüljön", "kerüljünk", "kerüljetek", "kerüljenek", "kerülnék", "kerülnél", "kerülne", "kerülnénk", "kerülnétek", "kerülnének", "kerültem", "kerültél", "került", "kerültünk", "kerültetek", "kerültek", "kerültem volna", "kerültél volna", "került volna", "kerültünk volna", "kerültetek vola", "kerültek volna", "fogok kerülni", "fogsz kerülni", "fog kerülni", "fogunk kerülni", "fogtok kerülni", "fognak kerülni"], vT = ["vagyok", "vagy", "van", "vagyunk", "vagytok", "vannak", "legyek", "legyél", "legyen", "legyünk", "legyetek", "legyenek", "lennék", "lennél", "lenne", "lennénk", "lennétek", "lennének", "leszek", "leszel", "lesz", "leszünk", "lesztek", "lesznek", "voltam", "voltál", "volt", "voltunk", "voltatok", "voltak", "lettem volna", "lettél volna", "lett volna", "lettünk volna", "lettetek volna", "lettek volna"], kT = ["fogok", "fogsz", "fog", "fogunk", "fogtok", "fognak"];
var cB = function() {
  return {
    auxiliaries1: bT,
    auxiliaries2: vT,
    auxiliaries3: kT,
    allAuxiliaries: [].concat(bT, vT, kT)
  };
};
Object.defineProperty(Wv, "__esModule", {
  value: !0
});
Wv.default = function(a, e, t) {
  let i = [];
  if (t === "de" || t === "nl" || t === "pl" || t === "hu") {
    if (!e.some((n) => CYe[t].auxiliaries.includes(n)))
      return !1;
    t === "de" && (i = (0, _Ye.default)(a, e, t)), (t === "nl" || t === "pl") && (i = (0, _T.default)(a, e, t)), t === "hu" && (i = (0, SYe.default)(a, e, t));
  } else
    i = (0, _T.default)(a, e, t);
  return (0, wYe.default)(i);
};
var yYe = Fv, wYe = jn(yYe), hYe = oi, _T = jn(hYe), bYe = gs, vYe = jn(bYe), kYe = _p, _Ye = jn(kYe), $Ye = jp, jYe = jn($Ye), xYe = xp, AYe = jn(xYe), EYe = Ap, SYe = jn(EYe), qYe = cB, PYe = jn(qYe);
function jn(a) {
  return a && a.__esModule ? a : { default: a };
}
const TYe = (0, vYe.default)().allAuxiliaries, RYe = (0, jYe.default)(), OYe = (0, AYe.default)(), MYe = (0, PYe.default)().allAuxiliaries, CYe = {
  de: {
    auxiliaries: TYe
  },
  nl: {
    auxiliaries: RYe
  },
  pl: {
    auxiliaries: OYe
  },
  hu: {
    auxiliaries: MYe
  }
};
var hk = {}, bk = {};
Object.defineProperty(bk, "__esModule", {
  value: !0
});
bk.default = function() {
  return {
    all: LYe.concat(IYe, WYe, FYe)
  };
};
const LYe = ["абсолютизирован", "абсолютизирована", "абсолютизировано", "абсолютизированы", "абстрагирован", "абстрагирована", "абстрагировано", "абстрагированы", "автоматизирован", "автоматизирована", "автоматизировано", "автоматизированы", "адаптирован", "адаптирована", "адаптировано", "адаптированы", "адресован", "адресована", "адресовано", "адресованы", "адсорбирован", "адсорбирована", "адсорбировано", "адсорбированы", "аккредитован", "аккредитована", "аккредитовано", "аккредитованы", "аккумулирован", "аккумулирована", "аккумулировано", "аккумулированы", "активизирован", "активизирована", "активизировано", "активизированы", "активирован", "активирована", "активировано", "активированы", "актуализирован", "актуализирована", "актуализировано", "актуализированы", "акцентирован", "акцентирована", "акцентировано", "акцентированы", "амнистирован", "амнистирована", "амнистировано", "амнистированы", "амортизирован", "амортизирована", "амортизировано", "амортизированы", "ампутирован", "ампутирована", "ампутировано", "ампутированы", "ангажирован", "ангажирована", "ангажировано", "ангажированы", "аннулирован", "аннулирована", "аннулировано", "аннулированы", "анонсирован", "анонсирована", "анонсировано", "анонсированы", "апробирован", "апробирована", "апробировано", "апробированы", "аранжирован", "аранжирована", "аранжировано", "аранжированы", "аргументирован", "аргументирована", "аргументировано", "аргументированы", "арендован", "арендована", "арендовано", "арендованы", "арестован", "арестована", "арестовано", "арестованы", "ассигнован", "ассигнована", "ассигновано", "ассигнованы", "ассимилирован", "ассимилирована", "ассимилировано", "ассимилированы", "ассоциирован", "ассоциирована", "ассоциировано", "ассоциированы", "атакован", "атакована", "атаковано", "атакованы", "аттестован", "аттестована", "аттестовано", "аттестованы", "благословлен", "благословлена", "благословлено", "благословлены", "благоустроен", "благоустроена", "благоустроено", "благоустроены", "блокирован", "блокирована", "блокировано", "блокированы", "бойкотирован", "бойкотирована", "бойкотировано", "бойкотированы", "бронирован", "бронирована", "бронировано", "бронированы", "брошен", "брошена", "брошено", "брошены", "вакцинирован", "вакцинирована", "вакцинировано", "вакцинированы", "вбит", "вбита", "вбито", "вбиты", "вброшен", "вброшена", "вброшено", "вброшены", "вбухан", "вбухана", "вбухано", "вбуханы", "введен", "введена", "введено", "введены", "ввезен", "ввезена", "ввезено", "ввезены", "ввергнут", "ввергнута", "ввергнуто", "ввергнуты", "вверен", "вверена", "вверено", "вверены", "ввернут", "ввернута", "ввернуто", "ввернуты", "ввинчен", "ввинчена", "ввинчено", "ввинчены", "вдавлен", "вдавлена", "вдавлено", "вдавлены", "вдарен", "вдарена", "вдарено", "вдарены", "вдвинут", "вдвинута", "вдвинуто", "вдвинуты", "вделан", "вделана", "вделано", "вделаны", "вдет", "вдета", "вдето", "вдеты", "вдолблен", "вдолблена", "вдолблено", "вдолблены", "вдохновлен", "вдохновлена", "вдохновлено", "вдохновлены", "венчан", "венчана", "венчано", "венчаны", "вжат", "вжата", "вжато", "вжаты", "вживлен", "вживлена", "вживлено", "вживлены", "взбаламучен", "взбаламучена", "взбаламучено", "взбаламучены", "взбешен", "взбешена", "взбешено", "взбешены", "взбит", "взбита", "взбито", "взбиты", "взбодрен", "взбодрена", "взбодрено", "взбодрены", "взболтан", "взболтана", "взболтано", "взболтаны", "взбудоражена", "взбудоражено", "взбудоражены", "взведен", "взведена", "взведено", "взведены", "взвешен", "взвешена", "взвешено", "взвешены", "взвинчен", "взвинчена", "взвинчено", "взвинчены", "взвихрен", "взвихрена", "взвихрено", "взвихрены", "взволнована", "взволновано", "взволнованы", "взгромозжден", "взгромозждена", "взгромозждено", "взгромозждены", "вздернут", "вздернута", "вздернуто", "вздернуты", "вздет", "вздета", "вздето", "вздеты", "вздут", "вздута", "вздуто", "вздуты", "вздыблен", "вздыблена", "вздыблено", "вздыблены", "взлелеян", "взлелеяна", "взлелеяно", "взлелеяны", "взломан", "взломана", "взломано", "взломаны", "взлохмачен", "взлохмачена", "взлохмачено", "взлохмачены", "взметнут", "взметнута", "взметнуто", "взметнуты", "взмылен", "взмылена", "взмылено", "взмылены", "взнуздан", "взнуздана", "взнуздано", "взнузданы", "взорван", "взорвана", "взорвано", "взорваны", "взращен", "взращена", "взращено", "взращены", "взрезан", "взрезана", "взрезано", "взрезаны", "взрыхлен", "взрыхлена", "взрыхлено", "взрыхлены", "взъерошен", "взъерошена", "взъерошено", "взъерошены", "взыскан", "взыскана", "взыскано", "взысканы", "взят", "взята", "взято", "взяты", "видоизменен", "видоизменена", "видоизменено", "видоизменены", "визирован", "визирована", "визировано", "визированы", "вкачен", "вкачена", "вкачено", "вкачены", "вклеен", "вклеена", "вклеено", "вклеены", "включен", "включена", "включено", "включены", "вколот", "вколота", "вколото", "вколоты", "вколочен", "вколочена", "вколочено", "вколочены", "вкопан", "вкопана", "вкопано", "вкопаны", "вкраплен", "вкраплена", "вкраплено", "вкраплены", "вкушен", "вкушена", "вкушено", "вкушены", "влеплен", "влеплена", "влеплено", "влеплены", "влит", "влита", "влито", "влиты", "вложен", "вложена", "вложено", "вложены", "вмазан", "вмазана", "вмазано", "вмазаны", "вменен", "вменена", "вменено", "вменены", "вмещен", "вмещена", "вмещено", "вмещены", "вмонтирован", "вмонтирована", "вмонтировано", "вмонтированы", "вмурован", "вмурована", "вмуровано", "вмурованы", "вмят", "вмята", "вмято", "вмяты", "внедрен", "внедрена", "внедрено", "внедрены", "внесен", "внесена", "внесено", "внесены", "внушен", "внушена", "внушено", "внушены", "вобран", "вобрана", "вобрано", "вобраны", "вовлечен", "вовлечена", "вовлечено", "вовлечены", "вогнан", "вогнана", "вогнано", "вогнаны", "водворен", "водворена", "водворено", "водворены", "водружен", "водружена", "водружено", "водружены", "возбуждена", "возбуждено", "возбуждены", "возведен", "возведена", "возведено", "возведены", "возвеличен", "возвеличена", "возвеличено", "возвеличены", "возвещен", "возвещена", "возвещено", "возвещены", "возвращен", "возвращена", "возвращено", "возвращены", "возвышен", "возвышена", "возвышено", "возвышены", "возглавлен", "возглавлена", "возглавлено", "возглавлены", "возглашен", "возглашена", "возглашено", "возглашены", "воздвигнут", "воздвигнута", "воздвигнуто", "воздвигнуты", "возделан", "возделана", "возделано", "возделаны", "возложен", "возложена", "возложено", "возложены", "возмещен", "возмещена", "возмещено", "возмещены", "возмущена", "возмущено", "возмущены", "вознагражден", "вознаграждена", "вознаграждено", "вознаграждены", "вознесен", "вознесена", "вознесено", "вознесены", "возобновлен", "возобновлена", "возобновлено", "возобновлены", "возрожден", "возрождена", "возрождено", "возрождены", "воображен", "воображена", "воображено", "воображены", "воодушевлен", "воодушевлена", "воодушевлено", "воодушевлены", "вооружен", "вооружена", "вооружено", "вооружены", "воплощен", "воплощена", "воплощено", "воплощены", "вопрошен", "вопрошена", "вопрошено", "вопрошены", "воскрешен", "воскрешена", "воскрешено", "воскрешены", "воспет", "воспета", "воспето", "воспеты", "воспитана", "воспитано", "воспитаны", "воспламенен", "воспламенена", "воспламенено", "воспламенены", "восполнен", "восполнена", "восполнено", "восполнены", "воспрещен", "воспрещена", "воспрещено", "воспрещены", "воспринят", "воспринята", "воспринято", "восприняты", "воспроизведен", "воспроизведена", "воспроизведено", "воспроизведены", "восславлен", "восславлена", "восславлено", "восславлены", "восстановлен", "восстановлена", "восстановлено", "восстановлены", "востребована", "востребовано", "востребованы", "восхищен", "восхищена", "восхищено", "восхищены", "воткнут", "воткнута", "воткнуто", "воткнуты", "впаян", "впаяна", "впаяно", "впаяны", "впечатлен", "впечатлена", "впечатлено", "впечатлены", "вписан", "вписана", "вписано", "вписаны", "впитан", "впитана", "впитано", "впитаны", "впихнут", "впихнута", "впихнуто", "впихнуты", "вплетен", "вплетена", "вплетено", "вплетены", "вправлен", "вправлена", "вправлено", "вправлены", "впрыснут", "впрыснута", "впрыснуто", "впрыснуты", "впряжен", "впряжена", "впряжено", "впряжены", "впущен", "впущена", "впущено", "впущены", "вразумлен", "вразумлена", "вразумлено", "вразумлены", "врезан", "врезана", "врезано", "врезаны", "врублен", "врублена", "врублено", "врублены", "вручен", "вручена", "вручено", "вручены", "врыт", "врыта", "врыто", "врыты", "всажен", "всажена", "всажено", "всажены", "вселен", "вселена", "вселено", "вселены", "вскинут", "вскинута", "вскинуто", "вскинуты", "вскипячен", "вскипячена", "вскипячено", "вскипячены", "всколыхнут", "всколыхнута", "всколыхнуто", "всколыхнуты", "вскопан", "вскопана", "вскопано", "вскопаны", "вскормлен", "вскормлена", "вскормлено", "вскормлены", "вскружен", "вскружена", "вскружено", "вскружены", "вскрыт", "вскрыта", "вскрыто", "вскрыты", "всосан", "всосана", "всосано", "всосаны", "вспахан", "вспахана", "вспахано", "вспаханы", "вспенен", "вспенена", "вспенено", "вспенены", "всплеснут", "всплеснута", "всплеснуто", "всплеснуты", "всполошен", "всполошена", "всполошено", "всполошены", "вспорот", "вспорота", "вспорото", "вспороты", "вставлен", "вставлена", "вставлено", "вставлены", "встревожен", "встревожена", "встревожено", "встревожены", "встречен", "встречена", "встречено", "встречены", "встроен", "встроена", "встроено", "встроены", "встряхнут", "встряхнута", "встряхнуто", "встряхнуты", "всунут", "всунута", "всунуто", "всунуты", "всучен", "всучена", "всучено", "всучены", "втащен", "втащена", "втащено", "втащены", "втерт", "втерта", "втерто", "втерты", "втиснут", "втиснута", "втиснуто", "втиснуты", "втолкнут", "втолкнута", "втолкнуто", "втолкнуты", "втолкован", "втолкована", "втолковано", "втолкованы", "втоптан", "втоптана", "втоптано", "втоптаны", "втравлен", "втравлена", "втравлено", "втравлены", "втянут", "втянута", "втянуто", "втянуты", "вшит", "вшита", "вшито", "вшиты", "выбелен", "выбелена", "выбелено", "выбелены", "выбит", "выбита", "выбито", "выбиты", "выболтан", "выболтана", "выболтано", "выболтаны", "выбран", "выбрана", "выбрано", "выбраны", "выбрит", "выбрита", "выбрито", "выбриты", "выброшен", "выброшена", "выброшено", "выброшены", "вывален", "вывалена", "вывалено", "вывалены", "вывалян", "вываляна", "вываляно", "вываляны", "выварен", "выварена", "выварено", "выварены", "выведан", "выведана", "выведано", "выведаны", "выведен", "выведена", "выведено", "выведены", "вывезен", "вывезена", "вывезено", "вывезены", "выверен", "выверена", "выверено", "выверены", "вывернут", "вывернута", "вывернуто", "вывернуты", "выветрен", "выветрена", "выветрено", "выветрены", "вывешен", "вывешена", "вывешено", "вывешены", "вывихнут", "вывихнута", "вывихнуто", "вывихнуты", "вывожен", "вывожена", "вывожено", "вывожены", "выворочен", "выворочена", "выворочено", "выворочены", "выгадан", "выгадана", "выгадано", "выгаданы", "выглажен", "выглажена", "выглажено", "выглажены", "выгнан", "выгнана", "выгнано", "выгнаны", "выгнут", "выгнута", "выгнуто", "выгнуты", "выговорен", "выговорена", "выговорено", "выговорены", "выгорожен", "выгорожена", "выгорожено", "выгорожены", "выгравирован", "выгравирована", "выгравировано", "выгравированы", "выгребен", "выгребена", "выгребено", "выгребены", "выгружен", "выгружена", "выгружено", "выгружены", "выдавлен", "выдавлена", "выдавлено", "выдавлены", "выдвинут", "выдвинута", "выдвинуто", "выдвинуты", "выдворен", "выдворена", "выдворено", "выдворены", "выделан", "выделана", "выделано", "выделаны", "выделен", "выделена", "выделено", "выделены", "выдержан", "выдержана", "выдержано", "выдержаны", "выдернут", "выдернута", "выдернуто", "выдернуты", "выдолблен", "выдолблена", "выдолблено", "выдолблены", "выдохнут", "выдохнута", "выдохнуто", "выдохнуты", "выдран", "выдрана", "выдрано", "выдраны", "выдрессирована", "выдрессировано", "выдрессированы", "выдуман", "выдумана", "выдумано", "выдуманы", "выдут", "выдута", "выдуто", "выдуты", "выжат", "выжата", "выжато", "выжаты", "выждан", "выждана", "выждано", "выжданы", "выжит", "выжита", "выжито", "выжиты", "выжран", "выжрана", "выжрано", "выжраны", "вызван", "вызвана", "вызвано", "вызваны", "вызволен", "вызволена", "вызволено", "вызволены", "вызнан", "вызнана", "вызнано", "вызнаны", "вызубрен", "вызубрена", "вызубрено", "вызубрены", "выигран", "выиграна", "выиграно", "выиграны", "выискан", "выискана", "выискано", "выисканы", "выказан", "выказана", "выказано", "выказаны", "выкачан", "выкачана", "выкачано", "выкачаны", "выкачен", "выкачена", "выкачено", "выкачены", "выкинут", "выкинута", "выкинуто", "выкинуты", "выклеван", "выклевана", "выклевано", "выклеваны", "выкликнут", "выкликнута", "выкликнуто", "выкликнуты", "выключен", "выключена", "выключено", "выключены", "выклянчен", "выклянчена", "выклянчено", "выклянчены", "выкован", "выкована", "выковано", "выкованы", "выковырян", "выковыряна", "выковыряно", "выковыряны", "выколот", "выколота", "выколото", "выколоты", "выколочен", "выколочена", "выколочено", "выколочены", "выкопан", "выкопана", "выкопано", "выкопаны", "выкормлен", "выкормлена", "выкормлено", "выкормлены", "выкорчеван", "выкорчевана", "выкорчевано", "выкорчеваны", "выкошен", "выкошена", "выкошено", "выкошены", "выкраден", "выкрадена", "выкрадено", "выкрадены", "выкрашен", "выкрашена", "выкрашено", "выкрашены", "выкрикнут", "выкрикнута", "выкрикнуто", "выкрикнуты", "выкроен", "выкроена", "выкроено", "выкроены", "выкручен", "выкручена", "выкручено", "выкручены", "выкупан", "выкупана", "выкупано", "выкупаны", "выкуплен", "выкуплена", "выкуплено", "выкуплены", "выкурен", "выкурена", "выкурено", "выкурены", "выкушен", "выкушена", "выкушено", "выкушены", "вылакан", "вылакана", "вылакано", "вылаканы", "вылеплен", "вылеплена", "вылеплено", "вылеплены", "вылечен", "вылечена", "вылечено", "вылечены", "вылизан", "вылизана", "вылизано", "вылизаны", "вылит", "вылита", "вылито", "вылиты", "выловлен", "выловлена", "выловлено", "выловлены", "выложен", "выложена", "выложено", "выложены", "выломан", "выломана", "выломано", "выломаны", "вылуплен", "вылуплена", "вылуплено", "вылуплены", "вымазан", "вымазана", "вымазано", "вымазаны", "выманен", "выманена", "выманено", "выманены", "вымаран", "вымарана", "вымарано", "вымараны", "вымахан", "вымахана", "вымахано", "вымаханы", "выменян", "выменяна", "выменяно", "выменяны", "выметен", "выметена", "выметено", "выметены", "вымолвлен", "вымолвлена", "вымолвлено", "вымолвлены", "вымолен", "вымолена", "вымолено", "вымолены", "вымотан", "вымотана", "вымотано", "вымотаны", "вымочен", "вымочена", "вымочено", "вымочены", "вымощен", "вымощена", "вымощено", "вымощены", "вымучен", "вымучена", "вымучено", "вымучены", "вымуштрован", "вымуштрована", "вымуштровано", "вымуштрованы", "вымыт", "вымыта", "вымыто", "вымыты", "вымышлен", "вымышлена", "вымышлено", "вымышлены", "вынесен", "вынесена", "вынесено", "вынесены", "выношен", "выношена", "выношено", "выношены", "вынужден", "вынуждена", "вынуждено", "вынуждены", "вынут", "вынута", "вынуто", "вынуты", "выпачкан", "выпачкана", "выпачкано", "выпачканы", "выпестован", "выпестована", "выпестовано", "выпестованы", "выпечен", "выпечена", "выпечено", "выпечены", "выпилен", "выпилена", "выпилено", "выпилены", "выписан", "выписана", "выписано", "выписаны", "выпит", "выпита", "выпито", "выпиты", "выпихнут", "выпихнута", "выпихнуто", "выпихнуты", "выплавлен", "выплавлена", "выплавлено", "выплавлены", "выплакан", "выплакана", "выплакано", "выплаканы", "выплачен", "выплачена", "выплачено", "выплачены", "выплеснут", "выплеснута", "выплеснуто", "выплеснуты", "выплюнут", "выплюнута", "выплюнуто", "выплюнуты", "выполнен", "выполнена", "выполнено", "выполнены", "выпорот", "выпорота", "выпорото", "выпороты", "выпотрошен", "выпотрошена", "выпотрошено", "выпотрошены", "выправлен", "выправлена", "выправлено", "выправлены", "выпровожен", "выпровожена", "выпровожено", "выпровожены", "выпростан", "выпростана", "выпростано", "выпростаны", "выпрошен", "выпрошена", "выпрошено", "выпрошены", "выпрямлен", "выпрямлена", "выпрямлено", "выпрямлены", "выпучен", "выпучена", "выпучено", "выпучены", "выпущен", "выпущена", "выпущено", "выпущены", "выпытан", "выпытана", "выпытано", "выпытаны", "выпячен", "выпячена", "выпячено", "выпячены", "выработан", "выработана", "выработано", "выработаны", "выражен", "выражена", "выражено", "выражены", "выращен", "выращена", "выращено", "выращены", "вырван", "вырвана", "вырвано", "вырваны", "вырезан", "вырезана", "вырезано", "вырезаны", "выровнян", "выровняна", "выровняно", "выровняны", "выронен", "выронена", "выронено", "выронены", "вырублен", "вырублена", "вырублено", "вырублены", "выруган", "выругана", "выругано", "выруганы", "выручен", "выручена", "выручено", "выручены", "вырыт", "вырыта", "вырыто", "вырыты", "высажен", "высажена", "высажено", "высажены", "высвечен", "высвечена", "высвечено", "высвечены", "высвобожден", "высвобождена", "высвобождено", "высвобождены", "выселен", "выселена", "выселено", "выселены", "высечен", "высечена", "высечено", "высечены", "высеян", "высеяна", "высеяно", "высеяны", "высижен", "высижена", "высижено", "высижены", "высказан", "высказана", "высказано", "высказаны", "выскоблен", "выскоблена", "выскоблено", "выскоблены", "выскребен", "выскребена", "выскребено", "выскребены", "выслан", "выслана", "выслано", "высланы", "выслежен", "выслежена", "выслежено", "выслежены", "выслужен", "выслужена", "выслужено", "выслужены", "выслушан", "выслушана", "выслушано", "выслушаны", "высмеян", "высмеяна", "высмеяно", "высмеяны", "высмотрен", "высмотрена", "высмотрено", "высмотрены", "высосан", "высосана", "высосано", "высосаны", "выспрошен", "выспрошена", "выспрошено", "выспрошены", "выставлен", "выставлена", "выставлено", "выставлены", "выстиран", "выстирана", "выстирано", "выстираны", "выстлан", "выстлана", "выстлано", "выстланы", "выстоян", "выстояна", "выстояно", "выстояны", "выстрадан", "выстрадана", "выстрадано", "выстраданы", "выстрелен", "выстрелена", "выстрелено", "выстрелены", "выстрижен", "выстрижена", "выстрижено", "выстрижены", "выстроен", "выстроена", "выстроено", "выстроены", "выструган", "выстругана", "выстругано", "выструганы", "выстужен", "выстужена", "выстужено", "выстужены", "высунут", "высунута", "высунуто", "высунуты", "высушен", "высушена", "высушено", "высушены", "высчитан", "высчитана", "высчитано", "высчитаны", "вытаращен", "вытаращена", "вытаращено", "вытаращены", "вытащен", "вытащена", "вытащено", "вытащены", "вытерплен", "вытерплена", "вытерплено", "вытерплены", "вытерт", "вытерта", "вытерто", "вытерты", "вытесан", "вытесана", "вытесано", "вытесаны", "вытеснен", "вытеснена", "вытеснено", "вытеснены", "выткан", "выткана", "выткано", "вытканы", "вытолкнут", "вытолкнута", "вытолкнуто", "вытолкнуты", "вытоптан", "вытоптана", "вытоптано", "вытоптаны", "выторгован", "выторгована", "выторговано", "выторгованы", "выточен", "выточена", "выточено", "выточены", "вытравлен", "вытравлена", "вытравлено", "вытравлены", "вытребован", "вытребована", "вытребовано", "вытребованы", "вытрясен", "вытрясена", "вытрясено", "вытрясены", "вытряхнут", "вытряхнута", "вытряхнуто", "вытряхнуты", "вытурен", "вытурена", "вытурено", "вытурены", "вытянут", "вытянута", "вытянуто", "вытянуты", "выужен", "выужена", "выужено", "выужены", "выучен", "выучена", "выучено", "выучены", "выхвачен", "выхвачена", "выхвачено", "выхвачены", "выхлебан", "выхлебана", "выхлебано", "выхлебаны", "выхлопотан", "выхлопотана", "выхлопотано", "выхлопотаны", "выхожен", "выхожена", "выхожено", "выхожены", "выхолощен", "выхолощена", "выхолощено", "выхолощены", "выцарапан", "выцарапана", "выцарапано", "выцарапаны", "вычеркнут", "вычеркнута", "вычеркнуто", "вычеркнуты", "вычерпан", "вычерпана", "вычерпано", "вычерпаны", "вычерчен", "вычерчена", "вычерчено", "вычерчены", "вычислен", "вычислена", "вычислено", "вычислены", "вычитан", "вычитана", "вычитано", "вычитаны", "вычищен", "вычищена", "вычищено", "вычищены", "вычленен", "вычленена", "вычленено", "вычленены", "вычтен", "вычтена", "вычтено", "вычтены", "вышвырнут", "вышвырнута", "вышвырнуто", "вышвырнуты", "вышит", "вышита", "вышито", "вышиты", "вышколен", "вышколена", "вышколено", "вышколены", "выщерблен", "выщерблена", "выщерблено", "выщерблены", "выщипан", "выщипана", "выщипано", "выщипаны", "выявлен", "выявлена", "выявлено", "выявлены", "выяснен", "выяснена", "выяснено", "выяснены", "газирована", "газировано", "газированы", "гарантирован", "гарантирована", "гарантировано", "гарантированы", "гаркнут", "гаркнута", "гаркнуто", "гаркнуты", "гармонизирован", "гармонизирована", "гармонизировано", "гармонизированы", "герметизирован", "герметизирована", "герметизировано", "герметизированы", "глазирован", "глазирована", "глазировано", "глазированы", "госпитализирован", "госпитализирована", "госпитализировано", "госпитализированы", "грохнут", "грохнута", "грохнуто", "грохнуты", "дарован", "дарована", "даровано", "дарованы", "датирован", "датирована", "датировано", "датированы", "двинут", "двинута", "двинуто", "двинуты", "девальвирован", "девальвирована", "девальвировано", "девальвированы", "дегустирован", "дегустирована", "дегустировано", "дегустированы", "дезавуирован", "дезавуирована", "дезавуировано", "дезавуированы", "дезинфицирован", "дезинфицирована", "дезинфицировано", "дезинфицированы", "дезинформирован", "дезинформирована", "дезинформировано", "дезинформированы", "дезорганизован", "дезорганизована", "дезорганизовано", "дезорганизованы", "дезориентирован", "дезориентирована", "дезориентировано", "дезориентированы", "декларирован", "декларирована", "декларировано", "декларированы", "декорирован", "декорирована", "декорировано", "декорированы", "делегирован", "делегирована", "делегировано", "делегированы", "демаскирован", "демаскирована", "демаскировано", "демаскированы", "демобилизован", "демобилизована", "демобилизовано", "демобилизованы", "демонтирован", "демонтирована", "демонтировано", "демонтированы", "деморализован", "деморализована", "деморализовано", "деморализованы", "депонирован", "депонирована", "депонировано", "депонированы", "детализирован", "детализирована", "детализировано", "детализированы", "детерминирован", "детерминирована", "детерминировано", "детерминированы", "деформирован", "деформирована", "деформировано", "деформированы", "диагностирован", "диагностирована", "диагностировано", "диагностированы", "дисквалифицирован", "дисквалифицирована", "дисквалифицировано", "дисквалифицированы", "дискредитирован", "дискредитирована", "дискредитировано", "дискредитированы", "дискриминирован", "дискриминирована", "дискриминировано", "дискриминированы", "дислоцирован", "дислоцирована", "дислоцировано", "дислоцированы", "дисциплинирован", "дисциплинирована", "дисциплинировано", "дисциплинированы", "дифференцирован", "дифференцирована", "дифференцировано", "дифференцированы", "добавлен", "добавлена", "добавлено", "добавлены", "добит", "добита", "добито", "добиты", "доведен", "доведена", "доведено", "доведены", "довезен", "довезена", "довезено", "довезены", "доверен", "доверена", "доверено", "доверены", "довершен", "довершена", "довершено", "довершены", "довожен", "довожена", "довожено", "довожены", "догляжен", "догляжена", "догляжено", "догляжены", "догнан", "догнана", "догнано", "догнаны", "договорен", "договорена", "договорено", "договорены", "догонян", "догоняна", "догоняно", "догоняны", "доделан", "доделана", "доделано", "доделаны", "додуман", "додумана", "додумано", "додуманы", "дожат", "дожата", "дожато", "дожаты", "дожеван", "дожевана", "дожевано", "дожеваны", "дожит", "дожита", "дожито", "дожиты", "дозволен", "дозволена", "дозволено", "дозволены", "дозирован", "дозирована", "дозировано", "дозированы", "доигран", "доиграна", "доиграно", "доиграны", "доказан", "доказана", "доказано", "доказаны", "докончен", "докончена", "докончено", "докончены", "документирован", "документирована", "документировано", "документированы", "докурен", "докурена", "докурено", "докурены", "долбанут", "долбанута", "долбануто", "долбануты", "долит", "долита", "долито", "долиты", "доложен", "доложена", "доложено", "доложены", "домчан", "домчана", "домчано", "домчаны", "домыслен", "домыслена", "домыслено", "домыслены", "донесен", "донесена", "донесено", "донесены", "доношена", "доношено", "доношены", "допет", "допета", "допето", "допеты", "допечен", "допечена", "допечено", "допечены", "дописан", "дописана", "дописано", "дописаны", "допит", "допита", "допито", "допиты", "доплачен", "доплачена", "доплачено", "доплачены", "дополнен", "дополнена", "дополнено", "дополнены", "допрошен", "допрошена", "допрошено", "допрошены", "допущен", "допущена", "допущено", "допущены", "доработан", "доработана", "доработано", "доработаны", "дорисован", "дорисована", "дорисовано", "дорисованы", "досажен", "досажена", "досажено", "досажены", "досказан", "досказана", "досказано", "досказаны", "дослушан", "дослушана", "дослушано", "дослушаны", "досмотрен", "досмотрена", "досмотрено", "досмотрены", "доставлен", "доставлена", "доставлено", "доставлены", "достроен", "достроена", "достроено", "достроены", "досчитан", "досчитана", "досчитано", "досчитаны", "дотащен", "дотащена", "дотащено", "дотащены", "дотянут", "дотянута", "дотянуто", "дотянуты", "дочитан", "дочитана", "дочитано", "дочитаны", "драматизирован", "драматизирована", "драматизировано", "драматизированы", "дренирован", "дренирована", "дренировано", "дренированы", "дублирован", "дублирована", "дублировано", "дублированы", "жахнут", "жахнута", "жахнуто", "жахнуты", "заасфальтирован", "заасфальтирована", "заасфальтировано", "заасфальтированы", "забаррикадирован", "забаррикадирована", "забаррикадировано", "забаррикадированы", "забинтован", "забинтована", "забинтовано", "забинтованы", "забит", "забита", "забито", "забиты", "заблеван", "заблевана", "заблевано", "заблеваны", "заблокирован", "заблокирована", "заблокировано", "заблокированы", "заболочена", "заболочено", "заболочены", "заболтан", "заболтана", "заболтано", "заболтаны", "забракован", "забракована", "забраковано", "забракованы", "забран", "забрана", "забрано", "забраны", "забронирован", "забронирована", "забронировано", "забронированы", "забросан", "забросана", "забросано", "забросаны", "заброшен", "заброшена", "заброшено", "заброшены", "забрызган", "забрызгана", "забрызгано", "забрызганы", "завален", "завалена", "завалено", "завалены", "заварен", "заварена", "заварено", "заварены", "заведен", "заведена", "заведено", "заведены", "завезен", "завезена", "завезено", "завезены", "завербован", "завербована", "завербовано", "завербованы", "заверен", "заверена", "заверено", "заверены", "завернут", "завернута", "завернуто", "завернуты", "заверчен", "заверчена", "заверчено", "заверчены", "завершен", "завершена", "завершено", "завершены", "завешан", "завешана", "завешано", "завешаны", "завещан", "завещана", "завещано", "завещаны", "завиден", "завидена", "завидено", "завидены", "завизирован", "завизирована", "завизировано", "завизированы", "завинчен", "завинчена", "завинчено", "завинчены", "завит", "завита", "завито", "завиты", "завлечен", "завлечена", "завлечено", "завлечены", "завоеван", "завоевана", "завоевано", "завоеваны", "заворожен", "заворожена", "заворожено", "заворожены", "завуалирован", "завуалирована", "завуалировано", "завуалированы", "завышен", "завышена", "завышено", "завышены", "завязан", "завязана", "завязано", "завязаны", "загадан", "загадана", "загадано", "загаданы", "загажен", "загажена", "загажено", "загажены", "загашен", "загашена", "загашено", "загашены", "загипнотизирован", "загипнотизирована", "загипнотизировано", "загипнотизированы", "загипсован", "загипсована", "загипсовано", "загипсованы", "заглажен", "заглажена", "заглажено", "заглажены", "заглушен", "заглушена", "заглушено", "заглушены", "загнан", "загнана", "загнано", "загнаны", "загнут", "загнута", "загнуто", "загнуты", "заговорен", "заговорена", "заговорено", "заговорены", "загорожен", "загорожена", "загорожено", "загорожены", "заготовлен", "заготовлена", "заготовлено", "заготовлены", "заграбастан", "заграбастана", "заграбастано", "заграбастаны", "загребен", "загребена", "загребено", "загребены", "загримирован", "загримирована", "загримировано", "загримированы", "загромозжден", "загромозждена", "загромозждено", "загромозждены", "загружен", "загружена", "загружено", "загружены", "загрызен", "загрызена", "загрызено", "загрызены", "загрязнен", "загрязнена", "загрязнено", "загрязнены", "загублен", "загублена", "загублено", "загублены", "задавлен", "задавлена", "задавлено", "задавлены", "задвинут", "задвинута", "задвинуто", "задвинуты", "задействован", "задействована", "задействовано", "задействованы", "заделан", "заделана", "заделано", "заделаны", "задерган", "задергана", "задергано", "задерганы", "задержан", "задержана", "задержано", "задержаны", "задернут", "задернута", "задернуто", "задернуты", "задет", "задета", "задето", "задеты", "задобрен", "задобрена", "задобрено", "задобрены", "задолбан", "задолбана", "задолбано", "задолбаны", "задраен", "задраена", "задраено", "задраены", "задран", "задрана", "задрано", "задраны", "задрапирован", "задрапирована", "задрапировано", "задрапированы", "задуман", "задумана", "задумано", "задуманы", "задурен", "задурена", "задурено", "задурены", "задут", "задута", "задуто", "задуты", "задушен", "задушена", "задушено", "задушены", "задымлен", "задымлена", "задымлено", "задымлены", "заезжен", "заезжена", "заезжено", "заезжены", "зажарен", "зажарена", "зажарено", "зажарены", "зажат", "зажата", "зажато", "зажаты", "зажеван", "зажевана", "зажевано", "зажеваны", "зажит", "зажита", "зажито", "зажиты", "зажмурен", "зажмурена", "зажмурено", "зажмурены", "зазван", "зазвана", "зазвано", "зазваны", "заземлен", "заземлена", "заземлено", "заземлены", "зазубрен", "зазубрена", "зазубрено", "зазубрены", "заигран", "заиграна", "заиграно", "заиграны", "заимствован", "заимствована", "заимствовано", "заимствованы", "заинтересована", "заинтересовано", "заинтересованы", "заинтригована", "заинтриговано", "заинтригованы", "заказан", "заказана", "заказано", "заказаны", "закалена", "закалено", "закалены", "закамуфлирован", "закамуфлирована", "закамуфлировано", "закамуфлированы", "закапан", "закапана", "закапано", "закапаны", "закатан", "закатана", "закатано", "закатаны", "закачан", "закачана", "закачано", "закачаны", "закачен", "закачена", "закачено", "закачены", "закидан", "закидана", "закидано", "закиданы", "закинут", "закинута", "закинуто", "закинуты", "заклеван", "заклевана", "заклевано", "заклеваны", "заклеен", "заклеена", "заклеено", "заклеены", "заклеймен", "заклеймена", "заклеймено", "заклеймены", "заклинен", "заклинена", "заклинено", "заклинены", "заключен", "заключена", "заключено", "заключены", "закован", "закована", "заковано", "закованы", "закодирован", "закодирована", "закодировано", "закодированы", "заколдован", "заколдована", "заколдовано", "заколдованы", "заколот", "заколота", "заколото", "заколоты", "заколочен", "заколочена", "заколочено", "заколочены", "закольцеван", "закольцевана", "закольцевано", "закольцеваны", "законсервирован", "законсервирована", "законсервировано", "законсервированы", "законспирирован", "законспирирована", "законспирировано", "законспирированы", "закончен", "закончена", "закончено", "закончены", "закопан", "закопана", "закопано", "закопаны", "закопчен", "закопчена", "закопчено", "закопчены", "закошен", "закошена", "закошено", "закошены", "закрашен", "закрашена", "закрашено", "закрашены", "закреплен", "закреплена", "закреплено", "закреплены", "закроен", "закроена", "закроено", "закроены", "закруглен", "закруглена", "закруглено", "закруглены", "закручен", "закручена", "закручено", "закручены", "закрыт", "закрыта", "закрыто", "закрыты", "закуплен", "закуплена", "закуплено", "закуплены", "закупорен", "закупорена", "закупорено", "закупорены", "закурен", "закурена", "закурено", "закурены", "закутан", "закутана", "закутано", "закутаны", "залажен", "залажена", "залажено", "залажены", "залатан", "залатана", "залатано", "залатаны", "залеплен", "залеплена", "залеплено", "залеплены", "залечен", "залечена", "залечено", "залечены", "зализан", "зализана", "зализано", "зализаны", "залит", "залита", "залито", "залиты", "заложен", "заложена", "заложено", "заложены", "заломлен", "заломлена", "заломлено", "заломлены", "заляпан", "заляпана", "заляпано", "заляпаны", "замазан", "замазана", "замазано", "замазаны", "заманен", "заманена", "заманено", "заманены", "замаран", "замарана", "замарано", "замараны", "замаскирован", "замаскирована", "замаскировано", "замаскированы", "замаслен", "замаслена", "замаслено", "замаслены", "замедлен", "замедлена", "замедлено", "замедлены", "заменен", "заменена", "заменено", "заменены", "замерен", "замерена", "замерено", "замерены", "замерян", "замеряна", "замеряно", "замеряны", "заметан", "заметана", "заметано", "заметаны", "заметен", "заметена", "заметено", "заметены", "замечен", "замечена", "замечено", "замечены", "замешан", "замешана", "замешано", "замешаны", "замешен", "замешена", "замешено", "замешены", "замещен", "замещена", "замещено", "замещены", "заминирован", "заминирована", "заминировано", "заминированы", "замкнут", "замкнута", "замкнуто", "замкнуты", "замолвлен", "замолвлена", "замолвлено", "замолвлены", "замолчан", "замолчана", "замолчано", "замолчаны", "замордован", "замордована", "замордовано", "замордованы", "заморен", "заморена", "заморено", "заморены", "заморожен", "заморожена", "заморожено", "заморожены", "заморочен", "заморочена", "заморочено", "заморочены", "замотан", "замотана", "замотано", "замотаны", "замочен", "замочена", "замочено", "замочены", "замурован", "замурована", "замуровано", "замурованы", "замусолен", "замусолена", "замусолено", "замусолены", "замутнен", "замутнена", "замутнено", "замутнены", "замучан", "замучана", "замучано", "замучаны", "замучен", "замучена", "замучено", "замучены", "замыкан", "замыкана", "замыкано", "замыканы", "замыт", "замыта", "замыто", "замыты", "замыщлен", "замыщлена", "замыщлено", "замыщлены", "замят", "замята", "замято", "замяты", "занавешен", "занавешена", "занавешено", "занавешены", "занесен", "занесена", "занесено", "занесены", "занижен", "занижена", "занижено", "занижены", "заношен", "заношена", "заношено", "заношены", "занят", "занята", "занято", "заняты", "заострен", "заострена", "заострено", "заострены", "запакован", "запакована", "запаковано", "запакованы", "запален", "запалена", "запалено", "запалены", "запасен", "запасена", "запасено", "запасены", "запатентован", "запатентована", "запатентовано", "запатентованы", "запахнут", "запахнута", "запахнуто", "запахнуты", "запачкан", "запачкана", "запачкано", "запачканы", "запаян", "запаяна", "запаяно", "запаяны", "запеленан", "запеленана", "запеленано", "запеленаны", "запеленгован", "запеленгована", "запеленговано", "запеленгованы", "заперт", "заперта", "заперто", "заперты", "запечатан", "запечатана", "запечатано", "запечатаны", "запечатлен", "запечатлена", "запечатлено", "запечатлены", "запечен", "запечена", "запечено", "запечены", "записан", "записана", "записано", "записаны", "запит", "запита", "запито", "запиты", "запихан", "запихана", "запихано", "запиханы", "запихнут", "запихнута", "запихнуто", "запихнуты", "запланирован", "запланирована", "запланировано", "запланированы", "заплатан", "заплатана", "заплатано", "заплатаны", "заплачен", "заплачена", "заплачено", "заплачены", "заплеван", "заплевана", "заплевано", "заплеваны", "заплетен", "заплетена", "заплетено", "заплетены", "запломбирован", "запломбирована", "запломбировано", "запломбированы", "заподозрен", "заподозрена", "заподозрено", "заподозрены", "заполнен", "заполнена", "заполнено", "заполнены", "заполонен", "заполонена", "заполонено", "заполонены", "заполучен", "заполучена", "заполучено", "заполучены", "запомнен", "запомнена", "запомнено", "запомнены", "запорот", "запорота", "запорото", "запороты", "запорошен", "запорошена", "запорошено", "запорошены", "заправлен", "заправлена", "заправлено", "заправлены", "запрещен", "запрещена", "запрещено", "запрещены", "запримечен", "запримечена", "запримечено", "запримечены", "запрограммирован", "запрограммирована", "запрограммировано", "запрограммированы", "запроектирован", "запроектирована", "запроектировано", "запроектированы", "запрокинут", "запрокинута", "запрокинуто", "запрокинуты", "запротоколирован", "запротоколирована", "запротоколировано", "запротоколированы", "запрошен", "запрошена", "запрошено", "запрошены", "запружен", "запружена", "запружено", "запружены", "запряжен", "запряжена", "запряжено", "запряжены", "запрятан", "запрятана", "запрятано", "запрятаны", "запуган", "запугана", "запугано", "запуганы", "запудрен", "запудрена", "запудрено", "запудрены", "запутан", "запутана", "запутано", "запутаны", "запущен", "запущена", "запущено", "запущены", "запылен", "запылена", "запылено", "запылены", "запятнан", "запятнана", "запятнано", "запятнаны", "заработан", "заработана", "заработано", "заработаны", "заражен", "заражена", "заражено", "заражены", "зарегистрирован", "зарегистрирована", "зарегистрировано", "зарегистрированы", "зарезан", "зарезана", "зарезано", "зарезаны", "зарезервирован", "зарезервирована", "зарезервировано", "зарезервированы", "зарекомендован", "зарекомендована", "зарекомендовано", "зарекомендованы", "зарешечен", "зарешечена", "зарешечено", "зарешечены", "зарисован", "зарисована", "зарисовано", "зарисованы", "зарифмован", "зарифмована", "зарифмовано", "зарифмованы", "зарублен", "зарублена", "зарублено", "зарублены", "зарыт", "зарыта", "зарыто", "зарыты", "заряжен", "заряжена", "заряжено", "заряжены", "засажен", "засажена", "засажено", "засажены", "засахарен", "засахарена", "засахарено", "засахарены", "засвечен", "засвечена", "засвечено", "засвечены", "засвидетельствован", "засвидетельствована", "засвидетельствовано", "засвидетельствованы", "засекречен", "засекречена", "засекречено", "засекречены", "заселен", "заселена", "заселено", "заселены", "засечен", "засечена", "засечено", "засечены", "засеян", "засеяна", "засеяно", "засеяны", "засижен", "засижена", "засижено", "засижены", "заскребен", "заскребена", "заскребено", "заскребены", "заслан", "заслана", "заслано", "засланы", "заслонен", "заслонена", "заслонено", "заслонены", "заслужен", "заслужена", "заслужено", "заслужены", "заслушан", "заслушана", "заслушано", "заслушаны", "заслышан", "заслышана", "заслышано", "заслышаны", "засмеян", "засмеяна", "засмеяно", "засмеяны", "заснят", "заснята", "заснято", "засняты", "засолен", "засолена", "засолено", "засолены", "засорен", "засорена", "засорено", "засорены", "засосан", "засосана", "засосано", "засосаны", "заспиртован", "заспиртована", "заспиртовано", "заспиртованы", "заставлен", "заставлена", "заставлено", "заставлены", "застазастат", "застазастата", "застазастато", "застазастаты", "застегнут", "застегнута", "застегнуто", "застегнуты", "застелен", "застелена", "застелено", "застелены", "застигнут", "застигнута", "застигнуто", "застигнуты", "застиран", "застирана", "застирано", "застираны", "застолблен", "застолблена", "застолблено", "застолблены", "застопорен", "застопорена", "застопорено", "застопорены", "застрахован", "застрахована", "застраховано", "застрахованы", "застрелен", "застрелена", "застрелено", "застрелены", "застроен", "застроена", "застроено", "застроены", "застрочен", "застрочена", "застрочено", "застрочены", "застужен", "застужена", "застужено", "застужены", "застукан", "застукана", "застукано", "застуканы", "заступлен", "заступлена", "заступлено", "заступлены", "засужен", "засужена", "засужено", "засужены", "засунут", "засунута", "засунуто", "засунуты", "засучен", "засучена", "засучено", "засучены", "засушен", "засушена", "засушено", "засушены", "засчитан", "засчитана", "засчитано", "засчитаны", "затаен", "затаена", "затаено", "затаены", "затаскан", "затаскана", "затаскано", "затасканы", "затащен", "затащена", "затащено", "затащены", "затворен", "затворена", "затворено", "затворены", "затемнен", "затемнена", "затемнено", "затемнены", "затенен", "затенена", "затенено", "затенены", "затерт", "затерта", "затерто", "затерты", "затерян", "затеряна", "затеряно", "затеряны", "затеян", "затеяна", "затеяно", "затеяны", "заткнут", "заткнута", "заткнуто", "заткнуты", "затмлен", "затмлена", "затмлено", "затмлены", "затолкан", "затолкана", "затолкано", "затолканы", "затоплен", "затоплена", "затоплено", "затоплены", "затоптан", "затоптана", "затоптано", "затоптаны", "заторможен", "заторможена", "заторможено", "заторможены", "затороплен", "затороплена", "затороплено", "затороплены", "заточен", "заточена", "заточено", "заточены", "затошнен", "затошнена", "затошнено", "затошнены", "затравлен", "затравлена", "затравлено", "затравлены", "затрачен", "затрачена", "затрачено", "затрачены", "затребован", "затребована", "затребовано", "затребованы", "затронут", "затронута", "затронуто", "затронуты", "затруднен", "затруднена", "затруднено", "затруднены", "затуманен", "затуманена", "затуманено", "затуманены", "затушеван", "затушевана", "затушевано", "затушеваны", "затушен", "затушена", "затушено", "затушены", "затыкан", "затыкана", "затыкано", "затыканы", "затянут", "затянута", "затянуто", "затянуты", "заужен", "заужена", "заужено", "заужены", "заучен", "заучена", "заучено", "заучены", "зафиксирован", "зафиксирована", "зафиксировано", "зафиксированы", "зафрахтован", "зафрахтована", "зафрахтовано", "зафрахтованы", "захвачен", "захвачена", "захвачено", "захвачены", "захламлен", "захламлена", "захламлено", "захламлены", "захлестнут", "захлестнута", "захлестнуто", "захлестнуты", "захлопнут", "захлопнута", "захлопнуто", "захлопнуты", "захожен", "захожена", "захожено", "захожены", "захоронен", "захоронена", "захоронено", "захоронены", "зацеплен", "зацеплена", "зацеплено", "зацеплены", "зачарована", "зачаровано", "зачарованы", "зачат", "зачата", "зачато", "зачаты", "зачеркнут", "зачеркнута", "зачеркнуто", "зачеркнуты", "зачерпнут", "зачерпнута", "зачерпнуто", "зачерпнуты", "зачесан", "зачесана", "зачесано", "зачесаны", "зачехлен", "зачехлена", "зачехлено", "зачехлены", "зачислен", "зачислена", "зачислено", "зачислены", "зачитан", "зачитана", "зачитано", "зачитаны", "зачищен", "зачищена", "зачищено", "зачищены", "зачтен", "зачтена", "зачтено", "зачтены", "зашаркан", "зашаркана", "зашаркано", "зашарканы", "зашвырнут", "зашвырнута", "зашвырнуто", "зашвырнуты", "зашевелен", "зашевелена", "зашевелено", "зашевелены", "зашептан", "зашептана", "зашептано", "зашептаны", "зашит", "зашита", "зашито", "зашиты", "зашифрована", "зашифровано", "зашифрованы", "зашнурован", "зашнурована", "зашнуровано", "зашнурованы", "заштопан", "заштопана", "заштопано", "заштопаны", "зашторен", "зашторена", "зашторено", "зашторены", "заштрихован", "заштрихована", "заштриховано", "заштрихованы", "защелкнут", "защелкнута", "защелкнуто", "защелкнуты", "защемлен", "защемлена", "защемлено", "защемлены", "защипан", "защипана", "защипано", "защипаны", "защищен", "защищена", "защищено", "защищены", "заявлен", "заявлена", "заявлено", "заявлены", "звезданут", "звезданута", "звездануто", "звездануты", "идеализирован", "идеализирована", "идеализировано", "идеализированы", "идентифицирован", "идентифицирована", "идентифицировано", "идентифицированы", "избавлен", "избавлена", "избавлено", "избавлены", "избалован", "избалована", "избаловано", "избалованы", "избит", "избита", "избито", "избиты", "изборозжден", "изборозждена", "изборозждено", "изборозждены", "избран", "избрана", "избрано", "избраны", "изваян", "изваяна", "изваяно", "изваяны", "изведан", "изведана", "изведано", "изведаны", "извергнут", "извергнута", "извергнуто", "извергнуты", "извещен", "извещена", "извещено", "извещены", "извинен", "извинена", "извинено", "извинены", "извлечен", "извлечена", "извлечено", "извлечены", "извращен", "извращена", "извращено", "извращены", "изгажен", "изгажена", "изгажено", "изгажены", "изгнан", "изгнана", "изгнано", "изгнаны", "изготовлен", "изготовлена", "изготовлено", "изготовлены", "изгрызен", "изгрызена", "изгрызено", "изгрызены", "издерган", "издергана", "издергано", "издерганы", "изжарен", "изжарена", "изжарено", "изжарены", "изжит", "изжита", "изжито", "изжиты", "излажен", "излажена", "излажено", "излажены", "излечен", "излечена", "излечено", "излечены", "излит", "излита", "излито", "излиты", "изловлен", "изловлена", "изловлено", "изловлены", "изложен", "изложена", "изложено", "изложены", "изломан", "изломана", "изломано", "изломаны", "измазан", "измазана", "измазано", "измазаны", "измельчен", "измельчена", "измельчено", "измельчены", "изменен", "изменена", "изменено", "изменены", "измерен", "измерена", "измерено", "измерены", "измерян", "измеряна", "измеряно", "измеряны", "измотан", "измотана", "измотано", "измотаны", "измочален", "измочалена", "измочалено", "измочалены", "измучен", "измучена", "измучено", "измучены", "измышлен", "измышлена", "измышлено", "измышлены", "измят", "измята", "измято", "измяты", "изнасилован", "изнасилована", "изнасиловано", "изнасилованы", "изничтожен", "изничтожена", "изничтожено", "изничтожены", "изношен", "изношена", "изношено", "изношены", "изнурен", "изнурена", "изнурено", "изнурены", "изобличен", "изобличена", "изобличено", "изобличены", "изображен", "изображена", "изображено", "изображены", "изобретен", "изобретена", "изобретено", "изобретены", "изодран", "изодрана", "изодрано", "изодраны", "изолирован", "изолирована", "изолировано", "изолированы", "изорван", "изорвана", "изорвано", "изорваны", "изранен", "изранена", "изранено", "изранены", "израсходован", "израсходована", "израсходовано", "израсходованы", "изрезан", "изрезана", "изрезано", "изрезаны", "изречен", "изречена", "изречено", "изречены", "изрешечен", "изрешечена", "изрешечено", "изрешечены", "изрисован", "изрисована", "изрисовано", "изрисованы", "изрублен", "изрублена", "изрублено", "изрублены", "изрыт", "изрыта", "изрыто", "изрыты", "изувечен", "изувечена", "изувечено", "изувечены", "изукрашен", "изукрашена", "изукрашено", "изукрашены", "изумлен", "изумлена", "изумлено", "изумлены", "изуродован", "изуродована", "изуродовано", "изуродованы", "изучен", "изучена", "изучено", "изучены", "изъезжен", "изъезжена", "изъезжено", "изъезжены", "изъявлен", "изъявлена", "изъявлено", "изъявлены", "изъят", "изъята", "изъято", "изъяты", "изыскан", "изыскана", "изыскано", "изысканы", "иллюстрирован", "иллюстрирована", "иллюстрировано", "иллюстрированы", "иммобилизован", "иммобилизована", "иммобилизовано", "иммобилизованы", "иммунизирован", "иммунизирована", "иммунизировано", "иммунизированы", "импортирован", "импортирована", "импортировано", "импортированы", "инвестирован", "инвестирована", "инвестировано", "инвестированы", "индивидуализирован", "индивидуализирована", "индивидуализировано", "индивидуализированы", "индуцирован", "индуцирована", "индуцировано", "индуцированы", "инкорпорирован", "инкорпорирована", "инкорпорировано", "инкорпорированы", "инкриминирован", "инкриминирована", "инкриминировано", "инкриминированы", "инкрустирован", "инкрустирована", "инкрустировано", "инкрустированы", "инкубирован", "инкубирована", "инкубировано", "инкубированы", "инспирирован", "инспирирована", "инспирировано", "инспирированы", "инсценирован", "инсценирована", "инсценировано", "инсценированы", "интегрирован", "интегрирована", "интегрировано", "интегрированы", "интенсифицирован", "интенсифицирована", "интенсифицировано", "интенсифицированы", "интервьюирован", "интервьюирована", "интервьюировано", "интервьюированы", "интернирован", "интернирована", "интернировано", "интернированы", "интерпретирован", "интерпретирована", "интерпретировано", "интерпретированы", "интонирован", "интонирована", "интонировано", "интонированы", "инфицирован", "инфицирована", "инфицировано", "инфицированы", "информирован", "информирована", "информировано", "информированы", "искажен", "искажена", "искажено", "искажены", "искалечен", "искалечена", "искалечено", "искалечены", "исключен", "исключена", "исключено", "исключены", "исковеркан", "исковеркана", "исковеркано", "исковерканы", "исколот", "исколота", "исколото", "исколоты", "искорежен", "искорежена", "искорежено", "искорежены", "искоренен", "искоренена", "искоренено", "искоренены", "искривлен", "искривлена", "искривлено", "искривлены", "искромсан", "искромсана", "искромсано", "искромсаны", "искрошен", "искрошена", "искрошено", "искрошены", "искупан", "искупана", "искупано", "искупаны", "искуплен", "искуплена", "искуплено", "искуплены", "искусан", "искусана", "искусано", "искусаны", "искушен", "искушена", "искушено", "искушены", "испачкан", "испачкана", "испачкано", "испачканы", "испепелен", "испепелена", "испепелено", "испепелены", "испечен", "испечена", "испечено", "испечены", "испещрен", "испещрена", "испещрено", "испещрены", "исписан", "исписана", "исписано", "исписаны", "испит", "испита", "испито", "испиты", "исповедан", "исповедана", "исповедано", "исповеданы", "исповедован", "исповедована", "исповедовано", "исповедованы", "испоганен", "испоганена", "испоганено", "испоганены", "исполнен", "исполнена", "исполнено", "исполнены", "исполосован", "исполосована", "исполосовано", "исполосованы", "использован", "использована", "использовано", "использованы", "испорчен", "испорчена", "испорчено", "испорчены", "исправлен", "исправлена", "исправлено", "исправлены", "испробован", "испробована", "испробовано", "испробованы", "испрошен", "испрошена", "испрошено", "испрошены", "испуган", "испугана", "испугано", "испуганы", "испущен", "испущена", "испущено", "испущены", "испытан", "испытана", "испытано", "испытаны", "иссечен", "иссечена", "иссечено", "иссечены", "исследован", "исследована", "исследовано", "исследованы", "иссушен", "иссушена", "иссушено", "иссушены", "истерзан", "истерзана", "истерзано", "истерзаны", "истерт", "истерта", "истерто", "истерты", "истолкован", "истолкована", "истолковано", "истолкованы", "истончен", "истончена", "истончено", "истончены", "истоплен", "истоплена", "истоплено", "истоплены", "истоптан", "истоптана", "истоптано", "истоптаны", "исторгнут", "исторгнута", "исторгнуто", "исторгнуты", "источен", "источена", "источено", "источены", "истощен", "истощена", "истощено", "истощены", "истрачен", "истрачена", "истрачено", "истрачены", "истреблен", "истреблена", "истреблено", "истреблены", "истребован", "истребована", "истребовано", "истребованы", "истрепан", "истрепана", "истрепано", "истрепаны", "исхожен", "исхожена", "исхожено", "исхожены", "исцарапан", "исцарапана", "исцарапано", "исцарапаны", "исцелен", "исцелена", "исцелено", "исцелены", "исчеркан", "исчеркана", "исчеркано", "исчерканы", "исчерпан", "исчерпана", "исчерпано", "исчерпаны", "исчислен", "исчислена", "исчислено", "исчислены", "казнен", "казнена", "казнено", "казнены", "канонизирован", "канонизирована", "канонизировано", "канонизированы", "капитализирован", "капитализирована", "капитализировано", "капитализированы", "кастрирован", "кастрирована", "кастрировано", "кастрированы", "катализирован", "катализирована", "катализировано", "катализированы", "катапультирован", "катапультирована", "катапультировано", "катапультированы", "квалифицирован", "квалифицирована", "квалифицировано", "квалифицированы", "кинут", "кинута", "кинуто", "кинуты", "классифицирован", "классифицирована", "классифицировано", "классифицированы", "кликнут", "кликнута", "кликнуто", "кликнуты", "клюнут", "клюнута", "клюнуто", "клюнуты", "ковырнут", "ковырнута", "ковырнуто", "ковырнуты", "кодирован", "кодирована", "кодировано", "кодированы", "кокнут", "кокнута", "кокнуто", "кокнуты", "командирован", "командирована", "командировано", "командированы", "комиссован", "комиссована", "комиссовано", "комиссованы", "компенсирован", "компенсирована", "компенсировано", "компенсированы", "конвертирован", "конвертирована", "конвертировано", "конвертированы", "конденсирован", "конденсирована", "конденсировано", "конденсированы", "кондиционирован", "кондиционирована", "кондиционировано", "кондиционированы", "конкретизирован", "конкретизирована", "конкретизировано", "конкретизированы", "консолидирован", "консолидирована", "консолидировано", "консолидированы", "констатирован", "констатирована", "констатировано", "констатированы", "конституирован", "конституирована", "конституировано", "конституированы", "контратакован", "контратакована", "контратаковано", "контратакованы", "контужен", "контужена", "контужено", "контужены", "конфискован", "конфискована", "конфисковано", "конфискованы", "кончен", "кончена", "кончено", "кончены", "координирован", "координирована", "координировано", "координированы", "коронован", "коронована", "короновано", "коронованы", "коррумпирована", "коррумпировано", "коррумпированы", "кредитован", "кредитована", "кредитовано", "кредитованы", "кремирован", "кремирована", "кремировано", "кремированы", "крещен", "крещена", "крещено", "крещены", "куплен", "куплена", "куплено", "куплены", "курнут", "курнута", "курнуто", "курнуты", "куснут", "куснута", "куснуто", "куснуты", "легализован", "легализована", "легализовано", "легализованы", "легирован", "легирована", "легировано", "легированы", "ликвидирован", "ликвидирована", "ликвидировано", "ликвидированы", "лимитирован", "лимитирована", "лимитировано", "лимитированы", "лишен", "лишена", "лишено", "лишены", "лоббирован", "лоббирована", "лоббировано", "лоббированы", "локализован", "локализована", "локализовано", "локализованы", "лягнут", "лягнута", "лягнуто", "лягнуты", "маркирован", "маркирована", "маркировано", "маркированы", "массирован", "массирована", "массировано", "массированы", "материализован", "материализована", "материализовано", "материализованы", "механизирован", "механизирована", "механизировано", "механизированы", "минимизирован", "минимизирована", "минимизировано", "минимизированы", "минирован", "минирована", "минировано", "минированы", "минован", "минована", "миновано", "минованы", "мистифицирован", "мистифицирована", "мистифицировано", "мистифицированы", "мобилизован", "мобилизована", "мобилизовано", "мобилизованы", "моделирован", "моделирована", "моделировано", "моделированы", "модернизирован", "модернизирована", "модернизировано", "модернизированы", "модифицирован", "модифицирована", "модифицировано", "модифицированы", "монополизирован", "монополизирована", "монополизировано", "монополизированы", "мотивирована", "мотивировано", "мотивированы", "мотнут", "мотнута", "мотнуто", "мотнуты", "набеган", "набегана", "набегано", "набеганы", "набит", "набита", "набито", "набиты", "наболтан", "наболтана", "наболтано", "наболтаны", "набран", "набрана", "набрано", "набраны", "набросан", "набросана", "набросано", "набросаны", "наброшен", "наброшена", "наброшено", "наброшены", "навален", "навалена", "навалено", "навалены", "наварен", "наварена", "наварено", "наварены", "наведен", "наведена", "наведено", "наведены", "навезен", "навезена", "навезено", "навезены", "навернут", "навернута", "навернуто", "навернуты", "наверстан", "наверстана", "наверстано", "наверстаны", "навешан", "навешана", "навешано", "навешаны", "навешен", "навешена", "навешено", "навешены", "навещен", "навещена", "навещено", "навещены", "навеян", "навеяна", "навеяно", "навеяны", "навлечен", "навлечена", "навлечено", "навлечены", "наводнен", "наводнена", "наводнено", "наводнены", "наворован", "наворована", "наворовано", "наворованы", "наворочен", "наворочена", "наворочено", "наворочены", "навострен", "навострена", "навострено", "навострены", "навьючен", "навьючена", "навьючено", "навьючены", "навязан", "навязана", "навязано", "навязаны", "нагадан", "нагадана", "нагадано", "нагаданы", "нагажен", "нагажена", "нагажено", "нагажены", "нагнан", "нагнана", "нагнано", "нагнаны", "нагнут", "нагнута", "нагнуто", "нагнуты", "наговорен", "наговорена", "наговорено", "наговорены", "нагонян", "нагоняна", "нагоняно", "нагоняны", "наготовлен", "наготовлена", "наготовлено", "наготовлены", "награблен", "награблена", "награблено", "награблены", "награжден", "награждена", "награждено", "награждены", "нагрет", "нагрета", "нагрето", "нагреты", "нагромозжден", "нагромозждена", "нагромозждено", "нагромозждены", "нагружен", "нагружена", "нагружено", "нагружены", "нагулян", "нагуляна", "нагуляно", "нагуляны", "надавлен", "надавлена", "надавлено", "надавлены", "надвинут", "надвинута", "надвинуто", "надвинуты", "наделан", "наделана", "наделано", "наделаны", "надерган", "надергана", "надергано", "надерганы", "надет", "надета", "надето", "надеты", "надкушен", "надкушена", "надкушено", "надкушены", "надломлен", "надломлена", "надломлено", "надломлены", "надоен", "надоена", "надоено", "надоены", "надорван", "надорвана", "надорвано", "надорваны", "надоумлен", "надоумлена", "надоумлено", "надоумлены", "надписан", "надписана", "надписано", "надписаны", "надраен", "надраена", "надраено", "надраены", "надран", "надрана", "надрано", "надраны", "надрезан", "надрезана", "надрезано", "надрезаны", "надстроен", "надстроена", "надстроено", "надстроены", "надуман", "надумана", "надумано", "надуманы", "надут", "надута", "надуто", "надуты", "надушен", "надушена", "надушено", "надушены", "нажарен", "нажарена", "нажарено", "нажарены", "нажат", "нажата", "нажато", "нажаты", "нажит", "нажита", "нажито", "нажиты", "назван", "названа", "названо", "названы", "назначен", "назначена", "назначено", "назначены", "наигран", "наиграна", "наиграно", "наиграны", "наказан", "наказана", "наказано", "наказаны", "накален", "накалена", "накалено", "накалены", "накапан", "накапана", "накапано", "накапаны", "накаркан", "накаркана", "накаркано", "накарканы", "накатан", "накатана", "накатано", "накатаны", "накачан", "накачана", "накачано", "накачаны", "накачен", "накачена", "накачено", "накачены", "накидан", "накидана", "накидано", "накиданы", "накинут", "накинута", "накинуто", "накинуты", "наклеен", "наклеена", "наклеено", "наклеены", "накликан", "накликана", "накликано", "накликаны", "наклонен", "наклонена", "наклонено", "наклонены", "наковырян", "наковыряна", "наковыряно", "наковыряны", "наколот", "наколота", "наколото", "наколоты", "накопан", "накопана", "накопано", "накопаны", "накоплен", "накоплена", "накоплено", "накоплены", "накормлен", "накормлена", "накормлено", "накормлены", "накостылян", "накостыляна", "накостыляно", "накостыляны", "накошен", "накошена", "накошено", "накошены", "накрахмален", "накрахмалена", "накрахмалено", "накрахмалены", "накрашен", "накрашена", "накрашено", "накрашены", "накрошен", "накрошена", "накрошено", "накрошены", "накручен", "накручена", "накручено", "накручены", "накрыт", "накрыта", "накрыто", "накрыты", "накуплен", "накуплена", "накуплено", "накуплены", "накурен", "накурена", "накурено", "накурены", "налажен", "налажена", "налажено", "налажены", "налеплен", "налеплена", "налеплено", "налеплены", "налетан", "налетана", "налетано", "налетаны", "налит", "налита", "налито", "налиты", "наловлен", "наловлена", "наловлено", "наловлены", "наложен", "наложена", "наложено", "наложены", "наломан", "наломана", "наломано", "наломаны", "намагничен", "намагничена", "намагничено", "намагничены", "намазан", "намазана", "намазано", "намазаны", "намалеван", "намалевана", "намалевано", "намалеваны", "наметан", "наметана", "наметано", "наметаны", "наметен", "наметена", "наметено", "наметены", "намечен", "намечена", "намечено", "намечены", "намешан", "намешана", "намешано", "намешаны", "намозолен", "намозолена", "намозолено", "намозолены", "наморщен", "наморщена", "наморщено", "наморщены", "намотан", "намотана", "намотано", "намотаны", "намочен", "намочена", "намочено", "намочены", "намылен", "намылена", "намылено", "намылены", "намыт", "намыта", "намыто", "намыты", "намят", "намята", "намято", "намяты", "нанесен", "нанесена", "нанесено", "нанесены", "нанизан", "нанизана", "нанизано", "нанизаны", "наношен", "наношена", "наношено", "наношены", "нанят", "нанята", "нанято", "наняты", "напет", "напета", "напето", "напеты", "напечатан", "напечатана", "напечатано", "напечатаны", "напечен", "напечена", "напечено", "напечены", "напилен", "напилена", "напилено", "напилены", "написан", "написана", "написано", "написаны", "напитан", "напитана", "напитано", "напитаны", "напихан", "напихана", "напихано", "напиханы", "напичкан", "напичкана", "напичкано", "напичканы", "наплакан", "наплакана", "наплакано", "наплаканы", "наплеван", "наплевана", "наплевано", "наплеваны", "наплетен", "наплетена", "наплетено", "наплетены", "напложен", "напложена", "напложено", "напложены", "напоен", "напоена", "напоено", "напоены", "наползан", "наползана", "наползано", "наползаны", "наполнен", "наполнена", "наполнено", "наполнены", "напомажен", "напомажена", "напомажено", "напомажены", "напомнен", "напомнена", "напомнено", "напомнены", "напорчен", "напорчена", "напорчено", "напорчены", "направлен", "направлена", "направлено", "направлены", "напророчен", "напророчена", "напророчено", "напророчены", "напряжен", "напряжена", "напряжено", "напряжены", "напуган", "напугана", "напугано", "напуганы", "напудрен", "напудрена", "напудрено", "напудрены", "напутан", "напутана", "напутано", "напутаны", "напутствован", "напутствована", "напутствовано", "напутствованы", "напущен", "напущена", "напущено", "напущены", "напялен", "напялена", "напялено", "напялены", "наработан", "наработана", "наработано", "наработаны", "наращен", "наращена", "наращено", "наращены", "нарезан", "нарезана", "нарезано", "нарезаны", "наречен", "наречена", "наречено", "наречены", "нарисован", "нарисована", "нарисовано", "нарисованы", "нарожден", "нарождена", "нарождено", "нарождены", "нарублен", "нарублена", "нарублено", "нарублены", "нарушен", "нарушена", "нарушено", "нарушены", "нарыт", "нарыта", "нарыто", "нарыты", "наряжен", "наряжена", "наряжено", "наряжены", "насажден", "насаждена", "насаждено", "насаждены", "насажен", "насажена", "насажено", "насажены", "населен", "населена", "населено", "населены", "насижен", "насижена", "насижено", "насижены", "наскребен", "наскребена", "наскребено", "наскребены", "наслан", "наслана", "наслано", "насланы", "наследован", "наследована", "наследовано", "наследованы", "насмешен", "насмешена", "насмешено", "насмешены", "насобиран", "насобирана", "насобирано", "насобираны", "насован", "насована", "насовано", "насованы", "насолен", "насолена", "насолено", "насолены", "наставлен", "наставлена", "наставлено", "наставлены", "настелен", "настелена", "настелено", "настелены", "настигнут", "настигнута", "настигнуто", "настигнуты", "настоян", "настояна", "настояно", "настояны", "настроен", "настроена", "настроено", "настроены", "настрочен", "настрочена", "настрочено", "настрочены", "насуплен", "насуплена", "насуплено", "насуплены", "насчитан", "насчитана", "насчитано", "насчитаны", "насыщен", "насыщена", "насыщено", "насыщены", "натаскан", "натаскана", "натаскано", "натасканы", "натерт", "натерта", "натерто", "натерты", "натолкнут", "натолкнута", "натолкнуто", "натолкнуты", "натоплен", "натоплена", "натоплено", "натоплены", "натоптан", "натоптана", "натоптано", "натоптаны", "наточен", "наточена", "наточено", "наточены", "натравлен", "натравлена", "натравлено", "натравлены", "натренирован", "натренирована", "натренировано", "натренированы", "натружен", "натружена", "натружено", "натружены", "натыкан", "натыкана", "натыкано", "натыканы", "натянут", "натянута", "натянуто", "натянуты", "научен", "научена", "научено", "научены", "нафарширован", "нафарширована", "нафаршировано", "нафаршированы", "нахлобучен", "нахлобучена", "нахлобучено", "нахлобучены", "нахмурен", "нахмурена", "нахмурено", "нахмурены", "нахожен", "нахожена", "нахожено", "нахожены", "нахохлен", "нахохлена", "нахохлено", "нахохлены", "нацарапан", "нацарапана", "нацарапано", "нацарапаны", "нацежен", "нацежена", "нацежено", "нацежены", "нацелен", "нацелена", "нацелено", "нацелены", "нацеплен", "нацеплена", "нацеплено", "нацеплены", "национализирован", "национализирована", "национализировано", "национализированы", "начат", "начата", "начато", "начаты", "начертан", "начертана", "начертано", "начертаны", "начерчен", "начерчена", "начерчено", "начерчены", "начинен", "начинена", "начинено", "начинены", "начислен", "начислена", "начислено", "начислены", "начищен", "начищена", "начищено", "начищены", "нашарен", "нашарена", "нашарено", "нашарены", "нашептан", "нашептана", "нашептано", "нашептаны", "нашинкован", "нашинкована", "нашинковано", "нашинкованы", "нашит", "нашита", "нашито", "нашиты", "нашпигован", "нашпигована", "нашпиговано", "нашпигованы", "нащупан", "нащупана", "нащупано", "нащупаны", "наэлектризован", "наэлектризована", "наэлектризовано", "наэлектризованы", "невзлюблен", "невзлюблена", "невзлюблено", "невзлюблены", "недогляжен", "недогляжена", "недогляжено", "недогляжены", "недоговорен", "недоговорена", "недоговорено", "недоговорены", "недоделан", "недоделана", "недоделано", "недоделаны", "недооценен", "недооценена", "недооценено", "недооценены", "недопит", "недопита", "недопито", "недопиты", "недоплачен", "недоплачена", "недоплачено", "недоплачены", "недополучен", "недополучена", "недополучено", "недополучены", "недопонят", "недопонята", "недопонято", "недопоняты", "недосказан", "недосказана", "недосказано", "недосказаны", "недослышан", "недослышана", "недослышано", "недослышаны", "недосмотрен", "недосмотрена", "недосмотрено", "недосмотрены", "опосредован", "опосредована", "опосредовано", "опосредованы", "оптимизирован", "оптимизирована", "оптимизировано", "оптимизированы", "отслежен", "отслежена", "отслежено", "отслежены", "перечеркнут", "перечеркнута", "перечеркнуто", "перечеркнуты", "перечислен", "перечислена", "перечислено", "перечислены", "перечитан", "перечитана", "перечитано", "перечитаны", "перечтен", "перечтена", "перечтено", "перечтены", "перешит", "перешита", "перешито", "перешиты", "персонифицирован", "персонифицирована", "персонифицировано", "персонифицированы", "пикирован", "пикирована", "пикировано", "пикированы", "пленен", "пленена", "пленено", "пленены", "плеснут", "плеснута", "плеснуто", "плеснуты", "пнут", "пнута", "пнуто", "пнуты", "побалован", "побалована", "побаловано", "побалованы", "побежден", "побеждена", "побеждено", "побеждены", "побелен", "побелена", "побелено", "побелены", "побережен", "побережена", "побережено", "побережены", "побеспокоен", "побеспокоена", "побеспокоено", "побеспокоены", "побит", "побита", "побито", "побиты", "поблагодарен", "поблагодарена", "поблагодарено", "поблагодарены", "побрит", "побрита", "побрито", "побриты", "побросан", "побросана", "побросано", "побросаны", "побужден", "побуждена", "побуждено", "побуждены", "побужен", "побужена", "побужено", "побужены", "повален", "повалена", "повалено", "повалены", "поведан", "поведана", "поведано", "поведаны", "поведен", "поведена", "поведено", "поведены", "повезен", "повезена", "повезено", "повезены", "повенчан", "повенчана", "повенчано", "повенчаны", "повергнут", "повергнута", "повергнуто", "повергнуты", "поверен", "поверена", "поверено", "поверены", "повернут", "повернута", "повернуто", "повернуты", "поверчен", "поверчена", "поверчено", "поверчены", "повешен", "повешена", "повешено", "повешены", "повеян", "повеяна", "повеяно", "повеяны", "повидан", "повидана", "повидано", "повиданы", "поврежден", "повреждена", "повреждено", "повреждены", "повторен", "повторена", "повторено", "повторены", "повышен", "повышена", "повышено", "повышены", "повязан", "повязана", "повязано", "повязаны", "погашен", "погашена", "погашено", "погашены", "поглажен", "поглажена", "поглажено", "поглажены", "поглощен", "поглощена", "поглощено", "поглощены", "погнут", "погнута", "погнуто", "погнуты", "пограблен", "пограблена", "пограблено", "пограблены", "погребен", "погребена", "погребено", "погребены", "погрет", "погрета", "погрето", "погреты", "погружен", "погружена", "погружено", "погружены", "погрызен", "погрызена", "погрызено", "погрызены", "погублен", "погублена", "погублено", "погублены", "подавлен", "подавлена", "подавлено", "подавлены", "подарен", "подарена", "подарено", "подарены", "подбит", "подбита", "подбито", "подбиты", "подбодрен", "подбодрена", "подбодрено", "подбодрены", "подброшен", "подброшена", "подброшено", "подброшены", "подвален", "подвалена", "подвалено", "подвалены", "подведен", "подведена", "подведено", "подведены", "подвезен", "подвезена", "подвезено", "подвезены", "подвергнут", "подвергнута", "подвергнуто", "подвергнуты", "подвернут", "подвернута", "подвернуто", "подвернуты", "подвешен", "подвешена", "подвешено", "подвешены", "подвигнут", "подвигнута", "подвигнуто", "подвигнуты", "подвинут", "подвинута", "подвинуто", "подвинуты", "подвязан", "подвязана", "подвязано", "подвязаны", "подгляжен", "подгляжена", "подгляжено", "подгляжены", "подговорен", "подговорена", "подговорено", "подговорены", "подготовлен", "подготовлена", "подготовлено", "подготовлены", "подделан", "подделана", "подделано", "подделаны", "поддержан", "поддержана", "поддержано", "поддержаны", "поддернут", "поддернута", "поддернуто", "поддернуты", "поддет", "поддета", "поддето", "поддеты", "поделен", "поделена", "поделено", "поделены", "подерган", "подергана", "подергано", "подерганы", "подержан", "подержана", "подержано", "подержаны", "подернут", "подернута", "подернуто", "подернуты", "поджарен", "поджарена", "поджарено", "поджарены", "поджат", "поджата", "поджато", "поджаты", "подзаработан", "подзаработана", "подзаработано", "подзаработаны", "подкараулен", "подкараулена", "подкараулено", "подкараулены", "подкачан", "подкачана", "подкачано", "подкачаны", "подкачен", "подкачена", "подкачено", "подкачены", "подкинут", "подкинута", "подкинуто", "подкинуты", "подклеен", "подклеена", "подклеено", "подклеены", "подключен", "подключена", "подключено", "подключены", "подкован", "подкована", "подковано", "подкованы", "подколот", "подколота", "подколото", "подколоты", "подкоплен", "подкоплена", "подкоплено", "подкоплены", "подкормлен", "подкормлена", "подкормлено", "подкормлены", "подкошен", "подкошена", "подкошено", "подкошены", "подкрашен", "подкрашена", "подкрашено", "подкрашены", "подкреплен", "подкреплена", "подкреплено", "подкреплены", "подкручен", "подкручена", "подкручено", "подкручены", "подкуплен", "подкуплена", "подкуплено", "подкуплены", "подлатан", "подлатана", "подлатано", "подлатаны", "подлечен", "подлечена", "подлечено", "подлечены", "подлит", "подлита", "подлито", "подлиты", "подловлен", "подловлена", "подловлено", "подловлены", "подложен", "подложена", "подложено", "подложены", "подмазан", "подмазана", "подмазано", "подмазаны", "подменен", "подменена", "подменено", "подменены", "подметан", "подметана", "подметано", "подметаны", "подметен", "подметена", "подметено", "подметены", "подмечен", "подмечена", "подмечено", "подмечены", "подмешан", "подмешана", "подмешано", "подмешаны", "подморожен", "подморожена", "подморожено", "подморожены", "подмочен", "подмочена", "подмочено", "подмочены", "подмыт", "подмыта", "подмыто", "подмыты", "подмят", "подмята", "подмято", "подмяты", "поднажат", "поднажата", "поднажато", "поднажаты", "поднесен", "поднесена", "поднесено", "поднесены", "подновлен", "подновлена", "подновлено", "подновлены", "подношен", "подношена", "подношено", "подношены", "поднят", "поднята", "поднято", "подняты", "подобран", "подобрана", "подобрано", "подобраны", "подогнан", "подогнана", "подогнано", "подогнаны", "подогнут", "подогнута", "подогнуто", "подогнуты", "подогрет", "подогрета", "подогрето", "подогреты", "пододвинут", "пододвинута", "пододвинуто", "пододвинуты", "подоен", "подоена", "подоено", "подоены", "подожжен", "подожжена", "подожжено", "подожжены", "подозван", "подозвана", "подозвано", "подозваны", "подорван", "подорвана", "подорвано", "подорваны", "подослан", "подослана", "подослано", "подосланы", "подоткнут", "подоткнута", "подоткнуто", "подоткнуты", "подпален", "подпалена", "подпалено", "подпалены", "подперт", "подперта", "подперто", "подперты", "подпилен", "подпилена", "подпилено", "подпилены", "подписан", "подписана", "подписано", "подписаны", "подпорчен", "подпорчена", "подпорчено", "подпорчены", "подпоясан", "подпоясана", "подпоясано", "подпоясаны", "подправлен", "подправлена", "подправлено", "подправлены", "подпущен", "подпущена", "подпущено", "подпущены", "подразделен", "подразделена", "подразделено", "подразделены", "подран", "подрана", "подрано", "подраны", "подрезан", "подрезана", "подрезано", "подрезаны", "подровнян", "подровняна", "подровняно", "подровняны", "подрублен", "подрублена", "подрублено", "подрублены", "подрулен", "подрулена", "подрулено", "подрулены", "подрумянен", "подрумянена", "подрумянено", "подрумянены", "подсажен", "подсажена", "подсажено", "подсажены", "подсвечен", "подсвечена", "подсвечено", "подсвечены", "подселен", "подселена", "подселено", "подселены", "подсечен", "подсечена", "подсечено", "подсечены", "подсказан", "подсказана", "подсказано", "подсказаны", "подслащен", "подслащена", "подслащено", "подслащены", "подслушан", "подслушана", "подслушано", "подслушаны", "подсмотрен", "подсмотрена", "подсмотрено", "подсмотрены", "подсоединен", "подсоединена", "подсоединено", "подсоединены", "подсолен", "подсолена", "подсолено", "подсолены", "подставлен", "подставлена", "подставлено", "подставлены", "подстегнут", "подстегнута", "подстегнуто", "подстегнуты", "подстелен", "подстелена", "подстелено", "подстелены", "подстережен", "подстережена", "подстережено", "подстережены", "подстрелен", "подстрелена", "подстрелено", "подстрелены", "подстрижен", "подстрижена", "подстрижено", "подстрижены", "подстроен", "подстроена", "подстроено", "подстроены", "подсунут", "подсунута", "подсунуто", "подсунуты", "подсушен", "подсушена", "подсушено", "подсушены", "подсчитан", "подсчитана", "подсчитано", "подсчитаны", "подтащен", "подтащена", "подтащено", "подтащены", "подтвержден", "подтверждена", "подтверждено", "подтверждены", "подтолкнут", "подтолкнута", "подтолкнуто", "подтолкнуты", "подточен", "подточена", "подточено", "подточены", "подтыкан", "подтыкана", "подтыкано", "подтыканы", "подтянут", "подтянута", "подтянуто", "подтянуты", "подучен", "подучена", "подучено", "подучены", "подхвачен", "подхвачена", "подхвачено", "подхвачены", "подцеплен", "подцеплена", "подцеплено", "подцеплены", "подчеркнут", "подчеркнута", "подчеркнуто", "подчеркнуты", "подчинен", "подчинена", "подчинено", "подчинены", "подчищен", "подчищена", "подчищено", "подчищены", "подшит", "подшита", "подшито", "подшиты", "подыгран", "подыграна", "подыграно", "подыграны", "подытожен", "подытожена", "подытожено", "подытожены", "пожалован", "пожалована", "пожаловано", "пожалованы", "пожарен", "пожарена", "пожарено", "пожарены", "пожат", "пожата", "пожато", "пожаты", "пожеван", "пожевана", "пожевано", "пожеваны", "пожертвован", "пожертвована", "пожертвовано", "пожертвованы", "пожран", "пожрана", "пожрано", "пожраны", "пожурен", "пожурена", "пожурено", "пожурены", "позабавлен", "позабавлена", "позабавлено", "позабавлены", "позаимствован", "позаимствована", "позаимствовано", "позаимствованы", "позван", "позвана", "позвано", "позваны", "позволен", "позволена", "позволено", "позволены", "поздравлен", "поздравлена", "поздравлено", "поздравлены", "позиционирован", "позиционирована", "позиционировано", "позиционированы", "познакомлен", "познакомлена", "познакомлено", "познакомлены", "познан", "познана", "познано", "познаны", "позолочен", "позолочена", "позолочено", "позолочены", "поигран", "поиграна", "поиграно", "поиграны", "поименован", "поименована", "поименовано", "поименованы", "пойман", "поймана", "поймано", "пойманы", "показан", "показана", "показано", "показаны", "покалечен", "покалечена", "покалечено", "покалечены", "покатан", "покатана", "покатано", "покатаны", "покачан", "покачана", "покачано", "покачаны", "покачен", "покачена", "покачено", "покачены", "покидан", "покидана", "покидано", "покиданы", "покинут", "покинута", "покинуто", "покинуты", "поклеван", "поклевана", "поклевано", "поклеваны", "поколебан", "поколебана", "поколебано", "поколебаны", "поколочен", "поколочена", "поколочено", "поколочены", "покончен", "покончена", "покончено", "покончены", "покорежен", "покорежена", "покорежено", "покорежены", "покорен", "покорена", "покорено", "покорены", "покормлен", "покормлена", "покормлено", "покормлены", "покороблен", "покороблена", "покороблено", "покороблены", "покошен", "покошена", "покошено", "покошены", "покрашен", "покрашена", "покрашено", "покрашены", "покривлен", "покривлена", "покривлено", "покривлены", "покритикован", "покритикована", "покритиковано", "покритикованы", "покрошен", "покрошена", "покрошено", "покрошены", "покружен", "покружена", "покружено", "покружены", "покручен", "покручена", "покручено", "покручены", "покрыт", "покрыта", "покрыто", "покрыты", "покупан", "покупана", "покупано", "покупаны", "покурен", "покурена", "покурено", "покурены", "покусан", "покусана", "покусано", "покусаны", "покушан", "покушана", "покушано", "покушаны", "полажен", "полажена", "полажено", "полажены", "полечен", "полечена", "полечено", "полечены", "полит", "полита", "полито", "политы", "половлен", "половлена", "половлено", "половлены", "положен", "положена", "положено", "положены", "поломан", "поломана", "поломано", "поломаны", "полоснут", "полоснута", "полоснуто", "полоснуты", "получен", "получена", "получено", "получены", "поляризован", "поляризована", "поляризовано", "поляризованы", "помазан", "помазана", "помазано", "помазаны", "помассирован", "помассирована", "помассировано", "помассированы", "поменян", "поменяна", "поменяно", "поменяны", "померен", "померена", "померено", "померены", "помечен", "помечена", "помечено", "помечены", "помешан", "помешана", "помешано", "помешаны", "помещен", "помещена", "помещено", "помещены", "помилован", "помилована", "помиловано", "помилованы", "помножен", "помножена", "помножено", "помножены", "помолвлен", "помолвлена", "помолвлено", "помолвлены", "помотан", "помотана", "помотано", "помотаны", "помрачен", "помрачена", "помрачено", "помрачены", "помыт", "помыта", "помыто", "помыты", "помянут", "помянута", "помянуто", "помянуты", "понаделан", "понаделана", "понаделано", "понаделаны", "понастроен", "понастроена", "понастроено", "понастроены", "понесен", "понесена", "понесено", "понесены", "понижен", "понижена", "понижено", "понижены", "поношена", "поношено", "поношены", "понят", "понята", "понято", "поняты", "пообещан", "пообещана", "пообещано", "пообещаны", "поощрен", "поощрена", "поощрено", "поощрены", "поперчен", "поперчена", "поперчено", "поперчены", "попет", "попета", "попето", "попеты", "пописан", "пописана", "пописано", "пописаны", "попит", "попита", "попито", "попиты", "пополнен", "пополнена", "пополнено", "пополнены", "попорчен", "попорчена", "попорчено", "попорчены", "поправлен", "поправлена", "поправлено", "поправлены", "попран", "попрана", "попрано", "попраны", "попрекнут", "попрекнута", "попрекнуто", "попрекнуты", "поприветствован", "поприветствована", "поприветствовано", "поприветствованы", "попробован", "попробована", "попробовано", "попробованы", "попрошен", "попрошена", "попрошено", "попрошены", "попуган", "попугана", "попугано", "попуганы", "популяризирован", "популяризирована", "популяризировано", "популяризированы", "попутан", "попутана", "попутано", "попутаны", "порабощен", "порабощена", "порабощено", "порабощены", "порадован", "порадована", "порадовано", "порадованы", "поражен", "поражена", "поражено", "поражены", "поранен", "поранена", "поранено", "поранены", "пораскинут", "пораскинута", "пораскинуто", "пораскинуты", "порассказан", "порассказана", "порассказано", "порассказаны", "порасспрошен", "порасспрошена", "порасспрошено", "порасспрошены", "порван", "порвана", "порвано", "порваны", "порезан", "порезана", "порезано", "порезаны", "порекомендован", "порекомендована", "порекомендовано", "порекомендованы", "порешен", "порешена", "порешено", "порешены", "порожден", "порождена", "порождено", "порождены", "порубан", "порубана", "порубано", "порубаны", "порублен", "порублена", "порублено", "порублены", "поруган", "поругана", "поругано", "поруганы", "поручен", "поручена", "поручено", "поручены", "порушен", "порушена", "порушено", "порушены", "посажен", "посажена", "посажено", "посажены", "посвящен", "посвящена", "посвящено", "посвящены", "поселен", "поселена", "поселено", "поселены", "посеребрен", "посеребрена", "посеребрено", "посеребрены", "посещен", "посещена", "посещено", "посещены", "посеян", "посеяна", "посеяно", "посеяны", "поскребен", "поскребена", "поскребено", "поскребены", "послан", "послана", "послано", "посланы", "послушан", "послушана", "послушано", "послушаны", "посмотрен", "посмотрена", "посмотрено", "посмотрены", "посниман", "поснимана", "поснимано", "посниманы", "посолен", "посолена", "посолено", "посолены", "пососан", "пососана", "пососано", "пососаны", "посрамлен", "посрамлена", "посрамлено", "посрамлены", "поставлен", "поставлена", "поставлено", "поставлены", "постановлен", "постановлена", "постановлено", "постановлены", "постелен", "постелена", "постелено", "постелены", "постигнут", "постигнута", "постигнуто", "постигнуты", "постиран", "постирана", "постирано", "постираны", "пострелян", "постреляна", "постреляно", "постреляны", "пострижен", "пострижена", "пострижено", "пострижены", "построен", "построена", "построено", "построены", "постулирован", "постулирована", "постулировано", "постулированы", "посчитан", "посчитана", "посчитано", "посчитаны", "потереблен", "потереблена", "потереблено", "потереблены", "потерплен", "потерплена", "потерплено", "потерплены", "потерт", "потерта", "потерто", "потерты", "потерян", "потеряна", "потеряно", "потеряны", "потеснен", "потеснена", "потеснено", "потеснены", "потешен", "потешена", "потешено", "потешены", "потискан", "потискана", "потискано", "потисканы", "потоплен", "потоплена", "потоплено", "потоплены", "потоптан", "потоптана", "потоптано", "потоптаны", "потороплен", "потороплена", "потороплено", "потороплены", "потравлен", "потравлена", "потравлено", "потравлены", "потрачен", "потрачена", "потрачено", "потрачены", "потреблен", "потреблена", "потреблено", "потреблены", "потребован", "потребована", "потребовано", "потребованы", "потревожен", "потревожена", "потревожено", "потревожены", "потрепан", "потрепана", "потрепано", "потрепаны", "потроган", "потрогана", "потрогано", "потроганы", "потрушен", "потрушена", "потрушено", "потрушены", "потрясен", "потрясена", "потрясено", "потрясены", "потуплен", "потуплена", "потуплено", "потуплены", "потушен", "потушена", "потушено", "потушены", "потыкан", "потыкана", "потыкано", "потыканы", "потянут", "потянута", "потянуто", "потянуты", "поубавлен", "поубавлена", "поубавлено", "поубавлены", "поучен", "поучена", "поучено", "поучены", "похвален", "похвалена", "похвалено", "похвалены", "похерен", "похерена", "похерено", "похерены", "похищен", "похищена", "похищено", "похищены", "похлебан", "похлебана", "похлебано", "похлебаны", "похлопан", "похлопана", "похлопано", "похлопаны", "похоронен", "похоронена", "похоронено", "похоронены", "поцарапан", "поцарапана", "поцарапано", "поцарапаны", "поцелован", "поцелована", "поцеловано", "поцелованы", "почат", "почата", "почато", "початы", "почерпнут", "почерпнута", "почерпнуто", "почерпнуты", "почесан", "почесана", "почесано", "почесаны", "починен", "починена", "починено", "починены", "почитан", "почитана", "почитано", "почитаны", "почищен", "почищена", "почищено", "почищены", "почтен", "почтена", "почтено", "почтены", "почувствован", "почувствована", "почувствовано", "почувствованы", "пошатнут", "пошатнута", "пошатнуто", "пошатнуты", "пошевелен", "пошевелена", "пошевелено", "пошевелены", "пошит", "пошита", "пошито", "пошиты", "пощелкан", "пощелкана", "пощелкано", "пощелканы", "пощипан", "пощипана", "пощипано", "пощипаны", "пощупан", "пощупана", "пощупано", "пощупаны", "пояснен", "пояснена", "пояснено", "пояснены", "превозможен", "превозможена", "превозможено", "превозможены", "превращен", "превращена", "превращено", "превращены", "превышен", "превышена", "превышено", "превышены", "прегражен", "прегражена", "прегражено", "прегражены", "предварен", "предварена", "предварено", "предварены", "предвосхищен", "предвосхищена", "предвосхищено", "предвосхищены", "предложен", "предложена", "предложено", "предложены", "предназначен", "предназначена", "предназначено", "предназначены", "предначертан", "предначертана", "предначертано", "предначертаны", "предопределен", "предопределена", "предопределено", "предопределены", "предоставлен", "предоставлена", "предоставлено", "предоставлены", "предостережен", "предостережена", "предостережено", "предостережены", "предотвращен", "предотвращена", "предотвращено", "предотвращены", "предохранен", "предохранена", "предохранено", "предохранены", "предписан", "предписана", "предписано", "предписаны", "предположен", "предположена", "предположено", "предположены", "предпослан", "предпослана", "предпослано", "предпосланы", "предпочтен", "предпочтена", "предпочтено", "предпочтены", "предпринят", "предпринята", "предпринято", "предприняты", "предрасположен", "предрасположена", "предрасположено", "предрасположены", "предречен", "предречена", "предречено", "предречены", "предрешен", "предрешена", "предрешено", "предрешены", "предсказан", "предсказана", "предсказано", "предсказаны", "представлен", "представлена", "представлено", "представлены", "предугадан", "предугадана", "предугадано", "предугаданы", "предубежден", "предубеждена", "предубеждено", "предубеждены", "предусмотрен", "предусмотрена", "предусмотрено", "предусмотрены", "предъявлен", "предъявлена", "предъявлено", "предъявлены", "презентован", "презентована", "презентовано", "презентованы", "преисполнен", "преисполнена", "преисполнено", "преисполнены", "преклонен", "преклонена", "преклонено", "преклонены", "прекращен", "прекращена", "прекращено", "прекращены", "преломлен", "преломлена", "преломлено", "преломлены", "прельщен", "прельщена", "прельщено", "прельщены", "премирован", "премирована", "премировано", "премированы", "преображен", "преображена", "преображено", "преображены", "преодолен", "преодолена", "преодолено", "преодолены", "препарирован", "препарирована", "препарировано", "препарированы", "преподнесен", "преподнесена", "преподнесено", "преподнесены", "препровожен", "препровожена", "препровожено", "препровожены", "прерван", "прервана", "прервано", "прерваны", "пресечен", "пресечена", "пресечено", "пресечены", "преступлен", "преступлена", "преступлено", "преступлены", "претворен", "претворена", "претворено", "претворены", "претерплен", "претерплена", "претерплено", "претерплены", "преувеличен", "преувеличена", "преувеличено", "преувеличены", "прибавлен", "прибавлена", "прибавлено", "прибавлены", "прибережен", "прибережена", "прибережено", "прибережены", "прибит", "прибита", "прибито", "прибиты", "приближен", "приближена", "приближено", "приближены", "прибран", "прибрана", "прибрано", "прибраны", "привален", "привалена", "привалено", "привалены", "приварен", "приварена", "приварено", "приварены", "приведен", "приведена", "приведено", "приведены", "привезен", "привезена", "привезено", "привезены", "привешен", "привешена", "привешено", "привешены", "привинчен", "привинчена", "привинчено", "привинчены", "привит", "привита", "привито", "привиты", "привлечен", "привлечена", "привлечено", "привлечены", "привнесен", "привнесена", "привнесено", "привнесены", "приворожен", "приворожена", "приворожено", "приворожены", "привязан", "привязана", "привязано", "привязаны", "пригвозжен", "пригвозжена", "пригвозжено", "пригвозжены", "приглажен", "приглажена", "приглажено", "приглажены", "приглашен", "приглашена", "приглашено", "приглашены", "приглушен", "приглушена", "приглушено", "приглушены", "пригнан", "пригнана", "пригнано", "пригнаны", "пригнут", "пригнута", "пригнуто", "пригнуты", "приговорен", "приговорена", "приговорено", "приговорены", "приголублен", "приголублена", "приголублено", "приголублены", "приготовлен", "приготовлена", "приготовлено", "приготовлены", "пригрет", "пригрета", "пригрето", "пригреты", "пригублен", "пригублена", "пригублено", "пригублены", "придавлен", "придавлена", "придавлено", "придавлены", "придвинут", "придвинута", "придвинуто", "придвинуты", "приделан", "приделана", "приделано", "приделаны", "придержан", "придержана", "придержано", "придержаны", "придуман", "придумана", "придумано", "придуманы", "придушен", "придушена", "придушено", "придушены", "прижат", "прижата", "прижато", "прижаты", "прижит", "прижита", "прижито", "прижиты", "призван", "призвана", "призвано", "призваны", "приземлен", "приземлена", "приземлено", "приземлены", "признан", "признана", "признано", "признаны", "приказан", "приказана", "приказано", "приказаны", "прикарманен", "прикарманена", "прикарманено", "прикарманены", "прикачен", "прикачена", "прикачено", "прикачены", "прикинут", "прикинута", "прикинуто", "прикинуты", "приклеен", "приклеена", "приклеено", "приклеены", "приклонен", "приклонена", "приклонено", "приклонены", "прикован", "прикована", "приковано", "прикованы", "приколот", "приколота", "приколото", "приколоты", "приколочен", "приколочена", "приколочено", "приколочены", "прикомандирован", "прикомандирована", "прикомандировано", "прикомандированы", "прикончен", "прикончена", "прикончено", "прикончены", "прикормлен", "прикормлена", "прикормлено", "прикормлены", "прикреплен", "прикреплена", "прикреплено", "прикреплены", "прикручен", "прикручена", "прикручено", "прикручены", "прикрыт", "прикрыта", "прикрыто", "прикрыты", "прикуплен", "прикуплена", "прикуплено", "прикуплены", "прикушен", "прикушена", "прикушено", "прикушены", "прилажен", "прилажена", "прилажено", "прилажены", "приласкан", "приласкана", "приласкано", "приласканы", "прилеплен", "прилеплена", "прилеплено", "прилеплены", "прилит", "прилита", "прилито", "прилиты", "приложен", "приложена", "приложено", "приложены", "приманен", "приманена", "приманено", "приманены", "применен", "применена", "применено", "применены", "примерен", "примерена", "примерено", "примерены", "примерян", "примеряна", "примеряно", "примеряны", "примечен", "примечена", "примечено", "примечены", "примирен", "примирена", "примирено", "примирены", "приморожен", "приморожена", "приморожено", "приморожены", "примотан", "примотана", "примотано", "примотаны", "примят", "примята", "примято", "примяты", "принаряжен", "принаряжена", "принаряжено", "принаряжены", "принесен", "принесена", "принесено", "принесены", "принижен", "принижена", "принижено", "принижены", "принужден", "принуждена", "принуждено", "принуждены", "принят", "принята", "принято", "приняты", "приободрен", "приободрена", "приободрено", "приободрены", "приобретен", "приобретена", "приобретено", "приобретены", "приобщен", "приобщена", "приобщено", "приобщены", "приодет", "приодета", "приодето", "приодеты", "приостановлен", "приостановлена", "приостановлено", "приостановлены", "приотворен", "приотворена", "приотворено", "приотворены", "приоткрыт", "приоткрыта", "приоткрыто", "приоткрыты", "припаркован", "припаркована", "припарковано", "припаркованы", "припасен", "припасена", "припасено", "припасены", "припаян", "припаяна", "припаяно", "припаяны", "приперт", "приперта", "приперто", "приперты", "припечатан", "припечатана", "припечатано", "припечатаны", "припечен", "припечена", "припечено", "припечены", "приписан", "приписана", "приписано", "приписаны", "приплетен", "приплетена", "приплетено", "приплетены", "приплюснут", "приплюснута", "приплюснуто", "приплюснуты", "приплюсован", "приплюсована", "приплюсовано", "приплюсованы", "приподнят", "приподнята", "приподнято", "приподняты", "припомнен", "припомнена", "припомнено", "припомнены", "припорошен", "припорошена", "припорошено", "припорошены", "приправлен", "приправлена", "приправлено", "приправлены", "припрятан", "припрятана", "припрятано", "припрятаны", "припудрен", "припудрена", "припудрено", "припудрены", "припущен", "припущена", "припущено", "припущены", "приравнян", "приравняна", "приравняно", "приравняны", "приревнован", "приревнована", "приревновано", "приревнованы", "прирезан", "прирезана", "прирезано", "прирезаны", "пририсован", "пририсована", "пририсовано", "пририсованы", "приручен", "приручена", "приручено", "приручены", "присвоен", "присвоена", "присвоено", "присвоены", "прислан", "прислана", "прислано", "присланы", "прислонен", "прислонена", "прислонено", "прислонены", "присмотрен", "присмотрена", "присмотрено", "присмотрены", "присобачен", "присобачена", "присобачено", "присобачены", "присовокуплен", "присовокуплена", "присовокуплено", "присовокуплены", "присоединен", "присоединена", "присоединено", "присоединены", "присочинен", "присочинена", "присочинено", "присочинены", "приспособлен", "приспособлена", "приспособлено", "приспособлены", "приспущен", "приспущена", "приспущено", "приспущены", "приставлен", "приставлена", "приставлено", "приставлены", "пристегнут", "пристегнута", "пристегнуто", "пристегнуты", "пристрелен", "пристрелена", "пристрелено", "пристрелены", "пристрелян", "пристреляна", "пристреляно", "пристреляны", "пристроен", "пристроена", "пристроено", "пристроены", "приструнен", "приструнена", "приструнено", "приструнены", "пристукнут", "пристукнута", "пристукнуто", "пристукнуты", "пристыжен", "пристыжена", "пристыжено", "пристыжены", "присужден", "присуждена", "присуждено", "присуждены", "притащен", "притащена", "притащено", "притащены", "притворен", "притворена", "притворено", "притворены", "притерт", "притерта", "притерто", "притерты", "притиснут", "притиснута", "притиснуто", "притиснуты", "приткнут", "приткнута", "приткнуто", "приткнуты", "притоптан", "притоптана", "притоптано", "притоптаны", "приторможен", "приторможена", "приторможено", "приторможены", "притуплен", "притуплена", "притуплено", "притуплены", "притянут", "притянута", "притянуто", "притянуты", "приукрашен", "приукрашена", "приукрашено", "приукрашены", "приумножен", "приумножена", "приумножено", "приумножены", "приурочен", "приурочена", "приурочено", "приурочены", "приучен", "приучена", "приучено", "приучены", "прихвастнут", "прихвастнута", "прихвастнуто", "прихвастнуты", "прихвачен", "прихвачена", "прихвачено", "прихвачены", "прихлопнут", "прихлопнута", "прихлопнуто", "прихлопнуты", "прицеплен", "прицеплена", "прицеплено", "прицеплены", "причален", "причалена", "причалено", "причалены", "причащен", "причащена", "причащено", "причащены", "причесан", "причесана", "причесано", "причесаны", "причинен", "причинена", "причинено", "причинены", "причислен", "причислена", "причислено", "причислены", "пришит", "пришита", "пришито", "пришиты", "пришпилен", "пришпилена", "пришпилено", "пришпилены", "пришпорен", "пришпорена", "пришпорено", "пришпорены", "прищелкнут", "прищелкнута", "прищелкнуто", "прищелкнуты", "прищемлен", "прищемлена", "прищемлено", "прищемлены", "прищурен", "прищурена", "прищурено", "прищурены", "прищучен", "прищучена", "прищучено", "прищучены", "проанализирован", "проанализирована", "проанализировано", "проанализированы", "пробит", "пробита", "пробито", "пробиты", "проварен", "проварена", "проварено", "проварены", "проведан", "проведана", "проведано", "проведаны", "проведен", "проведена", "проведено", "проведены", "провезен", "провезена", "провезено", "провезены", "проверен", "проверена", "проверено", "проверены", "провернут", "провернута", "провернуто", "провернуты", "проветрен", "проветрена", "проветрено", "проветрены", "провозглашен", "провозглашена", "провозглашено", "провозглашены", "проглочен", "проглочена", "проглочено", "проглочены", "прогнан", "прогнана", "прогнано", "прогнаны", "прогнусавлен", "прогнусавлена", "прогнусавлено", "прогнусавлены", "проговорен", "проговорена", "проговорено", "проговорены", "прогрет", "прогрета", "прогрето", "прогреты", "прогрызен", "прогрызена", "прогрызено", "прогрызены", "прогулян", "прогуляна", "прогуляно", "прогуляны", "продавлен", "продавлена", "продавлено", "продавлены", "продвинут", "продвинута", "продвинуто", "продвинуты", "продезинфицирован", "продезинфицирована", "продезинфицировано", "продезинфицированы", "продекламирован", "продекламирована", "продекламировано", "продекламированы", "проделан", "проделана", "проделано", "проделаны", "продемонстрирован", "продемонстрирована", "продемонстрировано", "продемонстрированы", "продержан", "продержана", "продержано", "продержаны", "продернут", "продернута", "продернуто", "продернуты", "продет", "продета", "продето", "продеты", "продешевлен", "продешевлена", "продешевлено", "продешевлены", "продиктован", "продиктована", "продиктовано", "продиктованы", "продлен", "продлена", "продлено", "продлены", "продолжен", "продолжена", "продолжено", "продолжены", "продран", "продрана", "продрано", "продраны", "продублирован", "продублирована", "продублировано", "продублированы", "продуман", "продумана", "продумано", "продуманы", "продут", "продута", "продуто", "продуты", "продырявлен", "продырявлена", "продырявлено", "продырявлены", "прожарен", "прожарена", "прожарено", "прожарены", "прожеван", "прожевана", "прожевано", "прожеваны", "прожит", "прожита", "прожито", "прожиты", "прозван", "прозвана", "прозвано", "прозваны", "прозвонен", "прозвонена", "прозвонено", "прозвонены", "прознан", "прознана", "прознано", "прознаны", "проигран", "проиграна", "проиграно", "проиграны", "произведен", "произведена", "произведено", "произведены", "произнесен", "произнесена", "произнесено", "произнесены", "проиллюстрирован", "проиллюстрирована", "проиллюстрировано", "проиллюстрированы", "проинструктирован", "проинструктирована", "проинструктировано", "проинструктированы", "проинформирован", "проинформирована", "проинформировано", "проинформированы", "прокален", "прокалена", "прокалено", "прокалены", "прокатан", "прокатана", "прокатано", "прокатаны", "прокачан", "прокачана", "прокачано", "прокачаны", "прокачен", "прокачена", "прокачено", "прокачены", "прокипячен", "прокипячена", "прокипячено", "прокипячены", "проколот", "проколота", "проколото", "проколоты", "прокомментирован", "прокомментирована", "прокомментировано", "прокомментированы", "проконсультирован", "проконсультирована", "проконсультировано", "проконсультированы", "проконтролирован", "проконтролирована", "проконтролировано", "проконтролированы", "прокопан", "прокопана", "прокопано", "прокопаны", "прокопчен", "прокопчена", "прокопчено", "прокопчены", "прокручен", "прокручена", "прокручено", "прокручены", "прокурен", "прокурена", "прокурено", "прокурены", "прокушен", "прокушена", "прокушено", "прокушены", "пролечен", "пролечена", "пролечено", "пролечены", "пролистан", "пролистана", "пролистано", "пролистаны", "пролит", "пролита", "пролито", "пролиты", "проложен", "проложена", "проложено", "проложены", "проломлен", "проломлена", "проломлено", "проломлены", "пролонгирован", "пролонгирована", "пролонгировано", "пролонгированы", "промазан", "промазана", "промазано", "промазаны", "променян", "променяна", "променяно", "променяны", "промокнут", "промокнута", "промокнуто", "промокнуты", "промолвлен", "промолвлена", "промолвлено", "промолвлены", "проморожен", "проморожена", "проморожено", "проморожены", "промотан", "промотана", "промотано", "промотаны", "промочен", "промочена", "промочено", "промочены", "промыт", "промыта", "промыто", "промыты", "промямлен", "промямлена", "промямлено", "промямлены", "пронесен", "пронесена", "пронесено", "пронесены", "пронзен", "пронзена", "пронзено", "пронзены", "пронизан", "пронизана", "пронизано", "пронизаны", "проношен", "проношена", "проношено", "проношены", "пронумерован", "пронумерована", "пронумеровано", "пронумерованы", "пронюхан", "пронюхана", "пронюхано", "пронюханы", "пропахан", "пропахана", "пропахано", "пропаханы", "пропет", "пропета", "пропето", "пропеты", "пропечатан", "пропечатана", "пропечатано", "пропечатаны", "прописан", "прописана", "прописано", "прописаны", "пропит", "пропита", "пропито", "пропиты", "пропитан", "пропитана", "пропитано", "пропитаны", "пропихнут", "пропихнута", "пропихнуто", "пропихнуты", "проплакан", "проплакана", "проплакано", "проплаканы", "проплыт", "проплыта", "проплыто", "проплыты", "прополоскан", "прополоскана", "прополоскано", "прополосканы", "прополот", "прополота", "прополото", "прополоты", "пропорот", "пропорота", "пропорото", "пропороты", "пропущен", "пропущена", "пропущено", "пропущены", "пропылен", "пропылена", "пропылено", "пропылены", "проработан", "проработана", "проработано", "проработаны", "прорван", "прорвана", "прорвано", "прорваны", "прорежен", "прорежена", "прорежено", "прорежены", "прорезан", "прорезана", "прорезано", "прорезаны", "прорисован", "прорисована", "прорисовано", "прорисованы", "проронен", "проронена", "проронено", "проронены", "прорублен", "прорублена", "прорублено", "прорублены", "прорыт", "прорыта", "прорыто", "прорыты", "просажен", "просажена", "просажено", "просажены", "просверлен", "просверлена", "просверлено", "просверлены", "просветлен", "просветлена", "просветлено", "просветлены", "просвечен", "просвечена", "просвечено", "просвечены", "просвещен", "просвещена", "просвещено", "просвещены", "просвищен", "просвищена", "просвищено", "просвищены", "просечен", "просечена", "просечено", "просечены", "просеян", "просеяна", "просеяно", "просеяны", "просигнален", "просигналена", "просигналено", "просигналены", "просижен", "просижена", "просижено", "просижены", "просиплен", "просиплена", "просиплено", "просиплены", "прославлен", "прославлена", "прославлено", "прославлены", "прослежен", "прослежена", "прослежено", "прослежены", "прослушан", "прослушана", "прослушано", "прослушаны", "прослышан", "прослышана", "прослышано", "прослышаны", "просмолен", "просмолена", "просмолено", "просмолены", "просмотрен", "просмотрена", "просмотрено", "просмотрены", "просолен", "просолена", "просолено", "просолены", "просрочен", "просрочена", "просрочено", "просрочены", "проставлен", "проставлена", "проставлено", "проставлены", "простерт", "простерта", "простерто", "простерты", "простиран", "простирана", "простирано", "простираны", "прострелен", "прострелена", "прострелено", "прострелены", "прострочен", "прострочена", "прострочено", "прострочены", "простужен", "простужена", "простужено", "простужены", "простучан", "простучана", "простучано", "простучаны", "просунут", "просунута", "просунуто", "просунуты", "просушен", "просушена", "просушено", "просушены", "просчитан", "просчитана", "просчитано", "просчитаны", "протаранен", "протаранена", "протаранено", "протаранены", "протащен", "протащена", "протащено", "протащены", "протерт", "протерта", "протерто", "протерты", "противопоставлен", "противопоставлена", "противопоставлено", "противопоставлены", "проткнут", "проткнута", "проткнуто", "проткнуты", "протолкнут", "протолкнута", "протолкнуто", "протолкнуты", "протоплен", "протоплена", "протоплено", "протоплены", "протоптан", "протоптана", "протоптано", "протоптаны", "проторен", "проторена", "проторено", "проторены", "протыкан", "протыкана", "протыкано", "протыканы", "протянут", "протянута", "протянуто", "протянуты", "проучен", "проучена", "проучено", "проучены", "профильтрован", "профильтрована", "профильтровано", "профильтрованы", "профинансирован", "профинансирована", "профинансировано", "профинансированы", "профукан", "профукана", "профукано", "профуканы", "прохвачен", "прохвачена", "прохвачено", "прохвачены", "прохриплен", "прохриплена", "прохриплено", "прохриплены", "процарапан", "процарапана", "процарапано", "процарапаны", "процежен", "процежена", "процежено", "процежены", "процитирован", "процитирована", "процитировано", "процитированы", "прочерчен", "прочерчена", "прочерчено", "прочерчены", "прочесан", "прочесана", "прочесано", "прочесаны", "прочитан", "прочитана", "прочитано", "прочитаны", "прочищен", "прочищена", "прочищено", "прочищены", "прочтен", "прочтена", "прочтено", "прочтены", "прочувствован", "прочувствована", "прочувствовано", "прочувствованы", "прошаган", "прошагана", "прошагано", "прошаганы", "прошамкан", "прошамкана", "прошамкано", "прошамканы", "прошептан", "прошептана", "прошептано", "прошептаны", "прошиплен", "прошиплена", "прошиплено", "прошиплены", "прошит", "прошита", "прошито", "прошиты", "прошляплен", "прошляплена", "прошляплено", "прошляплены", "проштудирован", "проштудирована", "проштудировано", "проштудированы", "прощен", "прощена", "прощено", "прощены", "прощупан", "прощупана", "прощупано", "прощупаны", "проявлен", "проявлена", "проявлено", "проявлены", "прояснен", "прояснена", "прояснено", "прояснены", "пущен", "пущена", "пущено", "пущены", "пырнут", "пырнута", "пырнуто", "пырнуты", "радирован", "радирована", "радировано", "радированы", "разбавлен", "разбавлена", "разбавлено", "разбавлены", "разбазарен", "разбазарена", "разбазарено", "разбазарены", "разбережен", "разбережена", "разбережено", "разбережены", "разбит", "разбита", "разбито", "разбиты", "разболтан", "разболтана", "разболтано", "разболтаны", "разбомблен", "разбомблена", "разбомблено", "разбомблены", "разбросан", "разбросана", "разбросано", "разбросаны", "разбужен", "разбужена", "разбужено", "разбужены", "развален", "развалена", "развалено", "развалены", "разварен", "разварена", "разварено", "разварены", "разведан", "разведана", "разведано", "разведаны", "разведен", "разведена", "разведено", "разведены", "развезен", "развезена", "развезено", "развезены", "развенчан", "развенчана", "развенчано", "развенчаны", "развернут", "развернута", "развернуто", "развернуты", "развеселен", "развеселена", "развеселено", "развеселены", "развешан", "развешана", "развешано", "развешаны", "развешен", "развешена", "развешено", "развешены", "развеян", "развеяна", "развеяно", "развеяны", "развинчен", "развинчена", "развинчено", "развинчены", "развит", "развита", "развито", "развиты", "развлечен", "развлечена", "развлечено", "развлечены", "разворован", "разворована", "разворовано", "разворованы", "разворочен", "разворочена", "разворочено", "разворочены", "разворошен", "разворошена", "разворошено", "разворошены", "развращен", "развращена", "развращено", "развращены", "развязан", "развязана", "развязано", "развязаны", "разгадан", "разгадана", "разгадано", "разгаданы", "разглажен", "разглажена", "разглажено", "разглажены", "разглашен", "разглашена", "разглашено", "разглашены", "разгневан", "разгневана", "разгневано", "разгневаны", "разговорен", "разговорена", "разговорено", "разговорены", "разгорожен", "разгорожена", "разгорожено", "разгорожены", "разгорячен", "разгорячена", "разгорячено", "разгорячены", "разграблен", "разграблена", "разграблено", "разграблены", "разграничен", "разграничена", "разграничено", "разграничены", "разграфлен", "разграфлена", "разграфлено", "разграфлены", "разгребен", "разгребена", "разгребено", "разгребены", "разгромлен", "разгромлена", "разгромлено", "разгромлены", "разгружен", "разгружена", "разгружено", "разгружены", "разгрызен", "разгрызена", "разгрызено", "разгрызены", "раздавлен", "раздавлена", "раздавлено", "раздавлены", "раздарен", "раздарена", "раздарено", "раздарены", "раздвинут", "раздвинута", "раздвинуто", "раздвинуты", "раздвоен", "раздвоена", "раздвоено", "раздвоены", "разделан", "разделана", "разделано", "разделаны", "разделен", "разделена", "разделено", "разделены", "раздернут", "раздернута", "раздернуто", "раздернуты", "раздет", "раздета", "раздето", "раздеты", "раздолбан", "раздолбана", "раздолбано", "раздолбаны", "раздосадован", "раздосадована", "раздосадовано", "раздосадованы", "раздражен", "раздражена", "раздражено", "раздражены", "раздроблен", "раздроблена", "раздроблено", "раздроблены", "раздут", "раздута", "раздуто", "раздуты", "разжалоблен", "разжалоблена", "разжалоблено", "разжалоблены", "разжалован", "разжалована", "разжаловано", "разжалованы", "разжат", "разжата", "разжато", "разжаты", "разжеван", "разжевана", "разжевано", "разжеваны", "раззадорен", "раззадорена", "раззадорено", "раззадорены", "раззявлен", "раззявлена", "раззявлено", "раззявлены", "разинут", "разинута", "разинуто", "разинуты", "разлеплен", "разлеплена", "разлеплено", "разлеплены", "разлинован", "разлинована", "разлиновано", "разлинованы", "разлит", "разлита", "разлито", "разлиты", "различен", "различена", "различено", "различены", "разложен", "разложена", "разложено", "разложены", "разломан", "разломана", "разломано", "разломаны", "разломлен", "разломлена", "разломлено", "разломлены", "разлохмачен", "разлохмачена", "разлохмачено", "разлохмачены", "разлучен", "разлучена", "разлучено", "разлучены", "размазан", "размазана", "размазано", "размазаны", "размалеван", "размалевана", "размалевано", "размалеваны", "разменян", "разменяна", "разменяно", "разменяны", "разметан", "разметана", "разметано", "разметаны", "размечен", "размечена", "размечено", "размечены", "размешан", "размешана", "размешано", "размешаны", "размещен", "размещена", "размещено", "размещены", "разминирован", "разминирована", "разминировано", "разминированы", "размножен", "размножена", "размножено", "размножены", "размозжен", "размозжена", "размозжено", "размозжены", "размолот", "размолота", "размолото", "размолоты", "разморожен", "разморожена", "разморожено", "разморожены", "размотан", "размотана", "размотано", "размотаны", "размочен", "размочена", "размочено", "размочены", "размыкан", "размыкана", "размыкано", "размыканы", "размыт", "размыта", "размыто", "размыты", "размягчен", "размягчена", "размягчено", "размягчены", "размят", "размята", "размято", "размяты", "разнесен", "разнесена", "разнесено", "разнесены", "разношен", "разношена", "разношено", "разношены", "разнюхан", "разнюхана", "разнюхано", "разнюханы", "разнят", "разнята", "разнято", "разняты", "разоблачен", "разоблачена", "разоблачено", "разоблачены", "разобран", "разобрана", "разобрано", "разобраны", "разобщен", "разобщена", "разобщено", "разобщены", "разогнан", "разогнана", "разогнано", "разогнаны", "разогнут", "разогнута", "разогнуто", "разогнуты", "разогрет", "разогрета", "разогрето", "разогреты", "разодет", "разодета", "разодето", "разодеты", "разодран", "разодрана", "разодрано", "разодраны", "разожжен", "разожжена", "разожжено", "разожжены", "разозлен", "разозлена", "разозлено", "разозлены", "разомкнут", "разомкнута", "разомкнуто", "разомкнуты", "разорван", "разорвана", "разорвано", "разорваны", "разорен", "разорена", "разорено", "разорены", "разоружен", "разоружена", "разоружено", "разоружены", "разослан", "разослана", "разослано", "разосланы", "разостлан", "разостлана", "разостлано", "разостланы", "разочарован", "разочарована", "разочаровано", "разочарованы", "разработан", "разработана", "разработано", "разработаны", "разрежен", "разрежена", "разрежено", "разрежены", "разрезан", "разрезана", "разрезано", "разрезаны", "разрекламирован", "разрекламирована", "разрекламировано", "разрекламированы", "разрешен", "разрешена", "разрешено", "разрешены", "разрисован", "разрисована", "разрисовано", "разрисованы", "разрознен", "разрознена", "разрознено", "разрознены", "разрублен", "разрублена", "разрублено", "разрублены", "разрушен", "разрушена", "разрушено", "разрушены", "разрыт", "разрыта", "разрыто", "разрыты", "разряжен", "разряжена", "разряжено", "разряжены", "разубежден", "разубеждена", "разубеждено", "разубеждены", "разузнан", "разузнана", "разузнано", "разузнаны", "разукрашен", "разукрашена", "разукрашено", "разукрашены", "разут", "разута", "разуто", "разуты", "разучен", "разучена", "разучено", "разучены", "разъединен", "разъединена", "разъединено", "разъединены", "разъярен", "разъярена", "разъярено", "разъярены", "разъяснен", "разъяснена", "разъяснено", "разъяснены", "разъят", "разъята", "разъято", "разъяты", "разыгран", "разыграна", "разыграно", "разыграны", "разыскан", "разыскана", "разыскано", "разысканы", "ранен", "ранена", "ранено", "ранены", "ранжирован", "ранжирована", "ранжировано", "ранжированы", "раскален", "раскалена", "раскалено", "раскалены", "раскатан", "раскатана", "раскатано", "раскатаны", "раскачан", "раскачана", "раскачано", "раскачаны", "расквартирован", "расквартирована", "расквартировано", "расквартированы", "расквашен", "расквашена", "расквашено", "расквашены", "раскидан", "раскидана", "раскидано", "раскиданы", "раскинут", "раскинута", "раскинуто", "раскинуты", "расклеван", "расклевана", "расклевано", "расклеваны", "расклеен", "расклеена", "расклеено", "расклеены", "раскован", "раскована", "расковано", "раскованы", "расковырян", "расковыряна", "расковыряно", "расковыряны", "расколдован", "расколдована", "расколдовано", "расколдованы", "расколот", "расколота", "расколото", "расколоты", "расколочен", "расколочена", "расколочено", "расколочены", "раскопан", "раскопана", "раскопано", "раскопаны", "раскрашен", "раскрашена", "раскрашено", "раскрашены", "раскрепощен", "раскрепощена", "раскрепощено", "раскрепощены", "раскритикован", "раскритикована", "раскритиковано", "раскритикованы", "раскроен", "раскроена", "раскроено", "раскроены", "раскрошен", "раскрошена", "раскрошено", "раскрошены", "раскручен", "раскручена", "раскручено", "раскручены", "раскрыт", "раскрыта", "раскрыто", "раскрыты", "раскулачен", "раскулачена", "раскулачено", "раскулачены", "раскуплен", "раскуплена", "раскуплено", "раскуплены", "раскупорен", "раскупорена", "раскупорено", "раскупорены", "раскурен", "раскурена", "раскурено", "раскурены", "раскушен", "раскушена", "раскушено", "раскушены", "распакован", "распакована", "распаковано", "распакованы", "распален", "распалена", "распалено", "распалены", "распарен", "распарена", "распарено", "распарены", "распахан", "распахана", "распахано", "распаханы", "распахнут", "распахнута", "распахнуто", "распахнуты", "распечатан", "распечатана", "распечатано", "распечатаны", "распилен", "распилена", "распилено", "распилены", "расписан", "расписана", "расписано", "расписаны", "распит", "распита", "распито", "распиты", "расплавлен", "расплавлена", "расплавлено", "расплавлены", "распланирован", "распланирована", "распланировано", "распланированы", "распластан", "распластана", "распластано", "распластаны", "расплескан", "расплескана", "расплескано", "расплесканы", "расплющен", "расплющена", "расплющено", "расплющены", "распознан", "распознана", "распознано", "распознаны", "расположен", "расположена", "расположено", "расположены", "располосован", "располосована", "располосовано", "располосованы", "распорот", "распорота", "распорото", "распороты", "распотрошен", "распотрошена", "распотрошено", "распотрошены", "расправлен", "расправлена", "расправлено", "расправлены", "распределен", "распределена", "распределено", "распределены", "распробован", "распробована", "распробовано", "распробованы", "распростерт", "распростерта", "распростерто", "распростерты", "распространен", "распространена", "распространено", "распространены", "распряжен", "распряжена", "распряжено", "распряжены", "распрямлен", "распрямлена", "распрямлено", "распрямлены", "распуган", "распугана", "распугано", "распуганы", "распушен", "распушена", "распушено", "распушены", "распущен", "распущена", "распущено", "распущены", "распылен", "распылена", "распылено", "распылены", "распялен", "распялена", "распялено", "распялены", "распят", "распята", "распято", "распяты", "рассажен", "рассажена", "рассажено", "рассажены", "рассекречен", "рассекречена", "рассекречено", "рассекречены", "расселен", "расселена", "расселено", "расселены", "рассержен", "рассержена", "рассержено", "рассержены", "рассечен", "рассечена", "рассечено", "рассечены", "рассеян", "рассеяна", "рассеяно", "рассеяны", "рассказан", "рассказана", "рассказано", "рассказаны", "расследован", "расследована", "расследовано", "расследованы", "расслышан", "расслышана", "расслышано", "расслышаны", "рассмешен", "рассмешена", "рассмешено", "рассмешены", "рассмотрен", "рассмотрена", "рассмотрено", "рассмотрены", "рассортирован", "рассортирована", "рассортировано", "рассортированы", "расспрошен", "расспрошена", "расспрошено", "расспрошены", "рассредоточен", "рассредоточена", "рассредоточено", "рассредоточены", "расставлен", "расставлена", "расставлено", "расставлены", "расстегнут", "расстегнута", "расстегнуто", "расстегнуты", "расстелен", "расстелена", "расстелено", "расстелены", "расстрелян", "расстреляна", "расстреляно", "расстреляны", "расстроен", "расстроена", "расстроено", "расстроены", "рассчитан", "рассчитана", "рассчитано", "рассчитаны", "растащен", "растащена", "растащено", "растащены", "растворен", "растворена", "растворено", "растворены", "растерзан", "растерзана", "растерзано", "растерзаны", "растерт", "растерта", "растерто", "растерты", "растерян", "растеряна", "растеряно", "растеряны", "растлен", "растлена", "растлено", "растлены", "растолкан", "растолкана", "растолкано", "растолканы", "растолкован", "растолкована", "растолковано", "растолкованы", "растоплен", "растоплена", "растоплено", "растоплены", "растоптан", "растоптана", "растоптано", "растоптаны", "растопырен", "растопырена", "растопырено", "растопырены", "расторгнут", "расторгнута", "расторгнуто", "расторгнуты", "растормошен", "растормошена", "растормошено", "растормошены", "растравлен", "растравлена", "растравлено", "растравлены", "растрачен", "растрачена", "растрачено", "растрачены", "растревожен", "растревожена", "растревожено", "растревожены", "растрепан", "растрепана", "растрепано", "растрепаны", "растроган", "растрогана", "растрогано", "растроганы", "растрясен", "растрясена", "растрясено", "растрясены", "растянут", "растянута", "растянуто", "растянуты", "расфасован", "расфасована", "расфасовано", "расфасованы", "расформирован", "расформирована", "расформировано", "расформированы", "расхвален", "расхвалена", "расхвалено", "расхвалены", "расхлебан", "расхлебана", "расхлебано", "расхлебаны", "расцарапан", "расцарапана", "расцарапано", "расцарапаны", "расцвечен", "расцвечена", "расцвечено", "расцвечены", "расцелован", "расцелована", "расцеловано", "расцелованы", "расценен", "расценена", "расценено", "расценены", "расцеплен", "расцеплена", "расцеплено", "расцеплены", "расчерчен", "расчерчена", "расчерчено", "расчерчены", "расчесан", "расчесана", "расчесано", "расчесаны", "расчищен", "расчищена", "расчищено", "расчищены", "расчленен", "расчленена", "расчленено", "расчленены", "расшатан", "расшатана", "расшатано", "расшатаны", "расшвырян", "расшвыряна", "расшвыряно", "расшвыряны", "расшевелен", "расшевелена", "расшевелено", "расшевелены", "расширен", "расширена", "расширено", "расширены", "расшит", "расшита", "расшито", "расшиты", "расшифрован", "расшифрована", "расшифровано", "расшифрованы", "расщеплен", "расщеплена", "расщеплено", "расщеплены", "ратифицирован", "ратифицирована", "ратифицировано", "ратифицированы", "рационализирован", "рационализирована", "рационализировано", "рационализированы", "реабилитирован", "реабилитирована", "реабилитировано", "реабилитированы", "реализован", "реализована", "реализовано", "реализованы", "ревизован", "ревизована", "ревизовано", "ревизованы", "регенерирован", "регенерирована", "регенерировано", "регенерированы", "регламентирован", "регламентирована", "регламентировано", "регламентированы", "редуцирован", "редуцирована", "редуцировано", "редуцированы", "резервирован", "резервирована", "резервировано", "резервированы", "резюмирован", "резюмирована", "резюмировано", "резюмированы", "реквизирован", "реквизирована", "реквизировано", "реквизированы", "рекомендован", "рекомендована", "рекомендовано", "рекомендованы", "реконструирован", "реконструирована", "реконструировано", "реконструированы", "рекрутирован", "рекрутирована", "рекрутировано", "рекрутированы", "ремонтирован", "ремонтирована", "ремонтировано", "ремонтированы", "репрессирован", "репрессирована", "репрессировано", "репрессированы", "реставрирован", "реставрирована", "реставрировано", "реставрированы", "реформирован", "реформирована", "реформировано", "реформированы", "решен", "решена", "решено", "решены", "рожден", "рождена", "рождено", "рождены", "романтизирован", "романтизирована", "романтизировано", "романтизированы", "рукоположен", "рукоположена", "рукоположено", "рукоположены", "русифицирован", "русифицирована", "русифицировано", "русифицированы", "саботирован", "саботирована", "саботировано", "саботированы", "сагитирован", "сагитирована", "сагитировано", "сагитированы", "санкционирован", "санкционирована", "санкционировано", "санкционированы", "сбалансирован", "сбалансирована", "сбалансировано", "сбалансированы", "сбережен", "сбережена", "сбережено", "сбережены", "сбит", "сбита", "сбито", "сбиты", "сближен", "сближена", "сближено", "сближены", "сбрит", "сбрита", "сбрито", "сбриты", "сброшен", "сброшена", "сброшено", "сброшены", "сбрызнут", "сбрызнута", "сбрызнуто", "сбрызнуты", "свален", "свалена", "свалено", "свалены", "сварганен", "сварганена", "сварганено", "сварганены", "сварен", "сварена", "сварено", "сварены", "сведен", "сведена", "сведено", "сведены", "свезен", "свезена", "свезено", "свезены", "свергнут", "свергнута", "свергнуто", "свергнуты", "сверен", "сверена", "сверено", "сверены", "свернут", "свернута", "свернуто", "свернуты", "сверстан", "сверстана", "сверстано", "сверстаны", "свершен", "свершена", "свершено", "свершены", "свешен", "свешена", "свешено", "свешены", "свинчен", "свинчена", "свинчено", "свинчены", "свистнут", "свистнута", "свистнуто", "свистнуты", "свит", "свита", "свито", "свиты", "сворован", "сворована", "своровано", "сворованы", "сворочен", "сворочена", "сворочено", "сворочены", "связан", "связана", "связано", "связаны", "сглажен", "сглажена", "сглажено", "сглажены", "сгноен", "сгноена", "сгноено", "сгноены", "сгорблена", "сгорблено", "сгорблены", "сготовлен", "сготовлена", "сготовлено", "сготовлены", "сгруппирован", "сгруппирована", "сгруппировано", "сгруппированы", "сгрызен", "сгрызена", "сгрызено", "сгрызены", "сгублен", "сгублена", "сгублено", "сгублены", "сгущен", "сгущена", "сгущено", "сгущены", "сдавлен", "сдавлена", "сдавлено", "сдавлены", "сдвинут", "сдвинута", "сдвинуто", "сдвинуты", "сдвоен", "сдвоена", "сдвоено", "сдвоены", "сделан", "сделана", "сделано", "сделаны", "сдержан", "сдержана", "сдержано", "сдержаны", "сдернут", "сдернута", "сдернуто", "сдернуты", "сдобрен", "сдобрена", "сдобрено", "сдобрены", "сдут", "сдута", "сдуто", "сдуты", "секуляризован", "секуляризована", "секуляризовано", "секуляризованы", "сенсибилизирован", "сенсибилизирована", "сенсибилизировано", "сенсибилизированы", "сервирован", "сервирована", "сервировано", "сервированы", "сжат", "сжата", "сжато", "сжаты", "сжеван", "сжевана", "сжевано", "сжеваны", "сжит", "сжита", "сжито", "сжиты", "сигнализирован", "сигнализирована", "сигнализировано", "сигнализированы", "симулирован", "симулирована", "симулировано", "симулированы", "синдицирован", "синдицирована", "синдицировано", "синдицированы", "синтезирован", "синтезирована", "синтезировано", "синтезированы", "синхронизирован", "синхронизирована", "синхронизировано", "синхронизированы", "систематизирован", "систематизирована", "систематизировано", "систематизированы", "сказан", "сказана", "сказано", "сказаны", "сказанут", "сказанута", "сказануто", "сказануты", "скачан", "скачана", "скачано", "скачаны", "скинут", "скинута", "скинуто", "скинуты", "складирован", "складирована", "складировано", "складированы", "склеван", "склевана", "склевано", "склеваны", "склеен", "склеена", "склеено", "склеены", "склонен", "склонена", "склонено", "склонены", "скован", "скована", "сковано", "скованы", "сколот", "сколота", "сколото", "сколоты", "сколочен", "сколочена", "сколочено", "сколочены", "скомандован", "скомандована", "скомандовано", "скомандованы", "скомкан", "скомкана", "скомкано", "скомканы", "скомпенсирован", "скомпенсирована", "скомпенсировано", "скомпенсированы", "скомпонован", "скомпонована", "скомпоновано", "скомпонованы", "скомпрометирован", "скомпрометирована", "скомпрометировано", "скомпрометированы", "сконструирован", "сконструирована", "сконструировано", "сконструированы", "сконцентрирован", "сконцентрирована", "сконцентрировано", "сконцентрированы", "скоординирован", "скоординирована", "скоординировано", "скоординированы", "скопирован", "скопирована", "скопировано", "скопированы", "скормлен", "скормлена", "скормлено", "скормлены", "скорректирован", "скорректирована", "скорректировано", "скорректированы", "скособочен", "скособочена", "скособочено", "скособочены", "скошен", "скошена", "скошено", "скошены", "скрашен", "скрашена", "скрашено", "скрашены", "скреплен", "скреплена", "скреплено", "скреплены", "скрещен", "скрещена", "скрещено", "скрещены", "скривлен", "скривлена", "скривлено", "скривлены", "скроен", "скроена", "скроено", "скроены", "скручен", "скручена", "скручено", "скручены", "скрыт", "скрыта", "скрыто", "скрыты", "скрючен", "скрючена", "скрючено", "скрючены", "скуплен", "скуплена", "скуплено", "скуплены", "скушан", "скушана", "скушано", "скушаны", "слажен", "слажена", "слажено", "слажены", "слеплен", "слеплена", "слеплено", "слеплены", "слизан", "слизана", "слизано", "слизаны", "слизнут", "слизнута", "слизнуто", "слизнуты", "слит", "слита", "слито", "слиты", "сличен", "сличена", "сличено", "сличены", "словлен", "словлена", "словлено", "словлены", "сложен", "сложена", "сложено", "сложены", "сломан", "сломана", "сломано", "сломаны", "сломлен", "сломлена", "сломлено", "сломлены", "слопан", "слопана", "слопано", "слопаны", "слуплен", "слуплена", "слуплено", "слуплены", "смазана", "смазано", "смазаны", "смастерен", "смастерена", "смастерено", "смастерены", "сменен", "сменена", "сменено", "сменены", "сменян", "сменяна", "сменяно", "сменяны", "смерен", "смерена", "смерено", "смерены", "сметен", "сметена", "сметено", "сметены", "смешан", "смешана", "смешано", "смешаны", "смещен", "смещена", "смещено", "смещены", "смирен", "смирена", "смирено", "смирены", "смоделирован", "смоделирована", "смоделировано", "смоделированы", "смонтирован", "смонтирована", "смонтировано", "смонтированы", "сморен", "сморена", "сморено", "сморены", "сморожен", "сморожена", "сморожено", "сморожены", "сморщен", "сморщена", "сморщено", "сморщены", "смотан", "смотана", "смотано", "смотаны", "смочен", "смочена", "смочено", "смочены", "смыт", "смыта", "смыто", "смыты", "смягчен", "смягчена", "смягчено", "смягчены", "смят", "смята", "смято", "смяты", "снабжен", "снабжена", "снабжено", "снабжены", "снаряжен", "снаряжена", "снаряжено", "снаряжены", "снесен", "снесена", "снесено", "снесены", "снижен", "снижена", "снижено", "снижены", "снискан", "снискана", "снискано", "снисканы", "сношен", "сношена", "сношено", "сношены", "снят", "снята", "снято", "сняты", "соблазнен", "соблазнена", "соблазнено", "соблазнены", "соблюден", "соблюдена", "соблюдено", "соблюдены", "собран", "собрана", "собрано", "собраны", "совершен", "совершена", "совершено", "совершены", "совмещен", "совмещена", "совмещено", "совмещены", "совращен", "совращена", "совращено", "совращены", "согласован", "согласована", "согласовано", "согласованы", "согнан", "согнана", "согнано", "согнаны", "согнут", "согнута", "согнуто", "согнуты", "согрет", "согрета", "согрето", "согреты", "содеян", "содеяна", "содеяно", "содеяны", "содран", "содрана", "содрано", "содраны", "соединен", "соединена", "соединено", "соединены", "сожжен", "сожжена", "сожжено", "сожжены", "сожран", "сожрана", "сожрано", "сожраны", "созван", "созвана", "созвано", "созваны", "сокращен", "сокращена", "сокращено", "сокращены", "сокрушен", "сокрушена", "сокрушено", "сокрушены", "сокрыт", "сокрыта", "сокрыто", "сокрыты", "соображен", "соображена", "соображено", "соображены", "сообщен", "сообщена", "сообщено", "сообщены", "сооружен", "сооружена", "сооружено", "сооружены", "соотнесен", "соотнесена", "соотнесено", "соотнесены", "сопоставлен", "сопоставлена", "сопоставлено", "сопоставлены", "сопровожден", "сопровождена", "сопровождено", "сопровождены", "сопряжен", "сопряжена", "сопряжено", "сопряжены", "сорван", "сорвана", "сорвано", "сорваны", "сориентирован", "сориентирована", "сориентировано", "сориентированы", "сосватан", "сосватана", "сосватано", "сосватаны", "соскребен", "соскребена", "соскребено", "соскребены", "сослан", "сослана", "сослано", "сосланы", "сослужен", "сослужена", "сослужено", "сослужены", "сосредоточен", "сосредоточена", "сосредоточено", "сосредоточены", "составлен", "составлена", "составлено", "составлены", "состарен", "состарена", "состарено", "состарены", "сострижен", "сострижена", "сострижено", "сострижены", "состроен", "состроена", "состроено", "состроены", "состряпан", "состряпана", "состряпано", "состряпаны", "состыкован", "состыкована", "состыковано", "состыкованы", "сосчитан", "сосчитана", "сосчитано", "сосчитаны", "сотворен", "сотворена", "сотворено", "сотворены", "соткан", "соткана", "соткано", "сотканы", "сотрясен", "сотрясена", "сотрясено", "сотрясены", "сохранен", "сохранена", "сохранено", "сохранены", "сочинен", "сочинена", "сочинено", "сочинены", "сочтен", "сочтена", "сочтено", "сочтены", "спалена", "спалено", "спалены", "спасен", "спасена", "спасено", "спасены", "спаян", "спаяна", "спаяно", "спаяны", "спеленан", "спеленана", "спеленано", "спеленаны", "сперт", "сперта", "сперто", "сперты", "спет", "спета", "спето", "спеты", "специализирован", "специализирована", "специализировано", "специализированы", "спешен", "спешена", "спешено", "спешены", "спилен", "спилена", "спилено", "спилены", "списан", "списана", "списано", "списаны", "спихнут", "спихнута", "спихнуто", "спихнуты", "сплавлен", "сплавлена", "сплавлено", "сплавлены", "спланирован", "спланирована", "спланировано", "спланированы", "сплетен", "сплетена", "сплетено", "сплетены", "сплочен", "сплочена", "сплочено", "сплочены", "сплюнут", "сплюнута", "сплюнуто", "сплюнуты", "сплющен", "сплющена", "сплющено", "сплющены", "сподоблен", "сподоблена", "сподоблено", "сподоблены", "сполоснут", "сполоснута", "сполоснуто", "сполоснуты", "спорот", "спорота", "спорото", "спороты", "справлен", "справлена", "справлено", "справлены", "спрессован", "спрессована", "спрессовано", "спрессованы", "спроважен", "спроважена", "спроважено", "спроважены", "спровоцирован", "спровоцирована", "спровоцировано", "спровоцированы", "спроектирован", "спроектирована", "спроектировано", "спроектированы", "спроецирован", "спроецирована", "спроецировано", "спроецированы", "спрошен", "спрошена", "спрошено", "спрошены", "спрятан", "спрятана", "спрятано", "спрятаны", "спущен", "спущена", "спущено", "спущены", "сработан", "сработана", "сработано", "сработаны", "сравнен", "сравнена", "сравнено", "сравнены", "сражен", "сражена", "сражено", "сражены", "сращен", "сращена", "сращено", "сращены", "срезан", "срезана", "срезано", "срезаны", "срисован", "срисована", "срисовано", "срисованы", "сровнян", "сровняна", "сровняно", "сровняны", "срубан", "срубана", "срубано", "срубаны", "срублен", "срублена", "срублено", "срублены", "ссажен", "ссажена", "ссажено", "ссажены", "ссужен", "ссужена", "ссужено", "ссужены", "стабилизирован", "стабилизирована", "стабилизировано", "стабилизированы", "станцеван", "станцевана", "станцевано", "станцеваны", "стащен", "стащена", "стащено", "стащены", "стерилизован", "стерилизована", "стерилизовано", "стерилизованы", "стерт", "стерта", "стерто", "стерты", "стесан", "стесана", "стесано", "стесаны", "стеснен", "стеснена", "стеснено", "стеснены", "стилизован", "стилизована", "стилизовано", "стилизованы", "стимулирован", "стимулирована", "стимулировано", "стимулированы", "стиснут", "стиснута", "стиснуто", "стиснуты", "столкнут", "столкнута", "столкнуто", "столкнуты", "стоптан", "стоптана", "стоптано", "стоптаны", "сточен", "сточена", "сточено", "сточены", "стравлен", "стравлена", "стравлено", "стравлены", "стрельнут", "стрельнута", "стрельнуто", "стрельнуты", "стреножен", "стреножена", "стреножено", "стреножены", "структурирован", "структурирована", "структурировано", "структурированы", "стряхнут", "стряхнута", "стряхнуто", "стряхнуты", "стукнут", "стукнута", "стукнуто", "стукнуты", "стырен", "стырена", "стырено", "стырены", "стянут", "стянута", "стянуто", "стянуты", "сублимирован", "сублимирована", "сублимировано", "сублимированы", "субсидирован", "субсидирована", "субсидировано", "субсидированы", "суммирован", "суммирована", "суммировано", "суммированы", "сунут", "сунута", "сунуто", "сунуты", "сфабрикован", "сфабрикована", "сфабриковано", "сфабрикованы", "сфокусирован", "сфокусирована", "сфокусировано", "сфокусированы", "сформирован", "сформирована", "сформировано", "сформированы", "сформулирован", "сформулирована", "сформулировано", "сформулированы", "сфотографирован", "сфотографирована", "сфотографировано", "сфотографированы", "схвачен", "схвачена", "схвачено", "схвачены", "схлопотан", "схлопотана", "схлопотано", "схлопотаны", "схоронен", "схоронена", "схоронено", "схоронены", "сцапан", "сцапана", "сцапано", "сцапаны", "сцементирован", "сцементирована", "сцементировано", "сцементированы", "сцеплен", "сцеплена", "сцеплено", "сцеплены", "сшит", "сшита", "сшито", "сшиты", "сыгран", "сыграна", "сыграно", "сыграны", "сэкономлен", "сэкономлена", "сэкономлено", "сэкономлены", "таранен", "таранена", "таранено", "таранены", "татуирован", "татуирована", "татуировано", "татуированы", "телеграфирован", "телеграфирована", "телеграфировано", "телеграфированы", "терроризирован", "терроризирована", "терроризировано", "терроризированы", "тиражирован", "тиражирована", "тиражировано", "тиражированы", "титулована", "титуловано", "титулованы", "ткнут", "ткнута", "ткнуто", "ткнуты", "толкнут", "толкнута", "толкнуто", "толкнуты", "тонизирован", "тонизирована", "тонизировано", "тонизированы", "тонирован", "тонирована", "тонировано", "тонированы", "торпедирован", "торпедирована", "торпедировано", "торпедированы", "травмирован", "травмирована", "травмировано", "травмированы", "транслирован", "транслирована", "транслировано", "транслированы", "транспортирован", "транспортирована", "транспортировано", "транспортированы", "трансформирован", "трансформирована", "трансформировано", "трансформированы", "трассирован", "трассирована", "трассировано", "трассированы", "трахнут", "трахнута", "трахнуто", "трахнуты", "треснут", "треснута", "треснуто", "треснуты", "тронут", "тронута", "тронуто", "тронуты", "трудоустроен", "трудоустроена", "трудоустроено", "трудоустроены", "турнут", "турнута", "турнуто", "турнуты", "тюкнут", "тюкнута", "тюкнуто", "тюкнуты", "тяпнут", "тяпнута", "тяпнуто", "тяпнуты", "убавлен", "убавлена", "убавлено", "убавлены", "убаюкан", "убаюкана", "убаюкано", "убаюканы", "убежден", "убеждена", "убеждено", "убеждены", "убелен", "убелена", "убелено", "убелены", "убережен", "убережена", "убережено", "убережены", "убит", "убита", "убито", "убиты", "ублажен", "ублажена", "ублажено", "ублажены", "убран", "убрана", "убрано", "убраны", "убыстрен", "убыстрена", "убыстрено", "убыстрены", "уважен", "уважена", "уважено", "уважены", "уварен", "уварена", "уварено", "уварены", "уведен", "уведена", "уведено", "уведены", "уведомлен", "уведомлена", "уведомлено", "уведомлены", "увезен", "увезена", "увезено", "увезены", "увековечен", "увековечена", "увековечено", "увековечены", "увеличен", "увеличена", "увеличено", "увеличены", "увенчан", "увенчана", "увенчано", "увенчаны", "уверен", "уверена", "уверено", "уверены", "увешан", "увешана", "увешано", "увешаны", "увешен", "увешена", "увешено", "увешены", "увидан", "увидана", "увидано", "увиданы", "увиден", "увидена", "увидено", "увидены", "увит", "увита", "увито", "увиты", "увлажнен", "увлажнена", "увлажнено", "увлажнены", "увлечен", "увлечена", "увлечено", "увлечены", "увожен", "увожена", "увожено", "увожены", "уволен", "уволена", "уволено", "уволены", "уворован", "уворована", "уворовано", "уворованы", "увязан", "увязана", "увязано", "увязаны", "угадан", "угадана", "угадано", "угаданы", "углублен", "углублена", "углублено", "углублены", "угляжен", "угляжена", "угляжено", "угляжены", "угнан", "угнана", "угнано", "угнаны", "угнетен", "угнетена", "угнетено", "угнетены", "уговорен", "уговорена", "уговорено", "уговорены", "угомонен", "угомонена", "угомонено", "угомонены", "угонян", "угоняна", "угоняно", "угоняны", "угоразжен", "угоразжена", "угоразжено", "угоразжены", "уготован", "уготована", "уготовано", "уготованы", "уготовлен", "уготовлена", "уготовлено", "уготовлены", "угощен", "угощена", "угощено", "угощены", "угроблен", "угроблена", "угроблено", "угроблены", "угрохан", "угрохана", "угрохано", "угроханы", "удавлен", "удавлена", "удавлено", "удавлены", "удален", "удалена", "удалено", "удалены", "ударен", "ударена", "ударено", "ударены", "удвоен", "удвоена", "удвоено", "удвоены", "уделан", "уделана", "уделано", "уделаны", "уделен", "уделена", "уделено", "уделены", "удержан", "удержана", "удержано", "удержаны", "удесятерен", "удесятерена", "удесятерено", "удесятерены", "удешевлен", "удешевлена", "удешевлено", "удешевлены", "удивлен", "удивлена", "удивлено", "удивлены", "удлинен", "удлинена", "удлинено", "удлинены", "удобрен", "удобрена", "удобрено", "удобрены", "удовлетворен", "удовлетворена", "удовлетворено", "удовлетворены", "удостоверен", "удостоверена", "удостоверено", "удостоверены", "удостоен", "удостоена", "удостоено", "удостоены", "удочерен", "удочерена", "удочерено", "удочерены", "удружен", "удружена", "удружено", "удружены", "удручен", "удручена", "удручено", "удручены", "удуман", "удумана", "удумано", "удуманы", "удушен", "удушена", "удушено", "удушены", "ужален", "ужалена", "ужалено", "ужалены", "ужаснут", "ужаснута", "ужаснуто", "ужаснуты", "ужат", "ужата", "ужато", "ужаты", "узаконен", "узаконена", "узаконено", "узаконены", "узнан", "узнана", "узнано", "узнаны", "узурпирован", "узурпирована", "узурпировано", "узурпированы", "указан", "указана", "указано", "указаны", "укатан", "укатана", "укатано", "укатаны", "укачан", "укачана", "укачано", "укачаны", "укачен", "укачена", "укачено", "укачены", "укокошен", "укокошена", "укокошено", "укокошены", "уколот", "уколота", "уколото", "уколоты", "укомплектован", "укомплектована", "укомплектовано", "укомплектованы", "укорен", "укорена", "укорено", "укорены", "укоренен", "укоренена", "укоренено", "укоренены", "укорочен", "укорочена", "укорочено", "укорочены", "украден", "украдена", "украдено", "украдены", "украшен", "украшена", "украшено", "украшены", "укреплен", "укреплена", "укреплено", "укреплены", "укрощен", "укрощена", "укрощено", "укрощены", "укрупнен", "укрупнена", "укрупнено", "укрупнены", "укрыт", "укрыта", "укрыто", "укрыты", "укупорен", "укупорена", "укупорено", "укупорены", "укутан", "укутана", "укутано", "укутаны", "укушен", "укушена", "укушено", "укушены", "улажен", "улажена", "улажено", "улажены", "уличен", "уличена", "уличено", "уличены", "уловлен", "уловлена", "уловлено", "уловлены", "уложен", "уложена", "уложено", "уложены", "уломан", "уломана", "уломано", "уломаны", "улучен", "улучена", "улучено", "улучены", "улучшен", "улучшена", "улучшено", "улучшены", "умален", "умалена", "умалено", "умалены", "уменьшен", "уменьшена", "уменьшено", "уменьшены", "умерен", "умерена", "умерено", "умерены", "умерщвлен", "умерщвлена", "умерщвлено", "умерщвлены", "умещен", "умещена", "умещено", "умещены", "умилен", "умилена", "умилено", "умилены", "умиротворен", "умиротворена", "умиротворено", "умиротворены", "умножен", "умножена", "умножено", "умножены", "умолен", "умолена", "умолено", "умолены", "уморен", "уморена", "уморено", "уморены", "умотан", "умотана", "умотано", "умотаны", "умудрен", "умудрена", "умудрено", "умудрены", "умыкнут", "умыкнута", "умыкнуто", "умыкнуты", "умыт", "умыта", "умыто", "умыты", "умят", "умята", "умято", "умяты", "унаследован", "унаследована", "унаследовано", "унаследованы", "унесен", "унесена", "унесено", "унесены", "унижен", "унижена", "унижено", "унижены", "унизан", "унизана", "унизано", "унизаны", "унифицирован", "унифицирована", "унифицировано", "унифицированы", "уничтожен", "уничтожена", "уничтожено", "уничтожены", "унюхан", "унюхана", "унюхано", "унюханы", "унят", "унята", "унято", "уняты", "упакован", "упакована", "упаковано", "упакованы", "упасен", "упасена", "упасено", "упасены", "упечен", "упечена", "упечено", "упечены", "уплачен", "уплачена", "уплачено", "уплачены", "уплотнен", "уплотнена", "уплотнено", "уплотнены", "уподоблен", "уподоблена", "уподоблено", "уподоблены", "упоен", "упоена", "упоено", "упоены", "упокоен", "упокоена", "упокоено", "упокоены", "уполномочен", "уполномочена", "уполномочено", "уполномочены", "упомнен", "упомнена", "упомнено", "упомнены", "упомянут", "упомянута", "упомянуто", "упомянуты", "упорядочен", "упорядочена", "упорядочено", "упорядочены", "употреблен", "употреблена", "употреблено", "употреблены", "упразднен", "упразднена", "упразднено", "упразднены", "упрежден", "упреждена", "упреждено", "упреждены", "упрекнут", "упрекнута", "упрекнуто", "упрекнуты", "упрочен", "упрочена", "упрочено", "упрочены", "упрошен", "упрошена", "упрошено", "упрошены", "упрощен", "упрощена", "упрощено", "упрощены", "упрятан", "упрятана", "упрятано", "упрятаны", "упущен", "упущена", "упущено", "упущены", "уравновешен", "уравновешена", "уравновешено", "уравновешены", "уравнян", "уравняна", "уравняно", "уравняны", "урегулирован", "урегулирована", "урегулировано", "урегулированы", "урезан", "урезана", "урезано", "урезаны", "урезонен", "урезонена", "урезонено", "урезонены", "уронен", "уронена", "уронено", "уронены", "усажен", "усажена", "усажено", "усажены", "усвоен", "усвоена", "усвоено", "усвоены", "усечен", "усечена", "усечено", "усечены", "усеян", "усеяна", "усеяно", "усеяны", "усижен", "усижена", "усижено", "усижены", "усилен", "усилена", "усилено", "усилены", "ускорен", "ускорена", "ускорено", "ускорены", "услан", "услана", "услано", "усланы", "усложнен", "усложнена", "усложнено", "усложнены", "услыхан", "услыхана", "услыхано", "услыханы", "услышан", "услышана", "услышано", "услышаны", "усмирен", "усмирена", "усмирено", "усмирены", "усмотрен", "усмотрена", "усмотрено", "усмотрены", "усовершенствован", "усовершенствована", "усовершенствовано", "усовершенствованы", "успокоен", "успокоена", "успокоено", "успокоены", "усреднен", "усреднена", "усреднено", "усреднены", "уставлен", "уставлена", "уставлено", "уставлены", "установлен", "установлена", "установлено", "установлены", "устлан", "устлана", "устлано", "устланы", "устранен", "устранена", "устранено", "устранены", "устрашен", "устрашена", "устрашено", "устрашены", "устремлен", "устремлена", "устремлено", "устремлены", "устроен", "устроена", "устроено", "устроены", "уступлен", "уступлена", "уступлено", "уступлены", "усугублен", "усугублена", "усугублено", "усугублены", "усыновлен", "усыновлена", "усыновлено", "усыновлены", "усыплен", "усыплена", "усыплено", "усыплены", "утаен", "утаена", "утаено", "утаены", "утащен", "утащена", "утащено", "утащены", "утвержден", "утверждена", "утверждено", "утверждены", "утеплен", "утеплена", "утеплено", "утеплены", "утерт", "утерта", "утерто", "утерты", "утерян", "утеряна", "утеряно", "утеряны", "утешен", "утешена", "утешено", "утешены", "утилизирован", "утилизирована", "утилизировано", "утилизированы", "утихомирен", "утихомирена", "утихомирено", "утихомирены", "утолен", "утолена", "утолено", "утолены", "утопан", "утопана", "утопано", "утопаны", "утоплен", "утоплена", "утоплено", "утоплены", "утоптан", "утоптана", "утоптано", "утоптаны", "уточнен", "уточнена", "уточнено", "уточнены", "утрамбован", "утрамбована", "утрамбовано", "утрамбованы", "утрачен", "утрачена", "утрачено", "утрачены", "утрирован", "утрирована", "утрировано", "утрированы", "утроен", "утроена", "утроено", "утроены", "утрясен", "утрясена", "утрясено", "утрясены", "утыкан", "утыкана", "утыкано", "утыканы", "утяжелен", "утяжелена", "утяжелено", "утяжелены", "утянут", "утянута", "утянуто", "утянуты", "ухвачен", "ухвачена", "ухвачено", "ухвачены", "ухлопан", "ухлопана", "ухлопано", "ухлопаны", "ухожен", "ухожена", "ухожено", "ухожены", "ухудшен", "ухудшена", "ухудшено", "ухудшены", "уценен", "уценена", "уценено", "уценены", "учинен", "учинена", "учинено", "учинены", "учрежден", "учреждена", "учреждено", "учреждены", "учтен", "учтена", "учтено", "учтены", "учуян", "учуяна", "учуяно", "учуяны", "ушит", "ушита", "ушито", "ушиты", "ущемлен", "ущемлена", "ущемлено", "ущемлены", "ущипнут", "ущипнута", "ущипнуто", "ущипнуты", "уязвлен", "уязвлена", "уязвлено", "уязвлены", "уяснен", "уяснена", "уяснено", "уяснены", "фальсифицирован", "фальсифицирована", "фальсифицировано", "фальсифицированы", "фиксирован", "фиксирована", "фиксировано", "фиксированы", "финансирован", "финансирована", "финансировано", "финансированы", "фланкирован", "фланкирована", "фланкировано", "фланкированы", "форсирован", "форсирована", "форсировано", "форсированы", "характеризован", "характеризована", "характеризовано", "характеризованы", "хлестнут", "хлестнута", "хлестнуто", "хлестнуты", "хлопнут", "хлопнута", "хлопнуто", "хлопнуты", "цапнут", "цапнута", "цапнуто", "цапнуты", "царапнут", "царапнута", "царапнуто", "царапнуты", "централизован", "централизована", "централизовано", "централизованы", "центрифугирован", "центрифугирована", "центрифугировано", "центрифугированы", "цивилизован", "цивилизована", "цивилизовано", "цивилизованы", "черкнут", "черкнута", "черкнуто", "черкнуты", "четвертован", "четвертована", "четвертовано", "четвертованы", "чмокнут", "чмокнута", "чмокнуто", "чмокнуты", "шарахнут", "шарахнута", "шарахнуто", "шарахнуты", "швырнут", "швырнута", "швырнуто", "швырнуты", "шлепнут", "шлепнута", "шлепнуто", "шлепнуты", "шмякнут", "шмякнута", "шмякнуто", "шмякнуты", "шокирован", "шокирована", "шокировано", "шокированы", "щелкнут", "щелкнута", "щелкнуто", "щелкнуты", "эвакуирован", "эвакуирована", "эвакуировано", "эвакуированы", "экипирован", "экипирована", "экипировано", "экипированы", "экранизирован", "экранизирована", "экранизировано", "экранизированы", "экранирован", "экранирована", "экранировано", "экранированы", "экспонирован", "экспонирована", "экспонировано", "экспонированы", "экспортирован", "экспортирована", "экспортировано", "экспортированы", "экспроприирован", "экспроприирована", "экспроприировано", "экспроприированы", "экстрагирован", "экстрагирована", "экстрагировано", "экстрагированы", "экстраполирован", "экстраполирована", "экстраполировано", "экстраполированы", "эмитирован", "эмитирована", "эмитировано", "эмитированы", "эпатирован", "эпатирована", "эпатировано", "эпатированы", "этапирован", "этапирована", "этапировано", "этапированы", "эшелонирован", "эшелонирована", "эшелонировано", "эшелонированы", "явлен", "явлена", "явлено", "явлены"], IYe = ["благословлён", "введён", "ввезён", "вдохновлён", "вживлён", "взбешён", "взбодрён", "взведён", "взвихрён", "взгромозждён", "взращён", "взрыхлён", "видоизменён", "включён", "вколочён", "вкраплён", "вкушён", "вменён", "вмещён", "внедрён", "внесён", "внушён", "вовлечён", "водворён", "водружён", "возблагодарён", "возбуждён", "возведён", "возвещён", "возвращён", "возглашён", "возлюблён", "возмещён", "возмущён", "вознаграждён", "вознесён", "возобновлён", "возомнён", "возрождён", "вонждён", "воображён", "воодушевлён", "вооружён", "воплощён", "вопрошён", "ворочён", "воскрешён", "воспалён", "воспламенён", "воспрещён", "воспроизведён", "восстановлён", "восхищён", "вперён", "впечатлён", "вплетён", "впряжён", "вразумлён", "врублён", "вручён", "вселён", "вскипячён", "вскормлён", "вскружён", "всполошён", "выведён", "доведён", "довезён", "довершён", "догляжён", "договорён", "дозволён", "донесён", "допечён", "дотерплён", "завезён", "завершён", "завлечён", "завожён", "заворожён", "загашён", "заглублён", "заглушён", "заговорён", "загорожён", "загромозждён", "загружён", "загрязнён", "задурён", "задушён", "задымлён", "заземлён", "зазубрён", "закалён", "заклеймён", "заключён", "закопчё", "закреплён", "закруглён", "замедлён", "заменён", "заметён", "замещён", "заморён", "занесён", "заострён", "запалён", "запасён", "запечатлён", "запечён", "заплетён", "заполонён", "запорошён", "запрещён", "запримечён", "запрошён", "запряжён", "запылён", "заражён", "заряжён", "заселён", "заслонён", "засолён", "застолблён", "застопорён", "затаён", "затворён", "затемнён", "затенён", "затмлён", "затруднён", "захламлён", "зацеплён", "зачехлён", "зачищён", "зачтён", "зашевелён", "защемлён", "защищён", "избавлён", "изборозждён", "изведён", "извещён", "извинён", "извлечён", "извращён", "измельчён", "изменён", "измышлён", "изнурён", "изобличён", "изображён", "изобретён", "изречён", "изумлён", "изъявлён", "искажён", "исключён", "искоренён", "искривлён", "искуплён", "испепелён", "испечён", "испещрён", "иссечён", "иссушён", "истончён", "истощён", "истреблён", "казнён", "крещён", "лишён", "наводнён", "навострён", "наговорён", "награждён", "нагромозждён", "наделён", "накалён", "наклонён", "наметён", "нанесён", "напечён", "наплетён", "напоён", "напряжён", "наречён", "нарождён", "насаждён", "населён", "насмешён", "насторожён", "натравлён", "невзлюблён", "недогляжён", "недоговорён", "недооценён", "перечтён", "пленён", "побеждён", "побелён", "побережён", "погашён", "поглощён", "погребён", "погружён", "подведён", "подвезён", "подговорён", "подгребён", "подключён", "подкреплён", "подкручён", "подменён", "поднесён", "подожжён", "подпалён", "подразделён", "подрублён", "подрулён", "подселён", "подсечён", "подслащён", "подсоединён", "подстелён", "подстережён", "подтверждён", "подцеплён", "подчинён", "подчищён", "поздравлён", "позолочён", "покорён", "покривлён", "помещён", "понесён", "поощрён", "порабощён", "поражён", "порешён", "порождён", "посвящён", "посеребрён", "посмотрён", "посрамлён", "постановлён", "потереблён", "похоронён", "почтён", "пошевелён", "пощажён", "пояснён", "превращён", "прегражён", "предварён", "предвосхищён", "предопределён", "предостережён", "предотвращён", "предохранён", "предпочтён", "предречён", "предрешён", "предупреждён", "презрён", "преклонён", "прекращён", "преломлён", "прельщён", "преображён", "преодолён", "преподнесён", "пресечён", "преступлён", "претворён", "претерплён", "прибережён", "приближён", "приведён", "привезён", "привлечён", "привнесён", "приворожён", "пригвозжён", "приглашён", "приглушён", "приговорён", "приголублён", "приземлён", "приклонён", "прикреплён", "применён", "принаряжён", "принесён", "принуждён", "приободрён", "приобретён", "приобщён", "приостановлён", "приотворён", "припасён", "припечён", "приплетён", "приручён", "прислонён", "присмотрён", "присовокуплён", "присоединён", "присочинён", "приспособлён", "приструнён", "присуждён", "притворён", "провезён", "проговорён", "продешевлён", "продлён", "прозвонён", "произведён", "произнесён", "прокалён", "прокипячён", "прокопчён", "пронзён", "пропылён", "просверлён", "просветлён", "просвещён", "просечён", "просквожён", "проторён", "прочтён", "прощён", "проявлён", "прояснён", "разбережён", "разбомблён", "разведён", "развезён", "развеселён", "разворошён", "развращён", "разглашён", "разговорён", "разгорожён", "разгорячён", "разграфлён", "разгребён", "разгромлён", "разделён", "раздражён", "раздразнён", "раздроблён", "разлеплён", "разлучён", "размещён", "размозжён", "разморён", "размягчён", "разнесён", "разоблачён", "разобщён", "разожжён", "разозлён", "разорён", "разоружён", "разрежён", "разрешён", "разубеждён", "разъединён", "разъярён", "разъяснён", "раскалён", "расклешён", "раскрепощён", "раскроён", "распалён", "распотрошён", "распределён", "распространён", "распряжён", "распрямлён", "рассмешён", "растворён", "растлён", "растормошён", "растрясён", "расценён", "расцеплён", "расчленён", "расшевелён", "расщеплён", "сбережён", "свершён", "сгноён", "сгущён", "сожжён", "склонён", "скреплён", "скрещён", "скривлён", "скручён", "сличён", "словлён", "сметён", "смещён", "смущён", "смягчён", "снабжён", "снаряжён", "снесён", "соблазнён", "соблюдён", "совершён", "совмещён", "совращён", "соединён", "сокращён", "сокрушён", "соображён", "сообщён", "сооружён", "соотнесён", "сопоставлён", "сопровождён", "сопряжён", "сотворён", "сотрясён", "сохранён", "сочинён", "сочтён", "спалён", "сплетён", "сравнён", "сражён", "стеснён", "съязвлён", "убеждён", "убелён", "убережён", "ублажён", "убыстрён", "уведён", "увезён", "увлажнён", "увлечён", "углублён", "угнетён", "уговорён", "угомонён", "угощён", "удесятерён", "удешевлён", "удлинён", "удобрён", "удовлетворён", "удочерён", "удручён", "укоренён", "укреплён", "укрощён", "укрупнён", "уличён", "улучён", "умалён", "умерщвлён", "умещён", "умилён", "умиротворён", "умолён", "уморён", "умудрён", "унесён", "упасён", "упечён", "уплотнён", "упоён", "употреблён", "упразднён", "упреждён", "упрощён", "усечён", "усложнён", "усреднён", "устранён", "устрашён", "устремлён", "усыновлён", "усыплён", "утаён", "утверждён", "утеплён", "утолён", "утомлён", "уточнён", "утрясён", "утяжелён", "учреждён", "учтён", "ущемлён", "уязвлён", "уяснён", "явлён"], WYe = ["ввёрнут", "ввёрнута", "ввёрнуто", "ввёрнуты", "вздёрнут", "вздёрнута", "вздёрнуто", "вздёрнуты", "втёрт", "втёрта", "втёрто", "втёрты", "завёрнут", "завёрнута", "завёрнуто", "завёрнуты", "задёрнут", "задёрнута", "задёрнуто", "задёрнуты", "замётан", "замётана", "замётано", "замётаны", "запелёнан", "запелёнана", "запелёнано", "запелёнаны", "заплёван", "заплёвана", "заплёвано", "заплёваны", "затёрт", "затёрта", "затёрто", "затёрты", "зачёркнут", "зачёркнута", "зачёркнуто", "зачёркнуты", "зачёрпнут", "зачёрпнута", "зачёрпнуто", "зачёрпнуты", "зачёсан", "зачёсана", "зачёсано", "зачёсаны", "зашёптан", "зашёптана", "зашёптано", "зашёптаны", "защёлкнут", "защёлкнута", "защёлкнуто", "защёлкнуты", "искорёжен", "искорёжена", "искорёжено", "искорёжены", "истёрт", "истёрта", "истёрто", "истёрты", "исчёркан", "исчёркана", "исчёркано", "исчёрканы", "исчёрпан", "исчёрпана", "исчёрпано", "исчёрпаны", "навёрнут", "навёрнута", "навёрнуто", "навёрнуты", "намётан", "намётана", "намётано", "намётаны", "наплёван", "наплёвана", "наплёвано", "наплёваны", "натёрт", "натёрта", "натёрто", "натёрты", "начёртан", "начёртана", "начёртано", "начёртаны", "начёрчен", "начёрчена", "начёрчено", "начёрчены", "нашёптан", "нашёптана", "нашёптано", "нашёптаны", "перечёркнут", "перечёркнута", "перечёркнуто", "перечёркнуты", "повёрнут", "повёрнута", "повёрнуто", "повёрнуты", "подвёрнут", "подвёрнута", "подвёрнуто", "подвёрнуты", "подёрнут", "подёрнута", "подёрнуто", "подёрнуты", "поддёрнут", "поддёрнута", "поддёрнуто", "поддёрнуты", "подмётан", "подмётана", "подмётано", "подмётаны", "подпёрт", "подпёрта", "подпёрто", "подпёрты", "подчёркнут", "подчёркнута", "подчёркнуто", "подчёркнуты", "пожёван", "пожёвана", "пожёвано", "пожёваны", "покорёжен", "покорёжена", "покорёжено", "покорёжены", "потёрт", "потёрта", "потёрто", "потёрты", "пощёлкан", "пощёлкана", "пощёлкано", "пощёлканы", "почёрпнут", "почёрпнута", "почёрпнуто", "почёрпнуты", "почёсан", "почёсана", "почёсано", "почёсаны", "притёрт", "притёрта", "притёрто", "притёрты", "причёсан", "причёсана", "причёсано", "причёсаны", "прищёлкнут", "прищёлкнута", "прищёлкнуто", "прищёлкнуты", "провёрнут", "провёрнута", "провёрнуто", "провёрнуты", "продёрнут", "продёрнута", "продёрнуто", "продёрнуты", "прожёван", "прожёвана", "прожёвано", "прожёваны", "простёрт", "простёрта", "простёрто", "простёрты", "протёрт", "протёрта", "протёрто", "протёрты", "прочёсан", "прочёсана", "прочёсано", "прочёсаны", "прошёптан", "прошёптана", "прошёптано", "прошёптаны", "развёрнут", "развёрнута", "развёрнуто", "развёрнуты", "раздёрнут", "раздёрнута", "раздёрнуто", "раздёрнуты", "разжёван", "разжёвана", "разжёвано", "разжёваны", "размётан", "размётана", "размётано", "размётаны", "распростёрт", "распростёрта", "распростёрто", "распростёрты", "растёрт", "растёрта", "растёрто", "растёрты", "расчёсан", "расчёсана", "расчёсано", "расчёсаны", "свёрнут", "свёрнута", "свёрнуто", "свёрнуты", "свёрстан", "свёрстана", "свёрстано", "свёрстаны", "сдёрнут", "сдёрнута", "сдёрнуто", "сдёрнуты", "сжёван", "сжёвана", "сжёвано", "сжёваны", "склёван", "склёвана", "склёвано", "склёваны", "спелёнан", "спелёнана", "спелёнано", "спелёнаны", "стёрт", "стёрта", "стёрто", "стёрты", "стёсан", "стёсана", "стёсано", "стёсаны", "утёрт", "утёрта", "утёрто", "утёрты", "утомлён", "утомлёна", "утомлёно", "утомлёны", "чёркнут", "чёркнута", "чёркнуто", "чёркнуты", "щёлкнут", "щёлкнута", "щёлкнуто", "щёлкнуты"], FYe = ["взбудоражен", "взволнован", "возбужден", "возмущен", "воспитан", "востребован", "выдрессирован", "газирован", "доношен", "заболочен", "заинтересован", "заинтригован", "закален", "зачарован", "зашифрован", "изогнут", "изогнута", "изогнуто", "изогнуты", "коррумпирован", "мотивирован", "помят", "помята", "помято", "помяты", "поношен", "потаскан", "потаскана", "потаскано", "потасканы", "сгорблен", "сконфужен", "сконфужена", "сконфужено", "сконфужены", "смазан", "титулован", "утомлен", "утомлена", "утомлено", "утомлены"];
var vk = {};
Object.defineProperty(vk, "__esModule", {
  value: !0
});
vk.default = function() {
  return {
    all: DYe
  };
};
const DYe = ["åberopades", "åberopas", "åberopats", "aborterades", "aborteras", "absorberades", "absorberas", "abstraherats", "acceleras", "accelereras", "accentuerades", "accentueras", "accentuerats", "accepeteras", "accepterades", "accepteras", "accepterats", "äcklades", "äcklas", "äcklats", "ackompagnerades", "ackompanjerades", "ackompanjeras", "ackompanjerats", "ackumuleras", "ackumulerats", "ådagalades", "ådagaläggs", "adderades", "adderas", "adderats", "adelspalats", "åderlåtas", "åderlåtits", "adidas", "adlades", "adlas", "adlats", "administrerades", "administreras", "ådömas", "ådömdes", "ådömes", "ådöms", "ådömts", "adopterades", "adopteras", "adopterats", "adresserades", "adresseras", "adresserats", "adventures", "affaires", "affischeras", "aflägsnas", "agades", "agas", "ägas", "ägdes", "ageras", "ägnades", "agnas", "ägnas", "ägnats", "ägs", "ägts", "åhördes", "aidstestas", "ajournerades", "ajourneras", "åkallades", "åkallas", "åkas", "aklagas", "åks", "aktades", "aktas", "akterseglas", "åktes", "äkthetsförklarades", "aktietips", "aktiverades", "aktiveras", "aktiverats", "aktivierats", "aktualiserades", "aktualiseras", "aktualiserats", "ålades", "åläggas", "åläggs", "ålagts", "alarmerades", "åldersbestämmas", "algas", "alienerades", "alldeldes", "alldelses", "alleles", "allendes", "allergiskadades", "allierades", "allokeras", "almsicks", "alouettes", "älskas", "älskats", "alstrades", "alstras", "alstrats", "ältades", "ältas", "ältats", "amatöriserades", "amerikaniseras", "ammades", "ammas", "ammats", "amores", "amorteras", "amorterats", "amputerades", "amputeras", "amputerats", "anades", "analyserades", "analyseras", "analyserats", "anammades", "anammas", "anammats", "anas", "anats", "anbefalldes", "anbefalles", "anbefalls", "anbringas", "anbringats", "anbudsupphandlas", "ändhållplats", "ändrades", "andras", "ändras", "ändrats", "anfäktades", "anfäktas", "anfäktats", "anfallas", "anfallits", "anfalls", "anfölls", "anföras", "anfördes", "anföres", "anförs", "anförtroddes", "anförtros", "anförtrotts", "anförts", "anfrätas", "ångades", "ångas", "ångats", "angavs", "anges", "angetts", "angives", "angivits", "angivs", "angjordes", "ångkokas", "angöras", "angörs", "ångras", "ångrats", "angreps", "angripas", "angripits", "angrips", "ängslades", "ängslas", "ängslats", "anhållas", "anhålles", "anhållits", "anhålls", "anhölls", "anhopas", "animeras", "ankalagas", "anklagades", "anklagas", "anklagats", "anklagts", "anknyts", "ankrades", "anlades", "anläggas", "anläggs", "anlagts", "anlitades", "anlitas", "anlitats", "anmälas", "anmäldes", "anmäles", "anmäls", "anmälts", "anmanas", "anmärkas", "anmärks", "anmärkts", "anmodades", "anmodas", "anmodats", "annekterades", "annekteras", "annekterats", "annonserades", "annonseras", "annonserats", "annuleras", "annullerades", "annulleras", "annvänds", "anordnades", "anordnas", "anordnats", "anpassades", "anpassas", "anpassats", "anrås", "anrättas", "anrättats", "anrikas", "anropas", "ansades", "ansågs", "ansamlades", "ansamlas", "ansamlats", "ansas", "ansättas", "ansattes", "ansatts", "ansätts", "anses", "ansetts", "anskaffades", "anskaffas", "anskaffats", "anslagits", "anslagsfinansierats", "anslås", "anslogs", "anslöts", "anslutas", "anslutits", "ansluts", "ansökas", "ansökes", "ansöktes", "ansökts", "anspelas", "anställas", "anställdes", "anställes", "anställs", "anställts", "ansträngas", "ansträngdes", "ansträngs", "ansträngts", "ansvisas", "antagas", "antages", "antagits", "antändas", "antändes", "antänds", "antänts", "antas", "antastas", "antastats", "anteciperas", "antecknades", "antecknas", "antecknats", "anteras", "antogs", "antologiserats", "anträddes", "anträffas", "anträffats", "äntras", "antydas", "antyddes", "antydes", "antyds", "antytts", "anvämdas", "användas", "användes", "används", "använts", "anvisades", "anvisas", "anvisats", "apéritifdags", "apostroferades", "applåderades", "applåderas", "applåderats", "applicerades", "appliceras", "applicerats", "apprecieras", "aprilskämtas", "apterades", "apteras", "apterats", "ärades", "åräknas", "äras", "ärats", "arbetades", "arbetas", "arbetats", "argumenterades", "argumenteras", "arielvas", "aristokratpalats", "arkebuserades", "arkebuseras", "arkebuserats", "arkiverades", "arkiveras", "arkiverats", "armbågas", "armeras", "armerats", "ärnas", "arrangerades", "arrangeras", "arrangerats", "arrenderades", "arrenderas", "arrenderats", "arresterades", "arresteras", "arresterats", "årsundas", "artbestäms", "artbestämts", "artikulerades", "artikuleras", "ärvas", "arvoderades", "arvoderas", "ärvs", "ärvts", "åsågs", "åsamkades", "åsamkas", "åsamkats", "åsättas", "åsatts", "åsätts", "åsetts", "asfalteras", "asfalterats", "åsidosättas", "åsidosattes", "åsidosättes", "åsidosatts", "åsidosätts", "åsiktsnäts", "åskades", "åskådliggjorts", "åskådliggöras", "åskådliggörs", "åskådligörs", "äskas", "assimilerades", "assimileras", "assimilerats", "assisterades", "assisteras", "associationeras", "associerades", "associeras", "åstadkommas", "åstadkommes", "åstadkommits", "åstadkoms", "åstakommas", "åstakoms", "asturias", "åsyftades", "åsyftas", "åtalades", "åtalas", "åtalats", "åtaldes", "ätas", "åteförenas", "ateljéplats", "återanpassas", "återanställdes", "återanställs", "återanställts", "återantändas", "återanvändas", "återanvändes", "återanvänds", "återbefolkades", "återbefolkas", "återberättades", "återberättas", "återbesättas", "återbesätts", "återbetalades", "återbetalas", "återbetalats", "återbildas", "återbildats", "återbördades", "återbördas", "återbördats", "återbrukas", "återerövras", "återerövrats", "återexploateras", "återfångas", "återfanns", "återfås", "återfinnas", "återfinnes", "återfinns", "återfödas", "återföddes", "återföds", "återföras", "återfördes", "återförenades", "återförenas", "återförenats", "återförs", "återförts", "återförvildas", "återförvisades", "återförvisas", "återfunnits", "återgavs", "återges", "återgetts", "återgives", "återgivits", "återhämtades", "återhämtats", "återiföras", "återimporteras", "återinföras", "återinfördes", "återinförs", "återinförts", "återinrättades", "återinrättas", "återinsättas", "återinsattes", "återinstallerades", "återintegreras", "återinvesterades", "återinvesteras", "återinvigas", "återinvigdes", "återinvigs", "återkallades", "återkallas", "återkallats", "återkastades", "återkastas", "återkatoliceras", "återknutits", "återknytas", "återköpas", "återkopplas", "återköptes", "återkrävas", "återladdas", "återlämnades", "återlämnas", "återlämnats", "återlevererats", "återlöses", "återmatas", "åternationaliseras", "åternoterades", "återönskas", "återöppnas", "återöppnats", "återplanteras", "återreglerades", "återregleras", "återremitterades", "återremitteras", "återremitterats", "återropades", "återsågs", "återsamlades", "återsamlas", "återsändas", "återsändes", "återsänds", "återses", "återskapades", "återskapas", "återskapats", "återskolas", "återspeglades", "återspeglas", "återspeglats", "återställas", "återställdes", "återställes", "återställs", "återställts", "återstartas", "återtagas", "återtas", "återtogs", "återuppbyggas", "återuppbyggdes", "återuppbyggts", "återuppföras", "återuppfördes", "återuppförts", "återupplevs", "återupplivades", "återupplivas", "återupplivats", "återuppnås", "återupprättades", "återupprättas", "återupprättats", "återupprepades", "återupprepas", "återuppsattes", "återupptäckas", "återupptäcktes", "återupptäckts", "återupptagits", "återupptas", "återupptogs", "återuppväckas", "återuppväcks", "återuppväcktes", "återuppväckts", "återutges", "återutgetts", "återutgivits", "återutnämnas", "återutnämnts", "återväcktes", "återvaldes", "återväljs", "återvändas", "återvanns", "återvinnas", "återvinns", "återvisades", "återvisas", "återvunnits", "ätes", "åtföljas", "åtföljdes", "åtföljs", "åtföljts", "åtgärdades", "åtgärdas", "åtgärdats", "åthutas", "ätits", "åtlydas", "åtlyddes", "åtlyds", "åtnjuts", "åtrås", "åts", "äts", "åtsadkommas", "åtskildes", "åtskiljas", "åtskiljs", "attackerades", "attackeras", "attackerats", "attackutrustas", "attesterades", "attesterats", "attraherades", "attraheras", "attraherats", "auktionerades", "auktioneras", "auktoriserades", "auktoriseras", "automatiserades", "automatiseras", "automatiserats", "avanmälas", "avanmäls", "avåts", "avbalkats", "avbeställdes", "avbeställts", "avbetades", "avbetalas", "avbildades", "avbildas", "avbildats", "avblåsas", "avblåses", "avblåstes", "avblåsts", "avblockerades", "avböjas", "avböjdes", "avbokas", "avbördas", "avbröts", "avbrutits", "avbrytas", "avbryts", "avdelas", "avdelats", "avdemokratiserades", "avdömas", "avdömdes", "avdramatiseras", "avdramatiserats", "äventyras", "äventyrats", "averages", "averotiseras", "avfärdades", "avfärdas", "avfärdats", "avfattades", "avfattas", "avfestas", "avfiras", "avfolkades", "avfolkas", "avfolkats", "avföras", "avfördes", "avföres", "avförs", "avförts", "avfotograferades", "avfyrades", "avfyras", "avfyrats", "avges", "avgiftades", "avgiftas", "avgiftsbelades", "avgiftsbeskattas", "avgivits", "avgjordes", "avgjorts", "avgöras", "avgöres", "avgörs", "avgränsades", "avgränsas", "avhållas", "avhålles", "avhållits", "avhålls", "avhånades", "avhånas", "avhändes", "avhandlades", "avhandlas", "avhandlats", "avhänds", "avhästades", "avhjälpas", "avhjälps", "avhjälptes", "avhjälpts", "avhölls", "avhöras", "avhördes", "avhörts", "avhysas", "avhyses", "avidentifieras", "avideologiseras", "avindividualiserats", "avisades", "avisas", "aviserades", "aviseras", "aviserats", "avjapaniseras", "avjoniserats", "avklädas", "avkläddes", "avklarades", "avklaras", "avklassificerades", "avknoppades", "avknoppas", "avknoppats", "avkodas", "avkrävas", "avkrävdes", "avkrävs", "avkrävts", "avkriminaliseras", "avkunnades", "avkunnas", "avkunnats", "avkyls", "avlades", "avläggas", "avlägges", "avlägsnades", "avlägsnas", "avlägsnats", "avlämnades", "avlämnas", "avlämnats", "avlas", "avläs", "avläsas", "avläses", "avlastades", "avlastas", "avlästes", "avlats", "avledas", "avleds", "avlevereras", "avlivades", "avlivas", "avlivats", "avlockas", "avlockats", "avlöjas", "avlönades", "avlönas", "avlönats", "avlösas", "avlöses", "avlossades", "avlossas", "avlossats", "avlöstes", "avlösts", "avlövas", "avlutas", "avlyssnades", "avlyssnas", "avlystes", "avmagnetiseras", "avmattas", "avmobiliserades", "avmumiefieras", "avmystifieras", "avnavlades", "avnjöts", "avnjutas", "avnjutes", "avnjuts", "avnoterades", "avnoteras", "avpassas", "avpatrulleras", "avpolitiseras", "avpolleterades", "avpolleteras", "avpolletterades", "avpolletteras", "avporträtterades", "avporträtteras", "avprogrammeras", "avprogrammerats", "avprutades", "avrådas", "avråddes", "avråds", "avräknas", "avrapporteras", "avrapporterats", "avrättades", "avrättas", "avrättats", "avråtts", "avregistrerades", "avregistreras", "avregistrerats", "avreglerades", "avregleras", "avreglerats", "avritas", "avrundades", "avrundas", "avrustades", "avrustas", "avs", "avsågs", "avsändas", "avsändes", "avsänds", "avsänts", "avsättas", "avsattes", "avsatts", "avsätts", "avses", "avsetts", "avskaffades", "avskaffas", "avskaffats", "avskäras", "avskärmas", "avskedades", "avskedas", "avskedats", "avskedshyllades", "avskildes", "avskiljas", "avskiljes", "avskiljs", "avskilts", "avskjutas", "avskjutits", "avskräckas", "avskräcks", "avskräcktes", "avskräckts", "avskrevs", "avskrivas", "avskrivits", "avskrivs", "avskurits", "avskys", "avslagits", "avslås", "avslogs", "avslöjades", "avslöjas", "avslöjats", "avslöjtas", "avslutades", "avslutas", "avslutats", "avsmakades", "avsökas", "avsöndras", "avspänningsglödgas", "avspärrades", "avspärrats", "avspeglades", "avspeglas", "avspeglats", "avspelas", "avspisades", "avspisas", "avstängas", "avstängdes", "avstängs", "avstängts", "avstyras", "avstyrks", "avstyrktes", "avstyrkts", "avsynas", "avsyras", "avtackades", "avtackas", "avtäckas", "avtackats", "avtäcks", "avtäcktes", "avtäckts", "avtagas", "avtalades", "avtalas", "avtalats", "avtecknas", "avtjänas", "avtjänats", "avträdas", "avträddes", "avtrappas", "avtrubbas", "avtrubbats", "avtvås", "avtvingades", "avtvingas", "avundades", "avundats", "avvägas", "avvaktas", "avväpnades", "avväpnas", "avväpnats", "avvaras", "avvärjas", "avvärjdes", "avvärjs", "avvärjts", "avvattnas", "avvecklades", "avvecklas", "avvecklats", "avverkades", "avverkas", "avverkats", "avvinnas", "avvisades", "avvisas", "avvisats", "avyttrades", "avyttras", "avyttrats", "axlades", "axlas", "axlats", "babblades", "babettes", "backades", "backas", "backats", "badades", "badas", "bäddades", "baddas", "bäddas", "bäddats", "bads", "bagatelliserades", "bagatelliseras", "bagatelliserats", "bagoas", "bakades", "bakas", "bakats", "bakbands", "bakbinds", "baksits", "baktalas", "baktalats", "balanserades", "balanseras", "balanserats", "balas", "balsamerades", "balsameras", "banaliseras", "bananas", "banats", "bandades", "bandas", "bandats", "banderas", "bändes", "bands", "bänds", "bänkades", "bankas", "bankats", "bannas", "bannlysas", "bannlyses", "bannlystes", "bantades", "bantas", "bantats", "barabbas", "bäras", "bäres", "bärgades", "bärgas", "bärgats", "barings", "barnablods", "barnes", "barrantes", "bars", "bärs", "barthes", "baserades", "baseras", "baserats", "basunerades", "basuneras", "basunerats", "bättrades", "bättras", "bättrats", "baxades", "baxas", "baxats", "beaktades", "beaktas", "beaktats", "bearbetades", "bearbetas", "bearbetats", "beättas", "bebådas", "beblandas", "beboddes", "bebos", "bebotts", "bebyggas", "bebyggdes", "bebyggs", "bedårades", "bedåras", "bedjas", "bedömas", "bedömdes", "bedömms", "bedöms", "bedömts", "bedövades", "bedövas", "bedragas", "bedras", "bedrevs", "bedrivas", "bedrives", "bedrivits", "bedrivs", "beds", "bedyras", "bedyrats", "beers", "befalldes", "befallts", "befanns", "befarades", "befaras", "befarats", "befästas", "befästes", "befästs", "befinnas", "befinnes", "befinns", "befläckats", "befodrats", "befolkades", "befolkas", "befolkats", "befordrades", "befordras", "befordrats", "befrämjades", "befrämjas", "befriades", "befrias", "befriats", "befruktades", "befruktas", "befruktats", "befunnits", "begagnas", "begapas", "begäras", "begärdes", "begärs", "begärts", "begås", "begåtts", "begåvades", "begåvas", "begåvats", "begicks", "begöts", "begränas", "begränsades", "begränsas", "begränsats", "begravas", "begravdes", "begravs", "begravts", "begreps", "begripas", "begrips", "begrovs", "begrundades", "begrundas", "behäftas", "behagas", "behållas", "behållits", "behålls", "behandlades", "behandlas", "behandlats", "behängts", "behärskades", "behärskas", "behölls", "behövas", "behövdes", "behöves", "behövs", "behovsprövas", "behövts", "beivras", "beivrats", "bejakas", "bejakats", "bejublades", "bejublas", "bejublats", "bekämpades", "bekämpas", "bekämpats", "bekändes", "bekännas", "bekänns", "bekantas", "bekantgjorts", "békas", "bekikas", "bekläddes", "beklagades", "beklagas", "beklagats", "beklas", "beklätts", "bekommas", "bekostades", "bekostas", "bekostats", "beköts", "bekräftades", "bekräftas", "bekräftats", "bekymras", "belades", "beläggas", "beläggs", "belägrades", "belägras", "belägrats", "belagts", "belamrades", "belamras", "belastades", "belastas", "belastats", "beledsagades", "beledsagas", "beles", "belönades", "belönas", "belönats", "belys", "belysas", "belyses", "belystes", "belysts", "bemålats", "bemannades", "bemannas", "bemannats", "bemästras", "bemästrats", "bemötas", "bemöts", "bemöttes", "bemötts", "bemyndigades", "bemyndigas", "benådades", "benådas", "benådats", "benaissas", "benämnas", "benämndes", "benämnes", "benämns", "benämnts", "benas", "benedikts", "bennetts", "benskadats", "beöms", "beordrades", "beordras", "beordrats", "bepudrades", "beräknades", "beräknas", "beräknats", "berättades", "berättas", "berättats", "berättigades", "berättigas", "berättigats", "beredas", "bereddes", "beredes", "bereds", "beretts", "berikades", "berikas", "berikats", "berishas", "bermudas", "berömdes", "berömmas", "beröms", "beröras", "berördes", "berörs", "berörts", "berövades", "berövas", "berövats", "berusades", "berusats", "bes", "besåddes", "besågs", "besannades", "besannas", "besannats", "besås", "besättas", "besattes", "besatts", "besätts", "besegarades", "besegerades", "beseglades", "beseglas", "besegrades", "besegras", "besegrats", "beses", "besiktas", "besiktigas", "besiktigats", "besittes", "besitts", "besjälas", "besjöngs", "besjungas", "besjungits", "besjungs", "beskådades", "beskådas", "beskälls", "beskäras", "beskars", "beskärs", "beskattades", "beskattas", "beskattats", "beskedas", "beskevs", "beskjutas", "beskjutits", "beskjuts", "beskogats", "besköts", "beskrevs", "beskrivas", "beskrives", "beskrivits", "beskrivs", "beskurits", "beskyddades", "beskyddas", "beskyllas", "beskylldes", "beskylls", "beskyllts", "beslagits", "beslagtagits", "beslagtas", "beslagtogs", "beslås", "beslogs", "beslöjades", "beslöjas", "beslöts", "beslutades", "beslutas", "beslutats", "besmittats", "besökas", "besöks", "besöktes", "besökts", "besparades", "besparas", "besparats", "bespisas", "bespottas", "bespottats", "besprutades", "besprutas", "besprutats", "beställas", "beställdes", "beställes", "beställs", "beställts", "bestals", "bestämdes", "bestämmas", "bestämmes", "bestäms", "bestämts", "bestänktes", "bestås", "bestigas", "bestigits", "bestjäls", "bestods", "bestormas", "bestraffades", "bestraffas", "bestraffats", "bestrålas", "bestrålats", "bestreds", "bestridas", "bestriddes", "bestrids", "beströddes", "bestulits", "bestyckas", "bestyckats", "bestyras", "bestyrkas", "bestyrkes", "bestyrks", "besudlas", "besudlats", "besvarades", "besvärades", "besvaras", "besväras", "besvarats", "besvärats", "besvärjas", "betäckas", "betäcktes", "betäckts", "betades", "betalades", "betalas", "betalats", "betalts", "betänkas", "betas", "betats", "betcknas", "betecknades", "betecknas", "betecknats", "betingades", "betingas", "betitlades", "betjänas", "betonades", "betonas", "betonats", "beträdas", "beträddes", "betrakats", "betraktades", "betraktas", "betraktats", "betroddes", "betrotts", "bets", "betsas", "betslas", "betts", "betvingas", "betvingats", "betvivlas", "betvivlats", "betygas", "betygsättas", "betygsattes", "betygsatts", "betygsätts", "betygssättas", "beundrades", "beundras", "beundrats", "bevakades", "bevakas", "bevakats", "beväpnades", "beväpnats", "bevarades", "bevaras", "bevarats", "bevärdigades", "bevärdigats", "bevattnades", "bevattnas", "bevekas", "beviljades", "beviljas", "beviljats", "bevisades", "bevisas", "bevisats", "bevistas", "bevittnades", "bevittnas", "bevittnats", "bhopas", "bibehållas", "bibehålles", "bibehållits", "bibehålls", "bibehölls", "bibliograferas", "bibringades", "bibringas", "bibringats", "bidrags", "biesmes", "bifallas", "bifalles", "bifallits", "bifalls", "bifogades", "bifogas", "bifogats", "bifölls", "bilades", "biläggas", "biläggs", "bilagts", "bildades", "bildas", "bildats", "bildsättas", "bildsätts", "bilfraktas", "billhälls", "bilskjuts", "bindas", "bindes", "binds", "bisättas", "bisattes", "biscuits", "bitas", "bitits", "biträdas", "biträddes", "biträdes", "biträds", "bits", "bjöds", "bjudas", "bjudes", "bjudits", "bjuds", "bläddrades", "bläddras", "blades", "blåfärgats", "blåmärkas", "blandades", "bländades", "blandas", "bländas", "blandats", "bländats", "blandfärs", "blankslipades", "blankslitits", "blås", "blåsas", "blåses", "blåstes", "blästrades", "blästras", "blästrats", "blåsts", "blekas", "blekläggas", "bleks", "blekts", "blidkades", "blidkas", "blindmes", "blindtarmsopererats", "blindtestas", "blinkas", "blixtinkallades", "blixtinkallas", "blixtinkallats", "blixtutredas", "blockerades", "blockeras", "blockerats", "blodfylls", "blodfyllts", "blomsterhyllas", "blossas", "blötas", "blötläggas", "blötläggs", "blöts", "blottades", "blottas", "blottats", "blöttes", "blottlades", "blottläggas", "blottläggs", "blottlagts", "blötts", "blottställas", "bluddrats", "bluffas", "blygas", "blygdes", "blygs", "blylastas", "bockas", "bogserades", "bogseras", "bogserats", "böjas", "böjdes", "bojkottades", "bojkottas", "böjs", "böjts", "bokades", "bokas", "bokats", "bokföras", "bokfördes", "bokförs", "bokförts", "bolagiserades", "bolagiseras", "bolagiserats", "bolas", "bolivares", "bollades", "bollas", "bollats", "bombades", "bombarderades", "bombarderas", "bombarderats", "bombas", "bombats", "bombhotades", "bombhotas", "bombhotats", "bommades", "bommats", "bonades", "bonas", "bönhördes", "bordades", "bordlades", "bordläggas", "bordläggs", "bordlagts", "börgades", "börjades", "börjas", "borrades", "borras", "borrats", "börsintroducerades", "börsintroduceras", "börsnoterades", "börsnoteras", "börsnoterats", "börsstoppades", "borstas", "bortauktioneras", "bortdribblas", "bortfördes", "bortförklaras", "bortförklarats", "bortförlovades", "bortförts", "bortopereras", "borträknats", "bortrationaliserades", "bortrationaliseras", "bortses", "borttages", "bortträngts", "bortväljes", "botades", "botas", "botats", "bötfällas", "bötfälldes", "bötfälls", "bötfällts", "bothas", "bötläggas", "böts", "bottenskrapades", "bottenskrapats", "bottnas", "bräckas", "brackets", "bräcks", "bräcktes", "brädas", "bräddas", "bråddes", "brädfodras", "bragtes", "bragts", "bråkades", "bråkas", "bråkats", "brandmärkts", "brandskattas", "brännmärkas", "brännmärks", "brännmärktes", "branns", "brännskadades", "bräserats", "brassades", "breakas", "bredas", "breddades", "breddas", "breddats", "breddes", "brehmers", "bres", "bretts", "bricoles", "bringas", "bringats", "broddas", "broderades", "broderas", "broderats", "brölas", "bromsades", "bromsas", "bromsats", "bröts", "brudås", "brugueras", "brukades", "brukas", "brukats", "brunsminkades", "brutaliseras", "brutaliserats", "brutits", "bryggas", "brynas", "bryns", "bryssellörs", "brytas", "brytes", "bryts", "buades", "buas", "buats", "budades", "budgeterades", "budgeteras", "budgeterats", "buffas", "bugas", "buggas", "bullerbegränsas", "bullerisoleras", "bultas", "bundes", "bundits", "buntas", "buntats", "buras", "burits", "burrades", "busats", "bussades", "bussas", "bussats", "buteljeras", "buteljerats", "bygdes", "byggas", "byggdes", "bygges", "byggnadsminnesförklarades", "byggnadsminnesförklaras", "byggnadsminnesmärks", "byggs", "byggstartas", "byggts", "bykas", "bytas", "bytits", "byts", "byttes", "bytts", "caceres", "cajs", "cambrils", "camoufleras", "capras", "carlshamns", "catenas", "celebrerades", "celebreras", "cementas", "cementerades", "cementeras", "cementerats", "censurerades", "censureras", "censurerats", "centimes", "centraldirigeras", "centraliserades", "centraliseras", "centraliserats", "centralregleras", "centralstyrs", "centras", "centrats", "centrifugerats", "centrsimes", "ceres", "certifierats", "charmades", "charmas", "charmats", "chartras", "chartrats", "checkas", "chiapas", "chikanerats", "chines", "chivas", "chockades", "chockas", "chockats", "chockerades", "chockeras", "chockhöjs", "chockskadades", "chockskadas", "christmas", "cirkuleras", "citerades", "citeras", "citerats", "civiliseras", "coachas", "components", "comviqs", "contras", "cripps", "crosscheckades", "cruises", "cuplottades", "cyberfrogs", "cyklas", "däckades", "däckas", "däckats", "dagits", "daglidags", "dalaras", "dalas", "daltades", "daltas", "dämdes", "dammades", "dammas", "dämmas", "dammats", "dammsögs", "dammsugits", "dammsugs", "dammtorkas", "dämpades", "dämpas", "dämpats", "däms", "dämts", "danades", "danas", "danats", "danidas", "daniells", "dansades", "dansas", "dansats", "darras", "das", "databaseras", "databehandlas", "daterades", "dateras", "daterats", "datoriseras", "dealas", "debatterades", "debatteras", "debatterats", "debiteras", "debiterats", "decentraliserades", "decentraliseras", "dechiffreras", "decimaliseras", "decimerades", "decimeras", "decimerats", "dedicerades", "defineras", "definierades", "definieras", "definierats", "deformeras", "deformerats", "degas", "degenererats", "degraderades", "degraderas", "degraderats", "degradras", "deklamerades", "deklameras", "deklarerades", "deklareras", "deklarerats", "dekonstruerades", "dekonstrueras", "dekonstruerats", "dekorerades", "dekoreras", "dekorerats", "dekrypteras", "delades", "delas", "delats", "delegerades", "delegeras", "delegerats", "delexpedieras", "delfinansierades", "delfinansieras", "delgavs", "delges", "delgetts", "delgivits", "deltas", "delvalveras", "demaskerades", "demaskeras", "dematerialiseras", "dementerades", "dementeras", "dementerats", "demilitariserats", "demobiliserades", "demobiliseras", "demokratiserades", "demokratiseras", "demokratiserats", "demolerades", "demoleras", "demolerats", "demoniseras", "demonstrerades", "demonstreras", "demonstrerats", "demonterades", "demonteras", "demystifieras", "deponeras", "deponerats", "deporterades", "deporteras", "deporterats", "deppas", "desarmerades", "desarmerats", "deserves", "designas", "designats", "desillusioneras", "desinficeras", "desinficerats", "desorienteras", "destabiliserades", "destilleras", "destillerats", "destineras", "destrueras", "detaljgranskas", "detaljregleras", "detaljstuderas", "detaljstyrs", "detekteras", "detroniserades", "detroniseras", "detroniserats", "dettalas", "devalverades", "devalveras", "devalverats", "diagnosticerades", "diagnosticeras", "diagnosticerats", "diagnostiserades", "diagnostiseras", "diagnostiserats", "diagosticeras", "diarieföras", "diarieförs", "diarieförts", "dias", "differentieras", "differentierats", "diggats", "digitaliseras", "digitaliserats", "dikats", "diktats", "dikterades", "dikteras", "dikterats", "dikvalificerats", "dimensionerades", "dimensioneras", "dimensionerats", "diminueras", "dineras", "diplomerades", "directes", "direktavskrivas", "direktavvisas", "direktkonfronterades", "direktnoterades", "direktsändas", "direktsändes", "direktsänds", "direktsänts", "direktteleviserades", "direktväljas", "dirigerades", "dirigeras", "dirigerats", "disciplineras", "diskades", "diskas", "diskats", "diskonterades", "diskonteras", "diskonterats", "diskrediterades", "diskrediterats", "diskriminerades", "diskrimineras", "diskriminerats", "diskuterades", "diskuteras", "diskuterats", "diskvalificerades", "diskvalificeras", "diskvalificerats", "disponerades", "disponeras", "disponerats", "disputerades", "dissekerades", "dissekeras", "dissekerats", "dissikerades", "distanserades", "distanseras", "distraheras", "distribuerades", "distribueras", "distribuerats", "distribureras", "dites", "dittransporterats", "diversifieras", "divideras", "dividerats", "djäklas", "djärvas", "djärvdes", "djärves", "djävlades", "djävlas", "djilas", "djupdykas", "djupfrysas", "djupfryses", "djupintervjuas", "djupintervjuats", "dödades", "dödas", "dödats", "dödförklarades", "dödförklaras", "dödförklarats", "dödskallemärkas", "dogs", "dokes", "dokumenterades", "dokumenteras", "dokumenterats", "doldes", "döljas", "döljs", "döljts", "dollarras", "dolts", "domarbedömas", "dömas", "domderas", "dömdes", "dömes", "domesticeras", "domesticerats", "dominerades", "domineras", "dominerats", "dompteras", "döms", "dömts", "donerades", "doneras", "donerats", "döpas", "dopingtestades", "dopingtestas", "doppades", "doppas", "doppats", "döps", "döptes", "döpts", "doserades", "doseras", "douradores", "dövades", "dövas", "dövats", "dövtolkas", "drabbades", "drabbas", "drabbats", "drabbbades", "dracks", "draftades", "draftas", "dragas", "dragits", "dramatiseras", "dramatiserats", "drämdes", "dränerades", "dräneras", "dränerats", "dränkas", "dränkes", "dränks", "dränktes", "dränkts", "dräpas", "draperades", "draperas", "draperats", "dräps", "dräptes", "dras", "dreams", "drejades", "drejats", "dressas", "dresseras", "dresserats", "dressyrbas", "drevades", "drevs", "dribblades", "dribblas", "dribblats", "drickas", "drickes", "drillades", "drillas", "drillats", "drivas", "drives", "drivgas", "drivits", "drivs", "drogades", "drogas", "drogats", "drogs", "drogtestats", "drömdes", "drömmas", "droppades", "druckits", "drukpas", "dryftades", "dryftas", "dryftats", "drygades", "dubbas", "dubbats", "dubbelexponeras", "dubbelriktas", "dubblades", "dubblas", "dubblats", "dubblerades", "dubbleras", "dubblerats", "dukades", "dukas", "dukats", "dumpades", "dumpas", "dumpats", "dunas", "dundrades", "dundras", "dunkades", "dunkas", "duperades", "duperas", "duperats", "duplicerades", "durres", "duschades", "duschas", "dvaldes", "dväljs", "dvalts", "dyrkades", "dyrkas", "ebbas", "effektiverades", "effektiveras", "effektiviserades", "effektiviseras", "effektiviserats", "effektueras", "effektureras", "efteranmäldes", "efterbildas", "efterföljas", "efterföljdes", "efterföljs", "efterfrågades", "efterfrågas", "efterfrågats", "efterhördes", "efterkomposteras", "efterlämnades", "efterlämnas", "efterlevas", "efterlevdes", "efterlevs", "efterliknats", "efterlysas", "efterlyses", "efterlystes", "efterlysts", "eftersänds", "eftersänts", "eftersättas", "eftersattes", "eftersatts", "eftersätts", "efterskänkas", "eftersökas", "eftersöks", "eftersöktes", "efterspanas", "eftersträvades", "eftersträvas", "eftersynkroniseras", "eftertaxerades", "efterträdas", "efterträddes", "efterträdes", "efterträds", "efterträtts", "eggades", "eggas", "eggers", "ekas", "ekiperats", "eklärerades", "eklaterades", "eklateras", "eklaterats", "eldades", "eldas", "eldats", "eldhärjades", "eldhärjas", "eldhärjats", "elektras", "elektrifierades", "elektrifieras", "eliminerades", "elimineras", "eliminerats", "elitiseras", "ellerströms", "emballerades", "emitterades", "emitteras", "emotsågs", "emotses", "emottagas", "emottas", "emtungas", "enades", "enas", "enats", "engagerades", "engageras", "engagerats", "engagererats", "engells", "enhetliggöras", "enkelriktades", "enkelriktas", "enkelriktats", "enleverades", "enleveras", "enrollerades", "enrolleras", "enrollerats", "enskommits", "entledigades", "entledigas", "entledigats", "entusiasmeras", "envisades", "envisats", "erades", "erbjöds", "erbjudas", "erbjudes", "erbjudits", "erbjuds", "erfaras", "erfodras", "erfordrades", "erfordras", "erfors", "erhållas", "erhålles", "erhållits", "erhålls", "erhölls", "erinrades", "erinras", "erkändes", "erkännas", "erkännes", "erkännnas", "erkänns", "erkänts", "erlades", "erläggas", "erlägges", "erläggs", "erlagts", "eroderas", "erotiseras", "erövrades", "erövras", "erövrats", "ersättas", "ersattes", "ersättes", "ersatts", "ersätts", "ertappades", "ertappas", "ertappats", "esbjörs", "eskaleras", "eskorterades", "eskorteras", "eskorterats", "esseltes", "estetiseras", "etablerades", "etableras", "etablerats", "etappindelas", "etiketterades", "etiketteras", "etnifieras", "etnifierats", "etsades", "etsas", "eudokias", "europeiseras", "europes", "evakuerades", "evakueras", "evakuerats", "evalueras", "everglades", "evkuerats", "examinerades", "examineras", "examinerats", "exekverades", "exekveras", "exemplifieras", "exkluderas", "exkluderats", "exkommuniceras", "expanderas", "expedierades", "expedieras", "experimenterades", "experimenteras", "experimenterats", "explicitgjorts", "exploaterades", "exploateras", "exploaterats", "exponerades", "exponeras", "exponerats", "exporterades", "exporteras", "exporterats", "expropieras", "exproprierades", "exproprieras", "extrainkallas", "extraskjuts", "fackbas", "fägnats", "fajtades", "fajtas", "fajtats", "fäktades", "fäktas", "fakturerades", "faktureras", "fakturerats", "fållas", "fällas", "fälldes", "falles", "falls", "fälls", "fällts", "falsifieras", "fältprovas", "famnas", "fångades", "fångas", "fångats", "fängslades", "fängslas", "fängslats", "fanzines", "fårades", "färas", "fårats", "färdigbehandlas", "färdigförhandlades", "färdigrepareras", "färdigspelades", "färdigspelas", "färdigspelats", "färdigställas", "färdigställdes", "färdigställs", "färdigställts", "färdigutrustas", "fares", "färgades", "färgas", "färgats", "färgläggas", "färgläggs", "färgsättas", "färgsattes", "färgsätts", "färjades", "färjas", "farpas", "fås", "fasadputsas", "fasas", "fascinerades", "fascineras", "fascinerats", "fassetts", "fästas", "fästes", "fastlades", "fastläggas", "fastlagts", "fastnades", "fästs", "fastslagits", "fastslås", "fastslogs", "fastställas", "fastställdes", "fastställs", "fastställts", "fattades", "fattats", "fattiggjorts", "fåtts", "favoriserades", "favoriseras", "favoriserats", "favoritspelas", "faxades", "faxats", "fejas", "felbalanserades", "felbedöms", "felbetonades", "felciteras", "felkopplas", "felsökas", "feltolkades", "feltolkas", "feltolkats", "femdubblades", "femdubblas", "femdubblats", "femfaldigades", "femfaldigats", "feminiseras", "femmes", "fermentas", "fernissas", "fes", "festades", "festas", "festes", "festplats", "fickparkeras", "fifflas", "fightades", "fightas", "fightats", "figueras", "figureras", "fikas", "fiktionaliserats", "filas", "filmades", "filmas", "filmatiserades", "filmatiseras", "filmatiserats", "filmats", "filmtricks", "filotas", "filtreras", "filtrerats", "fimpas", "fimpats", "finalbesegrades", "finalbrottas", "finaniseras", "finanseras", "finanserats", "finanserias", "finansierades", "finansieras", "finansierats", "finansierieras", "finfördelats", "fingeras", "fingranskas", "fininställas", "fininställs", "finjusteras", "finkammades", "finkammas", "finkammats", "finkrattats", "finnes", "finnns", "finputsas", "finputsats", "finslipas", "finslipats", "fintades", "fintas", "firades", "firas", "firats", "fiskades", "fiskas", "fiskats", "fixades", "fixas", "fixats", "fixerades", "fixeras", "fixerats", "fjärmas", "fjärrstyras", "fjärrstyrs", "fjärtas", "fjäskas", "fjättrades", "fjättrats", "fläckades", "fläckas", "fläckats", "flåddes", "flaggades", "flaggas", "flaggats", "fläkas", "flakes", "flamberats", "flankerades", "flankeras", "flätades", "flätas", "flätats", "flerdubblades", "flerdubblas", "flerdubblats", "flerfaldigas", "flerfaldigats", "flintstones", "flirtas", "flögs", "flörtas", "flottades", "flugits", "flyers", "flygas", "flygbesprutas", "flygbombades", "flygbombas", "flygbombats", "flygfotograferades", "flygpats", "flygs", "flyttades", "flyttas", "flyttats", "fnissas", "fnissats", "fnös", "fnystes", "födas", "födddes", "föddes", "föds", "fogades", "fogas", "fogats", "fögelkes", "föjdes", "fokuserades", "fokuseras", "fokuserats", "föläggs", "följas", "följdes", "följs", "följts", "folkas", "fonderades", "fonderas", "fonderats", "fönsterspröjs", "förädlades", "förädlas", "förädlats", "föraktades", "föraktas", "föraktats", "föräldrarsomdeklasserats", "förändats", "förändrades", "förändrarts", "forandras", "förändras", "forändrats", "förändrats", "förångades", "förångas", "förångats", "förankrades", "förankras", "förankrats", "föranledas", "föranleddes", "föranleds", "föranletts", "föranmälts", "förannonserats", "föranstaltades", "förärades", "föräras", "förärats", "förargas", "förargats", "föras", "förbands", "förbannades", "förbannas", "förbannats", "förbättrades", "förbättras", "förbättrats", "förbegicks", "förbehållas", "förbehållits", "förbehålls", "förbehandlas", "förbehölls", "förberdas", "förberedas", "förbereddes", "förberedes", "förbereds", "förberetts", "förbeställas", "förbeställts", "förbigås", "förbigåtts", "förbigicks", "förbindas", "förbinds", "förbisågs", "förbises", "förbisetts", "förbittrades", "förbjöds", "förbjudas", "förbjudes", "förbjudits", "förbjuds", "förblandades", "förblandas", "förblindades", "förblindas", "förblindats", "förbluffades", "förbluffas", "förborgerligades", "förborgerligas", "förborgerligats", "förbrändes", "förbrännas", "förbränns", "förbränts", "förbrödrades", "förbrödras", "förbrukades", "förbrukas", "förbrukats", "förbryllades", "förbryllas", "förbryllats", "förbuskats", "förbyggts", "förbytas", "förbyts", "förbyttes", "förbytts", "forcerades", "forceras", "forcerats", "fördärvades", "fördärvas", "fördärvats", "fördelades", "fördelas", "fördelats", "fördeltas", "fördes", "fördjupades", "fördjupas", "fördjupats", "fördömas", "fördömdes", "fördöms", "fördömts", "fordrades", "fördragas", "fördrages", "fordras", "fördras", "fordrats", "fördrevs", "fördrivas", "fördrivits", "fördrivs", "fördröjas", "fördröjdes", "fördröjes", "fördröjs", "fördröjts", "fördubblades", "fördubblas", "fördubblats", "fördummas", "fördunklades", "fördunklas", "fördunklats", "fördyrades", "fördyras", "fördyrats", "fördystrades", "förebådades", "förebådas", "förebådats", "föreberedas", "förebragts", "förebrås", "förebyggas", "förebyggs", "föredömdes", "föredrages", "föredras", "föredrogs", "föregås", "föregåtts", "föregicks", "föregreps", "föregripits", "föregrips", "föreknippas", "förekommas", "förekommits", "förelades", "föreläggas", "föreläggs", "förelagts", "förelås", "förelästes", "förenades", "förenas", "förenats", "förenhetligas", "förenklades", "förenklas", "förenklats", "föres", "föreskrevs", "föreskrivas", "föreskrivs", "föreslagits", "föreslås", "föreslogs", "förespås", "förespeglades", "förespeglas", "förespeglats", "förespråkades", "förespråkas", "förespråkats", "föreställas", "föreställdes", "föreställs", "förestås", "förestods", "forests", "företagas", "företagits", "företas", "företeddes", "företogs", "företrädas", "företräddes", "företräds", "förevigades", "förevigas", "förevigats", "förevisades", "förevisas", "förevisats", "förfäktas", "förfalskades", "förfalskas", "förfalskats", "förfärades", "förfäras", "förfärats", "förfärdigades", "förfärdigats", "förfares", "förfasades", "förfasas", "författades", "författas", "författats", "förfelades", "förfelas", "förfinades", "förfinas", "förfinats", "förfinskas", "förflackas", "förflackats", "förflyktats", "förflyktigades", "förflyktigas", "förflyktigats", "förflyttades", "förflyttas", "förflyttats", "förföljas", "förföljdes", "förföljs", "förföljts", "förföras", "förfördelas", "förfördes", "förförs", "förförts", "förfranskas", "förfrös", "förfulas", "förfulats", "förfuskades", "förfuskas", "förfuskats", "förgasades", "förgasas", "förgasats", "förgiftades", "förgiftas", "förgiftats", "förglömmas", "förgöras", "förgrovades", "förgrovas", "förgrovats", "förgrymmas", "förgubbas", "förgudas", "förgylldes", "förgylls", "förgyllts", "förhalades", "förhalas", "förhalats", "förhållas", "förhånades", "förhånas", "förhånats", "förhandlades", "förhandlas", "förhandlats", "förhandscensureras", "förhandsetiketteras", "förhandsgranskas", "förhandsnomineras", "förhandsvisades", "förhärdas", "förhärligades", "förhärligas", "förhäxas", "förhindrades", "förhindras", "förhindrats", "förhöjas", "förhöjs", "förhöras", "förhördes", "förhörs", "förhörts", "förintades", "förintas", "förintats", "förjagas", "förkalkas", "förkapslats", "förkastades", "förkastas", "förkastats", "förkläds", "förklarades", "förklarars", "förklaras", "förklarats", "förknippades", "förknippas", "förknippats", "förkortades", "förkortas", "förkortats", "förkroppsligas", "förkrossas", "förkunnades", "förkunnas", "förkunnats", "förkvävas", "förkvävs", "förlades", "förläggas", "förläggs", "förlagts", "förlamades", "förlamas", "förlamats", "förlänades", "förlänas", "förlänats", "förlängas", "förlängdes", "förlängs", "förlängts", "förlåtas", "förlåts", "förläts", "förledas", "förledes", "förleds", "förletts", "förlikades", "förlikas", "förlikats", "förliknas", "förliks", "förliktes", "förlikts", "förljuvades", "förlöjligades", "förlöjligas", "förlöjligats", "förlorades", "förloras", "förlorats", "förlösas", "förlöses", "förlöstes", "förlustanmälas", "förmåddes", "formades", "formaliserades", "formaliseras", "förmanades", "förmanas", "förmånsbeskattades", "förmånsbeskattas", "förmänskligades", "förmänskligas", "förmärkas", "förmärks", "förmärktes", "förmärkts", "formas", "förmås", "formats", "förmåtts", "förmedlades", "förmedlas", "förmedlats", "förmenades", "förmenas", "förmenats", "formerades", "formeras", "förmeras", "formerats", "förmerats", "formges", "formgetts", "formgivits", "förminskades", "förminskas", "förminskats", "förmodades", "förmodas", "förmögenhetsbeskattas", "förmörkades", "förmörkas", "förmörkats", "formsprutas", "formulerades", "formuleras", "formulerats", "förnams", "förnedrades", "förnedras", "förnedrats", "förnekades", "förnekas", "förnekats", "förnimmas", "förnims", "förnöjts", "förnyades", "förnyas", "förnyats", "förödas", "föröddes", "förödes", "förodlas", "förödmjukades", "förödmjukas", "förödmjukats", "föröds", "förökas", "förökats", "förolämpas", "förolämpats", "förolyckades", "förolyckas", "förolyckats", "förolycklades", "förorättats", "förordades", "förordas", "förordats", "förordnades", "förordnas", "förordnats", "förorenas", "förorenats", "förorsakades", "förorsakas", "förorsakats", "förövades", "förövas", "förövats", "förpackades", "förpackas", "förpackats", "förpassades", "förpassas", "förpassats", "förpasssades", "förpestades", "förpestas", "förpliktades", "förpliktas", "förpuppades", "förpuppas", "förråats", "förrådas", "förråddes", "förräntas", "förrättades", "förrättas", "förrättats", "förringades", "förringas", "förringats", "förrycks", "förrycktes", "fors", "förs", "försågs", "försakas", "försäkrades", "försäkras", "försäkrats", "försåldes", "försäljas", "försäljes", "församhälleligats", "församlades", "försämrades", "försämras", "försämrats", "försänkas", "försättas", "försattes", "försatts", "försätts", "förseglades", "förseglats", "forselles", "försenades", "försenas", "försenats", "förses", "försetts", "försinkas", "forskades", "forskas", "forskats", "förskingrades", "förskingras", "förskingrats", "förskjöts", "förskjutas", "förskjutits", "förskjuts", "förskonades", "förskonas", "förskönas", "förskonats", "förskönats", "försköts", "förskräckas", "förskräckes", "förskräcks", "förskrivas", "förskrivits", "förskrivs", "forslades", "förslagits", "förslappats", "forslas", "förslås", "forslats", "förslavas", "förslavats", "förslits", "förslöats", "förslogs", "förslösades", "förslösas", "förslösats", "förslummades", "förslummas", "förslutits", "försmåddes", "försnävas", "försnillas", "försökas", "försöktes", "försonades", "försonas", "försonats", "försörjas", "försörjdes", "försörjs", "försörjts", "förspillas", "förspilldes", "förspills", "förspordes", "försports", "försprödas", "förstärkas", "förstärks", "förstärktes", "förstärkts", "förstås", "förståss", "förstatligades", "förstatligas", "förstatligats", "förståtts", "förstenades", "förstenas", "förstods", "förstoppas", "förstorades", "förstoras", "förstöras", "förstorats", "förstördes", "förstörs", "förstörts", "förströddes", "förströs", "förstuckits", "förstummades", "förstummas", "förstummats", "försummades", "försummas", "försummats", "försumpats", "försuras", "försvagades", "försvagas", "försvagats", "försvarades", "försvårades", "försvaras", "försvåras", "försvarats", "försvårats", "försvenskas", "försvenskats", "försvunnes", "förtages", "förtalas", "förtalats", "förtäljas", "förtamats", "förtäras", "förtärdes", "förtärs", "förtärts", "förtas", "förtås", "förtätades", "förtätas", "förtätats", "fortbildas", "förtecknas", "förtecknats", "förtegs", "förtidsinlösas", "förtidspensionerades", "förtidspensioneras", "förtidspensionerats", "förtigas", "förtiges", "förtigits", "förtigs", "förtingligas", "förtjänas", "förtjänats", "förtjusas", "förtjustes", "förtöjas", "förtöjdes", "förtöjs", "förtorkats", "fortplantades", "fortplantas", "förtrampades", "förträngas", "förträngs", "förtrollades", "förtrollas", "förtröttades", "förtröttas", "förtröttats", "förtryckas", "förtrycks", "förtrycktes", "förtryckts", "förts", "fortsättas", "fortsattes", "förtullades", "förtullas", "förtunnades", "förtunnas", "förtydligades", "förtydligas", "förundrades", "förundradts", "förundras", "förundrats", "förunnades", "förunnas", "förunnats", "förustspås", "förutbestäms", "förutsades", "förutsägas", "förutsågs", "förutsägs", "förutsagts", "förutsättas", "förutsattes", "förutsättes", "förutsatts", "förutsätts", "förutses", "förutsetts", "förutskickades", "förutskickas", "förutspåddes", "förutspås", "förutspåtts", "förvägrades", "förvägras", "förvägrats", "förvälls", "förvaltades", "förvaltas", "förvaltats", "förvånades", "förvånas", "förvånats", "förvandlades", "förvandlas", "förvandlats", "förvänds", "förvanskades", "förvanskas", "förvanskats", "förväntades", "förväntas", "förväntats", "förvarades", "förvaras", "förvarats", "förvärms", "förvarnas", "förvarnats", "förvärrades", "förvärras", "förvärrats", "förvärvades", "förvärvas", "förvärvats", "förväxlades", "förväxlas", "förväxlats", "förvedas", "förvekligades", "förvekligas", "förverkas", "förverkats", "förverkligades", "förverkligas", "förverkligats", "förvillas", "förvirrades", "förvirras", "förvisades", "förvisas", "förvisats", "förvissades", "förvrängas", "förvrängdes", "förvrängs", "förvrängts", "förvreds", "förvridas", "förvridits", "förvrids", "föryngrades", "föryngras", "föryngrats", "fös", "fösas", "föses", "fosforyleras", "föstes", "fostrades", "fostras", "fostrats", "fösts", "fotats", "fotodokumenterades", "fotograferades", "fotograferas", "fotograferats", "fotokopieras", "fötts", "frågades", "frågasättas", "frågats", "fragmenteras", "fragmentiserades", "fraktades", "fraktas", "fraktats", "fräls", "frälsas", "framarbetats", "frambäras", "frambäres", "frambesvärjas", "frambesvärjs", "frambringats", "framdrivits", "framflyttats", "framföras", "framfördes", "framföres", "framförhandlades", "framförhandlats", "framförs", "framförts", "framfötts", "framhållas", "framhålles", "framhållits", "framhålls", "framhävas", "framhävdes", "framhävs", "framhölls", "främjades", "främjas", "främjats", "framkallades", "framkallas", "framkallats", "framkastades", "framkastas", "framlades", "framläggas", "framlagts", "framledes", "frammanas", "framräknas", "framräknats", "framställas", "framställdes", "framställs", "framställts", "framtagits", "framtvingas", "framtvingats", "frångås", "frånhändas", "frånkännas", "frankeras", "frankerats", "frånräknas", "fransats", "fråntagits", "fråntas", "fråntogs", "frapperades", "frapperas", "frapperats", "fräs", "fräschades", "fräschats", "fräses", "frästs", "fräts", "frättes", "frätts", "fredades", "fredas", "freddes", "fredells", "fredrikornas", "frekvensplaneras", "frekventerades", "frekventeras", "freongas", "frestades", "frestas", "frestats", "friades", "frias", "friats", "friderikas", "fridlysas", "fridlyses", "fridlystes", "frigavs", "friges", "frigetts", "frigivits", "frigjordes", "frigjorts", "frigöras", "frigöres", "frigörs", "frihetsberövades", "frikändes", "frikännas", "frikänns", "frikänts", "friklassas", "frikopplades", "frikopplas", "frikopplats", "friköptes", "frilades", "friläggas", "friläggs", "frisätts", "friserades", "friseras", "friserats", "friskförklarats", "frisläppas", "frisläpps", "frisläpptes", "frisläppts", "frisöranställdas", "frispelades", "friställas", "friställdes", "friställs", "friställts", "fritagits", "fritällts", "fritas", "friteras", "friterats", "fritidshemsplats", "fritogs", "frodades", "frodas", "frodats", "fröjdades", "fröjdas", "frölundagrabbarnas", "frontalpressades", "frös", "frossas", "frössvettades", "frostats", "frotterades", "frotteras", "frotterats", "frubjudas", "fruktades", "fruktas", "fruktats", "fruktmos", "frusits", "frustrerades", "frustreras", "frys", "frysas", "fryses", "frystes", "frysts", "fudgsicles", "fuentes", "fuktades", "fuktats", "fulländades", "fulländas", "fullbordades", "fullbordas", "fullbordats", "fullföljas", "fullföljdes", "fullföljs", "fullföljts", "fullförts", "fullgjorts", "fullgöras", "fullgörs", "fullkomnas", "fullkomnats", "funderades", "funderas", "funderats", "funnes", "fusionerades", "fusioneras", "fusionerats", "fuskades", "fuskas", "fuskats", "fylkades", "fylkas", "fylkats", "fyllas", "fylldes", "fylles", "fylls", "fyllts", "fyndas", "fyrdubblades", "fyrdubblas", "fyrdubblats", "fyrfaldigades", "gäckades", "gäckas", "gäckats", "gafflas", "gagnades", "gagnas", "gagnats", "galas", "gäldas", "gäldats", "gales", "gallottas", "gallras", "gallrats", "galopperades", "gals", "gammeldags", "gängas", "gapas", "garanterades", "garanteras", "garanterats", "garderas", "garnerades", "garneras", "garrotterades", "garvats", "gås", "gasades", "gasas", "gäspas", "gastades", "gästades", "gästas", "gästats", "gastkramades", "gastkramats", "gåtts", "gaulles", "gauloises", "gavs", "geddes", "geels", "gefundenes", "gekås", "genas", "generades", "generaliseras", "generas", "genererades", "genereras", "genererats", "geniförklarades", "geniförklarats", "genmanipuleras", "genmanipulerats", "genmföras", "gennes", "genomblåsts", "genomborrades", "genomborras", "genomborrats", "genombröts", "genombrutits", "genomdrevs", "genomdrivas", "genomfares", "genomfars", "genomföras", "genomfördes", "genomfors", "genomförs", "genomförts", "genomgås", "genomgörs", "genomkorsades", "genomkorsas", "genomläsas", "genomleds", "genomlidas", "genomlidits", "genomlids", "genomlysas", "genomskådades", "genomskådas", "genomskådats", "genomskärs", "genomsköljdes", "genomsökas", "genomsöks", "genomsöktes", "genomsökts", "genomströmmades", "genomströmmas", "genomsyrades", "genomsyras", "genrebestämmas", "gensköts", "geomfördes", "ges", "gestaltades", "gestaltas", "gestaltats", "getts", "gicks", "giftas", "giftes", "giftmördas", "gifts", "gillades", "gillas", "gillrades", "gillras", "gills", "giltigförklarats", "gipsas", "gipsats", "gissas", "gisslas", "givas", "gives", "givits", "givs", "gjirokastras", "gjordes", "gjöres", "gjors", "gjorts", "gjöts", "gjutas", "gjutits", "gjuts", "gladdes", "glädjas", "glädjs", "gläds", "glammas", "glamourdags", "gläns", "gläntades", "glasas", "glaseras", "glatts", "glesades", "glesas", "globaliseras", "glömmas", "glömmes", "glöms", "glorifierades", "glorifieras", "glunkas", "gnabbades", "gnabbandes", "gnagdes", "gnags", "gnällts", "gneds", "gnetas", "gnidas", "gnidits", "gnids", "gnisslas", "gnolas", "gnolats", "gnuggades", "gnuggas", "gnuggats", "gödas", "godkändes", "godkännas", "godkännes", "godkänns", "godkänts", "gödslades", "gödslas", "gödslats", "godspelas", "godtagas", "godtagits", "godtas", "godtogs", "golas", "golvades", "golvats", "gömdes", "gömmas", "göms", "gömts", "göras", "göres", "görs", "gosas", "götas", "götes", "göts", "gottgöras", "gottgörs", "gräddades", "gräddas", "gräddsås", "graderas", "graderats", "grälas", "grälats", "grämas", "grammisbelönats", "grändes", "granquists", "granskades", "granskas", "granskats", "gränsöverskrids", "gråtas", "gratineras", "gratinerats", "gråts", "gräts", "grattas", "gratulerades", "gratuleras", "grävas", "grävdes", "graveras", "graverats", "grävs", "gravsättas", "gravsattes", "gravsatts", "gravsätts", "grävts", "grejades", "greps", "grigorjevs", "grillas", "grillats", "grimaseras", "gripas", "gripes", "gripits", "grips", "groggys", "gröps", "gröpts", "gros", "grovhackas", "grovindelas", "grubblas", "grumlades", "grumlas", "grummes", "grundades", "grundas", "grundats", "grundförstärkas", "grundlades", "grundläggas", "grundlägges", "grundläggs", "grundlagsfästas", "grundlagts", "grundlurades", "grundlurats", "grundutbildas", "grundutbildats", "grupperades", "grupperas", "grupperats", "gruppvåldtas", "grusades", "grusas", "grusats", "guidades", "guidas", "guidats", "gullades", "gungades", "gynnades", "gynnas", "gynnats", "gyttras", "habermas", "hackades", "hackas", "hackats", "häcklades", "häcklas", "häcklats", "hades", "haemoplas", "haffades", "haffas", "hafsas", "hägnas", "hägnats", "hagsätras", "hajas", "hakades", "hakas", "hakats", "hakkas", "häktades", "häktas", "häktats", "halades", "halas", "halats", "hållas", "hällas", "hälldes", "hålles", "hälles", "hållits", "hålls", "hälls", "hållts", "hällts", "hälsades", "halsas", "hälsas", "hälsats", "halshöggs", "halshuggas", "halshuggits", "halshuggs", "hälsningstalas", "halstrades", "halstras", "halvägs", "halverades", "halveras", "halverats", "halvglas", "halvpensioneras", "hamas", "hämmades", "hämmas", "hämmats", "hamnas", "hamrades", "hamras", "hamrats", "hämtades", "hämtas", "hämtats", "hånades", "hånas", "hånats", "handelsstoppades", "handhas", "handikappades", "handikappanpassas", "handikappas", "handlades", "handläggas", "handläggs", "handlagts", "handlas", "handlats", "handlingsförlamas", "handplockades", "handplockas", "handplockats", "handskadades", "handskades", "handskas", "handskats", "handvevas", "hänföras", "hänfördes", "hänförs", "hänförts", "hängas", "hängdes", "hänges", "hängs", "hängts", "hanhals", "hanns", "hänryckas", "hanses", "hänskjutas", "hänskjutits", "hänskjuts", "hänsköts", "hånskrattas", "hanterades", "hanteras", "hanterats", "hänvisades", "hänvisas", "hänvisats", "harangerades", "harangeras", "härbärgerades", "härbärgeras", "härbärgerats", "härdades", "härdas", "härdats", "hårdbantas", "hårdbevakas", "hårddrillas", "hårdexploaterats", "hårdgranskas", "hårdlanserades", "hårdlanseras", "hårdpumpats", "härjades", "härjas", "härjats", "härledas", "härleds", "härletts", "harmades", "harmas", "harmonieras", "harmonierats", "harmoniseras", "härröras", "härrydas", "harvas", "has", "hasades", "hässjades", "hässles", "hastas", "hastats", "hatades", "hatas", "haussades", "haussas", "håvas", "hävas", "hävdades", "hävdas", "hävdats", "hävdes", "häves", "hävs", "hävts", "hedrades", "hedras", "hedrats", "hejas", "hejdades", "hejdas", "hejdats", "helas", "helgades", "helgarderas", "helgas", "helgonförklarades", "hellacopters", "hells", "helrenoverades", "helrenoverats", "helsingfors", "heltidsanställs", "helvittes", "hemfördes", "hemförlovades", "hemförlovas", "hemkallas", "hemlighållas", "hemlighållits", "hemlighålls", "hemlighölls", "hemligstämplades", "hemligstämplas", "hemligstämplats", "hemskjuts", "hemsökas", "hemsöks", "hemsöktes", "hemsökts", "hetsades", "hetsas", "hetsats", "hettades", "hettas", "hilaritas", "himbas", "himlalots", "hindrades", "hindras", "hindrats", "hinnas", "hinns", "hispaniseras", "hissades", "hissas", "hissats", "hitleriseras", "hittades", "hittas", "hittats", "hivades", "hivas", "hivinfekterades", "hjälpas", "hjälps", "hjälpsåtts", "hjälptes", "hjälpts", "hjärntvättats", "hjärtopereras", "hjärtopererats", "hoas", "höegs", "höggs", "högindustrialiseras", "högpromiskuösas", "högtalarförmedlas", "högtidlighållas", "högtidlighålls", "höjas", "höjdes", "höjs", "hojtas", "höjts", "höljas", "höljdes", "höljes", "holkades", "holkas", "holkats", "hölls", "hollywoodiserades", "homogeniserades", "homogeniseras", "honaratiores", "honkas", "honoreras", "honorerats", "hopfogades", "hoppasts", "horas", "höras", "hördes", "höres", "horisontaliseras", "hormonstimulerats", "hormontestas", "hörs", "hörsammades", "hörsammas", "hörsammats", "hortas", "hörts", "hotades", "hotas", "hotats", "hottas", "hottats", "höves", "hudflängas", "hudflängs", "hudflängts", "hudstrykas", "huggas", "huggits", "huggs", "hukandes", "humaniserades", "humaniseras", "humaniserats", "hummades", "hundradubblats", "hundratas", "hunnits", "hunsades", "hunsas", "hunsats", "hurrades", "hurras", "hutades", "hutas", "huttlas", "huttrades", "huttras", "hutus", "huvudstas", "hycklas", "hyfsats", "hygieniseras", "hyllades", "hyllas", "hyllats", "hypas", "hypats", "hyras", "hyrdes", "hyressättas", "hyrs", "hyrts", "hys", "hysas", "hystes", "hysts", "hyvlades", "hyvlas", "iaktas", "iaktatagas", "iakttagas", "iakttages", "iakttagits", "iakttas", "iakttogs", "idénförverkligades", "identifierades", "identifieras", "identifieratas", "identifierats", "ideologiserats", "idkades", "idkas", "idoliseras", "idrottas", "idrottsskadas", "idylliseras", "ifrågasättas", "ifrågasattes", "ifrågasättes", "ifrågasatts", "ifrågasätts", "ifrågsattes", "igångsättas", "igångsattes", "igångsatts", "igångsätts", "igenkännes", "igenkänns", "ignorerades", "ignoreras", "ignorerats", "ihågkommas", "ihågkommes", "ihågkommits", "ihågkoms", "iklädas", "ikläddes", "ikläds", "ikläs", "iklätts", "ilijas", "illfänas", "illuminerades", "illumineras", "illusteras", "illustrerades", "illustreras", "illustrerats", "illustrererades", "illustrereras", "imiterades", "implementeras", "imponerades", "imponeras", "imponerats", "importerades", "importeras", "importerats", "impregneras", "impregnerats", "improviserades", "improviseras", "improviserats", "impulsas", "inackorderades", "inaktiveras", "inandades", "inandandes", "inandas", "inandats", "inarbetades", "inbegripas", "inbegrips", "inberäknas", "inbesparas", "inbetalas", "inbillas", "inbjöds", "inbjudas", "inbjudes", "inbjudits", "inbjuds", "inblandades", "inblandas", "inböjds", "indefinieras", "indelades", "indelas", "indelats", "indelsas", "indentifierats", "independentfilmernas", "indikeras", "individanpassas", "individualiseras", "individualiserats", "indoktrineras", "indoktrinerats", "indragas", "indunstas", "industrialiserades", "industrialiseras", "industrialiserats", "infångades", "infångas", "infasas", "infattades", "infattas", "infekteras", "infekterats", "infiltrerades", "infiltreras", "inflammeras", "inflammerats", "inflationsskyddas", "inflikas", "influerades", "influeras", "influerats", "infogades", "infogas", "infogats", "införas", "infördes", "infordrades", "infordras", "infordrats", "införes", "införlivades", "införlivas", "införlivats", "informerades", "informeras", "informerats", "införs", "införskaffades", "införskaffas", "införskaffats", "införts", "infriades", "infrias", "infriats", "ingås", "ingåtts", "ingavs", "inges", "ingicks", "ingjutits", "ingjuts", "inhägnas", "inhägnats", "inhämtades", "inhämtas", "inhämtats", "inhandlades", "inhandlas", "inhandlats", "inhängnas", "inhiberades", "inhiberas", "inhöstats", "inhysas", "inhystes", "inhysts", "initierades", "initieras", "initierats", "injicerades", "injiceras", "injicerats", "inkallades", "inkallas", "inkallats", "inkarnerades", "inkarneras", "inkasserades", "inkluderades", "inkluderas", "inkluderats", "inkoms", "inkomstprövas", "inköpas", "inköptes", "inköpts", "inkorpererades", "inkorporerades", "inkorporeras", "inkorporerats", "inkrävas", "inkvarterades", "inkvarteras", "inkvarterats", "inlades", "inlämnades", "inlämnas", "inlämnats", "inlånades", "inläras", "inledas", "inledddes", "inleddes", "inledes", "inleds", "inlemmades", "inlemmas", "inlemmats", "inletts", "inlevereras", "inlevererats", "inlines", "inlösas", "inlöses", "inlöstes", "inmonteras", "inmundigades", "inmundigas", "innebrändes", "innefattades", "innefattas", "innehades", "innehafts", "innehållas", "innehållsdeklareras", "innehas", "inneslutas", "innesluts", "inordnades", "inordnas", "inordnats", "inplaneras", "inplanterades", "inplanteras", "inplanterats", "inpräglas", "inpräglats", "inpräntades", "inpräntas", "inpräntats", "inprogrammerats", "inräknades", "inräknas", "inräknats", "inramades", "inramas", "inramats", "inrangeras", "inrangerats", "inrapporterades", "inrapporteras", "inrapporterats", "inrättades", "inrättas", "inrättats", "inredas", "inreddes", "inreds", "inregistrerades", "inregistreras", "inregistrerats", "inretts", "inriktades", "inriktas", "inriktats", "inringas", "inristats", "inrymdes", "inrymmas", "inryms", "inrymts", "insågs", "insamlades", "insamlas", "insamlats", "insänts", "insättas", "insattes", "insatts", "inseminerades", "insemineras", "inses", "insinueras", "insinuerats", "insisteras", "inskaffades", "inskärpas", "inskärptes", "inskeppades", "inskjutas", "inskolas", "inskränkas", "inskränks", "inskränktes", "inskränkts", "inskrevs", "inskrivas", "insöndras", "insorteras", "inspärras", "inspekterades", "inspekteras", "inspekterats", "inspelats", "inspirationsgivs", "inspirerades", "inspireras", "inspirerats", "inställas", "inställdes", "installerades", "installeras", "installerats", "inställs", "inställts", "instängas", "instiftades", "instiftas", "instiftats", "institutionaliserades", "institutionaliseras", "instruerades", "instrueras", "instruerats", "instrumentaliseras", "insvepas", "insveps", "insveptes", "insvepts", "intagas", "intagits", "intalleras", "intas", "intecknades", "intecknas", "intecknats", "integrerades", "integreras", "integrerats", "intellektualiseras", "intellektualiserats", "intensifierades", "intensifieras", "intensifierats", "interfolierades", "interfolieras", "interfolierats", "internationales", "internationaliserades", "internationaliseras", "internationaliserats", "internerades", "interneras", "internerats", "internrekryterats", "internutbildas", "interpelleras", "interpunkterades", "intervjuades", "intervjuas", "intervjuats", "intevjuas", "intimiseras", "intimiserats", "intjänas", "intogs", "intressestyras", "intrigeras", "introducerades", "introduceras", "introducerats", "intvingas", "intygades", "intygas", "invaderades", "invaderas", "invaderats", "invaggades", "invaggas", "invaggats", "invaldes", "invalidiserades", "invalidiseras", "invalidiserats", "inväljas", "inväljs", "invalts", "invändas", "invandrades", "inväntades", "inväntas", "invecklas", "inventeras", "inventerats", "investerades", "investeras", "investerats", "invigas", "invigdes", "invigs", "inviskas", "inviteras", "inviterats", "invlades", "involverades", "involveras", "involverats", "inympas", "inympats", "iordningsställts", "iordningställas", "iordningställdes", "iordningställs", "iordningställts", "irriterades", "irriteras", "irriterats", "isades", "isas", "iscensättas", "iscensattes", "iscensatts", "iscensätts", "isolerades", "isoleras", "isolerats", "iståndsätts", "ives", "jagades", "jagas", "jagats", "jäktas", "jamas", "jämföras", "jämfördes", "jämförs", "jämförts", "jämkades", "jämkas", "jämnades", "jämnas", "jämnats", "jämnsides", "jämnställs", "jämställas", "jämställdes", "jämställes", "jämställs", "jämställts", "järfällas", "järnberikats", "järnvägsgods", "järvas", "jäs", "jäses", "jävas", "jävats", "jävlas", "jävlats", "jayhawkes", "jenufas", "jesses", "jippofieras", "jobbades", "jobbas", "jobbats", "jonglerades", "jonhälls", "joniseras", "joniserats", "jordbegravas", "jordfästas", "jordfästes", "jordgas", "journalföras", "journalistbas", "jublades", "jublas", "jublats", "juckas", "julas", "justerades", "justeras", "justerats", "kabilas", "kablades", "kablas", "kablats", "kacklades", "kåges", "käkopererats", "kalätas", "kalfatras", "kalhöggs", "kalkades", "kalkas", "kalkats", "kalkylerades", "kalkyleras", "kalkylerats", "kallades", "kallas", "kallats", "kallistenes", "kallpressas", "kallrökas", "kallrökts", "källsorteras", "kallsvettades", "kallsvettas", "kambodjas", "kammades", "kammas", "kammats", "kamouflagemålats", "kamoufleras", "kämpas", "kanaliserades", "kanaliseras", "kanaliserats", "kånkades", "kånkas", "kånkats", "känndes", "kännetecknades", "kännetecknas", "kännetecknats", "kännts", "kanoniserades", "kanoniseras", "käns", "kantades", "kantas", "kantats", "kantfållas", "kantställas", "kapades", "kapas", "kapats", "kapitaliseras", "kappades", "kappseglas", "kapslades", "kapslas", "kapslats", "karaktäriserades", "karaktäriseras", "karaktäriserats", "karakteriserades", "karakteriseras", "karakteriserats", "karikeras", "kärnades", "kärnats", "kartlades", "kartläggas", "kartläggs", "kartlagts", "karvas", "kasserades", "kasseras", "kasserats", "kastades", "kastas", "kastats", "kastreras", "kastrerats", "katalas", "katalogiseras", "katalogiserats", "kategoriseras", "kategoriserats", "kattas", "kavlades", "kavlas", "keats", "kedjades", "kedjats", "keldereks", "kemtvättas", "keynes", "kickades", "kickats", "kidnappades", "kidnappas", "kidnappats", "kikås", "kilades", "kilas", "killas", "kindpussas", "kinshasas", "kissas", "kittades", "kittlades", "kittlas", "klaas", "kläckas", "kläckningsplats", "kläcks", "kläcktes", "kläckts", "klädas", "kladdades", "kladdas", "kladdats", "kläddes", "kläds", "klagades", "klagas", "klagats", "klämdes", "klämmas", "kläms", "klämtas", "klämts", "klandrades", "klandras", "klandrats", "klankas", "klappades", "klappas", "klarades", "klaras", "klarats", "klargjordes", "klargjorts", "klargöras", "klargörs", "klarlades", "klarläggas", "klarläggs", "klarlagts", "kläs", "klassades", "klassas", "klassats", "klassificerades", "klassificeras", "klassificerats", "klättrades", "klättras", "klätts", "klemas", "kletas", "kletats", "klias", "klickas", "klimpades", "klippas", "klipps", "klipptes", "klippts", "klipsades", "klistrades", "klistras", "klistrats", "klockades", "klockas", "klockats", "klonas", "klonats", "kloreras", "klorgas", "klös", "klösts", "klottras", "klottrats", "klövs", "klubbades", "klubbas", "klubbats", "klubbhus", "kluddats", "klumpades", "klumpas", "kluvits", "klyftas", "klyvas", "klyvs", "klyvts", "knackades", "knäckas", "knackats", "knäcks", "knäcktes", "knäckts", "knådas", "knådats", "knallas", "knäopereras", "knåpades", "knåpas", "knäppas", "knäpps", "knäpptes", "knarkas", "knas", "knäsattes", "knäsatts", "kneps", "knipas", "knips", "knivdödades", "knivdödas", "knivhöggs", "knivhotas", "knivhuggits", "knivhuggs", "knivmördades", "knivskars", "knivskärs", "knockades", "knockas", "knockats", "knölades", "knopas", "knorrades", "knorras", "knöts", "knottrades", "knuckles", "knuffades", "knuffas", "knuffats", "knusslades", "knutits", "knycklas", "knycktes", "knypplats", "knystas", "knytas", "knyts", "köas", "kodas", "kodats", "kodifieras", "kodifierats", "kokades", "kokas", "kokats", "kolgrillas", "kollades", "kollas", "kollats", "kollektivansluts", "kolles", "kolonialiseras", "koloniserades", "koloniseras", "koloniserats", "koloreras", "kombinerades", "kombineras", "kombinerats", "kommenderades", "kommenderas", "kommenderats", "kommenterades", "kommenteras", "kommenterats", "kommersialiseras", "kommersialiserats", "kommits", "kommunaliserades", "kommunaliseras", "kommuniceras", "kommunplacerades", "kompades", "kompas", "kompenserades", "kompenseras", "kompenserats", "kompetensutvecklas", "komplettaras", "kompletterades", "kompletteras", "kompletterats", "komplicerades", "kompliceras", "komplicerats", "komponerades", "komponeras", "komponerats", "komposterades", "komposteras", "komposterats", "komprimeras", "komprimissas", "komprometterats", "kompromissas", "kompromissats", "könas", "koncenteras", "koncenterats", "koncentreades", "koncentrerades", "koncentreras", "koncentrerats", "koncipierades", "koncipieras", "koncipierats", "kondenserades", "kondenseras", "konditionstestas", "konfektioneras", "konfirmerades", "konfirmeras", "konfirmerats", "konfiskerades", "konfiskeras", "konfiskerats", "konfronterades", "konfronteras", "konfronterats", "kongeliges", "konkretiserades", "konkretiseras", "konkretiserats", "konkurrensutsättas", "konkurrensutsattes", "konkurrensutsatts", "konkurrerades", "konkurreras", "konkurrerats", "konserverades", "konserveras", "konserverats", "könskvoteras", "könskvoterats", "konsoliderades", "konsolideras", "konsoliderats", "konspirerades", "konstaterades", "konstateras", "konstaterats", "konstgods", "konstigtueras", "konstituerades", "konstitueras", "konstmanifesteras", "konstruerades", "konstrueras", "konstruerats", "konsulterades", "konsulteras", "konsulterats", "konsumerades", "konsumeras", "konsumerats", "kontaktades", "kontaktas", "kontaktats", "konterfejas", "kontinentaliserats", "kontollerats", "kontrakteras", "kontrakterats", "kontras", "kontrasterades", "kontrasteras", "kontrollerades", "kontrolleras", "kontrollerats", "kontrollvägdes", "kontrollvägts", "konverteras", "koordinerades", "koordineras", "köpas", "kopierades", "kopieras", "kopierats", "köplats", "kopplades", "kopplas", "kopplats", "köprekommenderades", "köps", "köptes", "köpts", "kopuleras", "korades", "koras", "köras", "korats", "kördes", "koreograferats", "köres", "korkades", "korkas", "korngolds", "korporativiserats", "korrekturläses", "korreleras", "korrigerades", "korrigeras", "korrigerats", "korrumperas", "korrumperats", "körs", "korsades", "korsas", "korsats", "korsfästas", "korsfästes", "korsfästs", "kortades", "kortas", "kortats", "körts", "kortslöts", "kortsluts", "korvas", "kosroes", "kostas", "kostaterades", "kostnadsberäknades", "kostnadsberäknas", "kostnadsberäknats", "kostnadsföras", "kotrollvägdes", "kovacs", "krackeleras", "kramades", "kramas", "kramats", "kramkalas", "krängdes", "krånglats", "krängts", "kränkas", "kränks", "kränktes", "kränkts", "kransats", "krattas", "krävas", "krävdes", "kräves", "krävs", "krävts", "kreerades", "kremerades", "kremeras", "kretsloppsanpassas", "krigsplaceras", "kriminaliserades", "kriminaliseras", "kringgärdades", "kringgärdas", "kringgås", "kringgåtts", "kringgicks", "kringgjutits", "kringränts", "kringskäras", "kringskars", "kringvärvs", "kristalliserades", "kristalliseras", "kristnades", "kritas", "kritiserades", "kritiseras", "kritiserats", "krockades", "krockprovas", "krokades", "krökas", "krokats", "kröks", "kröktes", "krönas", "krönes", "kröns", "kröntes", "krönts", "kroppsvisiterades", "kroppsvisiteras", "krossades", "krossas", "krossats", "krusades", "krusas", "kryddades", "kryddas", "kryddats", "krympas", "krymps", "krymptes", "krympts", "krypteras", "krypterats", "krypts", "kryssas", "kryssats", "kryssgarderas", "kubbas", "kuggades", "kuggas", "kullas", "kullkastas", "kultiveras", "kultiverats", "kulturminnesmärkas", "kulturminnesskyddats", "kulturprofileras", "kulverteras", "kulverterats", "kumquats", "kundanpassas", "kundbas", "kundes", "kungjordes", "kungjorts", "kungörs", "kunnas", "kupades", "kuperas", "kuppats", "kureras", "kursas", "kursras", "kuvas", "kuvats", "kvackas", "kvaddades", "kvaddats", "kvalificeras", "kvalitetsäkras", "kvalitetsprövats", "kvalitetssäkras", "kvalitetssäkrats", "kvalitetsutbildats", "kväljdes", "kvällades", "kvalplats", "kvantifieras", "kvarhållas", "kvarhållits", "kvarhålls", "kvarhölls", "kväsas", "kvästes", "kvävas", "kvävdes", "kvävs", "kvinnoplats", "kvittas", "kvittats", "kvitterades", "kvitteras", "kvotbelades", "kvoteras", "kvoterats", "kylas", "kyldes", "kyls", "kylts", "kyssas", "kysstes", "laborades", "laboreras", "lackeras", "lackerats", "läcks", "läckts", "laddades", "laddas", "laddats", "lades", "lafis", "lagades", "lagas", "lagats", "lagerhållas", "lagfästes", "lagfästs", "lagföras", "lagfördes", "läggas", "lägges", "lägggas", "läggs", "lagrades", "lagrådsremitteras", "lagras", "lagrats", "lagregleras", "lagstadgades", "lagstiftas", "lagtrots", "lågtrycksgjuts", "lagts", "läkarundersökas", "läkarundersöktes", "lakas", "läkas", "lakats", "läks", "läktes", "läktrats", "läkts", "lambrecks", "lamineras", "lämnades", "lämnas", "lämnats", "lämpades", "lämpas", "lämpats", "lamslagits", "lamslås", "lamslogs", "lånades", "lånas", "lånats", "lanceras", "landades", "landsattes", "landsatts", "landsförvisades", "landsförvisas", "landsförvisats", "lånefinansieras", "langades", "langas", "långås", "långsits", "långtidslagras", "långtidsparkerades", "långtidsskolats", "längts", "languages", "länkades", "länkas", "länkats", "länsades", "länsas", "länsats", "lanserades", "lanseras", "lanserats", "lansertas", "länspumpas", "lapas", "lappades", "lappas", "lappats", "läras", "lärdes", "larmades", "larmas", "larmats", "lärs", "larses", "lårskadades", "lärts", "las", "lås", "läs", "låsas", "läsas", "laserats", "låses", "läses", "lassades", "lassas", "låssas", "lassats", "låssats", "lastades", "lastas", "lastats", "låstes", "lästes", "låsts", "lästs", "låtits", "lättades", "lättas", "lättats", "läxats", "leasades", "leasas", "leasats", "ledas", "leddes", "ledes", "ledigförklarades", "ledigförklaras", "ledigförklarats", "leds", "ledsagades", "ledsagas", "legalförskrevs", "legaliserades", "legaliseras", "legaliserats", "legeras", "legitimerades", "legitimeras", "legitimerats", "lekas", "leks", "lektes", "lemlästades", "lemlästas", "lemlästats", "lemströms", "lenas", "letades", "letas", "letats", "letts", "levandegörs", "levas", "levdes", "leverades", "leveraras", "levererades", "levereras", "levererats", "levertransplanteras", "leves", "levs", "levts", "lfinns", "liberaliseras", "liberaliserats", "licensbryggs", "licenserats", "licenstillverkats", "lidas", "lidits", "likformas", "liknades", "liknas", "liknats", "likställas", "likställdes", "likställs", "likviderades", "likvideras", "limmades", "limmas", "limmats", "lindades", "lindas", "lindats", "lindrades", "lindras", "lindrats", "linjeras", "linoljebränns", "lipas", "lirades", "liras", "lirkas", "lirkats", "listades", "listas", "listats", "livades", "livas", "lives", "livnärs", "livstidsförlängdes", "ljögs", "ljudas", "ljudisoleras", "ljugas", "ljugs", "ljummades", "ljummas", "ljumskskadades", "ljussatts", "lockades", "lockas", "lockats", "lockoutas", "lodas", "lödas", "löds", "loggas", "logothetis", "logrones", "lokaliserades", "lokaliseras", "lokaliserats", "lomas", "lönades", "lönas", "lönediskrimineras", "lönediskriminerats", "löneras", "lönesättas", "longeras", "lönnbrännes", "loopas", "loopats", "loosegoats", "löpas", "löps", "lösas", "löses", "lösgivas", "lösgjordes", "lösgjorts", "lösgöras", "lösgöres", "lösgörs", "lossades", "lossas", "lossats", "löstes", "lösts", "lotsades", "lotsas", "lotsats", "lottades", "lottas", "lottats", "lovades", "lövades", "lovas", "lövas", "lovats", "lövats", "lovordades", "lovordas", "lovordats", "lovprisades", "lovprisas", "lovsjungits", "lovsjungs", "luckrades", "luckras", "luckrats", "luftades", "luftas", "luftats", "luftlandsattes", "lugnades", "lugnas", "lukkes", "lurades", "luras", "lurats", "lusläses", "luslästes", "lussas", "lutades", "lutas", "luttras", "luttrats", "lyckes", "lyckets", "lyckönskas", "lycksönskades", "lycktas", "lydas", "lyddes", "lyftas", "lyftes", "lyfts", "lynchades", "lynchats", "lys", "lysas", "lyses", "lyss", "lyssnas", "lystes", "lysts", "lyxrenoveras", "lyxsanerades", "lyxsaneras", "lyxsanerats", "macoutes", "måddes", "mades", "magallanes", "magasinerades", "magasineras", "magasinerats", "magpumpas", "magpumpats", "magras", "majos", "mäklades", "makulerades", "makuleras", "målades", "malas", "målas", "målats", "malbas", "målbestäms", "maldes", "mals", "malts", "mammograferats", "manades", "manas", "månas", "manats", "mångdubblades", "mångdubblas", "mångdubblats", "mångfaldigades", "mångfaldigas", "mångfaldigats", "manglades", "manglas", "manglats", "månglats", "manifesterades", "manifesteras", "manifesterats", "manipulerades", "manipuleras", "manipulerats", "manövrerades", "manövreras", "manövrerats", "mantalskrivas", "mantalsskrivas", "marantas", "marginaliserades", "marginaliseras", "marginaliserats", "marineras", "marinerats", "märkas", "markerades", "markeras", "markerats", "märkes", "markets", "markledes", "marknadsanpassas", "marknadsföras", "marknadsfördes", "marknadsförs", "marknadsförts", "marknadsintroducerades", "märks", "märktes", "märkts", "markurells", "marples", "marterades", "martikas", "mås", "maskas", "maskerades", "maskeras", "maskerats", "maskintvättas", "maskinveks", "massakrerades", "massakreras", "mässas", "masserades", "masseras", "massproduceras", "masstillverkas", "mastas", "mästras", "matades", "matas", "mätas", "matats", "matchades", "matchas", "matchats", "matchinsats", "materialiserades", "materialiseras", "materialiserats", "mätes", "matplats", "mäts", "mattades", "mattas", "måttas", "mättas", "mattats", "mättats", "mättes", "mätts", "matutes", "maximeras", "medagerandes", "medaljeras", "medaljhyllades", "meddelades", "meddelas", "meddelats", "medfinansieras", "medföras", "medfördes", "medföres", "medförs", "medgavs", "medges", "medgivits", "medhavas", "medialiserats", "medicineras", "medicinerats", "medikaliserades", "medlas", "medräknas", "medtagas", "medtages", "medtas", "medtogs", "medvetandegöras", "mefistofeles", "mejades", "mejas", "mejats", "mejslades", "mekaniserats", "memoreras", "menades", "menas", "mennas", "meritvärderas", "mestadelas", "metroiseras", "midas", "mikrats", "mikrofilmades", "mikrofilmas", "mildrades", "mildras", "mildrats", "miles", "militariserades", "militariseras", "militariserats", "miljöanpassas", "miljöcertifierats", "miljödeklareras", "miljögranskats", "miljöklassas", "miljömärkas", "miljömärkts", "miljöprövas", "miljöskyddas", "mills", "mimades", "mimas", "mineraliseras", "mineras", "minerats", "minglats", "minimerades", "minimeras", "minimerats", "minnns", "minskades", "minskas", "minskats", "minsprängdes", "minutes", "misbruges", "missades", "missas", "missats", "missbrukades", "missbrukas", "missbrukats", "missfärgas", "missförstås", "missförståtts", "missförstods", "missgynnades", "missgynnas", "missgynnats", "misshandlades", "misshandlas", "misshandlats", "misshushållas", "missköts", "misskötts", "misskrediterades", "missledas", "missletts", "misssgynnas", "misssköts", "misstänkas", "misstänkliggjordes", "misstänkliggöras", "misstänkliggörs", "misstänks", "misstänktes", "misstänkts", "misstas", "misstolkas", "misstolkats", "misstroddes", "misstros", "misstydas", "missunnnas", "missupfattas", "missuppattades", "missuppfattades", "missuppfattas", "missuppfattats", "mixas", "mjölkades", "mjölkas", "mjukades", "mjukas", "mjukats", "mjukpressats", "mobbades", "mobbas", "mobbats", "mobiliserades", "mobiliseras", "mobiliserats", "möblerades", "möbleras", "möblerats", "mockades", "modeinitierades", "moderninserats", "moderniserades", "moderniseras", "moderniserats", "modifierades", "modifieras", "modifierats", "mognadslagras", "mogulrikets", "möjas", "möjliggjordes", "möjliggjorts", "möjliggöras", "möjliggörs", "möjligjorts", "momsbefrias", "momsbeläggas", "momsbeläggs", "momsbelagts", "mondes", "monkees", "monograferats", "monopoliseras", "monopoliserats", "monsterras", "mönsterskyddats", "mönstrades", "mönstras", "mönstrats", "monterades", "monteras", "monterats", "monumentaliseras", "moraliseras", "mörbultats", "mördades", "mördas", "mördats", "mordhotades", "mordhotats", "mörkas", "mörklades", "mörkläggas", "mörkläggs", "mörklagts", "morrades", "morras", "mortuis", "mosades", "mosas", "motades", "motarbetades", "motarbetas", "motarbetats", "motas", "motats", "motbevisas", "motionerades", "motioneras", "motiverades", "motiveras", "motiverats", "motoriseras", "motsades", "motsägas", "motsäges", "motsägs", "motsagts", "motstås", "motsvarades", "motsvaras", "motsvarats", "mottagas", "mottages", "mottagits", "mottas", "mottogs", "motverkades", "motverkas", "motverkats", "muddras", "multipliceras", "mulugetas", "mumifieras", "mumifierats", "mumlades", "mumlas", "mumlats", "mungnabbas", "munhöggs", "munhuggas", "munhuggs", "murades", "muras", "murats", "musicerades", "musiceras", "mutades", "mutas", "mutats", "muttrades", "muttras", "muttrats", "mutts", "muzungos", "myers", "myglades", "myndigförklaras", "myndighetsförklarats", "myntades", "myntas", "myntats", "mysas", "mystifieras", "mystifierats", "mytifieras", "nackas", "nádas", "nåddes", "nådes", "nafsades", "nagelfaras", "nagelfarits", "nagelfars", "nagelfors", "naggades", "naggas", "naggats", "naglades", "naglas", "nålas", "nålats", "namnades", "nämnas", "nämndes", "nämnes", "namngavs", "namnges", "namngetts", "namngivits", "nämns", "namnskyddas", "nämnts", "näms", "nämts", "nändes", "nännas", "nänns", "näns", "nänts", "näpsas", "näras", "närdes", "näres", "närmas", "narracotts", "narrades", "narras", "narrats", "närs", "närts", "nas", "nås", "nasas", "nästas", "nationaliserades", "nationaliseras", "nationaliserats", "natoanpassas", "natofieras", "nattas", "nåtts", "nattstädas", "nattstängs", "naturaliseras", "naturligtivs", "navotas", "nedbringas", "nedbringats", "nedbrytas", "nedflyttningsplats", "nedgjordes", "nedgraderas", "nedkämpas", "nedkämpats", "nedlades", "nedläggas", "nedlagts", "nedmonterades", "nedmonteras", "nedrangeras", "nedreviderades", "nedreviderats", "nedrustas", "nedsättas", "nedsätts", "nedsköljes", "nedskrivas", "nedslås", "nedtecknades", "nedtecknats", "nedtynges", "nedtystas", "nedvärderas", "nedvärderats", "negeras", "negligeras", "negligerats", "nekades", "nekas", "nekats", "nerslås", "nettoamorteras", "nettoexporterades", "nettoköptes", "nettoköpts", "nettosåldes", "nettosålts", "neurosedynskadades", "neutraliserades", "neutraliseras", "neutraliserats", "nickades", "nickas", "nitas", "nivågrupperas", "njutas", "njutes", "njuts", "nobbades", "nobbas", "nobbats", "nobelprisförbigåtts", "nödbromsas", "nödgades", "nödgats", "nödsakats", "nödslaktades", "nödslaktas", "nödslaktats", "nödstoppades", "nödvändiggjordes", "nollades", "nollställas", "nollställs", "nollställts", "nolltaxeras", "nominerades", "nomineras", "nominerats", "noms", "nonchalerades", "nonchaleras", "nonchalerats", "nordstedts", "normalförklaras", "normaliserades", "normaliseras", "normaliserats", "nös", "nötas", "noterades", "noteras", "noterats", "noteringsstoppades", "nöts", "nöttes", "nötts", "nuddas", "numererats", "numreras", "numrerats", "nuvärdeberäknas", "nuvärdeberäknats", "nuvärdesberäknas", "nyanlagts", "nyanmäldes", "nyanserades", "nyanseras", "nyanserats", "nyanställas", "nyanställdes", "nyanställs", "nyanställts", "nybeställas", "nybyggas", "nydanades", "nyemitteras", "nyetableras", "nygestaltades", "nyindustrialiseras", "nyinvandrades", "nyinvigts", "nykryddats", "nynnades", "nynnas", "nyordnas", "nyorienteras", "nyöversattes", "nyöversatts", "nyplanterades", "nyprövas", "nyps", "nyrekryteras", "nyritades", "nyskapas", "nystades", "nystas", "nystats", "nytillverkas", "nytolkas", "nytrycktes", "nyttjades", "nyttjas", "nyttjats", "nyutexamineras", "nyutgavs", "nyvaldes", "nyväljs", "oakes", "oates", "obducerades", "obduceras", "obducerats", "obligationsras", "obs", "observerades", "observeras", "observerats", "ocksåses", "ocksåstärkts", "ocksåtas", "ockuperades", "ockuperas", "ockuperats", "ödas", "ödelades", "ödeläggas", "ödeläggs", "ödelagts", "odlades", "odlas", "odlats", "odödligförklarats", "odödliggjordes", "ödslas", "ödslats", "odugligförklarats", "odyssevs", "offentliggjordes", "offentliggjorts", "offentliggöras", "offentliggörs", "offereras", "offererats", "offetliggjordes", "offrades", "offras", "offrats", "ofredas", "ogilitigförklaras", "ogillades", "ogillas", "ogillats", "ogiltigförklarades", "ogiltigförklaras", "ogiltigförklarats", "öis", "ojades", "ojas", "ökades", "ökas", "ökats", "olagligförklaras", "olagligförklarats", "olas", "olåtandes", "oliktänkades", "oljas", "oljats", "olövanes", "olyckas", "olycksfallsförsäkras", "omarbetades", "omarbetas", "omarbetats", "ombads", "ombedas", "ombedes", "ombeds", "ombes", "ombesörjas", "ombesörjdes", "ombesörjs", "ombesörjts", "ombetts", "ombildades", "ombildas", "ombildats", "omdanades", "omdanas", "omdanats", "omdaterats", "omdefinieras", "omdirigerades", "omdirigeras", "omdirigerats", "omdisponeras", "omdöpas", "omdöps", "omfamnades", "omfamnas", "omfatas", "omfattades", "omfattas", "omfattats", "omfatttas", "omflytes", "omfördelades", "omfördelas", "omfördelats", "omförhandlades", "omförhandlas", "omförhandlats", "omformades", "omformas", "omformulerades", "omformuleras", "omgärdades", "omgärdas", "omgärdats", "omgavs", "omges", "omgestaltades", "omgestaltas", "omgestaltats", "omgetts", "omgivits", "omgrupperas", "omhäktades", "omhändertagas", "omhändertagits", "omhändertas", "omhändertogs", "omhuldades", "omhuldas", "omhuldats", "omintetgjordes", "omintetgjorts", "omintetgöras", "omintetgörs", "omisoleras", "ömkas", "omlokaliseras", "ommöbleras", "omnamnades", "omnämnas", "omnämndes", "omnämns", "omnämnts", "omöjliggjordes", "omöjliggjorts", "omöjliggöras", "omöjliggöres", "omöjliggörs", "omorganiserades", "omorganiseras", "omorganiserats", "omorienteras", "omplacerades", "omplaceras", "omplacerats", "omplanteras", "omprioriteras", "omprogrammeras", "omprövades", "omprövas", "omräknas", "omramades", "omregistreras", "omringades", "omringas", "omritades", "omröres", "omsättas", "omsattes", "omsatts", "omsätts", "omskapades", "omskapas", "omskäras", "omskolas", "omskolats", "omskrivas", "omskrivits", "omskrivs", "omslingrades", "omslöts", "omslutas", "omslutes", "omsluts", "omställas", "omstöpas", "omstöps", "omstöpts", "omstrukturerades", "omstruktureras", "omstrukturerats", "omsusas", "omsvärmades", "omsvärmas", "omtalades", "omtalas", "omtalats", "omtöcknas", "omtolkas", "omvaldes", "omväljas", "omväljs", "omvalts", "omvändas", "omvändes", "omvandlades", "omvandlas", "omvandlats", "omvänds", "omvänts", "omvärderades", "omvärderas", "omvärderats", "omvittnades", "omvittnas", "omvittnats", "omyndigförklaras", "omyndigförklarats", "onderwijs", "onödiggöras", "önskades", "önskas", "operades", "opererades", "opereras", "opererats", "öppnades", "öppnas", "öppnats", "optimeras", "ordas", "ordats", "ordinerades", "ordineras", "ordinerats", "ordnades", "ordnas", "ordnats", "oreras", "orerats", "organiserades", "organiseras", "organiserats", "orienteras", "orienterats", "oroades", "oroas", "oroats", "öronklippas", "öronmärkas", "öronmärks", "öronmärktes", "öronmärkts", "örontisslas", "orsakades", "orsakas", "orsakats", "orsaksförklaras", "ortelgas", "ös", "osäkras", "ösas", "oscarnominerades", "oskadliggjordes", "oskadliggöras", "oskadliggörs", "oskarsnominerats", "östbergas", "östes", "ostgratinerats", "östrogenbehandlas", "östs", "osynliggjorts", "osynliggöras", "osynliggörs", "övades", "övas", "övats", "öveföres", "överanvänds", "överarbetas", "överås", "överbefolkas", "överbejakas", "överbelastades", "överbelastas", "överbeskattas", "överbetonades", "överbetonats", "överbevisades", "överbevisas", "överbevisats", "överblickas", "överbryggas", "överdäckas", "överdebiterats", "överdimensionerats", "överdoseras", "överdramatiseras", "överdrevs", "överdrivas", "överdrivits", "överdrivs", "överdrogs", "överenskommits", "överenskoms", "överexponeras", "överexponerats", "överfallas", "överfallits", "överfalls", "överflödades", "överflyglades", "överflyglas", "överflyttades", "överflyttas", "överfölls", "överföras", "överfördes", "överförs", "överförts", "överfyllas", "övergavs", "överges", "övergetts", "övergivas", "övergivits", "överglänses", "överglänstes", "övergöts", "överhettades", "överhettas", "överinskrivas", "överklagades", "överklagas", "överklagats", "överklistras", "överkompenseras", "överlagras", "överlämnades", "överlämnas", "överlämnats", "överlappas", "överlåtas", "överlåtits", "överlåts", "överläts", "överlevas", "överlistas", "övermannades", "övermannas", "övermannats", "övermättas", "överordnas", "överös", "överösas", "överöses", "överöstes", "överösts", "överprocuderas", "överprövas", "överprövats", "överpudras", "överräcks", "överräcktes", "överraskades", "överraskas", "överraskats", "överröstades", "överröstas", "överrumplades", "överrumplas", "överrumplats", "översändas", "översändes", "översänts", "översättas", "översattes", "översatts", "översätts", "överskattades", "överskattas", "överskattats", "översköljas", "översköljs", "översköljts", "överskreds", "överskridas", "överskridits", "överskrids", "överskuggades", "överskuggas", "överskuggats", "överspolas", "överstigas", "överstigs", "överstimuleras", "översvämmades", "översvämmas", "översvämmats", "övertäckas", "övertäcks", "övertäcktes", "övertages", "övertagits", "övertalades", "övertalas", "övertalats", "övertas", "övertecknades", "övertecknas", "övertecknats", "övertogs", "övertolkas", "övertolkats", "överträdas", "överträdes", "överträffades", "överträffas", "överträffats", "övertrasserades", "övertrasseras", "övertrumfas", "övertygades", "övertygas", "övertygats", "överutnyttjades", "överutnyttjas", "övervägas", "övervägdes", "övervägs", "övervägts", "övervakades", "övervakas", "övervakats", "överväldigades", "överväldigas", "överväldigats", "övervältras", "övervämmas", "övervärderas", "övervärderats", "övervinnas", "övervinns", "övervintras", "övervunnits", "oxideras", "påannonserades", "påannonseras", "påbjöds", "påbjudes", "påbjudits", "påbjuds", "påbörjades", "påbörjas", "påbörjats", "pacificeras", "packades", "packas", "packats", "pådyvlades", "pådyvlas", "påfodras", "påföras", "påförs", "påförts", "påfrestas", "påhejas", "påkallas", "påkallats", "paketeras", "paketerats", "påkördes", "påläggas", "påläggs", "pålagts", "pålas", "pålats", "pallas", "pallats", "palmas", "påmindes", "påminnas", "påminns", "påmints", "paneras", "pangas", "pantas", "pantsattes", "pånyttfödas", "påområdes", "påpekades", "påpekas", "påpekats", "påprackas", "parades", "paraferades", "påräknas", "parallellkopplades", "parallellkopplas", "paralyseras", "paralyserats", "paras", "parats", "pareras", "parkerades", "parkeras", "parkerats", "parodieras", "parras", "parsas", "påskrivs", "påskyndades", "påskyndas", "påskyndats", "passades", "passas", "passats", "passerades", "passeras", "passerats", "passglas", "passiviseras", "påstås", "påståtts", "pasteuriserades", "pastischeras", "påstods", "pastöriseras", "pastöriserats", "påtalades", "påtalas", "påtalats", "patentbeläggs", "patenteras", "patenterats", "påträffades", "påträffas", "påträffats", "patrokles", "patrullerades", "patrulleras", "patrullerats", "pats", "påtvingades", "påtvingas", "påtvingats", "påverkades", "påverkanmotarbetades", "påverkas", "påverkats", "påvisades", "påvisas", "påvisats", "payrolls", "pejlas", "pekades", "pekas", "pekats", "pelleas", "pendlades", "penetrerades", "penetreras", "penetrerats", "pensionerades", "pensioneras", "pensionerats", "penslas", "peppades", "peppas", "peppras", "peps", "perforerades", "perforeras", "permanentades", "permanentas", "permanentats", "permitteras", "permitterats", "perriéres", "persenteras", "personalförsörjs", "personifierades", "personifieras", "personkontrolleras", "personröstas", "perverteras", "pessoas", "pestas", "pestsmittades", "petades", "petas", "petats", "pharmacias", "philos", "piffades", "piffas", "piggats", "pihelgas", "pilats", "pillas", "pillras", "pinades", "pinas", "pinats", "pints", "pips", "piskades", "piskas", "piskats", "pizzasås", "pjoskades", "placerades", "placeras", "placerats", "pladdrats", "plågades", "plågas", "plågats", "plagieras", "plagierats", "plånades", "planas", "plånas", "planats", "plånats", "planerades", "planeras", "planerats", "plankades", "plankas", "planlades", "planläggs", "planlagts", "planterades", "planteras", "planterats", "plastades", "plastas", "plåstras", "plåstrats", "plåtas", "platsbyggdes", "plattades", "plattats", "plockades", "plockas", "plockats", "plogades", "plogas", "plogats", "plöjas", "plöjdes", "plöjs", "plöjts", "plomberades", "plomberas", "plomberats", "plottats", "plottras", "plottrats", "pluggas", "plundrades", "plundras", "plundrats", "plussades", "plussas", "plussats", "plutades", "poängbedöms", "poängsättas", "poängsattes", "poängsatts", "poängsätts", "poängterades", "poängteras", "poängterats", "poängvärderas", "pocahontas", "pocheras", "pockas", "pokuleras", "polariserades", "polariseras", "polariserats", "polerades", "poleras", "polerats", "polinas", "polisanmälas", "polisanmäldes", "polisanmäls", "polisanmälts", "politiserades", "politiseras", "politiserats", "polydamas", "polymeras", "poneras", "populariserats", "portades", "portas", "portförbjudas", "portförbjudits", "portionerades", "portioneras", "porträtteras", "porträtterats", "porträttrades", "portugaliseras", "positioneras", "postades", "postas", "postats", "posterades", "poststämplades", "postuleras", "prackats", "präglades", "präglas", "präglats", "praktiserades", "praktiseras", "praktiserats", "prånglades", "prånglats", "präntades", "präntas", "prasslas", "prästvigas", "prästvigdes", "prästvigs", "prästvigts", "pratades", "pratas", "pratats", "preciserades", "preciseras", "preciserats", "precisionsstyras", "predestineras", "predikades", "predikas", "predikats", "prefabriceras", "prejas", "premiärprövades", "premiärsändes", "premiäruppförs", "premiärutdelas", "premiärvisades", "premiärvisas", "premiärvisats", "premierades", "premieras", "premierats", "prepareras", "preparerats", "presenterades", "presenteras", "presenterats", "presenteres", "preskriberas", "preskriberats", "pressades", "pressas", "pressats", "prestenteras", "presterades", "presteras", "presterats", "prices", "prickades", "prickas", "prickats", "pricktestades", "primärnoterats", "printas", "prioriterades", "prioriteras", "prioriterats", "pripps", "prisades", "prisas", "prisats", "prisbelönades", "prisbelönas", "prisbelönats", "prissättas", "prissätts", "privatimporterades", "privatimporterats", "privatiserades", "privatiseras", "privatiserats", "problematiseras", "problematiserats", "proceedings", "processas", "processats", "prodotes", "producerades", "produceras", "producerats", "profaneras", "professionaliserades", "professionaliseras", "profeterats", "proffsförklarades", "profilerades", "profileras", "prognosticerades", "prognostiseras", "programmerades", "programmeras", "projekterades", "projekteras", "projicerades", "projiceras", "projicerats", "pröjts", "proklamerades", "proklameras", "proklamerats", "proletariseras", "prolongerades", "prolongeras", "promenerades", "promeneras", "promoverades", "promoveras", "promoverats", "propagerades", "propageras", "propangas", "proportioneras", "proppades", "proppas", "prosperas", "prostituerades", "protokollfördes", "provades", "prövades", "provas", "prövas", "provats", "prövats", "provbyggs", "provflugits", "provfotograferas", "provköras", "provkördes", "provkörs", "provmålats", "provmäts", "provocerades", "provoceras", "provocerats", "provsås", "provsittas", "provsmakades", "provsmakas", "provtagas", "prsenterats", "prutades", "prutas", "prutats", "pryddes", "pryds", "pryglas", "prytts", "pseudomonas", "publicerades", "publiceras", "publicerats", "publiserades", "pudrats", "puffas", "pulvriserades", "pulvriserats", "pumpades", "pumpas", "pumpats", "pundits", "punktades", "punkterades", "punkteras", "punkterats", "punktmarkerats", "purprades", "pussades", "pussas", "pussats", "pusslades", "pusslas", "pustas", "putsades", "putsas", "putsats", "puttades", "puttas", "puttats", "puttrades", "pyntas", "pyntats", "pysslades", "pysslas", "pytsas", "pytsats", "rabatteras", "rabblas", "räckes", "räcktes", "räckts", "radades", "radas", "rådas", "radats", "räddades", "räddas", "räddats", "råddes", "raderades", "raderas", "raderats", "rädes", "rådfrågats", "radiaksmittades", "radikaliserades", "radikaliseras", "radikaliserats", "radonsanerats", "råds", "raffineras", "raffinerats", "rafsas", "raggades", "raggats", "raggefanns", "rakades", "rakas", "rakats", "råknas", "raljerades", "raljeras", "ramades", "ramas", "ramats", "rammades", "rammas", "rånades", "rånas", "rånats", "rändes", "rangeras", "rangordnades", "rangordnas", "rankades", "rankas", "rankats", "rankingras", "rannsakades", "rannsakas", "rannsakats", "ransonerades", "ransoneras", "rapporterades", "rapporteras", "rapporterats", "rasas", "raserades", "raseras", "raserats", "rasslades", "rastas", "ratades", "rätades", "ratas", "rätas", "ratatas", "ratats", "rätats", "ratificerades", "ratificeras", "ratificerats", "ratifieras", "rationaliseras", "rationaliserats", "rattades", "rättades", "rättas", "rättats", "ravennas", "reades", "readymades", "reageras", "reaktiveras", "realiserades", "realiseras", "realiserats", "reas", "reavinstbeskattas", "rebbes", "recenserades", "recenseras", "recenserats", "reciteras", "redas", "redbergslids", "reddes", "redigerades", "redigeras", "redigerats", "redogjordes", "redogjorts", "redogörs", "redovisades", "redovisas", "redovisats", "reds", "reducerades", "reduceras", "reducerats", "refererades", "refereras", "refererats", "reflekterades", "reflekteras", "reflexräddades", "reformerades", "reformeras", "reformerats", "refuserades", "refuseras", "refuserats", "regelsattes", "regenereras", "regerades", "regeras", "regerats", "regeringsbehandlas", "regisserades", "regisseras", "regisserats", "registeras", "registerkontrolleras", "registrerades", "registreras", "registrerats", "registreringsbesiktigas", "reglats", "reglerades", "regleras", "reglerats", "regummeras", "rehabiliterades", "rehabiliteras", "rehabiliterats", "reintegreras", "reinvesteras", "rekapituleras", "rekatolicerades", "reklamas", "reklamerades", "reklameras", "reklamfinansieras", "reklamplats", "reklamspots", "rekommederas", "rekommenderades", "rekommenderas", "rekommenderats", "rekommeneras", "rekonstruerades", "rekonstrueras", "rekonstruerats", "rekontextualiseras", "rekryterades", "rekryteras", "rekryterats", "rekryteringsbas", "rekvierades", "rekvirerades", "rekvireras", "rekvirerats", "relanserades", "relaterades", "relateras", "relaterats", "relativiserades", "relativiseras", "relegerades", "relegeras", "relegerats", "remissbehandlades", "remissbehandlas", "remissbehandlats", "remitterades", "remitteras", "remitterats", "remixas", "renas", "renats", "rengjordes", "rengjorts", "rengöras", "rengörs", "rennes", "renodlades", "renodlas", "renodlats", "renoverades", "renoveras", "renoverats", "renrakats", "rensades", "rensas", "rensats", "renskrapas", "renskrivas", "rentvås", "reopererades", "reparerades", "repareras", "reparerats", "repas", "repatrierades", "repatrieras", "repats", "repererades", "repeterades", "repeteras", "repeterats", "reppas", "reprenteras", "representerades", "representeras", "representerats", "repriserades", "repriseras", "reprisvisas", "reproduceras", "reproducerats", "res", "resas", "reservades", "reserverades", "reserveras", "reserverats", "reserves", "reses", "resonerades", "resoneras", "respekterades", "respekteras", "respekterats", "restaurerades", "restaureras", "restaurerats", "restes", "rests", "resulterades", "results", "retts", "returnerades", "returneras", "returnerats", "retuscherades", "retuscheras", "retuscherats", "revalveras", "revbensopereras", "reviderades", "revideras", "reviderats", "revolutioneras", "revolutionerats", "revs", "rhodes", "rias", "ridas", "rids", "riggades", "riggas", "riksdagsbehandlas", "riktades", "riktas", "riktats", "rimmas", "ringades", "ringaktas", "ringas", "ringats", "ringbarkas", "ringdes", "ringmärks", "ringmärktes", "rings", "ringts", "risades", "risas", "risats", "riseras", "riskerades", "riskeras", "riskerats", "rispades", "rispats", "ristades", "ristas", "ristats", "ritades", "ritas", "ritats", "ritualiserades", "ritualiseras", "rivas", "rives", "rivits", "rivs", "roades", "roas", "roats", "robotbesköts", "robotiseras", "rockas", "roddes", "rohmers", "rojas", "röjas", "röjdes", "röjs", "röjts", "rökas", "rökfylldes", "roks", "röks", "rökskadas", "röktes", "rökts", "rollas", "rollbesatts", "rollerblades", "romanes", "romantiserades", "romantiseras", "rommas", "röntes", "röntgades", "röntgas", "röntgats", "rönts", "ropades", "ropas", "ropats", "röras", "rördes", "röres", "rörs", "rörts", "ros", "rös", "rosades", "rosafärgas", "rosas", "rosats", "rosenqvists", "rostades", "röstades", "rostas", "röstas", "rostats", "röstats", "rostkyddsbehandlas", "rostskyddsbehandlas", "rotades", "rotas", "rötas", "rotats", "rövades", "rövas", "rövats", "rovdjursdödas", "rubbades", "rubbas", "rubbats", "rubricerades", "rubriceras", "rubricerats", "ruckades", "ruckas", "ruckats", "rufsats", "ruggats", "ruinerades", "ruineras", "ruinerats", "rules", "rullades", "rullas", "rullats", "rumlades", "rundades", "rundas", "rundats", "rusades", "ruskades", "ruskas", "rustades", "rustas", "rustats", "ryckas", "rycks", "rycktes", "ryckts", "ryggskadas", "ryktades", "ryktas", "ryktats", "rymms", "rynkades", "rynkas", "rynkats", "sabbats", "sablades", "sablas", "sablats", "saboterades", "saboteras", "saboterats", "såddes", "sades", "saftades", "saftas", "sågades", "sågas", "sägas", "sågats", "säges", "sägs", "sagts", "säjs", "sakades", "sakas", "sakbehandlas", "säkerhetsklassas", "säkerhetsklassats", "säkerhetskontrollerats", "säkerhetslås", "säkerhetsprövas", "säkerställas", "säkerställs", "säkerställts", "saknades", "saknas", "saknats", "säkrades", "säkras", "säkrats", "saktades", "saktas", "såldes", "salinas", "säljas", "säljes", "säljs", "sållades", "sållas", "sållats", "saltades", "saltas", "saltats", "sålts", "saluföras", "salufördes", "saluförs", "samägas", "samägs", "sambos", "samhälls", "samköras", "samlades", "samlas", "samlats", "samlokaliserats", "sammanbindas", "sammanblandas", "sammanblandats", "sammanbringats", "sammanbyggts", "sammandragits", "sammandrogs", "sammanfattades", "sammanfattas", "sammanfattats", "sammanflätades", "sammanflätas", "sammanfogades", "sammanfogas", "sammanfogats", "sammanföras", "sammanfördes", "sammanförs", "sammanförts", "sammanhålles", "sammanhålls", "sammanjämkas", "sammankallades", "sammankallas", "sammankallats", "sammanknippades", "sammanknippas", "sammankopplas", "sammanlänkas", "sammanlyses", "sammansatts", "sammanslås", "sammansmälts", "sammanställas", "sammanställdes", "sammanställs", "sammanställts", "sammansvetsas", "sammanvägas", "sammanvägs", "sammanvävas", "sammanvigs", "samordnades", "samordnas", "samordnats", "samövas", "sampas", "samplades", "sams", "samtalas", "samverkas", "sandas", "sändas", "sandblästrats", "sändes", "sänds", "sanerades", "saneras", "sanerats", "sängplats", "sänkas", "sänkes", "sänks", "sänktes", "sanktioneras", "sanktionerats", "sänkts", "sänts", "saperas", "sårades", "såras", "säras", "sårats", "särbehandlades", "särbehandlas", "särbehandlats", "särbeskattas", "sargades", "sargas", "sargats", "särmärkas", "särnoteras", "sarrautes", "särredovisas", "särskildes", "särskiljas", "sas", "sås", "satanas", "satsades", "satsas", "satsats", "sättas", "sattes", "sättes", "satts", "såtts", "sätts", "scarletts", "schabblas", "schablonberäknas", "schabloniserats", "schackras", "schackrats", "schaktades", "schaktas", "schasas", "schemalades", "schemaläggas", "schemaläggs", "schnapps", "schweppes", "scorseses", "scoutades", "scoutats", "seedades", "seedas", "seglades", "seglarskolas", "seglas", "seglats", "segregerats", "sehlstedts", "sehnsuchts", "sekretessbeläggs", "sekretessbelagts", "sekretessläggs", "sekretesstämplas", "sekulariserades", "sekulariseras", "sekunderades", "sekunderas", "sekvenseras", "selekteras", "senarelades", "senareläggas", "senareläggs", "senarelagts", "sentimentaliserades", "separerades", "separeras", "separerats", "seriekopplas", "serieproducerades", "serietillverkas", "serietillverkats", "servas", "serverades", "serveras", "serverats", "setts", "severas", "sexdubblades", "sexfaldigats", "sextrakasseras", "sfinnas", "shardiks", "shinglas", "shonas", "sias", "sicas", "sidenförsätts", "sidoackrediteras", "sidoordnas", "sidsteppades", "sifferbestämmas", "signalerades", "signaleras", "signaliserades", "signerades", "signeras", "signerats", "siktades", "siktas", "siktats", "silades", "silas", "simmas", "simuleras", "simulerats", "sindings", "sinkades", "sinkas", "sinkats", "sintras", "sirpas", "sittas", "sivas", "sjabblades", "sjabblas", "självfinansieras", "självregleras", "sjanghajas", "sjasas", "sjöds", "sjöngs", "sjösättas", "sjösattes", "sjösatts", "sjösätts", "sjufaldigats", "sjukdomsförklarats", "sjukskrivas", "sjukskrivits", "sjukskrivs", "sjungas", "sjunges", "sjungits", "sjungs", "skadades", "skadas", "skådas", "skadats", "skådats", "skades", "skaffades", "skaffas", "skaffats", "skakades", "skakas", "skakats", "skäktas", "skalades", "skålades", "skalas", "skålas", "skalats", "skalkeas", "skallades", "skållas", "skällas", "skälldes", "skälls", "skålslipas", "skambeläggs", "skämdes", "skamfilats", "skämmas", "skäms", "skämtades", "skämtas", "skämts", "skändades", "skandaliserades", "skändas", "skändats", "skanderades", "skanderas", "skänkas", "skänkes", "skänks", "skänktes", "skänkts", "skapades", "skåpades", "skapas", "skåpas", "skapats", "skåras", "skäras", "skäres", "skärhöras", "skärmades", "skärmas", "skärpas", "skarpnäcks", "skärps", "skärptes", "skärpts", "skars", "skärs", "skärscannrats", "skärskådades", "skärskådas", "skarvades", "skarvas", "skattades", "skattas", "skattebefrias", "skattefinansieras", "skatteprivilegieras", "skattesubventineras", "skattesubventioneras", "skattlades", "skavas", "skavdes", "skavts", "skenbeskattas", "skeppades", "skeppas", "skeppats", "skickades", "skickas", "skickats", "skickliggjordes", "skiftades", "skiftas", "skiftats", "skiktas", "skildes", "skildrades", "skildras", "skildrats", "skiljas", "skiljdes", "skiljs", "skiljts", "skilldes", "skils", "skilts", "skingrades", "skingras", "skingrats", "skinnades", "skinnas", "skinnheads", "skins", "skipades", "skipas", "skipats", "skippades", "skissades", "skissas", "skissats", "skisserades", "skisseras", "skisserats", "skivas", "skivats", "skivinspelas", "skjöts", "skjutas", "skjutits", "skjuts", "skjutsades", "skjutsas", "skockades", "skockas", "skockats", "skogas", "skogås", "skojades", "skojas", "skojats", "skolades", "skolas", "skolats", "sköljas", "sköljdes", "sköljs", "sköljts", "skolmognadstestas", "skonades", "skonas", "skonats", "skönjas", "skönjdes", "skönjes", "skönjs", "sköntaxeras", "sköras", "skördades", "skördas", "skördats", "skörtats", "skotas", "skötas", "sköts", "skottas", "skottats", "sköttes", "skötts", "skottskadades", "skottskadas", "skottskadats", "skovlades", "skövlades", "skovlas", "skövlas", "skövlats", "skräddarsyddes", "skräddarsys", "skräddarsytts", "skräddas", "skrålades", "skrålas", "skrämdes", "skrämmas", "skräms", "skränas", "skrapades", "skrapas", "skrapats", "skrattades", "skrattas", "skrattats", "skrävlas", "skreds", "skreks", "skrevs", "skrikas", "skriks", "skringrats", "skrinlades", "skrinläggas", "skrinläggs", "skrinlagts", "skrivas", "skrives", "skrivits", "skrivs", "skrotades", "skrotas", "skrotats", "skröts", "skrubbades", "skrubbas", "skrubbats", "skrudas", "skruvades", "skruvas", "skruvats", "skrynklades", "skuffades", "skuffas", "skuffats", "skuggades", "skuggas", "skuggats", "skuggboxades", "skuggboxas", "skuldbeläggs", "skulpterades", "skulpteras", "skulpterats", "skummas", "skummats", "skurades", "skuras", "skurats", "skurits", "skvallrades", "skvallras", "skvalpas", "skvätts", "skyddades", "skyddas", "skyddats", "skyddes", "skyfflades", "skyfflas", "skyfflats", "skylas", "skyles", "skyllas", "skylldes", "skylls", "skyllts", "skyls", "skyltades", "skyltas", "skyltats", "skymdes", "skymfas", "skymfats", "skymmas", "skyms", "skymtades", "skymtas", "skymts", "skyndas", "skyttegilles", "släckas", "släcks", "släcktes", "släckts", "slaktades", "slaktas", "slaktats", "slammades", "slammas", "slamras", "slamsas", "slängas", "slängdes", "slänges", "slängs", "slängts", "släpades", "släpas", "släpats", "slappades", "släppas", "släppptes", "släpps", "släpptes", "släppts", "slarvades", "slarvas", "slarvats", "slås", "slätades", "slätas", "slätats", "slåttrades", "slåttras", "slavas", "slets", "slickades", "slickas", "slickats", "slipades", "slipas", "slipats", "slitas", "slites", "slitits", "slits", "slopades", "slopas", "slopats", "slösas", "slösats", "slöts", "slukades", "slukas", "slukats", "slumpades", "slumpas", "slumsaneras", "slungades", "slungas", "slungats", "slussades", "slussas", "slussats", "slutades", "slutas", "slutavverkades", "slutbearbetas", "slutbehandlas", "slutbetalades", "slutbetalas", "slutes", "slutföras", "slutfördes", "slutförhandlades", "slutförhandlas", "slutförhandlats", "slutförs", "slutförts", "slutförvaras", "slutits", "slutlevereras", "slutmonteras", "slutnoterades", "slutrepeteras", "sluts", "slutspelas", "sluttestas", "småbråkas", "smädas", "småfräs", "småfrös", "småjävlas", "smakas", "smaksättas", "smaksättes", "smaksatts", "smaksätts", "smakvarieras", "smälldes", "smalls", "smälls", "smällts", "smalnas", "smältas", "smältes", "smälts", "småretades", "smekas", "smeks", "smektes", "smetades", "smetas", "smetats", "smets", "smidas", "smiddes", "smides", "smidits", "smids", "sminkades", "sminkas", "smiskas", "smittades", "smittas", "smittats", "smitts", "smögs", "smordes", "smörjas", "smörjs", "smorts", "smugglades", "smugglas", "smugglats", "smugits", "smulades", "smulas", "smulats", "smusslades", "smusslas", "smusslats", "smutsades", "smutsas", "smutsats", "smutskastas", "smuttas", "smyckades", "smyckas", "smyckats", "smygas", "smygavlyssnades", "smygfilmades", "smygits", "smygs", "snabbbehandlas", "snabbehandlas", "snabbfrysas", "snabbinkallades", "snabbinkallas", "snabbkäftades", "snabbkopieras", "snabbladdas", "snabbredigeras", "snabbreparerats", "snabbstoppades", "snabbstoppas", "snabbtolkas", "snabbutbildas", "snabbutredas", "snabbutreds", "snackades", "snackas", "snackats", "snålas", "snålkodas", "snappades", "snappas", "snarats", "snärjas", "snärjdes", "snärjs", "snärjts", "snattas", "snävas", "snävats", "snedgås", "snedvridas", "snedvridits", "snedvrids", "sneglas", "snickrades", "snickrats", "sniffas", "snittas", "snöpas", "snördes", "snörptes", "snörs", "snörts", "snörvlades", "snos", "snotts", "snubblas", "snuddades", "snurrades", "snurras", "snuttas", "snuvades", "snuvas", "snuvats", "snyftades", "snyggas", "snyggats", "snyltas", "soares", "socialdelegerades", "socialiseras", "socialiserats", "socialistes", "sockras", "sockrats", "södras", "sögs", "sökas", "sökes", "söks", "söktes", "sökts", "sölades", "solas", "solkas", "solkats", "solochvåras", "sonas", "soncks", "sönderdelas", "sönderskakas", "sönderslets", "sönderslitas", "sönderstyckades", "sondmatades", "söndras", "songs", "sopades", "sopas", "sopats", "söps", "sörjdes", "sörjes", "sörjs", "sorlades", "sorlas", "sörplas", "sorterades", "sorteras", "sorterats", "sotades", "sötades", "sotas", "sötas", "sötats", "sovas", "sövas", "sövdes", "sovelbitarnas", "sovras", "sovs", "sövs", "sövts", "späckas", "spacklas", "spädas", "spåddes", "späddes", "späds", "spaghettisås", "spaltades", "spaltas", "spanas", "spändes", "spångas", "spännas", "spanns", "spänns", "spänts", "sparades", "spårades", "sparas", "spåras", "sparats", "spårats", "sparkades", "sparkas", "sparkats", "spärrades", "spärras", "spärrats", "spärrförklarats", "spås", "späs", "spåtts", "spätts", "specialbeställas", "specialbeställdes", "specialbeställts", "specialbevakas", "specialbyggdes", "specialbyggts", "specialdesignats", "specialdestineras", "specialdrillas", "specialgranskades", "specialgranskats", "specialinretts", "specialiseras", "specialistutbildades", "specialkonstruerades", "speciallottats", "specialpreparerats", "specialrekryterats", "specialriktats", "specialskrevs", "specialskrivs", "specialstuderades", "specialtillverkas", "specialutbildas", "specialutbildats", "specificerades", "specificeras", "specificerats", "speedas", "speglades", "speglas", "speglats", "spejas", "spekulerades", "spekuleras", "spekulerats", "spelades", "spelas", "spelats", "spenderades", "spenderas", "spenderats", "spetsades", "spetsas", "spetsats", "spikades", "spikas", "spikats", "spillas", "spilldes", "spills", "spillts", "spinnas", "spinns", "spioneras", "spionmisstänktes", "spiras", "spisas", "spjälkades", "spjälkas", "splitsas", "splitterskadades", "splittrades", "splittras", "splittrats", "spolades", "spolas", "spolats", "spolierades", "spolieras", "spolierats", "sponsrades", "sponsras", "sponsrats", "spörjs", "sporrades", "sporras", "spörs", "sports", "spottades", "spottas", "spräckas", "spräcks", "spräcktes", "spräckts", "språktestas", "sprängas", "sprangs", "sprängs", "sprängts", "sprättades", "sprättas", "sprätts", "sprayas", "sprayats", "spreds", "sprejas", "sprejats", "spridas", "spriddes", "sprides", "spridits", "sprids", "springas", "springs", "spritas", "spritsas", "spritsats", "spritts", "sprödvärmts", "sprungits", "sprutades", "sprutas", "spunnits", "spurtades", "stabiliserades", "stabiliseras", "stabiliserats", "stäckas", "stacks", "stäcktes", "städades", "städas", "städats", "städes", "stadfästas", "stadfästes", "stadfästs", "stadgas", "stadgats", "städslades", "städslas", "städslats", "stagades", "stagas", "stajlas", "stakades", "stakas", "stakats", "stålas", "stallas", "ställas", "ställdes", "ställes", "ställs", "ställts", "stals", "stämdes", "stammas", "stämmas", "stampades", "stampas", "stämplades", "stämplas", "stämplats", "stäms", "stämts", "ständigtmåstegöras", "stångades", "stångas", "stängas", "stångats", "stängdes", "stängs", "stängts", "stånkas", "stänkas", "stänkts", "stannades", "stansas", "stansats", "staplades", "staplas", "staplats", "starkars", "stärkas", "stärks", "stärktes", "stärkts", "startades", "startas", "startats", "startgas", "stås", "stationerades", "stationeras", "stationerats", "statuerades", "statueras", "stavades", "stavas", "stavats", "stävjas", "stegas", "steglas", "stegrades", "stegras", "stegrats", "stekas", "steks", "stektes", "stekts", "stenades", "stenas", "stencilerats", "stenungsundshems", "steriliseras", "stickas", "stickats", "sticks", "stiftades", "stiftas", "stiftats", "stigmatiserades", "stigmatiseras", "stiliserats", "stillas", "stillats", "stills", "stimmades", "stimulerades", "stimuleras", "stimulerats", "stipendierats", "stipulerades", "stipuleras", "stjälas", "stjälpas", "stjälps", "stjälptes", "stjäls", "stockas", "stockholmsanpassats", "stockholmutsätts", "stöddes", "stödjas", "stöds", "stöldanmäldes", "stöldanmälts", "stöldresas", "stomiopererades", "stomiopereras", "stöpas", "stoppades", "stoppas", "stoppats", "stopppades", "stöps", "stöptes", "stöpts", "störas", "stördes", "storklas", "stormades", "stormas", "stormats", "stormfälldes", "stormtrivas", "stormtrivs", "störs", "storstädas", "storstädats", "störtades", "störtas", "störtats", "stortrivas", "stortrivdes", "stortrivs", "stortrutades", "störts", "stötas", "stötes", "stöts", "stöttades", "stöttas", "stöttats", "stöttes", "stötts", "sträckas", "sträcks", "sträcktes", "sträckts", "straffades", "straffas", "straffats", "straffbeläggas", "straffbeskattas", "straffsanktioneras", "strålas", "strålbehandlas", "strålbehandlats", "strålningstestas", "strålskadades", "stramades", "stramas", "stramats", "strandades", "strandats", "strandsattes", "strävas", "streckas", "strejkas", "strejkats", "stressades", "stressas", "stretchats", "strids", "strilas", "strimlas", "strimlats", "strimmades", "ströddes", "ströks", "strömlinjeformas", "ströps", "strös", "strötts", "strukits", "strukturerades", "struktureras", "strukturerats", "strukturrationaliserades", "strykas", "strykes", "stryks", "strypas", "strypes", "stryps", "stryptes", "strypts", "stuckits", "studerades", "studeras", "studerats", "stuffas", "stukades", "stukas", "stukats", "stulits", "stunts", "stuvades", "stuvas", "stuvats", "styckades", "styckas", "styckats", "stylades", "stylas", "stylats", "stympades", "stympas", "stympats", "styras", "styrdes", "styrkas", "styrks", "styrktes", "styrkts", "styrs", "styrts", "sublimeras", "subtraheras", "subventionerades", "subventioneras", "subventionerats", "suckas", "suddades", "suddas", "suddats", "sufflerats", "sugas", "suges", "sugits", "sugs", "summerades", "summeras", "summerats", "supes", "supits", "sups", "surkörs", "surrades", "surras", "susades", "suspenderades", "suspenderas", "suspenderats", "svagbegåvades", "svaldes", "sväljas", "sväljs", "svalkas", "svälldes", "svältas", "svälts", "svämmas", "svämmats", "svängdes", "svängs", "svängts", "svanskuperas", "svarades", "svaras", "sväras", "svärs", "svärtades", "svärtas", "svärtats", "svartlistades", "svartlistas", "svartlistats", "svartmålades", "svartmålas", "svartmålats", "svedas", "svekivs", "sveks", "svennevads", "svepas", "svepes", "sveps", "sveptes", "svepts", "svetlas", "svetsades", "svetsas", "svikas", "svikits", "sviks", "svinas", "svingades", "svingas", "svors", "svurits", "swandes", "syddes", "sydgas", "syds", "syftas", "sykes", "syltades", "syltas", "symboliserades", "symboliseras", "sympatilockoutas", "sympatiseras", "synades", "synats", "syndats", "synkroniseras", "synliggjordes", "synliggjorts", "synliggöras", "synliggörs", "syntetiserats", "syresättas", "syresätts", "syrsätts", "sys", "sysselsättas", "sysselsattes", "sysselsätts", "sytts", "tackades", "tackas", "täckas", "tacklades", "tacklas", "täcks", "täcktes", "täckts", "tagas", "tages", "tagits", "tags", "talades", "talas", "tålas", "talats", "tåldes", "tallas", "tallriksserveras", "tåls", "talts", "tämjas", "tämjs", "tämjts", "tändas", "tändes", "tänds", "tångas", "tangerades", "tangeras", "tangerats", "tangiers", "tångonduleras", "tänjas", "tänjdes", "tänjes", "tänjs", "tänjts", "tankas", "tänkas", "tänkes", "tänks", "tänkts", "tänts", "tapetserades", "tapetserats", "tappades", "tappas", "tappats", "täpps", "tårades", "tareras", "tärnas", "tärts", "tarvas", "tas", "tasslades", "tasslas", "tätades", "tätas", "tävlades", "tävlas", "tävlats", "taxeras", "taxerats", "technologies", "tecknades", "tecknas", "tecknats", "tegs", "teiresias", "tejakulas", "tejpades", "tejpas", "tejpats", "teknologiseras", "telefaxbekräftas", "telefonavlyssnas", "telefonerades", "telefonintervjuades", "telefonterroriseras", "telegraferats", "televiserades", "televiseras", "telias", "telomeras", "tematiserades", "tematiseras", "tempereras", "terminerats", "terminssäkras", "terroriserades", "terroriseras", "terroriserats", "terroriststämplas", "terroriststämplats", "testades", "testamenterats", "testas", "testats", "testkörs", "textas", "thorgils", "tidigarelades", "tidigareläggas", "tidigareläggs", "tidigarelagts", "tidsbegränsas", "tidsbegränsats", "tidsbestämdes", "tidsbestämmas", "tidsbestäms", "tidsbestämts", "tidsflödes", "tidsordnats", "tietotehdas", "tigits", "tigs", "tillades", "tillagas", "tillägas", "tilläggas", "tilläggs", "tilläggsdebiteras", "tillägnades", "tillägnas", "tillägnats", "tillämmpas", "tillämpades", "tillämpas", "tillämpats", "tillåtas", "tillåtes", "tillåtits", "tillåts", "tilläts", "tillbads", "tillbakabildas", "tillbakabildats", "tillbakavisades", "tillbakavisas", "tillbakavisats", "tillbakes", "tillbes", "tillbetts", "tillbringades", "tillbringas", "tillbyggts", "tillbytas", "tilldelades", "tilldelas", "tilldelats", "tilldömas", "tilldömdes", "tilldöms", "tilldömts", "tillerkändes", "tillerkännas", "tillerkänns", "tillerkänts", "tillfångatagits", "tillfångatas", "tillfångatogs", "tillfogades", "tillfogas", "tillfogats", "tillföras", "tillfördes", "tillförs", "tillförsäkras", "tillförsäkrats", "tillförts", "tillfrågades", "tillfrågas", "tillfrågats", "tillfredsställas", "tillfredsställdes", "tillfredsställs", "tillgivits", "tillgodoräknas", "tillgodosågs", "tillgodoses", "tillgodosetts", "tillgreps", "tillgripas", "tillgripes", "tillgripits", "tillgrips", "tillhållas", "tillhålls", "tillhandahållas", "tillhandahålles", "tillhandahålls", "tillhandahölls", "tillhandhölls", "tillhölls", "tillintetgjorts", "tillintetgörs", "tillkallades", "tillkallas", "tillkallats", "tillkännagavs", "tillkännages", "tillkännagetts", "tillkännagivits", "tillläggas", "tilllämpas", "tilllämpats", "tilllåtas", "tilllåtits", "tilllåts", "tillläts", "tillmätas", "tillmätits", "tillmäts", "tillmättes", "tillmätts", "tillmötesgås", "tillönskas", "tillordnas", "tillråddes", "tillrådes", "tillråds", "tillrättaläggs", "tillrättavisas", "tillredas", "tillreds", "tillretts", "tillryggalades", "tillsägs", "tillsagts", "tillsamamns", "tillsammamns", "tillsammas", "tillsammns", "tillsändas", "tillsas", "tillsättas", "tillsattes", "tillsatts", "tillsätts", "tillses", "tillskapas", "tillskapats", "tillskjuts", "tillskrevs", "tillskrivas", "tillskrives", "tillskrivits", "tillskrivs", "tillspetsades", "tillspetsas", "tillspetsats", "tillställas", "tillställdes", "tillställs", "tillställts", "tillstås", "tillstyrks", "tillstyrktes", "tillstyrkts", "tilltalades", "tilltalas", "tilltalats", "tillträdas", "tilltros", "tillvaratagas", "tillvaratagits", "tillvaratas", "tillvaratogs", "tillverkades", "tillverkas", "tillverkats", "tillvitades", "tillvitas", "tillvitats", "tillyxas", "tinas", "tinats", "tingades", "tingas", "tingats", "tiodubblades", "tiodubblas", "tiodubblats", "tiofaldigades", "tiofaldigas", "tiofaldigats", "tippades", "tippas", "tippats", "tipsades", "tipsas", "tipsats", "tisslades", "tisslas", "tittas", "titulerades", "tituleras", "tivs", "tjafsas", "tjågas", "tjänades", "tjänas", "tjänats", "tjatades", "tjatas", "tjatats", "tjoas", "tjubajs", "tjudras", "tjusades", "tjusas", "tjusats", "tjuvkopplas", "tjuvlästes", "tjyvröktes", "togs", "töjdes", "töjs", "tolererades", "tolereras", "tolererats", "tolkades", "tolkas", "tolkats", "tolvdubblats", "tolvfaldigats", "tömdes", "tömmas", "tommingas", "töms", "tömts", "tonades", "tonas", "tonats", "toppades", "toppas", "toppats", "topplaceras", "topprenoverats", "toppseedats", "toppstyras", "tordas", "torgföras", "torgfördes", "torgförs", "torkades", "torkas", "torkats", "tornbas", "torpederades", "torpederas", "torpederats", "torrkokas", "torrlades", "torrläggas", "torrläggs", "torrlagts", "torrmarineras", "torrsättas", "torrsätts", "torterades", "torteras", "torterats", "torts", "totalassimilerats", "totalavvekas", "totalbojkottats", "totaldemolerats", "totalfinansieras", "totalförbjöds", "totalförbjudas", "totalförbjudits", "totalförbjuds", "totalförlamades", "totalförlamas", "totalförstöras", "totalförstördes", "totalförstörs", "totalförstörts", "totalförsvarspliktigas", "totalfredades", "totalintegrerats", "totalredovisas", "totalrenoverades", "totalrenoveras", "totalsaneras", "totalstoppas", "tråcklas", "tradades", "tråddes", "träddes", "traderas", "traderats", "trades", "trådhäftades", "trådhäftas", "träds", "träffades", "träffats", "trafikerades", "trafikeras", "trafikerats", "tragglas", "trakasserades", "trakasseras", "trakasserats", "trakterades", "trakteras", "trakterats", "trampades", "trampats", "tramsas", "tränades", "tränas", "tränats", "trängas", "trängdes", "trängs", "trängts", "transformerades", "transformeras", "transformerats", "transkriberas", "transplanterades", "transplanteras", "transplanterats", "transponeras", "transporterades", "transporteras", "transporterats", "transportvigas", "trappades", "trappas", "trappats", "träs", "trasades", "trasas", "trasats", "trasslas", "trätas", "trätts", "traumatiserats", "travades", "travas", "travats", "travintresserades", "tredskades", "tredskas", "tredubblades", "tredubblas", "tredubblats", "trefaldigades", "trefaldigas", "trefaldigats", "triffids", "trimmades", "trimmas", "trimmats", "trissades", "trissats", "trivialiserats", "trixas", "troddes", "trollades", "trollas", "trollats", "trollbands", "trollbindas", "trollbinds", "trollbundits", "tros", "tröskas", "tröskats", "tröstades", "tröstas", "tröstats", "tröttas", "trotts", "trotzigs", "trubbades", "trubbas", "trubbats", "trumfades", "trumfas", "trummas", "trummats", "trumpetades", "tryckas", "tryckes", "trycks", "trycktes", "tryckts", "tryfferades", "tryfferas", "tryfferats", "tryggas", "trygghetsavtalets", "tryzas", "tsokas", "tsvetajevas", "tubbades", "tubbas", "tudelades", "tudelas", "tuggades", "tuggas", "tuggats", "tugindas", "tuktades", "tuktas", "tuktats", "tullas", "tullbehandlas", "tullinges", "tullvisiteras", "tummas", "tunnades", "tunnas", "tunnats", "turades", "turas", "turats", "turistifierats", "turneras", "tusendubblats", "tussas", "tutades", "tutas", "tvåddes", "tvålades", "tvangs", "tvångsanslutas", "tvångsavverkades", "tvångsevakuerats", "tvångsförflyttades", "tvångsförflyttas", "tvångsförflyttats", "tvångsförvaltas", "tvångsinlösas", "tvångsintagits", "tvångskommenderades", "tvångskommenderas", "tvångsmatades", "tvångsmatas", "tvångsmatats", "tvångsnedflyttades", "tvångsomhändertagits", "tvångsomhändertas", "tvångsomhändertogs", "tvångspensionerats", "tvångsplaceras", "tvångsrekryterades", "tvångsrekryteras", "tvångstömdes", "tvångsvårdas", "tvångsvårdats", "tvångsvärvas", "tvås", "tvättades", "tvättas", "tvättats", "tvingades", "tvingas", "tvingats", "tvinnades", "tvinnas", "tvistades", "tvistas", "tvistats", "tyas", "tydas", "tyddes", "tydliggjordes", "tydliggjorts", "tydliggöras", "tydliggörs", "tyds", "tyglades", "tyglas", "tyngas", "tyngdes", "tyngs", "tyngts", "typiseras", "tyranniserats", "tyrolersås", "tystades", "tystas", "tystats", "uefas", "ugnsbakas", "undandras", "undanhållas", "undanhållits", "undanhålls", "undanhölls", "undanröjas", "undanröjdes", "undanröjs", "undanröjts", "undantagits", "undantas", "undantogs", "undanträngas", "undanträngs", "underbalanseras", "underblåses", "underblåstes", "underbyggs", "underdånas", "underförstås", "undergrävas", "undergrävdes", "undergrävs", "undergrävts", "underhållas", "underhållits", "underhålls", "underhölls", "underkändes", "underkännas", "underkänns", "underkänts", "underkastades", "underkastas", "underkastats", "underkuvas", "underkuvats", "underlåtas", "underlättades", "underlättas", "underlättats", "underminerades", "undermineras", "underminerats", "underordnades", "underordnas", "underordnats", "underrättades", "underrättas", "underrättats", "underskattades", "underskattas", "underskattats", "underskreds", "underskridas", "underskridits", "underskrids", "undersökas", "undersöks", "undersöktes", "undersökts", "underställas", "underställs", "understöddes", "understödjas", "understöds", "understötts", "underströks", "understrukits", "understrykas", "understryks", "undertecknades", "undertecknas", "undertecknats", "underträffades", "undertryckas", "undertrycks", "undertryckts", "undervärderas", "undervärderats", "undervisades", "undervisas", "undervisats", "undfägnades", "undfägnas", "undfägnats", "undrades", "undras", "undrats", "undsättas", "undsattes", "undvaras", "undveks", "undvikas", "undvikes", "undvikits", "undviks", "unitas", "unlimiteds", "unnades", "unnas", "unnras", "uoppskattas", "upgavs", "upmanades", "uppammas", "uppammats", "upparbetas", "upparbetats", "uppättades", "uppbådades", "uppbådas", "uppbäras", "uppbars", "uppblandas", "uppbrännas", "uppbringades", "uppbringas", "uppbringats", "uppbyggas", "uppbyggnadsfas", "uppdagades", "uppdagas", "uppdagats", "uppdateras", "uppdaterats", "uppdelades", "uppdelas", "uppdragits", "uppdras", "uppdrogs", "uppehållas", "uppehölls", "uppenbarades", "uppenbaras", "uppenbarats", "uppfångades", "uppfångas", "uppfångats", "uppfanns", "uppfattades", "uppfattas", "uppfattats", "uppfinnas", "uppfinns", "uppfödas", "uppföddes", "uppföds", "uppföras", "uppfördes", "uppförs", "uppförstorades", "uppförstoras", "uppförts", "uppfostrades", "uppfostras", "uppfostrats", "uppfunnits", "uppfyllas", "uppfylles", "uppfylls", "uppgavs", "uppges", "uppgetts", "uppgives", "uppgivits", "uppgraderades", "uppgraderas", "uppgraderats", "upphandlades", "upphandlas", "upphandlats", "upphävas", "upphävdes", "upphävs", "upphävts", "upphettades", "upphettas", "upphöjas", "upphöjdes", "upphöjs", "upphöjts", "uppjusteras", "uppjusterats", "uppkallades", "uppkallas", "uppkallats", "upplageras", "uppläsas", "uppläses", "upplästes", "upplästs", "upplåtas", "upplåtes", "upplåtits", "upplåts", "uppläts", "uppletas", "upplevas", "upplevdes", "upplevs", "upplevts", "upplivades", "upplös", "upplösas", "upplöses", "upplöstes", "upplösts", "upplysas", "upplyses", "upplystes", "upplysts", "uppmäksammats", "uppmålas", "uppmanades", "uppmanas", "uppmanats", "uppmandes", "uppmärksammades", "uppmärksammas", "uppmärksammats", "uppmätas", "uppmäts", "uppmättes", "uppmätts", "uppmuntrades", "uppmuntras", "uppmuntrats", "uppnåddes", "uppnås", "uppnåtts", "uppövats", "upppdagas", "uppräknades", "upprätas", "upprättades", "upprättas", "upprättats", "upprätthållas", "upprätthålles", "upprätthållits", "upprätthålls", "upprätthölls", "upprepades", "upprepas", "upprepats", "uppresas", "uppreses", "upprestes", "uppröras", "upprördes", "upprörs", "upprörts", "upprustas", "uppsamlades", "uppsändas", "uppsättas", "uppsattes", "uppsatts", "uppskalas", "uppskattades", "uppskattas", "uppskattats", "uppskjutas", "uppskjutits", "uppskjuts", "uppsköts", "uppslukades", "uppslukas", "uppslukats", "uppsnappas", "uppsökas", "uppsöks", "uppsöktes", "uppsökts", "uppställas", "uppställs", "uppställts", "upptäckas", "upptäcks", "upptäcktes", "upptäckts", "upptagas", "upptages", "upptagits", "upptändes", "upptänds", "upptänts", "upptas", "upptaxeras", "upptecknades", "upptecknats", "upptogs", "uppväckas", "uppväcktes", "uppvägas", "uppvägdes", "uppvägs", "uppvägts", "uppvaktades", "uppvaktas", "uppvaktats", "uppvärderades", "uppvärderas", "uppvärmdes", "uppvisades", "uppvisas", "uppvisningflygas", "urbaniserats", "urgröps", "urholkades", "urholkas", "urholkats", "urkalkas", "urladdas", "urlakats", "ursäktas", "ursäktats", "urskiljas", "urskiljs", "urskuldas", "uruppföras", "uruppfördes", "uruppförs", "uruppförts", "urvattnas", "usurperats", "utandades", "utandas", "utandats", "utannonserades", "utannonseras", "utannonserats", "utanordnats", "utarbetades", "utarbetas", "utarbetats", "utarmades", "utarmas", "utarmats", "utarrenderas", "utbasunerades", "utbasuneras", "utbetalades", "utbetalas", "utbetalats", "utbildades", "utbildas", "utbildats", "utbjöds", "utbjudas", "utbjuds", "utbringades", "utbringas", "utbroderas", "utbyts", "utbyttes", "utbytts", "utdefinieras", "utdelades", "utdelas", "utdelats", "utdikades", "utdömas", "utdömdes", "utdöms", "utdömts", "utdrivas", "utelämnas", "utelämnats", "uteslöts", "uteslutas", "uteslutits", "utesluts", "utestängas", "utestängdes", "utestängs", "utestängts", "utexaminerades", "utexamineras", "utexaminerats", "utfalls", "utfärdades", "utfärdas", "utfärdats", "utfästas", "utfästs", "utflyttas", "utfodras", "utföras", "utfördelas", "utfördes", "utfordras", "utfordrats", "utföres", "utformades", "utformas", "utformats", "utförs", "utförsäkras", "utförsäljas", "utforskades", "utforskas", "utförts", "utfösas", "utfrågades", "utfrågas", "utfrågats", "utgavs", "utges", "utgetts", "utgivits", "utgjordes", "utgjorts", "utgjutits", "utglesas", "utgöras", "utgöres", "utgörs", "uthärdas", "uthyrdes", "utjämnades", "utjämnas", "utjämnats", "utkämpades", "utkämpas", "utkämpats", "utklassats", "utkommenderades", "utkonkurrerades", "utkonkurreras", "utkoras", "utkorats", "utkrävas", "utkrävdes", "utkräves", "utkrävts", "utkrisalliseras", "utkristalliserades", "utkristalliseras", "utkristalliserats", "utkvitteras", "utlades", "utläggas", "utläggs", "utlämnades", "utlämnas", "utlämnats", "utlandsstationerades", "utlandstationerades", "utläs", "utläsas", "utläses", "utlokaliserades", "utlokaliseras", "utlokaliserats", "utlösas", "utlöses", "utlöstes", "utlösts", "utlottades", "utlottas", "utlovades", "utlovas", "utlovats", "utlys", "utlysas", "utlyses", "utlystes", "utlysts", "utmålades", "utmålas", "utmålats", "utmanades", "utmanas", "utmanats", "utmanövrerades", "utmanövreras", "utmärkas", "utmärks", "utmärktes", "utmärkts", "utmätas", "utmäts", "utmattas", "utmättes", "utmätts", "utmejslades", "utminuterades", "utmönstrades", "utmönstras", "utnämnas", "utnämndes", "utnämns", "utnämnts", "utnyttjades", "utnyttjas", "utnyttjats", "utoands", "utökades", "utökas", "utökats", "utövades", "utövas", "utövats", "utpekades", "utpekas", "utpekats", "utplacerades", "utplaceras", "utplacerats", "utplånades", "utplånas", "utplånats", "utplanteras", "utposteras", "utpressas", "utpressats", "utprovades", "utprovas", "utprovats", "utraderades", "utraderas", "utraderats", "utrangeras", "utrangerats", "uträttades", "uträttas", "uträttats", "utredas", "utreddes", "utredningshäktades", "utreds", "utrensades", "utretts", "utropades", "utropas", "utropats", "utrotades", "utrotas", "utrotats", "utrustades", "utrustas", "utrustats", "utrycks", "utrymdes", "utrymmas", "utryms", "utrymts", "utsades", "utsägas", "utsågs", "utsägs", "utsagts", "utsändas", "utsändes", "utsänds", "utsänts", "utsättas", "utsattes", "utsättes", "utsatts", "utsätts", "utses", "utsetts", "utsiras", "utskeppas", "utskiljas", "utslungas", "utslungats", "utsmyckas", "utsöndras", "utspanns", "utspelades", "utspelas", "utspelats", "utspionerades", "utspisades", "utspisas", "utspisats", "utstakades", "utstakats", "utställas", "utställdes", "utställs", "utstöttes", "utsträckas", "utsträcks", "utsträcktes", "utstrålas", "utströs", "uttages", "uttagits", "uttalades", "uttalas", "uttalats", "uttänkas", "uttas", "uttnyttjas", "uttogs", "uttolkas", "uttöms", "utträttats", "uttröttas", "uttryckas", "uttrycks", "uttrycktes", "uttryckts", "utttrycks", "uttunnades", "uttunnas", "uttydas", "uttydes", "uttyds", "utuppfördes", "utvaldes", "utväljas", "utvalts", "utvanns", "utvärderades", "utvärderas", "utvärderats", "utvattnas", "utväxlades", "utväxlas", "utväxlats", "utveckas", "utvecklades", "utvecklas", "utvecklats", "utveklas", "utverkats", "utvidgades", "utvidgas", "utvidgats", "utvinnas", "utvinns", "utvisades", "utvisas", "utvisats", "utvunnits", "uvecklas", "uvecklats", "vaccinerades", "vaccineras", "vaccinerats", "vachettes", "väckas", "väcks", "väcktes", "väckts", "vådaskjuts", "vådasköts", "vades", "vädrades", "vädras", "vädrats", "vågas", "vägas", "vägdes", "väges", "vaggades", "vaggas", "vaggats", "vägledas", "vägleddes", "vägleds", "vägletts", "vägrades", "vägras", "vägrats", "vägs", "vägts", "vakantsätts", "vaktades", "vaktas", "vakuummöras", "valderas", "valdes", "våldtagits", "våldtas", "våldtogs", "valenciennes", "väljas", "väljes", "väljs", "välkomnades", "välkomnas", "välkomnats", "vallades", "vållades", "vallas", "vallås", "vållas", "vållats", "vallfärdas", "valsas", "välsignades", "välsignas", "välsignats", "vältas", "vältes", "vältrades", "vältras", "vältrats", "valts", "välts", "välvdes", "välvs", "vämjdes", "vanäras", "våndades", "vandaliserades", "vandaliseras", "vandaliserats", "våndas", "vändas", "våndats", "vandes", "vändes", "vandkunsts", "vandrades", "vandras", "vänds", "vändsteks", "vanhedrats", "vanhelgas", "vanhelgats", "vänjas", "vankades", "vankats", "vanns", "vanprydas", "vanskötas", "vansköts", "vansköttes", "vansläktades", "vansläktas", "vansläktats", "vanställs", "vanstyrs", "väntades", "väntas", "väntats", "vantolkas", "vantolkats", "vänts", "vanvårdas", "vanvårdats", "våransas", "varas", "vårdades", "vårdas", "vårdats", "värdebas", "värderades", "värderas", "värderats", "värdes", "värdesättas", "värdesattes", "värdesatts", "värdesätts", "värdigades", "värdigas", "vares", "vargas", "varieras", "varierats", "värks", "värmas", "värmdes", "varmhållas", "varmkörs", "varmmanglades", "varmrökas", "värms", "värmts", "varnades", "värnades", "varnas", "värnas", "varnats", "värnats", "vårseglats", "varslades", "varslas", "varslats", "varsnas", "varvades", "värvades", "varvas", "värvas", "varvats", "värvats", "väs", "vaskades", "vaskas", "vaskats", "vässas", "västallierades", "västs", "vattenfyllas", "vattenfylls", "vattengjutits", "vattnades", "vattnas", "vattnats", "vattrades", "vattras", "vävas", "vävdes", "vävs", "vävts", "växlades", "växlas", "växlats", "växtfärgats", "veckats", "vecklades", "vecklas", "vederfaras", "vederfares", "vederfarits", "vederfars", "vederfors", "vederlades", "vederläggas", "vederläggs", "vederlagts", "veks", "veldes", "venables", "vendanges", "veninivas", "venstres", "ventilerades", "ventileras", "ventilerats", "verbaliseras", "verderfarits", "verdes", "verifieras", "verifierats", "verkställas", "verkställdes", "verkställs", "verkställts", "vetas", "veterinärundersökas", "vetetortillas", "vevades", "vevas", "vevats", "vickas", "vidarebefodrades", "vidarebefordrades", "vidarebefordras", "vidarebefordrats", "vidarebehandlas", "vidareexporteras", "vidareexporterats", "vidareförsäljas", "vidareförsäljs", "vidaresändas", "vidaresänts", "vidareutbildas", "vidareutvecklades", "vidareutvecklas", "vidareutvecklats", "videodokumenteras", "videofilmades", "videofilmas", "videofilmats", "videoinspelats", "vidgades", "vidgas", "vidgats", "vidgåtts", "vidhållas", "vidimerades", "vidimeras", "vidkännas", "vidmakthållas", "vidmakthålles", "vidmakthålls", "vidmakthölls", "vidröras", "vidrörs", "vidrörts", "vidtagas", "vidtages", "vidtagits", "vidtalades", "vidtalas", "vidtas", "vidtogs", "viftades", "viftas", "viftats", "vigas", "vigdes", "vigs", "vigts", "vikas", "vikits", "viks", "viktas", "vikts", "vilas", "villfaras", "villkoras", "villkorats", "villkorsändrades", "vilseförts", "vilseledas", "vilseleddes", "vilseleds", "vilseletts", "vimlades", "vimlats", "vindas", "vindfälldes", "vindtorkas", "vineras", "vingklippas", "vinglas", "vinifieras", "vinkades", "vinkas", "vinklades", "vinklas", "vinnas", "vinnes", "vinns", "vinschas", "vinterförvarats", "vinterkonserverats", "vintersportades", "vippas", "virades", "viras", "virats", "virkats", "virvlades", "virvlas", "visades", "visas", "visats", "visiones", "visiterades", "visiteras", "viskades", "viskas", "viskats", "vispades", "vispas", "vispats", "visslades", "visslas", "visslats", "visstes", "visualiseras", "vitaliserades", "vitaliseras", "vitaliserats", "vitesföreläggas", "vitesförelagts", "vitlimmas", "vitsordas", "vittjas", "vittjats", "vittnas", "vittras", "vogts", "voltas", "vördades", "vördas", "voterades", "vrakades", "vräkas", "vräks", "vräktes", "vräkts", "vrålas", "vrängas", "vrängs", "vranjes", "vredgades", "vredgas", "vredgats", "vreds", "vrenskades", "vrenskas", "vridas", "vrides", "vridits", "vrids", "vunnits", "walesas", "walkabouts", "wannadies", "wästfelts", "waves", "williams", "wokas", "yeats", "ylikangas", "ympades", "ympas", "ympats", "yorkbörs", "yppades", "yppas", "yrkades", "yrkas", "ystades", "ytbehandlas", "yttrades", "yttras", "yttrats", "zappas", "zonindelades", "zoomas"];
var kk = {};
Object.defineProperty(kk, "__esModule", {
  value: !0
});
kk.default = function() {
  return ["nmak", "nmek", "nir", "nır", "nür", "nur", "nıyor", "niyor", "ndı", "ndi", "ndu", "ndü", "nmış", "nmiş", "nmuş", "nmüş", "necek", "nacak", "nmıştı", "nmişti", "nmuştu", "nmüştü", "nıyordu", "niyordu", "nuyordu", "nüyordu", "necekti", "nacaktı", "nsa", "nse", "nmalı", "nmeli", "nmaz", "nmez", "anmak", "enmek", "ınmak", "inmek", "unmak", "ünmek", "anır", "enir", "ınır", "inir", "unur", "ünür", "anıyor", "eniyor", "ınıyor", "iniyor", "unuyor", "ünüyor", "andı", "endi", "ındı", "indi", "undu", "ündü", "anmış", "enmiş", "ınmış", "inmiş", "unmuş", "ünmüş", "anacak", "enecek", "ınacak", "inecek", "unacak", "ünecek", "ınmıştı", "inmişti", "unmuştu", "ünmüştü", "ınıyordu", "iniyordu", "unuyordu", "ünüyordu", "necekti", "nacaktı", "ansa", "ense", "ınsa", "inse", "unsa", "ünse", "anmalı", "enmeli", "ınmalı", "inmeli", "unmalı", "ünmeli", "anmaz", "enmez", "ınmaz", "inmez", "unmaz", "ünmez", "ılmak", "ilmek", "ulmak", "ülmek", "ılır", "ilir", "ulur", "ülür", "ılınıyor", "iliniyor", "ulunuyor", "ülüyor", "ıldı", "ildi", "uldu", "üldü", "ılmış", "ilmiş", "ulmuş", "ülmül", "ılacak", "ilecek", "ulacak", "ülecek", "ılmıştı", "ilmişti", "ulmuştu", "ülmüştü", "ılıyordu", "iliyordu", "uluyordu", "ülüyordu", "necekti", "nacaktı", "ılsa", "ilse", "ulsa", "ülse", "ılmalı", "ilmeli", "ulmalı", "ülmeli", "ılmaz", "ilmez", "ulmaz", "ülmez"];
};
var Sp = {};
Object.defineProperty(Sp, "__esModule", {
  value: !0
});
const BYe = ["övünür", "tutuş", "kullanmak", "lanmak", "baglanmak", "alinmak", "bosanmak", "kaçinmak", "hazirlanmak", "lunmak", "siginmak", "tasinmak", "rlanmak", "sakinmak", "zanmak", "tirmanmak", "inanmak", "arinmak", "kulllanmak", "isinmak", "yikanmak", "ögrenmek", "ogrenmek", "düsünmek", "renmek", "dusunmek", "ünmek", "donmek", "deginmek", "eglenmek", "lenmek", "öğünmek", "deyinmek", "örenmek", "gorunmek", "oğrenmek", "guvenmek", "begenmek", "şünmek", "nmek", "gecinmek", "tukenmek", "kabüllenmek", "öirenmek", "kabulenmek", "sinir", "peynir", "münir", "alinir", "kazanir", "yorumlanir", "kullanir", "uygulanir", "dayanir", "saglanir", "inanir", "özenir", "lenir", "ögrenir", "tersinir", "yasanir", "toplanir", "tanir", "senir", "rastlanir", "renir", "munir", "kaynaklanir", "baglanir", "hazirlanir", "güvenir", "enir", "soylenir", "baslanir", "davranir", "kapanir", "oynanir", "uzanir", "tanimlanir", "taninir", "souvenir", "ogrenir", "tasinir", "konteynir", "uyanir", "begenir", "hesaplanir", "sanir", "saklanir", "yakalanir", "aranir", "algilanir", "hoslanir", "karsilanir", "tamamlanir", "mounir", "yayinlanir", "yikanir", "tekrarlanir", "atanir", "bnir", "karasenir", "indüklenir", "zorlanir", "avenir", "erdenir", "kas-sinir", "utanir", "ültanir", "katlanir", "beyazpeynir", "sekillenir", "sonuçlanır", "dogranir", "nwanir", "faydalanir", "kilinir", "hizlanir", "yararlanir", "kutlanir", "saptanir", "nedenir", "kalinir", "ayarlanir", "kiskanir", "hastalanir", "suvenir", "yapilabilinir", "canlanir", "ekillenir", "hacklenir", "inir", "haslanir", "sonuclanir", "resetlenir", "beyenir", "açiklanir", "programming-sinir", "isinir", "odaklanir", "pionir", "çalinir", "penir", "tutuklanir", "lanmalı", "ögrenmeli", "düsünmeli", "ünmeli", "lanmaz", "osanmaz", "hoslanmaz", "üşenmez", "üşenmez", "üşenmez", "taşınmaz", "sınmaz", "yinmez", "hükmolunmaz", "bölünmez", "görünmez", "görüntülüyebilmek", "sen-ebilmek", "gorebilmek", "abilmek", "layabilmek", "ulasabilmek", "rabilmek", "saglayabilmek", "yaşabilmek", "tirebilmek", "tirebilmek", "tanılır", "sayılır", "olabılır", "kulanılır", "anlasılır", "lanılır", "acılır", "kimbilir", "labilir", "yapilir", "kullanilir", "yapilabilir", "kullanilabilir", "sayilir", "bilir", "anlasilir", "işbilir", "abilir", "ebilir", "nabilir", "ayrilir", "tirilir", "lanabilir", "ilir", "gorebilir", "guvenilir", "çikabilir", "alinabilir", "layabilir", "kabilir", "sayilabilir", "tartisilir", "yazilir", "rabilir", "açilir", "tirilebilir", "cikabilir", "lebilir", "atilir", "saglayabilir", "rilir", "katilir", "degisebilir", "acilir", "saglanabilir", "acabilir", "anlasilabilir", "degerlendirilir", "tirebilir", "anlatilir", "adlandirilir", "gorulebilir", "düsünülebilir", "olusabilir", "yabilir", "ulasabilir", "yaşabilir", "duyrulur", "buyrulur", "pulur", "gorulur", "olusturulur", "konusulur", "turulur", "rülür", "külür", "düsünülür", "büyülüyor", "görüntülüyor", "kötülüyor", "törpülüyor", "düsünülüyor", "acıldı", "imambayıldı", "rıldı", "tıldı", "ıldı", "anlasıldı", "degıldı", "dagıldı", "acıldı", "imambayıldı", "rıldı", "tıldı", "anlasıldı", "degıldı", "dagıldı", "degildi", "yapildi", "ayrildi", "deildi", "ögrenildi", "açildi", "azledildi", "atildi", "renildi", "cekildi", "rildi", "yazildi", "kullanildi", "lağvedildi", "anlasildi", "diildi", "kaldirildi", "Stem", "takildi", "birakildi", "gerçeklestirildi", "yayildi", "deyildi", "secildi", "yikildi", "çikarildi", "kapatildi", "kirildi", "ğildi", "baslatildi", "gonderildi", "deiildi", "yaratildi", "vahyedildi", "dagildi", "duyruldu", "buyruldu", "turuldu", "uldu", "meşguldu", "olusturuldu", "konusuldu", "özbuldu", "ruldu", "goruldu", "hasanboğuldu", "dokuldu", "rüldü", "ünüldü", "büründürüldü", "üldü", "türüldü", "satılmış", "geri-bıraktırılmış", "yaradılmış", "pılmış", "rılmış", "acılmış", "tılmış", "ılmış", "kulanılmış", "çokbilmiş", "vaadedilmiş", "vahyedilmiş", "akdedilmiş", "ehlileştirilmiş", "azledilmiş", "gasbedilmiş", "rilmiş", "degilmiş", "hasredilmiş", "neshedilmiş", "gaspedilmiş", "kasdedilmiş", "cekilmiş", "lağvedilmiş", "yapilmiş", "leştirilmiş", "deilmiş", "kavrulmuş", "kurtulmuş", "buyrulmuş", "karşılacak", "acılacak", "kulanılacak", "ılacak", "ailecek", "silecek", "labilecek", "ölçüşebilecek", "yapilabilecek", "sayilabilecek", "abilecek", "kullanilabilecek", "gerçeklestirilecek", "olusabilecek", "layabilecek", "alinabilecek", "nabilecek", "çikabilecek", "saglayabilecek", "rabilecek", "ebilecek", "cekilecek", "secilecek", "turulacak", "olusturulacak", "konusulacak", "ulacak", "vukubulacak", "azledilmişti", "duyrulmuştu", "sergiliyordu", "etkiliyordu", "sorguluyordu", "büyülüyordu", "nasılsa", "degilse", "kurulmali", "düsünülmeli", "yılmaz", "kaçınılmaz", "eryılmaz", "türkyılmaz", "özyılmaz", "yanılmaz", "hiçyılmaz", "kanyılmaz", "küçükyılmaz", "kacınılmaz", "yavuzyılmaz", "ınanılmaz", "inanılmaz", "akyılmaz", "yamanyılmaz", "büyükyılmaz", "ağaryılmaz", "tartısılmaz", "yenilmez", "eğilmez", "vazgecilmez", "bilmez", "cekilmez", "yorulmaz", "üzülmez"], NYe = ["sevi", "giyi", "gezi", "ayrı", "tıka", "ayrı", "sarı", "övü", "boşa", "besle", "kırı", "soyu", "yıka", "süsle", "içle", "besle", "tara", "çeki", "çözü", "hazırla", "üzü", "yıkı", "yıka", "kovu", "sıkı", "söyle", "kaçı", "kapa", "kası", "koru", "sarsı", "sığı", "kurula", "yakı", "yoru", "taşı", "uza", "takı", "yala", "atı", "iyileş", "sinirle", "dövü"];
Sp.nonPassivesFullForms = BYe;
Sp.nonPassiveStems = NYe;
var _k = {};
Object.defineProperty(_k, "__esModule", {
  value: !0
});
_k.default = function() {
  return ["diskontinuitas", "diskualifikasi", "diskriminatif", "diskriminator", "digitalisasi", "disinformasi", "disintegrasi", "diskriminasi", "disorientasi", "distabilitas", "diktatorial", "disinfektan", "disinsentif", "diskrepansi", "distributor", "diagnostik", "dialketika", "diktatoris", "dinosaurus", "diplomatik", "diplomatis", "direktorat", "dirgantara", "disimilasi", "diskontinu", "diskulpasi", "disparitas", "dispensasi", "distilator", "distingtif", "distribusi", "diversitas", "diafragma", "diagnosis", "diakritik", "diakronis", "dialektal", "dialektik", "dialektis", "digenesis", "digitalis", "dilematik", "diminutif", "dinamisme", "dingklang", "diplomasi", "dirgahayu", "disertasi", "disfungsi", "diskredit", "diskursif", "disleksia", "dislokasi", "dismutasi", "disonansi", "disosiasi", "dispenser", "disposisi", "distilasi", "distingsi", "divestasi", "diabeter", "diagonal", "dialisis", "diameter", "diaspora", "difraksi", "digestif", "diglosia", "dikotomi", "diktator", "dilatasi", "dimorfik", "dinamika", "dioksida", "diopsida", "diplomat", "direktur", "disentri", "disensus", "disiplin", "diskotek", "diskresi", "dispersi", "disrupsi", "distansi", "distorsi", "diagram", "difabel", "digdaya", "digital", "digresi", "diletan", "dimensi", "dinamik", "dinamis", "dinamit", "dinasti", "dioksin", "diorama", "diploma", "diptera", "direksi", "dirigen", "disagio", "disiden", "disjoki", "diskoid", "diskusi", "disuasi", "dividen", "diadem", "diakon", "dialek", "dialog", "diaper", "diayah", "diesel", "dilasi", "dinamo", "diniah", "diorit", "diare", "diode", "didih", "didik", "didis", "digit", "dikau", "dikir", "diksi", "dikte", "dinas", "dipan", "dirah", "direk", "disko", "dinda", "difusi", "dilema", "dingin", "diniah", "diorit", "dirham", "disket", "diskon", "divisi", "diftong", "difteri", "dinding", "dingkis", "dingkit", "dioksin", "diorama", "diploma", "dirigen", "disiden", "displin", "disjoki", "diskusi", "distrik", "dividen", "digestif", "diglosia", "dikotomi", "dingklik", "dioksida", "diplomat", "direktur", "disentri", "diskresi", "disorder", "dispersi", "distansi", "disrupsi", "divergen", "dingklang", "diplomasi", "dirgahayu", "disertasi", "disfungsi", "disilabik", "diskredit", "disleksia", "dislokasi", "disosiasi", "dispenser", "disposisi", "distilasi", "dinosaurus", "diplomatik", "diplomatis", "dirgantara", "disimilasi", "diskontinu", "disparitas", "distilator", "distribusi", "divergensi", "diversitas", "disabilitas", "disinfektan", "diskrepansi", "disintegrasi", "diskriminasi", "diskriminatif", "diskontinuitas", "diskualifikasi"];
};
var $k = {};
Object.defineProperty($k, "__esModule", {
  value: !0
});
$k.default = function() {
  return ["غودرت", "غودر", "غودرتما", "غودرا", "غودرتا", "غودرنا", "غودرتم", "غودرتنّ", "غودروا", "غودرن", "مغادر", "محثوث", "تجرى", "يجرى", "مجرى", "تبقى", "يبقى", "مبقى", "تجوهلت", "تجوهل", "تجوهلت", "تجوهلتما", "تجوهلا", "تجوهلتا", "تجوهلنا", "تجوهلتم", "تجوهلتنّ", "تجوهلوا", "تجوهلن", "متجاهل", "تشوورت", "تشوور", "تشوورتما", "تشوورا", "تشوورتا", "تشوورنا", "تشوورتم", "تشوورتنّ", "تشووروا", "تشوورن", "متشاور", "نوقشت", "نوقش", "نوقشتما", "نوقشا", "نوقشتا", "نوقشنا", "نوقشتم", "نوقشتنّ", "نوقشوا", "نوقشن", "مناقش", "معود", "ترتدى", "يرتدى", "نرتدى", "مرتدى", "تنتهى", "ينتهى", "ننتهى", "تجووزت", "تجووز", "تجووزتما", "تجووزا", "تجووزتا", "تجووزنا", "تجووزتم", "تجووزتنّ", "تجووزوا", "تجووزن", "حوولت", "حوول", "حوولتما", "حوولا", "حوولتا", "حوولنا", "حوولتم", "حوولتنّ", "حوولوا", "حوولن", "تعولجت", "تعولج", "تعولجتما", "تعولجا", "تعولجتا", "تعولجنا", "تعولجتم", "تعولجتنّ", "تعولجوا", "تعولجن", "متعالج", "أشير", "أشيرا", "أشيرتا", "أشيروا", "تشار", "تشارين", "يشار", "تشاران", "يشاران", "نشار", "تشارون", "يشارون", "جيء", "جيئت", "جيئا", "جيئتا", "جيئوا", "أجاء", "تجاء", "تجائين", "يجاء", "تجاءان", "يجاءان", "نجاء", "تجائون", "تجأن", "يجائون", "يجأن", "يوصى", "توصى", "نوصى", "موصى", "احتيج", "احتيجت", "احتيجا", "احتيجتا", "احتيجوا", "تعطى", "يعطى", "نعطى", "معطى", "تعوليت", "تعولي", "تعوليتما", "تعوليا", "تعوليتا", "تعولينا", "تعوليتم", "تعوليتنّ", "تعولوا", "تعولين", " شوركت", "شورك", "شوركتما", "شوركا", "شوركتا", "شوركنا", "شوركتم", "شوركتنّ", "شوركوا", "شوركن", "تتولّى", "يتولّى", "نتولّى", "زيد", "زيدت", "زيدا", "زيدتا", "زيدوا", "أزاد", "تزاد", "تزادين", "يزاد", "تزادان", "يزادان", "نزاد", "تزادون", "يزادون", "سوعدت", "سوعد", "سوعدتما", "سوعدا", "سوعدتا", "سوعدنا", "سوعدتم", "سوعدتنّ", "سوعدوا", "سوعدن", "رئيت", "رئي", "رئيتما", "رئيا", "رئيتا", "رئينا", "رئيتم", "رئيتنّ", "رؤوا", "رئين", "تفووضت", "تفووض", "تفووضتما", "تفووضا", "تفووضتا", "تفووضنا", "تفووضتم", "تفووضتنّ", "تفووضوا", "تفووضن", "تزويدت", "تزويد", "تزويدتما", "تزويدا", "تزويدتا", "تزويدنا", "تزويدتم", "تزويدتنّ", "تزويدوا", "تزويدن", "تتلقّى", "يتلقّى", "نتلقّى", "لوحظت", "لوحظ", "لوحظتما", "لوحظا", "لوحظتا", "لوحظنا", "لوحظتم", "لوحظتنّ", "لوحظوا", "لوحظن", "تسعى", "يسعى", "نسعى", "أوتيت", "أوتي", "أوتيتما", "أوتيا", "أوتيتا", "أوتينا", "أوتيتم", "أوتيتنّ", "أوتوا", "أوتين", "ووفقت", "ووفق", "ووفقتما", "ووفقا", "ووفقتا", "ووفقنا", "ووفقتم", "ووفقتنّ", "ووفقوا", "ووفقن", "إين", "إينت", "إينا", "إينتا", "إينوا", "أؤان", "تؤان", "تؤانين", "يؤان", "تؤانان", "يؤانان", "نؤان", "تؤانون", "يؤانون", "أوخذت", "أوخذ", "أوخذتما", "أوخذا", "أوخذتا", "أوخذنا", "أوخذتم", "أوخذتنّ", "أوخذوا", "أوخذن", "لهيت", "لهي", "لهيتما", "لهيا", "لهيتا", "لهينا", "لهيتم", "لهيتم", "لهوا", "لهين", "ألهى", "تلهى", "يلهى", "تلهى", "تلهيان", "يلهيان", "نلهى", "يلهين", "تتبقّى", "يتبقّى", "نتبقّى", "تنوولت", "تنوول", "تنوولتما", "تنوولا", "تنوولتا", "تنوولنا", "تنوولتم", "تنوولتنّ", "تنوولوا", "تنوولن", "تووجهت", "تووجه", "تووجهتما", "تووجها", "تووجهتا", "تووجهنا", "تووجهتم", "تووجهتنّ", "تووجهوا", "تووجهن", "تبودلت", "تبودل", "تبودلتما", "تبودلا", "تبودلتا", "تبودلنا", "تبودلتم", "تبودلتم", "تبودلوا", "تبودلن", "تعورضت", "تعورض", "تعورضتما", "تعورضا", "تعورضتا", "تعورضنا", "تعورضتم", "تعورضتنّ", "تعورضوا", "تعورضن", "تعورضن", "تعنى", "يعنى", "نعنى", "طولبت", "طولب", "طولبتما", "طولبا", "طولبتا", "طولبنا", "طولبتم", "طولبتنّ", "طولبوا", "طولبن", "قيم", "قيمت", "قيما", "قيمتا", "قيموا", "أقام", "تقام", "تقامين", "يقام", "تقامان", "يقامان", "نقام", "تقامون", "يقامون", "أنشئت", "أنشئ", "أنشئتما", "أنشئا", "أنشئتا", "أنشئنا", "أنشئتم", "أنشئتنّ", "أنشئوا", "أنشئن", "تنشأ", "تنشئين", "ينشأ", "تنشآن", "ينشآن", "ننشأ", "تنشأون", "ينشأون", "ينشأن", "تنشأن", "غطّي", "تغطّى", "يغطّى", "نغطّى", "قوتلت", "قوتل", "قوتلتما", "قوتلا", "قوتلتا", "قوتلنا", "قوتلنا", "قوتلتنّ", "قوتلوا", "قوتلن", "أسمى", "تسمى", "يسمى", "نسمى", "أوثرت", "أوثر", "أوثرتما", "أوثرا", "أوثرتا", "أوثرنا", "أوثرتم", "أوثرتنّ", "أوثروا", "أوثرن", "غنّي", "أغنّى", "تغنّى", "يغنّى", "نغنّى", "استفيد", "استفيدت", "استفيدا", "استفيدتا", "استفيدوا", "أستفاد", "تستفاد", "تستفادين", "يستفاد", "تستفادان", "يستفادان", "نستفاد", "تستفادون", "يستفادون", "أثير", "أثيرت", "أثيرا", "أثيرا", "أثيروا", "أثار", "تثار", "تثارين", "يثار", "تثاران", "يثاران", "نثار", "تثارون", "يثارون", "تدّعى", "يدّعى", "ندّعى", "عيش", "عيشت", "عيشا", "عيشتا", "عيشوا", "أعاش", "تعاش", "تعاشين", "يعاش", "تعاشان", "يعاشان", "نعاش", "تعاشون", "يعاشون", "ووجهت", "ووجه", "ووجهتما", "ووجها", "ووجهتا", "ووجهنا", "ووجهتم", "ووجهتنّ", "ووجهوا", "ووجهن", "دعيت", "دعي", "دعيا", "دعيتا", "دعينا", "دعيتم", "دعيتنّ", "دعوا", "دعين", "أدعى", "تدعى", "تدعين", "تدعين", "تدعيان", "يدعيان", "يدعين", "اختير", "اختيرت", "اختيرا", "اختيرتا", "اختيروا", "اخترن", "شوهدت", "شوهد", "شوهدتما", "شوهدا", "شوهدتا", "شوهدنا", "شوهدتم", "شوهدتنّ", "شوهدوا", "شوهدن", "أدّي", "أؤدّى", "تؤدّى", "يؤدّى", "نؤدّى", "أفيدت", "أفيدا", "أفيدتا", "أفيدوا", "يفادون", "تفادون", "نفاد", "تفادان", "يفادان", "تفاد", "يفاد", "تفادين", "أفاد", "تكوملت", "تكومل", "تكوملتما", "تكوملا", "تكوملتا", "تكوملنا", "تكوملتم", "تكوملتنّ", "تكوملوا", "تكوملن", "أهنّئ", "تهنّئ", "تهنّئين", "يهنّئ", "يهنّئ", "يهنّئان", "تهنّئان", "نهنّئ", "تهنّئون", "تهنّئن", "هنّئوا", "هنّئن", "أهنّأ", "تهنّأ", "يهنّأ", "تهنّآن", "نهنّأ", "تهنّأون", "تهنّأن", "يهنّأون", "يهنّأن", "سوهمت", "سوهم", "سوهمتما", "سوهما", "سوهمتا", "سوهمنا", "سوهمتم", "سوهمتنّ", "سوهموا", "سوهمن", "أرمى", "ترمى", "يرمى", "نرمى", "أبلغت"];
};
var jk = {};
Object.defineProperty(jk, "__esModule", {
  value: !0
});
jk.default = function() {
  return ["אכל", "אמר", "לקח", "נשא", "נתן", "קרא", "שלח", "שמע", "אהב", "אסף", "כרת", "כתב", "מצא", "פקד", "שמר", "שפט", "אבד", "אמן", "גאל", "דרש", "הרג", "חשב", "טמא", "יתר", "לכד", "ספר", "עזב", "קבץ", "קבר", "רדף", "שרף", "שאל", "שבר", "שחת", "שכח", "שלם", "שפך", "אסר", "בחר", "בלע", "בקע", "ברא", "דרך", "זרע", "חלק", "חנן", "חרש", "טהר", "למד", "מכר", "משל", "סגר", "סתר", "עזר", "ערך", "פרד", "פרש", "צפה", "קנה", "קרע", "רחץ", "רפא", "שבע", "שחט", "שמר", "תפש", "תקע", "אשם", "בגד", "בדל", "בחן", "גזל", "גמל", "גנב", "הרס", "זרק", "חבא", "חבש", "חלץ", "חצב", "חקר", "חרב", "חתם", "טמן", "טרף", "לקט", "מנע", "סלח", "סמך", "ספר", "עצר", "פגע", "פלט", "פרד", "פרץ", "פשט", "צפן", "קצר", "קשר", "רעש", "רצח", "שחק", "שטף", "אטם", "אלם", "ארג", "בצע", "גאל", "גדר", "גזז", "גזר", "גלח", "גרע", "דחה", "דקר", "חבל", "חרש", "חכה", "חפר", "חקק", "חרץ", "חשק", "טבח", "טבל", "טבע", "כבש", "כלא", "לחץ", "מחץ", "מסס", "משל", "נשא", "סחר", "סלל", "סער", "סקל", "סתם", "עטף", "עכר", "פרע", "פרק", "רמס", "שאב", "שאף", "שבר", "שכר", "שלל", "שלף", "שקל", "שקף", "שתל", "תכן", "תמך", "תעב", "שפכ‎", "דרכ‎", "ערכ‎", "סמכ‎", "תמכ‎", "נתנ", "אמנ", "חננ", "בחנ", "טמנ", "צפנ", "תכנ", "שלמ", "אשמ", "חתמ", "אטמ", "אלמ", "סתמ", "אספ", "רדפ", "שרפ", "טרפ", "שטפ", "עטפ", "שאפ", "שלפ", "שקפ", "קבצ", "רחצ", "חלצ", "פרצ", "חרצ", "לחצ", "מחצ"];
};
var xk = {};
Object.defineProperty(xk, "__esModule", {
  value: !0
});
xk.default = function() {
  return ["אכל", "דבר", "עבר", "שלח", "בקש", "ברך", "חזק", "חטא", "כתב", "נצל", "עבר", "פקד", "רום", "שמר", "אבד", "אמן", "בטח", "גדל", "הלל", "חלל", "חשב", "טמא", "יתר", "כבד", "כסה", "כפר", "לחם", "לכד", "נבא", "נגע", "סבב", "ספר", "קבץ", "קדש", "קרב", "שמח", "שבר", "שכן", "שלם", "שרת", "בער", "בקע", "ברא", "חלק", "חנן", "טהר", "כבס", "למד", "מרר", "מהר", "מלט", "נכר", "נצח", "פלל", "פרש", "צפה", "קלל", "רחם", "רחק", "רנן", "רפא", "שמר", "בדל", "בצר", "בשל", "גרש", "דמם", "זמר", "חבר", "מאן", "נשק", "נתץ", "נתק", "ספר", "ערב", "פשט", "צרף", "קדם", "קנא", "קצר", "קשר", "רגל", "שחק", "בצע", "ברר", "בשר", "גדר", "גלל", "דכא", "דשן", "חבל", "חבק", "חמם", "חפש", "חשק", "כהן", "כזב", "כנס", "מסס", "מעט", "מרר", "נגן", "נדב", "נהל", "נחש", "נער", "נפח", "נפץ", "נשך", "סכך", "סכן", "סקל", "עלל", "ענג", "עצב", "פאר", "פזר", "פצה", "פקח", "פרק", "פתה", "קבל", "קדד", "קצץ", "רמה", "רצץ", "רקע", "שבח", "שבר", "שנה", "שקר", "שקף", "תכן", "תעב", "ברכ‎", "נשכ‎", "סככ‎", "אמנ", "שכנ", "חננ", "רננ", "מאנ", "דשנ", "כהנ", "נגנ", "סכנ", "תכנ", "רומ", "לחמ", "שלמ", "רחמ", "דממ", "קדמ", "חממ", "צרפ", "שקפ", "קבצ", "נתצ", "קצצ", "רצצ", "נפצ"];
};
var Ak = {};
Object.defineProperty(Ak, "__esModule", {
  value: !0
});
Ak.default = function() {
  return ["אכל", "דבר", "עבר", "עמד", "קרא", "שמע", "זכר", "חזק", "חטא", "כתב", "מלך", "מצא", "נגד", "נפל", "עבר", "פקד", "רום", "שכב", "אבד", "אמן", "גדל", "חשב", "יטב", "כבד", "לבש", "קדש", "קרב", "שנא", "שאל", "שאר", "שבע", "שחת", "שכן", "שכח", "שלך", "שלם", "בער", "בקע", "ברא", "ברח", "דבק", "דרך", "זעק", "חלק", "חרם", "חרש", "כעס", "כשל", "מאס", "משל", "נבט", "נחל", "נצח", "סגר", "סתר", "ערך", "פרה", "פלא", "פלל", "פעל", "פרד", "פרש", "צלח", "צרר", "קלל", "קנה", "רחק", "רכב", "רעע", "שבע", "שכל", "שכם", "אשם", "בדל", "בהל", "בחן", "בשל", "גבה", "גנב", "זרק", "חלם", "חלף", "חרב", "חרד", "חרף", "חשך", "חתם", "טמן", "טרף", "כלם", "כנע", "כרע", "משך", "נהג", "סמך", "פחד", "פרד", "פרח", "פשט", "צדק", "צמח", "צפן", "קדם", "קצף", "קשב", "רבץ", "רגז", "רגל", "רחב", "רעש", "רשע", "שפל", "שקט", "ברר", "גבר", "געל", "טעם", "כזב", "כחש", "כנס", "לחץ", "מטר", "מעט", "מרד", "משל", "נגש", "נזל", "עלם", "עצב", "עשר", "פגש", "פרע", "צבא", "צמת", "קסם", "רבע", "רגע", "רעב", "רעם", "רקע", "שאב", "שבח", "שחר", "שכל", "שכר", "שען", "שקף", "שתל", "שלכ‎", "מלכ‎", "דרכ‎", "ערכ‎", "חשכ‎", "משכ‎", "סמכ‎", "אמנ", "שכנ", "בחנ", "טמנ", "צפנ", "שענ", "רומ", "שלמ", "חרמ", "שכמ", "אשמ", "חלמ", "חתמ", "כלמ", "קדמ", "עלמ", "טעמ", "חלפ", "חרפ", "טרפ", "קצפ", "שקפ", "רבצ", "לחצ"];
};
var Ek = {};
Object.defineProperty(Ek, "__esModule", {
  value: !0
});
const $T = ["ábrázol", "ad", "adományoz", "ajándékoz", "akadályoz", "alakít", "alapít", "álcáz", "áldoz", "alkalmaz", "alkot", "állít", "arat", "ás", "automatizál", "azonosít", "befolyásol", "bírál", "bizonyít", "bocsát", "bont", "bonyolít", "csatol", "definiál", "deklarál", "digitalizál", "dob", "dokumentál", "dolgoz", "finanszíroz", "fogalmaz", "foglal", "foglalkoztat", "fogyaszt", "fojt", "fokoz", "fontol", "fordít", "forgalmaz", "garantál", "gyakorl", "gyárt", "gyógyít", "hagy", "hajt", "hálál", "hallgat", "hamisít", "hárít", "használ", "határoz", "hidal", "hoz", "igazít", "igazol", "illusztrál", "importál", "indít", "ír", "irányít", "istáz", "javasol", "javít", "jutalmaz", "kattint", "kínál", "kombinál", "kompenzál", "komponál", "kritizál", "kutat", "lapoz", "listáz", "locsol", "magyaráz", "másol", "moderál", "mond", "motivál", "mozgósít", "mulaszt", "mutat", "nyomtat", "nyújt", "olvas", "oszt", "parancsol", "postáz", "pótl", "próbál", "produkál", "ragaszt", "rak", "ráz", "regisztrál", "reklámoz", "rombol", "ront", "ruház", "sajátít", "sorol", "strukturál", "sugárz", "szabályoz", "szakít", "szállít", "számít", "számláz", "számol", "szavaz", "szimbolizál", "szólít", "szorít", "talál", "támogat", "tanít", "tárol", "tart", "taszít", "távolít", "tilt", "tisztít", "továbbít", "tudósít", "tulajdonít", "újít", "utal", "utasít", "válaszol", "választ", "válogat", "vált", "változtat", "varázsol", "világít", "világosít", "vitat", "vizsgál", "von"], jT = ["beszél", "böngész", "bővít", "címz", "cserél", "derít", "díszít", "dönt", "egészít", "egyeztet", "egyszerűsít", "elégít", "emel", "említ", "engedélyez", "enyhít", "épít", "érint", "erősít", "ért", "értékel", "értelmez", "érzékeltet", "ev", "fedez", "fejleszt", "fejt", "fektet", "felejt", "feltev", "figyel", "fizet", "győz", "gyűjt", "hegeszt", "helyettesít", "helyez", "hirdet", "idéz", "igényl", "illeszt", "intéz", "ismer", "ítél", "ízesít", "jegyz", "jelenít", "jelent", "jelentkez", "jelöl", "kényszerít", "képvisel", "kérdez", "kerekít", "keresztel", "készít", "késztet", "kezel", "kivitelez", "kölcsönz", "köt", "követ", "közl", "közvetít", "küld", "különít", "küszöböl", "melegít", "mellékl", "mér", "nevez", "néz", "nyel", "nyer", "örökít", "őrz", "összegz", "összesít", "rendel", "rendez", "rögzít", "semmisít", "sürget", "szed", "szeg", "szennyez", "szerel", "szerkeszt", "szervez", "szigetel", "színez", "tekint", "telepít", "teljesít", "tenyészt", "teremt", "térít", "terjeszt", "tervez", "testesít", "tesztel", "tev", "tölt", "tömörít", "törl", "üldöz", "ültet", "végz", "veszélyeztet", "vet", "vetít", "vev", "vezet"];
Ek.default = {
  odikVerbStems1: $T,
  odikVerbStems2: jT,
  all: $T.concat(jT)
};
var Wd = {};
Object.defineProperty(Wd, "__esModule", {
  value: !0
});
Wd.odikSuffixes1 = ["ódom", "ódsz", "ódik", "ódunk", "ódtok", "ódnak", "ódtam", "ódtál", "ódott", "ódtunk", "ódtatok", "ódtak", "ódjak", "ódj", "ódjon", "ódjunk", "ódjatok", "ódjanak", "ódnék", "ódnál", "ódna", "ódnánk", "ódnátok", "ódnának"];
Wd.odikSuffixes2 = ["ődöm", "ődsz", "ődik", "ődünk", "ődtök", "ődnek", "ődtem", "ődtél", "ődött", "ődtünk", "ődtetek", "ődtek", "ődjek", "ődj", "ődjön", "ődjünk", "ődjetek", "ődjenek", "ődnék", "ődnél", "ődne", "dnénk", "ődnétek", "ődnének"];
Wd.verbPrefixes = ["abba", "agyon", "alul", "alá", "alább", "által", "át", "be", "bele", "belé", "benn", "egybe", "együtt", "el", "ellen", "elő", "előre", "észre", "fel", "föl", "félbe", "félre", "felül", "fölül", "fenn", "fönn", "hátra", "haza", "helyre", "hozzá", "ide", "jóvá", "keresztül", "ketté", "ki", "kölcsön", "körül", "körbe", "közbe", "közre", "közzé", "külön", "le", "létre", "meg", "mellé", "neki", "oda", "össze", "rá", "rajta", "széjjel", "szembe", "szerte", "szét", "tele", "teli", "tova", "tovább", "tönkre", "utol", "túl", "újjá", "újra", "utána", "végbe", "végig", "vissza"];
Object.defineProperty(hk, "__esModule", {
  value: !0
});
hk.default = function(a, e) {
  if (["ru", "sv"].includes(e))
    return wZe(a, e);
  if (e === "id")
    return hZe(a);
  if (e === "tr")
    return vZe(a);
  if (e === "ar")
    return kZe(a);
  if (e === "he")
    return _Ze(a);
  if (e === "hu")
    return $Ze(a);
};
var UYe = I, HYe = se, Ws = li(HYe), VYe = bk, KYe = li(VYe), GYe = vk, YYe = li(GYe), ZYe = kk, XYe = li(ZYe), xT = Sp, JYe = _k, QYe = li(JYe), aZe = $k, eZe = li(aZe), tZe = jk, iZe = li(tZe), nZe = xk, rZe = li(nZe), sZe = Ak, oZe = li(sZe), dZe = Ek, AT = li(dZe), ul = Wd;
function li(a) {
  return a && a.__esModule ? a : { default: a };
}
const lZe = (0, KYe.default)().all, cZe = (0, YYe.default)().all, ET = (0, XYe.default)(), uZe = "di", pZe = (0, QYe.default)(), mZe = (0, eZe.default)(), gZe = (0, iZe.default)(), zZe = (0, rZe.default)(), fZe = (0, oZe.default)(), yZe = function(e, t) {
  return (0, UYe.filter)((0, Ws.default)(e), function(i) {
    return t.includes(i.toLocaleLowerCase());
  });
}, wZe = function(e, t) {
  let i = [];
  switch (t) {
    case "ru":
      i = lZe;
      break;
    case "sv":
      i = cZe;
      break;
  }
  return yZe(e, i).length !== 0;
}, hZe = function(e) {
  const t = (0, Ws.default)(e);
  let i = t.filter((n) => n.length > 4);
  if (i = i.filter((n) => n.startsWith(uZe)), i.length === 0)
    return !1;
  for (const n of pZe)
    i = i.filter((r) => !r.startsWith(n));
  return i = i.filter(function(n) {
    let r = !0;
    const s = t.indexOf(n);
    return t[s - 1] === "untuk" && (r = !1), r;
  }), i.length !== 0;
}, bZe = function(e, t, i) {
  return i.filter((n) => e.some((r) => t.some(function(s) {
    return !new RegExp("^" + r + s + "$").test(n);
  })));
}, vZe = function(e) {
  let i = (0, Ws.default)(e).filter((n) => n.length > 5);
  return i = i.filter((n) => !xT.nonPassivesFullForms.includes(n)), i = bZe(xT.nonPassiveStems, ET, i), i.some((n) => ET.some((r) => n.endsWith(r)));
}, kZe = function(e) {
  const t = "و", i = (0, Ws.default)(e), n = [];
  for (let r of i) {
    r.startsWith(t) && (r = r.slice(1));
    let s = -1;
    r.length >= 2 && (s = r[1].search("ُ")), (s !== -1 || mZe.includes(r)) && n.push(r);
  }
  return n.length !== 0;
}, ST = function(e, t, i) {
  return t.some((n) => i.some(function(r) {
    return new RegExp("^" + r.prefix + n + r.suffix + "$").test(e);
  }));
}, _Ze = function(e) {
  const t = (0, Ws.default)(e);
  for (const i of t) {
    if (ST(i, gZe, [{ prefix: "(נ|אי|תי|הי|יי|ני|להי)", suffix: "" }, { prefix: "(תי|הי)", suffix: "(י|ו|נה)" }, { prefix: "נ", suffix: "(ים|ת|ות|תי|ה|נו|תם|תן|ו)" }, { prefix: "יי", suffix: "ו" }]))
      return !0;
    const s = [{ prefix: "(מ|א|ת|י|נ)", suffix: "" }, { prefix: "תי", suffix: "נה" }, { prefix: "מ", suffix: "(ת|ים|ות)" }, { prefix: "ת", suffix: "(י|ו|נה)" }, { prefix: "י", suffix: "ו" }, { prefix: "", suffix: "(תי|ת|ה|נו|תם|תן|ו)" }, { prefix: "", suffix: "" }], o = "ו";
    if (zZe.some((m) => s.some(function(w) {
      return new RegExp("^" + w.prefix + m[0] + o + m[1] + m[2] + w.suffix + "$").test(i);
    })) || ST(i, fZe, [{ prefix: "(מו|הו|או|תו|יו|נו)", suffix: "" }, { prefix: "מו", suffix: "(ת|ים|ות)" }, { prefix: "הו", suffix: "(תי|ת|ית|ה|נו|תם|תן|ו)" }, { prefix: "תו", suffix: "(ו|נה|י)" }, { prefix: "יו", suffix: "ו" }]))
      return !0;
  }
  return !1;
}, qT = function(e, t, i, n) {
  return t.some((r) => n.some(function(s) {
    const o = r + s;
    if (e.endsWith(o)) {
      const d = e.slice(0, e.indexOf(o));
      return d === "" || i.includes(d);
    }
  }));
}, $Ze = function(e) {
  const t = (0, Ws.default)(e), i = AT.default.odikVerbStems1, n = AT.default.odikVerbStems2;
  for (const r of t)
    if (qT(r, i, ul.verbPrefixes, ul.odikSuffixes1) || qT(r, n, ul.verbPrefixes, ul.odikSuffixes2))
      return !0;
  return !1;
};
var Sk = {}, qk = {};
Object.defineProperty(qk, "__esModule", {
  value: !0
});
qk.default = function(a, e, t = !0) {
  var i = t ? 1 : 0;
  if ((0, ef.isEmpty)(a))
    return !1;
  var n = [];
  return (0, ef.forEach)(a, function(r) {
    var s = r.index + r.match.length + i;
    n.push(s);
  }), (0, ef.includes)(n, e);
};
var ef = I, Pk = {};
Object.defineProperty(Pk, "__esModule", {
  value: !0
});
Pk.default = function(a, e) {
  if ((0, tf.isEmpty)(a))
    return !1;
  var t = e.index + e.match.length, i = [];
  return (0, tf.forEach)(a, function(n) {
    i.push(n.index);
  }), (0, tf.includes)(i, t);
};
var tf = I, Tk = {}, jt = {};
Object.defineProperty(jt, "__esModule", {
  value: !0
});
var ki = function(e, t, i) {
  this._sentencePartText = e, this._auxiliaries = t, this._locale = i, this._isPassive = !1;
};
ki.prototype.getSentencePartText = function() {
  return this._sentencePartText;
};
ki.prototype.isPassive = function() {
  return this._isPassive;
};
ki.prototype.getAuxiliaries = function() {
  return this._auxiliaries;
};
ki.prototype.getLocale = function() {
  return this._locale;
};
ki.prototype.setPassive = function(a) {
  this._isPassive = a;
};
ki.prototype.serialize = function() {
  return {
    _parseClass: "SentencePart",
    sentencePartText: this._sentencePartText,
    auxiliaries: this._auxiliaries,
    locale: this._locale,
    isPassive: this._isPassive
  };
};
ki.parse = function(a) {
  const e = new ki(a.sentencePartText, a.auxiliaries, a.locale);
  return e.setPassive(a.isPassive), e;
};
jt.default = ki;
Object.defineProperty(Tk, "__esModule", {
  value: !0
});
var jZe = jt, uB = pB(jZe), xZe = oi, AZe = pB(xZe);
function pB(a) {
  return a && a.__esModule ? a : { default: a };
}
var Rk = function(e, t, i) {
  uB.default.call(this, e, t, i);
};
Pa.inherits(Rk, uB.default);
Rk.prototype.getParticiples = function() {
  return (0, AZe.default)(this.getSentencePartText(), this.getAuxiliaries(), "en");
};
Tk.default = Rk;
var Ok = {};
Object.defineProperty(Ok, "__esModule", {
  value: !0
});
Ok.default = function() {
  return ["to", "which", "who", "whom", "that", "whose", "after", "although", "as", "because", "before", "even if", "even though", "how", "if", "in order that", "inasmuch", "lest", "once", "provided", "since", "so that", "than", "though", "till", "unless", "until", "when", "whenever", "where", "whereas", "wherever", "whether", "while", "why", "by the time", "supposing", "no matter", "how", "what", "won't", "do", "does", "–", "and", "but", "or"];
};
var Mk = {};
Object.defineProperty(Mk, "__esModule", {
  value: !0
});
var EZe = jt, mB = gB(EZe), SZe = oi, qZe = gB(SZe);
function gB(a) {
  return a && a.__esModule ? a : { default: a };
}
var Ck = function(e, t) {
  mB.default.call(this, e, t, "fr_FR");
};
Pa.inherits(Ck, mB.default);
Ck.prototype.getParticiples = function() {
  return (0, qZe.default)(this.getSentencePartText(), this.getAuxiliaries(), "fr");
};
Mk.default = Ck;
var Lk = {};
Object.defineProperty(Lk, "__esModule", {
  value: !0
});
Lk.default = function() {
  return ["être", "d'être", "suis", "es", "est", "sommes", "êtes", "sont", "n'est", "n'es", "n'êtes", "été", "j'étais", "étais", "était", "étions", "étiez", "étaient", "c'était", "n'étais", "n'était", "n'étions", "n'étiez", "n'étaient", "serai", "seras", "sera", "serons", "serez", "seront", "sois", "soit", "soyons", "soyez", "soient", "fusse", "fusses", "fût", "fussions", "fussiez", "fussent", "serais", "serait", "serions", "seriez", "seraient", "fus", "fut", "fûmes", "fûtes", "furent", "suis-je", "es-tu", "est-il", "est-elle", "est-on", "sommes-nous", "êtes-vous", "sont-ils", "sont-elles", "est-ce", "étais-je", "étais-tu", "était-il", "était-elle", "était-on", "était-ce", "étions-nous", "étiez-vous", "étaient-ils", "étaient-elles", "serai-je", "seras-tu", "sera-t-il", "sera-t-elle", "sera-t-on", "sera-ce", "serons-nous", "serez-vous", "seront-ils", "seront-elles", "serais-je", "serais-tu", "serait-il", "serait-elle", "serait-on", "serait-ce", "serions-nous", "seriez-vous", "seraient-ils", "seraient-elles", "fus-je", "fus-tu", "fut-il", "fut-elle", "fut-on", "fut-ce", "fûmes-nous", "fûtes-vous", "furent-ils", "furent-elles"];
};
var Ik = {};
Object.defineProperty(Ik, "__esModule", {
  value: !0
});
Ik.default = function() {
  return ["et", "ou", "car", "or", "puisque", "puisqu'il", "puisqu'ils", "puisqu'elle", "puisqu'elles", "puisqu'un", "puisqu'une", "puisqu'on", "quand", "lorsque", "lorsqu'il", "lorsqu'elle", "lorsqu'ils", "lorsqu'elles", "lorsqu'on", "lorsqu'un", "lorsqu'une", "quoique", "quoiqu'il", "quoiqu'ils", "quoiqu'elle", "quoiqu'elles", "quoiqu'on", "quoiqu'un", "quoiqu'une", "qu'elle", "qu'il", "qu'ils", "qu'elles", "qu'on", "qu'un", "qu'une", "si", "s'ils", "s'il", "quand bien même", "pourquoi", "après", "avant", "afin de", "compte tenu de", "pour ne pas dire", "sinon", "une fois", "sitôt", "dont", "lequel", "laquelle", "lesquels", "lesquelles", "auquel", "auxquels", "auxquelles", "duquel", "desquels", "desquelles", "qui", "où", "d'où", ":", "allé", "entré", "resté", "retombé", "apparu", "réapparu", "devenu", "redevenu", "intervenu", "provenu", "resurvenu", "survenu", "allés", "entrés", "restés", "retombés", "apparus", "réapparus", "devenus", "redevenus", "intervenus", "provenus", "resurvenus", "survenus", "allée", "entrée", "restée", "retombée", "apparue", "réapparue", "devenue", "redevenue", "intervenue", "provenue", "resurvenue", "survenue", "allées", "entrées", "restées", "retombées", "apparues", "réapparues", "devenues", "redevenues", "intervenues", "provenues", "resurvenues", "survenues"];
};
var Wk = {};
Object.defineProperty(Wk, "__esModule", {
  value: !0
});
var PZe = jt, zB = fB(PZe), TZe = oi, RZe = fB(TZe);
function fB(a) {
  return a && a.__esModule ? a : { default: a };
}
var Fk = function(e, t) {
  zB.default.call(this, e, t, "es_ES");
};
Pa.inherits(Fk, zB.default);
Fk.prototype.getParticiples = function() {
  return (0, RZe.default)(this.getSentencePartText(), this.getAuxiliaries(), "es");
};
Wk.default = Fk;
var Dk = {};
Object.defineProperty(Dk, "__esModule", {
  value: !0
});
Dk.default = function() {
  return ["ser", "soy", "eres", "es", "somos", "sois", "son", "fui", "fuiste", "fue", "fuimos", "fuisteis", "fueron", "era", "eras", "era", "éramos", "erais", "eran", "sería", "serías", "seríamos", "seríais", "serían", "seré", "serás", "será", "seremos", "seréis", "serán", "seas", "sea", "seamos", "seáis", "sean", "fuera", "fueras", "fuéramos", "fuerais", "fueran", "fuese", "fueses", "fuésemos", "fueseis", "fuesen", "fuere", "fueres", "fuéremos", "fuereis", "fueren", "sé", "sed", "siendo", "sido"];
};
var Bk = {};
Object.defineProperty(Bk, "__esModule", {
  value: !0
});
Bk.default = function() {
  return ["pero", "ora", "aunque", "aun", "mientras", "porque", "apenas", "si", "antes", "después", "cómo", "como", "empero", "que", "cuanto", "cuando", "cual", "cuales", "quién", "quien", "quienes", "dónde", "adónde", "cuyo", "cuyos", "cuya", "cuyas"];
};
var Nk = {};
Object.defineProperty(Nk, "__esModule", {
  value: !0
});
var OZe = jt, yB = wB(OZe), MZe = oi, CZe = wB(MZe);
function wB(a) {
  return a && a.__esModule ? a : { default: a };
}
var Uk = function(e, t) {
  yB.default.call(this, e, t, "pt_PT");
};
Pa.inherits(Uk, yB.default);
Uk.prototype.getParticiples = function() {
  return (0, CZe.default)(this.getSentencePartText(), this.getAuxiliaries(), "pt");
};
Nk.default = Uk;
var Hk = {};
Object.defineProperty(Hk, "__esModule", {
  value: !0
});
Hk.default = function() {
  return ["sou", "és", "é", "somos", "sois", "são", "era", "eras", "era", "éramos", "éreis", "eram", "serei", "serás", "será", "seremos", "sereis", "serão", "sido", "foste", "foi", "fomos", "fostes", "fora", "foras", "fôramos", "fôreis", "foram", "seja", "sejas", "seja", "sejamos", "sejais", "sejam", "fui", "fosse", "fosses", "fosse", "fôssemos", "fôsseis", "fossem", "for", "fores", "for", "formos", "fordes", "forem", "seria", "serias", "seria", "seríamos", "seríeis", "seriam", "ser", "seres", "ser", "sermos", "serdes", "serem"];
};
var Vk = {};
Object.defineProperty(Vk, "__esModule", {
  value: !0
});
Vk.default = function() {
  return ["que ", "como", "e", "nem", "se", "caso", "conforme", "consoante", "porque", "pois", "segundo ", "enquanto", "embora", "conquanto", "quanto menos", "quanto mais", "quando", "mal ", "apenas", "ora", "seja", "quer", "já", "logo", "portanto", "por isso", "pois", "рог conseguinte", "ou seja ", "isto é", "quer dizer", "a saber", "ou melhor", "mas", "também", "sim", "porém", "contudo", "senão", "todavia", "mas ainda", "no entanto", "entretanto"];
};
var Kk = {};
Object.defineProperty(Kk, "__esModule", {
  value: !0
});
var LZe = jt, hB = bB(LZe), IZe = oi, WZe = bB(IZe);
function bB(a) {
  return a && a.__esModule ? a : { default: a };
}
var Gk = function(e, t) {
  hB.default.call(this, e, t, "it_IT");
};
Pa.inherits(Gk, hB.default);
Gk.prototype.getParticiples = function() {
  return (0, WZe.default)(this.getSentencePartText(), this.getAuxiliaries(), "it");
};
Kk.default = Gk;
var Yk = {};
Object.defineProperty(Yk, "__esModule", {
  value: !0
});
Yk.default = function() {
  return ["fui", "fu", "fosti", "fummo", "foste", "furono", "stato", "stati", "stata", "state", "venire", "vengo", "vieni", "viene", "veniamo", "venite", "vengono", "venivo", "venivi", "veniva", "venivamo", "venivate", "venivano", "verrò", "verrai", "verrà", "verremo", "verrete", "verranno", "venni", "venisti", "venne", "venimmo", "veniste", "vennero", "verrei", "verresti", "verrebbe", "verremmo", "verreste", "verrebbero", "venga", "veniamo", "venite", "vengano", "veniate", "venissi", "venisse", "venissimo", "veniste", "venissero", "andare", "vado", "vai", "va", "andiamo", "andate", "vanno", "andavo", "andavi", "andava", "andavamo", "andavate", "andavano", "vada", "andiate", "andante", "andato", "andassi", "andasse", "andassimo", "andaste", "andassero", "andai", "andasti", "andò", "andammo", "andarono", "andrò", "andrai", "andrà", "andremo", "andrete", "andranno", "andrei", "andresti", "andrebbe", "andremmo", "andreste", "andrebbero", "vadano", "andando"];
};
var Zk = {};
Object.defineProperty(Zk, "__esModule", {
  value: !0
});
Zk.default = function() {
  return ["a condizione che", "a meno che non", "a patto che", "a seconda che", "acché", "affinché", "al fine di", "allorché", "allorquando", "anche se", "anziché", "avvegnaché", "basta que", "benché", "beninteso que", "chi", "cui", "dal momento che", "dopo che", "dove", "finché non", "fintantoché", "i quali", "il quale", "in caso", "in modo che", "la quale", "le quali", "malgrado", "mentre", "nel caso in cui", "nel eventualità che", "nonostante che", "ogni volta che", "per il fatto che", "perché", "piuttosto che", "piuttosto di", "poiche", "prima che", "purché", "qualora", "quando", "quantunque", "quello che", "sebbene", "senza che", "siccome", "tranne che", "una volta che"];
};
Object.defineProperty(Sk, "__esModule", {
  value: !0
});
Sk.default = function(a, e) {
  return XXe(a, e);
};
var FZe = De, Xk = de(FZe), DZe = be, oc = de(DZe), BZe = Ke, NZe = Wi, gt = de(NZe), UZe = hp, Jk = de(UZe), HZe = qk, vB = de(HZe), VZe = Pk, KZe = de(VZe), bi = I, GZe = Tk, YZe = de(GZe), ZZe = Yc, XZe = de(ZZe), JZe = Ok, QZe = de(JZe), aXe = Mk, eXe = de(aXe), tXe = Lk, iXe = de(tXe), nXe = Ik, rXe = de(nXe), sXe = Wk, oXe = de(sXe), dXe = Dk, lXe = de(dXe), cXe = Bk, uXe = de(cXe), pXe = Nk, mXe = de(pXe), gXe = Hk, zXe = de(gXe), fXe = Vk, yXe = de(fXe), wXe = Kk, hXe = de(wXe), bXe = Yk, vXe = de(bXe), kXe = Zk, _Xe = de(kXe);
function de(a) {
  return a && a.__esModule ? a : { default: a };
}
const Sl = Xk.default.getIndicesByWordList, $Xe = Xk.default.filterIndices, jXe = Xk.default.sortIndices, PT = (0, XZe.default)().all, xXe = (0, QZe.default)(), AXe = /([:,]|('ll)|('ve))(?=[ \n\r\t'"+\-»«‹›<>])/ig, EXe = /\w+ing(?=$|[ \n\r\t.,'()"+\-;!?:/»«‹›<>])/ig, SXe = ["king", "cling", "ring", "being", "thing", "something", "anything"], TT = (0, iXe.default)(), qXe = (0, rXe.default)(), PXe = /(,)(?=[ \n\r\t'"+\-»«‹›<>])/ig, TXe = ["le", "la", "les", "une", "l'un", "l'une"], RXe = ["se", "me", "te", "s'y", "m'y", "t'y", "nous nous", "vous vous"], OXe = (0, gt.default)(RXe), MXe = ["c'", "s'", "peut-"], CXe = (0, gt.default)(MXe, !0), RT = (0, lXe.default)(), LXe = (0, uXe.default)(), IXe = ["el", "la", "los", "las", "una"], OT = (0, zXe.default)(), WXe = (0, yXe.default)(), FXe = ["o", "a", "os", "as", "um", "ums", "uma", "umas"], MT = (0, vXe.default)(), DXe = (0, _Xe.default)(), BXe = ["il", "i", "la", "le", "lo", "gli", "uno", "una"], NXe = ["mi", "ti", "si", "ci", "vi"], UXe = (0, gt.default)(NXe), nf = /([:,])(?=[ \n\r\t'"+\-»«‹›<>])/ig, dn = {
  en: {
    stopwords: xXe,
    auxiliaryRegex: (0, gt.default)(PT),
    SentencePart: YZe.default,
    auxiliaries: PT,
    stopCharacterRegex: AXe
  },
  fr: {
    stopwords: qXe,
    auxiliaryRegex: (0, gt.default)(TT),
    SentencePart: eXe.default,
    auxiliaries: TT,
    stopCharacterRegex: PXe,
    followingAuxiliaryExceptionRegex: (0, gt.default)(TXe),
    directPrecedenceExceptionRegex: OXe
  },
  es: {
    stopwords: LXe,
    auxiliaryRegex: (0, gt.default)(RT),
    SentencePart: oXe.default,
    auxiliaries: RT,
    stopCharacterRegex: nf,
    followingAuxiliaryExceptionRegex: (0, gt.default)(IXe)
  },
  pt: {
    stopwords: WXe,
    auxiliaryRegex: (0, gt.default)(OT),
    SentencePart: mXe.default,
    auxiliaries: OT,
    stopCharacterRegex: nf,
    followingAuxiliaryExceptionRegex: (0, gt.default)(FXe)
  },
  it: {
    stopwords: DXe,
    auxiliaryRegex: (0, gt.default)(MT),
    SentencePart: hXe.default,
    auxiliaries: MT,
    stopCharacterRegex: nf,
    followingAuxiliaryExceptionRegex: (0, gt.default)(BXe),
    directPrecedenceExceptionRegex: UXe
  }
}, HXe = function(e) {
  const t = e.match(EXe) || [];
  return (0, bi.filter)(t, function(i) {
    return !(0, bi.includes)(SXe, (0, oc.default)(i));
  });
}, VXe = function(e, t) {
  const i = dn[t].stopCharacterRegex;
  let n;
  const r = [];
  for (i.lastIndex = 0; (n = i.exec(e)) !== null; )
    r.push({
      index: n.index,
      match: n[0]
    });
  return r;
}, my = function(e, t, i) {
  const n = (0, Jk.default)(e, dn[i].directPrecedenceExceptionRegex);
  return (0, bi.forEach)(t, function(r) {
    (0, vB.default)(n, r.index) && (t = t.filter(function(s) {
      return s.index !== r.index;
    }));
  }), t;
}, KXe = function(e, t, i) {
  const n = dn[i].followingAuxiliaryExceptionRegex, r = (0, Jk.default)(e, n);
  return (0, bi.forEach)(t, function(s) {
    (0, KZe.default)(r, s) && (t = t.filter(function(o) {
      return o.index !== s.index;
    }));
  }), t;
}, GXe = function(e, t) {
  const i = (0, Jk.default)(e, CXe);
  return (0, bi.forEach)(t, function(n) {
    (0, vB.default)(i, n.index, !1) && (t = t.filter(function(r) {
      return r.index !== n.index;
    }));
  }), t;
}, YXe = function(e, t) {
  e = e.toLocaleLowerCase();
  const i = dn[t].stopwords, n = dn[t].auxiliaries;
  let r = Sl(n, e);
  const s = Sl(i, e), o = VXe(e, t);
  let d;
  switch (t) {
    case "fr":
      r = my(e, r, "fr"), r = GXe(e, r), d = [].concat(r, s, o);
      break;
    case "es":
      d = [].concat(r, s, o);
      break;
    case "pt":
      d = [].concat(r, s, o);
      break;
    case "it":
      r = my(e, r, "it"), d = [].concat(r, s, o);
      break;
    case "en":
    default:
      var c = HXe(e), p = Sl(c, e);
      d = [].concat(r, s, p, o);
      break;
  }
  return d = $Xe(d), jXe(d);
}, ZXe = function(e, t) {
  const i = dn[t].auxiliaryRegex, n = e.match(i) || [];
  switch (t) {
    case "fr":
    case "es":
    case "pt":
    case "it":
      var r = Sl(n, e);
      (t === "fr" || t === "it") && (r = my(e, r, t)), r = KXe(e, r, t);
      var s = [];
      return (0, bi.forEach)(r, function(o) {
        s.push(o.match);
      }), (0, bi.map)(s, function(o) {
        return (0, oc.default)(o);
      });
    case "en":
    default:
      return (0, bi.map)(n, function(o) {
        return (0, oc.default)(o);
      });
  }
}, XXe = function(e, t) {
  const i = [], n = dn[t].auxiliaryRegex, r = dn[t].SentencePart;
  if (e = (0, BZe.normalizeSingle)(e), e.match(n) === null)
    return i;
  const s = YXe(e, t);
  for (let o = 0; o < s.length; o++) {
    let d = e.length;
    (0, bi.isUndefined)(s[o + 1]) || (d = s[o + 1].index);
    const c = (0, oc.default)(e.substr(s[o].index, d - s[o].index)), p = ZXe(c, t);
    p.length !== 0 && i.push(new r(c, p));
  }
  return i;
};
var Qk = {}, a0 = {};
Object.defineProperty(a0, "__esModule", {
  value: !0
});
var JXe = jt, kB = _B(JXe), QXe = _p, aJe = _B(QXe);
function _B(a) {
  return a && a.__esModule ? a : { default: a };
}
var e0 = function(e, t) {
  kB.default.call(this, e, t, "de_DE");
};
Pa.inherits(e0, kB.default);
e0.prototype.getParticiples = function() {
  return (0, aJe.default)(this.getSentencePartText(), this.getAuxiliaries());
};
a0.default = e0;
var t0 = {};
Object.defineProperty(t0, "__esModule", {
  value: !0
});
t0.default = function() {
  return [":", "aber", "als", "bevor", "bis", "da", "damit", "daß", "dass", "denn", "doch", "ehe", "falls", "gleichwohl", "indem", "indes", "indessen", "insofern", "insoweit", "nachdem", "nun", "ob", "obgleich", "obschon", "obwohl", "obzwar", "oder", "seitdem", "sobald", "sodass", "sofern", "solange", "sondern", "sooft", "soviel", "soweit", "sowie", "trotz", "und", "ungeachtet", "waehrend", "während", "weil", "welche", "welchem", "welchen", "welcher", "welches", "wem", "wen", "wenn", "wenngleich", "wennschon", "wer", "wes", "wessen", "wie", "wiewohl", "wohingegen", "zumal"];
};
var i0 = {};
Object.defineProperty(i0, "__esModule", {
  value: !0
});
var eJe = jt, $B = jB(eJe), tJe = oi, iJe = jB(tJe);
function jB(a) {
  return a && a.__esModule ? a : { default: a };
}
var n0 = function(e, t) {
  $B.default.call(this, e, t, "nl_NL");
};
Pa.inherits(n0, $B.default);
n0.prototype.getParticiples = function() {
  return (0, iJe.default)(this.getSentencePartText(), this.getAuxiliaries(), "nl");
};
i0.default = n0;
var r0 = {};
Object.defineProperty(r0, "__esModule", {
  value: !0
});
r0.default = function() {
  return ["alhoewel", "als", "dan", "doordat", "hoewel", "hoezeer", "indien", "mits", "naargelang", "naarmate", "nadat", "ofschoon", "omdat", "opdat", "tenzij", "toen", "voordat", "voorzover", "wanneer", "zoals", "zodat", "zodra", "zolang", "wie", "wiens", "wier", "welke", "welk"];
};
var s0 = {};
Object.defineProperty(s0, "__esModule", {
  value: !0
});
var nJe = jt, xB = AB(nJe), rJe = oi, sJe = AB(rJe);
function AB(a) {
  return a && a.__esModule ? a : { default: a };
}
const o0 = function(e, t) {
  xB.default.call(this, e, t, "pl_PL");
};
Pa.inherits(o0, xB.default);
o0.prototype.getParticiples = function() {
  return (0, sJe.default)(this.getSentencePartText(), this.getAuxiliaries(), "pl");
};
s0.default = o0;
var d0 = {};
Object.defineProperty(d0, "__esModule", {
  value: !0
});
d0.default = function() {
  return ["a", "aby", "albo", "albowiem", "ale", "bo", "bowiem", "czy", "gdy", "gdyby", "gdyż", "iż", "jeśli", "jeżeli", "lub", "ponieważ", "zanim", "żeby", "który", "która", "które", "którzy", "którego", "której", "których", "któremu", "którym", "którą", "którymi", "że"];
};
var l0 = {};
Object.defineProperty(l0, "__esModule", {
  value: !0
});
var oJe = jt, EB = SB(oJe), dJe = Ap, lJe = SB(dJe);
function SB(a) {
  return a && a.__esModule ? a : { default: a };
}
const c0 = function(e, t, i) {
  EB.default.call(this, e, t, i);
};
Pa.inherits(c0, EB.default);
c0.prototype.getParticiples = function() {
  return (0, lJe.default)(this.getSentencePartText(), this.getAuxiliaries(), "hu");
};
l0.default = c0;
var u0 = {};
Object.defineProperty(u0, "__esModule", {
  value: !0
});
u0.default = function() {
  return ["a", "ahogy", "ahol", "aki", "akik", "akkor", "alatt", "által", "általában", "amely", "amelyek", "amelyekben", "amelyeket", "amelyet", "amelynek", "ami", "amit", "amolyan", "amíg", "amikor", "át", "abban", "ahhoz", "annak", "arra", "arról", "az", "azok", "azon", "azt", "azzal", "azért", "aztán", "azután", "azonban", "bár", "be", "belül", "benne", "cikk", "cikkek", "cikkeket", "csak", "de", "e", "eddig", "egész", "egy", "egyes", "egyetlen", "egyéb", "egyik", "egyre", "ekkor", "el", "elég", "ellen", "elé", "először", "előtt", "első", "én", "éppen", "ebben", "ehhez", "emilyen", "ennek", "erre", "ez", "ezt", "ezek", "ezen", "ezzel", "ezért", "és", "fel", "felé", "hanem", "hiszen", "hogy", "hogyan", "igen", "így", "illetve", "ill.", "ill", "ilyen", "ilyenkor", "ismét", "itt", "jó", "jól", "jobban", "kell", "kellett", "keresztül", "keressünk", "ki", "kívül", "között", "közül", "legalább", "lehet", "lehetett", "legyen", "lenne", "lenni", "lesz", "lett", "maga", "magát", "majd", "majd", "már", "más", "másik", "meg", "még", "mellett", "mert", "mely", "melyek", "mi", "mit", "míg", "miért", "milyen", "mikor", "minden", "mindent", "mindenki", "mindig", "mint", "mintha", "mivel", "most", "nagy", "nagyobb", "nagyon", "ne", "néha", "nekem", "neki", "nem", "néhány", "nélkül", "nincs", "olyan", "ott", "össze", "ő", "ők", "őket", "pedig", "persze", "rá", "s", "saját", "sem", "semmi", "sok", "sokat", "sokkal", "számára", "szemben", "szerint", "szinte", "talán", "tehát", "teljes", "tovább", "továbbá", "több", "úgy", "ugyanis", "új", "újabb", "újra", "után", "utána", "utolsó", "vagy", "vagyis", "valaki", "valami", "valamint", "való", "vissza", "viszont"];
};
Object.defineProperty(Qk, "__esModule", {
  value: !0
});
var dc = I, cJe = Wi, Xi = it(cJe), uJe = be, qB = it(uJe), pJe = a0, mJe = it(pJe), gJe = gs, zJe = it(gJe), fJe = t0, yJe = it(fJe), wJe = i0, hJe = it(wJe), bJe = r0, vJe = it(bJe), kJe = jp, _Je = it(kJe), $Je = s0, jJe = it($Je), xJe = d0, AJe = it(xJe), EJe = xp, SJe = it(EJe), qJe = l0, PJe = it(qJe), TJe = u0, RJe = it(TJe), OJe = cB, MJe = it(OJe);
function it(a) {
  return a && a.__esModule ? a : { default: a };
}
const CJe = (0, zJe.default)().allAuxiliaries, LJe = (0, yJe.default)(), IJe = (0, vJe.default)(), WJe = (0, _Je.default)(), FJe = (0, AJe.default)(), DJe = (0, SJe.default)(), BJe = (0, RJe.default)(), NJe = (0, MJe.default)().allAuxiliaries, ql = {
  de: {
    SentencePart: mJe.default,
    stopwordRegex: (0, Xi.default)(LJe),
    auxiliaryRegex: (0, Xi.default)(CJe),
    locale: "de_DE"
  },
  nl: {
    SentencePart: hJe.default,
    stopwordRegex: (0, Xi.default)(IJe),
    auxiliaryRegex: (0, Xi.default)(WJe),
    locale: "nl_NL"
  },
  pl: {
    SentencePart: jJe.default,
    stopwordRegex: (0, Xi.default)(FJe),
    auxiliaryRegex: (0, Xi.default)(DJe),
    locale: "pl_PL"
  },
  hu: {
    SentencePart: PJe.default,
    stopwordRegex: (0, Xi.default)(BJe),
    auxiliaryRegex: (0, Xi.default)(NJe),
    locale: "hu_HU"
  }
};
function UJe(a) {
  return (0, dc.map)(a, function(e) {
    return (0, qB.default)(e);
  });
}
function HJe(a, e) {
  const t = [];
  return (0, dc.forEach)(e, function(i) {
    const n = a.split(i);
    (0, dc.isEmpty)(n[0]) || t.push(n[0]);
    const r = a.indexOf(i), s = a.length;
    a = (0, qB.default)(a.substr(r, s));
  }), t.push(a), t;
}
function VJe(a, e) {
  const t = ql[e].auxiliaryRegex, i = ql[e].SentencePart, n = [];
  return (0, dc.forEach)(a, function(r) {
    const s = UJe(r.match(t || []));
    n.push(new i(r, s, ql[e].locale));
  }), n;
}
function KJe(a, e) {
  const t = ql[e].stopwordRegex, i = a.match(t) || [], n = HJe(a, i);
  return VJe(n, e);
}
Qk.default = KJe;
Object.defineProperty(Iv, "__esModule", {
  value: !0
});
Iv.default = function(a) {
  const e = a.getText(), t = a.getLocale(), i = (0, XJe.default)(t), n = (0, YJe.default)(e).map(function(s) {
    return new QJe.default(s, t);
  }), r = n.length;
  if (dQe.includes(i))
    return {
      total: r,
      passives: TB(n, i)
    };
  if (lQe.includes(i))
    return {
      total: r,
      passives: RB(n, i)
    };
  if (cQe.includes(i))
    return {
      total: r,
      passives: uQe(n, i)
    };
};
var GJe = Le, YJe = hr(GJe), PB = re, ZJe = Ya, XJe = hr(ZJe), JJe = gp, QJe = hr(JJe), gy = I, aQe = Wv, eQe = hr(aQe), tQe = hk, iQe = hr(tQe), nQe = Sk, rQe = hr(nQe), sQe = Qk, oQe = hr(sQe);
function hr(a) {
  return a && a.__esModule ? a : { default: a };
}
const dQe = ["ru", "tr", "sv", "id", "ar", "he", "tr"], lQe = ["en", "de", "nl", "fr", "es", "it", "pt", "cn", "pl"], cQe = ["hu"], TB = function(e, t) {
  const i = [];
  return (0, gy.forEach)(e, function(n) {
    const r = (0, PB.stripFullTags)(n.getSentenceText()).toLocaleLowerCase();
    n.setPassive((0, iQe.default)(r, t)), n.isPassive() === !0 && i.push(n.getSentenceText());
  }), i;
}, RB = function(e, t) {
  const i = [];
  return (0, gy.forEach)(e, function(n) {
    const r = (0, PB.stripFullTags)(n.getSentenceText()).toLocaleLowerCase();
    let s = [];
    t === "de" || t === "nl" || t === "pl" || t === "hu" ? s = (0, oQe.default)(r, t) : s = (0, rQe.default)(r, t);
    let o = !1;
    (0, gy.forEach)(s, function(d) {
      d.setPassive((0, eQe.default)(d.getSentencePartText(), d.getAuxiliaries(), t)), o = o || d.isPassive();
    }), o && i.push(n.getSentenceText());
  }), i;
}, uQe = function(e, t) {
  const i = TB(e, t), n = RB(e, t);
  return i.concat(n);
};
var p0 = {}, m0 = {}, g0 = {};
Object.defineProperty(g0, "__esModule", {
  value: !0
});
g0.default = function() {
  return [
    // Definite articles:
    "the",
    // Indefinite articles:
    "a",
    "an",
    // Numbers 1-10:
    "one",
    "two",
    "three",
    "four",
    "five",
    "six",
    "seven",
    "eight",
    "nine",
    "ten",
    // Demonstrative pronouns:
    "this",
    "that",
    "these",
    "those"
  ];
};
var z0 = {};
Object.defineProperty(z0, "__esModule", {
  value: !0
});
z0.default = function() {
  return [
    // Definite articles:
    "das",
    "dem",
    "den",
    "der",
    "des",
    "die",
    // Indefinite articles:
    "ein",
    "eine",
    "einem",
    "einen",
    "einer",
    "eines",
    // Numbers 1-10:
    "eins",
    "zwei",
    "drei",
    "vier",
    "fünf",
    "sechs",
    "sieben",
    "acht",
    "neun",
    "zehn",
    // Demonstrative pronouns:
    "denen",
    "deren",
    "derer",
    "dessen",
    "diese",
    "diesem",
    "diesen",
    "dieser",
    "dieses",
    "jene",
    "jenem",
    "jenen",
    "jener",
    "jenes",
    "welch",
    "welcher",
    "welches"
  ];
};
var f0 = {};
Object.defineProperty(f0, "__esModule", {
  value: !0
});
f0.default = function() {
  return [
    // Definite articles:
    "el",
    "los",
    "la",
    "las",
    // Indefinite articles:
    "un",
    "una",
    "unas",
    "unos",
    // Numbers 1-10:
    "uno",
    "dos",
    "tres",
    "cuatro",
    "cinco",
    "seis",
    "siete",
    "ocho",
    "nueve",
    "diez",
    // Demonstrative pronouns:
    "este",
    "estos",
    "esta",
    "estas",
    "ese",
    "esos",
    "esa",
    "esas",
    "aquel",
    "aquellos",
    "aquella",
    "aquellas",
    "esto",
    "eso",
    "aquello"
  ];
};
var y0 = {};
Object.defineProperty(y0, "__esModule", {
  value: !0
});
y0.default = function() {
  return [
    // Definite articles:
    "le",
    "la",
    "les",
    // Indefinite articles:
    "un",
    "une",
    // Numbers 2-10 ('une' is already included in the indefinite articles):
    "deux",
    "trois",
    "quatre",
    "cinq",
    "six",
    "sept",
    "huit",
    "neuf",
    "dix",
    // Demonstrative pronouns:
    "celui",
    "celle",
    "ceux",
    "celles",
    "celui-ci",
    "celle-là",
    "celui-là",
    "celle-ci"
  ];
};
var w0 = {};
Object.defineProperty(w0, "__esModule", {
  value: !0
});
w0.default = function() {
  return [
    // Definite articles:
    "de",
    "het",
    // Indefinite articles:
    "een",
    // Numbers 1-10:
    "één",
    "eén",
    "twee",
    "drie",
    "vier",
    "vijf",
    "zes",
    "zeven",
    "acht",
    "negen",
    "tien",
    // Demonstrative pronouns:
    "dit",
    "dat",
    "die",
    "deze"
  ];
};
var h0 = {};
Object.defineProperty(h0, "__esModule", {
  value: !0
});
h0.default = function() {
  return [
    // Definite articles:
    "il",
    "lo",
    "la",
    "i",
    "gli",
    "le",
    // Indefinite articles:
    "uno",
    "un",
    "una",
    // Numbers 1-10 ('uno' is already included above):
    "due",
    "tre",
    "quattro",
    "cinque",
    "sei",
    "sette",
    "otto",
    "nove",
    "dieci",
    // Demonstrative pronouns:
    "questo",
    "questa",
    "quello",
    "quella",
    "questi",
    "queste",
    "quelli",
    "quelle",
    "codesto",
    "codesti",
    "codesta",
    "codeste"
  ];
};
var b0 = {};
Object.defineProperty(b0, "__esModule", {
  value: !0
});
b0.default = function() {
  return [
    // Numbers 1-10:
    "один",
    "одна",
    "одно",
    "два",
    "две",
    "три",
    "четыре",
    "пять",
    "шесть",
    "семь",
    "восемь",
    "девять",
    "десять",
    // Demonstrative pronouns: тот, этот, такой, таков, столько
    "этот",
    "этого",
    "этому",
    "этим",
    "этом",
    "эта",
    "этой",
    "эту",
    "это",
    "этого",
    "этому",
    "эти",
    "этих",
    "этим",
    "этими",
    "тот",
    "того",
    "тому",
    "тем",
    "том",
    "та",
    "той",
    "ту",
    "те",
    "тех",
    "тем",
    "теми",
    "тех",
    "такой",
    "такого",
    "такому",
    "таким",
    "такая",
    "такую",
    "такое",
    "такие",
    "таких",
    "таким",
    "такими",
    "стольких",
    "стольким",
    "столько",
    "столькими",
    "вот"
  ];
};
var v0 = {};
Object.defineProperty(v0, "__esModule", {
  value: !0
});
v0.default = function() {
  return [
    // Numbers 1-10:
    "jeden",
    "jedna",
    "jedno",
    "dwa",
    "dwie",
    "trzy",
    "cztery",
    "pięć",
    "sześć",
    "siedem",
    "osiem",
    "dziewięć",
    "dziesięć",
    // Demonstrative pronouns:
    "ta",
    "to",
    "ten",
    "te",
    "ci",
    "taki",
    "tacy",
    "taka",
    "taką",
    "takich",
    "takie",
    "takiego",
    "takiej",
    "takiemu",
    "takim",
    "takimi",
    "tamten",
    "tamta",
    "tamto",
    "tamci",
    "tamte",
    "tamtą",
    "tamtego",
    "tamtej",
    "tamtemu",
    "tamtych",
    "tamtym",
    "tamtymi",
    "tą",
    "tę",
    "tego",
    "tej",
    "temu",
    "tych",
    "tymi",
    "tym",
    "tak"
  ];
};
var k0 = {};
Object.defineProperty(k0, "__esModule", {
  value: !0
});
k0.default = function() {
  return [
    // Indefinite articles:
    "ett",
    // Definite articles:
    "det",
    "den",
    "de",
    // Numbers 1-10:
    "en",
    "två",
    "tre",
    "fyra",
    "fem",
    "sex",
    "sju",
    "åtta",
    "nio",
    "tio",
    // Demonstrative pronouns:
    "denne",
    "denna",
    "detta",
    "dessa"
  ];
};
var _0 = {};
Object.defineProperty(_0, "__esModule", {
  value: !0
});
_0.default = function() {
  return [
    // Definite articles:
    "o",
    "a",
    "os",
    "as",
    // Indefinite articles:
    "um",
    "uma",
    "uns",
    "umas",
    // Numbers 1-10:
    "um",
    "dois",
    "três",
    "quatro",
    "cinco",
    "seis",
    "sete",
    "oito",
    "nove",
    "dez",
    // Demonstrative pronouns:
    "este",
    "estes",
    "esta",
    "estas",
    "esse",
    "esses",
    "essa",
    "essas",
    "aquele",
    "aqueles",
    "aquela",
    "aquelas",
    "isto",
    "isso",
    "aquilo"
  ];
};
var $0 = {};
Object.defineProperty($0, "__esModule", {
  value: !0
});
$0.default = function() {
  return [
    // Indefinite articles:
    "sebuah",
    "seorang",
    "sang",
    "si",
    // Numbers 1-10:
    "satu",
    "dua",
    "tiga",
    "empat",
    "lima",
    "enam",
    "tujuh",
    "delapan",
    "sembilan",
    "sepuluh",
    "sebelas",
    "seratus",
    "seribu",
    "sejuta",
    "semiliar",
    "setriliun",
    // Demonstrative pronouns:
    "ini",
    "itu",
    "hal",
    "ia"
  ];
};
var j0 = {};
Object.defineProperty(j0, "__esModule", {
  value: !0
});
j0.default = function() {
  return [
    // Indefinite articles:
    "אחד",
    "כמה",
    "מעטים",
    // Numbers 1-10 (feminine-masculine pairs):
    "אחת",
    "שנים",
    "שתים",
    "שלשה",
    "שלש",
    "ארבעה",
    "ארבע",
    "חמשה",
    "חמש",
    "ששה",
    "שש",
    "שבעה",
    "שבע",
    "שמונה",
    "שמונה",
    "תשעה",
    "תשע",
    "עשרה",
    "עשר",
    // Demonstrative pronouns:
    "זה",
    "זאת",
    "אלה",
    "אוה",
    "היא",
    "אלה",
    "המה",
    "הם",
    "הנה"
  ];
};
var x0 = {};
Object.defineProperty(x0, "__esModule", {
  value: !0
});
x0.default = function() {
  return [
    // Articles (those which are not prefixes):
    "قليل",
    "بعض",
    "واحد",
    // Numbers 1-10:
    "واحد",
    "إثنان",
    "ثلاثة",
    "أربعة",
    "خمسة",
    "ستة",
    "سبعة",
    "ثمانية",
    "تسعة",
    "عشرة",
    // Demonstrative pronouns:
    "هذا",
    "هذه",
    "ذلك",
    "تلك",
    "هذين",
    "هذان",
    "هتين",
    "هتان",
    "هؤلا",
    "أولائك",
    "هؤلاء"
  ];
};
var A0 = {};
Object.defineProperty(A0, "__esModule", {
  value: !0
});
A0.default = function() {
  return [
    // Definite articles:
    "az",
    "a",
    // Indefinite article:
    "egy",
    // Numbers 0 to 10, 100, 1000:
    "nulla",
    "egy",
    "kettő",
    "kettő",
    "három",
    "négy",
    "öt",
    "hat",
    "hét",
    "nyolc",
    "kilenc",
    "tíz",
    "száz",
    "ezer",
    // Conjunctions:
    "és",
    "se",
    "sem",
    "vagy",
    "de",
    // Adverbs:
    "aztán",
    "ezután",
    "azután",
    "majd",
    "ezek után",
    "nagyon",
    "kicsit",
    "nagy",
    "kevés",
    "sok",
    "sokan",
    "kevesen",
    "jól",
    // Demonstrative pronouns:
    "ez",
    "ezek",
    "az",
    "azok",
    "néhány",
    "aki",
    "ami",
    // Personal pronouns:
    "én",
    "mi",
    "ő",
    "ők",
    "engem",
    "nekem",
    "velem",
    "nálam",
    "hozzám",
    "tőlem",
    "rajtam",
    "rám",
    "rólam",
    "téged",
    "neked",
    "veled",
    "érted",
    "nálad",
    "hozzád",
    "tőled",
    "rólad",
    "őt",
    "neki",
    "vele",
    "érte",
    "nála",
    "hozzá",
    "tőle",
    "rajta",
    "rá",
    "róla",
    "minket",
    "nekünk",
    "velünk",
    "értünk",
    "nálunk",
    "hozzánk",
    "tőlünk",
    "rólunk",
    "titeket",
    "nektek",
    "veletek",
    "értetek",
    "nálatok",
    "hozzátok",
    "tőletek",
    "rajtatok",
    "rátok",
    "rólatok",
    "őket",
    "nekik",
    "velük",
    "értük",
    "bennük",
    "náluk",
    "hozzájuk",
    "tőlük",
    "rajtuk",
    "rájuk",
    "róluk",
    // Transition words:
    "azonban",
    "ám",
    "ha",
    "szerintem",
    "míg",
    "bár",
    "habár",
    "hát",
    "ha",
    "amennyiben",
    "mivel",
    "azonban",
    "amíg",
    "azért",
    "ezért",
    // Interrogatives:
    "mi",
    "mit",
    "miért",
    "meddig",
    "mikor",
    "hány",
    "mennyi",
    "ki",
    "kit",
    "merre",
    "hogy",
    "hogyan",
    "miként",
    "hol",
    "honnan",
    "hová",
    "mivel",
    "milyen",
    // Interjections:
    "ó",
    "óh",
    "jaj",
    // Colours:
    "kék",
    "zöld",
    "fekete",
    "sárga",
    "piros",
    "szürke",
    // Miscellaneous:
    "ne",
    "nem",
    "hát",
    "nos"
  ];
};
var E0 = {};
Object.defineProperty(E0, "__esModule", {
  value: !0
});
E0.default = function() {
  return [
    // Demonstrative pronouns:
    "bunlar",
    "şunlar",
    "onlar”, “burası",
    "orası",
    "şurası",
    "burayı",
    "orayı",
    "şurayı”, “buraya",
    "oraya",
    "şuraya”, “burada",
    "orada",
    "şurada”, “buradan",
    "oradan",
    "şuradan",
    // Demonstrative adjectives:
    "bu",
    "şu",
    "o",
    // Numbers:
    "bir",
    "íki",
    "üç",
    "dört",
    "beş",
    "altı",
    "yedi",
    "sekiz",
    "dokuz",
    "on"
  ];
};
Object.defineProperty(m0, "__esModule", {
  value: !0
});
m0.default = function(a) {
  const e = {
    en: CT.default,
    de: gQe.default,
    fr: wQe.default,
    es: fQe.default,
    nl: bQe.default,
    it: kQe.default,
    ru: $Qe.default,
    pl: xQe.default,
    sv: EQe.default,
    pt: qQe.default,
    id: TQe.default,
    he: OQe.default,
    ar: CQe.default,
    hu: IQe.default,
    tr: FQe.default
  };
  return Object.keys(e).includes((0, LT.default)(a)) ? e[(0, LT.default)(a)] : CT.default;
};
var pQe = g0, CT = Ie(pQe), mQe = z0, gQe = Ie(mQe), zQe = f0, fQe = Ie(zQe), yQe = y0, wQe = Ie(yQe), hQe = w0, bQe = Ie(hQe), vQe = h0, kQe = Ie(vQe), _Qe = b0, $Qe = Ie(_Qe), jQe = v0, xQe = Ie(jQe), AQe = k0, EQe = Ie(AQe), SQe = _0, qQe = Ie(SQe), PQe = $0, TQe = Ie(PQe), RQe = j0, OQe = Ie(RQe), MQe = x0, CQe = Ie(MQe), LQe = A0, IQe = Ie(LQe), WQe = E0, FQe = Ie(WQe), DQe = Ya, LT = Ie(DQe);
function Ie(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(p0, "__esModule", {
  value: !0
});
p0.default = function(a, e) {
  let t = e.getResearch("sentences");
  const i = (0, HQe.default)(a.getLocale())();
  let n = t.map(function(r) {
    return YQe(r, i);
  });
  return t = t.filter(function(r) {
    return (0, OB.default)((0, MB.default)(r)).length > 0;
  }), n = (0, S0.filter)(n), GQe(n, t);
};
var BQe = se, OB = q0(BQe), NQe = be, MB = q0(NQe), UQe = m0, HQe = q0(UQe), VQe = re, S0 = I;
function q0(a) {
  return a && a.__esModule ? a : { default: a };
}
const KQe = function(e, t) {
  return !(0, S0.isEmpty)(e) && e === t;
}, GQe = function(e, t) {
  const i = [];
  let n = [], r = 1;
  return (0, S0.forEach)(e, function(s, o) {
    const d = s, c = e[o + 1];
    n.push(t[o]), KQe(d, c) ? r++ : (i.push({ word: d, count: r, sentences: n }), r = 1, n = []);
  }), i;
};
function YQe(a, e) {
  const t = (0, OB.default)((0, VQe.stripFullTags)((0, MB.default)(a)));
  if (t.length === 0)
    return "";
  let i = t[0].toLocaleLowerCase();
  return e.indexOf(i) > -1 && t.length > 1 && (i += " " + t[1]), i;
}
var P0 = {};
Object.defineProperty(P0, "__esModule", {
  value: !0
});
var ZQe = Ta, XQe = ut, JQe = QQe(XQe);
function QQe(a) {
  return a && a.__esModule ? a : { default: a };
}
function aat(a) {
  const e = a.getText(), t = a.getDescription(), i = a.getTitle(), n = {};
  return n.hasMetaDescription = t !== "", n.hasTitle = i !== "", n.prominentWords = [], (0, JQe.default)(e) < 400 || (n.prominentWords = (0, ZQe.getRelevantWords)(a.getText(), a.getLocale())), n;
}
P0.default = aat;
var T0 = {};
Object.defineProperty(T0, "__esModule", {
  value: !0
});
T0.default = function(a) {
  const e = (0, tat.default)(a.getLocale()), t = {
    ar: 138,
    cn: 158,
    de: 179,
    en: 228,
    es: 218,
    fi: 161,
    fr: 195,
    he: 187,
    it: 188,
    ja: 193,
    nl: 202,
    pl: 166,
    pt: 181,
    ru: 184,
    sl: 180,
    sv: 199,
    tr: 166
  }, i = 0.2;
  let n = t[e];
  if (!n) {
    const o = Object.values(t).reduce((c, p) => c + p), d = Object.keys(t).length;
    n = o / d;
  }
  const r = (0, nat.default)(a), s = (0, sat.default)(a);
  return Math.ceil(r / n + s * i);
};
var eat = Ya, tat = R0(eat), iat = Mu, nat = R0(iat), rat = lp, sat = R0(rat);
function R0(a) {
  return a && a.__esModule ? a : { default: a };
}
var O0 = {}, qp = {}, Pp = {}, M0 = {};
Object.defineProperty(M0, "__esModule", {
  value: !0
});
M0.default = function(a) {
  return a = a.replace(oat, ""), a = a.replace(dat, ""), a;
};
const CB = "[\\–\\-\\(\\)_\\[\\]’'.?!:;,¿¡«»‹›—×+&<>]+", oat = new RegExp("^" + CB), dat = new RegExp(CB + "$");
Object.defineProperty(Pp, "__esModule", {
  value: !0
});
Pp.default = function(a) {
  let e = a.split(",");
  return e = e.map(function(t) {
    return (0, pat.default)((0, cat.default)(t));
  }).filter(function(t) {
    return t;
  }), e;
};
var lat = be, cat = LB(lat), uat = M0, pat = LB(uat);
function LB(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(qp, "__esModule", {
  value: !0
});
qp.default = function(a, e = !1) {
  const t = a.getKeyword(), i = (0, yat.default)(a.getSynonyms()), n = (0, zat.normalize)(a.getText()), r = (0, hat.default)(n);
  let s = [];
  if (e === !0 ? s = s.concat(t) : (s = s.concat(t, i).filter(Boolean), s.sort((v, $) => $.length - v.length)), (0, IT.isEmpty)(s))
    return {
      count: 0,
      matches: [],
      markings: [],
      matchesIndices: []
    };
  let o = [], d = [], c = [], p = 0, m = 0;
  const w = [];
  return r.forEach(function(v) {
    d = (0, gat.default)(v, s, a.getLocale()).matches, d.length > 0 && (d.forEach(function($) {
      const P = v.indexOf($, m);
      w.push({
        index: P + p,
        match: $
      }), m += P + $.length;
    }), c = c.concat(new jat.default({
      original: v,
      marked: v.replace((0, vat.default)(d), function($) {
        return (0, _at.default)($);
      })
    }))), o = o.concat(d), p += v.length + 1;
  }), {
    count: o.length,
    matches: (0, IT.uniq)(o).sort((v, $) => $.length - v.length),
    markings: c,
    matchesIndices: w
  };
};
var mat = vn, gat = Fs(mat), zat = Ke, fat = Pp, yat = Fs(fat), IT = I, wat = Le, hat = Fs(wat), bat = Wi, vat = Fs(bat), kat = tp, _at = Fs(kat), $at = ct, jat = Fs($at);
function Fs(a) {
  return a && a.__esModule ? a : { default: a };
}
Object.defineProperty(O0, "__esModule", {
  value: !0
});
O0.default = function(a) {
  const e = (0, Aat.default)(a.getText());
  return e === 0 ? 0 : (0, Sat.default)(a).count / e * 100;
};
var xat = ut, Aat = IB(xat), Eat = qp, Sat = IB(Eat);
function IB(a) {
  return a && a.__esModule ? a : { default: a };
}
var zt = {}, C0 = {};
Object.defineProperty(C0, "__esModule", {
  value: !0
});
C0.mergeListItems = qat;
function qat(a) {
  const e = /<\/?(o|ul)(?:[^>]+)?>/g, t = /\s?<\/?li(?:[^>]+)?>\s?/g;
  return a = a.replace(e, ""), a = a.replace(t, " "), a = a.replace(/\s+/g, " "), a;
}
Object.defineProperty(zt, "__esModule", {
  value: !0
});
zt.getDistraction = zt.keyphraseDistributionResearcher = zt.maximizeSentenceScores = zt.computeScoresPerSentenceLongTopic = zt.computeScoresPerSentenceShortTopic = void 0;
var Pat = Le, Tat = FB(Pat), Rat = C0, WB = vt, es = I, Oat = ep, Mat = Ya, Cat = FB(Mat);
function FB(a) {
  return a && a.__esModule ? a : { default: a };
}
const DB = function(e, t, i) {
  const n = Array(t.length);
  for (let r = 0; r < t.length; r++)
    (0, WB.findWordFormsInString)(e, t[r], i).percentWordMatches >= 50 ? n[r] = 9 : n[r] = 3;
  return n;
}, zy = function(e, t, i) {
  const n = Array(t.length);
  for (let r = 0; r < t.length; r++) {
    const s = t[r];
    (0, WB.findWordFormsInString)(e, s, i).percentWordMatches === 100 ? n[r] = 9 : n[r] = 3;
  }
  return n;
}, BB = function(e) {
  return e[0].map(function(i, n) {
    return e.map(function(r) {
      return r[n];
    });
  }).map(function(i) {
    return (0, es.max)(i);
  });
}, NB = function(e) {
  const t = e.length, i = [];
  for (let s = 0; s < t; s++)
    e[s] > 3 && i.push(s);
  const n = i.length;
  if (n === 0)
    return t;
  i.unshift(-1), i.push(t);
  const r = [];
  for (let s = 1; s < n + 2; s++)
    r.push(i[s] - i[s - 1] - 1);
  return (0, es.max)(r);
}, Lat = function(e, t, i) {
  const n = t.length, r = Array(n), s = (0, Cat.default)(i);
  if ((0, es.indexOf)(["en", "de", "nl", "fr", "es", "it", "pt", "ru", "pl", "sv", "id", "ar", "he", "fa"], s) >= 0)
    for (let p = 0; p < n; p++) {
      const m = t[p];
      m.length < 4 ? r[p] = zy(m, e, i) : r[p] = DB(m, e, i);
    }
  else
    for (let p = 0; p < n; p++) {
      const m = t[p];
      r[p] = zy(m, e, i);
    }
  const o = BB(r), c = (0, es.zipWith)(e, o, (p, m) => ({ sentence: p, score: m })).filter((p) => p.score > 3);
  return {
    maximizedSentenceScores: o,
    sentencesWithTopic: c.map((p) => p.sentence)
  };
}, Iat = function(e, t) {
  let i = e.getText();
  i = (0, Rat.mergeListItems)(i);
  const n = (0, Tat.default)(i), r = t.getResearch("morphology"), s = e.getLocale(), o = [r.keyphraseForms];
  r.synonymsForms.forEach(function(w) {
    o.push(w);
  });
  const d = (0, es.uniq)((0, es.flattenDeep)(o)).sort((w, v) => v.length - w.length), c = Lat(n, o, s), p = c.maximizedSentenceScores, m = NB(p);
  return {
    sentencesToHighlight: (0, Oat.markWordsInSentences)(d, c.sentencesWithTopic, s),
    keyphraseDistributionScore: m / n.length * 100
  };
};
zt.computeScoresPerSentenceShortTopic = zy;
zt.computeScoresPerSentenceLongTopic = DB;
zt.maximizeSentenceScores = BB;
zt.keyphraseDistributionResearcher = Iat;
zt.getDistraction = NB;
var L0 = {};
Object.defineProperty(L0, "__esModule", {
  value: !0
});
L0.default = function(a) {
  const e = a.getKeyword(), t = ["“", "”", "〝", "〞", "〟", "‟", "„", '"'];
  if ((0, qr.includes)(t, e[0]) && (0, qr.includes)(t, e[e.length - 1]))
    return !1;
  let i = (0, Fat.default)(e);
  const n = (0, qr.get)(Hat, [(0, Bat.default)(a.getLocale())], []);
  return i = (0, qr.filter)(i, function(r) {
    return !(0, qr.includes)(n.all, r.trim().toLocaleLowerCase());
  }), (0, qr.isEmpty)(i);
};
var qr = I, Wat = se, Fat = I0(Wat), Dat = Ya, Bat = I0(Dat), Nat = fn, Uat = I0(Nat);
function I0(a) {
  return a && a.__esModule ? a : { default: a };
}
const Hat = (0, Uat.default)();
var W0 = {};
Object.defineProperty(W0, "__esModule", {
  value: !0
});
W0.default = function(a) {
  const e = a.getText();
  let t = (0, Vat.getBlocks)(e);
  t = (0, Kat.reject)(t, Yat);
  const i = [];
  return t.forEach((n, r) => {
    const s = Gat.exec(n);
    s && i.push({
      tag: "h1",
      content: s[1],
      position: r
    });
  }), i;
};
var Vat = Re, Kat = I;
const Gat = /<h1.*?>(.*?)<\/h1>/, Yat = function(e) {
  return e = e.trim(), e === "<p></p>" || e === "";
};
var F0 = {}, Te = {}, Fd = {};
Object.defineProperty(Fd, "__esModule", {
  value: !0
});
Fd.default = function(a, e) {
  const t = Qat[a];
  return e && t ? t : (i) => i;
};
var Zat = lu, Xat = Jat(Zat);
function Jat(a) {
  return a && a.__esModule ? a : { default: a };
}
const Qat = (0, Xat.default)();
var Tp = {};
Object.defineProperty(Tp, "__esModule", {
  value: !0
});
function _i(a, e, t) {
  this._word = a, this._stem = e || a, this._occurrences = t || 0;
}
_i.prototype.setWord = function(a) {
  this._word = a;
};
_i.prototype.getWord = function() {
  return this._word;
};
_i.prototype.getStem = function() {
  return this._stem;
};
_i.prototype.setOccurrences = function(a) {
  this._occurrences = a;
};
_i.prototype.getOccurrences = function() {
  return this._occurrences;
};
_i.prototype.serialize = function() {
  return {
    _parseClass: "ProminentWord",
    word: this._word,
    stem: this._stem,
    occurrences: this._occurrences
  };
};
_i.parse = function(a) {
  return new _i(a.word, a.stem, a.occurrences);
};
Tp.default = _i;
Object.defineProperty(Te, "__esModule", {
  value: !0
});
Te.retrieveAbbreviations = Te.collapseProminentWordsOnStem = Te.sortProminentWords = Te.filterProminentWords = Te.getProminentWordsFromPaperAttributes = Te.getProminentWords = void 0;
var ho = I, aet = Fd, eet = Rp(aet), tet = se, D0 = Rp(tet), UB = Ke, iet = Tp, lc = Rp(iet), net = fn, ret = Rp(net);
function Rp(a) {
  return a && a.__esModule ? a : { default: a };
}
const set = (0, ret.default)(), oet = /[1234567890‘’“”"'.…?!:;,¿¡«»&*@#±^%$|~=+§`[\](){}⟨⟩<>/\\–\-\u2014\u00d7\s]/g;
function HB(a, e = 2) {
  return a = a.filter(function(t) {
    return t.getOccurrences() >= e && t.getWord().replace(oet, "") !== "";
  }), a;
}
function VB(a) {
  a.sort(function(e, t) {
    const i = t.getOccurrences() - e.getOccurrences();
    return i !== 0 ? i : e.getStem().localeCompare(t.getStem());
  });
}
function B0(a) {
  if (a.length === 0)
    return [];
  a.sort(function(i, n) {
    return i.getStem().localeCompare(n.getStem());
  });
  const e = [];
  let t = new lc.default(a[0].getWord(), a[0].getStem(), a[0].getOccurrences());
  for (let i = 1; i < a.length; i++) {
    const n = new lc.default(a[i].getWord(), a[i].getStem(), a[i].getOccurrences());
    n.getStem() === t.getStem() ? (t.setOccurrences(t.getOccurrences() + n.getOccurrences()), (n.getWord() === t.getStem() || n.getWord().toLocaleLowerCase() === t.getStem()) && t.setWord(n.getWord())) : (e.push(t), t = n);
  }
  return e.push(t), e;
}
function det(a) {
  return (0, ho.get)(set, a.concat(".all"), []);
}
function KB(a) {
  const e = (0, D0.default)((0, UB.normalizeSingle)(a)), t = [];
  return e.forEach(function(i) {
    i.length > 1 && i.length < 5 && i === i.toLocaleUpperCase() && t.push(i.toLocaleLowerCase());
  }), (0, ho.uniq)(t);
}
function GB(a, e, t, i) {
  const n = det(t), r = (0, eet.default)(t, i);
  if (a.length === 0)
    return [];
  const s = (0, ho.uniq)(a.filter((d) => !n.includes(d.trim()))), o = [];
  return s.forEach(function(d) {
    e.includes(d) ? o.push(new lc.default(d.toLocaleUpperCase(), d, a.filter((c) => c === d).length)) : o.push(new lc.default(d, r(d, i), a.filter((c) => c === d).length));
  }), B0(o);
}
const cet = (0, ho.memoize)((a) => (0, ho.memoize)((e, t, i) => GB(e, t, i, a), (e, t, i) => e.join(",") + "," + t.join(",") + "," + i));
function YB(a, e, t, i) {
  if (a === "")
    return [];
  const n = (0, D0.default)((0, UB.normalizeSingle)(a).toLocaleLowerCase());
  return cet(i)(n, e, t, i);
}
function ZB(a, e, t, i) {
  const n = (0, D0.default)(a.join(" ").toLocaleLowerCase());
  return GB(n, e, t, i);
}
Te.getProminentWords = YB;
Te.getProminentWordsFromPaperAttributes = ZB;
Te.filterProminentWords = HB;
Te.sortProminentWords = VB;
Te.collapseProminentWordsOnStem = B0;
Te.retrieveAbbreviations = KB;
Te.default = {
  getProminentWords: YB,
  getProminentWordsFromPaperAttributes: ZB,
  filterProminentWords: HB,
  sortProminentWords: VB,
  collapseProminentWordsOnStem: B0,
  retrieveAbbreviations: KB
};
Object.defineProperty(F0, "__esModule", {
  value: !0
});
var WT = I, uet = Ya, pet = met(uet), Qs = Te;
function met(a) {
  return a && a.__esModule ? a : { default: a };
}
function get(a, e) {
  const t = a.getText(), i = (0, pet.default)(a.getLocale()), n = (0, WT.get)(e.getData("morphology"), i, !1), r = (0, Qs.retrieveAbbreviations)(t), s = (0, Qs.getProminentWords)(t, r, i, n), o = (0, Qs.collapseProminentWordsOnStem)(s);
  return (0, Qs.sortProminentWords)(o), (0, WT.take)((0, Qs.filterProminentWords)(o, 5), 20);
}
F0.default = get;
var N0 = {};
Object.defineProperty(N0, "__esModule", {
  value: !0
});
var FT = I, zet = Ya, fet = XB(zet), yet = ut, wet = XB(yet), Pr = Te, DT = Mt;
function XB(a) {
  return a && a.__esModule ? a : { default: a };
}
function het(a, e) {
  const t = a.getText(), i = a.getDescription(), n = a.getTitle(), r = {};
  if (r.hasMetaDescription = i !== "", r.hasTitle = n !== "", r.prominentWords = [], (0, wet.default)(t) < 100)
    return r;
  const o = (0, fet.default)(a.getLocale()), d = (0, FT.get)(e.getData("morphology"), o, !1), c = (0, DT.getSubheadingsTopLevel)(t).map((h) => h[2]), p = [a.getKeyword(), a.getSynonyms(), n, i, c.join(" ")], m = (0, Pr.retrieveAbbreviations)(t.concat(p.join(" "))), w = (0, Pr.getProminentWords)((0, DT.removeSubheadingsTopLevel)(t), m, o, d), v = (0, Pr.getProminentWordsFromPaperAttributes)(p, m, o, d);
  v.forEach((h) => h.setOccurrences(h.getOccurrences() * 3));
  const $ = (0, Pr.collapseProminentWordsOnStem)(v.concat(w));
  (0, Pr.sortProminentWords)($);
  let P = 4;
  return d || (P = 2), r.prominentWords = (0, FT.take)((0, Pr.filterProminentWords)($, P), 100), r;
}
N0.default = het;
var U0 = {};
const bet = /* @__PURE__ */ ts(SV);
var H0 = {}, V0 = {};
Object.defineProperty(V0, "__esModule", {
  value: !0
});
V0.createBasicWordForms = vet;
function vet(a) {
  const e = ["ב", "ה", "ו", "כ", "ל", "מ", "ש"], t = [];
  t.push(...e.map((n) => n + a));
  let i = "";
  return e.some((n) => a.startsWith(n)) && (i = a.slice(1)), i.length > 0 && (t.push(i), t.push(...e.map((n) => n + i))), t;
}
var K0 = {};
Object.defineProperty(K0, "__esModule", {
  value: !0
});
K0.createBasicWordForms = ket;
function ket(a) {
  const e = ["ل", "ب", "ك", "و", "ف", "س", "أ", "ال", "وب", "ول", "لل", "فس", "فب", "فل", "وس", "وال", "بال", "فال", "كال", "ولل", "وبال"], t = [];
  t.push(...e.map((n) => n + a));
  let i = "";
  for (const n of e)
    a.startsWith(n) && (i = a.slice(n.length));
  return i.length > 0 && (t.push(i), t.push(...e.map((n) => n + i))), t;
}
var G0 = {};
Object.defineProperty(G0, "__esModule", {
  value: !0
});
G0.createBasicWordForms = jet;
var _et = wn;
const BT = function(e) {
  const t = "ن", i = ["مان", "شان", "تان", "ش", "ت", "م", "ی"], n = ["یی", "یم", "یت", "یش"], r = ["‌ای", "‌یی", "‌ام", "‌ات", "‌اش"], s = ["یی", "ی"], o = [];
  return o.push(t + e), e.endsWith("ها") ? o.push(...s.map((d) => e + d)) : /([^وای]ه)$/i.test(e) ? o.push(...r.map((d) => e + d)) : /([وا])$/i.test(e) ? o.push(...n.map((d) => e + d)) : (e.endsWith("ی") && o.push(e + "‌ای"), o.push(...i.map((d) => e + d))), o;
}, $et = function(e) {
  const t = "ن", i = [["(و|ا)(یش|یت|یم|یی)$", "$1"], ["([^وای]ه)(‌یی|‌ای|‌اش|‌ات|‌ام)$", "$1"], ["(ی)‌ای$", "$1"], ["(ها)یی$", "$1"], ["(مان|شان|تان|ش|ت|م|ی)$", ""]];
  return e.startsWith(t) ? e.slice(1, e.length) : (0, _et.searchAndReplaceWithRegex)(e, i);
};
function jet(a) {
  const e = [];
  e.push(...BT(a));
  const t = $et(a);
  return t && (e.push(t), e.push(...BT(t))), e;
}
Object.defineProperty(H0, "__esModule", {
  value: !0
});
H0.default = function() {
  return {
    he: xet.createBasicWordForms,
    ar: Aet.createBasicWordForms,
    fa: Eet.createBasicWordForms
  };
};
var xet = V0, Aet = K0, Eet = G0, Xt = {};
Object.defineProperty(Xt, "__esModule", {
  value: !0
});
Xt.StemOriginalPair = Xt.TopicPhrase = Xt.collectStems = Xt.buildStems = void 0;
var qet = $d, Pet = Op(qet), Tet = Fd, Ret = Op(Tet), Oet = se, Met = Op(Oet), Cet = Pp, Let = Op(Cet), Iet = Ke, Fn = I;
function Op(a) {
  return a && a.__esModule ? a : { default: a };
}
function uo(a = [], e = !1) {
  this.stemOriginalPairs = a, this.exactMatch = e;
}
uo.prototype.getStems = function() {
  return this.exactMatch ? [] : this.stemOriginalPairs.map((a) => a.stem);
};
function fy(a, e) {
  this.stem = a, this.original = e;
}
const yy = function(e, t, i) {
  if ((0, Fn.isUndefined)(e) || e === "")
    return new uo();
  const n = ["“", "”", "〝", "〞", "〟", "‟", "„", '"'];
  if ((0, Fn.includes)(n, e[0]) && (0, Fn.includes)(n, e[e.length - 1]))
    return e = e.substring(1, e.length - 1), new uo([new fy((0, Fn.escapeRegExp)(e), e)], !0);
  const r = (0, Pet.default)((0, Met.default)(e), t), s = (0, Ret.default)(t, i), o = r.map((d) => {
    const c = (0, Fn.escapeRegExp)(d.toLocaleLowerCase(t));
    return new fy(s((0, Iet.normalizeSingle)(c), i), d);
  });
  return new uo(o);
}, Wet = function(e, t, i = "en", n) {
  const r = (0, Let.default)(t), s = yy(e, i, n), o = r.map((d) => yy(d, i, n));
  return {
    keyphraseStems: s,
    synonymsStems: o
  };
}, Fet = (0, Fn.memoize)((a) => (0, Fn.memoize)((e, t, i = "en") => Wet(e, t, i, a), (e, t, i) => e + "," + t + "," + i));
function Det(a, e, t = "en", i) {
  return Fet(i)(a, e, t);
}
Xt.buildStems = yy;
Xt.collectStems = Det;
Xt.TopicPhrase = uo;
Xt.StemOriginalPair = fy;
Object.defineProperty(U0, "__esModule", {
  value: !0
});
var Kr = I, Bet = bet, Net = Vi(Bet), Uet = $d, Het = Vi(Uet), Vet = H0, NT = Vi(Vet), Ket = Ya, Get = Vi(Ket), Yet = Fd, Zet = Vi(Yet), Xet = cp, Jet = Vi(Xet), Qet = se, att = Vi(Qet), ett = ur, ttt = Vi(ett), itt = up, ntt = Vi(itt), JB = Ke, UT = Xt;
function Vi(a) {
  return a && a.__esModule ? a : { default: a };
}
function rtt(a, e) {
  this.stem = a, this.forms = e;
}
function rf(a = [], e = []) {
  this.keyphraseForms = a, this.synonymsForms = e;
}
function stt(a, e) {
  const t = a.getText(), i = (0, ttt.default)(t).map((r) => (0, Jet.default)(r)), n = [t, a.getTitle(), (0, ntt.default)(a.getUrl()), a.getDescription(), i.join(" ")].join(" ");
  return (0, att.default)(n).map((r) => (0, JB.normalizeSingle)((0, Kr.escapeRegExp)(r.toLocaleLowerCase(e))));
}
function ott(a, e, t) {
  const i = e.find((s) => s.stem === a.stem), n = (0, JB.normalizeSingle)((0, Kr.escapeRegExp)(a.original.toLocaleLowerCase(t))), r = i ? [n, ...i.forms] : [n];
  if (Object.keys((0, NT.default)()).includes(t)) {
    const s = (0, NT.default)()[t];
    r.push(...s(a.original));
  }
  return (0, Kr.uniq)(r);
}
function dtt(a, e) {
  const t = a.stemOriginalPairs.length === 0 ? [] : a.getStems(), i = e.length === 0 ? [] : e.map((n) => n.getStems());
  return [...t, ...(0, Net.default)(i)];
}
function HT(a, e, t) {
  return a.stemOriginalPairs.length === 0 ? [] : a.exactMatch ? [[a.stemOriginalPairs[0].stem]] : a.stemOriginalPairs.map(function(i) {
    return ott(i, e, t);
  });
}
function ltt(a, e) {
  const t = (0, Get.default)(a.getLocale()), i = (0, Kr.get)(e.getData("morphology"), t, !1), n = (0, Zet.default)(t, i), r = (0, UT.collectStems)(a.getKeyword(), a.getSynonyms(), t, i), s = r.keyphraseStems, o = r.synonymsStems;
  if (s.stemOriginalPairs.length === 0 && o.length === 0)
    return new rf();
  if ([s, ...o].every((v) => v.exactMatch === !0))
    return new rf([[s.stemOriginalPairs[0].stem]], o.map((v) => [[v.stemOriginalPairs[0].stem]]));
  const c = (0, Kr.uniq)(dtt(s, o));
  let p = stt(a, t);
  p = (0, Het.default)((0, Kr.uniq)(p), t);
  const w = p.map((v) => new UT.StemOriginalPair(n(v, i), v)).filter((v) => c.includes(v.stem)).sort((v, $) => v.stem.localeCompare($.stem)).reduce(function(v, $) {
    const P = v[v.length - 1];
    return v.length === 0 || P.stem !== $.stem ? v.push(new rtt($.stem, [$.original])) : P.forms.push($.original), v;
  }, []);
  return new rf(HT(s, w, t), o.map((v) => HT(v, w, t)));
}
U0.default = ltt;
Object.defineProperty(kd, "__esModule", {
  value: !0
});
var ctt = fb, utt = ua(ctt), bo = I, ptt = _d, mtt = ua(ptt), gtt = vs, QB = ua(gtt), ztt = Mu, ftt = ua(ztt), ytt = yb, wtt = ua(ytt), htt = Cb, btt = ua(htt), vtt = Qu, ktt = ua(vtt), _tt = Lb, $tt = ua(_tt), jtt = Ib, xtt = ua(jtt), Att = Wb, Ett = ua(Att), Stt = Db, qtt = ua(Stt), Ptt = Bb, Ttt = ua(Ptt), Rtt = Nb, Ott = ua(Rtt), Mtt = Hb, Ctt = ua(Mtt), Ltt = Vb, Itt = ua(Ltt), Wtt = av, Ftt = ua(Wtt), Dtt = lp, Btt = ua(Dtt), Ntt = ev, Utt = ua(Ntt), Htt = tv, Vtt = ua(Htt), Ktt = iv, Gtt = ua(Ktt), Ytt = nv, Ztt = ua(Ytt), Xtt = rv, Jtt = ua(Xtt), Qtt = ov, ait = ua(Qtt), eit = dv, tit = ua(eit), iit = cv, nit = ua(iit), rit = uv, sit = ua(rit), oit = pv, dit = ua(oit), lit = mv, cit = ua(lit), uit = zv, pit = ua(uit), mit = Iv, git = ua(mit), zit = p0, fit = ua(zit), yit = P0, wit = ua(yit), hit = T0, bit = ua(hit), vit = O0, kit = ua(vit), _it = qp, $it = ua(_it), jit = zt, xit = L0, Ait = ua(xit), Eit = W0, Sit = ua(Eit), qit = F0, Pit = ua(qit), Tit = N0, Rit = ua(Tit), Oit = U0, Mit = ua(Oit);
function ua(a) {
  return a && a.__esModule ? a : { default: a };
}
const Cit = jit.keyphraseDistributionResearcher;
var xn = function(e) {
  this.setPaper(e), this.defaultResearches = {
    urlLength: $tt.default,
    wordCountInText: ftt.default,
    findKeywordInPageTitle: xtt.default,
    calculateFleschReading: Itt.default,
    getLinkStatistics: wtt.default,
    getLinks: ktt.default,
    linkCount: btt.default,
    imageCount: Btt.default,
    altTagCount: Utt.default,
    matchKeywordInSubheadings: Ett.default,
    keywordCount: Ttt.default,
    getKeywordDensity: qtt.default,
    stopWordsInKeyword: Ott.default,
    stopWordsInUrl: Ctt.default,
    metaDescriptionLength: Ftt.default,
    keyphraseLength: Vtt.default,
    keywordCountInUrl: Ztt.default,
    firstParagraph: Jtt.default,
    metaDescriptionKeyword: Gtt.default,
    pageTitleWidth: ait.default,
    wordComplexity: tit.default,
    getParagraphLength: nit.default,
    countSentencesFromText: sit.default,
    countSentencesFromDescription: dit.default,
    getSubheadingTextLengths: cit.default,
    findTransitionWords: pit.default,
    passiveVoice: git.default,
    getSentenceBeginnings: fit.default,
    relevantWords: wit.default,
    readingTime: bit.default,
    getTopicDensity: kit.default,
    topicCount: $it.default,
    sentences: utt.default,
    keyphraseDistribution: Cit,
    morphology: Mit.default,
    functionWordsInKeyphrase: Ait.default,
    h1s: Sit.default,
    prominentWordsForInsights: Pit.default,
    prominentWordsForInternalLinking: Rit.default
  }, this._data = {}, this.customResearches = {};
};
xn.prototype.setPaper = function(a) {
  this.paper = a;
};
xn.prototype.addResearch = function(a, e) {
  if ((0, bo.isUndefined)(a) || (0, bo.isEmpty)(a))
    throw new QB.default("Research name cannot be empty");
  if (!(e instanceof Function))
    throw new mtt.default("The research requires a Function callback.");
  this.customResearches[a] = e;
};
xn.prototype.hasResearch = function(a) {
  return Object.keys(this.getAvailableResearches()).filter(function(e) {
    return e === a;
  }).length > 0;
};
xn.prototype.getAvailableResearches = function() {
  return (0, bo.merge)(this.defaultResearches, this.customResearches);
};
xn.prototype.getResearch = function(a) {
  if ((0, bo.isUndefined)(a) || (0, bo.isEmpty)(a))
    throw new QB.default("Research name cannot be empty");
  return this.hasResearch(a) ? this.getAvailableResearches()[a](this.paper, this) : !1;
};
xn.prototype.addResearchData = function(a, e) {
  this._data[a] = e;
};
xn.prototype.getData = function(a) {
  return this._data.hasOwnProperty(a) ? this._data[a] : !1;
};
var Lit = kd.default = xn, Y0 = {};
Object.defineProperty(Y0, "__esModule", {
  value: !0
});
var Iit = I;
function Wit(a) {
  return (0, Iit.uniqBy)(a, function(e) {
    return e.getOriginal();
  });
}
Y0.default = Wit;
var Dd = {};
Object.defineProperty(Dd, "__esModule", {
  value: !0
});
Dd.showTrace = void 0;
var sf = I;
function aN(a) {
  (0, sf.isUndefined)(a) && (a = ""), !(0, sf.isUndefined)(console) && !(0, sf.isUndefined)(console.trace) && console.trace(a);
}
Dd.showTrace = aN;
Dd.default = {
  showTrace: aN
};
Object.defineProperty(Lt, "__esModule", {
  value: !0
});
var Fit = kd, Dit = Mp(Fit), Bit = vs, Nit = Mp(Bit), Uit = Y0, eN = Mp(Uit), Hit = za, Vit = Mp(Hit), Kit = Dd, Tt = I;
function Mp(a) {
  return a && a.__esModule ? a : { default: a };
}
var Git = 9, ze = function(e, t) {
  this.type = "Assessor", this.setI18n(e), this._assessments = [], this._options = t || {}, (0, Tt.isUndefined)(this._options.researcher) || (this._researcher = this._options.researcher);
};
ze.prototype.setI18n = function(a) {
  if ((0, Tt.isUndefined)(a))
    throw new Nit.default("The assessor requires an i18n object.");
  this.i18n = a;
};
ze.prototype.getAvailableAssessments = function() {
  return this._assessments;
};
ze.prototype.isApplicable = function(a, e, t) {
  return a.hasOwnProperty("isApplicable") || typeof a.isApplicable == "function" ? a.isApplicable(e, t) : !0;
};
ze.prototype.hasMarker = function(a) {
  return (0, Tt.isFunction)(this._options.marker) && (a.hasOwnProperty("getMarks") || typeof a.getMarks == "function");
};
ze.prototype.getSpecificMarker = function() {
  return this._options.marker;
};
ze.prototype.getPaper = function() {
  return this._lastPaper;
};
ze.prototype.getMarker = function(a, e, t) {
  var i = this._options.marker;
  return function() {
    let n = a.getMarks(e, t);
    n = (0, eN.default)(n), i(e, n);
  };
};
ze.prototype.assess = function(a) {
  (0, Tt.isUndefined)(this._researcher) ? this._researcher = new Dit.default(a) : this._researcher.setPaper(a);
  var e = this.getAvailableAssessments();
  this.results = [], e = (0, Tt.filter)(e, (function(t) {
    return this.isApplicable(t, a, this._researcher);
  }).bind(this)), this.setHasMarkers(!1), this.results = (0, Tt.map)(e, this.executeAssessment.bind(this, a, this._researcher)), this._lastPaper = a;
};
ze.prototype.setHasMarkers = function(a) {
  this._hasMarkers = a;
};
ze.prototype.hasMarkers = function() {
  return this._hasMarkers;
};
ze.prototype.executeAssessment = function(a, e, t) {
  var i;
  try {
    i = t.getResult(a, e, this.i18n), i.setIdentifier(t.identifier), i.hasMarks() && (i.marks = t.getMarks(a, e), i.marks = (0, eN.default)(i.marks)), i.hasMarks() && this.hasMarker(t) && (this.setHasMarkers(!0), i.setMarker(this.getMarker(t, a, e)));
  } catch (n) {
    (0, Kit.showTrace)(n), i = new Vit.default(), i.setScore(-1), i.setText(this.i18n.sprintf(
      /* Translators: %1$s expands to the name of the assessment. */
      this.i18n.dgettext("js-text-analysis", "An error occurred in the '%1$s' assessment"),
      t.identifier,
      n
    ));
  }
  return i;
};
ze.prototype.getValidResults = function() {
  return (0, Tt.filter)(this.results, (function(a) {
    return this.isValidResult(a);
  }).bind(this));
};
ze.prototype.isValidResult = function(a) {
  return a.hasScore() && a.hasText();
};
ze.prototype.calculateOverallScore = function() {
  var a = this.getValidResults(), e = 0;
  return (0, Tt.forEach)(a, function(t) {
    e += t.getScore();
  }), Math.round(e / (a.length * Git) * 100) || 0;
};
ze.prototype.addAssessment = function(a, e) {
  return e.hasOwnProperty("identifier") || (e.identifier = a), this._assessments.push(e), !0;
};
ze.prototype.removeAssessment = function(a) {
  var e = (0, Tt.findIndex)(this._assessments, function(t) {
    return t.hasOwnProperty("identifier") && a === t.identifier;
  });
  e !== -1 && this._assessments.splice(e, 1);
};
ze.prototype.getAssessment = function(a) {
  return (0, Tt.find)(this._assessments, function(e) {
    return e.hasOwnProperty("identifier") && a === e.identifier;
  });
};
ze.prototype.getApplicableAssessments = function() {
  var a = this.getAvailableAssessments();
  return (0, Tt.filter)(a, (function(e) {
    return this.isApplicable(e, this.getPaper());
  }).bind(this));
};
var Yit = Lt.default = ze, Bd = {};
Object.defineProperty(Bd, "__esModule", {
  value: !0
});
var Zit = Pa, Xit = Ri, Jit = Se(Xit), Qit = Oi, ant = Se(Qit), ent = Mi, tnt = Se(ent), int = Ci, nnt = Se(int), rnt = lr, snt = Se(rnt), ont = Zo, dnt = Se(ont), lnt = hs, cnt = Se(lnt), unt = bs, pnt = Se(unt), mnt = Lt, tN = Se(mnt), gnt = zs, znt = Se(gnt), fnt = rd, ynt = Se(fnt), wnt = cr, hnt = Se(wnt), bnt = ws, vnt = Se(bnt), knt = nd, _nt = Se(knt), $nt = fs, jnt = Se($nt), xnt = Ti, Ant = Se(xnt), Ent = ys, Snt = Se(Ent);
function Se(a) {
  return a && a.__esModule ? a : { default: a };
}
const iN = function(e, t) {
  tN.default.call(this, e, t), this.type = "SEOAssessor", this._assessments = [new Jit.default(), new ant.default(), new tnt.default(), new nnt.default(), new znt.default(), new ynt.default(), new snt.default(), new hnt.default(), new vnt.default(), new _nt.default(), new cnt.default(), new dnt.default(), new jnt.default(), new pnt.default(), new Ant.default(), new Snt.default()];
};
(0, Zit.inherits)(iN, tN.default);
var zut = Bd.default = iN, Nd = {}, Cp = {}, Z0 = {};
Object.defineProperty(Z0, "__esModule", {
  value: !0
});
Z0.default = {
  sentenceLength: {
    recommendedWordCount: 20,
    slightlyTooMany: 25,
    farTooMany: 30
  },
  fleschReading: {
    borders: {
      veryEasy: 90,
      easy: 80,
      fairlyEasy: 70,
      okay: 60,
      fairlyDifficult: 50,
      difficult: 30,
      veryDifficult: 0
    },
    scores: {
      veryEasy: 9,
      easy: 9,
      fairlyEasy: 9,
      okay: 9,
      fairlyDifficult: 6,
      difficult: 3,
      veryDifficult: 3
    }
  }
};
var X0 = {};
Object.defineProperty(X0, "__esModule", {
  value: !0
});
X0.default = {
  sentenceLength: {
    recommendedWordCount: 25
  }
};
var J0 = {};
Object.defineProperty(J0, "__esModule", {
  value: !0
});
J0.default = {
  sentenceLength: {
    recommendedWordCount: 15
  },
  fleschReading: {
    borders: {
      veryEasy: 80,
      easy: 70,
      fairlyEasy: 60,
      okay: 50,
      fairlyDifficult: 40,
      difficult: 20
    }
  }
};
var Q0 = {};
Object.defineProperty(Q0, "__esModule", {
  value: !0
});
Q0.default = {
  sentenceLength: {
    slightlyTooMany: 15,
    farTooMany: 20
  }
};
var a_ = {};
Object.defineProperty(a_, "__esModule", {
  value: !0
});
a_.default = {
  sentenceLength: {
    recommendedWordCount: 25
  }
};
var e_ = {};
Object.defineProperty(e_, "__esModule", {
  value: !0
});
e_.default = {
  sentenceLength: {
    recommendedWordCount: 25
  }
};
var t_ = {};
Object.defineProperty(t_, "__esModule", {
  value: !0
});
t_.default = {
  sentenceLength: {
    recommendedWordCount: 25
  }
};
var i_ = {};
Object.defineProperty(i_, "__esModule", {
  value: !0
});
i_.default = {
  sentenceLength: {
    recommendedWordCount: 15
  }
};
var n_ = {};
Object.defineProperty(n_, "__esModule", {
  value: !0
});
n_.default = {
  sentenceLength: {
    recommendedWordCount: 15,
    slightlyTooMany: 20,
    farTooMany: 25
  }
};
Object.defineProperty(Cp, "__esModule", {
  value: !0
});
Cp.default = function(a) {
  const e = (0, Tnt.default)(a);
  return KT.hasOwnProperty(e) ? (0, qnt.defaultsDeep)(KT[e], VT.default) : VT.default;
};
var qnt = I, Pnt = Ya, Tnt = ci(Pnt), Rnt = Z0, VT = ci(Rnt), Ont = X0, Mnt = ci(Ont), Cnt = J0, Lnt = ci(Cnt), Int = Q0, Wnt = ci(Int), Fnt = a_, Dnt = ci(Fnt), Bnt = e_, Nnt = ci(Bnt), Unt = t_, Hnt = ci(Unt), Vnt = i_, Knt = ci(Vnt), Gnt = n_, Ynt = ci(Gnt);
function ci(a) {
  return a && a.__esModule ? a : { default: a };
}
const KT = {
  it: Mnt.default,
  ru: Lnt.default,
  pl: Wnt.default,
  es: Dnt.default,
  ca: Nnt.default,
  pt: Hnt.default,
  he: Knt.default,
  tr: Ynt.default
};
Object.defineProperty(Nd, "__esModule", {
  value: !0
});
var Znt = Lt, nN = It(Znt), Xnt = Oo, Jnt = It(Xnt), Qnt = Co, art = It(Qnt), ert = No, trt = It(ert), irt = Uo, nrt = It(irt), rrt = Ko, srt = It(rrt), ort = Fo, drt = It(ort), lrt = Bo, crt = It(lrt), urt = Vo, prt = It(urt), mrt = Cp, GT = It(mrt), grt = _s, zrt = It(grt), YT = I;
function It(a) {
  return a && a.__esModule ? a : { default: a };
}
const An = function(e, t = {}) {
  nN.default.call(this, e, t), this.type = "ContentAssessor";
  const i = t.hasOwnProperty("locale") ? t.locale : "en_US";
  this._assessments = [new Jnt.default((0, GT.default)(i).fleschReading), new nrt.default(), art.default, new trt.default((0, GT.default)(i).sentenceLength), srt.default, drt.default, prt.default, crt.default];
};
Pa.inherits(An, nN.default);
An.prototype.calculatePenaltyPointsFullSupport = function(a) {
  switch (a) {
    case "bad":
      return 3;
    case "ok":
      return 2;
    default:
    case "good":
      return 0;
  }
};
An.prototype.calculatePenaltyPointsPartialSupport = function(a) {
  switch (a) {
    case "bad":
      return 4;
    case "ok":
      return 2;
    default:
    case "good":
      return 0;
  }
};
An.prototype._allAssessmentsSupported = function() {
  return this.getApplicableAssessments().length === 8;
};
An.prototype.calculatePenaltyPoints = function() {
  const a = this.getValidResults(), e = (0, YT.map)(a, (function(t) {
    const i = (0, zrt.default)(t.getScore());
    return this._allAssessmentsSupported() ? this.calculatePenaltyPointsFullSupport(i) : this.calculatePenaltyPointsPartialSupport(i);
  }).bind(this));
  return (0, YT.sum)(e);
};
An.prototype._ratePenaltyPoints = function(a) {
  if (this.getValidResults().length === 1)
    return 30;
  if (this._allAssessmentsSupported()) {
    if (a > 6)
      return 30;
    if (a > 4)
      return 60;
  } else {
    if (a > 4)
      return 30;
    if (a > 2)
      return 60;
  }
  return 90;
};
An.prototype.calculateOverallScore = function() {
  if (this.getValidResults().length === 0)
    return 30;
  const e = this.calculatePenaltyPoints();
  return this._ratePenaltyPoints(e);
};
var frt = Nd.default = An, Ud = {};
Object.defineProperty(Ud, "__esModule", {
  value: !0
});
Ud.getTextLengthAssessment = void 0;
var yrt = Pa, wrt = Ri, hrt = xt(wrt), brt = Oi, vrt = xt(brt), krt = Mi, _rt = xt(krt), $rt = Ci, jrt = xt($rt), xrt = hs, Art = xt(xrt), Ert = bs, Srt = xt(Ert), qrt = Lt, rN = xt(qrt), Prt = zs, Trt = xt(Prt), Rrt = ws, Ort = xt(Rrt), Mrt = fs, Crt = xt(Mrt), Lrt = Ti, Irt = xt(Lrt), Wrt = ys, Frt = xt(Wrt), ZT = va;
function xt(a) {
  return a && a.__esModule ? a : { default: a };
}
const Drt = Ud.getTextLengthAssessment = function() {
  return new Ort.default({
    recommendedMinimum: 250,
    slightlyBelowMinimum: 200,
    belowMinimum: 100,
    veryFarBelowMinimum: 50,
    urlTitle: (0, ZT.createAnchorOpeningTag)("https://yoa.st/34j"),
    urlCallToAction: (0, ZT.createAnchorOpeningTag)("https://yoa.st/34k")
  });
}, sN = function(e, t) {
  rN.default.call(this, e, t), this.type = "TaxonomyAssessor", this._assessments = [new hrt.default(), new vrt.default(), new _rt.default(), new jrt.default(), new Trt.default(), Drt(), new Art.default(), new Crt.default(), new Srt.default(), new Irt.default(), new Frt.default()];
};
(0, yrt.inherits)(sN, rN.default);
var Brt = Ud.default = sN, Lp = {};
Object.defineProperty(Lp, "__esModule", {
  value: !0
});
var Xe = I, Nrt = _d, of = Urt(Nrt);
function Urt(a) {
  return a && a.__esModule ? a : { default: a };
}
var We = function(e) {
  this.app = e, this.loaded = !1, this.preloadThreshold = 3e3, this.plugins = {}, this.modifications = {}, this.customTests = [], setTimeout(this._pollLoadingPlugins.bind(this), 1500);
};
We.prototype._registerPlugin = function(a, e) {
  return typeof a != "string" ? (console.error("Failed to register plugin. Expected parameter `pluginName` to be a string."), !1) : !(0, Xe.isUndefined)(e) && typeof e != "object" ? (console.error("Failed to register plugin " + a + ". Expected parameters `options` to be a object."), !1) : this._validateUniqueness(a) === !1 ? (console.error("Failed to register plugin. Plugin with name " + a + " already exists"), !1) : (this.plugins[a] = e, !0);
};
We.prototype._ready = function(a) {
  return typeof a != "string" ? (console.error("Failed to modify status for plugin " + a + ". Expected parameter `pluginName` to be a string."), !1) : (0, Xe.isUndefined)(this.plugins[a]) ? (console.error("Failed to modify status for plugin " + a + ". The plugin was not properly registered."), !1) : (this.plugins[a].status = "ready", !0);
};
We.prototype._reloaded = function(a) {
  return typeof a != "string" ? (console.error("Failed to reload Content Analysis for " + a + ". Expected parameter `pluginName` to be a string."), !1) : (0, Xe.isUndefined)(this.plugins[a]) ? (console.error("Failed to reload Content Analysis for plugin " + a + ". The plugin was not properly registered."), !1) : (this.app.refresh(), !0);
};
We.prototype._registerModification = function(a, e, t, i) {
  if (typeof a != "string")
    return console.error("Failed to register modification for plugin " + t + ". Expected parameter `modification` to be a string."), !1;
  if (typeof e != "function")
    return console.error("Failed to register modification for plugin " + t + ". Expected parameter `callable` to be a function."), !1;
  if (typeof t != "string")
    return console.error("Failed to register modification for plugin " + t + ". Expected parameter `pluginName` to be a string."), !1;
  if (this._validateOrigin(t) === !1)
    return console.error("Failed to register modification for plugin " + t + ". The integration has not finished loading yet."), !1;
  var n = typeof i == "number" ? i : 10, r = {
    callable: e,
    origin: t,
    priority: n
  };
  return (0, Xe.isUndefined)(this.modifications[a]) && (this.modifications[a] = []), this.modifications[a].push(r), !0;
};
We.prototype._registerTest = function() {
  console.error("This function is deprecated, please use _registerAssessment");
};
We.prototype._registerAssessment = function(a, e, t, i) {
  if (!(0, Xe.isString)(e))
    throw new of.default("Failed to register test for plugin " + i + ". Expected parameter `name` to be a string.");
  if (!(0, Xe.isObject)(t))
    throw new of.default("Failed to register assessment for plugin " + i + ". Expected parameter `assessment` to be a function.");
  if (!(0, Xe.isString)(i))
    throw new of.default("Failed to register assessment for plugin " + i + ". Expected parameter `pluginName` to be a string.");
  return e = i + "-" + e, a.addAssessment(e, t), !0;
};
We.prototype._pollLoadingPlugins = function(a) {
  a = (0, Xe.isUndefined)(a) ? 0 : a, this._allReady() === !0 ? (this.loaded = !0, this.app.pluginsLoaded()) : a >= this.preloadThreshold ? this._pollTimeExceeded() : (a += 50, setTimeout(this._pollLoadingPlugins.bind(this, a), 50));
};
We.prototype._allReady = function() {
  return (0, Xe.reduce)(this.plugins, function(a, e) {
    return a && e.status === "ready";
  }, !0);
};
We.prototype._pollTimeExceeded = function() {
  (0, Xe.forEach)(this.plugins, function(a, e) {
    !(0, Xe.isUndefined)(a.options) && a.options.status !== "ready" && (console.error("Error: Plugin " + e + ". did not finish loading in time."), delete this.plugins[e]);
  }), this.loaded = !0, this.app.pluginsLoaded();
};
We.prototype._applyModifications = function(a, e, t) {
  var i = this.modifications[a];
  return i instanceof Array && i.length > 0 && (i = this._stripIllegalModifications(i), i.sort(function(n, r) {
    return n.priority - r.priority;
  }), (0, Xe.forEach)(i, function(n) {
    var r = n.callable, s = r(e, t);
    typeof s == typeof e ? e = s : console.error("Modification with name " + a + " performed by plugin with name " + n.origin + " was ignored because the data that was returned by it was of a different type than the data we had passed it.");
  })), e;
};
We.prototype._addPluginTests = function(a) {
  this.customTests.map(function(e) {
    this._addPluginTest(a, e);
  }, this);
};
We.prototype._addPluginTest = function(a, e) {
  a.addAnalysis({
    name: e.name,
    callable: e.analysis
  }), a.analyzeScorer.addScoring({
    name: e.name,
    scoring: e.scoring
  });
};
We.prototype._stripIllegalModifications = function(a) {
  return (0, Xe.forEach)(a, (function(e, t) {
    this._validateOrigin(e.origin) === !1 && delete a[t];
  }).bind(this)), a;
};
We.prototype._validateOrigin = function(a) {
  return this.plugins[a].status === "ready";
};
We.prototype._validateUniqueness = function(a) {
  return !!(0, Xe.isUndefined)(this.plugins[a]);
};
var Hrt = Lp.default = We, Ip = {}, cc = { exports: {} };
cc.exports;
(function(a, e) {
  (function() {
    var n, w = typeof Ca == "object" && Ca && Ca.Object === Object && Ca, v = typeof self == "object" && self && self.Object === Object && self, $ = w || v || Function("return this")(), t = e && !e.nodeType && e, i = t && !0 && a && !a.nodeType && a, n, r = 1 / 0, s = "[object Null]", o = "[object Symbol]", d = "[object Undefined]", c = /[&<>"']/g, p = RegExp(c.source), m = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#39;"
    }, w = typeof Ca == "object" && Ca && Ca.Object === Object && Ca, v = typeof self == "object" && self && self.Object === Object && self, $ = w || v || Function("return this")();
    function P(O, V) {
      for (var x = -1, T = O == null ? 0 : O.length, M = Array(T); ++x < T; )
        M[x] = V(O[x], x, O);
      return M;
    }
    function h(O) {
      return function(V) {
        return O == null ? n : O[V];
      };
    }
    var z = h(m), b = Object.prototype, _ = b.hasOwnProperty, S = b.toString, A = $.Symbol, L = A ? A.toStringTag : n, R = A ? A.prototype : n, E = R ? R.toString : n;
    function N(O) {
      return O == null ? O === n ? d : s : L && L in Object(O) ? H(O) : j(O);
    }
    function D(O) {
      if (typeof O == "string")
        return O;
      if (ea(O))
        return P(O, D) + "";
      if (J(O))
        return E ? E.call(O) : "";
      var V = O + "";
      return V == "0" && 1 / O == -r ? "-0" : V;
    }
    function H(O) {
      var V = _.call(O, L), x = O[L];
      try {
        O[L] = n;
        var T = !0;
      } catch {
      }
      var M = S.call(O);
      return T && (V ? O[L] = x : delete O[L]), M;
    }
    function j(O) {
      return S.call(O);
    }
    var ea = Array.isArray;
    function ra(O) {
      return O != null && typeof O == "object";
    }
    function J(O) {
      return typeof O == "symbol" || ra(O) && N(O) == o;
    }
    function $a(O) {
      return O == null ? "" : D(O);
    }
    function ne(O) {
      return O = $a(O), O && p.test(O) ? O.replace(c, z) : O;
    }
    var fa = { escape: ne }, Ea = {
      assessmentPresenterResult: {},
      hiddenSpan: {},
      relevantWords: {},
      snippetEditor: {}
    };
    Ea.assessmentPresenterResult = function(O) {
      O || (O = {});
      var V = O;
      const x = V.scores, T = V.markerButtonsDisabled, M = V.i18n, U = V.activeMarker;
      var G, Y = "", K = fa.escape;
      Y += `<ul class="wpseoanalysis assessment-results">
    `;
      for (var Q in x)
        Y += `
        <li class="score">
            <span class="assessment-results__mark-container">
                `, x[Q].marker && (Y += `
                    <button type="button" `, T && (Y += ' disabled="disabled" '), Y += `
                        aria-label="`, T ? Y += (G = M.disabledMarkText) == null ? "" : G : x[Q].identifier === U ? Y += (G = M.removeMarksInText) == null ? "" : G : Y += (G = M.markInText) == null ? "" : G, Y += `"
                        class="assessment-results__mark `, T ? Y += " icon-eye-disabled " : x[Q].identifier === U ? Y += `
                            icon-eye-active
                        ` : Y += `
                            icon-eye-inactive
                        `, Y += `
                        js-assessment-results__mark-` + ((G = x[Q].identifier) == null ? "" : G) + ` yoast-tooltip yoast-tooltip-s">
                        <span class="screen-reader-text">`, T ? Y += (G = M.disabledMarkText) == null ? "" : G : x[Q].identifier === U ? Y += (G = M.removeMarksInText) == null ? "" : G : Y += (G = M.markInText) == null ? "" : G, Y += `
                        </span></button>
                `), Y += `
            </span>
            <span class="wpseo-score-icon ` + K(x[Q].className) + `"></span>
            <span class="screen-reader-text">` + ((G = x[Q].screenReaderText) == null ? "" : G) + `</span>
            <span class="wpseo-score-text">` + ((G = x[Q].text) == null ? "" : G) + `</span>
        </li>
    `;
      return Y += `
</ul>
`, Y;
    }, Ea.hiddenSpan = function(O) {
      O || (O = {});
      var V = O;
      const x = V.whiteSpace, T = V.width;
      var M = "", U = fa.escape;
      return M += '<span aria-hidden="true" style="width: ' + U(T) + "; height: auto; position: absolute; visibility: hidden; ", x !== "" && (M += "white-space: " + U(x)), M += `">

</span>
`, M;
    }, Ea.relevantWords = function(O) {
      O || (O = {});
      var V = O;
      const x = V.words;
      var T, M = "";
      M += `<table>
    <tr>
        <th>Word</th>
        <th>Density</th>
        <th>Occurrences</th>
        <th>Length</th>
        <th>Relevant word percentage</th>
        <th>Length bonus</th>
        <th>Multiplier</th>
        <th>Relevance</th>
    </tr>
    `;
      for (var U in x)
        M += `
        <tr>
            <td>` + ((T = x[U].word) == null ? "" : T) + `</td>
            <td>` + ((T = x[U].density) == null ? "" : T) + `</td>
            <td>` + ((T = x[U].occurrences) == null ? "" : T) + `</td>
            <td>` + ((T = x[U].length) == null ? "" : T) + `</td>
            <td>` + ((T = x[U].relevantWordPercentage) == null ? "" : T) + `</td>
            <td>` + ((T = x[U].lengthBonus) == null ? "" : T) + `</td>
            <td>` + ((T = x[U].multiplier) == null ? "" : T) + `</td>
            <td>` + ((T = x[U].relevance) == null ? "" : T) + `</td>
        </tr>
    `;
      return M += `
</table>
`, M;
    }, Ea.snippetEditor = function(O) {
      O || (O = {});
      var V = O;
      const x = V.i18n, T = V.rendered, M = V.metaDescriptionDate, U = V.raw, G = V.placeholder;
      var Y = "", K = fa.escape;
      return Y += `<div id="snippet_preview" class="yoast-section">
	<section class="snippet-editor__preview">
		<h3 class="snippet-editor__heading snippet-editor__heading-icon snippet-editor__heading-icon-eye">` + K(x.snippetPreview) + `</h3>
	<p class="screen-reader-text">` + K(x.snippetPreviewDescription) + `</p>

		<div id="snippet-preview-view" class="snippet-editor__view">
			<div class="snippet_container snippet_container__title snippet-editor__container" id="title_container">
				<span class="screen-reader-text">` + K(x.titleLabel) + `</span>
				<span class="title" id="render_title_container">
					<span id="snippet_title">
						` + K(T.title) + `
					</span>
				</span>
				<span class="title" id="snippet_sitename"></span>
			</div>
			<div class="snippet_container snippet_container__url snippet-editor__container" id="url_container">
				<span class="screen-reader-text">` + K(x.slugLabel) + `</span>
				<span class="urlFull">
					<cite class="url urlBase" id="snippet_citeBase">
						` + K(T.baseUrl) + `
					</cite><cite class="url" id="snippet_cite">
						` + K(T.snippetCite) + `
					</cite>
				</span><span class="down_arrow"></span>
			</div>
			<div class="snippet_container snippet_container__meta snippet-editor__container" id="meta_container">
				<span class="screen-reader-text">` + K(x.metaDescriptionLabel) + `</span>
				`, M !== "" && (Y += `
					<span class="snippet-editor__date">
						` + K(M) + ` -
					</span>
				`), Y += `
				<span class="desc" id="snippet_meta">
					` + K(T.meta) + `
				</span>
			</div>
		</div>

		<div class="snippet-editor__is-scrollable-hintwrapper">
			<span class='snippet-editor__is-scrollable-hint' aria-hidden='true'>` + K(x.isScrollableHint) + `</span>
		</div>

		<div class="snippet-editor__view-toggle">
			<button class="snippet-editor__view-icon snippet-editor__view-icon-mobile yoast-tooltip yoast-tooltip-se" type="button" data-type="mobile" aria-label="` + K(x.mobilePreviewMode) + `" />
			<button class="snippet-editor__view-icon snippet-editor__view-icon-desktop yoast-tooltip yoast-tooltip-se" type="button" data-type="desktop" aria-label="` + K(x.desktopPreviewMode) + `" />
		</div>
		<button class="snippet-editor__button snippet-editor__edit-button" type="button" aria-expanded="false">
			` + K(x.edit) + `
		</button>
	</section>

	<div class="snippet-editor__form snippet-editor--hidden">
		<label for="snippet-editor-title" class="snippet-editor__label">
			` + K(x.title) + `
			<input type="text" class="snippet-editor__input snippet-editor__title js-snippet-editor-title" id="snippet-editor-title" value="` + K(U.title) + '" placeholder="' + K(G.title) + `" />
		</label>
		<progress value="0.0" class="snippet-editor__progress snippet-editor__progress-title" aria-hidden="true">
			<div class="snippet-editor__progress-bar"></div>
		</progress>
		<label for="snippet-editor-slug" class="snippet-editor__label">
			` + K(x.slug) + `
			<input type="text" class="snippet-editor__input snippet-editor__slug js-snippet-editor-slug" id="snippet-editor-slug" value="` + K(U.snippetCite) + '" placeholder="' + K(G.urlPath) + `" />
		</label>
		<label for="snippet-editor-meta-description" class="snippet-editor__label">
			` + K(x.metaDescription) + `
			<textarea class="snippet-editor__input snippet-editor__meta-description js-snippet-editor-meta-description" id="snippet-editor-meta-description" placeholder="` + K(G.metaDesc) + '">' + K(U.meta) + `</textarea>
		</label>
		<progress value="0.0" class="snippet-editor__progress snippet-editor__progress-meta-description" aria-hidden="true">
			<div class="snippet-editor__progress-bar"></div>
		</progress>

		<button class="snippet-editor__submit snippet-editor__button" type="button">` + K(x.save) + `</button>
	</div>
</div>
`, Y;
    }, i ? ((i.exports = Ea).templates = Ea, t.templates = Ea) : $.templates = Ea;
  }).call(void 0);
})(cc, cc.exports);
var oN = cc.exports, r_ = {}, Wp = {};
Object.defineProperty(Wp, "__esModule", {
  value: !0
});
var Vrt = I, Krt = function(e, t) {
  var i = e.className.split(" ");
  i.indexOf(t) === -1 && i.push(t), e.className = i.join(" ");
}, Grt = function(e, t) {
  var i = e.className.split(" "), n = i.indexOf(t);
  n !== -1 && i.splice(n, 1), e.className = i.join(" ");
}, Yrt = function(e, t) {
  (0, Vrt.forEach)(t, this.removeClass.bind(null, e));
}, Zrt = function(e, t) {
  return e.className.indexOf(t) > -1;
};
Wp.default = {
  hasClass: Zrt,
  addClass: Krt,
  removeClass: Grt,
  removeClasses: Yrt
};
Object.defineProperty(r_, "__esModule", {
  value: !0
});
var dN = I, Xrt = Wp, Ot = Jrt(Xrt);
function Jrt(a) {
  return a && a.__esModule ? a : { default: a };
}
var XT = {
  desktop: "snippet-editor__view--desktop",
  mobile: "snippet-editor__view--mobile"
}, lN = 640, ve = function(e, t) {
  this.previewMode = e, this.previewToggles = t, this.viewElement = document.getElementById("snippet-preview-view");
};
ve.prototype.initialize = function() {
  this._setPreviewMode(this.previewMode, this._findElementByMode(this.previewMode));
};
ve.prototype.bindClickEvent = function(a) {
  a.addEventListener("click", (function() {
    this._setPreviewMode(a.getAttribute("data-type"), a), this.removeTooltipAbility(a);
  }).bind(this));
};
ve.prototype.bindMouseleaveEvent = function(a) {
  a.addEventListener("mouseleave", (function() {
    this.removeTooltipAbility(a);
  }).bind(this));
};
ve.prototype.bindBlurEvent = function(a) {
  a.addEventListener("blur", (function() {
    this.restoreTooltipAbility(a);
  }).bind(this));
};
ve.prototype.bindMouseenterEvent = function(a) {
  a.addEventListener("mouseenter", (function() {
    this.restoreTooltipAbility(a);
  }).bind(this));
};
ve.prototype.bindEvents = function() {
  (0, dN.forEach)(this.previewToggles, (function(a) {
    this.bindClickEvent(a), this.bindMouseleaveEvent(a), this.bindBlurEvent(a), this.bindMouseenterEvent(a);
  }).bind(this));
};
ve.prototype._findElementByMode = function(a) {
  return document.getElementsByClassName("snippet-editor__view-icon-" + a)[0];
};
ve.prototype._setPreviewMode = function(a, e) {
  this._removeActiveStates(), this._setActiveState(e), Ot.default.removeClass(this.viewElement, XT[this.previewMode]), Ot.default.addClass(this.viewElement, XT[a]), this.previewMode = a;
};
ve.prototype.setDesktopMode = function() {
  this._setPreviewMode("desktop", this._findElementByMode("desktop"));
};
ve.prototype.setMobileMode = function() {
  this._setPreviewMode("mobile", this._findElementByMode("mobile"));
};
ve.prototype.setVisibility = function(a) {
  a < lN ? (this.setMobileMode(), Ot.default.addClass(this.viewElement, "snippet-editor__view--desktop-has-scroll")) : this.setDesktopMode();
};
ve.prototype.setScrollHintVisibility = function(a) {
  Ot.default.removeClass(this.viewElement, "snippet-editor__view--desktop-has-scroll"), a < lN && Ot.default.addClass(this.viewElement, "snippet-editor__view--desktop-has-scroll");
};
ve.prototype._removeActiveStates = function() {
  (0, dN.forEach)(this.previewToggles, this._removeActiveState.bind(this));
};
ve.prototype._removeActiveState = function(a) {
  Ot.default.removeClass(a, "snippet-editor__view-icon-" + a.getAttribute("data-type") + "--active"), Ot.default.removeClass(a, "snippet-editor__view-icon--active"), a.setAttribute("aria-pressed", "false");
};
ve.prototype.removeTooltipAbility = function(a) {
  Ot.default.addClass(a, "yoast-tooltip-hidden");
};
ve.prototype.restoreTooltipAbility = function(a) {
  Ot.default.removeClass(a, "yoast-tooltip-hidden");
};
ve.prototype._setActiveState = function(a) {
  Ot.default.addClass(a, "snippet-editor__view-icon-" + a.getAttribute("data-type") + "--active"), Ot.default.addClass(a, "snippet-editor__view-icon--active"), a.setAttribute("aria-pressed", "true");
};
r_.default = ve;
Object.defineProperty(Ip, "__esModule", {
  value: !0
});
var wa = I, Qrt = vd, wy = En(Qrt), Fp = re, ast = be, cN = En(ast), est = $s, tst = En(est), ist = pd, uN = En(ist), nst = oN, pN = En(nst), rst = r_, sst = En(rst), ost = Wp, pe = En(ost), dst = hu, lst = En(dst);
function En(a) {
  return a && a.__esModule ? a : { default: a };
}
var cst = pN.default.snippetEditor, ust = pN.default.hiddenSpan, mN = {
  data: {
    title: "",
    metaDesc: "",
    urlPath: "",
    titleWidth: 0,
    metaHeight: 0
  },
  placeholder: {
    title: "This is an example title - edit by clicking here",
    metaDesc: "Modify your meta description by editing it right here",
    urlPath: "example-post/"
  },
  defaultValue: {
    title: "",
    metaDesc: ""
  },
  baseURL: "http://example.com/",
  callbacks: {
    /**
     * Empty function.
     * @returns {void}
     */
    saveSnippetData: function() {
    }
  },
  addTrailingSlash: !0,
  metaDescriptionDate: "",
  previewMode: "desktop"
}, vo = 600;
const $i = lst.default.maxMeta;
var pst = [{
  preview: "title_container",
  inputField: "title"
}, {
  preview: "url_container",
  inputField: "urlPath"
}, {
  preview: "meta_container",
  inputField: "metaDesc"
}], mst = function() {
  var e = this.opts.baseURL;
  return this.hasApp() && !(0, wa.isEmpty)(this.refObj.rawData.baseUrl) && this.opts.baseURL === mN.baseURL && (e = this.refObj.rawData.baseUrl), e;
};
function df(a) {
  return this.data[a];
}
function lf(a, e) {
  this.element.input[a].value = e, this.data[a] = e;
}
function gst(a) {
  return a.indexOf("/") === a.length - 1;
}
function zst() {
  var a = document.createElement("progress");
  return !(0, wa.isUndefined)(a.max);
}
function fst(a) {
  var e;
  switch (!0) {
    case (a > 0 && a <= 399):
    case a > 600:
      e = "ok";
      break;
    case (a >= 400 && a <= 600):
      e = "good";
      break;
    default:
      e = "bad";
      break;
  }
  return e;
}
function yst(a) {
  var e;
  switch (!0) {
    case (a > 0 && a < 120):
    case a > $i:
      e = "ok";
      break;
    case (a >= 120 && a <= $i):
      e = "good";
      break;
    default:
      e = "bad";
      break;
  }
  return e;
}
function JT(a, e, t, i) {
  var n, r, s = ["snippet-editor__progress--bad", "snippet-editor__progress--ok", "snippet-editor__progress--good"];
  a.value = e, pe.default.removeClasses(a, s), pe.default.addClass(a, "snippet-editor__progress--" + i), this.hasProgressSupport || (n = a.getElementsByClassName("snippet-editor__progress-bar")[0], r = e / t * 100, n.style.width = r + "%");
}
var na = function(e) {
  if ((0, wa.defaultsDeep)(e, mN), this.data = e.data, (0, wa.isUndefined)(e.analyzerApp) || (this.refObj = e.analyzerApp, this.i18n = this.refObj.i18n, this.data = {
    title: this.refObj.rawData.snippetTitle || "",
    urlPath: this.refObj.rawData.snippetCite || "",
    metaDesc: this.refObj.rawData.snippetMeta || ""
  }, (0, wa.isEmpty)(this.refObj.rawData.metaTitle) || (e.placeholder.title = this.refObj.rawData.metaTitle)), (0, wa.isUndefined)(e.i18n) || (this.i18n = e.i18n), !(0, wa.isElement)(e.targetElement))
    throw new Error("The snippet preview requires a valid target element");
  this.opts = e, this._currentFocus = null, this._currentHover = null, this.unformattedText = {}, Object.defineProperty(this.unformattedText, "snippet_cite", {
    get: df.bind(this, "urlPath"),
    set: lf.bind(this, "urlPath")
  }), Object.defineProperty(this.unformattedText, "snippet_meta", {
    get: df.bind(this, "metaDesc"),
    set: lf.bind(this, "metaDesc")
  }), Object.defineProperty(this.unformattedText, "snippet_title", {
    get: df.bind(this, "title"),
    set: lf.bind(this, "title")
  });
};
na.prototype.renderTemplate = function() {
  var a = this.opts.targetElement;
  a.innerHTML = cst({
    raw: {
      title: this.data.title,
      snippetCite: this.data.urlPath,
      meta: this.data.metaDesc
    },
    rendered: {
      title: this.formatTitle(),
      baseUrl: this.formatUrl(),
      snippetCite: this.formatCite(),
      meta: this.formatMeta()
    },
    metaDescriptionDate: this.opts.metaDescriptionDate,
    placeholder: this.opts.placeholder,
    i18n: {
      edit: this.i18n.dgettext("js-text-analysis", "Edit snippet"),
      title: this.i18n.dgettext("js-text-analysis", "SEO title"),
      slug: this.i18n.dgettext("js-text-analysis", "Slug"),
      metaDescription: this.i18n.dgettext("js-text-analysis", "Meta description"),
      save: this.i18n.dgettext("js-text-analysis", "Close snippet editor"),
      snippetPreview: this.i18n.dgettext("js-text-analysis", "Google preview"),
      titleLabel: this.i18n.dgettext("js-text-analysis", "SEO title preview:"),
      slugLabel: this.i18n.dgettext("js-text-analysis", "Slug preview:"),
      metaDescriptionLabel: this.i18n.dgettext("js-text-analysis", "Meta description preview:"),
      snippetPreviewDescription: this.i18n.dgettext("js-text-analysis", "You can click on each element in the preview to jump to the Snippet Editor."),
      desktopPreviewMode: this.i18n.dgettext("js-text-analysis", "Desktop preview"),
      mobilePreviewMode: this.i18n.dgettext("js-text-analysis", "Mobile preview"),
      isScrollableHint: this.i18n.dgettext("js-text-analysis", "Scroll to see the preview content.")
    }
  }), this.element = {
    measurers: {
      metaHeight: null
    },
    rendered: {
      title: document.getElementById("snippet_title"),
      urlBase: document.getElementById("snippet_citeBase"),
      urlPath: document.getElementById("snippet_cite"),
      metaDesc: document.getElementById("snippet_meta")
    },
    input: {
      title: a.getElementsByClassName("js-snippet-editor-title")[0],
      urlPath: a.getElementsByClassName("js-snippet-editor-slug")[0],
      metaDesc: a.getElementsByClassName("js-snippet-editor-meta-description")[0]
    },
    progress: {
      title: a.getElementsByClassName("snippet-editor__progress-title")[0],
      metaDesc: a.getElementsByClassName("snippet-editor__progress-meta-description")[0]
    },
    container: document.getElementById("snippet_preview"),
    formContainer: a.getElementsByClassName("snippet-editor__form")[0],
    editToggle: a.getElementsByClassName("snippet-editor__edit-button")[0],
    closeEditor: a.getElementsByClassName("snippet-editor__submit")[0],
    formFields: a.getElementsByClassName("snippet-editor__form-field")
  }, this.element.label = {
    title: this.element.input.title.parentNode,
    urlPath: this.element.input.urlPath.parentNode,
    metaDesc: this.element.input.metaDesc.parentNode
  }, this.element.preview = {
    title: this.element.rendered.title.parentNode,
    urlPath: this.element.rendered.urlPath.parentNode,
    metaDesc: this.element.rendered.metaDesc.parentNode
  }, this.hasProgressSupport = zst(), this.hasProgressSupport ? (this.element.progress.title.max = vo, this.element.progress.metaDesc.max = $i) : (0, wa.forEach)(this.element.progress, function(e) {
    pe.default.addClass(e, "snippet-editor__progress--fallback");
  }), this.initPreviewToggler(), this.setInitialView(), this.opened = !1, this.createMeasurementElements(), this.updateProgressBars();
};
na.prototype.initPreviewToggler = function() {
  this.snippetPreviewToggle = new sst.default(this.opts.previewMode, this.opts.targetElement.getElementsByClassName("snippet-editor__view-icon")), this.snippetPreviewToggle.initialize(), this.snippetPreviewToggle.bindEvents();
};
na.prototype.refresh = function() {
  this.output = this.htmlOutput(), this.renderOutput(), this.renderSnippetStyle(), this.measureTitle(), this.measureMetaDescription(), this.updateProgressBars();
};
function gN() {
  var a = this.data.title;
  return (0, wa.isEmpty)(a) && (a = this.opts.defaultValue.title), this.hasPluggable() && (a = this.refObj.pluggable._applyModifications("data_page_title", a)), (0, cN.default)(a);
}
var Dp = function() {
  var e = this.data.metaDesc;
  return (0, wa.isEmpty)(e) && (e = this.opts.defaultValue.metaDesc), this.hasPluggable() && (e = this.refObj.pluggable._applyModifications("data_meta_desc", e)), !(0, wa.isEmpty)(this.opts.metaDescriptionDate) && !(0, wa.isEmpty)(e) && (e = this.opts.metaDescriptionDate + " - " + this.data.metaDesc), (0, cN.default)(e);
};
na.prototype.getAnalyzerData = function() {
  return {
    title: gN.call(this),
    url: this.data.urlPath,
    metaDesc: Dp.call(this)
  };
};
na.prototype.callRegisteredEventBinder = function() {
  this.hasApp() && this.refObj.callbacks.bindElementEvents(this.refObj);
};
na.prototype.init = function() {
  this.hasApp() && this.refObj.rawData.metaTitle !== null && this.refObj.rawData.cite !== null && this.refresh();
};
na.prototype.htmlOutput = function() {
  var a = {};
  return a.title = this.formatTitle(), a.cite = this.formatCite(), a.meta = this.formatMeta(), a.url = this.formatUrl(), a;
};
na.prototype.formatTitle = function() {
  var a = this.data.title;
  return (0, wa.isEmpty)(a) && (a = this.opts.defaultValue.title), (0, wa.isEmpty)(a) && (a = this.opts.placeholder.title), this.hasPluggable() && this.refObj.pluggable.loaded && (a = this.refObj.pluggable._applyModifications("data_page_title", a)), a = (0, Fp.stripFullTags)(a), (0, wa.isEmpty)(a) && (a = this.i18n.dgettext("js-text-analysis", "Please provide an SEO title by editing the snippet below.")), a;
};
na.prototype.formatUrl = function() {
  var a = mst.call(this);
  return a.replace(/http:\/\//ig, "");
};
na.prototype.formatCite = function() {
  var a = this.data.urlPath;
  return a = (0, tst.default)((0, Fp.stripFullTags)(a)), (0, wa.isEmpty)(a) && (a = this.opts.placeholder.urlPath), this.hasApp() && !(0, wa.isEmpty)(this.refObj.rawData.keyword) && (a = this.formatKeywordUrl(a)), this.opts.addTrailingSlash && !gst(a) && (a = a + "/"), a = a.replace(/\s/g, "-"), a = a.replace(/\?|#/g, ""), a;
};
na.prototype.formatMeta = function() {
  var a = this.data.metaDesc;
  return (0, wa.isEmpty)(a) && (a = this.getMetaText()), this.hasPluggable() && this.refObj.pluggable.loaded && (a = this.refObj.pluggable._applyModifications("data_meta_desc", a)), a = (0, Fp.stripFullTags)(a), a = a.substring(0, $i), this.hasApp() && !(0, wa.isEmpty)(this.refObj.rawData.keyword) && (a = this.formatKeyword(a)), (0, wa.isEmpty)(a) && (a = this.i18n.dgettext("js-text-analysis", "Please provide a meta description by editing the snippet below.")), a;
};
na.prototype.getMetaText = function() {
  var a = this.opts.defaultValue.metaDesc;
  return this.hasApp() && !(0, wa.isUndefined)(this.refObj.rawData.excerpt) && (0, wa.isEmpty)(a) && (a = this.refObj.rawData.excerpt), this.hasApp() && !(0, wa.isUndefined)(this.refObj.rawData.text) && (0, wa.isEmpty)(a) && (a = this.refObj.rawData.text, this.hasPluggable() && this.refObj.pluggable.loaded && (a = this.refObj.pluggable._applyModifications("content", a))), a = (0, Fp.stripFullTags)(a), a.substring(0, $i);
};
na.prototype.getIndexMatches = function() {
  for (var a = [], e = 0, t = this.refObj.rawData.text.indexOf(this.refObj.rawData.keyword, e); t > -1; )
    a.push(t), e = t + this.refObj.rawData.keyword.length, t = this.refObj.rawData.text.indexOf(this.refObj.rawData.keyword, e);
  return a;
};
na.prototype.getPeriodMatches = function() {
  for (var a = [0], e, t = 0; (e = this.refObj.rawData.text.indexOf(".", t)) > -1; )
    a.push(e), t = e + 1;
  return a;
};
na.prototype.formatKeyword = function(a) {
  var e = this.refObj.rawData.keyword, t = (0, wy.default)(e, "", !1);
  a = a.replace(t, function(n) {
    return "<strong>" + n + "</strong>";
  });
  var i = (0, uN.default)(e, this.refObj.rawData.locale);
  return i !== e && (t = (0, wy.default)(i, "", !1), a = a.replace(t, function(n) {
    return "<strong>" + n + "</strong>";
  })), a;
};
na.prototype.formatKeywordUrl = function(a) {
  var e = this.refObj.rawData.keyword;
  e = (0, uN.default)(e, this.refObj.rawData.locale), e = e.replace(/'/, "");
  var t = e.replace(/\s/g, "-"), i = (0, wy.default)(t, "\\-");
  return a.replace(i, function(n) {
    return "<strong>" + n + "</strong>";
  });
};
na.prototype.renderOutput = function() {
  this.element.rendered.title.innerHTML = this.output.title, this.element.rendered.urlPath.innerHTML = this.output.cite, this.element.rendered.urlBase.innerHTML = this.output.url, this.element.rendered.metaDesc.innerHTML = this.output.meta;
};
na.prototype.renderSnippetStyle = function() {
  var a = this.element.rendered.metaDesc, e = Dp.call(this);
  (0, wa.isEmpty)(e) ? (pe.default.addClass(a, "desc-render"), pe.default.removeClass(a, "desc-default")) : (pe.default.addClass(a, "desc-default"), pe.default.removeClass(a, "desc-render"));
};
na.prototype.reRender = function() {
  this.init();
};
na.prototype.checkTextLength = function(a) {
  var e = a.currentTarget.textContent;
  switch (a.currentTarget.id) {
    case "snippet_meta":
      a.currentTarget.className = "desc", e.length > $i && (YoastSEO.app.snippetPreview.unformattedText.snippet_meta = a.currentTarget.textContent, a.currentTarget.textContent = e.substring(0, $i));
      break;
    case "snippet_title":
      a.currentTarget.className = "title", e.length > vo && (YoastSEO.app.snippetPreview.unformattedText.snippet_title = a.currentTarget.textContent, a.currentTarget.textContent = e.substring(0, vo));
      break;
  }
};
na.prototype.getUnformattedText = function(a) {
  var e = a.currentTarget.id;
  typeof this.unformattedText[e] < "u" && (a.currentTarget.textContent = this.unformattedText[e]);
};
na.prototype.setUnformattedText = function(a) {
  var e = a.currentTarget.id;
  this.unformattedText[e] = document.getElementById(e).textContent;
};
na.prototype.validateFields = function() {
  var a = Dp.call(this), e = gN.call(this);
  a.length > $i ? pe.default.addClass(this.element.input.metaDesc, "snippet-editor__field--invalid") : pe.default.removeClass(this.element.input.metaDesc, "snippet-editor__field--invalid"), e.length > vo ? pe.default.addClass(this.element.input.title, "snippet-editor__field--invalid") : pe.default.removeClass(this.element.input.title, "snippet-editor__field--invalid");
};
na.prototype.updateProgressBars = function() {
  var a, e, t;
  t = Dp.call(this), e = fst(this.data.titleWidth), a = yst(t.length), JT.call(this, this.element.progress.title, this.data.titleWidth, vo, e), JT.call(this, this.element.progress.metaDesc, t.length, $i, a);
};
na.prototype.setInitialView = function() {
  var a = document.getElementById("snippet_preview").getBoundingClientRect().width;
  this.snippetPreviewToggle.setVisibility(a);
};
na.prototype.handleWindowResizing = (0, wa.debounce)(function() {
  var a = document.getElementById("snippet_preview").getBoundingClientRect().width;
  this.snippetPreviewToggle.setScrollHintVisibility(a);
}, 25);
na.prototype.bindEvents = function() {
  var a, e = ["title", "slug", "meta-description"];
  (0, wa.forEach)(e, (function(t) {
    a = document.getElementsByClassName("js-snippet-editor-" + t)[0], a.addEventListener("keydown", this.changedInput.bind(this)), a.addEventListener("keyup", this.changedInput.bind(this)), a.addEventListener("input", this.changedInput.bind(this)), a.addEventListener("focus", this.changedInput.bind(this)), a.addEventListener("blur", this.changedInput.bind(this));
  }).bind(this)), this.element.editToggle.addEventListener("click", this.toggleEditor.bind(this)), this.element.closeEditor.addEventListener("click", this.closeEditor.bind(this)), window.addEventListener("resize", this.handleWindowResizing.bind(this)), (0, wa.forEach)(pst, (function(t) {
    var i = document.getElementById(t.preview), n = this.element.input[t.inputField];
    i.addEventListener("click", (function() {
      this.openEditor(), n.focus();
    }).bind(this)), n.addEventListener("focus", (function() {
      this._currentFocus = t.inputField, this._updateFocusCarets();
    }).bind(this)), n.addEventListener("blur", (function() {
      this._currentFocus = null, this._updateFocusCarets();
    }).bind(this)), i.addEventListener("mouseover", (function() {
      this._currentHover = t.inputField, this._updateHoverCarets();
    }).bind(this)), i.addEventListener("mouseout", (function() {
      this._currentHover = null, this._updateHoverCarets();
    }).bind(this));
  }).bind(this));
};
na.prototype.changedInput = (0, wa.debounce)(function() {
  this.updateDataFromDOM(), this.validateFields(), this.updateProgressBars(), this.refresh(), this.hasApp() && this.refObj.refresh();
}, 25);
na.prototype.updateDataFromDOM = function() {
  this.data.title = this.element.input.title.value, this.data.urlPath = this.element.input.urlPath.value, this.data.metaDesc = this.element.input.metaDesc.value, this.opts.callbacks.saveSnippetData((0, wa.clone)(this.data));
};
na.prototype.openEditor = function() {
  this.element.editToggle.setAttribute("aria-expanded", "true"), pe.default.removeClass(this.element.formContainer, "snippet-editor--hidden"), this.opened = !0;
};
na.prototype.closeEditor = function() {
  pe.default.addClass(this.element.formContainer, "snippet-editor--hidden"), this.element.editToggle.setAttribute("aria-expanded", "false"), this.element.editToggle.focus(), this.opened = !1;
};
na.prototype.toggleEditor = function() {
  this.opened ? this.closeEditor() : this.openEditor();
};
na.prototype._updateFocusCarets = function() {
  var a, e;
  (0, wa.forEach)(this.element.label, function(t) {
    pe.default.removeClass(t, "snippet-editor__label--focus");
  }), (0, wa.forEach)(this.element.preview, function(t) {
    pe.default.removeClass(t, "snippet-editor__container--focus");
  }), this._currentFocus !== null && (a = this.element.label[this._currentFocus], e = this.element.preview[this._currentFocus], pe.default.addClass(a, "snippet-editor__label--focus"), pe.default.addClass(e, "snippet-editor__container--focus"));
};
na.prototype._updateHoverCarets = function() {
  var a;
  (0, wa.forEach)(this.element.label, function(e) {
    pe.default.removeClass(e, "snippet-editor__label--hover");
  }), this._currentHover !== null && (a = this.element.label[this._currentHover], pe.default.addClass(a, "snippet-editor__label--hover"));
};
na.prototype.setTitle = function(a) {
  this.element.input.title.value = a, this.changedInput();
};
na.prototype.setUrlPath = function(a) {
  this.element.input.urlPath.value = a, this.changedInput();
};
na.prototype.setMetaDescription = function(a) {
  this.element.input.metaDesc.value = a, this.changedInput();
};
na.prototype.createMeasurementElements = function() {
  var a, e;
  a = ust({
    width: document.getElementById("meta_container").offsetWidth + "px",
    whiteSpace: ""
  }), e = document.createElement("div"), e.className = "yoast-measurement-elements-holder", e.innerHTML = a, document.body.appendChild(e), this.element.measurers.metaHeight = e.childNodes[0];
};
na.prototype.measureTitle = function() {
  (this.element.rendered.title.offsetWidth !== 0 || this.element.rendered.title.textContent === "") && (this.data.titleWidth = this.element.rendered.title.offsetWidth);
};
na.prototype.measureMetaDescription = function() {
  var a = this.element.measurers.metaHeight;
  a.innerHTML = this.element.rendered.metaDesc.innerHTML, this.data.metaHeight = a.offsetHeight;
};
na.prototype.getTitleWidth = function() {
  return this.data.titleWidth;
};
na.prototype.setTitleWidth = function(a) {
  this.data.titleWidth = a;
};
na.prototype.hasApp = function() {
  return !(0, wa.isUndefined)(this.refObj);
};
na.prototype.hasPluggable = function() {
  return !(0, wa.isUndefined)(this.refObj) && !(0, wa.isUndefined)(this.refObj.pluggable);
};
na.prototype.disableEnter = function(a) {
};
na.prototype.textFeedback = function(a) {
};
na.prototype.showEditIcon = function(a) {
};
na.prototype.hideEditIcon = function() {
};
na.prototype.setFocus = function(a) {
};
var wst = Ip.default = na, Hd = {};
Object.defineProperty(Hd, "__esModule", {
  value: !0
});
var hst = Object.assign || function(a) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e];
    for (var i in t)
      Object.prototype.hasOwnProperty.call(t, i) && (a[i] = t[i]);
  }
  return a;
}, hy = I;
function bst(a, e) {
  var t = {};
  for (var i in a)
    e.indexOf(i) >= 0 || Object.prototype.hasOwnProperty.call(a, i) && (t[i] = a[i]);
  return t;
}
var cf = {
  keyword: "",
  synonyms: "",
  description: "",
  title: "",
  titleWidth: 0,
  url: "",
  locale: "en_US",
  permalink: ""
}, Xa = function(e, t) {
  this._text = e || "", t = t || {}, (0, hy.defaults)(t, cf), t.locale === "" && (t.locale = cf.locale);
  const i = t.keyword.replace(/[‘’“”"'.?!:;,¿¡«»&*@#±^%|~`[\](){}⟨⟩<>/\\–\-\u2014\u00d7\u002b\u0026\s]/g, "");
  (0, hy.isEmpty)(i) && (t.keyword = cf.keyword), this._attributes = t;
};
Xa.prototype.hasKeyword = function() {
  return this._attributes.keyword !== "";
};
Xa.prototype.getKeyword = function() {
  return this._attributes.keyword;
};
Xa.prototype.hasSynonyms = function() {
  return this._attributes.synonyms !== "";
};
Xa.prototype.getSynonyms = function() {
  return this._attributes.synonyms;
};
Xa.prototype.hasText = function() {
  return this._text !== "";
};
Xa.prototype.getText = function() {
  return this._text;
};
Xa.prototype.hasDescription = function() {
  return this._attributes.description !== "";
};
Xa.prototype.getDescription = function() {
  return this._attributes.description;
};
Xa.prototype.hasTitle = function() {
  return this._attributes.title !== "";
};
Xa.prototype.getTitle = function() {
  return this._attributes.title;
};
Xa.prototype.hasTitleWidth = function() {
  return this._attributes.titleWidth !== 0;
};
Xa.prototype.getTitleWidth = function() {
  return this._attributes.titleWidth;
};
Xa.prototype.hasUrl = function() {
  return this._attributes.url !== "";
};
Xa.prototype.getUrl = function() {
  return this._attributes.url;
};
Xa.prototype.hasLocale = function() {
  return this._attributes.locale !== "";
};
Xa.prototype.getLocale = function() {
  return this._attributes.locale;
};
Xa.prototype.hasPermalink = function() {
  return this._attributes.permalink !== "";
};
Xa.prototype.getPermalink = function() {
  return this._attributes.permalink;
};
Xa.prototype.serialize = function() {
  return hst({
    _parseClass: "Paper",
    text: this._text
  }, this._attributes);
};
Xa.prototype.equals = function(a) {
  return this._text === a.getText() && (0, hy.isEqual)(this._attributes, a._attributes);
};
Xa.parse = function(a) {
  const e = a.text;
  a._parseClass;
  const t = bst(a, ["text", "_parseClass"]);
  return new Xa(e, t);
};
var vst = Hd.default = Xa, s_ = {};
Object.defineProperty(s_, "__esModule", {
  value: !0
});
var kst = Pa, _st = Lt, zN = Sn(_st), $st = Ri, jst = Sn($st), xst = Oi, Ast = Sn(xst), Est = Mi, Sst = Sn(Est), qst = Ci, Pst = Sn(qst), Tst = cr, Rst = Sn(Tst), Ost = lr, Mst = Sn(Ost), Cst = Ti, Lst = Sn(Cst);
function Sn(a) {
  return a && a.__esModule ? a : { default: a };
}
const fN = function(e, t) {
  zN.default.call(this, e, t), this._assessments = [new jst.default(), new Ast.default({ isRelatedKeyphrase: !0 }), new Sst.default(), new Pst.default(), new Mst.default(), new Rst.default(), new Lst.default()];
};
(0, kst.inherits)(fN, zN.default);
s_.default = fN;
var Bp = {};
Object.defineProperty(Bp, "__esModule", {
  value: !0
});
var Ist = Lt, Wst = Wt(Ist), Fst = Nd, Dst = Wt(Fst), Bst = Oo, Nst = Wt(Bst), Ust = Co, Hst = Wt(Ust), Vst = No, Kst = Wt(Vst), Gst = Uo, Yst = Wt(Gst), Zst = Ko, Xst = Wt(Zst), Jst = Fo, Qst = Wt(Jst), aot = Bo, eot = Wt(aot), tot = Vo, iot = Wt(tot), not = Cp, QT = Wt(not);
function Wt(a) {
  return a && a.__esModule ? a : { default: a };
}
const yN = function(e, t = {}) {
  Wst.default.call(this, e, t), this.type = "CornerstoneContentAssessor";
  const i = t.hasOwnProperty("locale") ? t.locale : "en_US";
  this._assessments = [new Nst.default((0, QT.default)(i).fleschReading), new Yst.default({
    parameters: {
      slightlyTooMany: 250,
      farTooMany: 300,
      recommendedMaximumWordCount: 250
    }
  }), Hst.default, new Kst.default({
    recommendedWordCount: (0, QT.default)(i).sentenceLength.recommendedWordCount,
    slightlyTooMany: 20,
    farTooMany: 25
  }), Xst.default, Qst.default, iot.default, eot.default];
};
Pa.inherits(yN, Dst.default);
Bp.default = yN;
var o_ = {};
Object.defineProperty(o_, "__esModule", {
  value: !0
});
var rot = Pa, sot = Lt, wN = qn(sot), oot = Ri, dot = qn(oot), lot = Oi, cot = qn(lot), uot = Mi, pot = qn(uot), mot = Ci, got = qn(mot), zot = cr, fot = qn(zot), yot = lr, wot = qn(yot), hot = Ti, bot = qn(hot);
function qn(a) {
  return a && a.__esModule ? a : { default: a };
}
const hN = function(e, t) {
  wN.default.call(this, e, t), this._assessments = [new dot.default(), new cot.default(), new pot.default(), new got.default(), new wot.default(), new fot.default({
    scores: {
      noImages: 3,
      withAltNonKeyword: 3,
      withAlt: 3,
      noAlt: 3
    }
  }), new bot.default()];
};
(0, rot.inherits)(hN, wN.default);
o_.default = hN;
var Np = {};
Object.defineProperty(Np, "__esModule", {
  value: !0
});
var vot = Pa, kot = Ri, _ot = ke(kot), $ot = Oi, jot = ke($ot), xot = Mi, Aot = ke(xot), Eot = Ci, Sot = ke(Eot), qot = lr, Pot = ke(qot), Tot = Zo, Rot = ke(Tot), Oot = hs, Mot = ke(Oot), Cot = bs, Lot = ke(Cot), Iot = Lt, Wot = ke(Iot), Fot = Bd, Dot = ke(Fot), Bot = zs, Not = ke(Bot), Uot = rd, Hot = ke(Uot), Vot = cr, Kot = ke(Vot), Got = ws, Yot = ke(Got), Zot = nd, Xot = ke(Zot), Jot = fs, Qot = ke(Jot), adt = Ti, edt = ke(adt), tdt = ys, idt = ke(tdt);
function ke(a) {
  return a && a.__esModule ? a : { default: a };
}
const bN = function(e, t) {
  Wot.default.call(this, e, t), this.type = "CornerstoneSEOAssessor", this._assessments = [new _ot.default(), new jot.default(), new Aot.default(), new Sot.default(), new Not.default({
    scores: {
      tooLong: 3,
      tooShort: 3
    }
  }), new Hot.default(), new Pot.default(), new Kot.default({
    scores: {
      noImages: 3,
      withAltNonKeyword: 3,
      withAlt: 3,
      noAlt: 3
    }
  }), new Yot.default({
    recommendedMinimum: 900,
    slightlyBelowMinimum: 400,
    belowMinimum: 300,
    scores: {
      belowMinimum: -20,
      farBelowMinimum: -20
    },
    cornerstoneContent: !0
  }), new Xot.default({
    scores: {
      noLinks: 3
    }
  }), new Mot.default(), new Rot.default(), new Qot.default({
    scores: {
      widthTooShort: 3,
      widthTooLong: 3
    }
  }), new Lot.default({
    scores: {
      okay: 3
    }
  }), new edt.default(), new idt.default()];
};
(0, vot.inherits)(bN, Dot.default);
Np.default = bN;
var d_ = {};
Object.defineProperty(d_, "__esModule", {
  value: !0
});
d_.default = rdt;
var ndt = I;
function rdt(a, e) {
  for (let t = 0; t < e.length; t++)
    if ((0, ndt.includes)(a, e[t]))
      return !0;
  return !1;
}
var l_ = {};
Object.defineProperty(l_, "__esModule", {
  value: !0
});
var sdt = Pa, odt = Ri, ddt = Ds(odt), ldt = Oi, cdt = Ds(ldt), udt = Mi, pdt = Ds(udt), mdt = Ci, gdt = Ds(mdt), zdt = Lt, vN = Ds(zdt), fdt = Ti, ydt = Ds(fdt);
function Ds(a) {
  return a && a.__esModule ? a : { default: a };
}
const kN = function(e, t) {
  vN.default.call(this, e, t), this.type = "RelatedKeywordsTaxonomyAssessor", this._assessments = [
    new ddt.default(),
    new cdt.default({ isRelatedKeyphrase: !0 }),
    new pdt.default(),
    new gdt.default(),
    // Text Images assessment here.
    new ydt.default()
  ];
};
(0, sdt.inherits)(kN, vN.default);
l_.default = kN;
var c_ = {}, u_ = {}, p_ = {};
Object.defineProperty(p_, "__esModule", {
  value: !0
});
var pl = I;
class wdt {
  /**
   * Initializes a task.
   *
   * @param {number}   id      The task identifier.
   * @param {Function} execute Executes the job with the data.
   * @param {Function} done    Callback for the scheduler.
   * @param {Object}   [data]  Optional data for when executing the task.
   * @param {string}   type    The type of the task (analyze, analyzeRelatedKeywords, loadScript or customMessage)
   */
  constructor(e, t, i, n = {}, r = "analyze") {
    if (!(0, pl.isNumber)(e))
      throw new Error("Task.id should be a number.");
    if (!(0, pl.isFunction)(t))
      throw new Error("Task.execute should be a function.");
    if (!(0, pl.isFunction)(i))
      throw new Error("Task.done should be a function.");
    if (!(0, pl.isObject)(n))
      throw new Error("Task.data should be an object.");
    this.id = e, this.execute = t, this.done = i, this.data = n, this.type = r;
  }
}
p_.default = wdt;
Object.defineProperty(u_, "__esModule", {
  value: !0
});
var hdt = I, bdt = p_, vdt = kdt(bdt);
function kdt(a) {
  return a && a.__esModule ? a : { default: a };
}
const _dt = {
  pollTime: 50
};
class $dt {
  /**
   * Initializes a Scheduler.
   *
   * @param {Object}  [configuration]             The configuration.
   * @param {number}  [configuration.pollTime]    The time in between each task
   *                                              poll in milliseconds,
   *                                              defaults to 50.
   */
  constructor(e = {}) {
    this._configuration = (0, hdt.merge)(_dt, e), this._tasks = {
      standard: [],
      extensions: [],
      analyze: [],
      analyzeRelatedKeywords: []
    }, this._pollHandle = null, this._started = !1, this.startPolling = this.startPolling.bind(this), this.stopPolling = this.stopPolling.bind(this), this.tick = this.tick.bind(this);
  }
  /**
   * Initialize polling.
   *
   * @returns {void}
   */
  startPolling() {
    this._started || (this._started = !0, this.tick());
  }
  /**
   * Do a tick and execute a task.
   *
   * @returns {void}
   */
  tick() {
    this.executeNextTask().then(() => {
      this._pollHandle = setTimeout(this.tick, this._configuration.pollTime);
    });
  }
  /**
   * Stop polling.
   *
   * @returns {void}
   */
  stopPolling() {
    clearTimeout(this._pollHandle), this._pollHandle = null, this._started = !1;
  }
  /**
   * Schedule a task.
   *
   * @param {Object}   task         The task object.
   * @param {number}   task.id      The task id.
   * @param {function} task.execute The function to run for task execution.
   * @param {function} task.done    The function to run when the task is done.
   * @param {Object}   task.data    The data object to execute with.
   * @param {string}   task.type    The type of the task.
   *
   * @returns {void}
   */
  schedule({ id: e, execute: t, done: i, data: n, type: r }) {
    const s = new vdt.default(e, t, i, n, r);
    switch (r) {
      case "customMessage":
      case "loadScript":
        this._tasks.extensions.push(s);
        break;
      case "analyze":
        this._tasks.analyze = [s];
        break;
      case "analyzeRelatedKeywords":
        this._tasks.analyzeRelatedKeywords = [s];
        break;
      default:
        this._tasks.standard.push(s);
    }
  }
  /**
   * Retrieves the next task from the queue. Queues are sorted from lowest to highest priority.
   *
   * @returns {Task|null} The next task or null if none are available.
   */
  getNextTask() {
    return this._tasks.extensions.length > 0 ? this._tasks.extensions.shift() : this._tasks.analyze.length > 0 ? this._tasks.analyze.shift() : this._tasks.analyzeRelatedKeywords.length > 0 ? this._tasks.analyzeRelatedKeywords.shift() : this._tasks.standard.length > 0 ? this._tasks.standard.shift() : null;
  }
  /**
   * Executes the next task.
   *
   * @returns {Promise} Resolves once the task is done, with the result of the task.
   */
  executeNextTask() {
    const e = this.getNextTask();
    return e === null ? Promise.resolve(null) : Promise.resolve().then(() => e.execute(e.id, e.data)).then((t) => (e.done(e.id, t), t));
  }
}
u_.default = $dt;
Object.defineProperty(c_, "__esModule", {
  value: !0
});
var jdt = u_, xdt = Adt(jdt);
function Adt(a) {
  return a && a.__esModule ? a : { default: a };
}
c_.default = xdt.default;
var Up = {}, m_ = {};
Object.defineProperty(m_, "__esModule", {
  value: !0
});
m_.default = by;
var uf = I, Edt = za, Sdt = Pn(Edt), qdt = ct, Pdt = Pn(qdt), Tdt = Hd, Rdt = Pn(Tdt), Odt = $t, Mdt = Pn(Odt), Cdt = gp, Ldt = Pn(Cdt), Idt = jt, Wdt = Pn(Idt), Fdt = ju, Ddt = Pn(Fdt), Bdt = Tp, Ndt = Pn(Bdt);
function Pn(a) {
  return a && a.__esModule ? a : { default: a };
}
const aR = {
  AssessmentResult: Sdt.default,
  Mark: Pdt.default,
  Paper: Rdt.default,
  Participle: Mdt.default,
  Sentence: Ldt.default,
  SentencePart: Wdt.default,
  WordCombination: Ddt.default,
  ProminentWord: Ndt.default
};
function by(a) {
  if ((0, uf.isArray)(a))
    return a.map(by);
  const e = (0, uf.isObject)(a);
  return e && a._parseClass && aR[a._parseClass] ? aR[a._parseClass].parse(a) : e ? (0, uf.mapValues)(a, (t) => by(t)) : a;
}
var g_ = {};
Object.defineProperty(g_, "__esModule", {
  value: !0
});
g_.default = vy;
var pf = I;
function vy(a) {
  if ((0, pf.isArray)(a))
    return a.map(vy);
  const e = (0, pf.isObject)(a);
  return e && a.serialize ? a.serialize() : e ? (0, pf.mapValues)(a, (t) => vy(t)) : a;
}
Object.defineProperty(Up, "__esModule", {
  value: !0
});
var Udt = m_, Hdt = _N(Udt), Vdt = g_, Kdt = _N(Vdt);
function _N(a) {
  return a && a.__esModule ? a : { default: a };
}
Up.default = {
  parse: Hdt.default,
  serialize: Kdt.default
};
var z_ = {}, f_ = {};
Object.defineProperty(f_, "__esModule", {
  value: !0
});
f_.default = function(a, e, t = "%%") {
  t = (0, eR.escapeRegExp)(t);
  const i = new RegExp(`${t}(.+?)${t}`, "g");
  let n, r = a;
  for (; (n = i.exec(a)) !== null; ) {
    const s = n[1], o = new RegExp(`${t}${(0, eR.escapeRegExp)(s)}${t}`, "g");
    s in e && (r = r.replace(o, e[s]));
  }
  return r;
};
var eR = I;
Object.defineProperty(z_, "__esModule", {
  value: !0
});
z_.default = Jdt;
var Gdt = f_, Ydt = Zdt(Gdt);
function Zdt(a) {
  return a && a.__esModule ? a : { default: a };
}
const Xdt = function(e, t, i, n = "") {
  i && (n = (0, Ydt.default)(n, i));
  let r = n ? [n] : [];
  return t.name && t.message && (t.stack && e.debug(t.stack), r.push(`${t.name}: ${t.message}`)), r = r.join(`
	`), e.error(r), r;
};
function Jdt(a, e, t = "") {
  return async (...i) => {
    try {
      return await e(...i);
    } catch (n) {
      return { error: Xdt(a, n, i[1], t) };
    }
  };
}
var $N = {}, Vd = {}, Kd = {};
Object.defineProperty(Kd, "__esModule", {
  value: !0
});
class Qdt {
  /**
   * Aggregates the given assessment results into a single score.
   *
   * @param {AssessmentResult[]} results The assessment results.
   *
   * @returns {number} The aggregated score.
   *
   * @abstract
   */
  aggregate(e) {
    console.warn("'aggregate' must be implemented by a child class of 'ScoreAggregator'");
  }
}
Kd.default = Qdt;
Object.defineProperty(Vd, "__esModule", {
  value: !0
});
Vd.READABILITY_SCORES = void 0;
var alt = Ya, elt = jN(alt), tlt = Zn, ilt = Kd, nlt = jN(ilt);
function jN(a) {
  return a && a.__esModule ? a : { default: a };
}
const rlt = {
  bad: 3,
  ok: 2,
  good: 0
}, slt = {
  bad: 4,
  ok: 2,
  good: 0
}, Tr = Vd.READABILITY_SCORES = {
  GOOD: 90,
  OKAY: 60,
  NEEDS_IMPROVEMENT: 30,
  NOT_AVAILABLE: 0
}, olt = ["en", "nl", "de", "it", "ru", "fr", "es"];
class dlt extends nlt.default {
  /**
   * Determines whether a language is fully supported.
   *
   * @param {string} locale The locale for which the content is written, e.g. `sv-SE` for Sweden.
   *
   * @returns {boolean} `true` if fully supported.
   */
  isFullySupported(e) {
    if (e && e.includes("_")) {
      const t = (0, elt.default)(e);
      return olt.includes(t);
    }
    return !1;
  }
  /**
   * Calculates the overall score (GOOD, OKAY or NEEDS IMPROVEMENT)
   * based on the penalty.
   *
   * @param {boolean} isFullySupported Whether this language is fully supported.
   * @param {number}  penalty          The total penalty.
   *
   * @returns {number} The overall score.
   */
  calculateScore(e, t) {
    if (e) {
      if (t > 6)
        return Tr.NEEDS_IMPROVEMENT;
      if (t > 4)
        return Tr.OKAY;
    } else {
      if (t > 4)
        return Tr.NEEDS_IMPROVEMENT;
      if (t > 2)
        return Tr.OKAY;
    }
    return Tr.GOOD;
  }
  /**
   * Calculates the total penalty based on the given assessment results.
   *
   * @param {AssessmentResult[]} results The valid results from which to calculate the total penalty.
   *
   * @returns {number} The total penalty for the results.
   */
  calculatePenalty(e) {
    return e.reduce((t, i) => {
      const n = (0, tlt.scoreToRating)(i.getScore()), r = this.isFullySupported(this.locale) ? rlt[n] : slt[n];
      return r ? t + r : t;
    }, 0);
  }
  /**
   * Returns the list of valid results.
   * Valid results are all results that have a score and a text.
   *
   * @param {AssessmentResult[]} results The results to filter the valid results from.
   *
   * @returns {AssessmentResult[]} The list of valid results.
   */
  getValidResults(e) {
    return e.filter((t) => t.hasScore() && t.hasText());
  }
  /**
   * Sets the locale of the content. We are more lenient on languages
   * that are fully supported in the analysis.
   *
   * @param {string} locale The locale of the content.
   *
   * @returns {void}
   */
  setLocale(e) {
    this.locale = e;
  }
  /**
   * Aggregates the given assessment results into a single analysis score.
   *
   * @param {AssessmentResult[]} results The assessment results.
   *
   * @returns {number} The aggregated score.
   */
  aggregate(e) {
    const t = this.getValidResults(e);
    if (t.length <= 1)
      return Tr.NOT_AVAILABLE;
    const i = this.calculatePenalty(t), n = this.isFullySupported(this.locale);
    return this.calculateScore(n, i);
  }
}
Vd.default = dlt;
var y_ = {};
Object.defineProperty(y_, "__esModule", {
  value: !0
});
var llt = Kd, clt = ult(llt);
function ult(a) {
  return a && a.__esModule ? a : { default: a };
}
const plt = 100, mlt = 9;
class glt extends clt.default {
  /**
   * Aggregates the given assessment results into a single score.
   *
   * @param {AssessmentResult[]} results The assessment results.
   *
   * @returns {number} The aggregated score.
   */
  aggregate(e) {
    const t = e.reduce((i, n) => i + n.getScore(), 0);
    return Math.round(t * plt / (e.length * mlt)) || 0;
  }
}
y_.default = glt;
(function(a) {
  Object.defineProperty(a, "__esModule", {
    value: !0
  });
  var e = Vd;
  Object.defineProperty(a, "ReadabilityScoreAggregator", {
    enumerable: !0,
    get: function() {
      return n(e).default;
    }
  });
  var t = Kd;
  Object.defineProperty(a, "ScoreAggregator", {
    enumerable: !0,
    get: function() {
      return n(t).default;
    }
  });
  var i = y_;
  Object.defineProperty(a, "SEOScoreAggregator", {
    enumerable: !0,
    get: function() {
      return n(i).default;
    }
  });
  function n(r) {
    return r && r.__esModule ? r : { default: r };
  }
})($N);
Object.defineProperty($y, "__esModule", {
  value: !0
});
var zlt = Object.assign || function(a) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e];
    for (var i in t)
      Object.prototype.hasOwnProperty.call(t, i) && (a[i] = t[i]);
  }
  return a;
}, flt = dU, ylt = mU, wlt = lR, hlt = le(wlt), Wa = I, blt = TY, vlt = nn, xN = br(vlt), klt = Yr, _lt = br(klt), $lt = _u, jlt = br($lt), xlt = Xr, Alt = br(xlt), Elt = Ha, AN = br(Elt), Slt = Zn, qlt = br(Slt), Plt = Jr, Tlt = br(Plt), Rlt = Lt, Olt = le(Rlt), Mlt = Ga, Clt = le(Mlt), Llt = Bd, EN = le(Llt), Ilt = Nd, SN = le(Ilt), Wlt = Ud, qN = le(Wlt), Flt = Lp, Dlt = le(Flt), Blt = kd, ky = le(Blt), Nlt = Ip, Ult = le(Nlt), Hlt = Hd, PN = le(Hlt), Vlt = za, TN = le(Vlt), Klt = s_, RN = le(Klt), Glt = Bp, Ylt = le(Glt), Zlt = o_, Xlt = le(Zlt), Jlt = Np, Qlt = le(Jlt), act = _d, Nt = le(act), ect = d_, tR = le(ect), tct = va, ict = l_, nct = le(ict), rct = c_, sct = le(rct), oct = Up, iR = le(oct), dct = z_, mf = le(dct), nR = $N;
function br(a) {
  if (a && a.__esModule)
    return a;
  var e = {};
  if (a != null)
    for (var t in a)
      Object.prototype.hasOwnProperty.call(a, t) && (e[t] = a[t]);
  return e.default = a, e;
}
function le(a) {
  return a && a.__esModule ? a : { default: a };
}
const lct = {
  Assessor: Olt.default,
  Assessment: Clt.default,
  SEOAssessor: EN.default,
  ContentAssessor: SN.default,
  TaxonomyAssessor: qN.default,
  Pluggable: Dlt.default,
  Researcher: ky.default,
  SnippetPreview: Ult.default,
  RelatedKeywordAssessor: RN.default,
  Paper: PN.default,
  AssessmentResult: TN.default,
  assessments: xN,
  bundledPlugins: _lt,
  helpers: jlt,
  markers: Alt,
  string: AN,
  interpreters: qlt,
  config: Tlt
}, cct = new xN.seo.KeyphraseDistributionAssessment(), Mn = (0, blt.getLogger)("yoast-analysis-worker");
Mn.setDefaultLevel("error");
let uct = class Pl {
  /**
   * Initializes the AnalysisWebWorker class.
   *
   * @param {Object} scope The scope for the messaging. Expected to have the
   *                       `onmessage` event and the `postMessage` function.
   */
  constructor(e) {
    this._scope = e, this._configuration = {
      contentAnalysisActive: !0,
      keywordAnalysisActive: !0,
      useCornerstone: !1,
      useTaxonomy: !1,
      useKeywordDistribution: !1,
      // The locale used for language-specific configurations in Flesch-reading ease and Sentence length assessments.
      locale: "en_US"
    }, this._scheduler = new sct.default(), this._paper = null, this._relatedKeywords = {}, this._i18n = Pl.createI18n(), this._researcher = new ky.default(this._paper), this._contentAssessor = null, this._seoAssessor = null, this._relatedKeywordAssessor = null, this._results = {
      readability: {
        results: [],
        score: 0
      },
      seo: {
        "": {
          results: [],
          score: 0
        }
      }
    }, this._registeredAssessments = [], this._registeredMessageHandlers = {}, this._registeredParsers = [], this.setupTreeAnalysis(), this.bindActions(), this.assessRelatedKeywords = this.assessRelatedKeywords.bind(this), this.registerAssessment = this.registerAssessment.bind(this), this.registerMessageHandler = this.registerMessageHandler.bind(this), this.refreshAssessment = this.refreshAssessment.bind(this), this.handleMessage = this.handleMessage.bind(this), this.analyzeRelatedKeywords = (0, mf.default)(Mn, this.analyze, "An error occurred while running the related keywords analysis."), this.analyze = (0, mf.default)(Mn, this.analyze, "An error occurred while running the analysis."), this.runResearch = (0, mf.default)(Mn, this.runResearch, "An error occurred after running the '%%name%%' research.");
  }
  /**
   * Binds actions to this scope.
   *
   * @returns {void}
   */
  bindActions() {
    this.analyze = this.analyze.bind(this), this.analyzeDone = this.analyzeDone.bind(this), this.analyzeRelatedKeywordsDone = this.analyzeRelatedKeywordsDone.bind(this), this.loadScript = this.loadScript.bind(this), this.loadScriptDone = this.loadScriptDone.bind(this), this.customMessage = this.customMessage.bind(this), this.customMessageDone = this.customMessageDone.bind(this), this.clearCache = this.clearCache.bind(this), this.runResearch = this.runResearch.bind(this), this.runResearchDone = this.runResearchDone.bind(this);
  }
  /**
   * Sets up the web worker for running the tree readability and SEO analysis.
   *
   * @returns {void}
   */
  setupTreeAnalysis() {
    this._treeResearcher = null, this._contentTreeAssessor = null, this._seoTreeAssessor = null, this._relatedKeywordTreeAssessor = null, this._registeredTreeAssessments = [], this._seoScoreAggregator = new nR.SEOScoreAggregator(), this._contentScoreAggregator = new nR.ReadabilityScoreAggregator(), this._tree = null, this._treeBuilder = null;
  }
  /**
   * Registers this web worker with the scope passed to it's constructor.
   *
   * @returns {void}
   */
  register() {
    this._scope.onmessage = this.handleMessage, this._scope.analysisWorker = {
      registerAssessment: this.registerAssessment,
      registerParser: this.registerParser,
      registerMessageHandler: this.registerMessageHandler,
      refreshAssessment: this.refreshAssessment
    }, this._scope.yoast = this._scope.yoast || {}, this._scope.yoast.analysis = lct;
  }
  /**
   * Receives the post message and determines the action.
   *
   * See: https://developer.mozilla.org/en-US/docs/Web/API/Worker/onmessage
   *
   * @param {MessageEvent} event              The post message event.
   * @param {Object}       event.data         The data object.
   * @param {string}       event.data.type    The action type.
   * @param {string}       event.data.id      The request id.
   * @param {string}       event.data.payload The payload of the action.
   *
   * @returns {void}
   */
  handleMessage({ data: { type: e, id: t, payload: i } }) {
    switch (i = iR.default.parse(i), Mn.debug("AnalysisWebWorker incoming:", e, t, i), e) {
      case "initialize":
        this.initialize(t, i), this._scheduler.startPolling();
        break;
      case "analyze":
        this._scheduler.schedule({
          id: t,
          execute: this.analyze,
          done: this.analyzeDone,
          data: i,
          type: e
        });
        break;
      case "analyzeRelatedKeywords":
        this._scheduler.schedule({
          id: t,
          execute: this.analyzeRelatedKeywords,
          done: this.analyzeRelatedKeywordsDone,
          data: i,
          type: e
        });
        break;
      case "loadScript":
        this._scheduler.schedule({
          id: t,
          execute: this.loadScript,
          done: this.loadScriptDone,
          data: i,
          type: e
        });
        break;
      case "runResearch":
        this._scheduler.schedule({
          id: t,
          execute: this.runResearch,
          done: this.runResearchDone,
          data: i
        });
        break;
      case "customMessage": {
        const n = i.name;
        if (n && this._registeredMessageHandlers[n]) {
          this._scheduler.schedule({
            id: t,
            execute: this.customMessage,
            done: this.customMessageDone,
            data: i,
            type: e
          });
          break;
        }
        this.customMessageDone(t, { error: new Error("No message handler registered for messages with name: " + n) });
        break;
      }
      default:
        console.warn("AnalysisWebWorker unrecognized action:", e);
    }
  }
  /**
   * Initializes i18n object based on passed configuration.
   *
   * @param {Object} [translations] The translations to be used in the current
   *                                instance.
   *
   * @returns {Jed} Jed instance.
   */
  static createI18n(e) {
    return e = e || {
      domain: "js-text-analysis",
      // eslint-disable-next-line camelcase
      locale_data: {
        "js-text-analysis": {
          "": {}
        }
      }
    }, new hlt.default(e);
  }
  /**
   * Initializes the appropriate content assessor.
   *
   * @returns {null|ContentAssessor|CornerstoneContentAssessor} The chosen
   *                                                            content
   *                                                            assessor.
   */
  createContentAssessor() {
    var e = this._configuration;
    const t = e.contentAnalysisActive, i = e.useCornerstone, n = e.locale;
    return t === !1 ? null : i === !0 ? new Ylt.default(this._i18n, { locale: n }) : new SN.default(this._i18n, { locale: n });
  }
  /**
   * Initializes the appropriate SEO assessor.
   *
   * @returns {null|SEOAssessor|CornerstoneSEOAssessor|TaxonomyAssessor} The chosen
   *                                                                     SEO
   *                                                                     assessor.
   */
  createSEOAssessor() {
    var e = this._configuration;
    const t = e.keywordAnalysisActive, i = e.useCornerstone, n = e.useKeywordDistribution, r = e.useTaxonomy, s = e.locale;
    if (t === !1)
      return null;
    let o;
    return r === !0 ? o = new qN.default(this._i18n, { locale: s, researcher: this._researcher }) : o = i === !0 ? new Qlt.default(this._i18n, { locale: s, researcher: this._researcher }) : new EN.default(this._i18n, { locale: s, researcher: this._researcher }), n && (0, Wa.isUndefined)(o.getAssessment("keyphraseDistribution")) && o.addAssessment("keyphraseDistribution", cct), this._registeredAssessments.forEach(({ name: d, assessment: c }) => {
      (0, Wa.isUndefined)(o.getAssessment(d)) && o.addAssessment(d, c);
    }), o;
  }
  /**
   * Initializes the appropriate SEO assessor for related keywords.
   *
   * @returns {null|SEOAssessor|CornerstoneSEOAssessor|TaxonomyAssessor} The chosen
   *                                                                     related keywords
   *                                                                     assessor.
   */
  createRelatedKeywordsAssessor() {
    var e = this._configuration;
    const t = e.keywordAnalysisActive, i = e.useCornerstone, n = e.useTaxonomy, r = e.locale;
    if (t === !1)
      return null;
    let s;
    return n === !0 ? s = new nct.default(this._i18n, { locale: r, researcher: this._researcher }) : s = i === !0 ? new Xlt.default(this._i18n, { locale: r, researcher: this._researcher }) : new RN.default(this._i18n, { locale: r, researcher: this._researcher }), this._registeredAssessments.forEach(({ name: o, assessment: d }) => {
      (0, Wa.isUndefined)(s.getAssessment(o)) && s.addAssessment(o, d);
    }), s;
  }
  /**
   * Creates an SEO assessor for a tree, based on the given combination of cornerstone, taxonomy and related keyphrase flags.
   *
   * @param {Object}  assessorConfig                    The assessor configuration.
   * @param {boolean} [assessorConfig.relatedKeyphrase] If this assessor is for a related keyphrase, instead of the main one.
   * @param {boolean} [assessorConfig.taxonomy]         If this assessor is for a taxonomy page, instead of a regular page.
   * @param {boolean} [assessorConfig.cornerstone]      If this assessor is for cornerstone content.
   *
   * @returns {module:parsedPaper/assess.TreeAssessor} The created tree assessor.
   */
  /*
   * Disabled code:
   * createSEOTreeAssessor( assessorConfig ) {
   * 	 return constructSEOAssessor( this._i18n, this._treeResearcher, assessorConfig );
   * }
   */
  /**
   * Sends a message.
   *
   * @param {string} type      The message type.
   * @param {number} id        The request id.
   * @param {Object} [payload] The payload to deliver.
   *
   * @returns {void}
   */
  send(e, t, i = {}) {
    Mn.debug("AnalysisWebWorker outgoing:", e, t, i), i = iR.default.serialize(i), this._scope.postMessage({
      type: e,
      id: t,
      payload: i
    });
  }
  /**
   * Checks which assessors should update giving a configuration.
   *
   * @param {Object}   configuration          The configuration to check.
   * @param {Assessor} [contentAssessor=null] The content assessor.
   * @param {Assessor} [seoAssessor=null]     The SEO assessor.
   *
   * @returns {Object} Containing seo and readability with true or false.
   */
  static shouldAssessorsUpdate(e, t = null, i = null) {
    const n = ["contentAnalysisActive", "useCornerstone", "locale", "translations"], r = ["keywordAnalysisActive", "useCornerstone", "useTaxonomy", "useKeywordDistribution", "locale", "translations", "researchData"], s = Object.keys(e);
    return {
      readability: (0, Wa.isNull)(t) || (0, tR.default)(s, n),
      seo: (0, Wa.isNull)(i) || (0, tR.default)(s, r)
    };
  }
  /**
   * Configures the analysis worker.
   *
   * @param {number}   id                                     The request id.
   * @param {Object}   configuration                          The configuration object.
   * @param {boolean}  [configuration.contentAnalysisActive]  Whether the content analysis is active.
   * @param {boolean}  [configuration.keywordAnalysisActive]  Whether the keyword analysis is active.
   * @param {boolean}  [configuration.useCornerstone]         Whether the paper is cornerstone or not.
   * @param {boolean}  [configuration.useTaxonomy]            Whether the taxonomy assessor should be used.
   * @param {boolean}  [configuration.useKeywordDistribution] Whether the keyphraseDistribution assessment should run.
   * @param {string}   [configuration.locale]                 The locale used in the seo assessor.
   * @param {Object}   [configuration.translations]           The translation strings.
   * @param {Object}   [configuration.researchData]           Extra research data.
   * @param {Object}   [configuration.defaultQueryParams]     The default query params for the Shortlinker.
   * @param {string}   [configuration.logLevel]               Log level, see: https://github.com/pimterry/loglevel#documentation
   * @param {string[]} [configuration.enabledFeatures]        A list of feature name flags of the experimental features to enable.
   *
   * @returns {void}
   */
  initialize(e, t) {
    const i = Pl.shouldAssessorsUpdate(t, this._contentAssessor, this._seoAssessor);
    (0, Wa.has)(t, "translations") && (this._i18n = Pl.createI18n(t.translations), delete t.translations), (0, Wa.has)(t, "researchData") && ((0, Wa.forEach)(t.researchData, (n, r) => {
      this._researcher.addResearchData(r, n);
    }), delete t.researchData), (0, Wa.has)(t, "defaultQueryParams") && ((0, tct.configureShortlinker)({ params: t.defaultQueryParams }), delete t.defaultQueryParams), (0, Wa.has)(t, "logLevel") && (Mn.setLevel(t.logLevel, !1), delete t.logLevel), (0, Wa.has)(t, "enabledFeatures") && ((0, ylt.enableFeatures)(t.enabledFeatures), delete t.enabledFeatures), this._configuration = (0, Wa.merge)(this._configuration, t), i.readability && (this._contentAssessor = this.createContentAssessor(), this._contentTreeAssessor = null), i.seo && (this._seoAssessor = this.createSEOAssessor(), this._relatedKeywordAssessor = this.createRelatedKeywordsAssessor()), this.clearCache(), this.send("initialize:done", e);
  }
  /**
   * Register an assessment for a specific plugin.
   *
   * @param {string}   name       The name of the assessment.
   * @param {function} assessment The function to run as an assessment.
   * @param {string}   pluginName The name of the plugin associated with the assessment.
   *
   * @returns {boolean} Whether registering the assessment was successful.
   */
  registerAssessment(e, t, i) {
    if (!(0, Wa.isString)(e))
      throw new Nt.default("Failed to register assessment for plugin " + i + ". Expected parameter `name` to be a string.");
    if (!(0, Wa.isObject)(t))
      throw new Nt.default("Failed to register assessment for plugin " + i + ". Expected parameter `assessment` to be a function.");
    if (!(0, Wa.isString)(i))
      throw new Nt.default("Failed to register assessment for plugin " + i + ". Expected parameter `pluginName` to be a string.");
    const n = i + "-" + e;
    return this._seoAssessor !== null && this._seoAssessor.addAssessment(n, t), this._registeredAssessments.push({ combinedName: n, assessment: t }), this.refreshAssessment(e, i), !0;
  }
  /**
   * Register a message handler for a specific plugin.
   *
   * @param {string}   name       The name of the message handler.
   * @param {function} handler    The function to run as an message handler.
   * @param {string}   pluginName The name of the plugin associated with the message handler.
   *
   * @returns {boolean} Whether registering the message handler was successful.
   */
  registerMessageHandler(e, t, i) {
    if (!(0, Wa.isString)(e))
      throw new Nt.default("Failed to register handler for plugin " + i + ". Expected parameter `name` to be a string.");
    if (!(0, Wa.isObject)(t))
      throw new Nt.default("Failed to register handler for plugin " + i + ". Expected parameter `handler` to be a function.");
    if (!(0, Wa.isString)(i))
      throw new Nt.default("Failed to register handler for plugin " + i + ". Expected parameter `pluginName` to be a string.");
    e = i + "-" + e, this._registeredMessageHandlers[e] = t;
  }
  /**
   * Refreshes an assessment in the analysis.
   *
   * Custom assessments can use this to mark their assessment as needing a
   * refresh.
   *
   * @param {string} name The name of the assessment.
   * @param {string} pluginName The name of the plugin associated with the assessment.
   *
   * @returns {boolean} Whether refreshing the assessment was successful.
   */
  refreshAssessment(e, t) {
    if (!(0, Wa.isString)(e))
      throw new Nt.default("Failed to refresh assessment for plugin " + t + ". Expected parameter `name` to be a string.");
    if (!(0, Wa.isString)(t))
      throw new Nt.default("Failed to refresh assessment for plugin " + t + ". Expected parameter `pluginName` to be a string.");
    this.clearCache();
  }
  /**
   * Register a parser that parses a formatted text
   * to a structured tree representation that can be further analyzed.
   *
   * @param {Object}   parser                              The parser to register.
   * @param {function(Paper): boolean} parser.isApplicable A method that checks whether this parser is applicable for a paper.
   * @param {function(Paper): module:parsedPaper/structure.Node } parser.parse A method that parses a paper to a structured tree representation.
   *
   * @returns {void}
   */
  registerParser(e) {
    if (typeof e.isApplicable != "function")
      throw new Nt.default("Failed to register the custom parser. Expected parameter 'parser' to have a method 'isApplicable'.");
    if (typeof e.parse != "function")
      throw new Nt.default("Failed to register the custom parser. Expected parameter 'parser' to have a method 'parse'.");
    this._registeredParsers.push(e);
  }
  /**
   * Clears the worker cache to force a new analysis.
   *
   * @returns {void}
   */
  clearCache() {
    this._paper = null;
  }
  /**
   * Changes the locale in the configuration.
   *
   * If the locale is different:
   * - Update the configuration locale.
   * - Create the content assessor.
   *
   * @param {string} locale The locale to set.
   *
   * @returns {void}
   */
  setLocale(e) {
    this._configuration.locale !== e && (this._configuration.locale = e, this._contentAssessor = this.createContentAssessor());
  }
  /**
   * Checks if the paper contains changes that are used for readability.
   *
   * @param {Paper} paper The paper to check against the cached paper.
   *
   * @returns {boolean} True if there are changes detected.
   */
  shouldReadabilityUpdate(e) {
    return this._paper === null || this._paper.getText() !== e.getText() ? !0 : this._paper.getLocale() !== e.getLocale();
  }
  /**
   * Checks if the related keyword contains changes that are used for seo.
   *
   * @param {string} key                     The identifier of the related keyword.
   * @param {Object} relatedKeyword          The related keyword object.
   * @param {string} relatedKeyword.keyword  The keyword.
   * @param {string} relatedKeyword.synonyms The synonyms.
   *
   * @returns {boolean} True if there are changes detected.
   */
  shouldSeoUpdate(e, { keyword: t, synonyms: i }) {
    return (0, Wa.isUndefined)(this._relatedKeywords[e]) || this._relatedKeywords[e].keyword !== t ? !0 : this._relatedKeywords[e].synonyms !== i;
  }
  /**
   * Runs analyses on a paper.
   *
   * The paper includes the keyword and synonyms data. However, this is
   * possibly just one instance of these. From here we are going to split up
   * this data and keep track of the different sets of keyword-synonyms and
   * their results.
   *
   * @param {number} id                        The request id.
   * @param {Object} payload                   The payload object.
   * @param {Object} payload.paper             The paper to analyze.
   * @param {Object} [payload.relatedKeywords] The related keywords.
   *
   * @returns {Object} The result, may not contain readability or seo.
   */
  async analyze(e, { paper: t, relatedKeywords: i = {} }) {
    t._text = (0, flt.autop)(t._text), t._text = AN.removeHtmlBlocks(t._text);
    const n = this._paper === null || !this._paper.equals(t), r = this.shouldReadabilityUpdate(t);
    if (n && (this._paper = t, this._researcher.setPaper(this._paper), this.setLocale(this._paper.getLocale())), this._configuration.keywordAnalysisActive && this._seoAssessor && (n && (this._results.seo[""] = await this.assess(this._paper, this._tree, {
      oldAssessor: this._seoAssessor,
      treeAssessor: this._seoTreeAssessor,
      scoreAggregator: this._seoScoreAggregator
    })), !(0, Wa.isEmpty)(i))) {
      const s = Object.keys(i);
      (await this.assessRelatedKeywords(t, this._tree, i)).forEach((d) => {
        this._results.seo[d.key] = d.results;
      }), s.length > 1 && (this._results.seo = (0, Wa.pickBy)(this._results.seo, (d, c) => (0, Wa.includes)(s, c)));
    }
    if (this._configuration.contentAnalysisActive && this._contentAssessor && r) {
      const s = {
        oldAssessor: this._contentAssessor,
        treeAssessor: this._contentTreeAssessor,
        scoreAggregator: this._contentScoreAggregator
      };
      s.scoreAggregator.setLocale(this._configuration.locale), this._results.readability = await this.assess(this._paper, this._tree, s);
    }
    return this._results;
  }
  /**
   * Assesses a given paper and tree combination
   * using an original Assessor (that works on a string representation of the text)
   * and a new Tree Assessor (that works on a tree representation).
   *
   * The results of both analyses are combined using the given score aggregator.
   *
   * @param {Paper}                      paper The paper to analyze.
   * @param {module:parsedPaper/structure.Node} tree  The tree to analyze.
   *
   * @param {Object}                             analysisCombination                 Which assessors and score aggregator to use.
   * @param {Assessor}                           analysisCombination.oldAssessor     The original assessor.
   * @param {module:parsedPaper/assess.TreeAssessor}    analysisCombination.treeAssessor    The new assessor.
   * @param {module:parsedPaper/assess.ScoreAggregator} analysisCombination.scoreAggregator The score aggregator to use.
   *
   * @returns {Promise<{score: number, results: AssessmentResult[]}>} The analysis results.
   */
  async assess(e, t, i) {
    const n = i.oldAssessor, r = i.scoreAggregator;
    n.assess(e);
    const s = n.results, d = [...[], ...s], c = r.aggregate(d);
    return {
      results: d,
      score: c
    };
  }
  /**
   * Generates an error message ("grey bullet") for the given assessment.
   *
   * @param {module:parsedPaper/assess.Assessment} assessment The assessment to generate an error message for.
   *
   * @returns {AssessmentResult} The generated assessment result.
   */
  generateAssessmentError(e) {
    const t = new TN.default();
    return t.setScore(-1), t.setText(this._i18n.sprintf(
      /* Translators: %1$s expands to the name of the assessment. */
      this._i18n.dgettext("js-text-analysis", "An error occurred in the '%1$s' assessment"),
      e.name
    )), t;
  }
  /**
   * Assesses the SEO of a paper and tree combination on the given related keyphrases and their synonyms.
   *
   * The old assessor as well as the new tree assessor are used and their results are combined.
   *
   * @param {Paper}                 paper           The paper to analyze.
   * @param {module:parsedPaper/structure} tree            The tree to analyze.
   * @param {Object}                relatedKeywords The related keyphrases to use in the analysis.
   *
   * @returns {Promise<[{results: {score: number, results: AssessmentResult[]}, key: string}]>} The results, one for each keyphrase.
   */
  async assessRelatedKeywords(e, t, i) {
    const n = Object.keys(i);
    return await Promise.all(n.map((r) => {
      this._relatedKeywords[r] = i[r];
      const s = PN.default.parse(zlt({}, e.serialize(), {
        keyword: this._relatedKeywords[r].keyword,
        synonyms: this._relatedKeywords[r].synonyms
      })), o = {
        oldAssessor: this._relatedKeywordAssessor,
        treeAssessor: this._relatedKeywordTreeAssessor,
        scoreAggregator: this._seoScoreAggregator
      };
      return this.assess(s, t, o).then((d) => ({ key: r, results: d }));
    }));
  }
  /**
   * Loads a new script from an external source.
   *
   * @param {number} id  The request id.
   * @param {string} url The url of the script to load;
   *
   * @returns {Object} An object containing whether or not the url was loaded, the url and possibly an error message.
   */
  loadScript(e, { url: t }) {
    if ((0, Wa.isUndefined)(t))
      return { loaded: !1, url: t, message: "Load Script was called without an URL." };
    try {
      this._scope.importScripts(t);
    } catch (i) {
      return { loaded: !1, url: t, message: i.message };
    }
    return { loaded: !0, url: t };
  }
  /**
   * Sends the load script result back.
   *
   * @param {number} id     The request id.
   * @param {Object} result The result.
   *
   * @returns {void}
   */
  loadScriptDone(e, t) {
    if (!t.loaded) {
      this.send("loadScript:failed", e, t);
      return;
    }
    this.send("loadScript:done", e, t);
  }
  /**
   * Sends the analyze result back.
   *
   * @param {number} id     The request id.
   * @param {Object} result The result.
   *
   * @returns {void}
   */
  analyzeDone(e, t) {
    if (t.error) {
      this.send("analyze:failed", e, t);
      return;
    }
    this.send("analyze:done", e, t);
  }
  /**
   * Sends the analyze related keywords result back.
   *
   * @param {number} id     The request id.
   * @param {Object} result The result.
   *
   * @returns {void}
   */
  analyzeRelatedKeywordsDone(e, t) {
    if (t.error) {
      this.send("analyzeRelatedKeywords:failed", e, t);
      return;
    }
    this.send("analyzeRelatedKeywords:done", e, t);
  }
  /**
   * Handle a custom message using the registered handler.
   *
   * @param {number} id   The request id.
   * @param {string} name The name of the message.
   * @param {Object} data The data of the message.
   *
   * @returns {Object} An object containing either success and data or an error.
   */
  customMessage(e, { name: t, data: i }) {
    try {
      return {
        success: !0,
        data: this._registeredMessageHandlers[t](i)
      };
    } catch (n) {
      return { error: n };
    }
  }
  /**
   * Send the result of a custom message back.
   *
   * @param {number} id     The request id.
   * @param {Object} result The result.
   *
   * @returns {void}
   */
  customMessageDone(e, t) {
    if (t.success) {
      this.send("customMessage:done", e, t.data);
      return;
    }
    this.send("customMessage:failed", t.error);
  }
  /**
   * Runs the specified research in the worker. Optionally pass a paper.
   *
   * @param {number} id     The request id.
   * @param {string} name   The name of the research to run.
   * @param {Paper} [paper] The paper to run the research on if it shouldn't
   *                        be run on the latest paper.
   *
   * @returns {Object} The result of the research.
   */
  runResearch(e, { name: t, paper: i = null }) {
    const n = this._researcher.getData("morphology");
    let r = this._researcher;
    return i !== null && (r = new ky.default(i), r.addResearchData("morphology", n)), r.getResearch(t);
  }
  /**
   * Send the result of a custom message back.
   *
   * @param {number} id     The request id.
   * @param {Object} result The result.
   *
   * @returns {void}
   */
  runResearchDone(e, t) {
    if (t.error) {
      this.send("runResearch:failed", e, t);
      return;
    }
    this.send("runResearch:done", e, t);
  }
};
$y.default = uct;
var w_ = {}, h_ = {}, b_ = {}, v_ = {};
Object.defineProperty(v_, "__esModule", {
  value: !0
});
class pct {
  /**
   * Initializes a result.
   *
   * @param {Object} result The result.
   * @param {Object} [data] Optional extra data.
   */
  constructor(e, t = {}) {
    this.result = e, this.data = t;
  }
}
v_.default = pct;
Object.defineProperty(b_, "__esModule", {
  value: !0
});
var mct = v_, rR = gct(mct);
function gct(a) {
  return a && a.__esModule ? a : { default: a };
}
class zct {
  /**
   * Initializes a request.
   *
   * @param {Function} resolve The resolve function.
   * @param {Function} reject  The reject function.
   * @param {Object}  [data]   Optional extra data.
   */
  constructor(e, t, i = {}) {
    this._resolve = e, this._reject = t, this._data = i;
  }
  /**
   * Resolves the request with a result.
   *
   * @param {Object} [payload] Optional payload.
   *
   * @returns {void}
   */
  resolve(e = {}) {
    const t = new rR.default(e, this._data);
    this._resolve(t);
  }
  /**
   * Rejects the request with a result.
   *
   * @param {Object} [payload] Optional payload.
   *
   * @returns {void}
   */
  reject(e = {}) {
    const t = new rR.default(e, this._data);
    this._reject(t);
  }
}
b_.default = zct;
Object.defineProperty(h_, "__esModule", {
  value: !0
});
var fct = b_, yct = wct(fct);
function wct(a) {
  return a && a.__esModule ? a : { default: a };
}
h_.default = yct.default;
Object.defineProperty(w_, "__esModule", {
  value: !0
});
var hct = h_, bct = ON(hct), vct = Up, sR = ON(vct);
function ON(a) {
  return a && a.__esModule ? a : { default: a };
}
let kct = class {
  /**
   * Initializes the AnalysisWorkerWrapper class.
   *
   * @param {Worker} worker The worker to wrap.
   *
   * @constructor
   */
  constructor(e) {
    this._worker = e, this._requests = {}, this._autoIncrementedRequestId = -1, this.initialize = this.initialize.bind(this), this.analyze = this.analyze.bind(this), this.analyzeRelatedKeywords = this.analyzeRelatedKeywords.bind(this), this.loadScript = this.loadScript.bind(this), this.sendMessage = this.sendMessage.bind(this), this.runResearch = this.runResearch.bind(this), this.handleMessage = this.handleMessage.bind(this), this.handleMessageError = this.handleMessageError.bind(this), this.handleError = this.handleError.bind(this), this._worker.onmessage = this.handleMessage, this._worker.onmessageerror = this.handleMessageError, this._worker.onerror = this.handleError;
  }
  /**
   * Receives the messages and determines the action.
   *
   * See: https://developer.mozilla.org/en-US/docs/Web/API/Worker/onmessage
   *
   * @param {MessageEvent} event              The post message event.
   * @param {Object}       event.data         The data object.
   * @param {string}       event.data.type    The action type.
   * @param {number}       event.data.id      The request id.
   * @param {string}       event.data.payload The payload of the action.
   *
   * @returns {void}
   */
  handleMessage({ data: { type: e, id: t, payload: i } }) {
    const n = this._requests[t];
    if (!n) {
      console.warn("AnalysisWebWorker unmatched response:", i);
      return;
    }
    switch (i = sR.default.parse(i), e) {
      case "initialize:done":
      case "loadScript:done":
      case "customMessage:done":
      case "runResearch:done":
      case "analyzeRelatedKeywords:done":
      case "analyze:done":
        n.resolve(i);
        break;
      case "analyze:failed":
      case "loadScript:failed":
      case "customMessage:failed":
      case "runResearch:failed":
      case "analyzeRelatedKeywords:failed":
        n.reject(i);
        break;
      default:
        console.warn("AnalysisWebWorker unrecognized action:", e);
    }
    delete this._requests[t];
  }
  /**
   * Receives the message errors.
   *
   * See: https://developer.mozilla.org/en-US/docs/Web/Events/messageerror
   *
   * @param {MessageEvent} event The message event for the error that
   *                             occurred.
   *
   * @returns {void}
   */
  handleMessageError(e) {
    console.warn("AnalysisWebWorker message error:", e);
  }
  /**
   * Receives the errors.
   *
   * See:
   * https://developer.mozilla.org/en-US/docs/Web/API/AbstractWorker/onerror
   *
   * @param {Error} event The error event.
   *
   * @returns {void}
   */
  handleError(e) {
    const t = Object.keys(this._requests), i = t[t.length - 1], n = this._requests[i];
    if (!n) {
      console.error("AnalysisWebWorker error:", e);
      return;
    }
    n.reject(e);
  }
  /**
   * Increments the request id.
   *
   * @returns {number} The incremented id.
   */
  createRequestId() {
    return this._autoIncrementedRequestId++, this._autoIncrementedRequestId;
  }
  /**
   * Creates a new request inside a Promise.
   *
   * @param {number} id     The request id.
   * @param {Object} [data] Optional extra data.
   *
   * @returns {Promise} The callback promise.
   */
  createRequestPromise(e, t = {}) {
    return new Promise((i, n) => {
      this._requests[e] = new bct.default(i, n, t);
    });
  }
  /**
   * Sends a request to the worker and returns a promise that will resolve or reject once the worker finishes.
   *
   * @param {string} action  The action of the request.
   * @param {Object} payload The payload of the request.
   * @param {Object} [data]  Optional extra data.
   *
   * @returns {Promise} A promise that will resolve or reject once the worker finishes.
   */
  sendRequest(e, t, i = {}) {
    const n = this.createRequestId(), r = this.createRequestPromise(n, i);
    return this.send(e, n, t), r;
  }
  /**
   * Sends a message to the worker.
   *
   * @param {string} type      The message type.
   * @param {number} id        The request id.
   * @param {Object} [payload] The payload to deliver.
   *
   * @returns {void}
   */
  send(e, t, i = {}) {
    i = sR.default.serialize(i), this._worker.postMessage({
      type: e,
      id: t,
      payload: i
    });
  }
  /**
   * Initializes the worker with a configuration.
   *
   * @param {Object} configuration The configuration to initialize the worker
   *                               with.
   *
   * @returns {Promise} The promise of initialization.
   */
  initialize(e) {
    return this.sendRequest("initialize", e);
  }
  /**
   * Analyzes the paper.
   *
   * @param {Object} paper           The paper to analyze.
   * @param {Object} relatedKeywords The related keywords.
   *
   * @returns {Promise} The promise of analyses.
   */
  analyzeRelatedKeywords(e, t = {}) {
    return this.sendRequest("analyzeRelatedKeywords", { paper: e, relatedKeywords: t });
  }
  /**
   * Analyzes the paper.
   *
   * @param {Object} paper           The paper to analyze.
   *
   * @returns {Promise} The promise of analyses.
   */
  analyze(e) {
    return this.sendRequest("analyze", { paper: e });
  }
  /**
   * Imports a script to the worker.
   *
   * @param {string} url The relative url to the script to be loaded.
   *
   * @returns {Promise} The promise of the script import.
   */
  loadScript(e) {
    return this.sendRequest("loadScript", { url: e });
  }
  /**
   * Sends a custom message to the worker.
   *
   * @param {string} name       The name of the message.
   * @param {string} data       The data of the message.
   * @param {string} pluginName The plugin that registered this type of message.
   *
   * @returns {Promise} The promise of the custom message.
   */
  sendMessage(e, t, i) {
    return e = i + "-" + e, this.sendRequest("customMessage", { name: e, data: t }, t);
  }
  /**
   * Runs the specified research in the worker. Optionally pass a paper.
   *
   * @param {string} name    The name of the research to run.
   * @param {Paper} [paper] The paper to run the research on if it shouldn't
   *                         be run on the latest paper.
   *
   * @returns {Promise} The promise of the research.
   */
  runResearch(e, t = null) {
    return this.sendRequest("runResearch", { name: e, paper: t });
  }
};
w_.default = kct;
var k_ = {};
Object.defineProperty(k_, "__esModule", {
  value: !0
});
function _ct(a) {
  return `
		try {
			${a}
		} catch ( error ) {
			console.log( "Error occured during worker initialization:" );
			console.log( error );
		}
	`;
}
function $ct(a) {
  return `
		self.yoastOriginalUrl = '${a}';
		importScripts('${a}');
	`;
}
function jct(a, e) {
  return a = new URL(a, window.location.origin), e = new URL(e, window.location.origin), a.hostname === e.hostname && a.port === e.port && a.protocol === e.protocol;
}
function xct(a) {
  const e = window.URL || window.webkitURL, t = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder, i = _ct($ct(a));
  let n;
  try {
    n = new Blob([i], { type: "application/javascript" });
  } catch {
    const s = new t();
    s.append(i), n = s.getBlob("application/javascript");
  }
  return e.createObjectURL(n);
}
function oR(a) {
  const e = xct(a);
  return new Worker(e);
}
function Act(a) {
  if (!jct(window.location, a))
    return oR(a);
  let e = null;
  try {
    e = new Worker(a);
  } catch {
    try {
      e = oR(a);
    } catch (i) {
      throw i;
    }
  }
  return e;
}
k_.default = Act;
Object.defineProperty(Un, "__esModule", {
  value: !0
});
var MN = Un.createWorker = LN = Un.AnalysisWorkerWrapper = CN = Un.AnalysisWebWorker = void 0, Ect = $y, Sct = __(Ect), qct = w_, Pct = __(qct), Tct = k_, Rct = __(Tct);
function __(a) {
  return a && a.__esModule ? a : { default: a };
}
var CN = Un.AnalysisWebWorker = Sct.default, LN = Un.AnalysisWorkerWrapper = Pct.default;
MN = Un.createWorker = Rct.default;
var IN = {}, $_ = {};
Object.defineProperty($_, "__esModule", {
  value: !0
});
var Bs = I, Oct = oN, Mct = _s, Cct = WN(Mct), Lct = Ou, Ict = WN(Lct);
function WN(a) {
  return a && a.__esModule ? a : { default: a };
}
var Na = function(e) {
  this.keyword = e.keyword, this.assessor = e.assessor, this.i18n = e.i18n, this.output = e.targets.output, this.overall = e.targets.overall || "overallScore", this.presenterConfig = (0, Ict.default)(e.i18n), this._disableMarkerButtons = !1, this._activeMarker = !1;
};
Na.prototype.setKeyword = function(a) {
  this.keyword = a;
};
Na.prototype.configHasProperty = function(a) {
  return this.presenterConfig.hasOwnProperty(a);
};
Na.prototype.getIndicator = function(a) {
  return {
    className: this.getIndicatorColorClass(a),
    screenReaderText: this.getIndicatorScreenReaderText(a),
    fullText: this.getIndicatorFullText(a),
    screenReaderReadabilityText: this.getIndicatorScreenReaderReadabilityText(a)
  };
};
Na.prototype.getIndicatorColorClass = function(a) {
  return this.configHasProperty(a) ? this.presenterConfig[a].className : "";
};
Na.prototype.getIndicatorScreenReaderText = function(a) {
  return this.configHasProperty(a) ? this.presenterConfig[a].screenReaderText : "";
};
Na.prototype.getIndicatorScreenReaderReadabilityText = function(a) {
  return this.configHasProperty(a) ? this.presenterConfig[a].screenReaderReadabilityText : "";
};
Na.prototype.getIndicatorFullText = function(a) {
  return this.configHasProperty(a) ? this.presenterConfig[a].fullText : "";
};
Na.prototype.resultToRating = function(a) {
  return (0, Bs.isObject)(a) ? (a.rating = (0, Cct.default)(a.score), a) : "";
};
Na.prototype.getIndividualRatings = function() {
  var a = {}, e = this.sort(this.assessor.getValidResults()), t = e.map(this.resultToRating);
  return (0, Bs.forEach)(t, (function(i, n) {
    a[n] = this.addRating(i);
  }).bind(this)), a;
};
Na.prototype.excludeFromResults = function(a, e) {
  return (0, Bs.difference)(a, e);
};
Na.prototype.sort = function(a) {
  var e = this.getUndefinedScores(a), t = this.excludeFromResults(a, e);
  return t.sort(function(i, n) {
    return i.score - n.score;
  }), e.concat(t);
};
Na.prototype.getUndefinedScores = function(a) {
  return a.filter(function(e) {
    return (0, Bs.isUndefined)(e.score) || e.score === 0;
  });
};
Na.prototype.addRating = function(a) {
  var e = this.getIndicator(a.rating);
  return e.text = a.text, e.identifier = a.getIdentifier(), a.hasMarker() && (e.marker = a.getMarker()), e;
};
Na.prototype.getOverallRating = function(a) {
  var e = 0;
  return this.keyword === "" ? this.resultToRating({ score: e }) : ((0, Bs.isNumber)(a) && (e = a / 10), this.resultToRating({ score: e }));
};
Na.prototype.markAssessment = function(a, e) {
  this._activeMarker === a ? (this.removeAllMarks(), this._activeMarker = !1) : (e(), this._activeMarker = a), this.render();
};
Na.prototype.disableMarker = function() {
  this._activeMarker = !1, this.render();
};
Na.prototype.disableMarkerButtons = function() {
  this._disableMarkerButtons = !0, this.render();
};
Na.prototype.enableMarkerButtons = function() {
  this._disableMarkerButtons = !1, this.render();
};
Na.prototype.addMarkerEventHandler = function(a, e) {
  var t = document.getElementById(this.output), i = t.getElementsByClassName("js-assessment-results__mark-" + a)[0];
  i.addEventListener("click", this.markAssessment.bind(this, a, e));
};
Na.prototype.render = function() {
  this.renderIndividualRatings(), this.renderOverallRating();
};
Na.prototype.bindMarkButtons = function(a) {
  (0, Bs.forEach)(a, (function(e) {
    e.hasOwnProperty("marker") && this.addMarkerEventHandler(e.identifier, e.marker);
  }).bind(this));
};
Na.prototype.removeAllMarks = function() {
  var a = this.assessor.getSpecificMarker();
  a(this.assessor.getPaper(), []);
};
Na.prototype.renderIndividualRatings = function() {
  var a = document.getElementById(this.output), e = this.getIndividualRatings();
  a.innerHTML = (0, Oct.assessmentPresenterResult)({
    scores: e,
    i18n: {
      disabledMarkText: this.i18n.dgettext("js-text-analysis", "Marks are disabled in current view"),
      markInText: this.i18n.dgettext("js-text-analysis", "Mark this result in the text"),
      removeMarksInText: this.i18n.dgettext("js-text-analysis", "Remove marks in the text")
    },
    activeMarker: this._activeMarker,
    markerButtonsDisabled: this._disableMarkerButtons
  }), this.bindMarkButtons(e);
};
Na.prototype.renderOverallRating = function() {
  var a = this.getOverallRating(this.assessor.calculateOverallScore()), e = document.getElementById(this.overall);
  e && (e.className = "overallScore " + this.getIndicatorColorClass(a.rating));
};
$_.default = Na;
Object.defineProperty(IN, "__esModule", {
  value: !0
});
var Wct = Ip, FN = mt(Wct), ba = I, Fct = vs, gf = mt(Fct), Dct = lR, Bct = mt(Dct), Nct = Bd, Uct = mt(Nct), Hct = Vc, Vct = mt(Hct), Kct = Nd, Gct = mt(Kct), Yct = Np, Zct = mt(Yct), Xct = Bp, Jct = mt(Xct), Qct = kd, aut = mt(Qct), eut = $_, dR = mt(eut), tut = Lp, iut = mt(tut), nut = Hd, rut = mt(nut), sut = $u, out = Su, dut = mt(out);
function mt(a) {
  return a && a.__esModule ? a : { default: a };
}
const lut = new Vct.default();
var cut = 800, DN = {
  callbacks: {
    bindElementEvents: function() {
    },
    updateSnippetValues: function() {
    },
    saveScores: function() {
    },
    saveContentScore: function() {
    },
    updatedContentResults: function() {
    },
    updatedKeywordsResults: function() {
    }
  },
  sampleText: {
    baseUrl: "example.org/",
    snippetCite: "example-post/",
    title: "This is an example title - edit by clicking here",
    keyword: "Choose a focus keyword",
    meta: "Modify your meta description by editing it right here",
    text: "Start writing your text!"
  },
  queue: ["wordCount", "keywordDensity", "subHeadings", "stopwords", "fleschReading", "linkCount", "imageCount", "urlKeyword", "urlLength", "metaDescription", "pageTitleKeyword", "pageTitleWidth", "firstParagraph", "'keywordDoubles"],
  typeDelay: 3e3,
  typeDelayStep: 1500,
  maxTypeDelay: 5e3,
  dynamicDelay: !0,
  locale: "en_US",
  translations: {
    domain: "js-text-analysis",
    // eslint-disable-next-line camelcase
    locale_data: {
      "js-text-analysis": {
        "": {}
      }
    }
  },
  replaceTarget: [],
  resetTarget: [],
  elementTarget: [],
  marker: function() {
  },
  keywordAnalysisActive: !0,
  contentAnalysisActive: !0,
  hasSnippetPreview: !0,
  debounceRefresh: !0
};
function BN() {
  var a = document.getElementById(this.config.targets.snippet);
  return new FN.default({
    analyzerApp: this,
    targetElement: a,
    callbacks: {
      saveSnippetData: this.config.callbacks.saveSnippetData
    }
  });
}
function NN(a) {
  return !(0, ba.isUndefined)(a) && FN.default.prototype.isPrototypeOf(a);
}
function uut(a) {
  if (!(0, ba.isObject)(a.callbacks.getData))
    throw new gf.default("The app requires an object with a getdata callback.");
  if (!(0, ba.isObject)(a.targets))
    throw new gf.default("`targets` is a required App argument, `targets` is not an object.");
  if (a.hasSnippetPreview && !NN(a.snippetPreview) && !(0, ba.isString)(a.targets.snippet))
    throw new gf.default("A snippet preview is required. When no SnippetPreview object isn't passed to the App, the `targets.snippet` is a required App argument. `targets.snippet` is not a string.");
}
var ca = function(e) {
  (0, ba.isObject)(e) || (e = {}), (0, ba.defaultsDeep)(e, DN), uut(e), this.config = e, e.debouncedRefresh === !0 && (this.refresh = (0, ba.debounce)(this.refresh.bind(this), cut)), this._pureRefresh = (0, ba.throttle)(this._pureRefresh.bind(this), this.config.typeDelay), this.callbacks = this.config.callbacks, this.i18n = this.constructI18n(this.config.translations), this.initializeAssessors(e), this.pluggable = new iut.default(this), this.getData(), this.defaultOutputElement = this.getDefaultOutputElement(e), this.defaultOutputElement !== "" && this.showLoadingDialog(), NN(e.snippetPreview) ? (this.snippetPreview = e.snippetPreview, this.snippetPreview.refObj !== this && (this.snippetPreview.refObj = this, this.snippetPreview._i18n = this.i18n)) : e.hasSnippetPreview && (this.snippetPreview = BN.call(this)), this._assessorOptions = {
    useCornerStone: !1,
    useKeywordDistribution: !1
  }, this.initSnippetPreview(), this.initAssessorPresenters();
};
ca.prototype.getDefaultOutputElement = function(a) {
  return a.keywordAnalysisActive ? a.targets.output : a.contentAnalysisActive ? a.targets.contentOutput : "";
};
ca.prototype.changeAssessorOptions = function(a) {
  this._assessorOptions = (0, ba.merge)(this._assessorOptions, a), this.seoAssessor = this.getSeoAssessor(), this.contentAssessor = this.getContentAssessor(), this.initAssessorPresenters(), this.refresh();
};
ca.prototype.getSeoAssessor = function() {
  var a = this._assessorOptions;
  const e = a.useCornerStone, t = a.useKeywordDistribution, i = e ? this.cornerStoneSeoAssessor : this.defaultSeoAssessor;
  return t && (0, ba.isUndefined)(i.getAssessment("keyphraseDistribution")) && i.addAssessment("keyphraseDistribution", lut), i;
};
ca.prototype.getContentAssessor = function() {
  return this._assessorOptions.useCornerStone ? this.cornerStoneContentAssessor : this.defaultContentAssessor;
};
ca.prototype.initializeAssessors = function(a) {
  this.initializeSEOAssessor(a), this.initializeContentAssessor(a);
};
ca.prototype.initializeSEOAssessor = function(a) {
  a.keywordAnalysisActive && (this.defaultSeoAssessor = new Uct.default(this.i18n, { marker: this.config.marker }), this.cornerStoneSeoAssessor = new Zct.default(this.i18n, { marker: this.config.marker }), (0, ba.isUndefined)(a.seoAssessor) ? this.seoAssessor = this.defaultSeoAssessor : this.seoAssessor = a.seoAssessor);
};
ca.prototype.initializeContentAssessor = function(a) {
  a.contentAnalysisActive && (this.defaultContentAssessor = new Gct.default(this.i18n, { marker: this.config.marker, locale: this.config.locale }), this.cornerStoneContentAssessor = new Jct.default(this.i18n, { marker: this.config.marker, locale: this.config.locale }), (0, ba.isUndefined)(a._contentAssessor) ? this.contentAssessor = this.defaultContentAssessor : this.contentAssessor = a._contentAssessor);
};
ca.prototype.extendConfig = function(a) {
  return a.sampleText = this.extendSampleText(a.sampleText), a.locale = a.locale || "en_US", a;
};
ca.prototype.extendSampleText = function(a) {
  var e = DN.sampleText;
  if ((0, ba.isUndefined)(a))
    return e;
  for (var t in a)
    (0, ba.isUndefined)(a[t]) && (a[t] = e[t]);
  return a;
};
ca.prototype.constructI18n = function(a) {
  var e = {
    domain: "js-text-analysis",
    // eslint-disable-next-line camelcase
    locale_data: {
      "js-text-analysis": {
        "": {}
      }
    }
  };
  return a = a || e, new Bct.default(a);
};
ca.prototype.registerCustomDataCallback = function(a) {
  this.callbacks.custom || (this.callbacks.custom = []), (0, ba.isFunction)(a) && this.callbacks.custom.push(a);
};
ca.prototype.getData = function() {
  if (this.rawData = this.callbacks.getData(), (0, ba.isArray)(this.callbacks.custom) && this.callbacks.custom.forEach((e) => {
    const t = e();
    this.rawData = (0, ba.merge)(this.rawData, t);
  }), this.hasSnippetPreview()) {
    var a = this.snippetPreview.getAnalyzerData();
    this.rawData.metaTitle = a.title, this.rawData.url = a.url, this.rawData.meta = a.metaDesc;
  }
  this.pluggable.loaded && (this.rawData.metaTitle = this.pluggable._applyModifications("data_page_title", this.rawData.metaTitle), this.rawData.meta = this.pluggable._applyModifications("data_meta_desc", this.rawData.meta)), this.rawData.titleWidth = (0, sut.measureTextWidth)(this.rawData.metaTitle), this.rawData.locale = this.config.locale;
};
ca.prototype.refresh = function() {
  this.pluggable.loaded && this._pureRefresh();
};
ca.prototype._pureRefresh = function() {
  this.getData(), this.runAnalyzer();
};
ca.prototype.hasSnippetPreview = function() {
  return this.snippetPreview !== null && !(0, ba.isUndefined)(this.snippetPreview);
};
ca.prototype.initSnippetPreview = function() {
  this.hasSnippetPreview() && (this.snippetPreview.renderTemplate(), this.snippetPreview.callRegisteredEventBinder(), this.snippetPreview.bindEvents(), this.snippetPreview.init());
};
ca.prototype.initAssessorPresenters = function() {
  (0, ba.isUndefined)(this.config.targets.output) || (this.seoAssessorPresenter = new dR.default({
    targets: {
      output: this.config.targets.output
    },
    assessor: this.seoAssessor,
    i18n: this.i18n
  })), (0, ba.isUndefined)(this.config.targets.contentOutput) || (this.contentAssessorPresenter = new dR.default({
    targets: {
      output: this.config.targets.contentOutput
    },
    assessor: this.contentAssessor,
    i18n: this.i18n
  }));
};
ca.prototype.bindInputEvent = function() {
  for (var a = 0; a < this.config.elementTarget.length; a++) {
    var e = document.getElementById(this.config.elementTarget[a]);
    e.addEventListener("input", this.refresh.bind(this));
  }
};
ca.prototype.reloadSnippetText = function() {
  this.hasSnippetPreview() && this.snippetPreview.reRender();
};
ca.prototype.startTime = function() {
  this.startTimestamp = (/* @__PURE__ */ new Date()).getTime();
};
ca.prototype.endTime = function() {
  this.endTimestamp = (/* @__PURE__ */ new Date()).getTime(), this.endTimestamp - this.startTimestamp > this.config.typeDelay && this.config.typeDelay < this.config.maxTypeDelay - this.config.typeDelayStep && (this.config.typeDelay += this.config.typeDelayStep);
};
ca.prototype.runAnalyzer = function() {
  if (this.pluggable.loaded === !1)
    return;
  this.config.dynamicDelay && this.startTime(), this.analyzerData = this.modifyData(this.rawData), this.hasSnippetPreview() && this.snippetPreview.refresh();
  let a = this.analyzerData.text;
  a = (0, dut.default)(a);
  let e = this.analyzerData.titleWidth;
  this.hasSnippetPreview() && (e = this.snippetPreview.getTitleWidth()), this.paper = new rut.default(a, {
    keyword: this.analyzerData.keyword,
    synonyms: this.analyzerData.synonyms,
    description: this.analyzerData.meta,
    url: this.analyzerData.url,
    title: this.analyzerData.metaTitle,
    titleWidth: e,
    locale: this.config.locale,
    permalink: this.analyzerData.permalink
  }), (0, ba.isUndefined)(this.researcher) ? this.researcher = new aut.default(this.paper) : this.researcher.setPaper(this.paper), this.runKeywordAnalysis(), this.runContentAnalysis(), this._renderAnalysisResults(), this.config.dynamicDelay && this.endTime(), this.hasSnippetPreview() && this.snippetPreview.reRender();
};
ca.prototype.runKeywordAnalysis = function() {
  if (this.config.keywordAnalysisActive) {
    this.seoAssessor.assess(this.paper);
    const a = this.seoAssessor.calculateOverallScore();
    (0, ba.isUndefined)(this.callbacks.updatedKeywordsResults) || this.callbacks.updatedKeywordsResults(this.seoAssessor.results, a), (0, ba.isUndefined)(this.callbacks.saveScores) || this.callbacks.saveScores(a, this.seoAssessorPresenter);
  }
};
ca.prototype.runContentAnalysis = function() {
  if (this.config.contentAnalysisActive) {
    this.contentAssessor.assess(this.paper);
    const a = this.contentAssessor.calculateOverallScore();
    (0, ba.isUndefined)(this.callbacks.updatedContentResults) || this.callbacks.updatedContentResults(this.contentAssessor.results, a), (0, ba.isUndefined)(this.callbacks.saveContentScore) || this.callbacks.saveContentScore(a, this.contentAssessorPresenter);
  }
};
ca.prototype.modifyData = function(a) {
  return a = JSON.parse(JSON.stringify(a)), a.text = this.pluggable._applyModifications("content", a.text), a.metaTitle = this.pluggable._applyModifications("title", a.metaTitle), a;
};
ca.prototype.pluginsLoaded = function() {
  this.removeLoadingDialog(), this.refresh();
};
ca.prototype.showLoadingDialog = function() {
  var a = document.getElementById(this.defaultOutputElement);
  if (this.defaultOutputElement !== "" && !(0, ba.isEmpty)(a)) {
    var e = document.createElement("div");
    e.className = "YoastSEO_msg", e.id = "YoastSEO-plugin-loading", document.getElementById(this.defaultOutputElement).appendChild(e);
  }
};
ca.prototype.updateLoadingDialog = function(a) {
  var e = document.getElementById(this.defaultOutputElement);
  if (!(this.defaultOutputElement === "" || (0, ba.isEmpty)(e))) {
    var t = document.getElementById("YoastSEO-plugin-loading");
    t.textContent = "", (0, ba.forEach)(a, function(i, n) {
      t.innerHTML += "<span class=left>" + n + "</span><span class=right " + i.status + ">" + i.status + "</span><br />";
    }), t.innerHTML += "<span class=bufferbar></span>";
  }
};
ca.prototype.removeLoadingDialog = function() {
  var a = document.getElementById(this.defaultOutputElement), e = document.getElementById("YoastSEO-plugin-loading");
  this.defaultOutputElement !== "" && !(0, ba.isEmpty)(a) && !(0, ba.isEmpty)(e) && document.getElementById(this.defaultOutputElement).removeChild(document.getElementById("YoastSEO-plugin-loading"));
};
ca.prototype.registerPlugin = function(a, e) {
  return this.pluggable._registerPlugin(a, e);
};
ca.prototype.pluginReady = function(a) {
  return this.pluggable._ready(a);
};
ca.prototype.pluginReloaded = function(a) {
  return this.pluggable._reloaded(a);
};
ca.prototype.registerModification = function(a, e, t, i) {
  return this.pluggable._registerModification(a, e, t, i);
};
ca.prototype.registerAssessment = function(a, e, t) {
  if (!(0, ba.isUndefined)(this.seoAssessor))
    return this.pluggable._registerAssessment(this.defaultSeoAssessor, a, e, t) && this.pluggable._registerAssessment(this.cornerStoneSeoAssessor, a, e, t);
};
ca.prototype.disableMarkers = function() {
  (0, ba.isUndefined)(this.seoAssessorPresenter) || this.seoAssessorPresenter.disableMarker(), (0, ba.isUndefined)(this.contentAssessorPresenter) || this.contentAssessorPresenter.disableMarker();
};
ca.prototype._renderAnalysisResults = function() {
  this.config.contentAnalysisActive && !(0, ba.isUndefined)(this.contentAssessorPresenter) && this.contentAssessorPresenter.renderIndividualRatings(), this.config.keywordAnalysisActive && !(0, ba.isUndefined)(this.seoAssessorPresenter) && (this.seoAssessorPresenter.setKeyword(this.paper.getKeyword()), this.seoAssessorPresenter.render());
};
ca.prototype.analyzeTimer = function() {
  this.refresh();
};
ca.prototype.registerTest = function() {
  console.error("This function is deprecated, please use registerAssessment");
};
ca.prototype.createSnippetPreview = function() {
  this.snippetPreview = BN.call(this), this.initSnippetPreview();
};
ca.prototype.switchAssessors = function(a) {
  console.warn("Switch assessor is deprecated since YoastSEO.js version 1.35.0"), this.changeAssessorOptions({
    useCornerStone: a
  });
};
var put = IN.default = ca;
const yut = {
  App: put,
  Assessor: Yit,
  ContentAssessor: frt,
  TaxonomyAssessor: Brt,
  Pluggable: Hrt,
  Researcher: Lit,
  SnippetPreview: wst,
  Paper: vst,
  AssessmentResult: ZY,
  AnalysisWebWorker: CN,
  AnalysisWorkerWrapper: LN,
  createWorker: MN,
  assessments: vpa,
  bundledPlugins: Oga,
  config: VTe,
  helpers: Iga,
  markers: Bga,
  string: ITe,
  interpreters: BTe
};
export {
  CN as AnalysisWebWorker,
  LN as AnalysisWorkerWrapper,
  put as App,
  mut as Assessment,
  ZY as AssessmentResult,
  Yit as Assessor,
  frt as ContentAssessor,
  vst as Paper,
  Hrt as Pluggable,
  Lit as Researcher,
  zut as SeoAssessor,
  wst as SnippetPreview,
  Brt as TaxonomyAssessor,
  vpa as assessments,
  Oga as bundledPlugins,
  VTe as config,
  MN as createWorker,
  yut as default,
  Iga as helpers,
  BTe as interpreters,
  Bga as markers,
  ITe as string
};
